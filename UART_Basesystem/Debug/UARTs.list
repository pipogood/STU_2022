
UARTs.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000baa0  08000198  08000198  00010198  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000020  0800bc38  0800bc38  0001bc38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800bc58  0800bc58  000201a4  2**0
                  CONTENTS
  4 .ARM          00000008  0800bc58  0800bc58  0001bc58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800bc60  0800bc60  000201a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800bc60  0800bc60  0001bc60  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800bc64  0800bc64  0001bc64  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001a4  20000000  0800bc68  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000670  200001a8  0800be0c  000201a8  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20000818  0800be0c  00020818  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201a4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00013bf5  00000000  00000000  000201d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002185  00000000  00000000  00033dc9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001218  00000000  00000000  00035f50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001178  00000000  00000000  00037168  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000170e6  00000000  00000000  000382e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00014558  00000000  00000000  0004f3c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000932c1  00000000  00000000  0006391e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000f6bdf  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005118  00000000  00000000  000f6c30  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	200001a8 	.word	0x200001a8
 80001b4:	00000000 	.word	0x00000000
 80001b8:	0800bc20 	.word	0x0800bc20

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	200001ac 	.word	0x200001ac
 80001d4:	0800bc20 	.word	0x0800bc20

080001d8 <__aeabi_drsub>:
 80001d8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001dc:	e002      	b.n	80001e4 <__adddf3>
 80001de:	bf00      	nop

080001e0 <__aeabi_dsub>:
 80001e0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001e4 <__adddf3>:
 80001e4:	b530      	push	{r4, r5, lr}
 80001e6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001ea:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001ee:	ea94 0f05 	teq	r4, r5
 80001f2:	bf08      	it	eq
 80001f4:	ea90 0f02 	teqeq	r0, r2
 80001f8:	bf1f      	itttt	ne
 80001fa:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001fe:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000202:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000206:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800020a:	f000 80e2 	beq.w	80003d2 <__adddf3+0x1ee>
 800020e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000212:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000216:	bfb8      	it	lt
 8000218:	426d      	neglt	r5, r5
 800021a:	dd0c      	ble.n	8000236 <__adddf3+0x52>
 800021c:	442c      	add	r4, r5
 800021e:	ea80 0202 	eor.w	r2, r0, r2
 8000222:	ea81 0303 	eor.w	r3, r1, r3
 8000226:	ea82 0000 	eor.w	r0, r2, r0
 800022a:	ea83 0101 	eor.w	r1, r3, r1
 800022e:	ea80 0202 	eor.w	r2, r0, r2
 8000232:	ea81 0303 	eor.w	r3, r1, r3
 8000236:	2d36      	cmp	r5, #54	; 0x36
 8000238:	bf88      	it	hi
 800023a:	bd30      	pophi	{r4, r5, pc}
 800023c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000240:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000244:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000248:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800024c:	d002      	beq.n	8000254 <__adddf3+0x70>
 800024e:	4240      	negs	r0, r0
 8000250:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000254:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000258:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800025c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000260:	d002      	beq.n	8000268 <__adddf3+0x84>
 8000262:	4252      	negs	r2, r2
 8000264:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000268:	ea94 0f05 	teq	r4, r5
 800026c:	f000 80a7 	beq.w	80003be <__adddf3+0x1da>
 8000270:	f1a4 0401 	sub.w	r4, r4, #1
 8000274:	f1d5 0e20 	rsbs	lr, r5, #32
 8000278:	db0d      	blt.n	8000296 <__adddf3+0xb2>
 800027a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800027e:	fa22 f205 	lsr.w	r2, r2, r5
 8000282:	1880      	adds	r0, r0, r2
 8000284:	f141 0100 	adc.w	r1, r1, #0
 8000288:	fa03 f20e 	lsl.w	r2, r3, lr
 800028c:	1880      	adds	r0, r0, r2
 800028e:	fa43 f305 	asr.w	r3, r3, r5
 8000292:	4159      	adcs	r1, r3
 8000294:	e00e      	b.n	80002b4 <__adddf3+0xd0>
 8000296:	f1a5 0520 	sub.w	r5, r5, #32
 800029a:	f10e 0e20 	add.w	lr, lr, #32
 800029e:	2a01      	cmp	r2, #1
 80002a0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002a4:	bf28      	it	cs
 80002a6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002aa:	fa43 f305 	asr.w	r3, r3, r5
 80002ae:	18c0      	adds	r0, r0, r3
 80002b0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002b8:	d507      	bpl.n	80002ca <__adddf3+0xe6>
 80002ba:	f04f 0e00 	mov.w	lr, #0
 80002be:	f1dc 0c00 	rsbs	ip, ip, #0
 80002c2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002c6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002ca:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80002ce:	d31b      	bcc.n	8000308 <__adddf3+0x124>
 80002d0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002d4:	d30c      	bcc.n	80002f0 <__adddf3+0x10c>
 80002d6:	0849      	lsrs	r1, r1, #1
 80002d8:	ea5f 0030 	movs.w	r0, r0, rrx
 80002dc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002e0:	f104 0401 	add.w	r4, r4, #1
 80002e4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002e8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002ec:	f080 809a 	bcs.w	8000424 <__adddf3+0x240>
 80002f0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002f4:	bf08      	it	eq
 80002f6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002fa:	f150 0000 	adcs.w	r0, r0, #0
 80002fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000302:	ea41 0105 	orr.w	r1, r1, r5
 8000306:	bd30      	pop	{r4, r5, pc}
 8000308:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800030c:	4140      	adcs	r0, r0
 800030e:	eb41 0101 	adc.w	r1, r1, r1
 8000312:	3c01      	subs	r4, #1
 8000314:	bf28      	it	cs
 8000316:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800031a:	d2e9      	bcs.n	80002f0 <__adddf3+0x10c>
 800031c:	f091 0f00 	teq	r1, #0
 8000320:	bf04      	itt	eq
 8000322:	4601      	moveq	r1, r0
 8000324:	2000      	moveq	r0, #0
 8000326:	fab1 f381 	clz	r3, r1
 800032a:	bf08      	it	eq
 800032c:	3320      	addeq	r3, #32
 800032e:	f1a3 030b 	sub.w	r3, r3, #11
 8000332:	f1b3 0220 	subs.w	r2, r3, #32
 8000336:	da0c      	bge.n	8000352 <__adddf3+0x16e>
 8000338:	320c      	adds	r2, #12
 800033a:	dd08      	ble.n	800034e <__adddf3+0x16a>
 800033c:	f102 0c14 	add.w	ip, r2, #20
 8000340:	f1c2 020c 	rsb	r2, r2, #12
 8000344:	fa01 f00c 	lsl.w	r0, r1, ip
 8000348:	fa21 f102 	lsr.w	r1, r1, r2
 800034c:	e00c      	b.n	8000368 <__adddf3+0x184>
 800034e:	f102 0214 	add.w	r2, r2, #20
 8000352:	bfd8      	it	le
 8000354:	f1c2 0c20 	rsble	ip, r2, #32
 8000358:	fa01 f102 	lsl.w	r1, r1, r2
 800035c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000360:	bfdc      	itt	le
 8000362:	ea41 010c 	orrle.w	r1, r1, ip
 8000366:	4090      	lslle	r0, r2
 8000368:	1ae4      	subs	r4, r4, r3
 800036a:	bfa2      	ittt	ge
 800036c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000370:	4329      	orrge	r1, r5
 8000372:	bd30      	popge	{r4, r5, pc}
 8000374:	ea6f 0404 	mvn.w	r4, r4
 8000378:	3c1f      	subs	r4, #31
 800037a:	da1c      	bge.n	80003b6 <__adddf3+0x1d2>
 800037c:	340c      	adds	r4, #12
 800037e:	dc0e      	bgt.n	800039e <__adddf3+0x1ba>
 8000380:	f104 0414 	add.w	r4, r4, #20
 8000384:	f1c4 0220 	rsb	r2, r4, #32
 8000388:	fa20 f004 	lsr.w	r0, r0, r4
 800038c:	fa01 f302 	lsl.w	r3, r1, r2
 8000390:	ea40 0003 	orr.w	r0, r0, r3
 8000394:	fa21 f304 	lsr.w	r3, r1, r4
 8000398:	ea45 0103 	orr.w	r1, r5, r3
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	f1c4 040c 	rsb	r4, r4, #12
 80003a2:	f1c4 0220 	rsb	r2, r4, #32
 80003a6:	fa20 f002 	lsr.w	r0, r0, r2
 80003aa:	fa01 f304 	lsl.w	r3, r1, r4
 80003ae:	ea40 0003 	orr.w	r0, r0, r3
 80003b2:	4629      	mov	r1, r5
 80003b4:	bd30      	pop	{r4, r5, pc}
 80003b6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ba:	4629      	mov	r1, r5
 80003bc:	bd30      	pop	{r4, r5, pc}
 80003be:	f094 0f00 	teq	r4, #0
 80003c2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80003c6:	bf06      	itte	eq
 80003c8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80003cc:	3401      	addeq	r4, #1
 80003ce:	3d01      	subne	r5, #1
 80003d0:	e74e      	b.n	8000270 <__adddf3+0x8c>
 80003d2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003d6:	bf18      	it	ne
 80003d8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003dc:	d029      	beq.n	8000432 <__adddf3+0x24e>
 80003de:	ea94 0f05 	teq	r4, r5
 80003e2:	bf08      	it	eq
 80003e4:	ea90 0f02 	teqeq	r0, r2
 80003e8:	d005      	beq.n	80003f6 <__adddf3+0x212>
 80003ea:	ea54 0c00 	orrs.w	ip, r4, r0
 80003ee:	bf04      	itt	eq
 80003f0:	4619      	moveq	r1, r3
 80003f2:	4610      	moveq	r0, r2
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	ea91 0f03 	teq	r1, r3
 80003fa:	bf1e      	ittt	ne
 80003fc:	2100      	movne	r1, #0
 80003fe:	2000      	movne	r0, #0
 8000400:	bd30      	popne	{r4, r5, pc}
 8000402:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000406:	d105      	bne.n	8000414 <__adddf3+0x230>
 8000408:	0040      	lsls	r0, r0, #1
 800040a:	4149      	adcs	r1, r1
 800040c:	bf28      	it	cs
 800040e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000412:	bd30      	pop	{r4, r5, pc}
 8000414:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000418:	bf3c      	itt	cc
 800041a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800041e:	bd30      	popcc	{r4, r5, pc}
 8000420:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000424:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000428:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800042c:	f04f 0000 	mov.w	r0, #0
 8000430:	bd30      	pop	{r4, r5, pc}
 8000432:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000436:	bf1a      	itte	ne
 8000438:	4619      	movne	r1, r3
 800043a:	4610      	movne	r0, r2
 800043c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000440:	bf1c      	itt	ne
 8000442:	460b      	movne	r3, r1
 8000444:	4602      	movne	r2, r0
 8000446:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800044a:	bf06      	itte	eq
 800044c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000450:	ea91 0f03 	teqeq	r1, r3
 8000454:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000458:	bd30      	pop	{r4, r5, pc}
 800045a:	bf00      	nop

0800045c <__aeabi_ui2d>:
 800045c:	f090 0f00 	teq	r0, #0
 8000460:	bf04      	itt	eq
 8000462:	2100      	moveq	r1, #0
 8000464:	4770      	bxeq	lr
 8000466:	b530      	push	{r4, r5, lr}
 8000468:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800046c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000470:	f04f 0500 	mov.w	r5, #0
 8000474:	f04f 0100 	mov.w	r1, #0
 8000478:	e750      	b.n	800031c <__adddf3+0x138>
 800047a:	bf00      	nop

0800047c <__aeabi_i2d>:
 800047c:	f090 0f00 	teq	r0, #0
 8000480:	bf04      	itt	eq
 8000482:	2100      	moveq	r1, #0
 8000484:	4770      	bxeq	lr
 8000486:	b530      	push	{r4, r5, lr}
 8000488:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800048c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000490:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000494:	bf48      	it	mi
 8000496:	4240      	negmi	r0, r0
 8000498:	f04f 0100 	mov.w	r1, #0
 800049c:	e73e      	b.n	800031c <__adddf3+0x138>
 800049e:	bf00      	nop

080004a0 <__aeabi_f2d>:
 80004a0:	0042      	lsls	r2, r0, #1
 80004a2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004a6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004aa:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004ae:	bf1f      	itttt	ne
 80004b0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004b4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004b8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004bc:	4770      	bxne	lr
 80004be:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80004c2:	bf08      	it	eq
 80004c4:	4770      	bxeq	lr
 80004c6:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80004ca:	bf04      	itt	eq
 80004cc:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80004d0:	4770      	bxeq	lr
 80004d2:	b530      	push	{r4, r5, lr}
 80004d4:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004e0:	e71c      	b.n	800031c <__adddf3+0x138>
 80004e2:	bf00      	nop

080004e4 <__aeabi_ul2d>:
 80004e4:	ea50 0201 	orrs.w	r2, r0, r1
 80004e8:	bf08      	it	eq
 80004ea:	4770      	bxeq	lr
 80004ec:	b530      	push	{r4, r5, lr}
 80004ee:	f04f 0500 	mov.w	r5, #0
 80004f2:	e00a      	b.n	800050a <__aeabi_l2d+0x16>

080004f4 <__aeabi_l2d>:
 80004f4:	ea50 0201 	orrs.w	r2, r0, r1
 80004f8:	bf08      	it	eq
 80004fa:	4770      	bxeq	lr
 80004fc:	b530      	push	{r4, r5, lr}
 80004fe:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000502:	d502      	bpl.n	800050a <__aeabi_l2d+0x16>
 8000504:	4240      	negs	r0, r0
 8000506:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800050a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800050e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000512:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000516:	f43f aed8 	beq.w	80002ca <__adddf3+0xe6>
 800051a:	f04f 0203 	mov.w	r2, #3
 800051e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000522:	bf18      	it	ne
 8000524:	3203      	addne	r2, #3
 8000526:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800052a:	bf18      	it	ne
 800052c:	3203      	addne	r2, #3
 800052e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000532:	f1c2 0320 	rsb	r3, r2, #32
 8000536:	fa00 fc03 	lsl.w	ip, r0, r3
 800053a:	fa20 f002 	lsr.w	r0, r0, r2
 800053e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000542:	ea40 000e 	orr.w	r0, r0, lr
 8000546:	fa21 f102 	lsr.w	r1, r1, r2
 800054a:	4414      	add	r4, r2
 800054c:	e6bd      	b.n	80002ca <__adddf3+0xe6>
 800054e:	bf00      	nop

08000550 <__aeabi_dmul>:
 8000550:	b570      	push	{r4, r5, r6, lr}
 8000552:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000556:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800055a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800055e:	bf1d      	ittte	ne
 8000560:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000564:	ea94 0f0c 	teqne	r4, ip
 8000568:	ea95 0f0c 	teqne	r5, ip
 800056c:	f000 f8de 	bleq	800072c <__aeabi_dmul+0x1dc>
 8000570:	442c      	add	r4, r5
 8000572:	ea81 0603 	eor.w	r6, r1, r3
 8000576:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800057a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800057e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000582:	bf18      	it	ne
 8000584:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000588:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800058c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000590:	d038      	beq.n	8000604 <__aeabi_dmul+0xb4>
 8000592:	fba0 ce02 	umull	ip, lr, r0, r2
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800059e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005a6:	f04f 0600 	mov.w	r6, #0
 80005aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005ae:	f09c 0f00 	teq	ip, #0
 80005b2:	bf18      	it	ne
 80005b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80005c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80005c4:	d204      	bcs.n	80005d0 <__aeabi_dmul+0x80>
 80005c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005ca:	416d      	adcs	r5, r5
 80005cc:	eb46 0606 	adc.w	r6, r6, r6
 80005d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80005e8:	bf88      	it	hi
 80005ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80005ee:	d81e      	bhi.n	800062e <__aeabi_dmul+0xde>
 80005f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80005f4:	bf08      	it	eq
 80005f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005fa:	f150 0000 	adcs.w	r0, r0, #0
 80005fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000602:	bd70      	pop	{r4, r5, r6, pc}
 8000604:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000608:	ea46 0101 	orr.w	r1, r6, r1
 800060c:	ea40 0002 	orr.w	r0, r0, r2
 8000610:	ea81 0103 	eor.w	r1, r1, r3
 8000614:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000618:	bfc2      	ittt	gt
 800061a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800061e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000622:	bd70      	popgt	{r4, r5, r6, pc}
 8000624:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000628:	f04f 0e00 	mov.w	lr, #0
 800062c:	3c01      	subs	r4, #1
 800062e:	f300 80ab 	bgt.w	8000788 <__aeabi_dmul+0x238>
 8000632:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000636:	bfde      	ittt	le
 8000638:	2000      	movle	r0, #0
 800063a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800063e:	bd70      	pople	{r4, r5, r6, pc}
 8000640:	f1c4 0400 	rsb	r4, r4, #0
 8000644:	3c20      	subs	r4, #32
 8000646:	da35      	bge.n	80006b4 <__aeabi_dmul+0x164>
 8000648:	340c      	adds	r4, #12
 800064a:	dc1b      	bgt.n	8000684 <__aeabi_dmul+0x134>
 800064c:	f104 0414 	add.w	r4, r4, #20
 8000650:	f1c4 0520 	rsb	r5, r4, #32
 8000654:	fa00 f305 	lsl.w	r3, r0, r5
 8000658:	fa20 f004 	lsr.w	r0, r0, r4
 800065c:	fa01 f205 	lsl.w	r2, r1, r5
 8000660:	ea40 0002 	orr.w	r0, r0, r2
 8000664:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000668:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800066c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000670:	fa21 f604 	lsr.w	r6, r1, r4
 8000674:	eb42 0106 	adc.w	r1, r2, r6
 8000678:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800067c:	bf08      	it	eq
 800067e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000682:	bd70      	pop	{r4, r5, r6, pc}
 8000684:	f1c4 040c 	rsb	r4, r4, #12
 8000688:	f1c4 0520 	rsb	r5, r4, #32
 800068c:	fa00 f304 	lsl.w	r3, r0, r4
 8000690:	fa20 f005 	lsr.w	r0, r0, r5
 8000694:	fa01 f204 	lsl.w	r2, r1, r4
 8000698:	ea40 0002 	orr.w	r0, r0, r2
 800069c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006a4:	f141 0100 	adc.w	r1, r1, #0
 80006a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ac:	bf08      	it	eq
 80006ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f1c4 0520 	rsb	r5, r4, #32
 80006b8:	fa00 f205 	lsl.w	r2, r0, r5
 80006bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80006c0:	fa20 f304 	lsr.w	r3, r0, r4
 80006c4:	fa01 f205 	lsl.w	r2, r1, r5
 80006c8:	ea43 0302 	orr.w	r3, r3, r2
 80006cc:	fa21 f004 	lsr.w	r0, r1, r4
 80006d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d4:	fa21 f204 	lsr.w	r2, r1, r4
 80006d8:	ea20 0002 	bic.w	r0, r0, r2
 80006dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006e4:	bf08      	it	eq
 80006e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f094 0f00 	teq	r4, #0
 80006f0:	d10f      	bne.n	8000712 <__aeabi_dmul+0x1c2>
 80006f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80006f6:	0040      	lsls	r0, r0, #1
 80006f8:	eb41 0101 	adc.w	r1, r1, r1
 80006fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000700:	bf08      	it	eq
 8000702:	3c01      	subeq	r4, #1
 8000704:	d0f7      	beq.n	80006f6 <__aeabi_dmul+0x1a6>
 8000706:	ea41 0106 	orr.w	r1, r1, r6
 800070a:	f095 0f00 	teq	r5, #0
 800070e:	bf18      	it	ne
 8000710:	4770      	bxne	lr
 8000712:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000716:	0052      	lsls	r2, r2, #1
 8000718:	eb43 0303 	adc.w	r3, r3, r3
 800071c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000720:	bf08      	it	eq
 8000722:	3d01      	subeq	r5, #1
 8000724:	d0f7      	beq.n	8000716 <__aeabi_dmul+0x1c6>
 8000726:	ea43 0306 	orr.w	r3, r3, r6
 800072a:	4770      	bx	lr
 800072c:	ea94 0f0c 	teq	r4, ip
 8000730:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000734:	bf18      	it	ne
 8000736:	ea95 0f0c 	teqne	r5, ip
 800073a:	d00c      	beq.n	8000756 <__aeabi_dmul+0x206>
 800073c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000740:	bf18      	it	ne
 8000742:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000746:	d1d1      	bne.n	80006ec <__aeabi_dmul+0x19c>
 8000748:	ea81 0103 	eor.w	r1, r1, r3
 800074c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000750:	f04f 0000 	mov.w	r0, #0
 8000754:	bd70      	pop	{r4, r5, r6, pc}
 8000756:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800075a:	bf06      	itte	eq
 800075c:	4610      	moveq	r0, r2
 800075e:	4619      	moveq	r1, r3
 8000760:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000764:	d019      	beq.n	800079a <__aeabi_dmul+0x24a>
 8000766:	ea94 0f0c 	teq	r4, ip
 800076a:	d102      	bne.n	8000772 <__aeabi_dmul+0x222>
 800076c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000770:	d113      	bne.n	800079a <__aeabi_dmul+0x24a>
 8000772:	ea95 0f0c 	teq	r5, ip
 8000776:	d105      	bne.n	8000784 <__aeabi_dmul+0x234>
 8000778:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800077c:	bf1c      	itt	ne
 800077e:	4610      	movne	r0, r2
 8000780:	4619      	movne	r1, r3
 8000782:	d10a      	bne.n	800079a <__aeabi_dmul+0x24a>
 8000784:	ea81 0103 	eor.w	r1, r1, r3
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000790:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000794:	f04f 0000 	mov.w	r0, #0
 8000798:	bd70      	pop	{r4, r5, r6, pc}
 800079a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800079e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007a2:	bd70      	pop	{r4, r5, r6, pc}

080007a4 <__aeabi_ddiv>:
 80007a4:	b570      	push	{r4, r5, r6, lr}
 80007a6:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007aa:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007ae:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007b2:	bf1d      	ittte	ne
 80007b4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007b8:	ea94 0f0c 	teqne	r4, ip
 80007bc:	ea95 0f0c 	teqne	r5, ip
 80007c0:	f000 f8a7 	bleq	8000912 <__aeabi_ddiv+0x16e>
 80007c4:	eba4 0405 	sub.w	r4, r4, r5
 80007c8:	ea81 0e03 	eor.w	lr, r1, r3
 80007cc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80007d0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007d4:	f000 8088 	beq.w	80008e8 <__aeabi_ddiv+0x144>
 80007d8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007dc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80007e0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007e4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007e8:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007ec:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007f0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007f4:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007f8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007fc:	429d      	cmp	r5, r3
 80007fe:	bf08      	it	eq
 8000800:	4296      	cmpeq	r6, r2
 8000802:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000806:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800080a:	d202      	bcs.n	8000812 <__aeabi_ddiv+0x6e>
 800080c:	085b      	lsrs	r3, r3, #1
 800080e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000812:	1ab6      	subs	r6, r6, r2
 8000814:	eb65 0503 	sbc.w	r5, r5, r3
 8000818:	085b      	lsrs	r3, r3, #1
 800081a:	ea4f 0232 	mov.w	r2, r2, rrx
 800081e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000822:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000826:	ebb6 0e02 	subs.w	lr, r6, r2
 800082a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800082e:	bf22      	ittt	cs
 8000830:	1ab6      	subcs	r6, r6, r2
 8000832:	4675      	movcs	r5, lr
 8000834:	ea40 000c 	orrcs.w	r0, r0, ip
 8000838:	085b      	lsrs	r3, r3, #1
 800083a:	ea4f 0232 	mov.w	r2, r2, rrx
 800083e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000842:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000846:	bf22      	ittt	cs
 8000848:	1ab6      	subcs	r6, r6, r2
 800084a:	4675      	movcs	r5, lr
 800084c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000850:	085b      	lsrs	r3, r3, #1
 8000852:	ea4f 0232 	mov.w	r2, r2, rrx
 8000856:	ebb6 0e02 	subs.w	lr, r6, r2
 800085a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800085e:	bf22      	ittt	cs
 8000860:	1ab6      	subcs	r6, r6, r2
 8000862:	4675      	movcs	r5, lr
 8000864:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000880:	ea55 0e06 	orrs.w	lr, r5, r6
 8000884:	d018      	beq.n	80008b8 <__aeabi_ddiv+0x114>
 8000886:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800088a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800088e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000892:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000896:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800089a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800089e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008a2:	d1c0      	bne.n	8000826 <__aeabi_ddiv+0x82>
 80008a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008a8:	d10b      	bne.n	80008c2 <__aeabi_ddiv+0x11e>
 80008aa:	ea41 0100 	orr.w	r1, r1, r0
 80008ae:	f04f 0000 	mov.w	r0, #0
 80008b2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008b6:	e7b6      	b.n	8000826 <__aeabi_ddiv+0x82>
 80008b8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008bc:	bf04      	itt	eq
 80008be:	4301      	orreq	r1, r0
 80008c0:	2000      	moveq	r0, #0
 80008c2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80008c6:	bf88      	it	hi
 80008c8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80008cc:	f63f aeaf 	bhi.w	800062e <__aeabi_dmul+0xde>
 80008d0:	ebb5 0c03 	subs.w	ip, r5, r3
 80008d4:	bf04      	itt	eq
 80008d6:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008da:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008de:	f150 0000 	adcs.w	r0, r0, #0
 80008e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008e6:	bd70      	pop	{r4, r5, r6, pc}
 80008e8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80008ec:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008f0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008f4:	bfc2      	ittt	gt
 80008f6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008fa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008fe:	bd70      	popgt	{r4, r5, r6, pc}
 8000900:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000904:	f04f 0e00 	mov.w	lr, #0
 8000908:	3c01      	subs	r4, #1
 800090a:	e690      	b.n	800062e <__aeabi_dmul+0xde>
 800090c:	ea45 0e06 	orr.w	lr, r5, r6
 8000910:	e68d      	b.n	800062e <__aeabi_dmul+0xde>
 8000912:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000916:	ea94 0f0c 	teq	r4, ip
 800091a:	bf08      	it	eq
 800091c:	ea95 0f0c 	teqeq	r5, ip
 8000920:	f43f af3b 	beq.w	800079a <__aeabi_dmul+0x24a>
 8000924:	ea94 0f0c 	teq	r4, ip
 8000928:	d10a      	bne.n	8000940 <__aeabi_ddiv+0x19c>
 800092a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800092e:	f47f af34 	bne.w	800079a <__aeabi_dmul+0x24a>
 8000932:	ea95 0f0c 	teq	r5, ip
 8000936:	f47f af25 	bne.w	8000784 <__aeabi_dmul+0x234>
 800093a:	4610      	mov	r0, r2
 800093c:	4619      	mov	r1, r3
 800093e:	e72c      	b.n	800079a <__aeabi_dmul+0x24a>
 8000940:	ea95 0f0c 	teq	r5, ip
 8000944:	d106      	bne.n	8000954 <__aeabi_ddiv+0x1b0>
 8000946:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800094a:	f43f aefd 	beq.w	8000748 <__aeabi_dmul+0x1f8>
 800094e:	4610      	mov	r0, r2
 8000950:	4619      	mov	r1, r3
 8000952:	e722      	b.n	800079a <__aeabi_dmul+0x24a>
 8000954:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000958:	bf18      	it	ne
 800095a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800095e:	f47f aec5 	bne.w	80006ec <__aeabi_dmul+0x19c>
 8000962:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000966:	f47f af0d 	bne.w	8000784 <__aeabi_dmul+0x234>
 800096a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800096e:	f47f aeeb 	bne.w	8000748 <__aeabi_dmul+0x1f8>
 8000972:	e712      	b.n	800079a <__aeabi_dmul+0x24a>

08000974 <__gedf2>:
 8000974:	f04f 3cff 	mov.w	ip, #4294967295
 8000978:	e006      	b.n	8000988 <__cmpdf2+0x4>
 800097a:	bf00      	nop

0800097c <__ledf2>:
 800097c:	f04f 0c01 	mov.w	ip, #1
 8000980:	e002      	b.n	8000988 <__cmpdf2+0x4>
 8000982:	bf00      	nop

08000984 <__cmpdf2>:
 8000984:	f04f 0c01 	mov.w	ip, #1
 8000988:	f84d cd04 	str.w	ip, [sp, #-4]!
 800098c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000990:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000994:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000998:	bf18      	it	ne
 800099a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800099e:	d01b      	beq.n	80009d8 <__cmpdf2+0x54>
 80009a0:	b001      	add	sp, #4
 80009a2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009a6:	bf0c      	ite	eq
 80009a8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009ac:	ea91 0f03 	teqne	r1, r3
 80009b0:	bf02      	ittt	eq
 80009b2:	ea90 0f02 	teqeq	r0, r2
 80009b6:	2000      	moveq	r0, #0
 80009b8:	4770      	bxeq	lr
 80009ba:	f110 0f00 	cmn.w	r0, #0
 80009be:	ea91 0f03 	teq	r1, r3
 80009c2:	bf58      	it	pl
 80009c4:	4299      	cmppl	r1, r3
 80009c6:	bf08      	it	eq
 80009c8:	4290      	cmpeq	r0, r2
 80009ca:	bf2c      	ite	cs
 80009cc:	17d8      	asrcs	r0, r3, #31
 80009ce:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80009d2:	f040 0001 	orr.w	r0, r0, #1
 80009d6:	4770      	bx	lr
 80009d8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009e0:	d102      	bne.n	80009e8 <__cmpdf2+0x64>
 80009e2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009e6:	d107      	bne.n	80009f8 <__cmpdf2+0x74>
 80009e8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009ec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009f0:	d1d6      	bne.n	80009a0 <__cmpdf2+0x1c>
 80009f2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009f6:	d0d3      	beq.n	80009a0 <__cmpdf2+0x1c>
 80009f8:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009fc:	4770      	bx	lr
 80009fe:	bf00      	nop

08000a00 <__aeabi_cdrcmple>:
 8000a00:	4684      	mov	ip, r0
 8000a02:	4610      	mov	r0, r2
 8000a04:	4662      	mov	r2, ip
 8000a06:	468c      	mov	ip, r1
 8000a08:	4619      	mov	r1, r3
 8000a0a:	4663      	mov	r3, ip
 8000a0c:	e000      	b.n	8000a10 <__aeabi_cdcmpeq>
 8000a0e:	bf00      	nop

08000a10 <__aeabi_cdcmpeq>:
 8000a10:	b501      	push	{r0, lr}
 8000a12:	f7ff ffb7 	bl	8000984 <__cmpdf2>
 8000a16:	2800      	cmp	r0, #0
 8000a18:	bf48      	it	mi
 8000a1a:	f110 0f00 	cmnmi.w	r0, #0
 8000a1e:	bd01      	pop	{r0, pc}

08000a20 <__aeabi_dcmpeq>:
 8000a20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a24:	f7ff fff4 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a28:	bf0c      	ite	eq
 8000a2a:	2001      	moveq	r0, #1
 8000a2c:	2000      	movne	r0, #0
 8000a2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a32:	bf00      	nop

08000a34 <__aeabi_dcmplt>:
 8000a34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a38:	f7ff ffea 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a3c:	bf34      	ite	cc
 8000a3e:	2001      	movcc	r0, #1
 8000a40:	2000      	movcs	r0, #0
 8000a42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a46:	bf00      	nop

08000a48 <__aeabi_dcmple>:
 8000a48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a4c:	f7ff ffe0 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a50:	bf94      	ite	ls
 8000a52:	2001      	movls	r0, #1
 8000a54:	2000      	movhi	r0, #0
 8000a56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a5a:	bf00      	nop

08000a5c <__aeabi_dcmpge>:
 8000a5c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a60:	f7ff ffce 	bl	8000a00 <__aeabi_cdrcmple>
 8000a64:	bf94      	ite	ls
 8000a66:	2001      	movls	r0, #1
 8000a68:	2000      	movhi	r0, #0
 8000a6a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a6e:	bf00      	nop

08000a70 <__aeabi_dcmpgt>:
 8000a70:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a74:	f7ff ffc4 	bl	8000a00 <__aeabi_cdrcmple>
 8000a78:	bf34      	ite	cc
 8000a7a:	2001      	movcc	r0, #1
 8000a7c:	2000      	movcs	r0, #0
 8000a7e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a82:	bf00      	nop

08000a84 <__aeabi_dcmpun>:
 8000a84:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a8c:	d102      	bne.n	8000a94 <__aeabi_dcmpun+0x10>
 8000a8e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a92:	d10a      	bne.n	8000aaa <__aeabi_dcmpun+0x26>
 8000a94:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a9c:	d102      	bne.n	8000aa4 <__aeabi_dcmpun+0x20>
 8000a9e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aa2:	d102      	bne.n	8000aaa <__aeabi_dcmpun+0x26>
 8000aa4:	f04f 0000 	mov.w	r0, #0
 8000aa8:	4770      	bx	lr
 8000aaa:	f04f 0001 	mov.w	r0, #1
 8000aae:	4770      	bx	lr

08000ab0 <__aeabi_d2uiz>:
 8000ab0:	004a      	lsls	r2, r1, #1
 8000ab2:	d211      	bcs.n	8000ad8 <__aeabi_d2uiz+0x28>
 8000ab4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ab8:	d211      	bcs.n	8000ade <__aeabi_d2uiz+0x2e>
 8000aba:	d50d      	bpl.n	8000ad8 <__aeabi_d2uiz+0x28>
 8000abc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ac0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ac4:	d40e      	bmi.n	8000ae4 <__aeabi_d2uiz+0x34>
 8000ac6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aca:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ace:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000ad2:	fa23 f002 	lsr.w	r0, r3, r2
 8000ad6:	4770      	bx	lr
 8000ad8:	f04f 0000 	mov.w	r0, #0
 8000adc:	4770      	bx	lr
 8000ade:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ae2:	d102      	bne.n	8000aea <__aeabi_d2uiz+0x3a>
 8000ae4:	f04f 30ff 	mov.w	r0, #4294967295
 8000ae8:	4770      	bx	lr
 8000aea:	f04f 0000 	mov.w	r0, #0
 8000aee:	4770      	bx	lr

08000af0 <__aeabi_d2f>:
 8000af0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000af4:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000af8:	bf24      	itt	cs
 8000afa:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000afe:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b02:	d90d      	bls.n	8000b20 <__aeabi_d2f+0x30>
 8000b04:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b08:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b0c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b10:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b14:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b18:	bf08      	it	eq
 8000b1a:	f020 0001 	biceq.w	r0, r0, #1
 8000b1e:	4770      	bx	lr
 8000b20:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b24:	d121      	bne.n	8000b6a <__aeabi_d2f+0x7a>
 8000b26:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b2a:	bfbc      	itt	lt
 8000b2c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b30:	4770      	bxlt	lr
 8000b32:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b36:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b3a:	f1c2 0218 	rsb	r2, r2, #24
 8000b3e:	f1c2 0c20 	rsb	ip, r2, #32
 8000b42:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b46:	fa20 f002 	lsr.w	r0, r0, r2
 8000b4a:	bf18      	it	ne
 8000b4c:	f040 0001 	orrne.w	r0, r0, #1
 8000b50:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b54:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b58:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b5c:	ea40 000c 	orr.w	r0, r0, ip
 8000b60:	fa23 f302 	lsr.w	r3, r3, r2
 8000b64:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b68:	e7cc      	b.n	8000b04 <__aeabi_d2f+0x14>
 8000b6a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b6e:	d107      	bne.n	8000b80 <__aeabi_d2f+0x90>
 8000b70:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b74:	bf1e      	ittt	ne
 8000b76:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b7a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b7e:	4770      	bxne	lr
 8000b80:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b84:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b88:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b8c:	4770      	bx	lr
 8000b8e:	bf00      	nop

08000b90 <__aeabi_uldivmod>:
 8000b90:	b953      	cbnz	r3, 8000ba8 <__aeabi_uldivmod+0x18>
 8000b92:	b94a      	cbnz	r2, 8000ba8 <__aeabi_uldivmod+0x18>
 8000b94:	2900      	cmp	r1, #0
 8000b96:	bf08      	it	eq
 8000b98:	2800      	cmpeq	r0, #0
 8000b9a:	bf1c      	itt	ne
 8000b9c:	f04f 31ff 	movne.w	r1, #4294967295
 8000ba0:	f04f 30ff 	movne.w	r0, #4294967295
 8000ba4:	f000 b974 	b.w	8000e90 <__aeabi_idiv0>
 8000ba8:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bb0:	f000 f806 	bl	8000bc0 <__udivmoddi4>
 8000bb4:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bb8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bbc:	b004      	add	sp, #16
 8000bbe:	4770      	bx	lr

08000bc0 <__udivmoddi4>:
 8000bc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bc4:	9d08      	ldr	r5, [sp, #32]
 8000bc6:	4604      	mov	r4, r0
 8000bc8:	468e      	mov	lr, r1
 8000bca:	2b00      	cmp	r3, #0
 8000bcc:	d14d      	bne.n	8000c6a <__udivmoddi4+0xaa>
 8000bce:	428a      	cmp	r2, r1
 8000bd0:	4694      	mov	ip, r2
 8000bd2:	d969      	bls.n	8000ca8 <__udivmoddi4+0xe8>
 8000bd4:	fab2 f282 	clz	r2, r2
 8000bd8:	b152      	cbz	r2, 8000bf0 <__udivmoddi4+0x30>
 8000bda:	fa01 f302 	lsl.w	r3, r1, r2
 8000bde:	f1c2 0120 	rsb	r1, r2, #32
 8000be2:	fa20 f101 	lsr.w	r1, r0, r1
 8000be6:	fa0c fc02 	lsl.w	ip, ip, r2
 8000bea:	ea41 0e03 	orr.w	lr, r1, r3
 8000bee:	4094      	lsls	r4, r2
 8000bf0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000bf4:	0c21      	lsrs	r1, r4, #16
 8000bf6:	fbbe f6f8 	udiv	r6, lr, r8
 8000bfa:	fa1f f78c 	uxth.w	r7, ip
 8000bfe:	fb08 e316 	mls	r3, r8, r6, lr
 8000c02:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000c06:	fb06 f107 	mul.w	r1, r6, r7
 8000c0a:	4299      	cmp	r1, r3
 8000c0c:	d90a      	bls.n	8000c24 <__udivmoddi4+0x64>
 8000c0e:	eb1c 0303 	adds.w	r3, ip, r3
 8000c12:	f106 30ff 	add.w	r0, r6, #4294967295
 8000c16:	f080 811f 	bcs.w	8000e58 <__udivmoddi4+0x298>
 8000c1a:	4299      	cmp	r1, r3
 8000c1c:	f240 811c 	bls.w	8000e58 <__udivmoddi4+0x298>
 8000c20:	3e02      	subs	r6, #2
 8000c22:	4463      	add	r3, ip
 8000c24:	1a5b      	subs	r3, r3, r1
 8000c26:	b2a4      	uxth	r4, r4
 8000c28:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c2c:	fb08 3310 	mls	r3, r8, r0, r3
 8000c30:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c34:	fb00 f707 	mul.w	r7, r0, r7
 8000c38:	42a7      	cmp	r7, r4
 8000c3a:	d90a      	bls.n	8000c52 <__udivmoddi4+0x92>
 8000c3c:	eb1c 0404 	adds.w	r4, ip, r4
 8000c40:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c44:	f080 810a 	bcs.w	8000e5c <__udivmoddi4+0x29c>
 8000c48:	42a7      	cmp	r7, r4
 8000c4a:	f240 8107 	bls.w	8000e5c <__udivmoddi4+0x29c>
 8000c4e:	4464      	add	r4, ip
 8000c50:	3802      	subs	r0, #2
 8000c52:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000c56:	1be4      	subs	r4, r4, r7
 8000c58:	2600      	movs	r6, #0
 8000c5a:	b11d      	cbz	r5, 8000c64 <__udivmoddi4+0xa4>
 8000c5c:	40d4      	lsrs	r4, r2
 8000c5e:	2300      	movs	r3, #0
 8000c60:	e9c5 4300 	strd	r4, r3, [r5]
 8000c64:	4631      	mov	r1, r6
 8000c66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c6a:	428b      	cmp	r3, r1
 8000c6c:	d909      	bls.n	8000c82 <__udivmoddi4+0xc2>
 8000c6e:	2d00      	cmp	r5, #0
 8000c70:	f000 80ef 	beq.w	8000e52 <__udivmoddi4+0x292>
 8000c74:	2600      	movs	r6, #0
 8000c76:	e9c5 0100 	strd	r0, r1, [r5]
 8000c7a:	4630      	mov	r0, r6
 8000c7c:	4631      	mov	r1, r6
 8000c7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c82:	fab3 f683 	clz	r6, r3
 8000c86:	2e00      	cmp	r6, #0
 8000c88:	d14a      	bne.n	8000d20 <__udivmoddi4+0x160>
 8000c8a:	428b      	cmp	r3, r1
 8000c8c:	d302      	bcc.n	8000c94 <__udivmoddi4+0xd4>
 8000c8e:	4282      	cmp	r2, r0
 8000c90:	f200 80f9 	bhi.w	8000e86 <__udivmoddi4+0x2c6>
 8000c94:	1a84      	subs	r4, r0, r2
 8000c96:	eb61 0303 	sbc.w	r3, r1, r3
 8000c9a:	2001      	movs	r0, #1
 8000c9c:	469e      	mov	lr, r3
 8000c9e:	2d00      	cmp	r5, #0
 8000ca0:	d0e0      	beq.n	8000c64 <__udivmoddi4+0xa4>
 8000ca2:	e9c5 4e00 	strd	r4, lr, [r5]
 8000ca6:	e7dd      	b.n	8000c64 <__udivmoddi4+0xa4>
 8000ca8:	b902      	cbnz	r2, 8000cac <__udivmoddi4+0xec>
 8000caa:	deff      	udf	#255	; 0xff
 8000cac:	fab2 f282 	clz	r2, r2
 8000cb0:	2a00      	cmp	r2, #0
 8000cb2:	f040 8092 	bne.w	8000dda <__udivmoddi4+0x21a>
 8000cb6:	eba1 010c 	sub.w	r1, r1, ip
 8000cba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cbe:	fa1f fe8c 	uxth.w	lr, ip
 8000cc2:	2601      	movs	r6, #1
 8000cc4:	0c20      	lsrs	r0, r4, #16
 8000cc6:	fbb1 f3f7 	udiv	r3, r1, r7
 8000cca:	fb07 1113 	mls	r1, r7, r3, r1
 8000cce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000cd2:	fb0e f003 	mul.w	r0, lr, r3
 8000cd6:	4288      	cmp	r0, r1
 8000cd8:	d908      	bls.n	8000cec <__udivmoddi4+0x12c>
 8000cda:	eb1c 0101 	adds.w	r1, ip, r1
 8000cde:	f103 38ff 	add.w	r8, r3, #4294967295
 8000ce2:	d202      	bcs.n	8000cea <__udivmoddi4+0x12a>
 8000ce4:	4288      	cmp	r0, r1
 8000ce6:	f200 80cb 	bhi.w	8000e80 <__udivmoddi4+0x2c0>
 8000cea:	4643      	mov	r3, r8
 8000cec:	1a09      	subs	r1, r1, r0
 8000cee:	b2a4      	uxth	r4, r4
 8000cf0:	fbb1 f0f7 	udiv	r0, r1, r7
 8000cf4:	fb07 1110 	mls	r1, r7, r0, r1
 8000cf8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000cfc:	fb0e fe00 	mul.w	lr, lr, r0
 8000d00:	45a6      	cmp	lr, r4
 8000d02:	d908      	bls.n	8000d16 <__udivmoddi4+0x156>
 8000d04:	eb1c 0404 	adds.w	r4, ip, r4
 8000d08:	f100 31ff 	add.w	r1, r0, #4294967295
 8000d0c:	d202      	bcs.n	8000d14 <__udivmoddi4+0x154>
 8000d0e:	45a6      	cmp	lr, r4
 8000d10:	f200 80bb 	bhi.w	8000e8a <__udivmoddi4+0x2ca>
 8000d14:	4608      	mov	r0, r1
 8000d16:	eba4 040e 	sub.w	r4, r4, lr
 8000d1a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000d1e:	e79c      	b.n	8000c5a <__udivmoddi4+0x9a>
 8000d20:	f1c6 0720 	rsb	r7, r6, #32
 8000d24:	40b3      	lsls	r3, r6
 8000d26:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d2a:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d2e:	fa20 f407 	lsr.w	r4, r0, r7
 8000d32:	fa01 f306 	lsl.w	r3, r1, r6
 8000d36:	431c      	orrs	r4, r3
 8000d38:	40f9      	lsrs	r1, r7
 8000d3a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d3e:	fa00 f306 	lsl.w	r3, r0, r6
 8000d42:	fbb1 f8f9 	udiv	r8, r1, r9
 8000d46:	0c20      	lsrs	r0, r4, #16
 8000d48:	fa1f fe8c 	uxth.w	lr, ip
 8000d4c:	fb09 1118 	mls	r1, r9, r8, r1
 8000d50:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000d54:	fb08 f00e 	mul.w	r0, r8, lr
 8000d58:	4288      	cmp	r0, r1
 8000d5a:	fa02 f206 	lsl.w	r2, r2, r6
 8000d5e:	d90b      	bls.n	8000d78 <__udivmoddi4+0x1b8>
 8000d60:	eb1c 0101 	adds.w	r1, ip, r1
 8000d64:	f108 3aff 	add.w	sl, r8, #4294967295
 8000d68:	f080 8088 	bcs.w	8000e7c <__udivmoddi4+0x2bc>
 8000d6c:	4288      	cmp	r0, r1
 8000d6e:	f240 8085 	bls.w	8000e7c <__udivmoddi4+0x2bc>
 8000d72:	f1a8 0802 	sub.w	r8, r8, #2
 8000d76:	4461      	add	r1, ip
 8000d78:	1a09      	subs	r1, r1, r0
 8000d7a:	b2a4      	uxth	r4, r4
 8000d7c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000d80:	fb09 1110 	mls	r1, r9, r0, r1
 8000d84:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000d88:	fb00 fe0e 	mul.w	lr, r0, lr
 8000d8c:	458e      	cmp	lr, r1
 8000d8e:	d908      	bls.n	8000da2 <__udivmoddi4+0x1e2>
 8000d90:	eb1c 0101 	adds.w	r1, ip, r1
 8000d94:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d98:	d26c      	bcs.n	8000e74 <__udivmoddi4+0x2b4>
 8000d9a:	458e      	cmp	lr, r1
 8000d9c:	d96a      	bls.n	8000e74 <__udivmoddi4+0x2b4>
 8000d9e:	3802      	subs	r0, #2
 8000da0:	4461      	add	r1, ip
 8000da2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000da6:	fba0 9402 	umull	r9, r4, r0, r2
 8000daa:	eba1 010e 	sub.w	r1, r1, lr
 8000dae:	42a1      	cmp	r1, r4
 8000db0:	46c8      	mov	r8, r9
 8000db2:	46a6      	mov	lr, r4
 8000db4:	d356      	bcc.n	8000e64 <__udivmoddi4+0x2a4>
 8000db6:	d053      	beq.n	8000e60 <__udivmoddi4+0x2a0>
 8000db8:	b15d      	cbz	r5, 8000dd2 <__udivmoddi4+0x212>
 8000dba:	ebb3 0208 	subs.w	r2, r3, r8
 8000dbe:	eb61 010e 	sbc.w	r1, r1, lr
 8000dc2:	fa01 f707 	lsl.w	r7, r1, r7
 8000dc6:	fa22 f306 	lsr.w	r3, r2, r6
 8000dca:	40f1      	lsrs	r1, r6
 8000dcc:	431f      	orrs	r7, r3
 8000dce:	e9c5 7100 	strd	r7, r1, [r5]
 8000dd2:	2600      	movs	r6, #0
 8000dd4:	4631      	mov	r1, r6
 8000dd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dda:	f1c2 0320 	rsb	r3, r2, #32
 8000dde:	40d8      	lsrs	r0, r3
 8000de0:	fa0c fc02 	lsl.w	ip, ip, r2
 8000de4:	fa21 f303 	lsr.w	r3, r1, r3
 8000de8:	4091      	lsls	r1, r2
 8000dea:	4301      	orrs	r1, r0
 8000dec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000df0:	fa1f fe8c 	uxth.w	lr, ip
 8000df4:	fbb3 f0f7 	udiv	r0, r3, r7
 8000df8:	fb07 3610 	mls	r6, r7, r0, r3
 8000dfc:	0c0b      	lsrs	r3, r1, #16
 8000dfe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000e02:	fb00 f60e 	mul.w	r6, r0, lr
 8000e06:	429e      	cmp	r6, r3
 8000e08:	fa04 f402 	lsl.w	r4, r4, r2
 8000e0c:	d908      	bls.n	8000e20 <__udivmoddi4+0x260>
 8000e0e:	eb1c 0303 	adds.w	r3, ip, r3
 8000e12:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e16:	d22f      	bcs.n	8000e78 <__udivmoddi4+0x2b8>
 8000e18:	429e      	cmp	r6, r3
 8000e1a:	d92d      	bls.n	8000e78 <__udivmoddi4+0x2b8>
 8000e1c:	3802      	subs	r0, #2
 8000e1e:	4463      	add	r3, ip
 8000e20:	1b9b      	subs	r3, r3, r6
 8000e22:	b289      	uxth	r1, r1
 8000e24:	fbb3 f6f7 	udiv	r6, r3, r7
 8000e28:	fb07 3316 	mls	r3, r7, r6, r3
 8000e2c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e30:	fb06 f30e 	mul.w	r3, r6, lr
 8000e34:	428b      	cmp	r3, r1
 8000e36:	d908      	bls.n	8000e4a <__udivmoddi4+0x28a>
 8000e38:	eb1c 0101 	adds.w	r1, ip, r1
 8000e3c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000e40:	d216      	bcs.n	8000e70 <__udivmoddi4+0x2b0>
 8000e42:	428b      	cmp	r3, r1
 8000e44:	d914      	bls.n	8000e70 <__udivmoddi4+0x2b0>
 8000e46:	3e02      	subs	r6, #2
 8000e48:	4461      	add	r1, ip
 8000e4a:	1ac9      	subs	r1, r1, r3
 8000e4c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000e50:	e738      	b.n	8000cc4 <__udivmoddi4+0x104>
 8000e52:	462e      	mov	r6, r5
 8000e54:	4628      	mov	r0, r5
 8000e56:	e705      	b.n	8000c64 <__udivmoddi4+0xa4>
 8000e58:	4606      	mov	r6, r0
 8000e5a:	e6e3      	b.n	8000c24 <__udivmoddi4+0x64>
 8000e5c:	4618      	mov	r0, r3
 8000e5e:	e6f8      	b.n	8000c52 <__udivmoddi4+0x92>
 8000e60:	454b      	cmp	r3, r9
 8000e62:	d2a9      	bcs.n	8000db8 <__udivmoddi4+0x1f8>
 8000e64:	ebb9 0802 	subs.w	r8, r9, r2
 8000e68:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000e6c:	3801      	subs	r0, #1
 8000e6e:	e7a3      	b.n	8000db8 <__udivmoddi4+0x1f8>
 8000e70:	4646      	mov	r6, r8
 8000e72:	e7ea      	b.n	8000e4a <__udivmoddi4+0x28a>
 8000e74:	4620      	mov	r0, r4
 8000e76:	e794      	b.n	8000da2 <__udivmoddi4+0x1e2>
 8000e78:	4640      	mov	r0, r8
 8000e7a:	e7d1      	b.n	8000e20 <__udivmoddi4+0x260>
 8000e7c:	46d0      	mov	r8, sl
 8000e7e:	e77b      	b.n	8000d78 <__udivmoddi4+0x1b8>
 8000e80:	3b02      	subs	r3, #2
 8000e82:	4461      	add	r1, ip
 8000e84:	e732      	b.n	8000cec <__udivmoddi4+0x12c>
 8000e86:	4630      	mov	r0, r6
 8000e88:	e709      	b.n	8000c9e <__udivmoddi4+0xde>
 8000e8a:	4464      	add	r4, ip
 8000e8c:	3802      	subs	r0, #2
 8000e8e:	e742      	b.n	8000d16 <__udivmoddi4+0x156>

08000e90 <__aeabi_idiv0>:
 8000e90:	4770      	bx	lr
 8000e92:	bf00      	nop
 8000e94:	0000      	movs	r0, r0
	...

08000e98 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000e98:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8000e9c:	b082      	sub	sp, #8
 8000e9e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
   HAL_Init();
 8000ea0:	f003 fdb0 	bl	8004a04 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ea4:	f000 fb66 	bl	8001574 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000ea8:	f000 fd38 	bl	800191c <MX_GPIO_Init>
  MX_DMA_Init();
 8000eac:	f000 fcfe 	bl	80018ac <MX_DMA_Init>
  MX_USART2_UART_Init();
 8000eb0:	f000 fcd0 	bl	8001854 <MX_USART2_UART_Init>
  MX_TIM11_Init();
 8000eb4:	f000 fcaa 	bl	800180c <MX_TIM11_Init>
  MX_SPI3_Init();
 8000eb8:	f000 fbf2 	bl	80016a0 <MX_SPI3_Init>
  MX_TIM2_Init();
 8000ebc:	f000 fc26 	bl	800170c <MX_TIM2_Init>
  MX_I2C1_Init();
 8000ec0:	f000 fbc0 	bl	8001644 <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */

  HAL_TIM_Base_Start_IT(&htim11);
 8000ec4:	4896      	ldr	r0, [pc, #600]	; (8001120 <main+0x288>)
 8000ec6:	f008 fbc1 	bl	800964c <HAL_TIM_Base_Start_IT>
  HAL_UART_Receive_DMA(&huart2, Receive, nbyte);
 8000eca:	4b96      	ldr	r3, [pc, #600]	; (8001124 <main+0x28c>)
 8000ecc:	781b      	ldrb	r3, [r3, #0]
 8000ece:	b29b      	uxth	r3, r3
 8000ed0:	461a      	mov	r2, r3
 8000ed2:	4995      	ldr	r1, [pc, #596]	; (8001128 <main+0x290>)
 8000ed4:	4895      	ldr	r0, [pc, #596]	; (800112c <main+0x294>)
 8000ed6:	f009 fbf9 	bl	800a6cc <HAL_UART_Receive_DMA>
  NFgetstate();
 8000eda:	f002 f93b 	bl	8003154 <NFgetstate>
  NFstate = 0x78;
 8000ede:	4b94      	ldr	r3, [pc, #592]	; (8001130 <main+0x298>)
 8000ee0:	2278      	movs	r2, #120	; 0x78
 8000ee2:	701a      	strb	r2, [r3, #0]
  //PWM Generator set
  HAL_TIM_Base_Start(&htim2);
 8000ee4:	4893      	ldr	r0, [pc, #588]	; (8001134 <main+0x29c>)
 8000ee6:	f008 fb57 	bl	8009598 <HAL_TIM_Base_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8000eea:	2100      	movs	r1, #0
 8000eec:	4891      	ldr	r0, [pc, #580]	; (8001134 <main+0x29c>)
 8000eee:	f008 fc69 	bl	80097c4 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8000ef2:	2104      	movs	r1, #4
 8000ef4:	488f      	ldr	r0, [pc, #572]	; (8001134 <main+0x29c>)
 8000ef6:	f008 fc65 	bl	80097c4 <HAL_TIM_PWM_Start>

  //Encoder set
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 8000efa:	2201      	movs	r2, #1
 8000efc:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000f00:	488d      	ldr	r0, [pc, #564]	; (8001138 <main+0x2a0>)
 8000f02:	f004 fcaf 	bl	8005864 <HAL_GPIO_WritePin>

  movingFlag = 14;
 8000f06:	4b8d      	ldr	r3, [pc, #564]	; (800113c <main+0x2a4>)
 8000f08:	220e      	movs	r2, #14
 8000f0a:	701a      	strb	r2, [r3, #0]
  {
	  static uint64_t timeset = 0;
	  static uint64_t timeset3 = 0;
	  static uint64_t timeStamp = 0;
	  static GPIO_PinState B1State2[2] = {0};
	  B1State2[0]= HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8);
 8000f0c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000f10:	488b      	ldr	r0, [pc, #556]	; (8001140 <main+0x2a8>)
 8000f12:	f004 fc8f 	bl	8005834 <HAL_GPIO_ReadPin>
 8000f16:	4603      	mov	r3, r0
 8000f18:	461a      	mov	r2, r3
 8000f1a:	4b8a      	ldr	r3, [pc, #552]	; (8001144 <main+0x2ac>)
 8000f1c:	701a      	strb	r2, [r3, #0]

	  if(AMTcomplete || micros()-timeStamp>dt*1000){
 8000f1e:	4b8a      	ldr	r3, [pc, #552]	; (8001148 <main+0x2b0>)
 8000f20:	781b      	ldrb	r3, [r3, #0]
 8000f22:	2b00      	cmp	r3, #0
 8000f24:	d114      	bne.n	8000f50 <main+0xb8>
 8000f26:	f002 fc11 	bl	800374c <micros>
 8000f2a:	4b88      	ldr	r3, [pc, #544]	; (800114c <main+0x2b4>)
 8000f2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f30:	ebb0 0802 	subs.w	r8, r0, r2
 8000f34:	eb61 0903 	sbc.w	r9, r1, r3
 8000f38:	4640      	mov	r0, r8
 8000f3a:	4649      	mov	r1, r9
 8000f3c:	f7ff fad2 	bl	80004e4 <__aeabi_ul2d>
 8000f40:	f04f 0200 	mov.w	r2, #0
 8000f44:	4b82      	ldr	r3, [pc, #520]	; (8001150 <main+0x2b8>)
 8000f46:	f7ff fd93 	bl	8000a70 <__aeabi_dcmpgt>
 8000f4a:	4603      	mov	r3, r0
 8000f4c:	2b00      	cmp	r3, #0
 8000f4e:	d002      	beq.n	8000f56 <main+0xbe>
	  		 AMT222getpos(&rawPos);
 8000f50:	4880      	ldr	r0, [pc, #512]	; (8001154 <main+0x2bc>)
 8000f52:	f002 f939 	bl	80031c8 <AMT222getpos>
	  	  }

	  switch(State){
 8000f56:	4b80      	ldr	r3, [pc, #512]	; (8001158 <main+0x2c0>)
 8000f58:	781b      	ldrb	r3, [r3, #0]
 8000f5a:	2b03      	cmp	r3, #3
 8000f5c:	f000 8233 	beq.w	80013c6 <main+0x52e>
 8000f60:	2b03      	cmp	r3, #3
 8000f62:	dc04      	bgt.n	8000f6e <main+0xd6>
 8000f64:	2b01      	cmp	r3, #1
 8000f66:	d065      	beq.n	8001034 <main+0x19c>
 8000f68:	2b02      	cmp	r3, #2
 8000f6a:	f000 8255 	beq.w	8001418 <main+0x580>
	  default:
		  case Idle:
			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_RESET);
 8000f6e:	2200      	movs	r2, #0
 8000f70:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000f74:	4872      	ldr	r0, [pc, #456]	; (8001140 <main+0x2a8>)
 8000f76:	f004 fc75 	bl	8005864 <HAL_GPIO_WritePin>
			  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_SET);
 8000f7a:	2201      	movs	r2, #1
 8000f7c:	2180      	movs	r1, #128	; 0x80
 8000f7e:	4877      	ldr	r0, [pc, #476]	; (800115c <main+0x2c4>)
 8000f80:	f004 fc70 	bl	8005864 <HAL_GPIO_WritePin>
			  ch = 0;
 8000f84:	4b76      	ldr	r3, [pc, #472]	; (8001160 <main+0x2c8>)
 8000f86:	f04f 0200 	mov.w	r2, #0
 8000f8a:	601a      	str	r2, [r3, #0]
			  if (micros() - timeset3 > dt*1000000){ //Read Value while Idle
 8000f8c:	f002 fbde 	bl	800374c <micros>
 8000f90:	4b74      	ldr	r3, [pc, #464]	; (8001164 <main+0x2cc>)
 8000f92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f96:	ebb0 0a02 	subs.w	sl, r0, r2
 8000f9a:	eb61 0b03 	sbc.w	fp, r1, r3
 8000f9e:	4650      	mov	r0, sl
 8000fa0:	4659      	mov	r1, fp
 8000fa2:	f7ff fa9f 	bl	80004e4 <__aeabi_ul2d>
 8000fa6:	a358      	add	r3, pc, #352	; (adr r3, 8001108 <main+0x270>)
 8000fa8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000fac:	f7ff fd60 	bl	8000a70 <__aeabi_dcmpgt>
 8000fb0:	4603      	mov	r3, r0
 8000fb2:	2b00      	cmp	r3, #0
 8000fb4:	d00c      	beq.n	8000fd0 <main+0x138>
				  lowpass();
 8000fb6:	f001 f9d7 	bl	8002368 <lowpass>
				  Diff_velo();
 8000fba:	f001 fa75 	bl	80024a8 <Diff_velo>
				  Kalman_filter();
 8000fbe:	f001 faa7 	bl	8002510 <Kalman_filter>
				  timeset3 = micros();
 8000fc2:	f002 fbc3 	bl	800374c <micros>
 8000fc6:	4602      	mov	r2, r0
 8000fc8:	460b      	mov	r3, r1
 8000fca:	4966      	ldr	r1, [pc, #408]	; (8001164 <main+0x2cc>)
 8000fcc:	e9c1 2300 	strd	r2, r3, [r1]
			  }

			  if(setinitial == 1){ // Condition for first start
 8000fd0:	4b65      	ldr	r3, [pc, #404]	; (8001168 <main+0x2d0>)
 8000fd2:	781b      	ldrb	r3, [r3, #0]
 8000fd4:	2b01      	cmp	r3, #1
 8000fd6:	d101      	bne.n	8000fdc <main+0x144>
				  set_initial();
 8000fd8:	f001 f84e 	bl	8002078 <set_initial>
			  }

			  if(setzero == 1){ // Condition for Set home
 8000fdc:	4b63      	ldr	r3, [pc, #396]	; (800116c <main+0x2d4>)
 8000fde:	781b      	ldrb	r3, [r3, #0]
 8000fe0:	2b01      	cmp	r3, #1
 8000fe2:	d101      	bne.n	8000fe8 <main+0x150>
				  set_home();
 8000fe4:	f001 f8b0 	bl	8002148 <set_home>
			  }

			  if(update == 1){ //UART Update
 8000fe8:	4b61      	ldr	r3, [pc, #388]	; (8001170 <main+0x2d8>)
 8000fea:	781b      	ldrb	r3, [r3, #0]
 8000fec:	2b01      	cmp	r3, #1
 8000fee:	d101      	bne.n	8000ff4 <main+0x15c>
				  MoveToStation();
 8000ff0:	f001 f8d6 	bl	80021a0 <MoveToStation>
			  }

			  if(stop == 1){
 8000ff4:	4b5f      	ldr	r3, [pc, #380]	; (8001174 <main+0x2dc>)
 8000ff6:	781b      	ldrb	r3, [r3, #0]
 8000ff8:	2b01      	cmp	r3, #1
 8000ffa:	d105      	bne.n	8001008 <main+0x170>
					State = Emerstop;
 8000ffc:	4b56      	ldr	r3, [pc, #344]	; (8001158 <main+0x2c0>)
 8000ffe:	2203      	movs	r2, #3
 8001000:	701a      	strb	r2, [r3, #0]
					Drivemotor(0);
 8001002:	2000      	movs	r0, #0
 8001004:	f002 f830 	bl	8003068 <Drivemotor>
				}

			  if(blue == 1){ // Blue Button Switch
 8001008:	4b5b      	ldr	r3, [pc, #364]	; (8001178 <main+0x2e0>)
 800100a:	781b      	ldrb	r3, [r3, #0]
 800100c:	2b01      	cmp	r3, #1
 800100e:	f040 8290 	bne.w	8001532 <main+0x69a>
				  postotra = 3.14;
 8001012:	4b5a      	ldr	r3, [pc, #360]	; (800117c <main+0x2e4>)
 8001014:	4a5a      	ldr	r2, [pc, #360]	; (8001180 <main+0x2e8>)
 8001016:	601a      	str	r2, [r3, #0]
				  limitOmega = 5;
 8001018:	4b5a      	ldr	r3, [pc, #360]	; (8001184 <main+0x2ec>)
 800101a:	4a5b      	ldr	r2, [pc, #364]	; (8001188 <main+0x2f0>)
 800101c:	601a      	str	r2, [r3, #0]
				  direct = 1;
 800101e:	4b5b      	ldr	r3, [pc, #364]	; (800118c <main+0x2f4>)
 8001020:	2201      	movs	r2, #1
 8001022:	701a      	strb	r2, [r3, #0]
				  rad_before = current_rad;
 8001024:	4b5a      	ldr	r3, [pc, #360]	; (8001190 <main+0x2f8>)
 8001026:	681b      	ldr	r3, [r3, #0]
 8001028:	4a5a      	ldr	r2, [pc, #360]	; (8001194 <main+0x2fc>)
 800102a:	6013      	str	r3, [r2, #0]
				  State = Working;
 800102c:	4b4a      	ldr	r3, [pc, #296]	; (8001158 <main+0x2c0>)
 800102e:	2201      	movs	r2, #1
 8001030:	701a      	strb	r2, [r3, #0]
			  }
			  break;
 8001032:	e27e      	b.n	8001532 <main+0x69a>

		  case Working:
			blue = 0;
 8001034:	4b50      	ldr	r3, [pc, #320]	; (8001178 <main+0x2e0>)
 8001036:	2200      	movs	r2, #0
 8001038:	701a      	strb	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_SET);
 800103a:	2201      	movs	r2, #1
 800103c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001040:	483f      	ldr	r0, [pc, #252]	; (8001140 <main+0x2a8>)
 8001042:	f004 fc0f 	bl	8005864 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 8001046:	2200      	movs	r2, #0
 8001048:	2180      	movs	r1, #128	; 0x80
 800104a:	4844      	ldr	r0, [pc, #272]	; (800115c <main+0x2c4>)
 800104c:	f004 fc0a 	bl	8005864 <HAL_GPIO_WritePin>
			if (micros() - timeset > dt*1000000) { //1000 Hz
 8001050:	f002 fb7c 	bl	800374c <micros>
 8001054:	4b50      	ldr	r3, [pc, #320]	; (8001198 <main+0x300>)
 8001056:	e9d3 2300 	ldrd	r2, r3, [r3]
 800105a:	1a84      	subs	r4, r0, r2
 800105c:	603c      	str	r4, [r7, #0]
 800105e:	eb61 0303 	sbc.w	r3, r1, r3
 8001062:	607b      	str	r3, [r7, #4]
 8001064:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001068:	f7ff fa3c 	bl	80004e4 <__aeabi_ul2d>
 800106c:	a326      	add	r3, pc, #152	; (adr r3, 8001108 <main+0x270>)
 800106e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001072:	f7ff fcfd 	bl	8000a70 <__aeabi_dcmpgt>
 8001076:	4603      	mov	r3, r0
 8001078:	2b00      	cmp	r3, #0
 800107a:	f000 80c3 	beq.w	8001204 <main+0x36c>
				lowpass();
 800107e:	f001 f973 	bl	8002368 <lowpass>
				Diff_velo();
 8001082:	f001 fa11 	bl	80024a8 <Diff_velo>
				Kalman_filter();
 8001086:	f001 fa43 	bl	8002510 <Kalman_filter>
				if(postotra > 0.2){
 800108a:	4b3c      	ldr	r3, [pc, #240]	; (800117c <main+0x2e4>)
 800108c:	681b      	ldr	r3, [r3, #0]
 800108e:	4618      	mov	r0, r3
 8001090:	f7ff fa06 	bl	80004a0 <__aeabi_f2d>
 8001094:	a31e      	add	r3, pc, #120	; (adr r3, 8001110 <main+0x278>)
 8001096:	e9d3 2300 	ldrd	r2, r3, [r3]
 800109a:	f7ff fce9 	bl	8000a70 <__aeabi_dcmpgt>
 800109e:	4603      	mov	r3, r0
 80010a0:	2b00      	cmp	r3, #0
 80010a2:	d010      	beq.n	80010c6 <main+0x22e>
					Trajectory(postotra,limitOmega);
 80010a4:	4b35      	ldr	r3, [pc, #212]	; (800117c <main+0x2e4>)
 80010a6:	edd3 7a00 	vldr	s15, [r3]
 80010aa:	4b36      	ldr	r3, [pc, #216]	; (8001184 <main+0x2ec>)
 80010ac:	ed93 7a00 	vldr	s14, [r3]
 80010b0:	eef0 0a47 	vmov.f32	s1, s14
 80010b4:	eeb0 0a67 	vmov.f32	s0, s15
 80010b8:	f001 fd02 	bl	8002ac0 <Trajectory>
					inverse_tran();
 80010bc:	f001 f8d0 	bl	8002260 <inverse_tran>
					CascadeController();
 80010c0:	f000 fce6 	bl	8001a90 <CascadeController>
 80010c4:	e07b      	b.n	80011be <main+0x326>
						error = tra_velo - velo_diff;
						prevError = error;
					}*/
				}
				else{
					if(tuaall < 0.1){ //short distant 5,10 degree
 80010c6:	4b35      	ldr	r3, [pc, #212]	; (800119c <main+0x304>)
 80010c8:	681b      	ldr	r3, [r3, #0]
 80010ca:	4618      	mov	r0, r3
 80010cc:	f7ff f9e8 	bl	80004a0 <__aeabi_f2d>
 80010d0:	a311      	add	r3, pc, #68	; (adr r3, 8001118 <main+0x280>)
 80010d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010d6:	f7ff fcad 	bl	8000a34 <__aeabi_dcmplt>
 80010da:	4603      	mov	r3, r0
 80010dc:	2b00      	cmp	r3, #0
 80010de:	d00b      	beq.n	80010f8 <main+0x260>
						if(direct == 1){
 80010e0:	4b2a      	ldr	r3, [pc, #168]	; (800118c <main+0x2f4>)
 80010e2:	781b      	ldrb	r3, [r3, #0]
 80010e4:	2b01      	cmp	r3, #1
 80010e6:	d103      	bne.n	80010f0 <main+0x258>
							PIDout = 2100;}
 80010e8:	4b2d      	ldr	r3, [pc, #180]	; (80011a0 <main+0x308>)
 80010ea:	4a2e      	ldr	r2, [pc, #184]	; (80011a4 <main+0x30c>)
 80010ec:	601a      	str	r2, [r3, #0]
 80010ee:	e062      	b.n	80011b6 <main+0x31e>
						else{
							PIDout = -2100;}
 80010f0:	4b2b      	ldr	r3, [pc, #172]	; (80011a0 <main+0x308>)
 80010f2:	4a2d      	ldr	r2, [pc, #180]	; (80011a8 <main+0x310>)
 80010f4:	601a      	str	r2, [r3, #0]
 80010f6:	e05e      	b.n	80011b6 <main+0x31e>
					}
					else{
						if(direct == 1){
 80010f8:	4b24      	ldr	r3, [pc, #144]	; (800118c <main+0x2f4>)
 80010fa:	781b      	ldrb	r3, [r3, #0]
 80010fc:	2b01      	cmp	r3, #1
 80010fe:	d157      	bne.n	80011b0 <main+0x318>
							PIDout = 1000;}
 8001100:	4b27      	ldr	r3, [pc, #156]	; (80011a0 <main+0x308>)
 8001102:	4a2a      	ldr	r2, [pc, #168]	; (80011ac <main+0x314>)
 8001104:	601a      	str	r2, [r3, #0]
 8001106:	e056      	b.n	80011b6 <main+0x31e>
 8001108:	00000000 	.word	0x00000000
 800110c:	40c38800 	.word	0x40c38800
 8001110:	9999999a 	.word	0x9999999a
 8001114:	3fc99999 	.word	0x3fc99999
 8001118:	9999999a 	.word	0x9999999a
 800111c:	3fb99999 	.word	0x3fb99999
 8001120:	20000378 	.word	0x20000378
 8001124:	2000001e 	.word	0x2000001e
 8001128:	20000550 	.word	0x20000550
 800112c:	200003c0 	.word	0x200003c0
 8001130:	20000570 	.word	0x20000570
 8001134:	20000330 	.word	0x20000330
 8001138:	40020400 	.word	0x40020400
 800113c:	2000053c 	.word	0x2000053c
 8001140:	40020000 	.word	0x40020000
 8001144:	200007ec 	.word	0x200007ec
 8001148:	20000023 	.word	0x20000023
 800114c:	200007f0 	.word	0x200007f0
 8001150:	40240000 	.word	0x40240000
 8001154:	2000057e 	.word	0x2000057e
 8001158:	200005ef 	.word	0x200005ef
 800115c:	40020800 	.word	0x40020800
 8001160:	200005fc 	.word	0x200005fc
 8001164:	200007f8 	.word	0x200007f8
 8001168:	2000000c 	.word	0x2000000c
 800116c:	200005a0 	.word	0x200005a0
 8001170:	200005ec 	.word	0x200005ec
 8001174:	200005b0 	.word	0x200005b0
 8001178:	200005ed 	.word	0x200005ed
 800117c:	200005e4 	.word	0x200005e4
 8001180:	4048f5c3 	.word	0x4048f5c3
 8001184:	20000014 	.word	0x20000014
 8001188:	40a00000 	.word	0x40a00000
 800118c:	2000002c 	.word	0x2000002c
 8001190:	20000580 	.word	0x20000580
 8001194:	200005e8 	.word	0x200005e8
 8001198:	20000800 	.word	0x20000800
 800119c:	200005dc 	.word	0x200005dc
 80011a0:	20000620 	.word	0x20000620
 80011a4:	45034000 	.word	0x45034000
 80011a8:	c5034000 	.word	0xc5034000
 80011ac:	447a0000 	.word	0x447a0000
						else{
							PIDout = -1000;}
 80011b0:	4ba7      	ldr	r3, [pc, #668]	; (8001450 <main+0x5b8>)
 80011b2:	4aa8      	ldr	r2, [pc, #672]	; (8001454 <main+0x5bc>)
 80011b4:	601a      	str	r2, [r3, #0]
					}
					tf = 0;
 80011b6:	4ba8      	ldr	r3, [pc, #672]	; (8001458 <main+0x5c0>)
 80011b8:	f04f 0200 	mov.w	r2, #0
 80011bc:	601a      	str	r2, [r3, #0]
				}
				Drivemotor(PIDout);
 80011be:	4ba4      	ldr	r3, [pc, #656]	; (8001450 <main+0x5b8>)
 80011c0:	edd3 7a00 	vldr	s15, [r3]
 80011c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80011c8:	ee17 0a90 	vmov	r0, s15
 80011cc:	f001 ff4c 	bl	8003068 <Drivemotor>
				tuaall += dt;
 80011d0:	4ba2      	ldr	r3, [pc, #648]	; (800145c <main+0x5c4>)
 80011d2:	681b      	ldr	r3, [r3, #0]
 80011d4:	4618      	mov	r0, r3
 80011d6:	f7ff f963 	bl	80004a0 <__aeabi_f2d>
 80011da:	a399      	add	r3, pc, #612	; (adr r3, 8001440 <main+0x5a8>)
 80011dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011e0:	f7ff f800 	bl	80001e4 <__adddf3>
 80011e4:	4602      	mov	r2, r0
 80011e6:	460b      	mov	r3, r1
 80011e8:	4610      	mov	r0, r2
 80011ea:	4619      	mov	r1, r3
 80011ec:	f7ff fc80 	bl	8000af0 <__aeabi_d2f>
 80011f0:	4603      	mov	r3, r0
 80011f2:	4a9a      	ldr	r2, [pc, #616]	; (800145c <main+0x5c4>)
 80011f4:	6013      	str	r3, [r2, #0]
				timeset = micros();
 80011f6:	f002 faa9 	bl	800374c <micros>
 80011fa:	4602      	mov	r2, r0
 80011fc:	460b      	mov	r3, r1
 80011fe:	4998      	ldr	r1, [pc, #608]	; (8001460 <main+0x5c8>)
 8001200:	e9c1 2300 	strd	r2, r3, [r1]
			}

			if(tuaall > tf && setzero == 0){ //End of working should do this condition
 8001204:	4b95      	ldr	r3, [pc, #596]	; (800145c <main+0x5c4>)
 8001206:	ed93 7a00 	vldr	s14, [r3]
 800120a:	4b93      	ldr	r3, [pc, #588]	; (8001458 <main+0x5c0>)
 800120c:	edd3 7a00 	vldr	s15, [r3]
 8001210:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001214:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001218:	f340 8086 	ble.w	8001328 <main+0x490>
 800121c:	4b91      	ldr	r3, [pc, #580]	; (8001464 <main+0x5cc>)
 800121e:	781b      	ldrb	r3, [r3, #0]
 8001220:	2b00      	cmp	r3, #0
 8001222:	f040 8081 	bne.w	8001328 <main+0x490>
				if(direct == 1){
 8001226:	4b90      	ldr	r3, [pc, #576]	; (8001468 <main+0x5d0>)
 8001228:	781b      	ldrb	r3, [r3, #0]
 800122a:	2b01      	cmp	r3, #1
 800122c:	d122      	bne.n	8001274 <main+0x3dc>
					if(deg > Destination[n]-0.1){
 800122e:	4b8f      	ldr	r3, [pc, #572]	; (800146c <main+0x5d4>)
 8001230:	681b      	ldr	r3, [r3, #0]
 8001232:	4618      	mov	r0, r3
 8001234:	f7ff f934 	bl	80004a0 <__aeabi_f2d>
 8001238:	4604      	mov	r4, r0
 800123a:	460d      	mov	r5, r1
 800123c:	4b8c      	ldr	r3, [pc, #560]	; (8001470 <main+0x5d8>)
 800123e:	781b      	ldrb	r3, [r3, #0]
 8001240:	461a      	mov	r2, r3
 8001242:	4b8c      	ldr	r3, [pc, #560]	; (8001474 <main+0x5dc>)
 8001244:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8001248:	4618      	mov	r0, r3
 800124a:	f7ff f917 	bl	800047c <__aeabi_i2d>
 800124e:	a37e      	add	r3, pc, #504	; (adr r3, 8001448 <main+0x5b0>)
 8001250:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001254:	f7fe ffc4 	bl	80001e0 <__aeabi_dsub>
 8001258:	4602      	mov	r2, r0
 800125a:	460b      	mov	r3, r1
 800125c:	4620      	mov	r0, r4
 800125e:	4629      	mov	r1, r5
 8001260:	f7ff fc06 	bl	8000a70 <__aeabi_dcmpgt>
 8001264:	4603      	mov	r3, r0
 8001266:	2b00      	cmp	r3, #0
 8001268:	d026      	beq.n	80012b8 <main+0x420>
						finish = 1;
 800126a:	4b83      	ldr	r3, [pc, #524]	; (8001478 <main+0x5e0>)
 800126c:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8001270:	601a      	str	r2, [r3, #0]
 8001272:	e021      	b.n	80012b8 <main+0x420>
					}
				}
				else
				{
					if(deg < Destination[n]+0.1){
 8001274:	4b7d      	ldr	r3, [pc, #500]	; (800146c <main+0x5d4>)
 8001276:	681b      	ldr	r3, [r3, #0]
 8001278:	4618      	mov	r0, r3
 800127a:	f7ff f911 	bl	80004a0 <__aeabi_f2d>
 800127e:	4604      	mov	r4, r0
 8001280:	460d      	mov	r5, r1
 8001282:	4b7b      	ldr	r3, [pc, #492]	; (8001470 <main+0x5d8>)
 8001284:	781b      	ldrb	r3, [r3, #0]
 8001286:	461a      	mov	r2, r3
 8001288:	4b7a      	ldr	r3, [pc, #488]	; (8001474 <main+0x5dc>)
 800128a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800128e:	4618      	mov	r0, r3
 8001290:	f7ff f8f4 	bl	800047c <__aeabi_i2d>
 8001294:	a36c      	add	r3, pc, #432	; (adr r3, 8001448 <main+0x5b0>)
 8001296:	e9d3 2300 	ldrd	r2, r3, [r3]
 800129a:	f7fe ffa3 	bl	80001e4 <__adddf3>
 800129e:	4602      	mov	r2, r0
 80012a0:	460b      	mov	r3, r1
 80012a2:	4620      	mov	r0, r4
 80012a4:	4629      	mov	r1, r5
 80012a6:	f7ff fbc5 	bl	8000a34 <__aeabi_dcmplt>
 80012aa:	4603      	mov	r3, r0
 80012ac:	2b00      	cmp	r3, #0
 80012ae:	d003      	beq.n	80012b8 <main+0x420>
						finish = 1;
 80012b0:	4b71      	ldr	r3, [pc, #452]	; (8001478 <main+0x5e0>)
 80012b2:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 80012b6:	601a      	str	r2, [r3, #0]
					}
				}
				if(finish == 1){
 80012b8:	4b6f      	ldr	r3, [pc, #444]	; (8001478 <main+0x5e0>)
 80012ba:	edd3 7a00 	vldr	s15, [r3]
 80012be:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80012c2:	eef4 7a47 	vcmp.f32	s15, s14
 80012c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012ca:	d12d      	bne.n	8001328 <main+0x490>
					n++;
 80012cc:	4b68      	ldr	r3, [pc, #416]	; (8001470 <main+0x5d8>)
 80012ce:	781b      	ldrb	r3, [r3, #0]
 80012d0:	3301      	adds	r3, #1
 80012d2:	b2da      	uxtb	r2, r3
 80012d4:	4b66      	ldr	r3, [pc, #408]	; (8001470 <main+0x5d8>)
 80012d6:	701a      	strb	r2, [r3, #0]
					if(n < nDestination){
 80012d8:	4b65      	ldr	r3, [pc, #404]	; (8001470 <main+0x5d8>)
 80012da:	781a      	ldrb	r2, [r3, #0]
 80012dc:	4b67      	ldr	r3, [pc, #412]	; (800147c <main+0x5e4>)
 80012de:	781b      	ldrb	r3, [r3, #0]
 80012e0:	429a      	cmp	r2, r3
 80012e2:	d203      	bcs.n	80012ec <main+0x454>
						update = 1;}
 80012e4:	4b66      	ldr	r3, [pc, #408]	; (8001480 <main+0x5e8>)
 80012e6:	2201      	movs	r2, #1
 80012e8:	701a      	strb	r2, [r3, #0]
 80012ea:	e017      	b.n	800131c <main+0x484>
					else{
						update = 0;
 80012ec:	4b64      	ldr	r3, [pc, #400]	; (8001480 <main+0x5e8>)
 80012ee:	2200      	movs	r2, #0
 80012f0:	701a      	strb	r2, [r3, #0]
						if(n == nStation || n == nDestination){
 80012f2:	4b5f      	ldr	r3, [pc, #380]	; (8001470 <main+0x5d8>)
 80012f4:	781a      	ldrb	r2, [r3, #0]
 80012f6:	4b63      	ldr	r3, [pc, #396]	; (8001484 <main+0x5ec>)
 80012f8:	781b      	ldrb	r3, [r3, #0]
 80012fa:	429a      	cmp	r2, r3
 80012fc:	d005      	beq.n	800130a <main+0x472>
 80012fe:	4b5c      	ldr	r3, [pc, #368]	; (8001470 <main+0x5d8>)
 8001300:	781a      	ldrb	r2, [r3, #0]
 8001302:	4b5e      	ldr	r3, [pc, #376]	; (800147c <main+0x5e4>)
 8001304:	781b      	ldrb	r3, [r3, #0]
 8001306:	429a      	cmp	r2, r3
 8001308:	d102      	bne.n	8001310 <main+0x478>
							Reached = 1;
 800130a:	4b5f      	ldr	r3, [pc, #380]	; (8001488 <main+0x5f0>)
 800130c:	2201      	movs	r2, #1
 800130e:	701a      	strb	r2, [r3, #0]
						}
						nDestination = 0;
 8001310:	4b5a      	ldr	r3, [pc, #360]	; (800147c <main+0x5e4>)
 8001312:	2200      	movs	r2, #0
 8001314:	701a      	strb	r2, [r3, #0]
						n = 0;
 8001316:	4b56      	ldr	r3, [pc, #344]	; (8001470 <main+0x5d8>)
 8001318:	2200      	movs	r2, #0
 800131a:	701a      	strb	r2, [r3, #0]
					}
					State = Laser;
 800131c:	4b5b      	ldr	r3, [pc, #364]	; (800148c <main+0x5f4>)
 800131e:	2202      	movs	r2, #2
 8001320:	701a      	strb	r2, [r3, #0]
					NFwriteFlag = 1;
 8001322:	4b5b      	ldr	r3, [pc, #364]	; (8001490 <main+0x5f8>)
 8001324:	2201      	movs	r2, #1
 8001326:	701a      	strb	r2, [r3, #0]
				}
			}

			if(tuaall > 15 && tuaall > tf){ //Condition when moving error
 8001328:	4b4c      	ldr	r3, [pc, #304]	; (800145c <main+0x5c4>)
 800132a:	edd3 7a00 	vldr	s15, [r3]
 800132e:	eeb2 7a0e 	vmov.f32	s14, #46	; 0x41700000  15.0
 8001332:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001336:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800133a:	dd38      	ble.n	80013ae <main+0x516>
 800133c:	4b47      	ldr	r3, [pc, #284]	; (800145c <main+0x5c4>)
 800133e:	ed93 7a00 	vldr	s14, [r3]
 8001342:	4b45      	ldr	r3, [pc, #276]	; (8001458 <main+0x5c0>)
 8001344:	edd3 7a00 	vldr	s15, [r3]
 8001348:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800134c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001350:	dd2d      	ble.n	80013ae <main+0x516>
				n++;
 8001352:	4b47      	ldr	r3, [pc, #284]	; (8001470 <main+0x5d8>)
 8001354:	781b      	ldrb	r3, [r3, #0]
 8001356:	3301      	adds	r3, #1
 8001358:	b2da      	uxtb	r2, r3
 800135a:	4b45      	ldr	r3, [pc, #276]	; (8001470 <main+0x5d8>)
 800135c:	701a      	strb	r2, [r3, #0]
				if(n < nDestination){
 800135e:	4b44      	ldr	r3, [pc, #272]	; (8001470 <main+0x5d8>)
 8001360:	781a      	ldrb	r2, [r3, #0]
 8001362:	4b46      	ldr	r3, [pc, #280]	; (800147c <main+0x5e4>)
 8001364:	781b      	ldrb	r3, [r3, #0]
 8001366:	429a      	cmp	r2, r3
 8001368:	d203      	bcs.n	8001372 <main+0x4da>
					update = 1;}
 800136a:	4b45      	ldr	r3, [pc, #276]	; (8001480 <main+0x5e8>)
 800136c:	2201      	movs	r2, #1
 800136e:	701a      	strb	r2, [r3, #0]
 8001370:	e017      	b.n	80013a2 <main+0x50a>
				else{
					update = 0;
 8001372:	4b43      	ldr	r3, [pc, #268]	; (8001480 <main+0x5e8>)
 8001374:	2200      	movs	r2, #0
 8001376:	701a      	strb	r2, [r3, #0]
					if(n == nStation || n == nDestination){
 8001378:	4b3d      	ldr	r3, [pc, #244]	; (8001470 <main+0x5d8>)
 800137a:	781a      	ldrb	r2, [r3, #0]
 800137c:	4b41      	ldr	r3, [pc, #260]	; (8001484 <main+0x5ec>)
 800137e:	781b      	ldrb	r3, [r3, #0]
 8001380:	429a      	cmp	r2, r3
 8001382:	d005      	beq.n	8001390 <main+0x4f8>
 8001384:	4b3a      	ldr	r3, [pc, #232]	; (8001470 <main+0x5d8>)
 8001386:	781a      	ldrb	r2, [r3, #0]
 8001388:	4b3c      	ldr	r3, [pc, #240]	; (800147c <main+0x5e4>)
 800138a:	781b      	ldrb	r3, [r3, #0]
 800138c:	429a      	cmp	r2, r3
 800138e:	d102      	bne.n	8001396 <main+0x4fe>
						Reached = 1;
 8001390:	4b3d      	ldr	r3, [pc, #244]	; (8001488 <main+0x5f0>)
 8001392:	2201      	movs	r2, #1
 8001394:	701a      	strb	r2, [r3, #0]
					}
					nDestination = 0;
 8001396:	4b39      	ldr	r3, [pc, #228]	; (800147c <main+0x5e4>)
 8001398:	2200      	movs	r2, #0
 800139a:	701a      	strb	r2, [r3, #0]
					n = 0;
 800139c:	4b34      	ldr	r3, [pc, #208]	; (8001470 <main+0x5d8>)
 800139e:	2200      	movs	r2, #0
 80013a0:	701a      	strb	r2, [r3, #0]
				}
				State = Laser;
 80013a2:	4b3a      	ldr	r3, [pc, #232]	; (800148c <main+0x5f4>)
 80013a4:	2202      	movs	r2, #2
 80013a6:	701a      	strb	r2, [r3, #0]
				NFwriteFlag = 1;
 80013a8:	4b39      	ldr	r3, [pc, #228]	; (8001490 <main+0x5f8>)
 80013aa:	2201      	movs	r2, #1
 80013ac:	701a      	strb	r2, [r3, #0]
			}

			if(stop == 1){
 80013ae:	4b39      	ldr	r3, [pc, #228]	; (8001494 <main+0x5fc>)
 80013b0:	781b      	ldrb	r3, [r3, #0]
 80013b2:	2b01      	cmp	r3, #1
 80013b4:	f040 80bf 	bne.w	8001536 <main+0x69e>
				State = Emerstop;
 80013b8:	4b34      	ldr	r3, [pc, #208]	; (800148c <main+0x5f4>)
 80013ba:	2203      	movs	r2, #3
 80013bc:	701a      	strb	r2, [r3, #0]
				Drivemotor(0);
 80013be:	2000      	movs	r0, #0
 80013c0:	f001 fe52 	bl	8003068 <Drivemotor>
			}
			break;
 80013c4:	e0b7      	b.n	8001536 <main+0x69e>

		  case Emerstop:
			HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_RESET);
 80013c6:	2200      	movs	r2, #0
 80013c8:	f44f 7100 	mov.w	r1, #512	; 0x200
 80013cc:	4832      	ldr	r0, [pc, #200]	; (8001498 <main+0x600>)
 80013ce:	f004 fa49 	bl	8005864 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 80013d2:	2200      	movs	r2, #0
 80013d4:	2180      	movs	r1, #128	; 0x80
 80013d6:	4831      	ldr	r0, [pc, #196]	; (800149c <main+0x604>)
 80013d8:	f004 fa44 	bl	8005864 <HAL_GPIO_WritePin>
			if(B1State2[1] == GPIO_PIN_SET && B1State2[0] == GPIO_PIN_RESET){
 80013dc:	4b30      	ldr	r3, [pc, #192]	; (80014a0 <main+0x608>)
 80013de:	785b      	ldrb	r3, [r3, #1]
 80013e0:	2b01      	cmp	r3, #1
 80013e2:	d114      	bne.n	800140e <main+0x576>
 80013e4:	4b2e      	ldr	r3, [pc, #184]	; (80014a0 <main+0x608>)
 80013e6:	781b      	ldrb	r3, [r3, #0]
 80013e8:	2b00      	cmp	r3, #0
 80013ea:	d110      	bne.n	800140e <main+0x576>
				reset();
 80013ec:	f000 fe26 	bl	800203c <reset>
				nDestination = 0;
 80013f0:	4b22      	ldr	r3, [pc, #136]	; (800147c <main+0x5e4>)
 80013f2:	2200      	movs	r2, #0
 80013f4:	701a      	strb	r2, [r3, #0]
				n = 0;
 80013f6:	4b1e      	ldr	r3, [pc, #120]	; (8001470 <main+0x5d8>)
 80013f8:	2200      	movs	r2, #0
 80013fa:	701a      	strb	r2, [r3, #0]
				State = Idle;
 80013fc:	4b23      	ldr	r3, [pc, #140]	; (800148c <main+0x5f4>)
 80013fe:	2200      	movs	r2, #0
 8001400:	701a      	strb	r2, [r3, #0]
				stop = 0;
 8001402:	4b24      	ldr	r3, [pc, #144]	; (8001494 <main+0x5fc>)
 8001404:	2200      	movs	r2, #0
 8001406:	701a      	strb	r2, [r3, #0]
				setzero = 1;
 8001408:	4b16      	ldr	r3, [pc, #88]	; (8001464 <main+0x5cc>)
 800140a:	2201      	movs	r2, #1
 800140c:	701a      	strb	r2, [r3, #0]
			}
			B1State2[1] = B1State2[0];
 800140e:	4b24      	ldr	r3, [pc, #144]	; (80014a0 <main+0x608>)
 8001410:	781a      	ldrb	r2, [r3, #0]
 8001412:	4b23      	ldr	r3, [pc, #140]	; (80014a0 <main+0x608>)
 8001414:	705a      	strb	r2, [r3, #1]
			break;
 8001416:	e093      	b.n	8001540 <main+0x6a8>

		  case Laser:
			  if(setzero == 1){
 8001418:	4b12      	ldr	r3, [pc, #72]	; (8001464 <main+0x5cc>)
 800141a:	781b      	ldrb	r3, [r3, #0]
 800141c:	2b01      	cmp	r3, #1
 800141e:	d105      	bne.n	800142c <main+0x594>
				  State= Idle;
 8001420:	4b1a      	ldr	r3, [pc, #104]	; (800148c <main+0x5f4>)
 8001422:	2200      	movs	r2, #0
 8001424:	701a      	strb	r2, [r3, #0]
				  reset();
 8001426:	f000 fe09 	bl	800203c <reset>
				  break;
 800142a:	e089      	b.n	8001540 <main+0x6a8>
			  }
			  reset();
 800142c:	f000 fe06 	bl	800203c <reset>
			  //State= Idle;
			  switch(stateI2C){
 8001430:	4b1c      	ldr	r3, [pc, #112]	; (80014a4 <main+0x60c>)
 8001432:	781b      	ldrb	r3, [r3, #0]
 8001434:	2b00      	cmp	r3, #0
 8001436:	d037      	beq.n	80014a8 <main+0x610>
 8001438:	2b01      	cmp	r3, #1
 800143a:	d06d      	beq.n	8001518 <main+0x680>
 800143c:	e080      	b.n	8001540 <main+0x6a8>
 800143e:	bf00      	nop
 8001440:	47ae147b 	.word	0x47ae147b
 8001444:	3f847ae1 	.word	0x3f847ae1
 8001448:	9999999a 	.word	0x9999999a
 800144c:	3fb99999 	.word	0x3fb99999
 8001450:	20000620 	.word	0x20000620
 8001454:	c47a0000 	.word	0xc47a0000
 8001458:	200005d4 	.word	0x200005d4
 800145c:	200005dc 	.word	0x200005dc
 8001460:	20000800 	.word	0x20000800
 8001464:	200005a0 	.word	0x200005a0
 8001468:	2000002c 	.word	0x2000002c
 800146c:	20000588 	.word	0x20000588
 8001470:	20000544 	.word	0x20000544
 8001474:	200004d4 	.word	0x200004d4
 8001478:	200005f8 	.word	0x200005f8
 800147c:	200004d0 	.word	0x200004d0
 8001480:	200005ec 	.word	0x200005ec
 8001484:	20000538 	.word	0x20000538
 8001488:	2000053b 	.word	0x2000053b
 800148c:	200005ef 	.word	0x200005ef
 8001490:	20000022 	.word	0x20000022
 8001494:	200005b0 	.word	0x200005b0
 8001498:	40020000 	.word	0x40020000
 800149c:	40020800 	.word	0x40020800
 80014a0:	200007ec 	.word	0x200007ec
 80014a4:	20000574 	.word	0x20000574
			  // Reached state
			  case 0:
				  switch(NFenable){
 80014a8:	4b2a      	ldr	r3, [pc, #168]	; (8001554 <main+0x6bc>)
 80014aa:	781b      	ldrb	r3, [r3, #0]
 80014ac:	2b00      	cmp	r3, #0
 80014ae:	d02a      	beq.n	8001506 <main+0x66e>
 80014b0:	2b01      	cmp	r3, #1
 80014b2:	d142      	bne.n	800153a <main+0x6a2>
				  case 1:
					  NFgetstate();
 80014b4:	f001 fe4e 	bl	8003154 <NFgetstate>
					  if( NFwriteFlag && NFstate == 0x78 && (hi2c1.State == HAL_I2C_STATE_READY) ){
 80014b8:	4b27      	ldr	r3, [pc, #156]	; (8001558 <main+0x6c0>)
 80014ba:	781b      	ldrb	r3, [r3, #0]
 80014bc:	2b00      	cmp	r3, #0
 80014be:	d00f      	beq.n	80014e0 <main+0x648>
 80014c0:	4b26      	ldr	r3, [pc, #152]	; (800155c <main+0x6c4>)
 80014c2:	781b      	ldrb	r3, [r3, #0]
 80014c4:	2b78      	cmp	r3, #120	; 0x78
 80014c6:	d10b      	bne.n	80014e0 <main+0x648>
 80014c8:	4b25      	ldr	r3, [pc, #148]	; (8001560 <main+0x6c8>)
 80014ca:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80014ce:	b2db      	uxtb	r3, r3
 80014d0:	2b20      	cmp	r3, #32
 80014d2:	d105      	bne.n	80014e0 <main+0x648>
						  NFcontacton();
 80014d4:	f001 fe28 	bl	8003128 <NFcontacton>
						  NFwriteFlag = 0;		// Reached var
 80014d8:	4b1f      	ldr	r3, [pc, #124]	; (8001558 <main+0x6c0>)
 80014da:	2200      	movs	r2, #0
 80014dc:	701a      	strb	r2, [r3, #0]
					  }else if(NFstate == 0x12 || NFstate == 0x34 || NFstate == 0x56){
						  stateI2C = 1;
						  NFstate = 0;
					  }
					  break;
 80014de:	e019      	b.n	8001514 <main+0x67c>
					  }else if(NFstate == 0x12 || NFstate == 0x34 || NFstate == 0x56){
 80014e0:	4b1e      	ldr	r3, [pc, #120]	; (800155c <main+0x6c4>)
 80014e2:	781b      	ldrb	r3, [r3, #0]
 80014e4:	2b12      	cmp	r3, #18
 80014e6:	d007      	beq.n	80014f8 <main+0x660>
 80014e8:	4b1c      	ldr	r3, [pc, #112]	; (800155c <main+0x6c4>)
 80014ea:	781b      	ldrb	r3, [r3, #0]
 80014ec:	2b34      	cmp	r3, #52	; 0x34
 80014ee:	d003      	beq.n	80014f8 <main+0x660>
 80014f0:	4b1a      	ldr	r3, [pc, #104]	; (800155c <main+0x6c4>)
 80014f2:	781b      	ldrb	r3, [r3, #0]
 80014f4:	2b56      	cmp	r3, #86	; 0x56
 80014f6:	d10d      	bne.n	8001514 <main+0x67c>
						  stateI2C = 1;
 80014f8:	4b1a      	ldr	r3, [pc, #104]	; (8001564 <main+0x6cc>)
 80014fa:	2201      	movs	r2, #1
 80014fc:	701a      	strb	r2, [r3, #0]
						  NFstate = 0;
 80014fe:	4b17      	ldr	r3, [pc, #92]	; (800155c <main+0x6c4>)
 8001500:	2200      	movs	r2, #0
 8001502:	701a      	strb	r2, [r3, #0]
					  break;
 8001504:	e006      	b.n	8001514 <main+0x67c>
				  case 0:
					  NFwriteFlag = 0;
 8001506:	4b14      	ldr	r3, [pc, #80]	; (8001558 <main+0x6c0>)
 8001508:	2200      	movs	r2, #0
 800150a:	701a      	strb	r2, [r3, #0]
					  State = Idle;
 800150c:	4b16      	ldr	r3, [pc, #88]	; (8001568 <main+0x6d0>)
 800150e:	2200      	movs	r2, #0
 8001510:	701a      	strb	r2, [r3, #0]
					  // state = start;
					  break;
 8001512:	e000      	b.n	8001516 <main+0x67e>
					  break;
 8001514:	bf00      	nop
				  }
				  break;
 8001516:	e010      	b.n	800153a <main+0x6a2>
			  case 1:
				  NFgetstate();
 8001518:	f001 fe1c 	bl	8003154 <NFgetstate>
				  if(NFstate == 0x78){
 800151c:	4b0f      	ldr	r3, [pc, #60]	; (800155c <main+0x6c4>)
 800151e:	781b      	ldrb	r3, [r3, #0]
 8001520:	2b78      	cmp	r3, #120	; 0x78
 8001522:	d10c      	bne.n	800153e <main+0x6a6>
					  stateI2C = 0;
 8001524:	4b0f      	ldr	r3, [pc, #60]	; (8001564 <main+0x6cc>)
 8001526:	2200      	movs	r2, #0
 8001528:	701a      	strb	r2, [r3, #0]
					  State = Idle;
 800152a:	4b0f      	ldr	r3, [pc, #60]	; (8001568 <main+0x6d0>)
 800152c:	2200      	movs	r2, #0
 800152e:	701a      	strb	r2, [r3, #0]
				  }
				  break;
 8001530:	e005      	b.n	800153e <main+0x6a6>
			  break;
 8001532:	bf00      	nop
 8001534:	e004      	b.n	8001540 <main+0x6a8>
			break;
 8001536:	bf00      	nop
 8001538:	e002      	b.n	8001540 <main+0x6a8>
				  break;
 800153a:	bf00      	nop
 800153c:	e000      	b.n	8001540 <main+0x6a8>
				  break;
 800153e:	bf00      	nop
			  }
	  }

	  responseUART();
 8001540:	f002 fa6a 	bl	8003a18 <responseUART>
	  rad = current_rad_wrap;
 8001544:	4b09      	ldr	r3, [pc, #36]	; (800156c <main+0x6d4>)
 8001546:	681b      	ldr	r3, [r3, #0]
 8001548:	4a09      	ldr	r2, [pc, #36]	; (8001570 <main+0x6d8>)
 800154a:	6013      	str	r3, [r2, #0]

	  // Keep this work flow at the bottom of while loop. bo Reached will be reset here.
	  destinationACK();
 800154c:	f002 fe66 	bl	800421c <destinationACK>
  {
 8001550:	e4dc      	b.n	8000f0c <main+0x74>
 8001552:	bf00      	nop
 8001554:	20000021 	.word	0x20000021
 8001558:	20000022 	.word	0x20000022
 800155c:	20000570 	.word	0x20000570
 8001560:	200001c4 	.word	0x200001c4
 8001564:	20000574 	.word	0x20000574
 8001568:	200005ef 	.word	0x200005ef
 800156c:	20000584 	.word	0x20000584
 8001570:	20000540 	.word	0x20000540

08001574 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001574:	b580      	push	{r7, lr}
 8001576:	b094      	sub	sp, #80	; 0x50
 8001578:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800157a:	f107 0320 	add.w	r3, r7, #32
 800157e:	2230      	movs	r2, #48	; 0x30
 8001580:	2100      	movs	r1, #0
 8001582:	4618      	mov	r0, r3
 8001584:	f00a fa66 	bl	800ba54 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001588:	f107 030c 	add.w	r3, r7, #12
 800158c:	2200      	movs	r2, #0
 800158e:	601a      	str	r2, [r3, #0]
 8001590:	605a      	str	r2, [r3, #4]
 8001592:	609a      	str	r2, [r3, #8]
 8001594:	60da      	str	r2, [r3, #12]
 8001596:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001598:	2300      	movs	r3, #0
 800159a:	60bb      	str	r3, [r7, #8]
 800159c:	4b27      	ldr	r3, [pc, #156]	; (800163c <SystemClock_Config+0xc8>)
 800159e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015a0:	4a26      	ldr	r2, [pc, #152]	; (800163c <SystemClock_Config+0xc8>)
 80015a2:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80015a6:	6413      	str	r3, [r2, #64]	; 0x40
 80015a8:	4b24      	ldr	r3, [pc, #144]	; (800163c <SystemClock_Config+0xc8>)
 80015aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015ac:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80015b0:	60bb      	str	r3, [r7, #8]
 80015b2:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80015b4:	2300      	movs	r3, #0
 80015b6:	607b      	str	r3, [r7, #4]
 80015b8:	4b21      	ldr	r3, [pc, #132]	; (8001640 <SystemClock_Config+0xcc>)
 80015ba:	681b      	ldr	r3, [r3, #0]
 80015bc:	4a20      	ldr	r2, [pc, #128]	; (8001640 <SystemClock_Config+0xcc>)
 80015be:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80015c2:	6013      	str	r3, [r2, #0]
 80015c4:	4b1e      	ldr	r3, [pc, #120]	; (8001640 <SystemClock_Config+0xcc>)
 80015c6:	681b      	ldr	r3, [r3, #0]
 80015c8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80015cc:	607b      	str	r3, [r7, #4]
 80015ce:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80015d0:	2302      	movs	r3, #2
 80015d2:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80015d4:	2301      	movs	r3, #1
 80015d6:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80015d8:	2310      	movs	r3, #16
 80015da:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80015dc:	2302      	movs	r3, #2
 80015de:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80015e0:	2300      	movs	r3, #0
 80015e2:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 80015e4:	2308      	movs	r3, #8
 80015e6:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 100;
 80015e8:	2364      	movs	r3, #100	; 0x64
 80015ea:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80015ec:	2302      	movs	r3, #2
 80015ee:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80015f0:	2304      	movs	r3, #4
 80015f2:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80015f4:	f107 0320 	add.w	r3, r7, #32
 80015f8:	4618      	mov	r0, r3
 80015fa:	f006 fdd5 	bl	80081a8 <HAL_RCC_OscConfig>
 80015fe:	4603      	mov	r3, r0
 8001600:	2b00      	cmp	r3, #0
 8001602:	d001      	beq.n	8001608 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8001604:	f002 feb8 	bl	8004378 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001608:	230f      	movs	r3, #15
 800160a:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800160c:	2302      	movs	r3, #2
 800160e:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001610:	2300      	movs	r3, #0
 8001612:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001614:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001618:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800161a:	2300      	movs	r3, #0
 800161c:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 800161e:	f107 030c 	add.w	r3, r7, #12
 8001622:	2103      	movs	r1, #3
 8001624:	4618      	mov	r0, r3
 8001626:	f007 f837 	bl	8008698 <HAL_RCC_ClockConfig>
 800162a:	4603      	mov	r3, r0
 800162c:	2b00      	cmp	r3, #0
 800162e:	d001      	beq.n	8001634 <SystemClock_Config+0xc0>
  {
    Error_Handler();
 8001630:	f002 fea2 	bl	8004378 <Error_Handler>
  }
}
 8001634:	bf00      	nop
 8001636:	3750      	adds	r7, #80	; 0x50
 8001638:	46bd      	mov	sp, r7
 800163a:	bd80      	pop	{r7, pc}
 800163c:	40023800 	.word	0x40023800
 8001640:	40007000 	.word	0x40007000

08001644 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001644:	b580      	push	{r7, lr}
 8001646:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001648:	4b12      	ldr	r3, [pc, #72]	; (8001694 <MX_I2C1_Init+0x50>)
 800164a:	4a13      	ldr	r2, [pc, #76]	; (8001698 <MX_I2C1_Init+0x54>)
 800164c:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 800164e:	4b11      	ldr	r3, [pc, #68]	; (8001694 <MX_I2C1_Init+0x50>)
 8001650:	4a12      	ldr	r2, [pc, #72]	; (800169c <MX_I2C1_Init+0x58>)
 8001652:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001654:	4b0f      	ldr	r3, [pc, #60]	; (8001694 <MX_I2C1_Init+0x50>)
 8001656:	2200      	movs	r2, #0
 8001658:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 800165a:	4b0e      	ldr	r3, [pc, #56]	; (8001694 <MX_I2C1_Init+0x50>)
 800165c:	2200      	movs	r2, #0
 800165e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001660:	4b0c      	ldr	r3, [pc, #48]	; (8001694 <MX_I2C1_Init+0x50>)
 8001662:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001666:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001668:	4b0a      	ldr	r3, [pc, #40]	; (8001694 <MX_I2C1_Init+0x50>)
 800166a:	2200      	movs	r2, #0
 800166c:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 800166e:	4b09      	ldr	r3, [pc, #36]	; (8001694 <MX_I2C1_Init+0x50>)
 8001670:	2200      	movs	r2, #0
 8001672:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001674:	4b07      	ldr	r3, [pc, #28]	; (8001694 <MX_I2C1_Init+0x50>)
 8001676:	2200      	movs	r2, #0
 8001678:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800167a:	4b06      	ldr	r3, [pc, #24]	; (8001694 <MX_I2C1_Init+0x50>)
 800167c:	2200      	movs	r2, #0
 800167e:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001680:	4804      	ldr	r0, [pc, #16]	; (8001694 <MX_I2C1_Init+0x50>)
 8001682:	f004 f921 	bl	80058c8 <HAL_I2C_Init>
 8001686:	4603      	mov	r3, r0
 8001688:	2b00      	cmp	r3, #0
 800168a:	d001      	beq.n	8001690 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 800168c:	f002 fe74 	bl	8004378 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001690:	bf00      	nop
 8001692:	bd80      	pop	{r7, pc}
 8001694:	200001c4 	.word	0x200001c4
 8001698:	40005400 	.word	0x40005400
 800169c:	00061a80 	.word	0x00061a80

080016a0 <MX_SPI3_Init>:
  * @brief SPI3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI3_Init(void)
{
 80016a0:	b580      	push	{r7, lr}
 80016a2:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  /* SPI3 parameter configuration*/
  hspi3.Instance = SPI3;
 80016a4:	4b17      	ldr	r3, [pc, #92]	; (8001704 <MX_SPI3_Init+0x64>)
 80016a6:	4a18      	ldr	r2, [pc, #96]	; (8001708 <MX_SPI3_Init+0x68>)
 80016a8:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 80016aa:	4b16      	ldr	r3, [pc, #88]	; (8001704 <MX_SPI3_Init+0x64>)
 80016ac:	f44f 7282 	mov.w	r2, #260	; 0x104
 80016b0:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 80016b2:	4b14      	ldr	r3, [pc, #80]	; (8001704 <MX_SPI3_Init+0x64>)
 80016b4:	2200      	movs	r2, #0
 80016b6:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 80016b8:	4b12      	ldr	r3, [pc, #72]	; (8001704 <MX_SPI3_Init+0x64>)
 80016ba:	2200      	movs	r2, #0
 80016bc:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 80016be:	4b11      	ldr	r3, [pc, #68]	; (8001704 <MX_SPI3_Init+0x64>)
 80016c0:	2200      	movs	r2, #0
 80016c2:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 80016c4:	4b0f      	ldr	r3, [pc, #60]	; (8001704 <MX_SPI3_Init+0x64>)
 80016c6:	2200      	movs	r2, #0
 80016c8:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 80016ca:	4b0e      	ldr	r3, [pc, #56]	; (8001704 <MX_SPI3_Init+0x64>)
 80016cc:	f44f 7200 	mov.w	r2, #512	; 0x200
 80016d0:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 80016d2:	4b0c      	ldr	r3, [pc, #48]	; (8001704 <MX_SPI3_Init+0x64>)
 80016d4:	2220      	movs	r2, #32
 80016d6:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80016d8:	4b0a      	ldr	r3, [pc, #40]	; (8001704 <MX_SPI3_Init+0x64>)
 80016da:	2200      	movs	r2, #0
 80016dc:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 80016de:	4b09      	ldr	r3, [pc, #36]	; (8001704 <MX_SPI3_Init+0x64>)
 80016e0:	2200      	movs	r2, #0
 80016e2:	625a      	str	r2, [r3, #36]	; 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80016e4:	4b07      	ldr	r3, [pc, #28]	; (8001704 <MX_SPI3_Init+0x64>)
 80016e6:	2200      	movs	r2, #0
 80016e8:	629a      	str	r2, [r3, #40]	; 0x28
  hspi3.Init.CRCPolynomial = 10;
 80016ea:	4b06      	ldr	r3, [pc, #24]	; (8001704 <MX_SPI3_Init+0x64>)
 80016ec:	220a      	movs	r2, #10
 80016ee:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 80016f0:	4804      	ldr	r0, [pc, #16]	; (8001704 <MX_SPI3_Init+0x64>)
 80016f2:	f007 f9f1 	bl	8008ad8 <HAL_SPI_Init>
 80016f6:	4603      	mov	r3, r0
 80016f8:	2b00      	cmp	r3, #0
 80016fa:	d001      	beq.n	8001700 <MX_SPI3_Init+0x60>
  {
    Error_Handler();
 80016fc:	f002 fe3c 	bl	8004378 <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 8001700:	bf00      	nop
 8001702:	bd80      	pop	{r7, pc}
 8001704:	20000218 	.word	0x20000218
 8001708:	40003c00 	.word	0x40003c00

0800170c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 800170c:	b580      	push	{r7, lr}
 800170e:	b08e      	sub	sp, #56	; 0x38
 8001710:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001712:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001716:	2200      	movs	r2, #0
 8001718:	601a      	str	r2, [r3, #0]
 800171a:	605a      	str	r2, [r3, #4]
 800171c:	609a      	str	r2, [r3, #8]
 800171e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001720:	f107 0320 	add.w	r3, r7, #32
 8001724:	2200      	movs	r2, #0
 8001726:	601a      	str	r2, [r3, #0]
 8001728:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800172a:	1d3b      	adds	r3, r7, #4
 800172c:	2200      	movs	r2, #0
 800172e:	601a      	str	r2, [r3, #0]
 8001730:	605a      	str	r2, [r3, #4]
 8001732:	609a      	str	r2, [r3, #8]
 8001734:	60da      	str	r2, [r3, #12]
 8001736:	611a      	str	r2, [r3, #16]
 8001738:	615a      	str	r2, [r3, #20]
 800173a:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800173c:	4b32      	ldr	r3, [pc, #200]	; (8001808 <MX_TIM2_Init+0xfc>)
 800173e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001742:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 99;
 8001744:	4b30      	ldr	r3, [pc, #192]	; (8001808 <MX_TIM2_Init+0xfc>)
 8001746:	2263      	movs	r2, #99	; 0x63
 8001748:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800174a:	4b2f      	ldr	r3, [pc, #188]	; (8001808 <MX_TIM2_Init+0xfc>)
 800174c:	2200      	movs	r2, #0
 800174e:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9999;
 8001750:	4b2d      	ldr	r3, [pc, #180]	; (8001808 <MX_TIM2_Init+0xfc>)
 8001752:	f242 720f 	movw	r2, #9999	; 0x270f
 8001756:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001758:	4b2b      	ldr	r3, [pc, #172]	; (8001808 <MX_TIM2_Init+0xfc>)
 800175a:	2200      	movs	r2, #0
 800175c:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800175e:	4b2a      	ldr	r3, [pc, #168]	; (8001808 <MX_TIM2_Init+0xfc>)
 8001760:	2200      	movs	r2, #0
 8001762:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001764:	4828      	ldr	r0, [pc, #160]	; (8001808 <MX_TIM2_Init+0xfc>)
 8001766:	f007 fec7 	bl	80094f8 <HAL_TIM_Base_Init>
 800176a:	4603      	mov	r3, r0
 800176c:	2b00      	cmp	r3, #0
 800176e:	d001      	beq.n	8001774 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 8001770:	f002 fe02 	bl	8004378 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001774:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001778:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800177a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800177e:	4619      	mov	r1, r3
 8001780:	4821      	ldr	r0, [pc, #132]	; (8001808 <MX_TIM2_Init+0xfc>)
 8001782:	f008 fa99 	bl	8009cb8 <HAL_TIM_ConfigClockSource>
 8001786:	4603      	mov	r3, r0
 8001788:	2b00      	cmp	r3, #0
 800178a:	d001      	beq.n	8001790 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 800178c:	f002 fdf4 	bl	8004378 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001790:	481d      	ldr	r0, [pc, #116]	; (8001808 <MX_TIM2_Init+0xfc>)
 8001792:	f007 ffbd 	bl	8009710 <HAL_TIM_PWM_Init>
 8001796:	4603      	mov	r3, r0
 8001798:	2b00      	cmp	r3, #0
 800179a:	d001      	beq.n	80017a0 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 800179c:	f002 fdec 	bl	8004378 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80017a0:	2300      	movs	r3, #0
 80017a2:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80017a4:	2300      	movs	r3, #0
 80017a6:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80017a8:	f107 0320 	add.w	r3, r7, #32
 80017ac:	4619      	mov	r1, r3
 80017ae:	4816      	ldr	r0, [pc, #88]	; (8001808 <MX_TIM2_Init+0xfc>)
 80017b0:	f008 fe3e 	bl	800a430 <HAL_TIMEx_MasterConfigSynchronization>
 80017b4:	4603      	mov	r3, r0
 80017b6:	2b00      	cmp	r3, #0
 80017b8:	d001      	beq.n	80017be <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 80017ba:	f002 fddd 	bl	8004378 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80017be:	2360      	movs	r3, #96	; 0x60
 80017c0:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80017c2:	2300      	movs	r3, #0
 80017c4:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80017c6:	2300      	movs	r3, #0
 80017c8:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80017ca:	2300      	movs	r3, #0
 80017cc:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80017ce:	1d3b      	adds	r3, r7, #4
 80017d0:	2200      	movs	r2, #0
 80017d2:	4619      	mov	r1, r3
 80017d4:	480c      	ldr	r0, [pc, #48]	; (8001808 <MX_TIM2_Init+0xfc>)
 80017d6:	f008 f9ad 	bl	8009b34 <HAL_TIM_PWM_ConfigChannel>
 80017da:	4603      	mov	r3, r0
 80017dc:	2b00      	cmp	r3, #0
 80017de:	d001      	beq.n	80017e4 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 80017e0:	f002 fdca 	bl	8004378 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80017e4:	1d3b      	adds	r3, r7, #4
 80017e6:	2204      	movs	r2, #4
 80017e8:	4619      	mov	r1, r3
 80017ea:	4807      	ldr	r0, [pc, #28]	; (8001808 <MX_TIM2_Init+0xfc>)
 80017ec:	f008 f9a2 	bl	8009b34 <HAL_TIM_PWM_ConfigChannel>
 80017f0:	4603      	mov	r3, r0
 80017f2:	2b00      	cmp	r3, #0
 80017f4:	d001      	beq.n	80017fa <MX_TIM2_Init+0xee>
  {
    Error_Handler();
 80017f6:	f002 fdbf 	bl	8004378 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 80017fa:	4803      	ldr	r0, [pc, #12]	; (8001808 <MX_TIM2_Init+0xfc>)
 80017fc:	f002 ff3a 	bl	8004674 <HAL_TIM_MspPostInit>

}
 8001800:	bf00      	nop
 8001802:	3738      	adds	r7, #56	; 0x38
 8001804:	46bd      	mov	sp, r7
 8001806:	bd80      	pop	{r7, pc}
 8001808:	20000330 	.word	0x20000330

0800180c <MX_TIM11_Init>:
  * @brief TIM11 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM11_Init(void)
{
 800180c:	b580      	push	{r7, lr}
 800180e:	af00      	add	r7, sp, #0
  /* USER CODE END TIM11_Init 0 */

  /* USER CODE BEGIN TIM11_Init 1 */

  /* USER CODE END TIM11_Init 1 */
  htim11.Instance = TIM11;
 8001810:	4b0e      	ldr	r3, [pc, #56]	; (800184c <MX_TIM11_Init+0x40>)
 8001812:	4a0f      	ldr	r2, [pc, #60]	; (8001850 <MX_TIM11_Init+0x44>)
 8001814:	601a      	str	r2, [r3, #0]
  htim11.Init.Prescaler = 99;
 8001816:	4b0d      	ldr	r3, [pc, #52]	; (800184c <MX_TIM11_Init+0x40>)
 8001818:	2263      	movs	r2, #99	; 0x63
 800181a:	605a      	str	r2, [r3, #4]
  htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 800181c:	4b0b      	ldr	r3, [pc, #44]	; (800184c <MX_TIM11_Init+0x40>)
 800181e:	2200      	movs	r2, #0
 8001820:	609a      	str	r2, [r3, #8]
  htim11.Init.Period = 65535;
 8001822:	4b0a      	ldr	r3, [pc, #40]	; (800184c <MX_TIM11_Init+0x40>)
 8001824:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001828:	60da      	str	r2, [r3, #12]
  htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800182a:	4b08      	ldr	r3, [pc, #32]	; (800184c <MX_TIM11_Init+0x40>)
 800182c:	2200      	movs	r2, #0
 800182e:	611a      	str	r2, [r3, #16]
  htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001830:	4b06      	ldr	r3, [pc, #24]	; (800184c <MX_TIM11_Init+0x40>)
 8001832:	2200      	movs	r2, #0
 8001834:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim11) != HAL_OK)
 8001836:	4805      	ldr	r0, [pc, #20]	; (800184c <MX_TIM11_Init+0x40>)
 8001838:	f007 fe5e 	bl	80094f8 <HAL_TIM_Base_Init>
 800183c:	4603      	mov	r3, r0
 800183e:	2b00      	cmp	r3, #0
 8001840:	d001      	beq.n	8001846 <MX_TIM11_Init+0x3a>
  {
    Error_Handler();
 8001842:	f002 fd99 	bl	8004378 <Error_Handler>
  }
  /* USER CODE BEGIN TIM11_Init 2 */

  /* USER CODE END TIM11_Init 2 */

}
 8001846:	bf00      	nop
 8001848:	bd80      	pop	{r7, pc}
 800184a:	bf00      	nop
 800184c:	20000378 	.word	0x20000378
 8001850:	40014800 	.word	0x40014800

08001854 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001854:	b580      	push	{r7, lr}
 8001856:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001858:	4b12      	ldr	r3, [pc, #72]	; (80018a4 <MX_USART2_UART_Init+0x50>)
 800185a:	4a13      	ldr	r2, [pc, #76]	; (80018a8 <MX_USART2_UART_Init+0x54>)
 800185c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 512000;
 800185e:	4b11      	ldr	r3, [pc, #68]	; (80018a4 <MX_USART2_UART_Init+0x50>)
 8001860:	f44f 22fa 	mov.w	r2, #512000	; 0x7d000
 8001864:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_9B;
 8001866:	4b0f      	ldr	r3, [pc, #60]	; (80018a4 <MX_USART2_UART_Init+0x50>)
 8001868:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800186c:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800186e:	4b0d      	ldr	r3, [pc, #52]	; (80018a4 <MX_USART2_UART_Init+0x50>)
 8001870:	2200      	movs	r2, #0
 8001872:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_EVEN;
 8001874:	4b0b      	ldr	r3, [pc, #44]	; (80018a4 <MX_USART2_UART_Init+0x50>)
 8001876:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800187a:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800187c:	4b09      	ldr	r3, [pc, #36]	; (80018a4 <MX_USART2_UART_Init+0x50>)
 800187e:	220c      	movs	r2, #12
 8001880:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001882:	4b08      	ldr	r3, [pc, #32]	; (80018a4 <MX_USART2_UART_Init+0x50>)
 8001884:	2200      	movs	r2, #0
 8001886:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001888:	4b06      	ldr	r3, [pc, #24]	; (80018a4 <MX_USART2_UART_Init+0x50>)
 800188a:	2200      	movs	r2, #0
 800188c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800188e:	4805      	ldr	r0, [pc, #20]	; (80018a4 <MX_USART2_UART_Init+0x50>)
 8001890:	f008 fe50 	bl	800a534 <HAL_UART_Init>
 8001894:	4603      	mov	r3, r0
 8001896:	2b00      	cmp	r3, #0
 8001898:	d001      	beq.n	800189e <MX_USART2_UART_Init+0x4a>
  {
    Error_Handler();
 800189a:	f002 fd6d 	bl	8004378 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800189e:	bf00      	nop
 80018a0:	bd80      	pop	{r7, pc}
 80018a2:	bf00      	nop
 80018a4:	200003c0 	.word	0x200003c0
 80018a8:	40004400 	.word	0x40004400

080018ac <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80018ac:	b580      	push	{r7, lr}
 80018ae:	b082      	sub	sp, #8
 80018b0:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80018b2:	2300      	movs	r3, #0
 80018b4:	607b      	str	r3, [r7, #4]
 80018b6:	4b18      	ldr	r3, [pc, #96]	; (8001918 <MX_DMA_Init+0x6c>)
 80018b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018ba:	4a17      	ldr	r2, [pc, #92]	; (8001918 <MX_DMA_Init+0x6c>)
 80018bc:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80018c0:	6313      	str	r3, [r2, #48]	; 0x30
 80018c2:	4b15      	ldr	r3, [pc, #84]	; (8001918 <MX_DMA_Init+0x6c>)
 80018c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018c6:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80018ca:	607b      	str	r3, [r7, #4]
 80018cc:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 80018ce:	2200      	movs	r2, #0
 80018d0:	2100      	movs	r1, #0
 80018d2:	200b      	movs	r0, #11
 80018d4:	f003 f9e3 	bl	8004c9e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 80018d8:	200b      	movs	r0, #11
 80018da:	f003 f9fc 	bl	8004cd6 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 80018de:	2200      	movs	r2, #0
 80018e0:	2100      	movs	r1, #0
 80018e2:	2010      	movs	r0, #16
 80018e4:	f003 f9db 	bl	8004c9e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 80018e8:	2010      	movs	r0, #16
 80018ea:	f003 f9f4 	bl	8004cd6 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream6_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 80018ee:	2200      	movs	r2, #0
 80018f0:	2100      	movs	r1, #0
 80018f2:	2011      	movs	r0, #17
 80018f4:	f003 f9d3 	bl	8004c9e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 80018f8:	2011      	movs	r0, #17
 80018fa:	f003 f9ec 	bl	8004cd6 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 0, 0);
 80018fe:	2200      	movs	r2, #0
 8001900:	2100      	movs	r1, #0
 8001902:	202f      	movs	r0, #47	; 0x2f
 8001904:	f003 f9cb 	bl	8004c9e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 8001908:	202f      	movs	r0, #47	; 0x2f
 800190a:	f003 f9e4 	bl	8004cd6 <HAL_NVIC_EnableIRQ>

}
 800190e:	bf00      	nop
 8001910:	3708      	adds	r7, #8
 8001912:	46bd      	mov	sp, r7
 8001914:	bd80      	pop	{r7, pc}
 8001916:	bf00      	nop
 8001918:	40023800 	.word	0x40023800

0800191c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800191c:	b580      	push	{r7, lr}
 800191e:	b08a      	sub	sp, #40	; 0x28
 8001920:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001922:	f107 0314 	add.w	r3, r7, #20
 8001926:	2200      	movs	r2, #0
 8001928:	601a      	str	r2, [r3, #0]
 800192a:	605a      	str	r2, [r3, #4]
 800192c:	609a      	str	r2, [r3, #8]
 800192e:	60da      	str	r2, [r3, #12]
 8001930:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001932:	2300      	movs	r3, #0
 8001934:	613b      	str	r3, [r7, #16]
 8001936:	4b51      	ldr	r3, [pc, #324]	; (8001a7c <MX_GPIO_Init+0x160>)
 8001938:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800193a:	4a50      	ldr	r2, [pc, #320]	; (8001a7c <MX_GPIO_Init+0x160>)
 800193c:	f043 0304 	orr.w	r3, r3, #4
 8001940:	6313      	str	r3, [r2, #48]	; 0x30
 8001942:	4b4e      	ldr	r3, [pc, #312]	; (8001a7c <MX_GPIO_Init+0x160>)
 8001944:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001946:	f003 0304 	and.w	r3, r3, #4
 800194a:	613b      	str	r3, [r7, #16]
 800194c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800194e:	2300      	movs	r3, #0
 8001950:	60fb      	str	r3, [r7, #12]
 8001952:	4b4a      	ldr	r3, [pc, #296]	; (8001a7c <MX_GPIO_Init+0x160>)
 8001954:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001956:	4a49      	ldr	r2, [pc, #292]	; (8001a7c <MX_GPIO_Init+0x160>)
 8001958:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800195c:	6313      	str	r3, [r2, #48]	; 0x30
 800195e:	4b47      	ldr	r3, [pc, #284]	; (8001a7c <MX_GPIO_Init+0x160>)
 8001960:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001962:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001966:	60fb      	str	r3, [r7, #12]
 8001968:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800196a:	2300      	movs	r3, #0
 800196c:	60bb      	str	r3, [r7, #8]
 800196e:	4b43      	ldr	r3, [pc, #268]	; (8001a7c <MX_GPIO_Init+0x160>)
 8001970:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001972:	4a42      	ldr	r2, [pc, #264]	; (8001a7c <MX_GPIO_Init+0x160>)
 8001974:	f043 0301 	orr.w	r3, r3, #1
 8001978:	6313      	str	r3, [r2, #48]	; 0x30
 800197a:	4b40      	ldr	r3, [pc, #256]	; (8001a7c <MX_GPIO_Init+0x160>)
 800197c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800197e:	f003 0301 	and.w	r3, r3, #1
 8001982:	60bb      	str	r3, [r7, #8]
 8001984:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001986:	2300      	movs	r3, #0
 8001988:	607b      	str	r3, [r7, #4]
 800198a:	4b3c      	ldr	r3, [pc, #240]	; (8001a7c <MX_GPIO_Init+0x160>)
 800198c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800198e:	4a3b      	ldr	r2, [pc, #236]	; (8001a7c <MX_GPIO_Init+0x160>)
 8001990:	f043 0302 	orr.w	r3, r3, #2
 8001994:	6313      	str	r3, [r2, #48]	; 0x30
 8001996:	4b39      	ldr	r3, [pc, #228]	; (8001a7c <MX_GPIO_Init+0x160>)
 8001998:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800199a:	f003 0302 	and.w	r3, r3, #2
 800199e:	607b      	str	r3, [r7, #4]
 80019a0:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|GPIO_PIN_9, GPIO_PIN_RESET);
 80019a2:	2200      	movs	r2, #0
 80019a4:	f44f 7108 	mov.w	r1, #544	; 0x220
 80019a8:	4835      	ldr	r0, [pc, #212]	; (8001a80 <MX_GPIO_Init+0x164>)
 80019aa:	f003 ff5b 	bl	8005864 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SS_GPIO_Port, SS_Pin, GPIO_PIN_RESET);
 80019ae:	2200      	movs	r2, #0
 80019b0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80019b4:	4833      	ldr	r0, [pc, #204]	; (8001a84 <MX_GPIO_Init+0x168>)
 80019b6:	f003 ff55 	bl	8005864 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 80019ba:	2200      	movs	r2, #0
 80019bc:	2180      	movs	r1, #128	; 0x80
 80019be:	4832      	ldr	r0, [pc, #200]	; (8001a88 <MX_GPIO_Init+0x16c>)
 80019c0:	f003 ff50 	bl	8005864 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 80019c4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80019c8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80019ca:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 80019ce:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019d0:	2300      	movs	r3, #0
 80019d2:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80019d4:	f107 0314 	add.w	r3, r7, #20
 80019d8:	4619      	mov	r1, r3
 80019da:	482b      	ldr	r0, [pc, #172]	; (8001a88 <MX_GPIO_Init+0x16c>)
 80019dc:	f003 fda6 	bl	800552c <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin PA9 */
  GPIO_InitStruct.Pin = LD2_Pin|GPIO_PIN_9;
 80019e0:	f44f 7308 	mov.w	r3, #544	; 0x220
 80019e4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80019e6:	2301      	movs	r3, #1
 80019e8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019ea:	2300      	movs	r3, #0
 80019ec:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019ee:	2300      	movs	r3, #0
 80019f0:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019f2:	f107 0314 	add.w	r3, r7, #20
 80019f6:	4619      	mov	r1, r3
 80019f8:	4821      	ldr	r0, [pc, #132]	; (8001a80 <MX_GPIO_Init+0x164>)
 80019fa:	f003 fd97 	bl	800552c <HAL_GPIO_Init>

  /*Configure GPIO pin : SS_Pin */
  GPIO_InitStruct.Pin = SS_Pin;
 80019fe:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001a02:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a04:	2301      	movs	r3, #1
 8001a06:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a08:	2300      	movs	r3, #0
 8001a0a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a0c:	2300      	movs	r3, #0
 8001a0e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SS_GPIO_Port, &GPIO_InitStruct);
 8001a10:	f107 0314 	add.w	r3, r7, #20
 8001a14:	4619      	mov	r1, r3
 8001a16:	481b      	ldr	r0, [pc, #108]	; (8001a84 <MX_GPIO_Init+0x168>)
 8001a18:	f003 fd88 	bl	800552c <HAL_GPIO_Init>

  /*Configure GPIO pin : PC7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001a1c:	2380      	movs	r3, #128	; 0x80
 8001a1e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a20:	2301      	movs	r3, #1
 8001a22:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a24:	2300      	movs	r3, #0
 8001a26:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a28:	2300      	movs	r3, #0
 8001a2a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a2c:	f107 0314 	add.w	r3, r7, #20
 8001a30:	4619      	mov	r1, r3
 8001a32:	4815      	ldr	r0, [pc, #84]	; (8001a88 <MX_GPIO_Init+0x16c>)
 8001a34:	f003 fd7a 	bl	800552c <HAL_GPIO_Init>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001a38:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001a3c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001a3e:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8001a42:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a44:	2300      	movs	r3, #0
 8001a46:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a48:	f107 0314 	add.w	r3, r7, #20
 8001a4c:	4619      	mov	r1, r3
 8001a4e:	480c      	ldr	r0, [pc, #48]	; (8001a80 <MX_GPIO_Init+0x164>)
 8001a50:	f003 fd6c 	bl	800552c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8001a54:	2200      	movs	r2, #0
 8001a56:	2100      	movs	r1, #0
 8001a58:	2017      	movs	r0, #23
 8001a5a:	f003 f920 	bl	8004c9e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001a5e:	2017      	movs	r0, #23
 8001a60:	f003 f939 	bl	8004cd6 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8001a64:	2200      	movs	r2, #0
 8001a66:	2100      	movs	r1, #0
 8001a68:	2028      	movs	r0, #40	; 0x28
 8001a6a:	f003 f918 	bl	8004c9e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001a6e:	2028      	movs	r0, #40	; 0x28
 8001a70:	f003 f931 	bl	8004cd6 <HAL_NVIC_EnableIRQ>

}
 8001a74:	bf00      	nop
 8001a76:	3728      	adds	r7, #40	; 0x28
 8001a78:	46bd      	mov	sp, r7
 8001a7a:	bd80      	pop	{r7, pc}
 8001a7c:	40023800 	.word	0x40023800
 8001a80:	40020000 	.word	0x40020000
 8001a84:	40020400 	.word	0x40020400
 8001a88:	40020800 	.word	0x40020800
 8001a8c:	00000000 	.word	0x00000000

08001a90 <CascadeController>:

/* USER CODE BEGIN 4 */

//----------------------------------------------------------------< CONTROL >
void CascadeController()
{
 8001a90:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8001a94:	b088      	sub	sp, #32
 8001a96:	af00      	add	r7, sp, #0
			if(kal_velocity < tra_velo){
				kal_velocity = tra_velo;
			}
		}
	}*/
	if(start_tra == 2){
 8001a98:	4b93      	ldr	r3, [pc, #588]	; (8001ce8 <CascadeController+0x258>)
 8001a9a:	781b      	ldrb	r3, [r3, #0]
 8001a9c:	2b02      	cmp	r3, #2
 8001a9e:	d115      	bne.n	8001acc <CascadeController+0x3c>
		pos_Kp = 7.07697250571067;
 8001aa0:	4b92      	ldr	r3, [pc, #584]	; (8001cec <CascadeController+0x25c>)
 8001aa2:	4a93      	ldr	r2, [pc, #588]	; (8001cf0 <CascadeController+0x260>)
 8001aa4:	601a      	str	r2, [r3, #0]
		pos_Ki = 3.71617437483172;
 8001aa6:	4b93      	ldr	r3, [pc, #588]	; (8001cf4 <CascadeController+0x264>)
 8001aa8:	4a93      	ldr	r2, [pc, #588]	; (8001cf8 <CascadeController+0x268>)
 8001aaa:	601a      	str	r2, [r3, #0]
		pos_Kd = 2.25445435315971;
 8001aac:	4b93      	ldr	r3, [pc, #588]	; (8001cfc <CascadeController+0x26c>)
 8001aae:	4a94      	ldr	r2, [pc, #592]	; (8001d00 <CascadeController+0x270>)
 8001ab0:	601a      	str	r2, [r3, #0]
		velo_Kp = 1.5;
 8001ab2:	4b94      	ldr	r3, [pc, #592]	; (8001d04 <CascadeController+0x274>)
 8001ab4:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 8001ab8:	601a      	str	r2, [r3, #0]
		velo_Ki = 0;
 8001aba:	4b93      	ldr	r3, [pc, #588]	; (8001d08 <CascadeController+0x278>)
 8001abc:	f04f 0200 	mov.w	r2, #0
 8001ac0:	601a      	str	r2, [r3, #0]
		velo_Kd = 0;
 8001ac2:	4b92      	ldr	r3, [pc, #584]	; (8001d0c <CascadeController+0x27c>)
 8001ac4:	f04f 0200 	mov.w	r2, #0
 8001ac8:	601a      	str	r2, [r3, #0]
 8001aca:	e014      	b.n	8001af6 <CascadeController+0x66>
	}
	else{
		pos_Kp = 7.07697250571067;
 8001acc:	4b87      	ldr	r3, [pc, #540]	; (8001cec <CascadeController+0x25c>)
 8001ace:	4a88      	ldr	r2, [pc, #544]	; (8001cf0 <CascadeController+0x260>)
 8001ad0:	601a      	str	r2, [r3, #0]
		pos_Ki = 3.71617437483172;
 8001ad2:	4b88      	ldr	r3, [pc, #544]	; (8001cf4 <CascadeController+0x264>)
 8001ad4:	4a88      	ldr	r2, [pc, #544]	; (8001cf8 <CascadeController+0x268>)
 8001ad6:	601a      	str	r2, [r3, #0]
		pos_Kd = 2.2545435315971;
 8001ad8:	4b88      	ldr	r3, [pc, #544]	; (8001cfc <CascadeController+0x26c>)
 8001ada:	4a8d      	ldr	r2, [pc, #564]	; (8001d10 <CascadeController+0x280>)
 8001adc:	601a      	str	r2, [r3, #0]
		velo_Kp = 1.5;
 8001ade:	4b89      	ldr	r3, [pc, #548]	; (8001d04 <CascadeController+0x274>)
 8001ae0:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 8001ae4:	601a      	str	r2, [r3, #0]
		velo_Ki = 0;
 8001ae6:	4b88      	ldr	r3, [pc, #544]	; (8001d08 <CascadeController+0x278>)
 8001ae8:	f04f 0200 	mov.w	r2, #0
 8001aec:	601a      	str	r2, [r3, #0]
		velo_Kd = 0;
 8001aee:	4b87      	ldr	r3, [pc, #540]	; (8001d0c <CascadeController+0x27c>)
 8001af0:	f04f 0200 	mov.w	r2, #0
 8001af4:	601a      	str	r2, [r3, #0]
	}
	//position control******
	float error2 = tra_pos - current_rad_wrap; //setpoint - new_Data
 8001af6:	4b87      	ldr	r3, [pc, #540]	; (8001d14 <CascadeController+0x284>)
 8001af8:	ed93 7a00 	vldr	s14, [r3]
 8001afc:	4b86      	ldr	r3, [pc, #536]	; (8001d18 <CascadeController+0x288>)
 8001afe:	edd3 7a00 	vldr	s15, [r3]
 8001b02:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001b06:	edc7 7a03 	vstr	s15, [r7, #12]
	float proportional2 = pos_Kp * error2;
 8001b0a:	4b78      	ldr	r3, [pc, #480]	; (8001cec <CascadeController+0x25c>)
 8001b0c:	edd3 7a00 	vldr	s15, [r3]
 8001b10:	ed97 7a03 	vldr	s14, [r7, #12]
 8001b14:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001b18:	edc7 7a02 	vstr	s15, [r7, #8]
	integrator2 = integrator2 + (0.5*pos_Ki*dt*(error2+prevError2));
 8001b1c:	4b7f      	ldr	r3, [pc, #508]	; (8001d1c <CascadeController+0x28c>)
 8001b1e:	681b      	ldr	r3, [r3, #0]
 8001b20:	4618      	mov	r0, r3
 8001b22:	f7fe fcbd 	bl	80004a0 <__aeabi_f2d>
 8001b26:	4604      	mov	r4, r0
 8001b28:	460d      	mov	r5, r1
 8001b2a:	4b72      	ldr	r3, [pc, #456]	; (8001cf4 <CascadeController+0x264>)
 8001b2c:	681b      	ldr	r3, [r3, #0]
 8001b2e:	4618      	mov	r0, r3
 8001b30:	f7fe fcb6 	bl	80004a0 <__aeabi_f2d>
 8001b34:	f04f 0200 	mov.w	r2, #0
 8001b38:	4b79      	ldr	r3, [pc, #484]	; (8001d20 <CascadeController+0x290>)
 8001b3a:	f7fe fd09 	bl	8000550 <__aeabi_dmul>
 8001b3e:	4602      	mov	r2, r0
 8001b40:	460b      	mov	r3, r1
 8001b42:	4610      	mov	r0, r2
 8001b44:	4619      	mov	r1, r3
 8001b46:	a364      	add	r3, pc, #400	; (adr r3, 8001cd8 <CascadeController+0x248>)
 8001b48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001b4c:	f7fe fd00 	bl	8000550 <__aeabi_dmul>
 8001b50:	4602      	mov	r2, r0
 8001b52:	460b      	mov	r3, r1
 8001b54:	4690      	mov	r8, r2
 8001b56:	4699      	mov	r9, r3
 8001b58:	4b72      	ldr	r3, [pc, #456]	; (8001d24 <CascadeController+0x294>)
 8001b5a:	ed93 7a00 	vldr	s14, [r3]
 8001b5e:	edd7 7a03 	vldr	s15, [r7, #12]
 8001b62:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b66:	ee17 0a90 	vmov	r0, s15
 8001b6a:	f7fe fc99 	bl	80004a0 <__aeabi_f2d>
 8001b6e:	4602      	mov	r2, r0
 8001b70:	460b      	mov	r3, r1
 8001b72:	4640      	mov	r0, r8
 8001b74:	4649      	mov	r1, r9
 8001b76:	f7fe fceb 	bl	8000550 <__aeabi_dmul>
 8001b7a:	4602      	mov	r2, r0
 8001b7c:	460b      	mov	r3, r1
 8001b7e:	4620      	mov	r0, r4
 8001b80:	4629      	mov	r1, r5
 8001b82:	f7fe fb2f 	bl	80001e4 <__adddf3>
 8001b86:	4602      	mov	r2, r0
 8001b88:	460b      	mov	r3, r1
 8001b8a:	4610      	mov	r0, r2
 8001b8c:	4619      	mov	r1, r3
 8001b8e:	f7fe ffaf 	bl	8000af0 <__aeabi_d2f>
 8001b92:	4603      	mov	r3, r0
 8001b94:	4a61      	ldr	r2, [pc, #388]	; (8001d1c <CascadeController+0x28c>)
 8001b96:	6013      	str	r3, [r2, #0]
	float limMinInt2, limMaxInt2;
	if(limMax > proportional2){
 8001b98:	4b63      	ldr	r3, [pc, #396]	; (8001d28 <CascadeController+0x298>)
 8001b9a:	edd3 7a00 	vldr	s15, [r3]
 8001b9e:	ed97 7a02 	vldr	s14, [r7, #8]
 8001ba2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001ba6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001baa:	d509      	bpl.n	8001bc0 <CascadeController+0x130>
		limMaxInt2 = limMax - proportional2;}
 8001bac:	4b5e      	ldr	r3, [pc, #376]	; (8001d28 <CascadeController+0x298>)
 8001bae:	ed93 7a00 	vldr	s14, [r3]
 8001bb2:	edd7 7a02 	vldr	s15, [r7, #8]
 8001bb6:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001bba:	edc7 7a06 	vstr	s15, [r7, #24]
 8001bbe:	e002      	b.n	8001bc6 <CascadeController+0x136>
	else{
		limMaxInt2 = 0.0;}
 8001bc0:	f04f 0300 	mov.w	r3, #0
 8001bc4:	61bb      	str	r3, [r7, #24]
	if(limMin < proportional2){
 8001bc6:	4b59      	ldr	r3, [pc, #356]	; (8001d2c <CascadeController+0x29c>)
 8001bc8:	edd3 7a00 	vldr	s15, [r3]
 8001bcc:	ed97 7a02 	vldr	s14, [r7, #8]
 8001bd0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001bd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001bd8:	dd09      	ble.n	8001bee <CascadeController+0x15e>
		limMinInt2 = limMin - proportional2;}
 8001bda:	4b54      	ldr	r3, [pc, #336]	; (8001d2c <CascadeController+0x29c>)
 8001bdc:	ed93 7a00 	vldr	s14, [r3]
 8001be0:	edd7 7a02 	vldr	s15, [r7, #8]
 8001be4:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001be8:	edc7 7a07 	vstr	s15, [r7, #28]
 8001bec:	e002      	b.n	8001bf4 <CascadeController+0x164>
	else{
		limMinInt2 = 0.0;}
 8001bee:	f04f 0300 	mov.w	r3, #0
 8001bf2:	61fb      	str	r3, [r7, #28]
	//Clamp integrator
	if(integrator2 > limMaxInt2){
 8001bf4:	4b49      	ldr	r3, [pc, #292]	; (8001d1c <CascadeController+0x28c>)
 8001bf6:	edd3 7a00 	vldr	s15, [r3]
 8001bfa:	ed97 7a06 	vldr	s14, [r7, #24]
 8001bfe:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001c02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001c06:	d503      	bpl.n	8001c10 <CascadeController+0x180>
		integrator2 = limMaxInt2;}
 8001c08:	4a44      	ldr	r2, [pc, #272]	; (8001d1c <CascadeController+0x28c>)
 8001c0a:	69bb      	ldr	r3, [r7, #24]
 8001c0c:	6013      	str	r3, [r2, #0]
 8001c0e:	e00c      	b.n	8001c2a <CascadeController+0x19a>
	else if(integrator2 < limMinInt2){
 8001c10:	4b42      	ldr	r3, [pc, #264]	; (8001d1c <CascadeController+0x28c>)
 8001c12:	edd3 7a00 	vldr	s15, [r3]
 8001c16:	ed97 7a07 	vldr	s14, [r7, #28]
 8001c1a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001c1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001c22:	dd02      	ble.n	8001c2a <CascadeController+0x19a>
		integrator2 = limMinInt2;}
 8001c24:	4a3d      	ldr	r2, [pc, #244]	; (8001d1c <CascadeController+0x28c>)
 8001c26:	69fb      	ldr	r3, [r7, #28]
 8001c28:	6013      	str	r3, [r2, #0]

	//differentiator2 = (2*pos_Kd*(kal_position-prevMeasurement2)+(2*tuaall-dt)*differentiator2)/(2*tuaall+dt);
	differentiator2 = error2 - prevError2;
 8001c2a:	4b3e      	ldr	r3, [pc, #248]	; (8001d24 <CascadeController+0x294>)
 8001c2c:	edd3 7a00 	vldr	s15, [r3]
 8001c30:	ed97 7a03 	vldr	s14, [r7, #12]
 8001c34:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001c38:	4b3d      	ldr	r3, [pc, #244]	; (8001d30 <CascadeController+0x2a0>)
 8001c3a:	edc3 7a00 	vstr	s15, [r3]
	poscommand = proportional2 + integrator2 + (pos_Kd*differentiator2);
 8001c3e:	4b37      	ldr	r3, [pc, #220]	; (8001d1c <CascadeController+0x28c>)
 8001c40:	ed93 7a00 	vldr	s14, [r3]
 8001c44:	edd7 7a02 	vldr	s15, [r7, #8]
 8001c48:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001c4c:	4b2b      	ldr	r3, [pc, #172]	; (8001cfc <CascadeController+0x26c>)
 8001c4e:	edd3 6a00 	vldr	s13, [r3]
 8001c52:	4b37      	ldr	r3, [pc, #220]	; (8001d30 <CascadeController+0x2a0>)
 8001c54:	edd3 7a00 	vldr	s15, [r3]
 8001c58:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001c5c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c60:	4b34      	ldr	r3, [pc, #208]	; (8001d34 <CascadeController+0x2a4>)
 8001c62:	edc3 7a00 	vstr	s15, [r3]

	//velocity control*******

	if(direct == 1){
 8001c66:	4b34      	ldr	r3, [pc, #208]	; (8001d38 <CascadeController+0x2a8>)
 8001c68:	781b      	ldrb	r3, [r3, #0]
 8001c6a:	2b01      	cmp	r3, #1
 8001c6c:	d16c      	bne.n	8001d48 <CascadeController+0x2b8>
		ch_velo = kal_velocity;
 8001c6e:	4b33      	ldr	r3, [pc, #204]	; (8001d3c <CascadeController+0x2ac>)
 8001c70:	681b      	ldr	r3, [r3, #0]
 8001c72:	4a33      	ldr	r2, [pc, #204]	; (8001d40 <CascadeController+0x2b0>)
 8001c74:	6013      	str	r3, [r2, #0]
		if(ch_velo > limitOmega/9.5493){
 8001c76:	4b32      	ldr	r3, [pc, #200]	; (8001d40 <CascadeController+0x2b0>)
 8001c78:	681b      	ldr	r3, [r3, #0]
 8001c7a:	4618      	mov	r0, r3
 8001c7c:	f7fe fc10 	bl	80004a0 <__aeabi_f2d>
 8001c80:	4604      	mov	r4, r0
 8001c82:	460d      	mov	r5, r1
 8001c84:	4b2f      	ldr	r3, [pc, #188]	; (8001d44 <CascadeController+0x2b4>)
 8001c86:	681b      	ldr	r3, [r3, #0]
 8001c88:	4618      	mov	r0, r3
 8001c8a:	f7fe fc09 	bl	80004a0 <__aeabi_f2d>
 8001c8e:	a314      	add	r3, pc, #80	; (adr r3, 8001ce0 <CascadeController+0x250>)
 8001c90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c94:	f7fe fd86 	bl	80007a4 <__aeabi_ddiv>
 8001c98:	4602      	mov	r2, r0
 8001c9a:	460b      	mov	r3, r1
 8001c9c:	4620      	mov	r0, r4
 8001c9e:	4629      	mov	r1, r5
 8001ca0:	f7fe fee6 	bl	8000a70 <__aeabi_dcmpgt>
 8001ca4:	4603      	mov	r3, r0
 8001ca6:	2b00      	cmp	r3, #0
 8001ca8:	f000 8088 	beq.w	8001dbc <CascadeController+0x32c>
			kal_velocity = limitOmega/9.5493;
 8001cac:	4b25      	ldr	r3, [pc, #148]	; (8001d44 <CascadeController+0x2b4>)
 8001cae:	681b      	ldr	r3, [r3, #0]
 8001cb0:	4618      	mov	r0, r3
 8001cb2:	f7fe fbf5 	bl	80004a0 <__aeabi_f2d>
 8001cb6:	a30a      	add	r3, pc, #40	; (adr r3, 8001ce0 <CascadeController+0x250>)
 8001cb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001cbc:	f7fe fd72 	bl	80007a4 <__aeabi_ddiv>
 8001cc0:	4602      	mov	r2, r0
 8001cc2:	460b      	mov	r3, r1
 8001cc4:	4610      	mov	r0, r2
 8001cc6:	4619      	mov	r1, r3
 8001cc8:	f7fe ff12 	bl	8000af0 <__aeabi_d2f>
 8001ccc:	4603      	mov	r3, r0
 8001cce:	4a1b      	ldr	r2, [pc, #108]	; (8001d3c <CascadeController+0x2ac>)
 8001cd0:	6013      	str	r3, [r2, #0]
 8001cd2:	e073      	b.n	8001dbc <CascadeController+0x32c>
 8001cd4:	f3af 8000 	nop.w
 8001cd8:	47ae147b 	.word	0x47ae147b
 8001cdc:	3f847ae1 	.word	0x3f847ae1
 8001ce0:	d97f62b7 	.word	0xd97f62b7
 8001ce4:	4023193d 	.word	0x4023193d
 8001ce8:	200005ee 	.word	0x200005ee
 8001cec:	20000000 	.word	0x20000000
 8001cf0:	40e2768f 	.word	0x40e2768f
 8001cf4:	20000004 	.word	0x20000004
 8001cf8:	406dd5cd 	.word	0x406dd5cd
 8001cfc:	20000008 	.word	0x20000008
 8001d00:	401048fb 	.word	0x401048fb
 8001d04:	200004c4 	.word	0x200004c4
 8001d08:	200004c8 	.word	0x200004c8
 8001d0c:	200004cc 	.word	0x200004cc
 8001d10:	40104a71 	.word	0x40104a71
 8001d14:	200005c0 	.word	0x200005c0
 8001d18:	20000584 	.word	0x20000584
 8001d1c:	20000610 	.word	0x20000610
 8001d20:	3fe00000 	.word	0x3fe00000
 8001d24:	20000614 	.word	0x20000614
 8001d28:	20000034 	.word	0x20000034
 8001d2c:	20000030 	.word	0x20000030
 8001d30:	20000618 	.word	0x20000618
 8001d34:	20000624 	.word	0x20000624
 8001d38:	2000002c 	.word	0x2000002c
 8001d3c:	200005b8 	.word	0x200005b8
 8001d40:	200005f4 	.word	0x200005f4
 8001d44:	20000014 	.word	0x20000014
		}
	}
	else{
		ch_velo = kal_velocity*-1;
 8001d48:	4ba3      	ldr	r3, [pc, #652]	; (8001fd8 <CascadeController+0x548>)
 8001d4a:	edd3 7a00 	vldr	s15, [r3]
 8001d4e:	eef1 7a67 	vneg.f32	s15, s15
 8001d52:	4ba2      	ldr	r3, [pc, #648]	; (8001fdc <CascadeController+0x54c>)
 8001d54:	edc3 7a00 	vstr	s15, [r3]
		if(ch_velo > limitOmega/9.5493){
 8001d58:	4ba0      	ldr	r3, [pc, #640]	; (8001fdc <CascadeController+0x54c>)
 8001d5a:	681b      	ldr	r3, [r3, #0]
 8001d5c:	4618      	mov	r0, r3
 8001d5e:	f7fe fb9f 	bl	80004a0 <__aeabi_f2d>
 8001d62:	4604      	mov	r4, r0
 8001d64:	460d      	mov	r5, r1
 8001d66:	4b9e      	ldr	r3, [pc, #632]	; (8001fe0 <CascadeController+0x550>)
 8001d68:	681b      	ldr	r3, [r3, #0]
 8001d6a:	4618      	mov	r0, r3
 8001d6c:	f7fe fb98 	bl	80004a0 <__aeabi_f2d>
 8001d70:	a395      	add	r3, pc, #596	; (adr r3, 8001fc8 <CascadeController+0x538>)
 8001d72:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d76:	f7fe fd15 	bl	80007a4 <__aeabi_ddiv>
 8001d7a:	4602      	mov	r2, r0
 8001d7c:	460b      	mov	r3, r1
 8001d7e:	4620      	mov	r0, r4
 8001d80:	4629      	mov	r1, r5
 8001d82:	f7fe fe75 	bl	8000a70 <__aeabi_dcmpgt>
 8001d86:	4603      	mov	r3, r0
 8001d88:	2b00      	cmp	r3, #0
 8001d8a:	d017      	beq.n	8001dbc <CascadeController+0x32c>
			kal_velocity = (limitOmega/9.5493)*-1;
 8001d8c:	4b94      	ldr	r3, [pc, #592]	; (8001fe0 <CascadeController+0x550>)
 8001d8e:	681b      	ldr	r3, [r3, #0]
 8001d90:	4618      	mov	r0, r3
 8001d92:	f7fe fb85 	bl	80004a0 <__aeabi_f2d>
 8001d96:	a38c      	add	r3, pc, #560	; (adr r3, 8001fc8 <CascadeController+0x538>)
 8001d98:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d9c:	f7fe fd02 	bl	80007a4 <__aeabi_ddiv>
 8001da0:	4602      	mov	r2, r0
 8001da2:	460b      	mov	r3, r1
 8001da4:	4610      	mov	r0, r2
 8001da6:	4619      	mov	r1, r3
 8001da8:	f7fe fea2 	bl	8000af0 <__aeabi_d2f>
 8001dac:	4603      	mov	r3, r0
 8001dae:	ee07 3a90 	vmov	s15, r3
 8001db2:	eef1 7a67 	vneg.f32	s15, s15
 8001db6:	4b88      	ldr	r3, [pc, #544]	; (8001fd8 <CascadeController+0x548>)
 8001db8:	edc3 7a00 	vstr	s15, [r3]
		}
	}

	error = tra_velo+poscommand - kal_velocity; //setpoint+poscom - new_Data
 8001dbc:	4b89      	ldr	r3, [pc, #548]	; (8001fe4 <CascadeController+0x554>)
 8001dbe:	ed93 7a00 	vldr	s14, [r3]
 8001dc2:	4b89      	ldr	r3, [pc, #548]	; (8001fe8 <CascadeController+0x558>)
 8001dc4:	edd3 7a00 	vldr	s15, [r3]
 8001dc8:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001dcc:	4b82      	ldr	r3, [pc, #520]	; (8001fd8 <CascadeController+0x548>)
 8001dce:	edd3 7a00 	vldr	s15, [r3]
 8001dd2:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001dd6:	4b85      	ldr	r3, [pc, #532]	; (8001fec <CascadeController+0x55c>)
 8001dd8:	edc3 7a00 	vstr	s15, [r3]
	float proportional = velo_Kp * error;
 8001ddc:	4b84      	ldr	r3, [pc, #528]	; (8001ff0 <CascadeController+0x560>)
 8001dde:	ed93 7a00 	vldr	s14, [r3]
 8001de2:	4b82      	ldr	r3, [pc, #520]	; (8001fec <CascadeController+0x55c>)
 8001de4:	edd3 7a00 	vldr	s15, [r3]
 8001de8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001dec:	edc7 7a01 	vstr	s15, [r7, #4]
	integrator = integrator + (0.5*velo_Ki*dt*(error+prevError));
 8001df0:	4b80      	ldr	r3, [pc, #512]	; (8001ff4 <CascadeController+0x564>)
 8001df2:	681b      	ldr	r3, [r3, #0]
 8001df4:	4618      	mov	r0, r3
 8001df6:	f7fe fb53 	bl	80004a0 <__aeabi_f2d>
 8001dfa:	4604      	mov	r4, r0
 8001dfc:	460d      	mov	r5, r1
 8001dfe:	4b7e      	ldr	r3, [pc, #504]	; (8001ff8 <CascadeController+0x568>)
 8001e00:	681b      	ldr	r3, [r3, #0]
 8001e02:	4618      	mov	r0, r3
 8001e04:	f7fe fb4c 	bl	80004a0 <__aeabi_f2d>
 8001e08:	f04f 0200 	mov.w	r2, #0
 8001e0c:	4b7b      	ldr	r3, [pc, #492]	; (8001ffc <CascadeController+0x56c>)
 8001e0e:	f7fe fb9f 	bl	8000550 <__aeabi_dmul>
 8001e12:	4602      	mov	r2, r0
 8001e14:	460b      	mov	r3, r1
 8001e16:	4610      	mov	r0, r2
 8001e18:	4619      	mov	r1, r3
 8001e1a:	a36d      	add	r3, pc, #436	; (adr r3, 8001fd0 <CascadeController+0x540>)
 8001e1c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e20:	f7fe fb96 	bl	8000550 <__aeabi_dmul>
 8001e24:	4602      	mov	r2, r0
 8001e26:	460b      	mov	r3, r1
 8001e28:	4690      	mov	r8, r2
 8001e2a:	4699      	mov	r9, r3
 8001e2c:	4b6f      	ldr	r3, [pc, #444]	; (8001fec <CascadeController+0x55c>)
 8001e2e:	ed93 7a00 	vldr	s14, [r3]
 8001e32:	4b73      	ldr	r3, [pc, #460]	; (8002000 <CascadeController+0x570>)
 8001e34:	edd3 7a00 	vldr	s15, [r3]
 8001e38:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001e3c:	ee17 0a90 	vmov	r0, s15
 8001e40:	f7fe fb2e 	bl	80004a0 <__aeabi_f2d>
 8001e44:	4602      	mov	r2, r0
 8001e46:	460b      	mov	r3, r1
 8001e48:	4640      	mov	r0, r8
 8001e4a:	4649      	mov	r1, r9
 8001e4c:	f7fe fb80 	bl	8000550 <__aeabi_dmul>
 8001e50:	4602      	mov	r2, r0
 8001e52:	460b      	mov	r3, r1
 8001e54:	4620      	mov	r0, r4
 8001e56:	4629      	mov	r1, r5
 8001e58:	f7fe f9c4 	bl	80001e4 <__adddf3>
 8001e5c:	4602      	mov	r2, r0
 8001e5e:	460b      	mov	r3, r1
 8001e60:	4610      	mov	r0, r2
 8001e62:	4619      	mov	r1, r3
 8001e64:	f7fe fe44 	bl	8000af0 <__aeabi_d2f>
 8001e68:	4603      	mov	r3, r0
 8001e6a:	4a62      	ldr	r2, [pc, #392]	; (8001ff4 <CascadeController+0x564>)
 8001e6c:	6013      	str	r3, [r2, #0]
	float limMinInt, limMaxInt;
	if(limMax > proportional){
 8001e6e:	4b65      	ldr	r3, [pc, #404]	; (8002004 <CascadeController+0x574>)
 8001e70:	edd3 7a00 	vldr	s15, [r3]
 8001e74:	ed97 7a01 	vldr	s14, [r7, #4]
 8001e78:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001e7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001e80:	d509      	bpl.n	8001e96 <CascadeController+0x406>
		limMaxInt = limMax - proportional;}
 8001e82:	4b60      	ldr	r3, [pc, #384]	; (8002004 <CascadeController+0x574>)
 8001e84:	ed93 7a00 	vldr	s14, [r3]
 8001e88:	edd7 7a01 	vldr	s15, [r7, #4]
 8001e8c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001e90:	edc7 7a04 	vstr	s15, [r7, #16]
 8001e94:	e002      	b.n	8001e9c <CascadeController+0x40c>
	else{
		limMaxInt = 0.0;}
 8001e96:	f04f 0300 	mov.w	r3, #0
 8001e9a:	613b      	str	r3, [r7, #16]
	if(limMin < proportional){
 8001e9c:	4b5a      	ldr	r3, [pc, #360]	; (8002008 <CascadeController+0x578>)
 8001e9e:	edd3 7a00 	vldr	s15, [r3]
 8001ea2:	ed97 7a01 	vldr	s14, [r7, #4]
 8001ea6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001eaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001eae:	dd09      	ble.n	8001ec4 <CascadeController+0x434>
		limMinInt = limMin - proportional;}
 8001eb0:	4b55      	ldr	r3, [pc, #340]	; (8002008 <CascadeController+0x578>)
 8001eb2:	ed93 7a00 	vldr	s14, [r3]
 8001eb6:	edd7 7a01 	vldr	s15, [r7, #4]
 8001eba:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001ebe:	edc7 7a05 	vstr	s15, [r7, #20]
 8001ec2:	e002      	b.n	8001eca <CascadeController+0x43a>
	else{
		limMinInt = 0.0;}
 8001ec4:	f04f 0300 	mov.w	r3, #0
 8001ec8:	617b      	str	r3, [r7, #20]
	//Clamp integrator
	if(integrator > limMaxInt){
 8001eca:	4b4a      	ldr	r3, [pc, #296]	; (8001ff4 <CascadeController+0x564>)
 8001ecc:	edd3 7a00 	vldr	s15, [r3]
 8001ed0:	ed97 7a04 	vldr	s14, [r7, #16]
 8001ed4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001ed8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001edc:	d503      	bpl.n	8001ee6 <CascadeController+0x456>
		integrator = limMaxInt;}
 8001ede:	4a45      	ldr	r2, [pc, #276]	; (8001ff4 <CascadeController+0x564>)
 8001ee0:	693b      	ldr	r3, [r7, #16]
 8001ee2:	6013      	str	r3, [r2, #0]
 8001ee4:	e00c      	b.n	8001f00 <CascadeController+0x470>
	else if(integrator < limMinInt){
 8001ee6:	4b43      	ldr	r3, [pc, #268]	; (8001ff4 <CascadeController+0x564>)
 8001ee8:	edd3 7a00 	vldr	s15, [r3]
 8001eec:	ed97 7a05 	vldr	s14, [r7, #20]
 8001ef0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001ef4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001ef8:	dd02      	ble.n	8001f00 <CascadeController+0x470>
		integrator = limMinInt;}
 8001efa:	4a3e      	ldr	r2, [pc, #248]	; (8001ff4 <CascadeController+0x564>)
 8001efc:	697b      	ldr	r3, [r7, #20]
 8001efe:	6013      	str	r3, [r2, #0]

	//differentiator = (2*velo_Kd*(kal_velocity-prevMeasurement)+(2*tuaall-dt)*differentiator)/(2*tuaall+dt);
	differentiator = error - prevError;
 8001f00:	4b3a      	ldr	r3, [pc, #232]	; (8001fec <CascadeController+0x55c>)
 8001f02:	ed93 7a00 	vldr	s14, [r3]
 8001f06:	4b3e      	ldr	r3, [pc, #248]	; (8002000 <CascadeController+0x570>)
 8001f08:	edd3 7a00 	vldr	s15, [r3]
 8001f0c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001f10:	4b3e      	ldr	r3, [pc, #248]	; (800200c <CascadeController+0x57c>)
 8001f12:	edc3 7a00 	vstr	s15, [r3]
	volt_controller = proportional + integrator + (velo_Kd*differentiator);
 8001f16:	4b37      	ldr	r3, [pc, #220]	; (8001ff4 <CascadeController+0x564>)
 8001f18:	ed93 7a00 	vldr	s14, [r3]
 8001f1c:	edd7 7a01 	vldr	s15, [r7, #4]
 8001f20:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001f24:	4b3a      	ldr	r3, [pc, #232]	; (8002010 <CascadeController+0x580>)
 8001f26:	edd3 6a00 	vldr	s13, [r3]
 8001f2a:	4b38      	ldr	r3, [pc, #224]	; (800200c <CascadeController+0x57c>)
 8001f2c:	edd3 7a00 	vldr	s15, [r3]
 8001f30:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001f34:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001f38:	4b36      	ldr	r3, [pc, #216]	; (8002014 <CascadeController+0x584>)
 8001f3a:	edc3 7a00 	vstr	s15, [r3]
	if(volt_controller > 12.0){
 8001f3e:	4b35      	ldr	r3, [pc, #212]	; (8002014 <CascadeController+0x584>)
 8001f40:	edd3 7a00 	vldr	s15, [r3]
 8001f44:	eeb2 7a08 	vmov.f32	s14, #40	; 0x41400000  12.0
 8001f48:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001f4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f50:	dd03      	ble.n	8001f5a <CascadeController+0x4ca>
		volt_controller = 12.0;}
 8001f52:	4b30      	ldr	r3, [pc, #192]	; (8002014 <CascadeController+0x584>)
 8001f54:	4a30      	ldr	r2, [pc, #192]	; (8002018 <CascadeController+0x588>)
 8001f56:	601a      	str	r2, [r3, #0]
 8001f58:	e00c      	b.n	8001f74 <CascadeController+0x4e4>
	else if(volt_controller < -12.0){
 8001f5a:	4b2e      	ldr	r3, [pc, #184]	; (8002014 <CascadeController+0x584>)
 8001f5c:	edd3 7a00 	vldr	s15, [r3]
 8001f60:	eeba 7a08 	vmov.f32	s14, #168	; 0xc1400000 -12.0
 8001f64:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001f68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f6c:	d502      	bpl.n	8001f74 <CascadeController+0x4e4>
		volt_controller = -12.0;}
 8001f6e:	4b29      	ldr	r3, [pc, #164]	; (8002014 <CascadeController+0x584>)
 8001f70:	4a2a      	ldr	r2, [pc, #168]	; (800201c <CascadeController+0x58c>)
 8001f72:	601a      	str	r2, [r3, #0]

	//PIDout = PIDout*10000/12.0;
	PIDout = (volt_inverse+volt_controller)*10000/12.0;
 8001f74:	4b2a      	ldr	r3, [pc, #168]	; (8002020 <CascadeController+0x590>)
 8001f76:	ed93 7a00 	vldr	s14, [r3]
 8001f7a:	4b26      	ldr	r3, [pc, #152]	; (8002014 <CascadeController+0x584>)
 8001f7c:	edd3 7a00 	vldr	s15, [r3]
 8001f80:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001f84:	ed9f 7a27 	vldr	s14, [pc, #156]	; 8002024 <CascadeController+0x594>
 8001f88:	ee27 7a87 	vmul.f32	s14, s15, s14
 8001f8c:	eef2 6a08 	vmov.f32	s13, #40	; 0x41400000  12.0
 8001f90:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001f94:	4b24      	ldr	r3, [pc, #144]	; (8002028 <CascadeController+0x598>)
 8001f96:	edc3 7a00 	vstr	s15, [r3]
			if(PIDout < 0){
				PIDout = 0;
			}
		}
	}*/
	prevError2 = error2;
 8001f9a:	4a24      	ldr	r2, [pc, #144]	; (800202c <CascadeController+0x59c>)
 8001f9c:	68fb      	ldr	r3, [r7, #12]
 8001f9e:	6013      	str	r3, [r2, #0]
	prevMeasurement2 = current_rad_wrap;
 8001fa0:	4b23      	ldr	r3, [pc, #140]	; (8002030 <CascadeController+0x5a0>)
 8001fa2:	681b      	ldr	r3, [r3, #0]
 8001fa4:	4a23      	ldr	r2, [pc, #140]	; (8002034 <CascadeController+0x5a4>)
 8001fa6:	6013      	str	r3, [r2, #0]
	prevError = error;
 8001fa8:	4b10      	ldr	r3, [pc, #64]	; (8001fec <CascadeController+0x55c>)
 8001faa:	681b      	ldr	r3, [r3, #0]
 8001fac:	4a14      	ldr	r2, [pc, #80]	; (8002000 <CascadeController+0x570>)
 8001fae:	6013      	str	r3, [r2, #0]
	prevMeasurement = kal_velocity;
 8001fb0:	4b09      	ldr	r3, [pc, #36]	; (8001fd8 <CascadeController+0x548>)
 8001fb2:	681b      	ldr	r3, [r3, #0]
 8001fb4:	4a20      	ldr	r2, [pc, #128]	; (8002038 <CascadeController+0x5a8>)
 8001fb6:	6013      	str	r3, [r2, #0]
}
 8001fb8:	bf00      	nop
 8001fba:	3720      	adds	r7, #32
 8001fbc:	46bd      	mov	sp, r7
 8001fbe:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8001fc2:	bf00      	nop
 8001fc4:	f3af 8000 	nop.w
 8001fc8:	d97f62b7 	.word	0xd97f62b7
 8001fcc:	4023193d 	.word	0x4023193d
 8001fd0:	47ae147b 	.word	0x47ae147b
 8001fd4:	3f847ae1 	.word	0x3f847ae1
 8001fd8:	200005b8 	.word	0x200005b8
 8001fdc:	200005f4 	.word	0x200005f4
 8001fe0:	20000014 	.word	0x20000014
 8001fe4:	200005c4 	.word	0x200005c4
 8001fe8:	20000624 	.word	0x20000624
 8001fec:	20000628 	.word	0x20000628
 8001ff0:	200004c4 	.word	0x200004c4
 8001ff4:	20000600 	.word	0x20000600
 8001ff8:	200004c8 	.word	0x200004c8
 8001ffc:	3fe00000 	.word	0x3fe00000
 8002000:	20000604 	.word	0x20000604
 8002004:	20000034 	.word	0x20000034
 8002008:	20000030 	.word	0x20000030
 800200c:	20000608 	.word	0x20000608
 8002010:	200004cc 	.word	0x200004cc
 8002014:	2000062c 	.word	0x2000062c
 8002018:	41400000 	.word	0x41400000
 800201c:	c1400000 	.word	0xc1400000
 8002020:	200007d8 	.word	0x200007d8
 8002024:	461c4000 	.word	0x461c4000
 8002028:	20000620 	.word	0x20000620
 800202c:	20000614 	.word	0x20000614
 8002030:	20000584 	.word	0x20000584
 8002034:	2000061c 	.word	0x2000061c
 8002038:	2000060c 	.word	0x2000060c

0800203c <reset>:

void reset()
{
 800203c:	b580      	push	{r7, lr}
 800203e:	af00      	add	r7, sp, #0
	tuaall = 0;
 8002040:	4b09      	ldr	r3, [pc, #36]	; (8002068 <reset+0x2c>)
 8002042:	f04f 0200 	mov.w	r2, #0
 8002046:	601a      	str	r2, [r3, #0]
	Drivemotor(0);
 8002048:	2000      	movs	r0, #0
 800204a:	f001 f80d 	bl	8003068 <Drivemotor>
	PIDon = 0;
 800204e:	4b07      	ldr	r3, [pc, #28]	; (800206c <reset+0x30>)
 8002050:	2200      	movs	r2, #0
 8002052:	701a      	strb	r2, [r3, #0]
	PIDout = 0;
 8002054:	4b06      	ldr	r3, [pc, #24]	; (8002070 <reset+0x34>)
 8002056:	f04f 0200 	mov.w	r2, #0
 800205a:	601a      	str	r2, [r3, #0]
	finish = 0;
 800205c:	4b05      	ldr	r3, [pc, #20]	; (8002074 <reset+0x38>)
 800205e:	f04f 0200 	mov.w	r2, #0
 8002062:	601a      	str	r2, [r3, #0]
}
 8002064:	bf00      	nop
 8002066:	bd80      	pop	{r7, pc}
 8002068:	200005dc 	.word	0x200005dc
 800206c:	200005f0 	.word	0x200005f0
 8002070:	20000620 	.word	0x20000620
 8002074:	200005f8 	.word	0x200005f8

08002078 <set_initial>:

void set_initial()
{
 8002078:	b580      	push	{r7, lr}
 800207a:	af00      	add	r7, sp, #0
	  static uint64_t timeset2 = 0;
	  if (timeset2 < 500000) {
 800207c:	4b2a      	ldr	r3, [pc, #168]	; (8002128 <set_initial+0xb0>)
 800207e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002082:	492a      	ldr	r1, [pc, #168]	; (800212c <set_initial+0xb4>)
 8002084:	428a      	cmp	r2, r1
 8002086:	f173 0300 	sbcs.w	r3, r3, #0
 800208a:	d203      	bcs.n	8002094 <set_initial+0x1c>
		  Drivemotor(-2500);
 800208c:	4828      	ldr	r0, [pc, #160]	; (8002130 <set_initial+0xb8>)
 800208e:	f000 ffeb 	bl	8003068 <Drivemotor>
 8002092:	e038      	b.n	8002106 <set_initial+0x8e>
		  ;}
	  else if (timeset2 < 1500000) {
 8002094:	4b24      	ldr	r3, [pc, #144]	; (8002128 <set_initial+0xb0>)
 8002096:	e9d3 2300 	ldrd	r2, r3, [r3]
 800209a:	4926      	ldr	r1, [pc, #152]	; (8002134 <set_initial+0xbc>)
 800209c:	428a      	cmp	r2, r1
 800209e:	f173 0300 	sbcs.w	r3, r3, #0
 80020a2:	d204      	bcs.n	80020ae <set_initial+0x36>
		  Drivemotor(2500);
 80020a4:	f640 10c4 	movw	r0, #2500	; 0x9c4
 80020a8:	f000 ffde 	bl	8003068 <Drivemotor>
 80020ac:	e02b      	b.n	8002106 <set_initial+0x8e>
		  ;}
	  else{
		  Drivemotor(-2500);
 80020ae:	4820      	ldr	r0, [pc, #128]	; (8002130 <set_initial+0xb8>)
 80020b0:	f000 ffda 	bl	8003068 <Drivemotor>
		  if(current_rad >= 1.55 && current_rad <= 1.6){
 80020b4:	4b20      	ldr	r3, [pc, #128]	; (8002138 <set_initial+0xc0>)
 80020b6:	681b      	ldr	r3, [r3, #0]
 80020b8:	4618      	mov	r0, r3
 80020ba:	f7fe f9f1 	bl	80004a0 <__aeabi_f2d>
 80020be:	a316      	add	r3, pc, #88	; (adr r3, 8002118 <set_initial+0xa0>)
 80020c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020c4:	f7fe fcca 	bl	8000a5c <__aeabi_dcmpge>
 80020c8:	4603      	mov	r3, r0
 80020ca:	2b00      	cmp	r3, #0
 80020cc:	d01b      	beq.n	8002106 <set_initial+0x8e>
 80020ce:	4b1a      	ldr	r3, [pc, #104]	; (8002138 <set_initial+0xc0>)
 80020d0:	681b      	ldr	r3, [r3, #0]
 80020d2:	4618      	mov	r0, r3
 80020d4:	f7fe f9e4 	bl	80004a0 <__aeabi_f2d>
 80020d8:	a311      	add	r3, pc, #68	; (adr r3, 8002120 <set_initial+0xa8>)
 80020da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020de:	f7fe fcb3 	bl	8000a48 <__aeabi_dcmple>
 80020e2:	4603      	mov	r3, r0
 80020e4:	2b00      	cmp	r3, #0
 80020e6:	d00e      	beq.n	8002106 <set_initial+0x8e>
			  Reached = 1;
 80020e8:	4b14      	ldr	r3, [pc, #80]	; (800213c <set_initial+0xc4>)
 80020ea:	2201      	movs	r2, #1
 80020ec:	701a      	strb	r2, [r3, #0]
			  HMEtimeStamp = HAL_GetTick();
 80020ee:	f002 fcef 	bl	8004ad0 <HAL_GetTick>
 80020f2:	4603      	mov	r3, r0
 80020f4:	b29a      	uxth	r2, r3
 80020f6:	4b12      	ldr	r3, [pc, #72]	; (8002140 <set_initial+0xc8>)
 80020f8:	801a      	strh	r2, [r3, #0]
			  setinitial = 0;
 80020fa:	4b12      	ldr	r3, [pc, #72]	; (8002144 <set_initial+0xcc>)
 80020fc:	2200      	movs	r2, #0
 80020fe:	701a      	strb	r2, [r3, #0]
			  Drivemotor(0);
 8002100:	2000      	movs	r0, #0
 8002102:	f000 ffb1 	bl	8003068 <Drivemotor>
		  }
	  }
	  timeset2 = micros();
 8002106:	f001 fb21 	bl	800374c <micros>
 800210a:	4602      	mov	r2, r0
 800210c:	460b      	mov	r3, r1
 800210e:	4906      	ldr	r1, [pc, #24]	; (8002128 <set_initial+0xb0>)
 8002110:	e9c1 2300 	strd	r2, r3, [r1]
}
 8002114:	bf00      	nop
 8002116:	bd80      	pop	{r7, pc}
 8002118:	cccccccd 	.word	0xcccccccd
 800211c:	3ff8cccc 	.word	0x3ff8cccc
 8002120:	9999999a 	.word	0x9999999a
 8002124:	3ff99999 	.word	0x3ff99999
 8002128:	20000808 	.word	0x20000808
 800212c:	0007a120 	.word	0x0007a120
 8002130:	fffff63c 	.word	0xfffff63c
 8002134:	0016e360 	.word	0x0016e360
 8002138:	20000580 	.word	0x20000580
 800213c:	2000053b 	.word	0x2000053b
 8002140:	20000568 	.word	0x20000568
 8002144:	2000000c 	.word	0x2000000c

08002148 <set_home>:

void set_home()
{
 8002148:	b580      	push	{r7, lr}
 800214a:	af00      	add	r7, sp, #0
	  Drivemotor(-2500);
 800214c:	480e      	ldr	r0, [pc, #56]	; (8002188 <set_home+0x40>)
 800214e:	f000 ff8b 	bl	8003068 <Drivemotor>
	  if(current_rad_wrap <= 0){
 8002152:	4b0e      	ldr	r3, [pc, #56]	; (800218c <set_home+0x44>)
 8002154:	edd3 7a00 	vldr	s15, [r3]
 8002158:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800215c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002160:	d900      	bls.n	8002164 <set_home+0x1c>
		  Reached = 1;
		  HMEtimeStamp = HAL_GetTick();
		  setzero = 0;
		  Drivemotor(0);
	  }
}
 8002162:	e00e      	b.n	8002182 <set_home+0x3a>
		  Reached = 1;
 8002164:	4b0a      	ldr	r3, [pc, #40]	; (8002190 <set_home+0x48>)
 8002166:	2201      	movs	r2, #1
 8002168:	701a      	strb	r2, [r3, #0]
		  HMEtimeStamp = HAL_GetTick();
 800216a:	f002 fcb1 	bl	8004ad0 <HAL_GetTick>
 800216e:	4603      	mov	r3, r0
 8002170:	b29a      	uxth	r2, r3
 8002172:	4b08      	ldr	r3, [pc, #32]	; (8002194 <set_home+0x4c>)
 8002174:	801a      	strh	r2, [r3, #0]
		  setzero = 0;
 8002176:	4b08      	ldr	r3, [pc, #32]	; (8002198 <set_home+0x50>)
 8002178:	2200      	movs	r2, #0
 800217a:	701a      	strb	r2, [r3, #0]
		  Drivemotor(0);
 800217c:	2000      	movs	r0, #0
 800217e:	f000 ff73 	bl	8003068 <Drivemotor>
}
 8002182:	bf00      	nop
 8002184:	bd80      	pop	{r7, pc}
 8002186:	bf00      	nop
 8002188:	fffff63c 	.word	0xfffff63c
 800218c:	20000584 	.word	0x20000584
 8002190:	2000053b 	.word	0x2000053b
 8002194:	20000568 	.word	0x20000568
 8002198:	200005a0 	.word	0x200005a0
 800219c:	00000000 	.word	0x00000000

080021a0 <MoveToStation>:

void MoveToStation()
{
 80021a0:	b580      	push	{r7, lr}
 80021a2:	af00      	add	r7, sp, #0
//			  postotra = postotra*-1;
//			  direct = 0;}
//		  State = Working;
//		  update = 0;
//	  }
	  inputpos = Destination[n]/57.2957795;
 80021a4:	4b24      	ldr	r3, [pc, #144]	; (8002238 <MoveToStation+0x98>)
 80021a6:	781b      	ldrb	r3, [r3, #0]
 80021a8:	461a      	mov	r2, r3
 80021aa:	4b24      	ldr	r3, [pc, #144]	; (800223c <MoveToStation+0x9c>)
 80021ac:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80021b0:	4618      	mov	r0, r3
 80021b2:	f7fe f963 	bl	800047c <__aeabi_i2d>
 80021b6:	a31e      	add	r3, pc, #120	; (adr r3, 8002230 <MoveToStation+0x90>)
 80021b8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021bc:	f7fe faf2 	bl	80007a4 <__aeabi_ddiv>
 80021c0:	4602      	mov	r2, r0
 80021c2:	460b      	mov	r3, r1
 80021c4:	4610      	mov	r0, r2
 80021c6:	4619      	mov	r1, r3
 80021c8:	f7fe fc92 	bl	8000af0 <__aeabi_d2f>
 80021cc:	4603      	mov	r3, r0
 80021ce:	4a1c      	ldr	r2, [pc, #112]	; (8002240 <MoveToStation+0xa0>)
 80021d0:	6013      	str	r3, [r2, #0]
	  postotra = inputpos-current_rad_wrap;
 80021d2:	4b1b      	ldr	r3, [pc, #108]	; (8002240 <MoveToStation+0xa0>)
 80021d4:	ed93 7a00 	vldr	s14, [r3]
 80021d8:	4b1a      	ldr	r3, [pc, #104]	; (8002244 <MoveToStation+0xa4>)
 80021da:	edd3 7a00 	vldr	s15, [r3]
 80021de:	ee77 7a67 	vsub.f32	s15, s14, s15
 80021e2:	4b19      	ldr	r3, [pc, #100]	; (8002248 <MoveToStation+0xa8>)
 80021e4:	edc3 7a00 	vstr	s15, [r3]
	  rad_before = current_rad_wrap;
 80021e8:	4b16      	ldr	r3, [pc, #88]	; (8002244 <MoveToStation+0xa4>)
 80021ea:	681b      	ldr	r3, [r3, #0]
 80021ec:	4a17      	ldr	r2, [pc, #92]	; (800224c <MoveToStation+0xac>)
 80021ee:	6013      	str	r3, [r2, #0]
	  if(postotra >= 0){
 80021f0:	4b15      	ldr	r3, [pc, #84]	; (8002248 <MoveToStation+0xa8>)
 80021f2:	edd3 7a00 	vldr	s15, [r3]
 80021f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80021fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80021fe:	db03      	blt.n	8002208 <MoveToStation+0x68>
		  direct = 1;}
 8002200:	4b13      	ldr	r3, [pc, #76]	; (8002250 <MoveToStation+0xb0>)
 8002202:	2201      	movs	r2, #1
 8002204:	701a      	strb	r2, [r3, #0]
 8002206:	e00a      	b.n	800221e <MoveToStation+0x7e>
	  else{
		  postotra = postotra*-1;
 8002208:	4b0f      	ldr	r3, [pc, #60]	; (8002248 <MoveToStation+0xa8>)
 800220a:	edd3 7a00 	vldr	s15, [r3]
 800220e:	eef1 7a67 	vneg.f32	s15, s15
 8002212:	4b0d      	ldr	r3, [pc, #52]	; (8002248 <MoveToStation+0xa8>)
 8002214:	edc3 7a00 	vstr	s15, [r3]
		  direct = 0;}
 8002218:	4b0d      	ldr	r3, [pc, #52]	; (8002250 <MoveToStation+0xb0>)
 800221a:	2200      	movs	r2, #0
 800221c:	701a      	strb	r2, [r3, #0]
	  State = Working;
 800221e:	4b0d      	ldr	r3, [pc, #52]	; (8002254 <MoveToStation+0xb4>)
 8002220:	2201      	movs	r2, #1
 8002222:	701a      	strb	r2, [r3, #0]
	  update = 0;
 8002224:	4b0c      	ldr	r3, [pc, #48]	; (8002258 <MoveToStation+0xb8>)
 8002226:	2200      	movs	r2, #0
 8002228:	701a      	strb	r2, [r3, #0]
}
 800222a:	bf00      	nop
 800222c:	bd80      	pop	{r7, pc}
 800222e:	bf00      	nop
 8002230:	1a47a9e3 	.word	0x1a47a9e3
 8002234:	404ca5dc 	.word	0x404ca5dc
 8002238:	20000544 	.word	0x20000544
 800223c:	200004d4 	.word	0x200004d4
 8002240:	200005e0 	.word	0x200005e0
 8002244:	20000584 	.word	0x20000584
 8002248:	200005e4 	.word	0x200005e4
 800224c:	200005e8 	.word	0x200005e8
 8002250:	2000002c 	.word	0x2000002c
 8002254:	200005ef 	.word	0x200005ef
 8002258:	200005ec 	.word	0x200005ec
 800225c:	00000000 	.word	0x00000000

08002260 <inverse_tran>:

void inverse_tran(){
 8002260:	b5b0      	push	{r4, r5, r7, lr}
 8002262:	af00      	add	r7, sp, #0
	x_n = tra_velo;
 8002264:	4b3a      	ldr	r3, [pc, #232]	; (8002350 <inverse_tran+0xf0>)
 8002266:	681b      	ldr	r3, [r3, #0]
 8002268:	4a3a      	ldr	r2, [pc, #232]	; (8002354 <inverse_tran+0xf4>)
 800226a:	6013      	str	r3, [r2, #0]
	volt_inverse = (x_n - (0.9724*x_n_1) + (0.003346*x_n_2) - (0.0004612*y_n_1))/0.002803;
 800226c:	4b39      	ldr	r3, [pc, #228]	; (8002354 <inverse_tran+0xf4>)
 800226e:	681b      	ldr	r3, [r3, #0]
 8002270:	4618      	mov	r0, r3
 8002272:	f7fe f915 	bl	80004a0 <__aeabi_f2d>
 8002276:	4604      	mov	r4, r0
 8002278:	460d      	mov	r5, r1
 800227a:	4b37      	ldr	r3, [pc, #220]	; (8002358 <inverse_tran+0xf8>)
 800227c:	681b      	ldr	r3, [r3, #0]
 800227e:	4618      	mov	r0, r3
 8002280:	f7fe f90e 	bl	80004a0 <__aeabi_f2d>
 8002284:	a32a      	add	r3, pc, #168	; (adr r3, 8002330 <inverse_tran+0xd0>)
 8002286:	e9d3 2300 	ldrd	r2, r3, [r3]
 800228a:	f7fe f961 	bl	8000550 <__aeabi_dmul>
 800228e:	4602      	mov	r2, r0
 8002290:	460b      	mov	r3, r1
 8002292:	4620      	mov	r0, r4
 8002294:	4629      	mov	r1, r5
 8002296:	f7fd ffa3 	bl	80001e0 <__aeabi_dsub>
 800229a:	4602      	mov	r2, r0
 800229c:	460b      	mov	r3, r1
 800229e:	4614      	mov	r4, r2
 80022a0:	461d      	mov	r5, r3
 80022a2:	4b2e      	ldr	r3, [pc, #184]	; (800235c <inverse_tran+0xfc>)
 80022a4:	681b      	ldr	r3, [r3, #0]
 80022a6:	4618      	mov	r0, r3
 80022a8:	f7fe f8fa 	bl	80004a0 <__aeabi_f2d>
 80022ac:	a322      	add	r3, pc, #136	; (adr r3, 8002338 <inverse_tran+0xd8>)
 80022ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022b2:	f7fe f94d 	bl	8000550 <__aeabi_dmul>
 80022b6:	4602      	mov	r2, r0
 80022b8:	460b      	mov	r3, r1
 80022ba:	4620      	mov	r0, r4
 80022bc:	4629      	mov	r1, r5
 80022be:	f7fd ff91 	bl	80001e4 <__adddf3>
 80022c2:	4602      	mov	r2, r0
 80022c4:	460b      	mov	r3, r1
 80022c6:	4614      	mov	r4, r2
 80022c8:	461d      	mov	r5, r3
 80022ca:	4b25      	ldr	r3, [pc, #148]	; (8002360 <inverse_tran+0x100>)
 80022cc:	681b      	ldr	r3, [r3, #0]
 80022ce:	4618      	mov	r0, r3
 80022d0:	f7fe f8e6 	bl	80004a0 <__aeabi_f2d>
 80022d4:	a31a      	add	r3, pc, #104	; (adr r3, 8002340 <inverse_tran+0xe0>)
 80022d6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022da:	f7fe f939 	bl	8000550 <__aeabi_dmul>
 80022de:	4602      	mov	r2, r0
 80022e0:	460b      	mov	r3, r1
 80022e2:	4620      	mov	r0, r4
 80022e4:	4629      	mov	r1, r5
 80022e6:	f7fd ff7b 	bl	80001e0 <__aeabi_dsub>
 80022ea:	4602      	mov	r2, r0
 80022ec:	460b      	mov	r3, r1
 80022ee:	4610      	mov	r0, r2
 80022f0:	4619      	mov	r1, r3
 80022f2:	a315      	add	r3, pc, #84	; (adr r3, 8002348 <inverse_tran+0xe8>)
 80022f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022f8:	f7fe fa54 	bl	80007a4 <__aeabi_ddiv>
 80022fc:	4602      	mov	r2, r0
 80022fe:	460b      	mov	r3, r1
 8002300:	4610      	mov	r0, r2
 8002302:	4619      	mov	r1, r3
 8002304:	f7fe fbf4 	bl	8000af0 <__aeabi_d2f>
 8002308:	4603      	mov	r3, r0
 800230a:	4a16      	ldr	r2, [pc, #88]	; (8002364 <inverse_tran+0x104>)
 800230c:	6013      	str	r3, [r2, #0]
	x_n_2 = x_n_1;
 800230e:	4b12      	ldr	r3, [pc, #72]	; (8002358 <inverse_tran+0xf8>)
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	4a12      	ldr	r2, [pc, #72]	; (800235c <inverse_tran+0xfc>)
 8002314:	6013      	str	r3, [r2, #0]
	x_n_1 = x_n;
 8002316:	4b0f      	ldr	r3, [pc, #60]	; (8002354 <inverse_tran+0xf4>)
 8002318:	681b      	ldr	r3, [r3, #0]
 800231a:	4a0f      	ldr	r2, [pc, #60]	; (8002358 <inverse_tran+0xf8>)
 800231c:	6013      	str	r3, [r2, #0]
	y_n_1 = volt_inverse;
 800231e:	4b11      	ldr	r3, [pc, #68]	; (8002364 <inverse_tran+0x104>)
 8002320:	681b      	ldr	r3, [r3, #0]
 8002322:	4a0f      	ldr	r2, [pc, #60]	; (8002360 <inverse_tran+0x100>)
 8002324:	6013      	str	r3, [r2, #0]
}
 8002326:	bf00      	nop
 8002328:	bdb0      	pop	{r4, r5, r7, pc}
 800232a:	bf00      	nop
 800232c:	f3af 8000 	nop.w
 8002330:	9ad42c3d 	.word	0x9ad42c3d
 8002334:	3fef1de6 	.word	0x3fef1de6
 8002338:	12513b5c 	.word	0x12513b5c
 800233c:	3f6b6912 	.word	0x3f6b6912
 8002340:	eabaf45d 	.word	0xeabaf45d
 8002344:	3f3e39a6 	.word	0x3f3e39a6
 8002348:	2a94ff00 	.word	0x2a94ff00
 800234c:	3f66f651 	.word	0x3f66f651
 8002350:	200005c4 	.word	0x200005c4
 8002354:	200007dc 	.word	0x200007dc
 8002358:	200007e0 	.word	0x200007e0
 800235c:	200007e4 	.word	0x200007e4
 8002360:	200007e8 	.word	0x200007e8
 8002364:	200007d8 	.word	0x200007d8

08002368 <lowpass>:
void lowpass()
{
 8002368:	b5b0      	push	{r4, r5, r7, lr}
 800236a:	af00      	add	r7, sp, #0
	velo_lowpass = 0.99529869*velo_lowpass + 0.00235066*kal_velocity + 0.00235066*prevlowpass;
 800236c:	4b48      	ldr	r3, [pc, #288]	; (8002490 <lowpass+0x128>)
 800236e:	681b      	ldr	r3, [r3, #0]
 8002370:	4618      	mov	r0, r3
 8002372:	f7fe f895 	bl	80004a0 <__aeabi_f2d>
 8002376:	a33e      	add	r3, pc, #248	; (adr r3, 8002470 <lowpass+0x108>)
 8002378:	e9d3 2300 	ldrd	r2, r3, [r3]
 800237c:	f7fe f8e8 	bl	8000550 <__aeabi_dmul>
 8002380:	4602      	mov	r2, r0
 8002382:	460b      	mov	r3, r1
 8002384:	4614      	mov	r4, r2
 8002386:	461d      	mov	r5, r3
 8002388:	4b42      	ldr	r3, [pc, #264]	; (8002494 <lowpass+0x12c>)
 800238a:	681b      	ldr	r3, [r3, #0]
 800238c:	4618      	mov	r0, r3
 800238e:	f7fe f887 	bl	80004a0 <__aeabi_f2d>
 8002392:	a339      	add	r3, pc, #228	; (adr r3, 8002478 <lowpass+0x110>)
 8002394:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002398:	f7fe f8da 	bl	8000550 <__aeabi_dmul>
 800239c:	4602      	mov	r2, r0
 800239e:	460b      	mov	r3, r1
 80023a0:	4620      	mov	r0, r4
 80023a2:	4629      	mov	r1, r5
 80023a4:	f7fd ff1e 	bl	80001e4 <__adddf3>
 80023a8:	4602      	mov	r2, r0
 80023aa:	460b      	mov	r3, r1
 80023ac:	4614      	mov	r4, r2
 80023ae:	461d      	mov	r5, r3
 80023b0:	4b39      	ldr	r3, [pc, #228]	; (8002498 <lowpass+0x130>)
 80023b2:	681b      	ldr	r3, [r3, #0]
 80023b4:	4618      	mov	r0, r3
 80023b6:	f7fe f873 	bl	80004a0 <__aeabi_f2d>
 80023ba:	a32f      	add	r3, pc, #188	; (adr r3, 8002478 <lowpass+0x110>)
 80023bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023c0:	f7fe f8c6 	bl	8000550 <__aeabi_dmul>
 80023c4:	4602      	mov	r2, r0
 80023c6:	460b      	mov	r3, r1
 80023c8:	4620      	mov	r0, r4
 80023ca:	4629      	mov	r1, r5
 80023cc:	f7fd ff0a 	bl	80001e4 <__adddf3>
 80023d0:	4602      	mov	r2, r0
 80023d2:	460b      	mov	r3, r1
 80023d4:	4610      	mov	r0, r2
 80023d6:	4619      	mov	r1, r3
 80023d8:	f7fe fb8a 	bl	8000af0 <__aeabi_d2f>
 80023dc:	4603      	mov	r3, r0
 80023de:	4a2c      	ldr	r2, [pc, #176]	; (8002490 <lowpass+0x128>)
 80023e0:	6013      	str	r3, [r2, #0]
	prevlowpass = kal_velocity;
 80023e2:	4b2c      	ldr	r3, [pc, #176]	; (8002494 <lowpass+0x12c>)
 80023e4:	681b      	ldr	r3, [r3, #0]
 80023e6:	4a2c      	ldr	r2, [pc, #176]	; (8002498 <lowpass+0x130>)
 80023e8:	6013      	str	r3, [r2, #0]
	pos_lowpass = 0.96906992*pos_lowpass + 0.01546504*current_rad_wrap + 0.01546504*prevposlowpass;
 80023ea:	4b2c      	ldr	r3, [pc, #176]	; (800249c <lowpass+0x134>)
 80023ec:	681b      	ldr	r3, [r3, #0]
 80023ee:	4618      	mov	r0, r3
 80023f0:	f7fe f856 	bl	80004a0 <__aeabi_f2d>
 80023f4:	a322      	add	r3, pc, #136	; (adr r3, 8002480 <lowpass+0x118>)
 80023f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023fa:	f7fe f8a9 	bl	8000550 <__aeabi_dmul>
 80023fe:	4602      	mov	r2, r0
 8002400:	460b      	mov	r3, r1
 8002402:	4614      	mov	r4, r2
 8002404:	461d      	mov	r5, r3
 8002406:	4b26      	ldr	r3, [pc, #152]	; (80024a0 <lowpass+0x138>)
 8002408:	681b      	ldr	r3, [r3, #0]
 800240a:	4618      	mov	r0, r3
 800240c:	f7fe f848 	bl	80004a0 <__aeabi_f2d>
 8002410:	a31d      	add	r3, pc, #116	; (adr r3, 8002488 <lowpass+0x120>)
 8002412:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002416:	f7fe f89b 	bl	8000550 <__aeabi_dmul>
 800241a:	4602      	mov	r2, r0
 800241c:	460b      	mov	r3, r1
 800241e:	4620      	mov	r0, r4
 8002420:	4629      	mov	r1, r5
 8002422:	f7fd fedf 	bl	80001e4 <__adddf3>
 8002426:	4602      	mov	r2, r0
 8002428:	460b      	mov	r3, r1
 800242a:	4614      	mov	r4, r2
 800242c:	461d      	mov	r5, r3
 800242e:	4b1d      	ldr	r3, [pc, #116]	; (80024a4 <lowpass+0x13c>)
 8002430:	681b      	ldr	r3, [r3, #0]
 8002432:	4618      	mov	r0, r3
 8002434:	f7fe f834 	bl	80004a0 <__aeabi_f2d>
 8002438:	a313      	add	r3, pc, #76	; (adr r3, 8002488 <lowpass+0x120>)
 800243a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800243e:	f7fe f887 	bl	8000550 <__aeabi_dmul>
 8002442:	4602      	mov	r2, r0
 8002444:	460b      	mov	r3, r1
 8002446:	4620      	mov	r0, r4
 8002448:	4629      	mov	r1, r5
 800244a:	f7fd fecb 	bl	80001e4 <__adddf3>
 800244e:	4602      	mov	r2, r0
 8002450:	460b      	mov	r3, r1
 8002452:	4610      	mov	r0, r2
 8002454:	4619      	mov	r1, r3
 8002456:	f7fe fb4b 	bl	8000af0 <__aeabi_d2f>
 800245a:	4603      	mov	r3, r0
 800245c:	4a0f      	ldr	r2, [pc, #60]	; (800249c <lowpass+0x134>)
 800245e:	6013      	str	r3, [r2, #0]
	prevposlowpass = current_rad_wrap;
 8002460:	4b0f      	ldr	r3, [pc, #60]	; (80024a0 <lowpass+0x138>)
 8002462:	681b      	ldr	r3, [r3, #0]
 8002464:	4a0f      	ldr	r2, [pc, #60]	; (80024a4 <lowpass+0x13c>)
 8002466:	6013      	str	r3, [r2, #0]
}
 8002468:	bf00      	nop
 800246a:	bdb0      	pop	{r4, r5, r7, pc}
 800246c:	f3af 8000 	nop.w
 8002470:	a369a70e 	.word	0xa369a70e
 8002474:	3fefd97c 	.word	0x3fefd97c
 8002478:	fa5e5576 	.word	0xfa5e5576
 800247c:	3f6341b0 	.word	0x3f6341b0
 8002480:	ebbdfea9 	.word	0xebbdfea9
 8002484:	3fef029e 	.word	0x3fef029e
 8002488:	88402ae8 	.word	0x88402ae8
 800248c:	3f8fac22 	.word	0x3f8fac22
 8002490:	200007bc 	.word	0x200007bc
 8002494:	200005b8 	.word	0x200005b8
 8002498:	200007c0 	.word	0x200007c0
 800249c:	200007cc 	.word	0x200007cc
 80024a0:	20000584 	.word	0x20000584
 80024a4:	200007d0 	.word	0x200007d0

080024a8 <Diff_velo>:
void Diff_velo(){
 80024a8:	b580      	push	{r7, lr}
 80024aa:	af00      	add	r7, sp, #0
	velo_diff =  (pos_lowpass - prevPos)/dt;
 80024ac:	4b14      	ldr	r3, [pc, #80]	; (8002500 <Diff_velo+0x58>)
 80024ae:	ed93 7a00 	vldr	s14, [r3]
 80024b2:	4b14      	ldr	r3, [pc, #80]	; (8002504 <Diff_velo+0x5c>)
 80024b4:	edd3 7a00 	vldr	s15, [r3]
 80024b8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80024bc:	ee17 0a90 	vmov	r0, s15
 80024c0:	f7fd ffee 	bl	80004a0 <__aeabi_f2d>
 80024c4:	a30c      	add	r3, pc, #48	; (adr r3, 80024f8 <Diff_velo+0x50>)
 80024c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024ca:	f7fe f96b 	bl	80007a4 <__aeabi_ddiv>
 80024ce:	4602      	mov	r2, r0
 80024d0:	460b      	mov	r3, r1
 80024d2:	4610      	mov	r0, r2
 80024d4:	4619      	mov	r1, r3
 80024d6:	f7fe fb0b 	bl	8000af0 <__aeabi_d2f>
 80024da:	4603      	mov	r3, r0
 80024dc:	4a0a      	ldr	r2, [pc, #40]	; (8002508 <Diff_velo+0x60>)
 80024de:	6013      	str	r3, [r2, #0]
	//velo_diff2 = (current_rad_wrap -  prevPos2)/dt;
	DegAbs[0][0] = velo_diff;
 80024e0:	4b09      	ldr	r3, [pc, #36]	; (8002508 <Diff_velo+0x60>)
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	4a09      	ldr	r2, [pc, #36]	; (800250c <Diff_velo+0x64>)
 80024e6:	6013      	str	r3, [r2, #0]
	prevPos = pos_lowpass;
 80024e8:	4b05      	ldr	r3, [pc, #20]	; (8002500 <Diff_velo+0x58>)
 80024ea:	681b      	ldr	r3, [r3, #0]
 80024ec:	4a05      	ldr	r2, [pc, #20]	; (8002504 <Diff_velo+0x5c>)
 80024ee:	6013      	str	r3, [r2, #0]
}
 80024f0:	bf00      	nop
 80024f2:	bd80      	pop	{r7, pc}
 80024f4:	f3af 8000 	nop.w
 80024f8:	47ae147b 	.word	0x47ae147b
 80024fc:	3f847ae1 	.word	0x3f847ae1
 8002500:	200007cc 	.word	0x200007cc
 8002504:	200007c8 	.word	0x200007c8
 8002508:	200007c4 	.word	0x200007c4
 800250c:	20000630 	.word	0x20000630

08002510 <Kalman_filter>:
void Kalman_filter()
{
 8002510:	b580      	push	{r7, lr}
 8002512:	b082      	sub	sp, #8
 8002514:	af02      	add	r7, sp, #8
	prediction(X_hat_t,P_t,F_t,Q_t);
 8002516:	4b14      	ldr	r3, [pc, #80]	; (8002568 <Kalman_filter+0x58>)
 8002518:	4a14      	ldr	r2, [pc, #80]	; (800256c <Kalman_filter+0x5c>)
 800251a:	4915      	ldr	r1, [pc, #84]	; (8002570 <Kalman_filter+0x60>)
 800251c:	4815      	ldr	r0, [pc, #84]	; (8002574 <Kalman_filter+0x64>)
 800251e:	f000 f83b 	bl	8002598 <prediction>
	Update(X_hat_t,P_hat_t,DegAbs,R_t,H_t);
 8002522:	4b15      	ldr	r3, [pc, #84]	; (8002578 <Kalman_filter+0x68>)
 8002524:	9300      	str	r3, [sp, #0]
 8002526:	4b15      	ldr	r3, [pc, #84]	; (800257c <Kalman_filter+0x6c>)
 8002528:	4a15      	ldr	r2, [pc, #84]	; (8002580 <Kalman_filter+0x70>)
 800252a:	4916      	ldr	r1, [pc, #88]	; (8002584 <Kalman_filter+0x74>)
 800252c:	4811      	ldr	r0, [pc, #68]	; (8002574 <Kalman_filter+0x64>)
 800252e:	f000 f889 	bl	8002644 <Update>
	kal_position = X_t[0][0];
 8002532:	4b15      	ldr	r3, [pc, #84]	; (8002588 <Kalman_filter+0x78>)
 8002534:	681b      	ldr	r3, [r3, #0]
 8002536:	4a15      	ldr	r2, [pc, #84]	; (800258c <Kalman_filter+0x7c>)
 8002538:	6013      	str	r3, [r2, #0]
	kal_velocity = X_t[1][0];
 800253a:	4b13      	ldr	r3, [pc, #76]	; (8002588 <Kalman_filter+0x78>)
 800253c:	68db      	ldr	r3, [r3, #12]
 800253e:	4a14      	ldr	r2, [pc, #80]	; (8002590 <Kalman_filter+0x80>)
 8002540:	6013      	str	r3, [r2, #0]
	kal_acceleration = X_t[2][0];
 8002542:	4b11      	ldr	r3, [pc, #68]	; (8002588 <Kalman_filter+0x78>)
 8002544:	699b      	ldr	r3, [r3, #24]
 8002546:	4a13      	ldr	r2, [pc, #76]	; (8002594 <Kalman_filter+0x84>)
 8002548:	6013      	str	r3, [r2, #0]
	equal(X_hat_t,X_t,3,3);  //X_hat_t = X_t
 800254a:	2303      	movs	r3, #3
 800254c:	2203      	movs	r2, #3
 800254e:	490e      	ldr	r1, [pc, #56]	; (8002588 <Kalman_filter+0x78>)
 8002550:	4808      	ldr	r0, [pc, #32]	; (8002574 <Kalman_filter+0x64>)
 8002552:	f000 fa79 	bl	8002a48 <equal>
	equal(P_hat_t,P_t,3,3); //P_hat_t = P_t
 8002556:	2303      	movs	r3, #3
 8002558:	2203      	movs	r2, #3
 800255a:	4905      	ldr	r1, [pc, #20]	; (8002570 <Kalman_filter+0x60>)
 800255c:	4809      	ldr	r0, [pc, #36]	; (8002584 <Kalman_filter+0x74>)
 800255e:	f000 fa73 	bl	8002a48 <equal>
}
 8002562:	bf00      	nop
 8002564:	46bd      	mov	sp, r7
 8002566:	bd80      	pop	{r7, pc}
 8002568:	20000110 	.word	0x20000110
 800256c:	2000005c 	.word	0x2000005c
 8002570:	20000774 	.word	0x20000774
 8002574:	20000750 	.word	0x20000750
 8002578:	200000a4 	.word	0x200000a4
 800257c:	200000ec 	.word	0x200000ec
 8002580:	20000630 	.word	0x20000630
 8002584:	20000798 	.word	0x20000798
 8002588:	2000072c 	.word	0x2000072c
 800258c:	200005b4 	.word	0x200005b4
 8002590:	200005b8 	.word	0x200005b8
 8002594:	200005bc 	.word	0x200005bc

08002598 <prediction>:
void prediction(X_hat_t_1, P_t_1, F_t, Q_t)
{
 8002598:	b580      	push	{r7, lr}
 800259a:	b088      	sub	sp, #32
 800259c:	af04      	add	r7, sp, #16
 800259e:	60f8      	str	r0, [r7, #12]
 80025a0:	60b9      	str	r1, [r7, #8]
 80025a2:	607a      	str	r2, [r7, #4]
 80025a4:	603b      	str	r3, [r7, #0]
	Multiply_matrix(F_t,X_hat_t_1,multiply, 3,3,3,3);
 80025a6:	6878      	ldr	r0, [r7, #4]
 80025a8:	68f9      	ldr	r1, [r7, #12]
 80025aa:	2303      	movs	r3, #3
 80025ac:	9302      	str	r3, [sp, #8]
 80025ae:	2303      	movs	r3, #3
 80025b0:	9301      	str	r3, [sp, #4]
 80025b2:	2303      	movs	r3, #3
 80025b4:	9300      	str	r3, [sp, #0]
 80025b6:	2303      	movs	r3, #3
 80025b8:	4a1c      	ldr	r2, [pc, #112]	; (800262c <prediction+0x94>)
 80025ba:	f000 f917 	bl	80027ec <Multiply_matrix>
	equal(X_hat_t,multiply,3,3);
 80025be:	2303      	movs	r3, #3
 80025c0:	2203      	movs	r2, #3
 80025c2:	491a      	ldr	r1, [pc, #104]	; (800262c <prediction+0x94>)
 80025c4:	481a      	ldr	r0, [pc, #104]	; (8002630 <prediction+0x98>)
 80025c6:	f000 fa3f 	bl	8002a48 <equal>

	Multiply_matrix(F_t,P_t_1,multiply, 3,3,3,3);
 80025ca:	6878      	ldr	r0, [r7, #4]
 80025cc:	68b9      	ldr	r1, [r7, #8]
 80025ce:	2303      	movs	r3, #3
 80025d0:	9302      	str	r3, [sp, #8]
 80025d2:	2303      	movs	r3, #3
 80025d4:	9301      	str	r3, [sp, #4]
 80025d6:	2303      	movs	r3, #3
 80025d8:	9300      	str	r3, [sp, #0]
 80025da:	2303      	movs	r3, #3
 80025dc:	4a13      	ldr	r2, [pc, #76]	; (800262c <prediction+0x94>)
 80025de:	f000 f905 	bl	80027ec <Multiply_matrix>
	equal(collect3_3,multiply,3,3);
 80025e2:	2303      	movs	r3, #3
 80025e4:	2203      	movs	r2, #3
 80025e6:	4911      	ldr	r1, [pc, #68]	; (800262c <prediction+0x94>)
 80025e8:	4812      	ldr	r0, [pc, #72]	; (8002634 <prediction+0x9c>)
 80025ea:	f000 fa2d 	bl	8002a48 <equal>
	Multiply_matrix(collect3_3,F_t_tran,multiply, 3,3,3,3);
 80025ee:	2303      	movs	r3, #3
 80025f0:	9302      	str	r3, [sp, #8]
 80025f2:	2303      	movs	r3, #3
 80025f4:	9301      	str	r3, [sp, #4]
 80025f6:	2303      	movs	r3, #3
 80025f8:	9300      	str	r3, [sp, #0]
 80025fa:	2303      	movs	r3, #3
 80025fc:	4a0b      	ldr	r2, [pc, #44]	; (800262c <prediction+0x94>)
 80025fe:	490e      	ldr	r1, [pc, #56]	; (8002638 <prediction+0xa0>)
 8002600:	480c      	ldr	r0, [pc, #48]	; (8002634 <prediction+0x9c>)
 8002602:	f000 f8f3 	bl	80027ec <Multiply_matrix>
	PlusOrMinus(multiply,Q_t,3,3,1);
 8002606:	6839      	ldr	r1, [r7, #0]
 8002608:	2301      	movs	r3, #1
 800260a:	9300      	str	r3, [sp, #0]
 800260c:	2303      	movs	r3, #3
 800260e:	2203      	movs	r2, #3
 8002610:	4806      	ldr	r0, [pc, #24]	; (800262c <prediction+0x94>)
 8002612:	f000 f96f 	bl	80028f4 <PlusOrMinus>
	equal(P_hat_t,pm3_3,3,3);
 8002616:	2303      	movs	r3, #3
 8002618:	2203      	movs	r2, #3
 800261a:	4908      	ldr	r1, [pc, #32]	; (800263c <prediction+0xa4>)
 800261c:	4808      	ldr	r0, [pc, #32]	; (8002640 <prediction+0xa8>)
 800261e:	f000 fa13 	bl	8002a48 <equal>
}
 8002622:	bf00      	nop
 8002624:	3710      	adds	r7, #16
 8002626:	46bd      	mov	sp, r7
 8002628:	bd80      	pop	{r7, pc}
 800262a:	bf00      	nop
 800262c:	20000654 	.word	0x20000654
 8002630:	20000750 	.word	0x20000750
 8002634:	2000069c 	.word	0x2000069c
 8002638:	20000080 	.word	0x20000080
 800263c:	20000678 	.word	0x20000678
 8002640:	20000798 	.word	0x20000798

08002644 <Update>:

void Update(X_hat_t, P_hat_t, DegAbs, R_t, H_t)
{
 8002644:	b580      	push	{r7, lr}
 8002646:	b088      	sub	sp, #32
 8002648:	af04      	add	r7, sp, #16
 800264a:	60f8      	str	r0, [r7, #12]
 800264c:	60b9      	str	r1, [r7, #8]
 800264e:	607a      	str	r2, [r7, #4]
 8002650:	603b      	str	r3, [r7, #0]
	Multiply_matrix(H_t,X_hat_t,multiply,3,3,3,3);
 8002652:	69b8      	ldr	r0, [r7, #24]
 8002654:	68f9      	ldr	r1, [r7, #12]
 8002656:	2303      	movs	r3, #3
 8002658:	9302      	str	r3, [sp, #8]
 800265a:	2303      	movs	r3, #3
 800265c:	9301      	str	r3, [sp, #4]
 800265e:	2303      	movs	r3, #3
 8002660:	9300      	str	r3, [sp, #0]
 8002662:	2303      	movs	r3, #3
 8002664:	4a57      	ldr	r2, [pc, #348]	; (80027c4 <Update+0x180>)
 8002666:	f000 f8c1 	bl	80027ec <Multiply_matrix>
	PlusOrMinus(DegAbs,multiply,3,3,2);
 800266a:	6878      	ldr	r0, [r7, #4]
 800266c:	2302      	movs	r3, #2
 800266e:	9300      	str	r3, [sp, #0]
 8002670:	2303      	movs	r3, #3
 8002672:	2203      	movs	r2, #3
 8002674:	4953      	ldr	r1, [pc, #332]	; (80027c4 <Update+0x180>)
 8002676:	f000 f93d 	bl	80028f4 <PlusOrMinus>
	equal(y_k,pm3_3,3,3);
 800267a:	2303      	movs	r3, #3
 800267c:	2203      	movs	r2, #3
 800267e:	4952      	ldr	r1, [pc, #328]	; (80027c8 <Update+0x184>)
 8002680:	4852      	ldr	r0, [pc, #328]	; (80027cc <Update+0x188>)
 8002682:	f000 f9e1 	bl	8002a48 <equal>

	Multiply_matrix(H_t,P_hat_t,multiply,3,3,3,3);
 8002686:	69b8      	ldr	r0, [r7, #24]
 8002688:	68b9      	ldr	r1, [r7, #8]
 800268a:	2303      	movs	r3, #3
 800268c:	9302      	str	r3, [sp, #8]
 800268e:	2303      	movs	r3, #3
 8002690:	9301      	str	r3, [sp, #4]
 8002692:	2303      	movs	r3, #3
 8002694:	9300      	str	r3, [sp, #0]
 8002696:	2303      	movs	r3, #3
 8002698:	4a4a      	ldr	r2, [pc, #296]	; (80027c4 <Update+0x180>)
 800269a:	f000 f8a7 	bl	80027ec <Multiply_matrix>
	equal(collect3_3,multiply,3,3);
 800269e:	2303      	movs	r3, #3
 80026a0:	2203      	movs	r2, #3
 80026a2:	4948      	ldr	r1, [pc, #288]	; (80027c4 <Update+0x180>)
 80026a4:	484a      	ldr	r0, [pc, #296]	; (80027d0 <Update+0x18c>)
 80026a6:	f000 f9cf 	bl	8002a48 <equal>
	Multiply_matrix(collect3_3,H_t_tran,multiply, 3,3,3,3);
 80026aa:	2303      	movs	r3, #3
 80026ac:	9302      	str	r3, [sp, #8]
 80026ae:	2303      	movs	r3, #3
 80026b0:	9301      	str	r3, [sp, #4]
 80026b2:	2303      	movs	r3, #3
 80026b4:	9300      	str	r3, [sp, #0]
 80026b6:	2303      	movs	r3, #3
 80026b8:	4a42      	ldr	r2, [pc, #264]	; (80027c4 <Update+0x180>)
 80026ba:	4946      	ldr	r1, [pc, #280]	; (80027d4 <Update+0x190>)
 80026bc:	4844      	ldr	r0, [pc, #272]	; (80027d0 <Update+0x18c>)
 80026be:	f000 f895 	bl	80027ec <Multiply_matrix>
	PlusOrMinus(multiply,R_t,3,3,1);
 80026c2:	6839      	ldr	r1, [r7, #0]
 80026c4:	2301      	movs	r3, #1
 80026c6:	9300      	str	r3, [sp, #0]
 80026c8:	2303      	movs	r3, #3
 80026ca:	2203      	movs	r2, #3
 80026cc:	483d      	ldr	r0, [pc, #244]	; (80027c4 <Update+0x180>)
 80026ce:	f000 f911 	bl	80028f4 <PlusOrMinus>
	equal(S_k,pm3_3,3,3);
 80026d2:	2303      	movs	r3, #3
 80026d4:	2203      	movs	r2, #3
 80026d6:	493c      	ldr	r1, [pc, #240]	; (80027c8 <Update+0x184>)
 80026d8:	483f      	ldr	r0, [pc, #252]	; (80027d8 <Update+0x194>)
 80026da:	f000 f9b5 	bl	8002a48 <equal>

	S_k[0][0] = 1/S_k[0][0];
 80026de:	4b3e      	ldr	r3, [pc, #248]	; (80027d8 <Update+0x194>)
 80026e0:	ed93 7a00 	vldr	s14, [r3]
 80026e4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80026e8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80026ec:	4b3a      	ldr	r3, [pc, #232]	; (80027d8 <Update+0x194>)
 80026ee:	edc3 7a00 	vstr	s15, [r3]
	Multiply_matrix(P_hat_t,H_t_tran,multiply,3,3,3,3);
 80026f2:	68b8      	ldr	r0, [r7, #8]
 80026f4:	2303      	movs	r3, #3
 80026f6:	9302      	str	r3, [sp, #8]
 80026f8:	2303      	movs	r3, #3
 80026fa:	9301      	str	r3, [sp, #4]
 80026fc:	2303      	movs	r3, #3
 80026fe:	9300      	str	r3, [sp, #0]
 8002700:	2303      	movs	r3, #3
 8002702:	4a30      	ldr	r2, [pc, #192]	; (80027c4 <Update+0x180>)
 8002704:	4933      	ldr	r1, [pc, #204]	; (80027d4 <Update+0x190>)
 8002706:	f000 f871 	bl	80027ec <Multiply_matrix>
	equal(collect3_3,multiply,3,3);
 800270a:	2303      	movs	r3, #3
 800270c:	2203      	movs	r2, #3
 800270e:	492d      	ldr	r1, [pc, #180]	; (80027c4 <Update+0x180>)
 8002710:	482f      	ldr	r0, [pc, #188]	; (80027d0 <Update+0x18c>)
 8002712:	f000 f999 	bl	8002a48 <equal>
	Multiply_matrix(collect3_3,S_k,multiply, 3,3,3,3);
 8002716:	2303      	movs	r3, #3
 8002718:	9302      	str	r3, [sp, #8]
 800271a:	2303      	movs	r3, #3
 800271c:	9301      	str	r3, [sp, #4]
 800271e:	2303      	movs	r3, #3
 8002720:	9300      	str	r3, [sp, #0]
 8002722:	2303      	movs	r3, #3
 8002724:	4a27      	ldr	r2, [pc, #156]	; (80027c4 <Update+0x180>)
 8002726:	492c      	ldr	r1, [pc, #176]	; (80027d8 <Update+0x194>)
 8002728:	4829      	ldr	r0, [pc, #164]	; (80027d0 <Update+0x18c>)
 800272a:	f000 f85f 	bl	80027ec <Multiply_matrix>
	equal(K_k,multiply,3,3);
 800272e:	2303      	movs	r3, #3
 8002730:	2203      	movs	r2, #3
 8002732:	4924      	ldr	r1, [pc, #144]	; (80027c4 <Update+0x180>)
 8002734:	4829      	ldr	r0, [pc, #164]	; (80027dc <Update+0x198>)
 8002736:	f000 f987 	bl	8002a48 <equal>

	Multiply_matrix(K_k,y_k,multiply,3,3,3,3);
 800273a:	2303      	movs	r3, #3
 800273c:	9302      	str	r3, [sp, #8]
 800273e:	2303      	movs	r3, #3
 8002740:	9301      	str	r3, [sp, #4]
 8002742:	2303      	movs	r3, #3
 8002744:	9300      	str	r3, [sp, #0]
 8002746:	2303      	movs	r3, #3
 8002748:	4a1e      	ldr	r2, [pc, #120]	; (80027c4 <Update+0x180>)
 800274a:	4920      	ldr	r1, [pc, #128]	; (80027cc <Update+0x188>)
 800274c:	4823      	ldr	r0, [pc, #140]	; (80027dc <Update+0x198>)
 800274e:	f000 f84d 	bl	80027ec <Multiply_matrix>
	PlusOrMinus(X_hat_t,multiply,3,3,1);
 8002752:	68f8      	ldr	r0, [r7, #12]
 8002754:	2301      	movs	r3, #1
 8002756:	9300      	str	r3, [sp, #0]
 8002758:	2303      	movs	r3, #3
 800275a:	2203      	movs	r2, #3
 800275c:	4919      	ldr	r1, [pc, #100]	; (80027c4 <Update+0x180>)
 800275e:	f000 f8c9 	bl	80028f4 <PlusOrMinus>
	equal(X_t,pm3_3,3,3);
 8002762:	2303      	movs	r3, #3
 8002764:	2203      	movs	r2, #3
 8002766:	4918      	ldr	r1, [pc, #96]	; (80027c8 <Update+0x184>)
 8002768:	481d      	ldr	r0, [pc, #116]	; (80027e0 <Update+0x19c>)
 800276a:	f000 f96d 	bl	8002a48 <equal>

	Multiply_matrix(K_k,H_t,multiply,3,3,3,3);
 800276e:	69b9      	ldr	r1, [r7, #24]
 8002770:	2303      	movs	r3, #3
 8002772:	9302      	str	r3, [sp, #8]
 8002774:	2303      	movs	r3, #3
 8002776:	9301      	str	r3, [sp, #4]
 8002778:	2303      	movs	r3, #3
 800277a:	9300      	str	r3, [sp, #0]
 800277c:	2303      	movs	r3, #3
 800277e:	4a11      	ldr	r2, [pc, #68]	; (80027c4 <Update+0x180>)
 8002780:	4816      	ldr	r0, [pc, #88]	; (80027dc <Update+0x198>)
 8002782:	f000 f833 	bl	80027ec <Multiply_matrix>
	PlusOrMinus(I,multiply,3,3,2);
 8002786:	2302      	movs	r3, #2
 8002788:	9300      	str	r3, [sp, #0]
 800278a:	2303      	movs	r3, #3
 800278c:	2203      	movs	r2, #3
 800278e:	490d      	ldr	r1, [pc, #52]	; (80027c4 <Update+0x180>)
 8002790:	4814      	ldr	r0, [pc, #80]	; (80027e4 <Update+0x1a0>)
 8002792:	f000 f8af 	bl	80028f4 <PlusOrMinus>
	Multiply_matrix(pm3_3,P_hat_t,multiply,3,3,3,3);
 8002796:	68b9      	ldr	r1, [r7, #8]
 8002798:	2303      	movs	r3, #3
 800279a:	9302      	str	r3, [sp, #8]
 800279c:	2303      	movs	r3, #3
 800279e:	9301      	str	r3, [sp, #4]
 80027a0:	2303      	movs	r3, #3
 80027a2:	9300      	str	r3, [sp, #0]
 80027a4:	2303      	movs	r3, #3
 80027a6:	4a07      	ldr	r2, [pc, #28]	; (80027c4 <Update+0x180>)
 80027a8:	4807      	ldr	r0, [pc, #28]	; (80027c8 <Update+0x184>)
 80027aa:	f000 f81f 	bl	80027ec <Multiply_matrix>
	equal(P_t,multiply,3,3);
 80027ae:	2303      	movs	r3, #3
 80027b0:	2203      	movs	r2, #3
 80027b2:	4904      	ldr	r1, [pc, #16]	; (80027c4 <Update+0x180>)
 80027b4:	480c      	ldr	r0, [pc, #48]	; (80027e8 <Update+0x1a4>)
 80027b6:	f000 f947 	bl	8002a48 <equal>
}
 80027ba:	bf00      	nop
 80027bc:	3710      	adds	r7, #16
 80027be:	46bd      	mov	sp, r7
 80027c0:	bd80      	pop	{r7, pc}
 80027c2:	bf00      	nop
 80027c4:	20000654 	.word	0x20000654
 80027c8:	20000678 	.word	0x20000678
 80027cc:	200006c0 	.word	0x200006c0
 80027d0:	2000069c 	.word	0x2000069c
 80027d4:	200000c8 	.word	0x200000c8
 80027d8:	200006e4 	.word	0x200006e4
 80027dc:	20000708 	.word	0x20000708
 80027e0:	2000072c 	.word	0x2000072c
 80027e4:	20000038 	.word	0x20000038
 80027e8:	20000774 	.word	0x20000774

080027ec <Multiply_matrix>:

void Multiply_matrix(float A[][3], float B[][3],float multiply[][3],int row1,int col1,int row2,int col2)
{
 80027ec:	b480      	push	{r7}
 80027ee:	b087      	sub	sp, #28
 80027f0:	af00      	add	r7, sp, #0
 80027f2:	60f8      	str	r0, [r7, #12]
 80027f4:	60b9      	str	r1, [r7, #8]
 80027f6:	607a      	str	r2, [r7, #4]
 80027f8:	603b      	str	r3, [r7, #0]
	uint8_t i,j,k;
	//set zero
	for(i=0; i<3 ;i++){
 80027fa:	2300      	movs	r3, #0
 80027fc:	75fb      	strb	r3, [r7, #23]
 80027fe:	e019      	b.n	8002834 <Multiply_matrix+0x48>
		for(j=0; j<3;j++){
 8002800:	2300      	movs	r3, #0
 8002802:	75bb      	strb	r3, [r7, #22]
 8002804:	e010      	b.n	8002828 <Multiply_matrix+0x3c>
			multiply[i][j] = 0;
 8002806:	7dfa      	ldrb	r2, [r7, #23]
 8002808:	4613      	mov	r3, r2
 800280a:	005b      	lsls	r3, r3, #1
 800280c:	4413      	add	r3, r2
 800280e:	009b      	lsls	r3, r3, #2
 8002810:	461a      	mov	r2, r3
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	441a      	add	r2, r3
 8002816:	7dbb      	ldrb	r3, [r7, #22]
 8002818:	009b      	lsls	r3, r3, #2
 800281a:	4413      	add	r3, r2
 800281c:	f04f 0200 	mov.w	r2, #0
 8002820:	601a      	str	r2, [r3, #0]
		for(j=0; j<3;j++){
 8002822:	7dbb      	ldrb	r3, [r7, #22]
 8002824:	3301      	adds	r3, #1
 8002826:	75bb      	strb	r3, [r7, #22]
 8002828:	7dbb      	ldrb	r3, [r7, #22]
 800282a:	2b02      	cmp	r3, #2
 800282c:	d9eb      	bls.n	8002806 <Multiply_matrix+0x1a>
	for(i=0; i<3 ;i++){
 800282e:	7dfb      	ldrb	r3, [r7, #23]
 8002830:	3301      	adds	r3, #1
 8002832:	75fb      	strb	r3, [r7, #23]
 8002834:	7dfb      	ldrb	r3, [r7, #23]
 8002836:	2b02      	cmp	r3, #2
 8002838:	d9e2      	bls.n	8002800 <Multiply_matrix+0x14>
		}
	}

	for(i=0;i<row1;i++){
 800283a:	2300      	movs	r3, #0
 800283c:	75fb      	strb	r3, [r7, #23]
 800283e:	e04e      	b.n	80028de <Multiply_matrix+0xf2>
		for(j=0;j<col2;j++){
 8002840:	2300      	movs	r3, #0
 8002842:	75bb      	strb	r3, [r7, #22]
 8002844:	e044      	b.n	80028d0 <Multiply_matrix+0xe4>
			for(k=0;k<col1;k++){
 8002846:	2300      	movs	r3, #0
 8002848:	757b      	strb	r3, [r7, #21]
 800284a:	e03a      	b.n	80028c2 <Multiply_matrix+0xd6>
				multiply[i][j] += A[i][k]*B[k][j];
 800284c:	7dfa      	ldrb	r2, [r7, #23]
 800284e:	4613      	mov	r3, r2
 8002850:	005b      	lsls	r3, r3, #1
 8002852:	4413      	add	r3, r2
 8002854:	009b      	lsls	r3, r3, #2
 8002856:	461a      	mov	r2, r3
 8002858:	687b      	ldr	r3, [r7, #4]
 800285a:	441a      	add	r2, r3
 800285c:	7dbb      	ldrb	r3, [r7, #22]
 800285e:	009b      	lsls	r3, r3, #2
 8002860:	4413      	add	r3, r2
 8002862:	ed93 7a00 	vldr	s14, [r3]
 8002866:	7dfa      	ldrb	r2, [r7, #23]
 8002868:	4613      	mov	r3, r2
 800286a:	005b      	lsls	r3, r3, #1
 800286c:	4413      	add	r3, r2
 800286e:	009b      	lsls	r3, r3, #2
 8002870:	461a      	mov	r2, r3
 8002872:	68fb      	ldr	r3, [r7, #12]
 8002874:	441a      	add	r2, r3
 8002876:	7d7b      	ldrb	r3, [r7, #21]
 8002878:	009b      	lsls	r3, r3, #2
 800287a:	4413      	add	r3, r2
 800287c:	edd3 6a00 	vldr	s13, [r3]
 8002880:	7d7a      	ldrb	r2, [r7, #21]
 8002882:	4613      	mov	r3, r2
 8002884:	005b      	lsls	r3, r3, #1
 8002886:	4413      	add	r3, r2
 8002888:	009b      	lsls	r3, r3, #2
 800288a:	461a      	mov	r2, r3
 800288c:	68bb      	ldr	r3, [r7, #8]
 800288e:	441a      	add	r2, r3
 8002890:	7dbb      	ldrb	r3, [r7, #22]
 8002892:	009b      	lsls	r3, r3, #2
 8002894:	4413      	add	r3, r2
 8002896:	edd3 7a00 	vldr	s15, [r3]
 800289a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800289e:	7dfa      	ldrb	r2, [r7, #23]
 80028a0:	4613      	mov	r3, r2
 80028a2:	005b      	lsls	r3, r3, #1
 80028a4:	4413      	add	r3, r2
 80028a6:	009b      	lsls	r3, r3, #2
 80028a8:	461a      	mov	r2, r3
 80028aa:	687b      	ldr	r3, [r7, #4]
 80028ac:	441a      	add	r2, r3
 80028ae:	7dbb      	ldrb	r3, [r7, #22]
 80028b0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80028b4:	009b      	lsls	r3, r3, #2
 80028b6:	4413      	add	r3, r2
 80028b8:	edc3 7a00 	vstr	s15, [r3]
			for(k=0;k<col1;k++){
 80028bc:	7d7b      	ldrb	r3, [r7, #21]
 80028be:	3301      	adds	r3, #1
 80028c0:	757b      	strb	r3, [r7, #21]
 80028c2:	7d7b      	ldrb	r3, [r7, #21]
 80028c4:	6a3a      	ldr	r2, [r7, #32]
 80028c6:	429a      	cmp	r2, r3
 80028c8:	dcc0      	bgt.n	800284c <Multiply_matrix+0x60>
		for(j=0;j<col2;j++){
 80028ca:	7dbb      	ldrb	r3, [r7, #22]
 80028cc:	3301      	adds	r3, #1
 80028ce:	75bb      	strb	r3, [r7, #22]
 80028d0:	7dbb      	ldrb	r3, [r7, #22]
 80028d2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80028d4:	429a      	cmp	r2, r3
 80028d6:	dcb6      	bgt.n	8002846 <Multiply_matrix+0x5a>
	for(i=0;i<row1;i++){
 80028d8:	7dfb      	ldrb	r3, [r7, #23]
 80028da:	3301      	adds	r3, #1
 80028dc:	75fb      	strb	r3, [r7, #23]
 80028de:	7dfb      	ldrb	r3, [r7, #23]
 80028e0:	683a      	ldr	r2, [r7, #0]
 80028e2:	429a      	cmp	r2, r3
 80028e4:	dcac      	bgt.n	8002840 <Multiply_matrix+0x54>
			}
		}
	}
}
 80028e6:	bf00      	nop
 80028e8:	bf00      	nop
 80028ea:	371c      	adds	r7, #28
 80028ec:	46bd      	mov	sp, r7
 80028ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028f2:	4770      	bx	lr

080028f4 <PlusOrMinus>:

void PlusOrMinus(float A[][3], float B[][3],int row,int col,int con)
{
 80028f4:	b480      	push	{r7}
 80028f6:	b087      	sub	sp, #28
 80028f8:	af00      	add	r7, sp, #0
 80028fa:	60f8      	str	r0, [r7, #12]
 80028fc:	60b9      	str	r1, [r7, #8]
 80028fe:	607a      	str	r2, [r7, #4]
 8002900:	603b      	str	r3, [r7, #0]
	uint8_t i,j;
	//set zeros
	for(i=0; i<3 ;i++){
 8002902:	2300      	movs	r3, #0
 8002904:	75fb      	strb	r3, [r7, #23]
 8002906:	e017      	b.n	8002938 <PlusOrMinus+0x44>
			for(j=0; j<3;j++){
 8002908:	2300      	movs	r3, #0
 800290a:	75bb      	strb	r3, [r7, #22]
 800290c:	e00e      	b.n	800292c <PlusOrMinus+0x38>
				pm3_3[i][j] = 0;
 800290e:	7dfa      	ldrb	r2, [r7, #23]
 8002910:	7db9      	ldrb	r1, [r7, #22]
 8002912:	484c      	ldr	r0, [pc, #304]	; (8002a44 <PlusOrMinus+0x150>)
 8002914:	4613      	mov	r3, r2
 8002916:	005b      	lsls	r3, r3, #1
 8002918:	4413      	add	r3, r2
 800291a:	440b      	add	r3, r1
 800291c:	009b      	lsls	r3, r3, #2
 800291e:	4403      	add	r3, r0
 8002920:	f04f 0200 	mov.w	r2, #0
 8002924:	601a      	str	r2, [r3, #0]
			for(j=0; j<3;j++){
 8002926:	7dbb      	ldrb	r3, [r7, #22]
 8002928:	3301      	adds	r3, #1
 800292a:	75bb      	strb	r3, [r7, #22]
 800292c:	7dbb      	ldrb	r3, [r7, #22]
 800292e:	2b02      	cmp	r3, #2
 8002930:	d9ed      	bls.n	800290e <PlusOrMinus+0x1a>
	for(i=0; i<3 ;i++){
 8002932:	7dfb      	ldrb	r3, [r7, #23]
 8002934:	3301      	adds	r3, #1
 8002936:	75fb      	strb	r3, [r7, #23]
 8002938:	7dfb      	ldrb	r3, [r7, #23]
 800293a:	2b02      	cmp	r3, #2
 800293c:	d9e4      	bls.n	8002908 <PlusOrMinus+0x14>
			}
		}
	//condition for plus
	if(con == 1){
 800293e:	6a3b      	ldr	r3, [r7, #32]
 8002940:	2b01      	cmp	r3, #1
 8002942:	d13b      	bne.n	80029bc <PlusOrMinus+0xc8>
		for(i = 0; i < row; ++i){
 8002944:	2300      	movs	r3, #0
 8002946:	75fb      	strb	r3, [r7, #23]
 8002948:	e033      	b.n	80029b2 <PlusOrMinus+0xbe>
			for (j = 0; j < col; ++j){
 800294a:	2300      	movs	r3, #0
 800294c:	75bb      	strb	r3, [r7, #22]
 800294e:	e029      	b.n	80029a4 <PlusOrMinus+0xb0>
				pm3_3[i][j] = A[i][j] + B[i][j];
 8002950:	7dfa      	ldrb	r2, [r7, #23]
 8002952:	4613      	mov	r3, r2
 8002954:	005b      	lsls	r3, r3, #1
 8002956:	4413      	add	r3, r2
 8002958:	009b      	lsls	r3, r3, #2
 800295a:	461a      	mov	r2, r3
 800295c:	68fb      	ldr	r3, [r7, #12]
 800295e:	441a      	add	r2, r3
 8002960:	7dbb      	ldrb	r3, [r7, #22]
 8002962:	009b      	lsls	r3, r3, #2
 8002964:	4413      	add	r3, r2
 8002966:	ed93 7a00 	vldr	s14, [r3]
 800296a:	7dfa      	ldrb	r2, [r7, #23]
 800296c:	4613      	mov	r3, r2
 800296e:	005b      	lsls	r3, r3, #1
 8002970:	4413      	add	r3, r2
 8002972:	009b      	lsls	r3, r3, #2
 8002974:	461a      	mov	r2, r3
 8002976:	68bb      	ldr	r3, [r7, #8]
 8002978:	441a      	add	r2, r3
 800297a:	7dbb      	ldrb	r3, [r7, #22]
 800297c:	009b      	lsls	r3, r3, #2
 800297e:	4413      	add	r3, r2
 8002980:	edd3 7a00 	vldr	s15, [r3]
 8002984:	7dfa      	ldrb	r2, [r7, #23]
 8002986:	7db9      	ldrb	r1, [r7, #22]
 8002988:	ee77 7a27 	vadd.f32	s15, s14, s15
 800298c:	482d      	ldr	r0, [pc, #180]	; (8002a44 <PlusOrMinus+0x150>)
 800298e:	4613      	mov	r3, r2
 8002990:	005b      	lsls	r3, r3, #1
 8002992:	4413      	add	r3, r2
 8002994:	440b      	add	r3, r1
 8002996:	009b      	lsls	r3, r3, #2
 8002998:	4403      	add	r3, r0
 800299a:	edc3 7a00 	vstr	s15, [r3]
			for (j = 0; j < col; ++j){
 800299e:	7dbb      	ldrb	r3, [r7, #22]
 80029a0:	3301      	adds	r3, #1
 80029a2:	75bb      	strb	r3, [r7, #22]
 80029a4:	7dbb      	ldrb	r3, [r7, #22]
 80029a6:	683a      	ldr	r2, [r7, #0]
 80029a8:	429a      	cmp	r2, r3
 80029aa:	dcd1      	bgt.n	8002950 <PlusOrMinus+0x5c>
		for(i = 0; i < row; ++i){
 80029ac:	7dfb      	ldrb	r3, [r7, #23]
 80029ae:	3301      	adds	r3, #1
 80029b0:	75fb      	strb	r3, [r7, #23]
 80029b2:	7dfb      	ldrb	r3, [r7, #23]
 80029b4:	687a      	ldr	r2, [r7, #4]
 80029b6:	429a      	cmp	r2, r3
 80029b8:	dcc7      	bgt.n	800294a <PlusOrMinus+0x56>
			for (j = 0; j < col; ++j){
				pm3_3[i][j] = A[i][j] - B[i][j];
			}
		}
	}
}
 80029ba:	e03d      	b.n	8002a38 <PlusOrMinus+0x144>
	else if(con == 2){
 80029bc:	6a3b      	ldr	r3, [r7, #32]
 80029be:	2b02      	cmp	r3, #2
 80029c0:	d13a      	bne.n	8002a38 <PlusOrMinus+0x144>
		for(i = 0; i < row; ++i){
 80029c2:	2300      	movs	r3, #0
 80029c4:	75fb      	strb	r3, [r7, #23]
 80029c6:	e033      	b.n	8002a30 <PlusOrMinus+0x13c>
			for (j = 0; j < col; ++j){
 80029c8:	2300      	movs	r3, #0
 80029ca:	75bb      	strb	r3, [r7, #22]
 80029cc:	e029      	b.n	8002a22 <PlusOrMinus+0x12e>
				pm3_3[i][j] = A[i][j] - B[i][j];
 80029ce:	7dfa      	ldrb	r2, [r7, #23]
 80029d0:	4613      	mov	r3, r2
 80029d2:	005b      	lsls	r3, r3, #1
 80029d4:	4413      	add	r3, r2
 80029d6:	009b      	lsls	r3, r3, #2
 80029d8:	461a      	mov	r2, r3
 80029da:	68fb      	ldr	r3, [r7, #12]
 80029dc:	441a      	add	r2, r3
 80029de:	7dbb      	ldrb	r3, [r7, #22]
 80029e0:	009b      	lsls	r3, r3, #2
 80029e2:	4413      	add	r3, r2
 80029e4:	ed93 7a00 	vldr	s14, [r3]
 80029e8:	7dfa      	ldrb	r2, [r7, #23]
 80029ea:	4613      	mov	r3, r2
 80029ec:	005b      	lsls	r3, r3, #1
 80029ee:	4413      	add	r3, r2
 80029f0:	009b      	lsls	r3, r3, #2
 80029f2:	461a      	mov	r2, r3
 80029f4:	68bb      	ldr	r3, [r7, #8]
 80029f6:	441a      	add	r2, r3
 80029f8:	7dbb      	ldrb	r3, [r7, #22]
 80029fa:	009b      	lsls	r3, r3, #2
 80029fc:	4413      	add	r3, r2
 80029fe:	edd3 7a00 	vldr	s15, [r3]
 8002a02:	7dfa      	ldrb	r2, [r7, #23]
 8002a04:	7db9      	ldrb	r1, [r7, #22]
 8002a06:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002a0a:	480e      	ldr	r0, [pc, #56]	; (8002a44 <PlusOrMinus+0x150>)
 8002a0c:	4613      	mov	r3, r2
 8002a0e:	005b      	lsls	r3, r3, #1
 8002a10:	4413      	add	r3, r2
 8002a12:	440b      	add	r3, r1
 8002a14:	009b      	lsls	r3, r3, #2
 8002a16:	4403      	add	r3, r0
 8002a18:	edc3 7a00 	vstr	s15, [r3]
			for (j = 0; j < col; ++j){
 8002a1c:	7dbb      	ldrb	r3, [r7, #22]
 8002a1e:	3301      	adds	r3, #1
 8002a20:	75bb      	strb	r3, [r7, #22]
 8002a22:	7dbb      	ldrb	r3, [r7, #22]
 8002a24:	683a      	ldr	r2, [r7, #0]
 8002a26:	429a      	cmp	r2, r3
 8002a28:	dcd1      	bgt.n	80029ce <PlusOrMinus+0xda>
		for(i = 0; i < row; ++i){
 8002a2a:	7dfb      	ldrb	r3, [r7, #23]
 8002a2c:	3301      	adds	r3, #1
 8002a2e:	75fb      	strb	r3, [r7, #23]
 8002a30:	7dfb      	ldrb	r3, [r7, #23]
 8002a32:	687a      	ldr	r2, [r7, #4]
 8002a34:	429a      	cmp	r2, r3
 8002a36:	dcc7      	bgt.n	80029c8 <PlusOrMinus+0xd4>
}
 8002a38:	bf00      	nop
 8002a3a:	371c      	adds	r7, #28
 8002a3c:	46bd      	mov	sp, r7
 8002a3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a42:	4770      	bx	lr
 8002a44:	20000678 	.word	0x20000678

08002a48 <equal>:

void equal(float A[][3],float B[][3],int row,int col)
{
 8002a48:	b490      	push	{r4, r7}
 8002a4a:	b086      	sub	sp, #24
 8002a4c:	af00      	add	r7, sp, #0
 8002a4e:	60f8      	str	r0, [r7, #12]
 8002a50:	60b9      	str	r1, [r7, #8]
 8002a52:	607a      	str	r2, [r7, #4]
 8002a54:	603b      	str	r3, [r7, #0]
	uint8_t i,j;
	for(i = 0; i < row; ++i){
 8002a56:	2300      	movs	r3, #0
 8002a58:	75fb      	strb	r3, [r7, #23]
 8002a5a:	e024      	b.n	8002aa6 <equal+0x5e>
		for (j = 0; j < col; ++j){
 8002a5c:	2300      	movs	r3, #0
 8002a5e:	75bb      	strb	r3, [r7, #22]
 8002a60:	e01a      	b.n	8002a98 <equal+0x50>
			A[i][j] = B[i][j];
 8002a62:	7dfa      	ldrb	r2, [r7, #23]
 8002a64:	4613      	mov	r3, r2
 8002a66:	005b      	lsls	r3, r3, #1
 8002a68:	4413      	add	r3, r2
 8002a6a:	009b      	lsls	r3, r3, #2
 8002a6c:	461a      	mov	r2, r3
 8002a6e:	68bb      	ldr	r3, [r7, #8]
 8002a70:	1898      	adds	r0, r3, r2
 8002a72:	7dbc      	ldrb	r4, [r7, #22]
 8002a74:	7dfa      	ldrb	r2, [r7, #23]
 8002a76:	4613      	mov	r3, r2
 8002a78:	005b      	lsls	r3, r3, #1
 8002a7a:	4413      	add	r3, r2
 8002a7c:	009b      	lsls	r3, r3, #2
 8002a7e:	461a      	mov	r2, r3
 8002a80:	68fb      	ldr	r3, [r7, #12]
 8002a82:	1899      	adds	r1, r3, r2
 8002a84:	7dbb      	ldrb	r3, [r7, #22]
 8002a86:	00a2      	lsls	r2, r4, #2
 8002a88:	4402      	add	r2, r0
 8002a8a:	6812      	ldr	r2, [r2, #0]
 8002a8c:	009b      	lsls	r3, r3, #2
 8002a8e:	440b      	add	r3, r1
 8002a90:	601a      	str	r2, [r3, #0]
		for (j = 0; j < col; ++j){
 8002a92:	7dbb      	ldrb	r3, [r7, #22]
 8002a94:	3301      	adds	r3, #1
 8002a96:	75bb      	strb	r3, [r7, #22]
 8002a98:	7dbb      	ldrb	r3, [r7, #22]
 8002a9a:	683a      	ldr	r2, [r7, #0]
 8002a9c:	429a      	cmp	r2, r3
 8002a9e:	dce0      	bgt.n	8002a62 <equal+0x1a>
	for(i = 0; i < row; ++i){
 8002aa0:	7dfb      	ldrb	r3, [r7, #23]
 8002aa2:	3301      	adds	r3, #1
 8002aa4:	75fb      	strb	r3, [r7, #23]
 8002aa6:	7dfb      	ldrb	r3, [r7, #23]
 8002aa8:	687a      	ldr	r2, [r7, #4]
 8002aaa:	429a      	cmp	r2, r3
 8002aac:	dcd6      	bgt.n	8002a5c <equal+0x14>
		}
	}
}
 8002aae:	bf00      	nop
 8002ab0:	bf00      	nop
 8002ab2:	3718      	adds	r7, #24
 8002ab4:	46bd      	mov	sp, r7
 8002ab6:	bc90      	pop	{r4, r7}
 8002ab8:	4770      	bx	lr
 8002aba:	0000      	movs	r0, r0
 8002abc:	0000      	movs	r0, r0
	...

08002ac0 <Trajectory>:


void Trajectory(float qf,float vb)
{
 8002ac0:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8002ac4:	b084      	sub	sp, #16
 8002ac6:	af00      	add	r7, sp, #0
 8002ac8:	ed87 0a01 	vstr	s0, [r7, #4]
 8002acc:	edc7 0a00 	vstr	s1, [r7]
	vb = vb/9.5493;
 8002ad0:	6838      	ldr	r0, [r7, #0]
 8002ad2:	f7fd fce5 	bl	80004a0 <__aeabi_f2d>
 8002ad6:	a3b4      	add	r3, pc, #720	; (adr r3, 8002da8 <Trajectory+0x2e8>)
 8002ad8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002adc:	f7fd fe62 	bl	80007a4 <__aeabi_ddiv>
 8002ae0:	4602      	mov	r2, r0
 8002ae2:	460b      	mov	r3, r1
 8002ae4:	4610      	mov	r0, r2
 8002ae6:	4619      	mov	r1, r3
 8002ae8:	f7fe f802 	bl	8000af0 <__aeabi_d2f>
 8002aec:	4603      	mov	r3, r0
 8002aee:	603b      	str	r3, [r7, #0]
	float ab = 0.225;
 8002af0:	4ba1      	ldr	r3, [pc, #644]	; (8002d78 <Trajectory+0x2b8>)
 8002af2:	60fb      	str	r3, [r7, #12]
	if(qf < 0.1){
 8002af4:	6878      	ldr	r0, [r7, #4]
 8002af6:	f7fd fcd3 	bl	80004a0 <__aeabi_f2d>
 8002afa:	a39d      	add	r3, pc, #628	; (adr r3, 8002d70 <Trajectory+0x2b0>)
 8002afc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b00:	f7fd ff98 	bl	8000a34 <__aeabi_dcmplt>
 8002b04:	4603      	mov	r3, r0
 8002b06:	2b00      	cmp	r3, #0
 8002b08:	d003      	beq.n	8002b12 <Trajectory+0x52>
		ab = 0.225;
 8002b0a:	4b9b      	ldr	r3, [pc, #620]	; (8002d78 <Trajectory+0x2b8>)
 8002b0c:	60fb      	str	r3, [r7, #12]
		vb = 1.5/9.5493;
 8002b0e:	4b9b      	ldr	r3, [pc, #620]	; (8002d7c <Trajectory+0x2bc>)
 8002b10:	603b      	str	r3, [r7, #0]
	}
	if(tuaall >= 0){
 8002b12:	4b9b      	ldr	r3, [pc, #620]	; (8002d80 <Trajectory+0x2c0>)
 8002b14:	edd3 7a00 	vldr	s15, [r3]
 8002b18:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002b1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002b20:	f2c0 827a 	blt.w	8003018 <Trajectory+0x558>
		tua = tuaall - 0;
 8002b24:	4b96      	ldr	r3, [pc, #600]	; (8002d80 <Trajectory+0x2c0>)
 8002b26:	681b      	ldr	r3, [r3, #0]
 8002b28:	4a96      	ldr	r2, [pc, #600]	; (8002d84 <Trajectory+0x2c4>)
 8002b2a:	6013      	str	r3, [r2, #0]
		if(qf/vb > vb/ab){
 8002b2c:	edd7 6a01 	vldr	s13, [r7, #4]
 8002b30:	edd7 7a00 	vldr	s15, [r7]
 8002b34:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8002b38:	ed97 6a00 	vldr	s12, [r7]
 8002b3c:	edd7 6a03 	vldr	s13, [r7, #12]
 8002b40:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8002b44:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002b48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002b4c:	dd0c      	ble.n	8002b68 <Trajectory+0xa8>
			tb = vb/ab;
 8002b4e:	edd7 6a00 	vldr	s13, [r7]
 8002b52:	ed97 7a03 	vldr	s14, [r7, #12]
 8002b56:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8002b5a:	4b8b      	ldr	r3, [pc, #556]	; (8002d88 <Trajectory+0x2c8>)
 8002b5c:	edc3 7a00 	vstr	s15, [r3]
			vb_n = vb;
 8002b60:	4a8a      	ldr	r2, [pc, #552]	; (8002d8c <Trajectory+0x2cc>)
 8002b62:	683b      	ldr	r3, [r7, #0]
 8002b64:	6013      	str	r3, [r2, #0]
 8002b66:	e031      	b.n	8002bcc <Trajectory+0x10c>

		}
		else{
			tb = sqrt(qf/ab);
 8002b68:	ed97 7a01 	vldr	s14, [r7, #4]
 8002b6c:	edd7 7a03 	vldr	s15, [r7, #12]
 8002b70:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8002b74:	ee16 0a90 	vmov	r0, s13
 8002b78:	f7fd fc92 	bl	80004a0 <__aeabi_f2d>
 8002b7c:	4602      	mov	r2, r0
 8002b7e:	460b      	mov	r3, r1
 8002b80:	ec43 2b10 	vmov	d0, r2, r3
 8002b84:	f008 ff6e 	bl	800ba64 <sqrt>
 8002b88:	ec53 2b10 	vmov	r2, r3, d0
 8002b8c:	4610      	mov	r0, r2
 8002b8e:	4619      	mov	r1, r3
 8002b90:	f7fd ffae 	bl	8000af0 <__aeabi_d2f>
 8002b94:	4603      	mov	r3, r0
 8002b96:	4a7c      	ldr	r2, [pc, #496]	; (8002d88 <Trajectory+0x2c8>)
 8002b98:	6013      	str	r3, [r2, #0]
			vb_n = sqrt(qf*ab);
 8002b9a:	ed97 7a01 	vldr	s14, [r7, #4]
 8002b9e:	edd7 7a03 	vldr	s15, [r7, #12]
 8002ba2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002ba6:	ee17 0a90 	vmov	r0, s15
 8002baa:	f7fd fc79 	bl	80004a0 <__aeabi_f2d>
 8002bae:	4602      	mov	r2, r0
 8002bb0:	460b      	mov	r3, r1
 8002bb2:	ec43 2b10 	vmov	d0, r2, r3
 8002bb6:	f008 ff55 	bl	800ba64 <sqrt>
 8002bba:	ec53 2b10 	vmov	r2, r3, d0
 8002bbe:	4610      	mov	r0, r2
 8002bc0:	4619      	mov	r1, r3
 8002bc2:	f7fd ff95 	bl	8000af0 <__aeabi_d2f>
 8002bc6:	4603      	mov	r3, r0
 8002bc8:	4a70      	ldr	r2, [pc, #448]	; (8002d8c <Trajectory+0x2cc>)
 8002bca:	6013      	str	r3, [r2, #0]
		}
		tf = (2*tb) + ((qf-(vb_n*vb_n/ab))/vb_n);
 8002bcc:	4b6e      	ldr	r3, [pc, #440]	; (8002d88 <Trajectory+0x2c8>)
 8002bce:	edd3 7a00 	vldr	s15, [r3]
 8002bd2:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8002bd6:	4b6d      	ldr	r3, [pc, #436]	; (8002d8c <Trajectory+0x2cc>)
 8002bd8:	edd3 6a00 	vldr	s13, [r3]
 8002bdc:	4b6b      	ldr	r3, [pc, #428]	; (8002d8c <Trajectory+0x2cc>)
 8002bde:	edd3 7a00 	vldr	s15, [r3]
 8002be2:	ee26 6aa7 	vmul.f32	s12, s13, s15
 8002be6:	edd7 6a03 	vldr	s13, [r7, #12]
 8002bea:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8002bee:	edd7 6a01 	vldr	s13, [r7, #4]
 8002bf2:	ee36 6ae7 	vsub.f32	s12, s13, s15
 8002bf6:	4b65      	ldr	r3, [pc, #404]	; (8002d8c <Trajectory+0x2cc>)
 8002bf8:	edd3 6a00 	vldr	s13, [r3]
 8002bfc:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8002c00:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002c04:	4b62      	ldr	r3, [pc, #392]	; (8002d90 <Trajectory+0x2d0>)
 8002c06:	edc3 7a00 	vstr	s15, [r3]
		if(tua <= tb){
 8002c0a:	4b5e      	ldr	r3, [pc, #376]	; (8002d84 <Trajectory+0x2c4>)
 8002c0c:	ed93 7a00 	vldr	s14, [r3]
 8002c10:	4b5d      	ldr	r3, [pc, #372]	; (8002d88 <Trajectory+0x2c8>)
 8002c12:	edd3 7a00 	vldr	s15, [r3]
 8002c16:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002c1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c1e:	d83f      	bhi.n	8002ca0 <Trajectory+0x1e0>
			tra_pos = 0.5*ab*tua*tua;
 8002c20:	68f8      	ldr	r0, [r7, #12]
 8002c22:	f7fd fc3d 	bl	80004a0 <__aeabi_f2d>
 8002c26:	f04f 0200 	mov.w	r2, #0
 8002c2a:	4b5a      	ldr	r3, [pc, #360]	; (8002d94 <Trajectory+0x2d4>)
 8002c2c:	f7fd fc90 	bl	8000550 <__aeabi_dmul>
 8002c30:	4602      	mov	r2, r0
 8002c32:	460b      	mov	r3, r1
 8002c34:	4614      	mov	r4, r2
 8002c36:	461d      	mov	r5, r3
 8002c38:	4b52      	ldr	r3, [pc, #328]	; (8002d84 <Trajectory+0x2c4>)
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	4618      	mov	r0, r3
 8002c3e:	f7fd fc2f 	bl	80004a0 <__aeabi_f2d>
 8002c42:	4602      	mov	r2, r0
 8002c44:	460b      	mov	r3, r1
 8002c46:	4620      	mov	r0, r4
 8002c48:	4629      	mov	r1, r5
 8002c4a:	f7fd fc81 	bl	8000550 <__aeabi_dmul>
 8002c4e:	4602      	mov	r2, r0
 8002c50:	460b      	mov	r3, r1
 8002c52:	4614      	mov	r4, r2
 8002c54:	461d      	mov	r5, r3
 8002c56:	4b4b      	ldr	r3, [pc, #300]	; (8002d84 <Trajectory+0x2c4>)
 8002c58:	681b      	ldr	r3, [r3, #0]
 8002c5a:	4618      	mov	r0, r3
 8002c5c:	f7fd fc20 	bl	80004a0 <__aeabi_f2d>
 8002c60:	4602      	mov	r2, r0
 8002c62:	460b      	mov	r3, r1
 8002c64:	4620      	mov	r0, r4
 8002c66:	4629      	mov	r1, r5
 8002c68:	f7fd fc72 	bl	8000550 <__aeabi_dmul>
 8002c6c:	4602      	mov	r2, r0
 8002c6e:	460b      	mov	r3, r1
 8002c70:	4610      	mov	r0, r2
 8002c72:	4619      	mov	r1, r3
 8002c74:	f7fd ff3c 	bl	8000af0 <__aeabi_d2f>
 8002c78:	4603      	mov	r3, r0
 8002c7a:	4a47      	ldr	r2, [pc, #284]	; (8002d98 <Trajectory+0x2d8>)
 8002c7c:	6013      	str	r3, [r2, #0]
			tra_velo = ab*tua;
 8002c7e:	4b41      	ldr	r3, [pc, #260]	; (8002d84 <Trajectory+0x2c4>)
 8002c80:	ed93 7a00 	vldr	s14, [r3]
 8002c84:	edd7 7a03 	vldr	s15, [r7, #12]
 8002c88:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002c8c:	4b43      	ldr	r3, [pc, #268]	; (8002d9c <Trajectory+0x2dc>)
 8002c8e:	edc3 7a00 	vstr	s15, [r3]
			tra_acc = ab;
 8002c92:	4a43      	ldr	r2, [pc, #268]	; (8002da0 <Trajectory+0x2e0>)
 8002c94:	68fb      	ldr	r3, [r7, #12]
 8002c96:	6013      	str	r3, [r2, #0]
			/*if(tra_velo < velostart){
				tra_velo = velostart;
			}*/
			start_tra = 1;
 8002c98:	4b42      	ldr	r3, [pc, #264]	; (8002da4 <Trajectory+0x2e4>)
 8002c9a:	2201      	movs	r2, #1
 8002c9c:	701a      	strb	r2, [r3, #0]
 8002c9e:	e17b      	b.n	8002f98 <Trajectory+0x4d8>
		}
		else if(tua < (tf-tb)){
 8002ca0:	4b3b      	ldr	r3, [pc, #236]	; (8002d90 <Trajectory+0x2d0>)
 8002ca2:	ed93 7a00 	vldr	s14, [r3]
 8002ca6:	4b38      	ldr	r3, [pc, #224]	; (8002d88 <Trajectory+0x2c8>)
 8002ca8:	edd3 7a00 	vldr	s15, [r3]
 8002cac:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002cb0:	4b34      	ldr	r3, [pc, #208]	; (8002d84 <Trajectory+0x2c4>)
 8002cb2:	edd3 7a00 	vldr	s15, [r3]
 8002cb6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002cba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002cbe:	dd77      	ble.n	8002db0 <Trajectory+0x2f0>
			tra_pos = (0.5*ab*tb*tb) + (vb_n*(tua-tb));
 8002cc0:	68f8      	ldr	r0, [r7, #12]
 8002cc2:	f7fd fbed 	bl	80004a0 <__aeabi_f2d>
 8002cc6:	f04f 0200 	mov.w	r2, #0
 8002cca:	4b32      	ldr	r3, [pc, #200]	; (8002d94 <Trajectory+0x2d4>)
 8002ccc:	f7fd fc40 	bl	8000550 <__aeabi_dmul>
 8002cd0:	4602      	mov	r2, r0
 8002cd2:	460b      	mov	r3, r1
 8002cd4:	4614      	mov	r4, r2
 8002cd6:	461d      	mov	r5, r3
 8002cd8:	4b2b      	ldr	r3, [pc, #172]	; (8002d88 <Trajectory+0x2c8>)
 8002cda:	681b      	ldr	r3, [r3, #0]
 8002cdc:	4618      	mov	r0, r3
 8002cde:	f7fd fbdf 	bl	80004a0 <__aeabi_f2d>
 8002ce2:	4602      	mov	r2, r0
 8002ce4:	460b      	mov	r3, r1
 8002ce6:	4620      	mov	r0, r4
 8002ce8:	4629      	mov	r1, r5
 8002cea:	f7fd fc31 	bl	8000550 <__aeabi_dmul>
 8002cee:	4602      	mov	r2, r0
 8002cf0:	460b      	mov	r3, r1
 8002cf2:	4614      	mov	r4, r2
 8002cf4:	461d      	mov	r5, r3
 8002cf6:	4b24      	ldr	r3, [pc, #144]	; (8002d88 <Trajectory+0x2c8>)
 8002cf8:	681b      	ldr	r3, [r3, #0]
 8002cfa:	4618      	mov	r0, r3
 8002cfc:	f7fd fbd0 	bl	80004a0 <__aeabi_f2d>
 8002d00:	4602      	mov	r2, r0
 8002d02:	460b      	mov	r3, r1
 8002d04:	4620      	mov	r0, r4
 8002d06:	4629      	mov	r1, r5
 8002d08:	f7fd fc22 	bl	8000550 <__aeabi_dmul>
 8002d0c:	4602      	mov	r2, r0
 8002d0e:	460b      	mov	r3, r1
 8002d10:	4614      	mov	r4, r2
 8002d12:	461d      	mov	r5, r3
 8002d14:	4b1b      	ldr	r3, [pc, #108]	; (8002d84 <Trajectory+0x2c4>)
 8002d16:	ed93 7a00 	vldr	s14, [r3]
 8002d1a:	4b1b      	ldr	r3, [pc, #108]	; (8002d88 <Trajectory+0x2c8>)
 8002d1c:	edd3 7a00 	vldr	s15, [r3]
 8002d20:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002d24:	4b19      	ldr	r3, [pc, #100]	; (8002d8c <Trajectory+0x2cc>)
 8002d26:	edd3 7a00 	vldr	s15, [r3]
 8002d2a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002d2e:	ee17 0a90 	vmov	r0, s15
 8002d32:	f7fd fbb5 	bl	80004a0 <__aeabi_f2d>
 8002d36:	4602      	mov	r2, r0
 8002d38:	460b      	mov	r3, r1
 8002d3a:	4620      	mov	r0, r4
 8002d3c:	4629      	mov	r1, r5
 8002d3e:	f7fd fa51 	bl	80001e4 <__adddf3>
 8002d42:	4602      	mov	r2, r0
 8002d44:	460b      	mov	r3, r1
 8002d46:	4610      	mov	r0, r2
 8002d48:	4619      	mov	r1, r3
 8002d4a:	f7fd fed1 	bl	8000af0 <__aeabi_d2f>
 8002d4e:	4603      	mov	r3, r0
 8002d50:	4a11      	ldr	r2, [pc, #68]	; (8002d98 <Trajectory+0x2d8>)
 8002d52:	6013      	str	r3, [r2, #0]
			tra_velo = vb_n;
 8002d54:	4b0d      	ldr	r3, [pc, #52]	; (8002d8c <Trajectory+0x2cc>)
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	4a10      	ldr	r2, [pc, #64]	; (8002d9c <Trajectory+0x2dc>)
 8002d5a:	6013      	str	r3, [r2, #0]
			tra_acc = 0;
 8002d5c:	4b10      	ldr	r3, [pc, #64]	; (8002da0 <Trajectory+0x2e0>)
 8002d5e:	f04f 0200 	mov.w	r2, #0
 8002d62:	601a      	str	r2, [r3, #0]
			start_tra = 0;
 8002d64:	4b0f      	ldr	r3, [pc, #60]	; (8002da4 <Trajectory+0x2e4>)
 8002d66:	2200      	movs	r2, #0
 8002d68:	701a      	strb	r2, [r3, #0]
 8002d6a:	e115      	b.n	8002f98 <Trajectory+0x4d8>
 8002d6c:	f3af 8000 	nop.w
 8002d70:	9999999a 	.word	0x9999999a
 8002d74:	3fb99999 	.word	0x3fb99999
 8002d78:	3e666666 	.word	0x3e666666
 8002d7c:	3e20d978 	.word	0x3e20d978
 8002d80:	200005dc 	.word	0x200005dc
 8002d84:	200005d8 	.word	0x200005d8
 8002d88:	200005cc 	.word	0x200005cc
 8002d8c:	200005d0 	.word	0x200005d0
 8002d90:	200005d4 	.word	0x200005d4
 8002d94:	3fe00000 	.word	0x3fe00000
 8002d98:	200005c0 	.word	0x200005c0
 8002d9c:	200005c4 	.word	0x200005c4
 8002da0:	200005c8 	.word	0x200005c8
 8002da4:	200005ee 	.word	0x200005ee
 8002da8:	d97f62b7 	.word	0xd97f62b7
 8002dac:	4023193d 	.word	0x4023193d

		}
		else if(tua >= tf-tb && tua <= tf){
 8002db0:	4ba2      	ldr	r3, [pc, #648]	; (800303c <Trajectory+0x57c>)
 8002db2:	ed93 7a00 	vldr	s14, [r3]
 8002db6:	4ba2      	ldr	r3, [pc, #648]	; (8003040 <Trajectory+0x580>)
 8002db8:	edd3 7a00 	vldr	s15, [r3]
 8002dbc:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002dc0:	4ba0      	ldr	r3, [pc, #640]	; (8003044 <Trajectory+0x584>)
 8002dc2:	edd3 7a00 	vldr	s15, [r3]
 8002dc6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002dca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002dce:	f200 80e3 	bhi.w	8002f98 <Trajectory+0x4d8>
 8002dd2:	4b9c      	ldr	r3, [pc, #624]	; (8003044 <Trajectory+0x584>)
 8002dd4:	ed93 7a00 	vldr	s14, [r3]
 8002dd8:	4b98      	ldr	r3, [pc, #608]	; (800303c <Trajectory+0x57c>)
 8002dda:	edd3 7a00 	vldr	s15, [r3]
 8002dde:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002de2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002de6:	f200 80d7 	bhi.w	8002f98 <Trajectory+0x4d8>
			tra_pos = (0.5*ab*tb*tb) + (vb_n*(tua-(tf-tb))) + (vb_n*(tf-(2*tb))) - (0.5*ab*(tua-(tf-tb))*(tua-(tf-tb)));
 8002dea:	68f8      	ldr	r0, [r7, #12]
 8002dec:	f7fd fb58 	bl	80004a0 <__aeabi_f2d>
 8002df0:	f04f 0200 	mov.w	r2, #0
 8002df4:	4b94      	ldr	r3, [pc, #592]	; (8003048 <Trajectory+0x588>)
 8002df6:	f7fd fbab 	bl	8000550 <__aeabi_dmul>
 8002dfa:	4602      	mov	r2, r0
 8002dfc:	460b      	mov	r3, r1
 8002dfe:	4614      	mov	r4, r2
 8002e00:	461d      	mov	r5, r3
 8002e02:	4b8f      	ldr	r3, [pc, #572]	; (8003040 <Trajectory+0x580>)
 8002e04:	681b      	ldr	r3, [r3, #0]
 8002e06:	4618      	mov	r0, r3
 8002e08:	f7fd fb4a 	bl	80004a0 <__aeabi_f2d>
 8002e0c:	4602      	mov	r2, r0
 8002e0e:	460b      	mov	r3, r1
 8002e10:	4620      	mov	r0, r4
 8002e12:	4629      	mov	r1, r5
 8002e14:	f7fd fb9c 	bl	8000550 <__aeabi_dmul>
 8002e18:	4602      	mov	r2, r0
 8002e1a:	460b      	mov	r3, r1
 8002e1c:	4614      	mov	r4, r2
 8002e1e:	461d      	mov	r5, r3
 8002e20:	4b87      	ldr	r3, [pc, #540]	; (8003040 <Trajectory+0x580>)
 8002e22:	681b      	ldr	r3, [r3, #0]
 8002e24:	4618      	mov	r0, r3
 8002e26:	f7fd fb3b 	bl	80004a0 <__aeabi_f2d>
 8002e2a:	4602      	mov	r2, r0
 8002e2c:	460b      	mov	r3, r1
 8002e2e:	4620      	mov	r0, r4
 8002e30:	4629      	mov	r1, r5
 8002e32:	f7fd fb8d 	bl	8000550 <__aeabi_dmul>
 8002e36:	4602      	mov	r2, r0
 8002e38:	460b      	mov	r3, r1
 8002e3a:	4614      	mov	r4, r2
 8002e3c:	461d      	mov	r5, r3
 8002e3e:	4b81      	ldr	r3, [pc, #516]	; (8003044 <Trajectory+0x584>)
 8002e40:	ed93 7a00 	vldr	s14, [r3]
 8002e44:	4b7d      	ldr	r3, [pc, #500]	; (800303c <Trajectory+0x57c>)
 8002e46:	edd3 6a00 	vldr	s13, [r3]
 8002e4a:	4b7d      	ldr	r3, [pc, #500]	; (8003040 <Trajectory+0x580>)
 8002e4c:	edd3 7a00 	vldr	s15, [r3]
 8002e50:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8002e54:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002e58:	4b7c      	ldr	r3, [pc, #496]	; (800304c <Trajectory+0x58c>)
 8002e5a:	edd3 7a00 	vldr	s15, [r3]
 8002e5e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002e62:	ee17 0a90 	vmov	r0, s15
 8002e66:	f7fd fb1b 	bl	80004a0 <__aeabi_f2d>
 8002e6a:	4602      	mov	r2, r0
 8002e6c:	460b      	mov	r3, r1
 8002e6e:	4620      	mov	r0, r4
 8002e70:	4629      	mov	r1, r5
 8002e72:	f7fd f9b7 	bl	80001e4 <__adddf3>
 8002e76:	4602      	mov	r2, r0
 8002e78:	460b      	mov	r3, r1
 8002e7a:	4614      	mov	r4, r2
 8002e7c:	461d      	mov	r5, r3
 8002e7e:	4b6f      	ldr	r3, [pc, #444]	; (800303c <Trajectory+0x57c>)
 8002e80:	ed93 7a00 	vldr	s14, [r3]
 8002e84:	4b6e      	ldr	r3, [pc, #440]	; (8003040 <Trajectory+0x580>)
 8002e86:	edd3 7a00 	vldr	s15, [r3]
 8002e8a:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8002e8e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002e92:	4b6e      	ldr	r3, [pc, #440]	; (800304c <Trajectory+0x58c>)
 8002e94:	edd3 7a00 	vldr	s15, [r3]
 8002e98:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002e9c:	ee17 0a90 	vmov	r0, s15
 8002ea0:	f7fd fafe 	bl	80004a0 <__aeabi_f2d>
 8002ea4:	4602      	mov	r2, r0
 8002ea6:	460b      	mov	r3, r1
 8002ea8:	4620      	mov	r0, r4
 8002eaa:	4629      	mov	r1, r5
 8002eac:	f7fd f99a 	bl	80001e4 <__adddf3>
 8002eb0:	4602      	mov	r2, r0
 8002eb2:	460b      	mov	r3, r1
 8002eb4:	4614      	mov	r4, r2
 8002eb6:	461d      	mov	r5, r3
 8002eb8:	68f8      	ldr	r0, [r7, #12]
 8002eba:	f7fd faf1 	bl	80004a0 <__aeabi_f2d>
 8002ebe:	f04f 0200 	mov.w	r2, #0
 8002ec2:	4b61      	ldr	r3, [pc, #388]	; (8003048 <Trajectory+0x588>)
 8002ec4:	f7fd fb44 	bl	8000550 <__aeabi_dmul>
 8002ec8:	4602      	mov	r2, r0
 8002eca:	460b      	mov	r3, r1
 8002ecc:	4690      	mov	r8, r2
 8002ece:	4699      	mov	r9, r3
 8002ed0:	4b5c      	ldr	r3, [pc, #368]	; (8003044 <Trajectory+0x584>)
 8002ed2:	ed93 7a00 	vldr	s14, [r3]
 8002ed6:	4b59      	ldr	r3, [pc, #356]	; (800303c <Trajectory+0x57c>)
 8002ed8:	edd3 6a00 	vldr	s13, [r3]
 8002edc:	4b58      	ldr	r3, [pc, #352]	; (8003040 <Trajectory+0x580>)
 8002ede:	edd3 7a00 	vldr	s15, [r3]
 8002ee2:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8002ee6:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002eea:	ee17 0a90 	vmov	r0, s15
 8002eee:	f7fd fad7 	bl	80004a0 <__aeabi_f2d>
 8002ef2:	4602      	mov	r2, r0
 8002ef4:	460b      	mov	r3, r1
 8002ef6:	4640      	mov	r0, r8
 8002ef8:	4649      	mov	r1, r9
 8002efa:	f7fd fb29 	bl	8000550 <__aeabi_dmul>
 8002efe:	4602      	mov	r2, r0
 8002f00:	460b      	mov	r3, r1
 8002f02:	4690      	mov	r8, r2
 8002f04:	4699      	mov	r9, r3
 8002f06:	4b4f      	ldr	r3, [pc, #316]	; (8003044 <Trajectory+0x584>)
 8002f08:	ed93 7a00 	vldr	s14, [r3]
 8002f0c:	4b4b      	ldr	r3, [pc, #300]	; (800303c <Trajectory+0x57c>)
 8002f0e:	edd3 6a00 	vldr	s13, [r3]
 8002f12:	4b4b      	ldr	r3, [pc, #300]	; (8003040 <Trajectory+0x580>)
 8002f14:	edd3 7a00 	vldr	s15, [r3]
 8002f18:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8002f1c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002f20:	ee17 0a90 	vmov	r0, s15
 8002f24:	f7fd fabc 	bl	80004a0 <__aeabi_f2d>
 8002f28:	4602      	mov	r2, r0
 8002f2a:	460b      	mov	r3, r1
 8002f2c:	4640      	mov	r0, r8
 8002f2e:	4649      	mov	r1, r9
 8002f30:	f7fd fb0e 	bl	8000550 <__aeabi_dmul>
 8002f34:	4602      	mov	r2, r0
 8002f36:	460b      	mov	r3, r1
 8002f38:	4620      	mov	r0, r4
 8002f3a:	4629      	mov	r1, r5
 8002f3c:	f7fd f950 	bl	80001e0 <__aeabi_dsub>
 8002f40:	4602      	mov	r2, r0
 8002f42:	460b      	mov	r3, r1
 8002f44:	4610      	mov	r0, r2
 8002f46:	4619      	mov	r1, r3
 8002f48:	f7fd fdd2 	bl	8000af0 <__aeabi_d2f>
 8002f4c:	4603      	mov	r3, r0
 8002f4e:	4a40      	ldr	r2, [pc, #256]	; (8003050 <Trajectory+0x590>)
 8002f50:	6013      	str	r3, [r2, #0]
			tra_velo = vb_n - (ab*(tua-(tf-tb)));
 8002f52:	4b3e      	ldr	r3, [pc, #248]	; (800304c <Trajectory+0x58c>)
 8002f54:	ed93 7a00 	vldr	s14, [r3]
 8002f58:	4b3a      	ldr	r3, [pc, #232]	; (8003044 <Trajectory+0x584>)
 8002f5a:	edd3 6a00 	vldr	s13, [r3]
 8002f5e:	4b37      	ldr	r3, [pc, #220]	; (800303c <Trajectory+0x57c>)
 8002f60:	ed93 6a00 	vldr	s12, [r3]
 8002f64:	4b36      	ldr	r3, [pc, #216]	; (8003040 <Trajectory+0x580>)
 8002f66:	edd3 7a00 	vldr	s15, [r3]
 8002f6a:	ee76 7a67 	vsub.f32	s15, s12, s15
 8002f6e:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8002f72:	edd7 7a03 	vldr	s15, [r7, #12]
 8002f76:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002f7a:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002f7e:	4b35      	ldr	r3, [pc, #212]	; (8003054 <Trajectory+0x594>)
 8002f80:	edc3 7a00 	vstr	s15, [r3]
			tra_acc = -ab;
 8002f84:	edd7 7a03 	vldr	s15, [r7, #12]
 8002f88:	eef1 7a67 	vneg.f32	s15, s15
 8002f8c:	4b32      	ldr	r3, [pc, #200]	; (8003058 <Trajectory+0x598>)
 8002f8e:	edc3 7a00 	vstr	s15, [r3]
			start_tra = 2;
 8002f92:	4b32      	ldr	r3, [pc, #200]	; (800305c <Trajectory+0x59c>)
 8002f94:	2202      	movs	r2, #2
 8002f96:	701a      	strb	r2, [r3, #0]
		}
		if(tua <= tf){
 8002f98:	4b2a      	ldr	r3, [pc, #168]	; (8003044 <Trajectory+0x584>)
 8002f9a:	ed93 7a00 	vldr	s14, [r3]
 8002f9e:	4b27      	ldr	r3, [pc, #156]	; (800303c <Trajectory+0x57c>)
 8002fa0:	edd3 7a00 	vldr	s15, [r3]
 8002fa4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002fa8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002fac:	d900      	bls.n	8002fb0 <Trajectory+0x4f0>
		tra_velo = 0;
		tra_acc = 0;
	}


}
 8002fae:	e03f      	b.n	8003030 <Trajectory+0x570>
			if(direct == 0){
 8002fb0:	4b2b      	ldr	r3, [pc, #172]	; (8003060 <Trajectory+0x5a0>)
 8002fb2:	781b      	ldrb	r3, [r3, #0]
 8002fb4:	2b00      	cmp	r3, #0
 8002fb6:	d123      	bne.n	8003000 <Trajectory+0x540>
				tra_pos = tra_pos*-1;
 8002fb8:	4b25      	ldr	r3, [pc, #148]	; (8003050 <Trajectory+0x590>)
 8002fba:	edd3 7a00 	vldr	s15, [r3]
 8002fbe:	eef1 7a67 	vneg.f32	s15, s15
 8002fc2:	4b23      	ldr	r3, [pc, #140]	; (8003050 <Trajectory+0x590>)
 8002fc4:	edc3 7a00 	vstr	s15, [r3]
				tra_velo = tra_velo *-1;
 8002fc8:	4b22      	ldr	r3, [pc, #136]	; (8003054 <Trajectory+0x594>)
 8002fca:	edd3 7a00 	vldr	s15, [r3]
 8002fce:	eef1 7a67 	vneg.f32	s15, s15
 8002fd2:	4b20      	ldr	r3, [pc, #128]	; (8003054 <Trajectory+0x594>)
 8002fd4:	edc3 7a00 	vstr	s15, [r3]
				tra_acc = tra_acc *-1;
 8002fd8:	4b1f      	ldr	r3, [pc, #124]	; (8003058 <Trajectory+0x598>)
 8002fda:	edd3 7a00 	vldr	s15, [r3]
 8002fde:	eef1 7a67 	vneg.f32	s15, s15
 8002fe2:	4b1d      	ldr	r3, [pc, #116]	; (8003058 <Trajectory+0x598>)
 8002fe4:	edc3 7a00 	vstr	s15, [r3]
				tra_pos += rad_before;
 8002fe8:	4b19      	ldr	r3, [pc, #100]	; (8003050 <Trajectory+0x590>)
 8002fea:	ed93 7a00 	vldr	s14, [r3]
 8002fee:	4b1d      	ldr	r3, [pc, #116]	; (8003064 <Trajectory+0x5a4>)
 8002ff0:	edd3 7a00 	vldr	s15, [r3]
 8002ff4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002ff8:	4b15      	ldr	r3, [pc, #84]	; (8003050 <Trajectory+0x590>)
 8002ffa:	edc3 7a00 	vstr	s15, [r3]
}
 8002ffe:	e017      	b.n	8003030 <Trajectory+0x570>
				tra_pos += rad_before;
 8003000:	4b13      	ldr	r3, [pc, #76]	; (8003050 <Trajectory+0x590>)
 8003002:	ed93 7a00 	vldr	s14, [r3]
 8003006:	4b17      	ldr	r3, [pc, #92]	; (8003064 <Trajectory+0x5a4>)
 8003008:	edd3 7a00 	vldr	s15, [r3]
 800300c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003010:	4b0f      	ldr	r3, [pc, #60]	; (8003050 <Trajectory+0x590>)
 8003012:	edc3 7a00 	vstr	s15, [r3]
}
 8003016:	e00b      	b.n	8003030 <Trajectory+0x570>
		tra_pos = 0;
 8003018:	4b0d      	ldr	r3, [pc, #52]	; (8003050 <Trajectory+0x590>)
 800301a:	f04f 0200 	mov.w	r2, #0
 800301e:	601a      	str	r2, [r3, #0]
		tra_velo = 0;
 8003020:	4b0c      	ldr	r3, [pc, #48]	; (8003054 <Trajectory+0x594>)
 8003022:	f04f 0200 	mov.w	r2, #0
 8003026:	601a      	str	r2, [r3, #0]
		tra_acc = 0;
 8003028:	4b0b      	ldr	r3, [pc, #44]	; (8003058 <Trajectory+0x598>)
 800302a:	f04f 0200 	mov.w	r2, #0
 800302e:	601a      	str	r2, [r3, #0]
}
 8003030:	bf00      	nop
 8003032:	3710      	adds	r7, #16
 8003034:	46bd      	mov	sp, r7
 8003036:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 800303a:	bf00      	nop
 800303c:	200005d4 	.word	0x200005d4
 8003040:	200005cc 	.word	0x200005cc
 8003044:	200005d8 	.word	0x200005d8
 8003048:	3fe00000 	.word	0x3fe00000
 800304c:	200005d0 	.word	0x200005d0
 8003050:	200005c0 	.word	0x200005c0
 8003054:	200005c4 	.word	0x200005c4
 8003058:	200005c8 	.word	0x200005c8
 800305c:	200005ee 	.word	0x200005ee
 8003060:	2000002c 	.word	0x2000002c
 8003064:	200005e8 	.word	0x200005e8

08003068 <Drivemotor>:
void Drivemotor(int PWM){
 8003068:	b590      	push	{r4, r7, lr}
 800306a:	b083      	sub	sp, #12
 800306c:	af00      	add	r7, sp, #0
 800306e:	6078      	str	r0, [r7, #4]
	if(PWM<=0 && PWM>=-10000){
 8003070:	687b      	ldr	r3, [r7, #4]
 8003072:	2b00      	cmp	r3, #0
 8003074:	dc18      	bgt.n	80030a8 <Drivemotor+0x40>
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	4a29      	ldr	r2, [pc, #164]	; (8003120 <Drivemotor+0xb8>)
 800307a:	4293      	cmp	r3, r2
 800307c:	db14      	blt.n	80030a8 <Drivemotor+0x40>
		PWM = 10000-aaabs(PWM);
 800307e:	6878      	ldr	r0, [r7, #4]
 8003080:	f000 fae6 	bl	8003650 <aaabs>
 8003084:	4603      	mov	r3, r0
 8003086:	f5c3 531c 	rsb	r3, r3, #9984	; 0x2700
 800308a:	3310      	adds	r3, #16
 800308c:	607b      	str	r3, [r7, #4]
		htim2.Instance->CCR1=aaabs(PWM);
 800308e:	4b25      	ldr	r3, [pc, #148]	; (8003124 <Drivemotor+0xbc>)
 8003090:	681c      	ldr	r4, [r3, #0]
 8003092:	6878      	ldr	r0, [r7, #4]
 8003094:	f000 fadc 	bl	8003650 <aaabs>
 8003098:	4603      	mov	r3, r0
 800309a:	6363      	str	r3, [r4, #52]	; 0x34
		htim2.Instance->CCR2=10000;
 800309c:	4b21      	ldr	r3, [pc, #132]	; (8003124 <Drivemotor+0xbc>)
 800309e:	681b      	ldr	r3, [r3, #0]
 80030a0:	f242 7210 	movw	r2, #10000	; 0x2710
 80030a4:	639a      	str	r2, [r3, #56]	; 0x38
 80030a6:	e036      	b.n	8003116 <Drivemotor+0xae>
		}
	else if (PWM<-10000){
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	4a1d      	ldr	r2, [pc, #116]	; (8003120 <Drivemotor+0xb8>)
 80030ac:	4293      	cmp	r3, r2
 80030ae:	da09      	bge.n	80030c4 <Drivemotor+0x5c>
		htim2.Instance->CCR1=0;
 80030b0:	4b1c      	ldr	r3, [pc, #112]	; (8003124 <Drivemotor+0xbc>)
 80030b2:	681b      	ldr	r3, [r3, #0]
 80030b4:	2200      	movs	r2, #0
 80030b6:	635a      	str	r2, [r3, #52]	; 0x34
		htim2.Instance->CCR2=10000;
 80030b8:	4b1a      	ldr	r3, [pc, #104]	; (8003124 <Drivemotor+0xbc>)
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	f242 7210 	movw	r2, #10000	; 0x2710
 80030c0:	639a      	str	r2, [r3, #56]	; 0x38
		htim2.Instance->CCR2=aaabs(PWM);
	}else if(PWM>10000){
		htim2.Instance->CCR1=10000;
		htim2.Instance->CCR2=0;
	}
}
 80030c2:	e028      	b.n	8003116 <Drivemotor+0xae>
	}else if(PWM>0 && PWM<=10000){
 80030c4:	687b      	ldr	r3, [r7, #4]
 80030c6:	2b00      	cmp	r3, #0
 80030c8:	dd16      	ble.n	80030f8 <Drivemotor+0x90>
 80030ca:	687b      	ldr	r3, [r7, #4]
 80030cc:	f242 7210 	movw	r2, #10000	; 0x2710
 80030d0:	4293      	cmp	r3, r2
 80030d2:	dc11      	bgt.n	80030f8 <Drivemotor+0x90>
		PWM = 10000-PWM;
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	f5c3 531c 	rsb	r3, r3, #9984	; 0x2700
 80030da:	3310      	adds	r3, #16
 80030dc:	607b      	str	r3, [r7, #4]
		htim2.Instance->CCR1=10000;
 80030de:	4b11      	ldr	r3, [pc, #68]	; (8003124 <Drivemotor+0xbc>)
 80030e0:	681b      	ldr	r3, [r3, #0]
 80030e2:	f242 7210 	movw	r2, #10000	; 0x2710
 80030e6:	635a      	str	r2, [r3, #52]	; 0x34
		htim2.Instance->CCR2=aaabs(PWM);
 80030e8:	4b0e      	ldr	r3, [pc, #56]	; (8003124 <Drivemotor+0xbc>)
 80030ea:	681c      	ldr	r4, [r3, #0]
 80030ec:	6878      	ldr	r0, [r7, #4]
 80030ee:	f000 faaf 	bl	8003650 <aaabs>
 80030f2:	4603      	mov	r3, r0
 80030f4:	63a3      	str	r3, [r4, #56]	; 0x38
 80030f6:	e00e      	b.n	8003116 <Drivemotor+0xae>
	}else if(PWM>10000){
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	f242 7210 	movw	r2, #10000	; 0x2710
 80030fe:	4293      	cmp	r3, r2
 8003100:	dd09      	ble.n	8003116 <Drivemotor+0xae>
		htim2.Instance->CCR1=10000;
 8003102:	4b08      	ldr	r3, [pc, #32]	; (8003124 <Drivemotor+0xbc>)
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	f242 7210 	movw	r2, #10000	; 0x2710
 800310a:	635a      	str	r2, [r3, #52]	; 0x34
		htim2.Instance->CCR2=0;
 800310c:	4b05      	ldr	r3, [pc, #20]	; (8003124 <Drivemotor+0xbc>)
 800310e:	681b      	ldr	r3, [r3, #0]
 8003110:	2200      	movs	r2, #0
 8003112:	639a      	str	r2, [r3, #56]	; 0x38
}
 8003114:	e7ff      	b.n	8003116 <Drivemotor+0xae>
 8003116:	bf00      	nop
 8003118:	370c      	adds	r7, #12
 800311a:	46bd      	mov	sp, r7
 800311c:	bd90      	pop	{r4, r7, pc}
 800311e:	bf00      	nop
 8003120:	ffffd8f0 	.word	0xffffd8f0
 8003124:	20000330 	.word	0x20000330

08003128 <NFcontacton>:

void NFcontacton(){
 8003128:	b580      	push	{r7, lr}
 800312a:	b082      	sub	sp, #8
 800312c:	af02      	add	r7, sp, #8
	HAL_I2C_Master_Transmit(&hi2c1, NFW_ADDR, &NFREG_ON, 1, 10);
 800312e:	230a      	movs	r3, #10
 8003130:	9300      	str	r3, [sp, #0]
 8003132:	2301      	movs	r3, #1
 8003134:	4a05      	ldr	r2, [pc, #20]	; (800314c <NFcontacton+0x24>)
 8003136:	2146      	movs	r1, #70	; 0x46
 8003138:	4805      	ldr	r0, [pc, #20]	; (8003150 <NFcontacton+0x28>)
 800313a:	f002 fd09 	bl	8005b50 <HAL_I2C_Master_Transmit>
	microsecDelay(60);
 800313e:	203c      	movs	r0, #60	; 0x3c
 8003140:	f000 fa68 	bl	8003614 <microsecDelay>
	//NFwriteFlag = 0;
}
 8003144:	bf00      	nop
 8003146:	46bd      	mov	sp, r7
 8003148:	bd80      	pop	{r7, pc}
 800314a:	bf00      	nop
 800314c:	2000001f 	.word	0x2000001f
 8003150:	200001c4 	.word	0x200001c4

08003154 <NFgetstate>:

void NFgetstate(){
 8003154:	b580      	push	{r7, lr}
 8003156:	b082      	sub	sp, #8
 8003158:	af02      	add	r7, sp, #8
	if( (hi2c1.State == HAL_I2C_STATE_READY && (HAL_GetTick()-NFtimest>500))){
 800315a:	4b17      	ldr	r3, [pc, #92]	; (80031b8 <NFgetstate+0x64>)
 800315c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003160:	b2db      	uxtb	r3, r3
 8003162:	2b20      	cmp	r3, #32
 8003164:	d124      	bne.n	80031b0 <NFgetstate+0x5c>
 8003166:	f001 fcb3 	bl	8004ad0 <HAL_GetTick>
 800316a:	4603      	mov	r3, r0
 800316c:	4a13      	ldr	r2, [pc, #76]	; (80031bc <NFgetstate+0x68>)
 800316e:	8812      	ldrh	r2, [r2, #0]
 8003170:	1a9b      	subs	r3, r3, r2
 8003172:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8003176:	d91b      	bls.n	80031b0 <NFgetstate+0x5c>
		NFtimest = HAL_GetTick();
 8003178:	f001 fcaa 	bl	8004ad0 <HAL_GetTick>
 800317c:	4603      	mov	r3, r0
 800317e:	b29a      	uxth	r2, r3
 8003180:	4b0e      	ldr	r3, [pc, #56]	; (80031bc <NFgetstate+0x68>)
 8003182:	801a      	strh	r2, [r3, #0]
		HAL_I2C_Master_Transmit(&hi2c1, NFW_ADDR, &NFREG_INIT, 1, 10);
 8003184:	230a      	movs	r3, #10
 8003186:	9300      	str	r3, [sp, #0]
 8003188:	2301      	movs	r3, #1
 800318a:	4a0d      	ldr	r2, [pc, #52]	; (80031c0 <NFgetstate+0x6c>)
 800318c:	2146      	movs	r1, #70	; 0x46
 800318e:	480a      	ldr	r0, [pc, #40]	; (80031b8 <NFgetstate+0x64>)
 8003190:	f002 fcde 	bl	8005b50 <HAL_I2C_Master_Transmit>
		microsecDelay(100);
 8003194:	2064      	movs	r0, #100	; 0x64
 8003196:	f000 fa3d 	bl	8003614 <microsecDelay>
		HAL_I2C_Master_Receive(&hi2c1, NFR_ADDR, &NFstate, 1, 10);
 800319a:	230a      	movs	r3, #10
 800319c:	9300      	str	r3, [sp, #0]
 800319e:	2301      	movs	r3, #1
 80031a0:	4a08      	ldr	r2, [pc, #32]	; (80031c4 <NFgetstate+0x70>)
 80031a2:	2147      	movs	r1, #71	; 0x47
 80031a4:	4804      	ldr	r0, [pc, #16]	; (80031b8 <NFgetstate+0x64>)
 80031a6:	f002 fdd1 	bl	8005d4c <HAL_I2C_Master_Receive>
		microsecDelay(100);
 80031aa:	2064      	movs	r0, #100	; 0x64
 80031ac:	f000 fa32 	bl	8003614 <microsecDelay>
		//NFreadFlag = 0;
	}
}
 80031b0:	bf00      	nop
 80031b2:	46bd      	mov	sp, r7
 80031b4:	bd80      	pop	{r7, pc}
 80031b6:	bf00      	nop
 80031b8:	200001c4 	.word	0x200001c4
 80031bc:	20000572 	.word	0x20000572
 80031c0:	20000020 	.word	0x20000020
 80031c4:	20000570 	.word	0x20000570

080031c8 <AMT222getpos>:

void AMT222getpos(uint16_t *data){
 80031c8:	b580      	push	{r7, lr}
 80031ca:	b082      	sub	sp, #8
 80031cc:	af00      	add	r7, sp, #0
 80031ce:	6078      	str	r0, [r7, #4]

	switch(AMTstate){
 80031d0:	4b6d      	ldr	r3, [pc, #436]	; (8003388 <AMT222getpos+0x1c0>)
 80031d2:	781b      	ldrb	r3, [r3, #0]
 80031d4:	2b03      	cmp	r3, #3
 80031d6:	f200 80c6 	bhi.w	8003366 <AMT222getpos+0x19e>
 80031da:	a201      	add	r2, pc, #4	; (adr r2, 80031e0 <AMT222getpos+0x18>)
 80031dc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80031e0:	080031f1 	.word	0x080031f1
 80031e4:	0800321d 	.word	0x0800321d
 80031e8:	08003231 	.word	0x08003231
 80031ec:	08003245 	.word	0x08003245
	case 0:
		timeStamp = micros();
 80031f0:	f000 faac 	bl	800374c <micros>
 80031f4:	4602      	mov	r2, r0
 80031f6:	460b      	mov	r3, r1
 80031f8:	4b64      	ldr	r3, [pc, #400]	; (800338c <AMT222getpos+0x1c4>)
 80031fa:	601a      	str	r2, [r3, #0]
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 80031fc:	2200      	movs	r2, #0
 80031fe:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003202:	4863      	ldr	r0, [pc, #396]	; (8003390 <AMT222getpos+0x1c8>)
 8003204:	f002 fb2e 	bl	8005864 <HAL_GPIO_WritePin>
	    HAL_SPI_TransmitReceive_DMA(&hspi3, &AMTGETPOS[0], &AMTHbyte, 1);
 8003208:	2301      	movs	r3, #1
 800320a:	4a62      	ldr	r2, [pc, #392]	; (8003394 <AMT222getpos+0x1cc>)
 800320c:	4962      	ldr	r1, [pc, #392]	; (8003398 <AMT222getpos+0x1d0>)
 800320e:	4863      	ldr	r0, [pc, #396]	; (800339c <AMT222getpos+0x1d4>)
 8003210:	f005 fcec 	bl	8008bec <HAL_SPI_TransmitReceive_DMA>
	    AMTcomplete = 0;
 8003214:	4b62      	ldr	r3, [pc, #392]	; (80033a0 <AMT222getpos+0x1d8>)
 8003216:	2200      	movs	r2, #0
 8003218:	701a      	strb	r2, [r3, #0]
		break;
 800321a:	e0a4      	b.n	8003366 <AMT222getpos+0x19e>
	case 1:
		//microsecDelay(5);
		AMTstate+=1;
 800321c:	4b5a      	ldr	r3, [pc, #360]	; (8003388 <AMT222getpos+0x1c0>)
 800321e:	781b      	ldrb	r3, [r3, #0]
 8003220:	3301      	adds	r3, #1
 8003222:	b2da      	uxtb	r2, r3
 8003224:	4b58      	ldr	r3, [pc, #352]	; (8003388 <AMT222getpos+0x1c0>)
 8003226:	701a      	strb	r2, [r3, #0]
		AMTcomplete = 1;
 8003228:	4b5d      	ldr	r3, [pc, #372]	; (80033a0 <AMT222getpos+0x1d8>)
 800322a:	2201      	movs	r2, #1
 800322c:	701a      	strb	r2, [r3, #0]
		break;
 800322e:	e09a      	b.n	8003366 <AMT222getpos+0x19e>
	case 2:
		HAL_SPI_TransmitReceive_DMA(&hspi3, &AMTGETPOS[1], &AMTLbyte, 1);
 8003230:	2301      	movs	r3, #1
 8003232:	4a5c      	ldr	r2, [pc, #368]	; (80033a4 <AMT222getpos+0x1dc>)
 8003234:	495c      	ldr	r1, [pc, #368]	; (80033a8 <AMT222getpos+0x1e0>)
 8003236:	4859      	ldr	r0, [pc, #356]	; (800339c <AMT222getpos+0x1d4>)
 8003238:	f005 fcd8 	bl	8008bec <HAL_SPI_TransmitReceive_DMA>
		AMTcomplete = 0;
 800323c:	4b58      	ldr	r3, [pc, #352]	; (80033a0 <AMT222getpos+0x1d8>)
 800323e:	2200      	movs	r2, #0
 8003240:	701a      	strb	r2, [r3, #0]
		break;
 8003242:	e090      	b.n	8003366 <AMT222getpos+0x19e>
	case 3:
		AMTlogic_checkbit = AMT222checkbit( AMTHbyte, AMTLbyte);
 8003244:	4b53      	ldr	r3, [pc, #332]	; (8003394 <AMT222getpos+0x1cc>)
 8003246:	781b      	ldrb	r3, [r3, #0]
 8003248:	461a      	mov	r2, r3
 800324a:	4b56      	ldr	r3, [pc, #344]	; (80033a4 <AMT222getpos+0x1dc>)
 800324c:	781b      	ldrb	r3, [r3, #0]
 800324e:	4619      	mov	r1, r3
 8003250:	4610      	mov	r0, r2
 8003252:	f000 f8f1 	bl	8003438 <AMT222checkbit>
 8003256:	4603      	mov	r3, r0
 8003258:	461a      	mov	r2, r3
 800325a:	4b54      	ldr	r3, [pc, #336]	; (80033ac <AMT222getpos+0x1e4>)
 800325c:	701a      	strb	r2, [r3, #0]
	    if( AMTlogic_checkbit){
 800325e:	4b53      	ldr	r3, [pc, #332]	; (80033ac <AMT222getpos+0x1e4>)
 8003260:	781b      	ldrb	r3, [r3, #0]
 8003262:	2b00      	cmp	r3, #0
 8003264:	d078      	beq.n	8003358 <AMT222getpos+0x190>
		    // Shift high bit to correct position and sum them.
		    rawPos = AMTLbyte + ((AMTHbyte & 0b00111111)<<8);
 8003266:	4b4f      	ldr	r3, [pc, #316]	; (80033a4 <AMT222getpos+0x1dc>)
 8003268:	781b      	ldrb	r3, [r3, #0]
 800326a:	b29a      	uxth	r2, r3
 800326c:	4b49      	ldr	r3, [pc, #292]	; (8003394 <AMT222getpos+0x1cc>)
 800326e:	781b      	ldrb	r3, [r3, #0]
 8003270:	021b      	lsls	r3, r3, #8
 8003272:	b29b      	uxth	r3, r3
 8003274:	f403 537c 	and.w	r3, r3, #16128	; 0x3f00
 8003278:	b29b      	uxth	r3, r3
 800327a:	4413      	add	r3, r2
 800327c:	b29a      	uxth	r2, r3
 800327e:	4b4c      	ldr	r3, [pc, #304]	; (80033b0 <AMT222getpos+0x1e8>)
 8003280:	801a      	strh	r2, [r3, #0]
		     // Convert uint16 to angle variable.
		    current_rad = (((rawPos)*2*PI)/(16384));
 8003282:	4b4b      	ldr	r3, [pc, #300]	; (80033b0 <AMT222getpos+0x1e8>)
 8003284:	881b      	ldrh	r3, [r3, #0]
 8003286:	005b      	lsls	r3, r3, #1
 8003288:	ee07 3a90 	vmov	s15, r3
 800328c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003290:	ed9f 7a48 	vldr	s14, [pc, #288]	; 80033b4 <AMT222getpos+0x1ec>
 8003294:	ee27 7a87 	vmul.f32	s14, s15, s14
 8003298:	eddf 6a47 	vldr	s13, [pc, #284]	; 80033b8 <AMT222getpos+0x1f0>
 800329c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80032a0:	4b46      	ldr	r3, [pc, #280]	; (80033bc <AMT222getpos+0x1f4>)
 80032a2:	edc3 7a00 	vstr	s15, [r3]
		    if(setinitial == 0){
 80032a6:	4b46      	ldr	r3, [pc, #280]	; (80033c0 <AMT222getpos+0x1f8>)
 80032a8:	781b      	ldrb	r3, [r3, #0]
 80032aa:	2b00      	cmp	r3, #0
 80032ac:	d150      	bne.n	8003350 <AMT222getpos+0x188>
		    current_rad = offset - current_rad;
 80032ae:	4b45      	ldr	r3, [pc, #276]	; (80033c4 <AMT222getpos+0x1fc>)
 80032b0:	ed93 7a00 	vldr	s14, [r3]
 80032b4:	4b41      	ldr	r3, [pc, #260]	; (80033bc <AMT222getpos+0x1f4>)
 80032b6:	edd3 7a00 	vldr	s15, [r3]
 80032ba:	ee77 7a67 	vsub.f32	s15, s14, s15
 80032be:	4b3f      	ldr	r3, [pc, #252]	; (80033bc <AMT222getpos+0x1f4>)
 80032c0:	edc3 7a00 	vstr	s15, [r3]
		    unwrapping();
 80032c4:	f000 f93a 	bl	800353c <unwrapping>
			if(current_rad_wrap-prevPos2 > 0.1 || current_rad_wrap-prevPos2 < -0.1){
 80032c8:	4b3f      	ldr	r3, [pc, #252]	; (80033c8 <AMT222getpos+0x200>)
 80032ca:	ed93 7a00 	vldr	s14, [r3]
 80032ce:	4b3f      	ldr	r3, [pc, #252]	; (80033cc <AMT222getpos+0x204>)
 80032d0:	edd3 7a00 	vldr	s15, [r3]
 80032d4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80032d8:	ee17 0a90 	vmov	r0, s15
 80032dc:	f7fd f8e0 	bl	80004a0 <__aeabi_f2d>
 80032e0:	a323      	add	r3, pc, #140	; (adr r3, 8003370 <AMT222getpos+0x1a8>)
 80032e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032e6:	f7fd fbc3 	bl	8000a70 <__aeabi_dcmpgt>
 80032ea:	4603      	mov	r3, r0
 80032ec:	2b00      	cmp	r3, #0
 80032ee:	d113      	bne.n	8003318 <AMT222getpos+0x150>
 80032f0:	4b35      	ldr	r3, [pc, #212]	; (80033c8 <AMT222getpos+0x200>)
 80032f2:	ed93 7a00 	vldr	s14, [r3]
 80032f6:	4b35      	ldr	r3, [pc, #212]	; (80033cc <AMT222getpos+0x204>)
 80032f8:	edd3 7a00 	vldr	s15, [r3]
 80032fc:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003300:	ee17 0a90 	vmov	r0, s15
 8003304:	f7fd f8cc 	bl	80004a0 <__aeabi_f2d>
 8003308:	a31b      	add	r3, pc, #108	; (adr r3, 8003378 <AMT222getpos+0x1b0>)
 800330a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800330e:	f7fd fb91 	bl	8000a34 <__aeabi_dcmplt>
 8003312:	4603      	mov	r3, r0
 8003314:	2b00      	cmp	r3, #0
 8003316:	d003      	beq.n	8003320 <AMT222getpos+0x158>
				current_rad_wrap = prevPos2;
 8003318:	4b2c      	ldr	r3, [pc, #176]	; (80033cc <AMT222getpos+0x204>)
 800331a:	681b      	ldr	r3, [r3, #0]
 800331c:	4a2a      	ldr	r2, [pc, #168]	; (80033c8 <AMT222getpos+0x200>)
 800331e:	6013      	str	r3, [r2, #0]
			}
		    prevPos2 = current_rad_wrap;
 8003320:	4b29      	ldr	r3, [pc, #164]	; (80033c8 <AMT222getpos+0x200>)
 8003322:	681b      	ldr	r3, [r3, #0]
 8003324:	4a29      	ldr	r2, [pc, #164]	; (80033cc <AMT222getpos+0x204>)
 8003326:	6013      	str	r3, [r2, #0]
		    deg = current_rad_wrap*57.2957795;
 8003328:	4b27      	ldr	r3, [pc, #156]	; (80033c8 <AMT222getpos+0x200>)
 800332a:	681b      	ldr	r3, [r3, #0]
 800332c:	4618      	mov	r0, r3
 800332e:	f7fd f8b7 	bl	80004a0 <__aeabi_f2d>
 8003332:	a313      	add	r3, pc, #76	; (adr r3, 8003380 <AMT222getpos+0x1b8>)
 8003334:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003338:	f7fd f90a 	bl	8000550 <__aeabi_dmul>
 800333c:	4602      	mov	r2, r0
 800333e:	460b      	mov	r3, r1
 8003340:	4610      	mov	r0, r2
 8003342:	4619      	mov	r1, r3
 8003344:	f7fd fbd4 	bl	8000af0 <__aeabi_d2f>
 8003348:	4603      	mov	r3, r0
 800334a:	4a21      	ldr	r2, [pc, #132]	; (80033d0 <AMT222getpos+0x208>)
 800334c:	6013      	str	r3, [r2, #0]
 800334e:	e003      	b.n	8003358 <AMT222getpos+0x190>
		    }
		    else{
		    	prevPos2 = 0;
 8003350:	4b1e      	ldr	r3, [pc, #120]	; (80033cc <AMT222getpos+0x204>)
 8003352:	f04f 0200 	mov.w	r2, #0
 8003356:	601a      	str	r2, [r3, #0]
		    }
			  /*if(current_rad <= 0){
				  current_rad = 6.28-(current_rad*-1);
			  }*/
	    }
		AMTstate = 0;
 8003358:	4b0b      	ldr	r3, [pc, #44]	; (8003388 <AMT222getpos+0x1c0>)
 800335a:	2200      	movs	r2, #0
 800335c:	701a      	strb	r2, [r3, #0]
		AMTcomplete = 0;
 800335e:	4b10      	ldr	r3, [pc, #64]	; (80033a0 <AMT222getpos+0x1d8>)
 8003360:	2200      	movs	r2, #0
 8003362:	701a      	strb	r2, [r3, #0]
		break;
 8003364:	bf00      	nop
	}
}
 8003366:	bf00      	nop
 8003368:	3708      	adds	r7, #8
 800336a:	46bd      	mov	sp, r7
 800336c:	bd80      	pop	{r7, pc}
 800336e:	bf00      	nop
 8003370:	9999999a 	.word	0x9999999a
 8003374:	3fb99999 	.word	0x3fb99999
 8003378:	9999999a 	.word	0x9999999a
 800337c:	bfb99999 	.word	0xbfb99999
 8003380:	1a47a9e3 	.word	0x1a47a9e3
 8003384:	404ca5dc 	.word	0x404ca5dc
 8003388:	2000058c 	.word	0x2000058c
 800338c:	20000564 	.word	0x20000564
 8003390:	40020400 	.word	0x40020400
 8003394:	2000057a 	.word	0x2000057a
 8003398:	20000578 	.word	0x20000578
 800339c:	20000218 	.word	0x20000218
 80033a0:	20000023 	.word	0x20000023
 80033a4:	2000057b 	.word	0x2000057b
 80033a8:	20000579 	.word	0x20000579
 80033ac:	2000057c 	.word	0x2000057c
 80033b0:	2000057e 	.word	0x2000057e
 80033b4:	40490fdb 	.word	0x40490fdb
 80033b8:	46800000 	.word	0x46800000
 80033bc:	20000580 	.word	0x20000580
 80033c0:	2000000c 	.word	0x2000000c
 80033c4:	20000010 	.word	0x20000010
 80033c8:	20000584 	.word	0x20000584
 80033cc:	200007d4 	.word	0x200007d4
 80033d0:	20000588 	.word	0x20000588

080033d4 <HAL_SPI_TxRxCpltCallback>:
void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi){
 80033d4:	b580      	push	{r7, lr}
 80033d6:	b082      	sub	sp, #8
 80033d8:	af00      	add	r7, sp, #0
 80033da:	6078      	str	r0, [r7, #4]
	if(hspi == &hspi3){
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	4a12      	ldr	r2, [pc, #72]	; (8003428 <HAL_SPI_TxRxCpltCallback+0x54>)
 80033e0:	4293      	cmp	r3, r2
 80033e2:	d11d      	bne.n	8003420 <HAL_SPI_TxRxCpltCallback+0x4c>
		AMTstate+=1;
 80033e4:	4b11      	ldr	r3, [pc, #68]	; (800342c <HAL_SPI_TxRxCpltCallback+0x58>)
 80033e6:	781b      	ldrb	r3, [r3, #0]
 80033e8:	3301      	adds	r3, #1
 80033ea:	b2da      	uxtb	r2, r3
 80033ec:	4b0f      	ldr	r3, [pc, #60]	; (800342c <HAL_SPI_TxRxCpltCallback+0x58>)
 80033ee:	701a      	strb	r2, [r3, #0]
		AMTcomplete = 1;
 80033f0:	4b0f      	ldr	r3, [pc, #60]	; (8003430 <HAL_SPI_TxRxCpltCallback+0x5c>)
 80033f2:	2201      	movs	r2, #1
 80033f4:	701a      	strb	r2, [r3, #0]
		if(AMTstate == 1){
 80033f6:	4b0d      	ldr	r3, [pc, #52]	; (800342c <HAL_SPI_TxRxCpltCallback+0x58>)
 80033f8:	781b      	ldrb	r3, [r3, #0]
 80033fa:	2b01      	cmp	r3, #1
 80033fc:	d103      	bne.n	8003406 <HAL_SPI_TxRxCpltCallback+0x32>
			HAL_SPI_DMAStop(&hspi3);
 80033fe:	480a      	ldr	r0, [pc, #40]	; (8003428 <HAL_SPI_TxRxCpltCallback+0x54>)
 8003400:	f005 fcf6 	bl	8008df0 <HAL_SPI_DMAStop>
			//microsecDelay(5);
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
			HAL_SPI_DMAStop(&hspi3);
		}
	}
}
 8003404:	e00c      	b.n	8003420 <HAL_SPI_TxRxCpltCallback+0x4c>
		else if(AMTstate == 3){
 8003406:	4b09      	ldr	r3, [pc, #36]	; (800342c <HAL_SPI_TxRxCpltCallback+0x58>)
 8003408:	781b      	ldrb	r3, [r3, #0]
 800340a:	2b03      	cmp	r3, #3
 800340c:	d108      	bne.n	8003420 <HAL_SPI_TxRxCpltCallback+0x4c>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 800340e:	2201      	movs	r2, #1
 8003410:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003414:	4807      	ldr	r0, [pc, #28]	; (8003434 <HAL_SPI_TxRxCpltCallback+0x60>)
 8003416:	f002 fa25 	bl	8005864 <HAL_GPIO_WritePin>
			HAL_SPI_DMAStop(&hspi3);
 800341a:	4803      	ldr	r0, [pc, #12]	; (8003428 <HAL_SPI_TxRxCpltCallback+0x54>)
 800341c:	f005 fce8 	bl	8008df0 <HAL_SPI_DMAStop>
}
 8003420:	bf00      	nop
 8003422:	3708      	adds	r7, #8
 8003424:	46bd      	mov	sp, r7
 8003426:	bd80      	pop	{r7, pc}
 8003428:	20000218 	.word	0x20000218
 800342c:	2000058c 	.word	0x2000058c
 8003430:	20000023 	.word	0x20000023
 8003434:	40020400 	.word	0x40020400

08003438 <AMT222checkbit>:

uint8_t AMT222checkbit( uint8_t *H, uint8_t *L){
 8003438:	b480      	push	{r7}
 800343a:	b085      	sub	sp, #20
 800343c:	af00      	add	r7, sp, #0
 800343e:	6078      	str	r0, [r7, #4]
 8003440:	6039      	str	r1, [r7, #0]

	uint8_t K1 = 0;
 8003442:	2300      	movs	r3, #0
 8003444:	73fb      	strb	r3, [r7, #15]
	uint8_t K0 = 0;
 8003446:	2300      	movs	r3, #0
 8003448:	73bb      	strb	r3, [r7, #14]

	K1 = !( ((*H>>5) & 0x01) ^ ((*H>>3) & 0x01) ^ ((*H>>1) & 0x01) ^
 800344a:	687b      	ldr	r3, [r7, #4]
 800344c:	781b      	ldrb	r3, [r3, #0]
 800344e:	095b      	lsrs	r3, r3, #5
 8003450:	b2da      	uxtb	r2, r3
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	781b      	ldrb	r3, [r3, #0]
 8003456:	08db      	lsrs	r3, r3, #3
 8003458:	b2db      	uxtb	r3, r3
 800345a:	4053      	eors	r3, r2
 800345c:	b2da      	uxtb	r2, r3
 800345e:	687b      	ldr	r3, [r7, #4]
 8003460:	781b      	ldrb	r3, [r3, #0]
 8003462:	085b      	lsrs	r3, r3, #1
 8003464:	b2db      	uxtb	r3, r3
 8003466:	4053      	eors	r3, r2
 8003468:	b2da      	uxtb	r2, r3
			((*L>>7) & 0x01) ^ ((*L>>5) & 0x01) ^ ((*L>>7) & 0x03) ^
 800346a:	683b      	ldr	r3, [r7, #0]
 800346c:	781b      	ldrb	r3, [r3, #0]
	K1 = !( ((*H>>5) & 0x01) ^ ((*H>>3) & 0x01) ^ ((*H>>1) & 0x01) ^
 800346e:	09db      	lsrs	r3, r3, #7
 8003470:	b2db      	uxtb	r3, r3
 8003472:	4053      	eors	r3, r2
 8003474:	b2da      	uxtb	r2, r3
			((*L>>7) & 0x01) ^ ((*L>>5) & 0x01) ^ ((*L>>7) & 0x03) ^
 8003476:	683b      	ldr	r3, [r7, #0]
 8003478:	781b      	ldrb	r3, [r3, #0]
 800347a:	095b      	lsrs	r3, r3, #5
 800347c:	b2db      	uxtb	r3, r3
 800347e:	4053      	eors	r3, r2
 8003480:	b2db      	uxtb	r3, r3
 8003482:	f003 0201 	and.w	r2, r3, #1
 8003486:	683b      	ldr	r3, [r7, #0]
 8003488:	781b      	ldrb	r3, [r3, #0]
 800348a:	09db      	lsrs	r3, r3, #7
 800348c:	b2db      	uxtb	r3, r3
 800348e:	f003 0303 	and.w	r3, r3, #3
 8003492:	405a      	eors	r2, r3
			((*L>>1) & 0x01) );
 8003494:	683b      	ldr	r3, [r7, #0]
 8003496:	781b      	ldrb	r3, [r3, #0]
 8003498:	085b      	lsrs	r3, r3, #1
 800349a:	b2db      	uxtb	r3, r3
 800349c:	f003 0301 	and.w	r3, r3, #1
	K1 = !( ((*H>>5) & 0x01) ^ ((*H>>3) & 0x01) ^ ((*H>>1) & 0x01) ^
 80034a0:	429a      	cmp	r2, r3
 80034a2:	bf0c      	ite	eq
 80034a4:	2301      	moveq	r3, #1
 80034a6:	2300      	movne	r3, #0
 80034a8:	b2db      	uxtb	r3, r3
 80034aa:	73fb      	strb	r3, [r7, #15]

	K0 = !( ((*H>>4) & 0x01) ^ ((*H>>2) & 0x01) ^ ((*H>>0) & 0x01) ^
 80034ac:	687b      	ldr	r3, [r7, #4]
 80034ae:	781b      	ldrb	r3, [r3, #0]
 80034b0:	091b      	lsrs	r3, r3, #4
 80034b2:	b2da      	uxtb	r2, r3
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	781b      	ldrb	r3, [r3, #0]
 80034b8:	089b      	lsrs	r3, r3, #2
 80034ba:	b2db      	uxtb	r3, r3
 80034bc:	4053      	eors	r3, r2
 80034be:	b2da      	uxtb	r2, r3
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	781b      	ldrb	r3, [r3, #0]
 80034c4:	4053      	eors	r3, r2
 80034c6:	b2da      	uxtb	r2, r3
			((*L>>6) & 0x01) ^ ((*L>>4) & 0x01) ^ ((*L>>2) & 0x03) ^
 80034c8:	683b      	ldr	r3, [r7, #0]
 80034ca:	781b      	ldrb	r3, [r3, #0]
	K0 = !( ((*H>>4) & 0x01) ^ ((*H>>2) & 0x01) ^ ((*H>>0) & 0x01) ^
 80034cc:	099b      	lsrs	r3, r3, #6
 80034ce:	b2db      	uxtb	r3, r3
 80034d0:	4053      	eors	r3, r2
 80034d2:	b2da      	uxtb	r2, r3
			((*L>>6) & 0x01) ^ ((*L>>4) & 0x01) ^ ((*L>>2) & 0x03) ^
 80034d4:	683b      	ldr	r3, [r7, #0]
 80034d6:	781b      	ldrb	r3, [r3, #0]
 80034d8:	091b      	lsrs	r3, r3, #4
 80034da:	b2db      	uxtb	r3, r3
 80034dc:	4053      	eors	r3, r2
 80034de:	b2db      	uxtb	r3, r3
 80034e0:	f003 0201 	and.w	r2, r3, #1
 80034e4:	683b      	ldr	r3, [r7, #0]
 80034e6:	781b      	ldrb	r3, [r3, #0]
 80034e8:	089b      	lsrs	r3, r3, #2
 80034ea:	b2db      	uxtb	r3, r3
 80034ec:	f003 0303 	and.w	r3, r3, #3
 80034f0:	405a      	eors	r2, r3
			((*L>>0) & 0x01) );
 80034f2:	683b      	ldr	r3, [r7, #0]
 80034f4:	781b      	ldrb	r3, [r3, #0]
 80034f6:	f003 0301 	and.w	r3, r3, #1
	K0 = !( ((*H>>4) & 0x01) ^ ((*H>>2) & 0x01) ^ ((*H>>0) & 0x01) ^
 80034fa:	429a      	cmp	r2, r3
 80034fc:	bf0c      	ite	eq
 80034fe:	2301      	moveq	r3, #1
 8003500:	2300      	movne	r3, #0
 8003502:	b2db      	uxtb	r3, r3
 8003504:	73bb      	strb	r3, [r7, #14]

	if( (K1 == ((*H>>7) & 0x01)) && (K0 == ((*H>>6) & 0x01)) ){
 8003506:	7bfa      	ldrb	r2, [r7, #15]
 8003508:	687b      	ldr	r3, [r7, #4]
 800350a:	781b      	ldrb	r3, [r3, #0]
 800350c:	09db      	lsrs	r3, r3, #7
 800350e:	b2db      	uxtb	r3, r3
 8003510:	f003 0301 	and.w	r3, r3, #1
 8003514:	429a      	cmp	r2, r3
 8003516:	d10a      	bne.n	800352e <AMT222checkbit+0xf6>
 8003518:	7bba      	ldrb	r2, [r7, #14]
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	781b      	ldrb	r3, [r3, #0]
 800351e:	099b      	lsrs	r3, r3, #6
 8003520:	b2db      	uxtb	r3, r3
 8003522:	f003 0301 	and.w	r3, r3, #1
 8003526:	429a      	cmp	r2, r3
 8003528:	d101      	bne.n	800352e <AMT222checkbit+0xf6>
		return 1;
 800352a:	2301      	movs	r3, #1
 800352c:	e000      	b.n	8003530 <AMT222checkbit+0xf8>
	}
	else{
		return 0;
 800352e:	2300      	movs	r3, #0
	}
}
 8003530:	4618      	mov	r0, r3
 8003532:	3714      	adds	r7, #20
 8003534:	46bd      	mov	sp, r7
 8003536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800353a:	4770      	bx	lr

0800353c <unwrapping>:
void unwrapping(){
 800353c:	b480      	push	{r7}
 800353e:	af00      	add	r7, sp, #0
	  p_n = current_rad;
 8003540:	4b2c      	ldr	r3, [pc, #176]	; (80035f4 <unwrapping+0xb8>)
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	4a2c      	ldr	r2, [pc, #176]	; (80035f8 <unwrapping+0xbc>)
 8003546:	6013      	str	r3, [r2, #0]
		if (p_n - p_n_1 <= -1*e)
 8003548:	4b2b      	ldr	r3, [pc, #172]	; (80035f8 <unwrapping+0xbc>)
 800354a:	ed93 7a00 	vldr	s14, [r3]
 800354e:	4b2b      	ldr	r3, [pc, #172]	; (80035fc <unwrapping+0xc0>)
 8003550:	edd3 7a00 	vldr	s15, [r3]
 8003554:	ee37 7a67 	vsub.f32	s14, s14, s15
 8003558:	4b29      	ldr	r3, [pc, #164]	; (8003600 <unwrapping+0xc4>)
 800355a:	edd3 7a00 	vldr	s15, [r3]
 800355e:	eef1 7a67 	vneg.f32	s15, s15
 8003562:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8003566:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800356a:	d80b      	bhi.n	8003584 <unwrapping+0x48>
		{
			p_0 = p_0_1 + p_max;
 800356c:	4b25      	ldr	r3, [pc, #148]	; (8003604 <unwrapping+0xc8>)
 800356e:	ed93 7a00 	vldr	s14, [r3]
 8003572:	4b25      	ldr	r3, [pc, #148]	; (8003608 <unwrapping+0xcc>)
 8003574:	edd3 7a00 	vldr	s15, [r3]
 8003578:	ee77 7a27 	vadd.f32	s15, s14, s15
 800357c:	4b23      	ldr	r3, [pc, #140]	; (800360c <unwrapping+0xd0>)
 800357e:	edc3 7a00 	vstr	s15, [r3]
 8003582:	e01f      	b.n	80035c4 <unwrapping+0x88>
		}
		else if(p_n - p_n_1 >= e)
 8003584:	4b1c      	ldr	r3, [pc, #112]	; (80035f8 <unwrapping+0xbc>)
 8003586:	ed93 7a00 	vldr	s14, [r3]
 800358a:	4b1c      	ldr	r3, [pc, #112]	; (80035fc <unwrapping+0xc0>)
 800358c:	edd3 7a00 	vldr	s15, [r3]
 8003590:	ee37 7a67 	vsub.f32	s14, s14, s15
 8003594:	4b1a      	ldr	r3, [pc, #104]	; (8003600 <unwrapping+0xc4>)
 8003596:	edd3 7a00 	vldr	s15, [r3]
 800359a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800359e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80035a2:	db0b      	blt.n	80035bc <unwrapping+0x80>
		{
			p_0 = p_0_1 - p_max;
 80035a4:	4b17      	ldr	r3, [pc, #92]	; (8003604 <unwrapping+0xc8>)
 80035a6:	ed93 7a00 	vldr	s14, [r3]
 80035aa:	4b17      	ldr	r3, [pc, #92]	; (8003608 <unwrapping+0xcc>)
 80035ac:	edd3 7a00 	vldr	s15, [r3]
 80035b0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80035b4:	4b15      	ldr	r3, [pc, #84]	; (800360c <unwrapping+0xd0>)
 80035b6:	edc3 7a00 	vstr	s15, [r3]
 80035ba:	e003      	b.n	80035c4 <unwrapping+0x88>
		}
		else
		{
			p_0 = p_0_1;
 80035bc:	4b11      	ldr	r3, [pc, #68]	; (8003604 <unwrapping+0xc8>)
 80035be:	681b      	ldr	r3, [r3, #0]
 80035c0:	4a12      	ldr	r2, [pc, #72]	; (800360c <unwrapping+0xd0>)
 80035c2:	6013      	str	r3, [r2, #0]
		}
		//DegAbs[0][0] = (p_n + p_0); //สั�?�?าณที่ผ่าน�?าร unwrap �?ล้ว
		current_rad_wrap = (p_n + p_0);
 80035c4:	4b0c      	ldr	r3, [pc, #48]	; (80035f8 <unwrapping+0xbc>)
 80035c6:	ed93 7a00 	vldr	s14, [r3]
 80035ca:	4b10      	ldr	r3, [pc, #64]	; (800360c <unwrapping+0xd0>)
 80035cc:	edd3 7a00 	vldr	s15, [r3]
 80035d0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80035d4:	4b0e      	ldr	r3, [pc, #56]	; (8003610 <unwrapping+0xd4>)
 80035d6:	edc3 7a00 	vstr	s15, [r3]
		//Memory ให้�?ับตัว�?ปร p[n-1] �?ละ p0[n-1]
		p_n_1 = p_n;
 80035da:	4b07      	ldr	r3, [pc, #28]	; (80035f8 <unwrapping+0xbc>)
 80035dc:	681b      	ldr	r3, [r3, #0]
 80035de:	4a07      	ldr	r2, [pc, #28]	; (80035fc <unwrapping+0xc0>)
 80035e0:	6013      	str	r3, [r2, #0]
		p_0_1 = p_0;
 80035e2:	4b0a      	ldr	r3, [pc, #40]	; (800360c <unwrapping+0xd0>)
 80035e4:	681b      	ldr	r3, [r3, #0]
 80035e6:	4a07      	ldr	r2, [pc, #28]	; (8003604 <unwrapping+0xc8>)
 80035e8:	6013      	str	r3, [r2, #0]
}
 80035ea:	bf00      	nop
 80035ec:	46bd      	mov	sp, r7
 80035ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035f2:	4770      	bx	lr
 80035f4:	20000580 	.word	0x20000580
 80035f8:	20000590 	.word	0x20000590
 80035fc:	20000594 	.word	0x20000594
 8003600:	20000028 	.word	0x20000028
 8003604:	2000059c 	.word	0x2000059c
 8003608:	20000024 	.word	0x20000024
 800360c:	20000598 	.word	0x20000598
 8003610:	20000584 	.word	0x20000584

08003614 <microsecDelay>:
void microsecDelay(uint8_t delayTime){
 8003614:	b580      	push	{r7, lr}
 8003616:	b084      	sub	sp, #16
 8003618:	af00      	add	r7, sp, #0
 800361a:	4603      	mov	r3, r0
 800361c:	71fb      	strb	r3, [r7, #7]
	uint32_t startTime = micros(); 	//reference point to count passed time
 800361e:	f000 f895 	bl	800374c <micros>
 8003622:	4602      	mov	r2, r0
 8003624:	460b      	mov	r3, r1
 8003626:	4613      	mov	r3, r2
 8003628:	60bb      	str	r3, [r7, #8]
	uint32_t passedTime  = 0;
 800362a:	2300      	movs	r3, #0
 800362c:	60fb      	str	r3, [r7, #12]
	while (passedTime<delayTime){
 800362e:	e006      	b.n	800363e <microsecDelay+0x2a>
		passedTime = micros() - startTime;
 8003630:	f000 f88c 	bl	800374c <micros>
 8003634:	4602      	mov	r2, r0
 8003636:	460b      	mov	r3, r1
 8003638:	68bb      	ldr	r3, [r7, #8]
 800363a:	1ad3      	subs	r3, r2, r3
 800363c:	60fb      	str	r3, [r7, #12]
	while (passedTime<delayTime){
 800363e:	79fb      	ldrb	r3, [r7, #7]
 8003640:	68fa      	ldr	r2, [r7, #12]
 8003642:	429a      	cmp	r2, r3
 8003644:	d3f4      	bcc.n	8003630 <microsecDelay+0x1c>
	}
}
 8003646:	bf00      	nop
 8003648:	bf00      	nop
 800364a:	3710      	adds	r7, #16
 800364c:	46bd      	mov	sp, r7
 800364e:	bd80      	pop	{r7, pc}

08003650 <aaabs>:


uint32_t aaabs(int x){
 8003650:	b480      	push	{r7}
 8003652:	b083      	sub	sp, #12
 8003654:	af00      	add	r7, sp, #0
 8003656:	6078      	str	r0, [r7, #4]

	if(x<0){
 8003658:	687b      	ldr	r3, [r7, #4]
 800365a:	2b00      	cmp	r3, #0
 800365c:	da02      	bge.n	8003664 <aaabs+0x14>
		return x*-1;
 800365e:	687b      	ldr	r3, [r7, #4]
 8003660:	425b      	negs	r3, r3
 8003662:	e000      	b.n	8003666 <aaabs+0x16>
	}else{
		return x;
 8003664:	687b      	ldr	r3, [r7, #4]
	}
}
 8003666:	4618      	mov	r0, r3
 8003668:	370c      	adds	r7, #12
 800366a:	46bd      	mov	sp, r7
 800366c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003670:	4770      	bx	lr
	...

08003674 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8003674:	b580      	push	{r7, lr}
 8003676:	b082      	sub	sp, #8
 8003678:	af00      	add	r7, sp, #0
 800367a:	4603      	mov	r3, r0
 800367c:	80fb      	strh	r3, [r7, #6]
	if(GPIO_Pin == GPIO_PIN_13){
 800367e:	88fb      	ldrh	r3, [r7, #6]
 8003680:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003684:	d102      	bne.n	800368c <HAL_GPIO_EXTI_Callback+0x18>
		blue = 1; // 0% duty cycle
 8003686:	4b1d      	ldr	r3, [pc, #116]	; (80036fc <HAL_GPIO_EXTI_Callback+0x88>)
 8003688:	2201      	movs	r2, #1
 800368a:	701a      	strb	r2, [r3, #0]
	}

	if(GPIO_Pin == GPIO_PIN_8){
 800368c:	88fb      	ldrh	r3, [r7, #6]
 800368e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003692:	d12e      	bne.n	80036f2 <HAL_GPIO_EXTI_Callback+0x7e>
		static GPIO_PinState B1State[2] = {0};
		static GPIO_PinState B1Check;
		B1State[0]= HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8);
 8003694:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003698:	4819      	ldr	r0, [pc, #100]	; (8003700 <HAL_GPIO_EXTI_Callback+0x8c>)
 800369a:	f002 f8cb 	bl	8005834 <HAL_GPIO_ReadPin>
 800369e:	4603      	mov	r3, r0
 80036a0:	461a      	mov	r2, r3
 80036a2:	4b18      	ldr	r3, [pc, #96]	; (8003704 <HAL_GPIO_EXTI_Callback+0x90>)
 80036a4:	701a      	strb	r2, [r3, #0]
		B1Check = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8);
 80036a6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80036aa:	4815      	ldr	r0, [pc, #84]	; (8003700 <HAL_GPIO_EXTI_Callback+0x8c>)
 80036ac:	f002 f8c2 	bl	8005834 <HAL_GPIO_ReadPin>
 80036b0:	4603      	mov	r3, r0
 80036b2:	461a      	mov	r2, r3
 80036b4:	4b14      	ldr	r3, [pc, #80]	; (8003708 <HAL_GPIO_EXTI_Callback+0x94>)
 80036b6:	701a      	strb	r2, [r3, #0]
		if(B1State[1] == GPIO_PIN_RESET && B1State[0] == GPIO_PIN_SET){
 80036b8:	4b12      	ldr	r3, [pc, #72]	; (8003704 <HAL_GPIO_EXTI_Callback+0x90>)
 80036ba:	785b      	ldrb	r3, [r3, #1]
 80036bc:	2b00      	cmp	r3, #0
 80036be:	d106      	bne.n	80036ce <HAL_GPIO_EXTI_Callback+0x5a>
 80036c0:	4b10      	ldr	r3, [pc, #64]	; (8003704 <HAL_GPIO_EXTI_Callback+0x90>)
 80036c2:	781b      	ldrb	r3, [r3, #0]
 80036c4:	2b01      	cmp	r3, #1
 80036c6:	d102      	bne.n	80036ce <HAL_GPIO_EXTI_Callback+0x5a>
			stop = 1;
 80036c8:	4b10      	ldr	r3, [pc, #64]	; (800370c <HAL_GPIO_EXTI_Callback+0x98>)
 80036ca:	2201      	movs	r2, #1
 80036cc:	701a      	strb	r2, [r3, #0]
		}
		B1State[1] = B1State[0];
 80036ce:	4b0d      	ldr	r3, [pc, #52]	; (8003704 <HAL_GPIO_EXTI_Callback+0x90>)
 80036d0:	781a      	ldrb	r2, [r3, #0]
 80036d2:	4b0c      	ldr	r3, [pc, #48]	; (8003704 <HAL_GPIO_EXTI_Callback+0x90>)
 80036d4:	705a      	strb	r2, [r3, #1]
		if(B1Check == GPIO_PIN_SET){
 80036d6:	4b0c      	ldr	r3, [pc, #48]	; (8003708 <HAL_GPIO_EXTI_Callback+0x94>)
 80036d8:	781b      	ldrb	r3, [r3, #0]
 80036da:	2b01      	cmp	r3, #1
 80036dc:	d109      	bne.n	80036f2 <HAL_GPIO_EXTI_Callback+0x7e>
			ch++;
 80036de:	4b0c      	ldr	r3, [pc, #48]	; (8003710 <HAL_GPIO_EXTI_Callback+0x9c>)
 80036e0:	edd3 7a00 	vldr	s15, [r3]
 80036e4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80036e8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80036ec:	4b08      	ldr	r3, [pc, #32]	; (8003710 <HAL_GPIO_EXTI_Callback+0x9c>)
 80036ee:	edc3 7a00 	vstr	s15, [r3]
		}

	}
}
 80036f2:	bf00      	nop
 80036f4:	3708      	adds	r7, #8
 80036f6:	46bd      	mov	sp, r7
 80036f8:	bd80      	pop	{r7, pc}
 80036fa:	bf00      	nop
 80036fc:	200005ed 	.word	0x200005ed
 8003700:	40020000 	.word	0x40020000
 8003704:	20000810 	.word	0x20000810
 8003708:	20000812 	.word	0x20000812
 800370c:	200005b0 	.word	0x200005b0
 8003710:	200005fc 	.word	0x200005fc

08003714 <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8003714:	b4b0      	push	{r4, r5, r7}
 8003716:	b083      	sub	sp, #12
 8003718:	af00      	add	r7, sp, #0
 800371a:	6078      	str	r0, [r7, #4]
	if (htim == &htim11) {
 800371c:	687b      	ldr	r3, [r7, #4]
 800371e:	4a09      	ldr	r2, [pc, #36]	; (8003744 <HAL_TIM_PeriodElapsedCallback+0x30>)
 8003720:	4293      	cmp	r3, r2
 8003722:	d10a      	bne.n	800373a <HAL_TIM_PeriodElapsedCallback+0x26>
		_micro += 65535;
 8003724:	4b08      	ldr	r3, [pc, #32]	; (8003748 <HAL_TIM_PeriodElapsedCallback+0x34>)
 8003726:	e9d3 2300 	ldrd	r2, r3, [r3]
 800372a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800372e:	1854      	adds	r4, r2, r1
 8003730:	f143 0500 	adc.w	r5, r3, #0
 8003734:	4b04      	ldr	r3, [pc, #16]	; (8003748 <HAL_TIM_PeriodElapsedCallback+0x34>)
 8003736:	e9c3 4500 	strd	r4, r5, [r3]
	}
}
 800373a:	bf00      	nop
 800373c:	370c      	adds	r7, #12
 800373e:	46bd      	mov	sp, r7
 8003740:	bcb0      	pop	{r4, r5, r7}
 8003742:	4770      	bx	lr
 8003744:	20000378 	.word	0x20000378
 8003748:	200005a8 	.word	0x200005a8

0800374c <micros>:

uint64_t micros()
{
 800374c:	b4b0      	push	{r4, r5, r7}
 800374e:	af00      	add	r7, sp, #0
	return _micro + htim11.Instance->CNT;
 8003750:	4b09      	ldr	r3, [pc, #36]	; (8003778 <micros+0x2c>)
 8003752:	681b      	ldr	r3, [r3, #0]
 8003754:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003756:	2200      	movs	r2, #0
 8003758:	4618      	mov	r0, r3
 800375a:	4611      	mov	r1, r2
 800375c:	4b07      	ldr	r3, [pc, #28]	; (800377c <micros+0x30>)
 800375e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003762:	1884      	adds	r4, r0, r2
 8003764:	eb41 0503 	adc.w	r5, r1, r3
 8003768:	4622      	mov	r2, r4
 800376a:	462b      	mov	r3, r5
}
 800376c:	4610      	mov	r0, r2
 800376e:	4619      	mov	r1, r3
 8003770:	46bd      	mov	sp, r7
 8003772:	bcb0      	pop	{r4, r5, r7}
 8003774:	4770      	bx	lr
 8003776:	bf00      	nop
 8003778:	20000378 	.word	0x20000378
 800377c:	200005a8 	.word	0x200005a8

08003780 <callUART>:

//----------------------------------------------------------------< UART >

void callUART(){
 8003780:	b598      	push	{r3, r4, r7, lr}
 8003782:	af00      	add	r7, sp, #0
	HAL_UART_DMAStop(&huart2);
 8003784:	4896      	ldr	r0, [pc, #600]	; (80039e0 <callUART+0x260>)
 8003786:	f006 ffd1 	bl	800a72c <HAL_UART_DMAStop>
	switch(RxState){
 800378a:	4b96      	ldr	r3, [pc, #600]	; (80039e4 <callUART+0x264>)
 800378c:	781b      	ldrb	r3, [r3, #0]
 800378e:	2b03      	cmp	r3, #3
 8003790:	f200 8113 	bhi.w	80039ba <callUART+0x23a>
 8003794:	a201      	add	r2, pc, #4	; (adr r2, 800379c <callUART+0x1c>)
 8003796:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800379a:	bf00      	nop
 800379c:	080037ad 	.word	0x080037ad
 80037a0:	08003811 	.word	0x08003811
 80037a4:	08003887 	.word	0x08003887
 80037a8:	080038e5 	.word	0x080038e5
	case 0:											// Receive 1 byte first by default.
		Start = (Receive[0] & 0xF0)>>4;
 80037ac:	4b8e      	ldr	r3, [pc, #568]	; (80039e8 <callUART+0x268>)
 80037ae:	781b      	ldrb	r3, [r3, #0]
 80037b0:	091b      	lsrs	r3, r3, #4
 80037b2:	b2da      	uxtb	r2, r3
 80037b4:	4b8d      	ldr	r3, [pc, #564]	; (80039ec <callUART+0x26c>)
 80037b6:	701a      	strb	r2, [r3, #0]
		Mode = (Receive[0] & 0x0F);
 80037b8:	4b8b      	ldr	r3, [pc, #556]	; (80039e8 <callUART+0x268>)
 80037ba:	781b      	ldrb	r3, [r3, #0]
 80037bc:	f003 030f 	and.w	r3, r3, #15
 80037c0:	b2da      	uxtb	r2, r3
 80037c2:	4b8b      	ldr	r3, [pc, #556]	; (80039f0 <callUART+0x270>)
 80037c4:	701a      	strb	r2, [r3, #0]
		if(Start == 0b1001){
 80037c6:	4b89      	ldr	r3, [pc, #548]	; (80039ec <callUART+0x26c>)
 80037c8:	781b      	ldrb	r3, [r3, #0]
 80037ca:	2b09      	cmp	r3, #9
 80037cc:	f040 80f2 	bne.w	80039b4 <callUART+0x234>
			// 0b1001, 0b0100]
			sum = 0;
 80037d0:	4b88      	ldr	r3, [pc, #544]	; (80039f4 <callUART+0x274>)
 80037d2:	2200      	movs	r2, #0
 80037d4:	701a      	strb	r2, [r3, #0]
			sum += (Receive[0]);					// Sum the START & MODE bit.
 80037d6:	4b84      	ldr	r3, [pc, #528]	; (80039e8 <callUART+0x268>)
 80037d8:	781a      	ldrb	r2, [r3, #0]
 80037da:	4b86      	ldr	r3, [pc, #536]	; (80039f4 <callUART+0x274>)
 80037dc:	781b      	ldrb	r3, [r3, #0]
 80037de:	4413      	add	r3, r2
 80037e0:	b2da      	uxtb	r2, r3
 80037e2:	4b84      	ldr	r3, [pc, #528]	; (80039f4 <callUART+0x274>)
 80037e4:	701a      	strb	r2, [r3, #0]
			if(Mode == 0b0111){						// Mode7
 80037e6:	4b82      	ldr	r3, [pc, #520]	; (80039f0 <callUART+0x270>)
 80037e8:	781b      	ldrb	r3, [r3, #0]
 80037ea:	2b07      	cmp	r3, #7
 80037ec:	d103      	bne.n	80037f6 <callUART+0x76>
				RxState = 2;
 80037ee:	4b7d      	ldr	r3, [pc, #500]	; (80039e4 <callUART+0x264>)
 80037f0:	2202      	movs	r2, #2
 80037f2:	701a      	strb	r2, [r3, #0]
 80037f4:	e002      	b.n	80037fc <callUART+0x7c>
			}
			else{
				RxState = 1;						// Go to Interrupt Receive next round.
 80037f6:	4b7b      	ldr	r3, [pc, #492]	; (80039e4 <callUART+0x264>)
 80037f8:	2201      	movs	r2, #1
 80037fa:	701a      	strb	r2, [r3, #0]
			}
			nbyte = frameConfig(Mode);				// Set a new size of buffer.
 80037fc:	4b7c      	ldr	r3, [pc, #496]	; (80039f0 <callUART+0x270>)
 80037fe:	781b      	ldrb	r3, [r3, #0]
 8003800:	4618      	mov	r0, r3
 8003802:	f000 fd31 	bl	8004268 <frameConfig>
 8003806:	4603      	mov	r3, r0
 8003808:	461a      	mov	r2, r3
 800380a:	4b7b      	ldr	r3, [pc, #492]	; (80039f8 <callUART+0x278>)
 800380c:	701a      	strb	r2, [r3, #0]
		}
		break;
 800380e:	e0d1      	b.n	80039b4 <callUART+0x234>
	case 1:
		sum += frameSum( Receive, nbyte-1);			// (nbyte-1) Minus checksum out.
 8003810:	4b79      	ldr	r3, [pc, #484]	; (80039f8 <callUART+0x278>)
 8003812:	781b      	ldrb	r3, [r3, #0]
 8003814:	3b01      	subs	r3, #1
 8003816:	b2db      	uxtb	r3, r3
 8003818:	4619      	mov	r1, r3
 800381a:	4873      	ldr	r0, [pc, #460]	; (80039e8 <callUART+0x268>)
 800381c:	f000 fd73 	bl	8004306 <frameSum>
 8003820:	4603      	mov	r3, r0
 8003822:	461a      	mov	r2, r3
 8003824:	4b73      	ldr	r3, [pc, #460]	; (80039f4 <callUART+0x274>)
 8003826:	781b      	ldrb	r3, [r3, #0]
 8003828:	4413      	add	r3, r2
 800382a:	b2da      	uxtb	r2, r3
 800382c:	4b71      	ldr	r3, [pc, #452]	; (80039f4 <callUART+0x274>)
 800382e:	701a      	strb	r2, [r3, #0]
		if(Receive[nbyte-1] == checkSum(sum)){		// Corrected.
 8003830:	4b71      	ldr	r3, [pc, #452]	; (80039f8 <callUART+0x278>)
 8003832:	781b      	ldrb	r3, [r3, #0]
 8003834:	3b01      	subs	r3, #1
 8003836:	4a6c      	ldr	r2, [pc, #432]	; (80039e8 <callUART+0x268>)
 8003838:	5cd4      	ldrb	r4, [r2, r3]
 800383a:	4b6e      	ldr	r3, [pc, #440]	; (80039f4 <callUART+0x274>)
 800383c:	781b      	ldrb	r3, [r3, #0]
 800383e:	4618      	mov	r0, r3
 8003840:	f000 fd4e 	bl	80042e0 <checkSum>
 8003844:	4603      	mov	r3, r0
 8003846:	429c      	cmp	r4, r3
 8003848:	d102      	bne.n	8003850 <callUART+0xd0>
			// Receive[nbyte-1] == checkSum(sum)
			TxState = 1;
 800384a:	4b6c      	ldr	r3, [pc, #432]	; (80039fc <callUART+0x27c>)
 800384c:	2201      	movs	r2, #1
 800384e:	701a      	strb	r2, [r3, #0]
		}
		if(Mode == 1 || Mode == 9 || Mode == 10 || Mode == 11){
 8003850:	4b67      	ldr	r3, [pc, #412]	; (80039f0 <callUART+0x270>)
 8003852:	781b      	ldrb	r3, [r3, #0]
 8003854:	2b01      	cmp	r3, #1
 8003856:	d00b      	beq.n	8003870 <callUART+0xf0>
 8003858:	4b65      	ldr	r3, [pc, #404]	; (80039f0 <callUART+0x270>)
 800385a:	781b      	ldrb	r3, [r3, #0]
 800385c:	2b09      	cmp	r3, #9
 800385e:	d007      	beq.n	8003870 <callUART+0xf0>
 8003860:	4b63      	ldr	r3, [pc, #396]	; (80039f0 <callUART+0x270>)
 8003862:	781b      	ldrb	r3, [r3, #0]
 8003864:	2b0a      	cmp	r3, #10
 8003866:	d003      	beq.n	8003870 <callUART+0xf0>
 8003868:	4b61      	ldr	r3, [pc, #388]	; (80039f0 <callUART+0x270>)
 800386a:	781b      	ldrb	r3, [r3, #0]
 800386c:	2b0b      	cmp	r3, #11
 800386e:	d106      	bne.n	800387e <callUART+0xfe>
			nbyte = 1;								// For receive ACK
 8003870:	4b61      	ldr	r3, [pc, #388]	; (80039f8 <callUART+0x278>)
 8003872:	2201      	movs	r2, #1
 8003874:	701a      	strb	r2, [r3, #0]
			RxState = 3;
 8003876:	4b5b      	ldr	r3, [pc, #364]	; (80039e4 <callUART+0x264>)
 8003878:	2203      	movs	r2, #3
 800387a:	701a      	strb	r2, [r3, #0]
		}
		else{
			endReceive = 1;
		}

		break;
 800387c:	e09d      	b.n	80039ba <callUART+0x23a>
			endReceive = 1;
 800387e:	4b60      	ldr	r3, [pc, #384]	; (8003a00 <callUART+0x280>)
 8003880:	2201      	movs	r2, #1
 8003882:	701a      	strb	r2, [r3, #0]
		break;
 8003884:	e099      	b.n	80039ba <callUART+0x23a>
	case 2:
		sum += (Receive[0]);
 8003886:	4b58      	ldr	r3, [pc, #352]	; (80039e8 <callUART+0x268>)
 8003888:	781a      	ldrb	r2, [r3, #0]
 800388a:	4b5a      	ldr	r3, [pc, #360]	; (80039f4 <callUART+0x274>)
 800388c:	781b      	ldrb	r3, [r3, #0]
 800388e:	4413      	add	r3, r2
 8003890:	b2da      	uxtb	r2, r3
 8003892:	4b58      	ldr	r3, [pc, #352]	; (80039f4 <callUART+0x274>)
 8003894:	701a      	strb	r2, [r3, #0]
		nStation = Receive[0];					// Set received station.
 8003896:	4b54      	ldr	r3, [pc, #336]	; (80039e8 <callUART+0x268>)
 8003898:	781a      	ldrb	r2, [r3, #0]
 800389a:	4b5a      	ldr	r3, [pc, #360]	; (8003a04 <callUART+0x284>)
 800389c:	701a      	strb	r2, [r3, #0]
		nDestination = Receive[0];				// Set received station.
 800389e:	4b52      	ldr	r3, [pc, #328]	; (80039e8 <callUART+0x268>)
 80038a0:	781a      	ldrb	r2, [r3, #0]
 80038a2:	4b59      	ldr	r3, [pc, #356]	; (8003a08 <callUART+0x288>)
 80038a4:	701a      	strb	r2, [r3, #0]
		if(Receive[0] % 2 == 1){
 80038a6:	4b50      	ldr	r3, [pc, #320]	; (80039e8 <callUART+0x268>)
 80038a8:	781b      	ldrb	r3, [r3, #0]
 80038aa:	f003 0301 	and.w	r3, r3, #1
 80038ae:	b2db      	uxtb	r3, r3
 80038b0:	2b00      	cmp	r3, #0
 80038b2:	d00b      	beq.n	80038cc <callUART+0x14c>
			nbyte = ((Receive[0] + 1)/2)+1;
 80038b4:	4b4c      	ldr	r3, [pc, #304]	; (80039e8 <callUART+0x268>)
 80038b6:	781b      	ldrb	r3, [r3, #0]
 80038b8:	3301      	adds	r3, #1
 80038ba:	0fda      	lsrs	r2, r3, #31
 80038bc:	4413      	add	r3, r2
 80038be:	105b      	asrs	r3, r3, #1
 80038c0:	b2db      	uxtb	r3, r3
 80038c2:	3301      	adds	r3, #1
 80038c4:	b2da      	uxtb	r2, r3
 80038c6:	4b4c      	ldr	r3, [pc, #304]	; (80039f8 <callUART+0x278>)
 80038c8:	701a      	strb	r2, [r3, #0]
 80038ca:	e007      	b.n	80038dc <callUART+0x15c>
		}
		else{
			nbyte = (Receive[0]/2)+1;
 80038cc:	4b46      	ldr	r3, [pc, #280]	; (80039e8 <callUART+0x268>)
 80038ce:	781b      	ldrb	r3, [r3, #0]
 80038d0:	085b      	lsrs	r3, r3, #1
 80038d2:	b2db      	uxtb	r3, r3
 80038d4:	3301      	adds	r3, #1
 80038d6:	b2da      	uxtb	r2, r3
 80038d8:	4b47      	ldr	r3, [pc, #284]	; (80039f8 <callUART+0x278>)
 80038da:	701a      	strb	r2, [r3, #0]
		}
		RxState = 1;
 80038dc:	4b41      	ldr	r3, [pc, #260]	; (80039e4 <callUART+0x264>)
 80038de:	2201      	movs	r2, #1
 80038e0:	701a      	strb	r2, [r3, #0]
		break;
 80038e2:	e06a      	b.n	80039ba <callUART+0x23a>
	case 3:						// For Receive ACK frame
		if(Receive[0] == ACK1[0]){
 80038e4:	4b40      	ldr	r3, [pc, #256]	; (80039e8 <callUART+0x268>)
 80038e6:	781a      	ldrb	r2, [r3, #0]
 80038e8:	4b48      	ldr	r3, [pc, #288]	; (8003a0c <callUART+0x28c>)
 80038ea:	781b      	ldrb	r3, [r3, #0]
 80038ec:	429a      	cmp	r2, r3
 80038ee:	d104      	bne.n	80038fa <callUART+0x17a>
			keepACK[0] = Receive[0];
 80038f0:	4b3d      	ldr	r3, [pc, #244]	; (80039e8 <callUART+0x268>)
 80038f2:	781a      	ldrb	r2, [r3, #0]
 80038f4:	4b46      	ldr	r3, [pc, #280]	; (8003a10 <callUART+0x290>)
 80038f6:	701a      	strb	r2, [r3, #0]
 80038f8:	e040      	b.n	800397c <callUART+0x1fc>
		}
		else if(Receive[0] == ACK1[1]){
 80038fa:	4b3b      	ldr	r3, [pc, #236]	; (80039e8 <callUART+0x268>)
 80038fc:	781a      	ldrb	r2, [r3, #0]
 80038fe:	4b43      	ldr	r3, [pc, #268]	; (8003a0c <callUART+0x28c>)
 8003900:	785b      	ldrb	r3, [r3, #1]
 8003902:	429a      	cmp	r2, r3
 8003904:	d104      	bne.n	8003910 <callUART+0x190>
			keepACK[1] = Receive[0];
 8003906:	4b38      	ldr	r3, [pc, #224]	; (80039e8 <callUART+0x268>)
 8003908:	781a      	ldrb	r2, [r3, #0]
 800390a:	4b41      	ldr	r3, [pc, #260]	; (8003a10 <callUART+0x290>)
 800390c:	705a      	strb	r2, [r3, #1]
 800390e:	e035      	b.n	800397c <callUART+0x1fc>
		}
		else{
			Start = (Receive[0] & 0xF0)>>4;
 8003910:	4b35      	ldr	r3, [pc, #212]	; (80039e8 <callUART+0x268>)
 8003912:	781b      	ldrb	r3, [r3, #0]
 8003914:	091b      	lsrs	r3, r3, #4
 8003916:	b2da      	uxtb	r2, r3
 8003918:	4b34      	ldr	r3, [pc, #208]	; (80039ec <callUART+0x26c>)
 800391a:	701a      	strb	r2, [r3, #0]
			Mode = (Receive[0] & 0x0F);
 800391c:	4b32      	ldr	r3, [pc, #200]	; (80039e8 <callUART+0x268>)
 800391e:	781b      	ldrb	r3, [r3, #0]
 8003920:	f003 030f 	and.w	r3, r3, #15
 8003924:	b2da      	uxtb	r2, r3
 8003926:	4b32      	ldr	r3, [pc, #200]	; (80039f0 <callUART+0x270>)
 8003928:	701a      	strb	r2, [r3, #0]
			if(Start == 0b1001){
 800392a:	4b30      	ldr	r3, [pc, #192]	; (80039ec <callUART+0x26c>)
 800392c:	781b      	ldrb	r3, [r3, #0]
 800392e:	2b09      	cmp	r3, #9
 8003930:	d11e      	bne.n	8003970 <callUART+0x1f0>
				// 0b1001, 0b0100
				sum = 0;
 8003932:	4b30      	ldr	r3, [pc, #192]	; (80039f4 <callUART+0x274>)
 8003934:	2200      	movs	r2, #0
 8003936:	701a      	strb	r2, [r3, #0]
				sum += (Receive[0]);				// Sum the START & MODE bit.
 8003938:	4b2b      	ldr	r3, [pc, #172]	; (80039e8 <callUART+0x268>)
 800393a:	781a      	ldrb	r2, [r3, #0]
 800393c:	4b2d      	ldr	r3, [pc, #180]	; (80039f4 <callUART+0x274>)
 800393e:	781b      	ldrb	r3, [r3, #0]
 8003940:	4413      	add	r3, r2
 8003942:	b2da      	uxtb	r2, r3
 8003944:	4b2b      	ldr	r3, [pc, #172]	; (80039f4 <callUART+0x274>)
 8003946:	701a      	strb	r2, [r3, #0]
				if(Mode == 0b0111){					// Mode7
 8003948:	4b29      	ldr	r3, [pc, #164]	; (80039f0 <callUART+0x270>)
 800394a:	781b      	ldrb	r3, [r3, #0]
 800394c:	2b07      	cmp	r3, #7
 800394e:	d103      	bne.n	8003958 <callUART+0x1d8>
					RxState = 2;
 8003950:	4b24      	ldr	r3, [pc, #144]	; (80039e4 <callUART+0x264>)
 8003952:	2202      	movs	r2, #2
 8003954:	701a      	strb	r2, [r3, #0]
 8003956:	e002      	b.n	800395e <callUART+0x1de>
				}
				else{
					RxState = 1;					// Go to Interrupt Receive next round.
 8003958:	4b22      	ldr	r3, [pc, #136]	; (80039e4 <callUART+0x264>)
 800395a:	2201      	movs	r2, #1
 800395c:	701a      	strb	r2, [r3, #0]
				}
				nbyte = frameConfig(Mode);			// Set a new size of buffer.
 800395e:	4b24      	ldr	r3, [pc, #144]	; (80039f0 <callUART+0x270>)
 8003960:	781b      	ldrb	r3, [r3, #0]
 8003962:	4618      	mov	r0, r3
 8003964:	f000 fc80 	bl	8004268 <frameConfig>
 8003968:	4603      	mov	r3, r0
 800396a:	461a      	mov	r2, r3
 800396c:	4b22      	ldr	r3, [pc, #136]	; (80039f8 <callUART+0x278>)
 800396e:	701a      	strb	r2, [r3, #0]
			}
			TxState = 0;
 8003970:	4b22      	ldr	r3, [pc, #136]	; (80039fc <callUART+0x27c>)
 8003972:	2200      	movs	r2, #0
 8003974:	701a      	strb	r2, [r3, #0]
			RxState = 1;
 8003976:	4b1b      	ldr	r3, [pc, #108]	; (80039e4 <callUART+0x264>)
 8003978:	2201      	movs	r2, #1
 800397a:	701a      	strb	r2, [r3, #0]
		}
		if(keepACK[0] == ACK1[0] && keepACK[1] == ACK1[1]){			// It's ACK
 800397c:	4b24      	ldr	r3, [pc, #144]	; (8003a10 <callUART+0x290>)
 800397e:	781a      	ldrb	r2, [r3, #0]
 8003980:	4b22      	ldr	r3, [pc, #136]	; (8003a0c <callUART+0x28c>)
 8003982:	781b      	ldrb	r3, [r3, #0]
 8003984:	429a      	cmp	r2, r3
 8003986:	d117      	bne.n	80039b8 <callUART+0x238>
 8003988:	4b21      	ldr	r3, [pc, #132]	; (8003a10 <callUART+0x290>)
 800398a:	785a      	ldrb	r2, [r3, #1]
 800398c:	4b1f      	ldr	r3, [pc, #124]	; (8003a0c <callUART+0x28c>)
 800398e:	785b      	ldrb	r3, [r3, #1]
 8003990:	429a      	cmp	r2, r3
 8003992:	d111      	bne.n	80039b8 <callUART+0x238>
			keepACK[0] = 0;
 8003994:	4b1e      	ldr	r3, [pc, #120]	; (8003a10 <callUART+0x290>)
 8003996:	2200      	movs	r2, #0
 8003998:	701a      	strb	r2, [r3, #0]
			keepACK[1] = 0;
 800399a:	4b1d      	ldr	r3, [pc, #116]	; (8003a10 <callUART+0x290>)
 800399c:	2200      	movs	r2, #0
 800399e:	705a      	strb	r2, [r3, #1]
			ACKFlag = 1;
 80039a0:	4b1c      	ldr	r3, [pc, #112]	; (8003a14 <callUART+0x294>)
 80039a2:	2201      	movs	r2, #1
 80039a4:	701a      	strb	r2, [r3, #0]
			RxState = 0;
 80039a6:	4b0f      	ldr	r3, [pc, #60]	; (80039e4 <callUART+0x264>)
 80039a8:	2200      	movs	r2, #0
 80039aa:	701a      	strb	r2, [r3, #0]
			endReceive = 1;
 80039ac:	4b14      	ldr	r3, [pc, #80]	; (8003a00 <callUART+0x280>)
 80039ae:	2201      	movs	r2, #1
 80039b0:	701a      	strb	r2, [r3, #0]
		}
		break;
 80039b2:	e001      	b.n	80039b8 <callUART+0x238>
		break;
 80039b4:	bf00      	nop
 80039b6:	e000      	b.n	80039ba <callUART+0x23a>
		break;
 80039b8:	bf00      	nop
	}
	// if complete or fail -> reset communication rxstate=0, sum=0, mode=0, nbyte=1,
	if(endReceive){
 80039ba:	4b11      	ldr	r3, [pc, #68]	; (8003a00 <callUART+0x280>)
 80039bc:	781b      	ldrb	r3, [r3, #0]
 80039be:	2b00      	cmp	r3, #0
 80039c0:	d00b      	beq.n	80039da <callUART+0x25a>
		RxState = 0;
 80039c2:	4b08      	ldr	r3, [pc, #32]	; (80039e4 <callUART+0x264>)
 80039c4:	2200      	movs	r2, #0
 80039c6:	701a      	strb	r2, [r3, #0]
		nbyte = 1;
 80039c8:	4b0b      	ldr	r3, [pc, #44]	; (80039f8 <callUART+0x278>)
 80039ca:	2201      	movs	r2, #1
 80039cc:	701a      	strb	r2, [r3, #0]
		sum = 0;
 80039ce:	4b09      	ldr	r3, [pc, #36]	; (80039f4 <callUART+0x274>)
 80039d0:	2200      	movs	r2, #0
 80039d2:	701a      	strb	r2, [r3, #0]
		endReceive = 0;
 80039d4:	4b0a      	ldr	r3, [pc, #40]	; (8003a00 <callUART+0x280>)
 80039d6:	2200      	movs	r2, #0
 80039d8:	701a      	strb	r2, [r3, #0]
	}

	//RxComplete = 0;
}
 80039da:	bf00      	nop
 80039dc:	bd98      	pop	{r3, r4, r7, pc}
 80039de:	bf00      	nop
 80039e0:	200003c0 	.word	0x200003c0
 80039e4:	20000546 	.word	0x20000546
 80039e8:	20000550 	.word	0x20000550
 80039ec:	20000547 	.word	0x20000547
 80039f0:	20000548 	.word	0x20000548
 80039f4:	20000549 	.word	0x20000549
 80039f8:	2000001e 	.word	0x2000001e
 80039fc:	20000545 	.word	0x20000545
 8003a00:	20000562 	.word	0x20000562
 8003a04:	20000538 	.word	0x20000538
 8003a08:	200004d0 	.word	0x200004d0
 8003a0c:	20000018 	.word	0x20000018
 8003a10:	20000560 	.word	0x20000560
 8003a14:	20000563 	.word	0x20000563

08003a18 <responseUART>:

void responseUART(){
 8003a18:	b590      	push	{r4, r7, lr}
 8003a1a:	b083      	sub	sp, #12
 8003a1c:	af00      	add	r7, sp, #0

	switch(Mode){
 8003a1e:	4ba2      	ldr	r3, [pc, #648]	; (8003ca8 <responseUART+0x290>)
 8003a20:	781b      	ldrb	r3, [r3, #0]
 8003a22:	2b0e      	cmp	r3, #14
 8003a24:	f200 839a 	bhi.w	800415c <responseUART+0x744>
 8003a28:	a201      	add	r2, pc, #4	; (adr r2, 8003a30 <responseUART+0x18>)
 8003a2a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003a2e:	bf00      	nop
 8003a30:	08004127 	.word	0x08004127
 8003a34:	08003a6d 	.word	0x08003a6d
 8003a38:	08003b1f 	.word	0x08003b1f
 8003a3c:	08003b4f 	.word	0x08003b4f
 8003a40:	08003b7f 	.word	0x08003b7f
 8003a44:	08003bdb 	.word	0x08003bdb
 8003a48:	08003c3b 	.word	0x08003c3b
 8003a4c:	08003c7d 	.word	0x08003c7d
 8003a50:	08003d63 	.word	0x08003d63
 8003a54:	08003d93 	.word	0x08003d93
 8003a58:	08003e45 	.word	0x08003e45
 8003a5c:	08003f45 	.word	0x08003f45
 8003a60:	080040a1 	.word	0x080040a1
 8003a64:	080040d1 	.word	0x080040d1
 8003a68:	080040f9 	.word	0x080040f9

	case 0:
		break;

	case 1:	// <<<< 95% COMPLETE >>>>
		switch(TxState){
 8003a6c:	4b8f      	ldr	r3, [pc, #572]	; (8003cac <responseUART+0x294>)
 8003a6e:	781b      	ldrb	r3, [r3, #0]
 8003a70:	2b04      	cmp	r3, #4
 8003a72:	f200 835a 	bhi.w	800412a <responseUART+0x712>
 8003a76:	a201      	add	r2, pc, #4	; (adr r2, 8003a7c <responseUART+0x64>)
 8003a78:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003a7c:	08003b13 	.word	0x08003b13
 8003a80:	08003a91 	.word	0x08003a91
 8003a84:	08003aa3 	.word	0x08003aa3
 8003a88:	08003adf 	.word	0x08003adf
 8003a8c:	08003afd 	.word	0x08003afd
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003a90:	2202      	movs	r2, #2
 8003a92:	4987      	ldr	r1, [pc, #540]	; (8003cb0 <responseUART+0x298>)
 8003a94:	4887      	ldr	r0, [pc, #540]	; (8003cb4 <responseUART+0x29c>)
 8003a96:	f006 fd9b 	bl	800a5d0 <HAL_UART_Transmit_DMA>
			TxState = 2;
 8003a9a:	4b84      	ldr	r3, [pc, #528]	; (8003cac <responseUART+0x294>)
 8003a9c:	2202      	movs	r2, #2
 8003a9e:	701a      	strb	r2, [r3, #0]
			break;
 8003aa0:	e03c      	b.n	8003b1c <responseUART+0x104>
		case 2:
			Transmit[0] = 0b10010001;								// Store byte to Transmit.
 8003aa2:	4b85      	ldr	r3, [pc, #532]	; (8003cb8 <responseUART+0x2a0>)
 8003aa4:	2291      	movs	r2, #145	; 0x91
 8003aa6:	701a      	strb	r2, [r3, #0]
			Transmit[1] = Receive[0];
 8003aa8:	4b84      	ldr	r3, [pc, #528]	; (8003cbc <responseUART+0x2a4>)
 8003aaa:	781a      	ldrb	r2, [r3, #0]
 8003aac:	4b82      	ldr	r3, [pc, #520]	; (8003cb8 <responseUART+0x2a0>)
 8003aae:	705a      	strb	r2, [r3, #1]
			Transmit[2] = Receive[1];
 8003ab0:	4b82      	ldr	r3, [pc, #520]	; (8003cbc <responseUART+0x2a4>)
 8003ab2:	785a      	ldrb	r2, [r3, #1]
 8003ab4:	4b80      	ldr	r3, [pc, #512]	; (8003cb8 <responseUART+0x2a0>)
 8003ab6:	709a      	strb	r2, [r3, #2]
			Transmit[3] = checkSum(frameSum(Transmit, 3));			// Let the last byte equal to checksum of 1st-3rd byte.
 8003ab8:	2103      	movs	r1, #3
 8003aba:	487f      	ldr	r0, [pc, #508]	; (8003cb8 <responseUART+0x2a0>)
 8003abc:	f000 fc23 	bl	8004306 <frameSum>
 8003ac0:	4603      	mov	r3, r0
 8003ac2:	4618      	mov	r0, r3
 8003ac4:	f000 fc0c 	bl	80042e0 <checkSum>
 8003ac8:	4603      	mov	r3, r0
 8003aca:	461a      	mov	r2, r3
 8003acc:	4b7a      	ldr	r3, [pc, #488]	; (8003cb8 <responseUART+0x2a0>)
 8003ace:	70da      	strb	r2, [r3, #3]
			RxState = 3;
 8003ad0:	4b7b      	ldr	r3, [pc, #492]	; (8003cc0 <responseUART+0x2a8>)
 8003ad2:	2203      	movs	r2, #3
 8003ad4:	701a      	strb	r2, [r3, #0]
			TxState = 3;
 8003ad6:	4b75      	ldr	r3, [pc, #468]	; (8003cac <responseUART+0x294>)
 8003ad8:	2203      	movs	r2, #3
 8003ada:	701a      	strb	r2, [r3, #0]
			break;
 8003adc:	e01e      	b.n	8003b1c <responseUART+0x104>
		case 3:
			if(huart2.gState == HAL_UART_STATE_READY){
 8003ade:	4b75      	ldr	r3, [pc, #468]	; (8003cb4 <responseUART+0x29c>)
 8003ae0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003ae4:	b2db      	uxtb	r3, r3
 8003ae6:	2b20      	cmp	r3, #32
 8003ae8:	d115      	bne.n	8003b16 <responseUART+0xfe>
				HAL_UART_Transmit_DMA(&huart2, Transmit, 4);		// Transmit command back.
 8003aea:	2204      	movs	r2, #4
 8003aec:	4972      	ldr	r1, [pc, #456]	; (8003cb8 <responseUART+0x2a0>)
 8003aee:	4871      	ldr	r0, [pc, #452]	; (8003cb4 <responseUART+0x29c>)
 8003af0:	f006 fd6e 	bl	800a5d0 <HAL_UART_Transmit_DMA>
				TxState = 4;
 8003af4:	4b6d      	ldr	r3, [pc, #436]	; (8003cac <responseUART+0x294>)
 8003af6:	2204      	movs	r2, #4
 8003af8:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003afa:	e00c      	b.n	8003b16 <responseUART+0xfe>
		case 4:
			if(ACKFlag){
 8003afc:	4b71      	ldr	r3, [pc, #452]	; (8003cc4 <responseUART+0x2ac>)
 8003afe:	781b      	ldrb	r3, [r3, #0]
 8003b00:	2b00      	cmp	r3, #0
 8003b02:	d00a      	beq.n	8003b1a <responseUART+0x102>
				ACKFlag = 0;
 8003b04:	4b6f      	ldr	r3, [pc, #444]	; (8003cc4 <responseUART+0x2ac>)
 8003b06:	2200      	movs	r2, #0
 8003b08:	701a      	strb	r2, [r3, #0]
				TxState = 0;
 8003b0a:	4b68      	ldr	r3, [pc, #416]	; (8003cac <responseUART+0x294>)
 8003b0c:	2200      	movs	r2, #0
 8003b0e:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003b10:	e003      	b.n	8003b1a <responseUART+0x102>
			break;
 8003b12:	bf00      	nop
 8003b14:	e309      	b.n	800412a <responseUART+0x712>
			break;
 8003b16:	bf00      	nop
 8003b18:	e307      	b.n	800412a <responseUART+0x712>
			break;
 8003b1a:	bf00      	nop
		}
		break;
 8003b1c:	e305      	b.n	800412a <responseUART+0x712>

	case 2:	// <<<< COMPLETE >>>>
		// Connect
		switch(TxState){
 8003b1e:	4b63      	ldr	r3, [pc, #396]	; (8003cac <responseUART+0x294>)
 8003b20:	781b      	ldrb	r3, [r3, #0]
 8003b22:	2b00      	cmp	r3, #0
 8003b24:	d011      	beq.n	8003b4a <responseUART+0x132>
 8003b26:	2b01      	cmp	r3, #1
 8003b28:	f040 8301 	bne.w	800412e <responseUART+0x716>
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003b2c:	2202      	movs	r2, #2
 8003b2e:	4960      	ldr	r1, [pc, #384]	; (8003cb0 <responseUART+0x298>)
 8003b30:	4860      	ldr	r0, [pc, #384]	; (8003cb4 <responseUART+0x29c>)
 8003b32:	f006 fd4d 	bl	800a5d0 <HAL_UART_Transmit_DMA>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 8003b36:	2201      	movs	r2, #1
 8003b38:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003b3c:	4862      	ldr	r0, [pc, #392]	; (8003cc8 <responseUART+0x2b0>)
 8003b3e:	f001 fe91 	bl	8005864 <HAL_GPIO_WritePin>
			TxState = 0;
 8003b42:	4b5a      	ldr	r3, [pc, #360]	; (8003cac <responseUART+0x294>)
 8003b44:	2200      	movs	r2, #0
 8003b46:	701a      	strb	r2, [r3, #0]
			break;
 8003b48:	e000      	b.n	8003b4c <responseUART+0x134>
			break;
 8003b4a:	bf00      	nop
		}
		break;
 8003b4c:	e2ef      	b.n	800412e <responseUART+0x716>

	case 3:	// <<<< COMPLETE >>>>
		// Disconnect
		switch(TxState){
 8003b4e:	4b57      	ldr	r3, [pc, #348]	; (8003cac <responseUART+0x294>)
 8003b50:	781b      	ldrb	r3, [r3, #0]
 8003b52:	2b00      	cmp	r3, #0
 8003b54:	d011      	beq.n	8003b7a <responseUART+0x162>
 8003b56:	2b01      	cmp	r3, #1
 8003b58:	f040 82eb 	bne.w	8004132 <responseUART+0x71a>
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003b5c:	2202      	movs	r2, #2
 8003b5e:	4954      	ldr	r1, [pc, #336]	; (8003cb0 <responseUART+0x298>)
 8003b60:	4854      	ldr	r0, [pc, #336]	; (8003cb4 <responseUART+0x29c>)
 8003b62:	f006 fd35 	bl	800a5d0 <HAL_UART_Transmit_DMA>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 8003b66:	2200      	movs	r2, #0
 8003b68:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003b6c:	4856      	ldr	r0, [pc, #344]	; (8003cc8 <responseUART+0x2b0>)
 8003b6e:	f001 fe79 	bl	8005864 <HAL_GPIO_WritePin>
			TxState = 0;
 8003b72:	4b4e      	ldr	r3, [pc, #312]	; (8003cac <responseUART+0x294>)
 8003b74:	2200      	movs	r2, #0
 8003b76:	701a      	strb	r2, [r3, #0]
			break;
 8003b78:	e000      	b.n	8003b7c <responseUART+0x164>
			break;
 8003b7a:	bf00      	nop
		}
		break;
 8003b7c:	e2d9      	b.n	8004132 <responseUART+0x71a>

	case 4:	// <<<< COMPLETE >>>>
		// Set limit of omega
		switch(TxState){
 8003b7e:	4b4b      	ldr	r3, [pc, #300]	; (8003cac <responseUART+0x294>)
 8003b80:	781b      	ldrb	r3, [r3, #0]
 8003b82:	2b00      	cmp	r3, #0
 8003b84:	d027      	beq.n	8003bd6 <responseUART+0x1be>
 8003b86:	2b01      	cmp	r3, #1
 8003b88:	f040 82d5 	bne.w	8004136 <responseUART+0x71e>
		case 0:
			break;
		case 1:
			limitOmega = (Receive[1]*10.0)/(255.0);
 8003b8c:	4b4b      	ldr	r3, [pc, #300]	; (8003cbc <responseUART+0x2a4>)
 8003b8e:	785b      	ldrb	r3, [r3, #1]
 8003b90:	4618      	mov	r0, r3
 8003b92:	f7fc fc73 	bl	800047c <__aeabi_i2d>
 8003b96:	f04f 0200 	mov.w	r2, #0
 8003b9a:	4b4c      	ldr	r3, [pc, #304]	; (8003ccc <responseUART+0x2b4>)
 8003b9c:	f7fc fcd8 	bl	8000550 <__aeabi_dmul>
 8003ba0:	4602      	mov	r2, r0
 8003ba2:	460b      	mov	r3, r1
 8003ba4:	4610      	mov	r0, r2
 8003ba6:	4619      	mov	r1, r3
 8003ba8:	a33b      	add	r3, pc, #236	; (adr r3, 8003c98 <responseUART+0x280>)
 8003baa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003bae:	f7fc fdf9 	bl	80007a4 <__aeabi_ddiv>
 8003bb2:	4602      	mov	r2, r0
 8003bb4:	460b      	mov	r3, r1
 8003bb6:	4610      	mov	r0, r2
 8003bb8:	4619      	mov	r1, r3
 8003bba:	f7fc ff99 	bl	8000af0 <__aeabi_d2f>
 8003bbe:	4603      	mov	r3, r0
 8003bc0:	4a43      	ldr	r2, [pc, #268]	; (8003cd0 <responseUART+0x2b8>)
 8003bc2:	6013      	str	r3, [r2, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003bc4:	2202      	movs	r2, #2
 8003bc6:	493a      	ldr	r1, [pc, #232]	; (8003cb0 <responseUART+0x298>)
 8003bc8:	483a      	ldr	r0, [pc, #232]	; (8003cb4 <responseUART+0x29c>)
 8003bca:	f006 fd01 	bl	800a5d0 <HAL_UART_Transmit_DMA>
			TxState = 0;
 8003bce:	4b37      	ldr	r3, [pc, #220]	; (8003cac <responseUART+0x294>)
 8003bd0:	2200      	movs	r2, #0
 8003bd2:	701a      	strb	r2, [r3, #0]
			break;
 8003bd4:	e000      	b.n	8003bd8 <responseUART+0x1c0>
			break;
 8003bd6:	bf00      	nop
		}
		break;
 8003bd8:	e2ad      	b.n	8004136 <responseUART+0x71e>

	case 5: // <<<< 95% COMPLETE >>>>
		// Set new position()
		switch(TxState){
 8003bda:	4b34      	ldr	r3, [pc, #208]	; (8003cac <responseUART+0x294>)
 8003bdc:	781b      	ldrb	r3, [r3, #0]
 8003bde:	2b00      	cmp	r3, #0
 8003be0:	d029      	beq.n	8003c36 <responseUART+0x21e>
 8003be2:	2b01      	cmp	r3, #1
 8003be4:	f040 82a9 	bne.w	800413a <responseUART+0x722>
		case 0:
			break;
		case 1:
			nDestination = 1;
 8003be8:	4b3a      	ldr	r3, [pc, #232]	; (8003cd4 <responseUART+0x2bc>)
 8003bea:	2201      	movs	r2, #1
 8003bec:	701a      	strb	r2, [r3, #0]
			Destination[0] = ( ( (Receive[0]*256)+(Receive[1]) )*(180) )/(10000*3.14);
 8003bee:	4b33      	ldr	r3, [pc, #204]	; (8003cbc <responseUART+0x2a4>)
 8003bf0:	781b      	ldrb	r3, [r3, #0]
 8003bf2:	021b      	lsls	r3, r3, #8
 8003bf4:	4a31      	ldr	r2, [pc, #196]	; (8003cbc <responseUART+0x2a4>)
 8003bf6:	7852      	ldrb	r2, [r2, #1]
 8003bf8:	4413      	add	r3, r2
 8003bfa:	22b4      	movs	r2, #180	; 0xb4
 8003bfc:	fb02 f303 	mul.w	r3, r2, r3
 8003c00:	4618      	mov	r0, r3
 8003c02:	f7fc fc3b 	bl	800047c <__aeabi_i2d>
 8003c06:	a326      	add	r3, pc, #152	; (adr r3, 8003ca0 <responseUART+0x288>)
 8003c08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003c0c:	f7fc fdca 	bl	80007a4 <__aeabi_ddiv>
 8003c10:	4602      	mov	r2, r0
 8003c12:	460b      	mov	r3, r1
 8003c14:	4610      	mov	r0, r2
 8003c16:	4619      	mov	r1, r3
 8003c18:	f7fc ff4a 	bl	8000ab0 <__aeabi_d2uiz>
 8003c1c:	4603      	mov	r3, r0
 8003c1e:	b29a      	uxth	r2, r3
 8003c20:	4b2d      	ldr	r3, [pc, #180]	; (8003cd8 <responseUART+0x2c0>)
 8003c22:	801a      	strh	r2, [r3, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003c24:	2202      	movs	r2, #2
 8003c26:	4922      	ldr	r1, [pc, #136]	; (8003cb0 <responseUART+0x298>)
 8003c28:	4822      	ldr	r0, [pc, #136]	; (8003cb4 <responseUART+0x29c>)
 8003c2a:	f006 fcd1 	bl	800a5d0 <HAL_UART_Transmit_DMA>
			TxState = 0;
 8003c2e:	4b1f      	ldr	r3, [pc, #124]	; (8003cac <responseUART+0x294>)
 8003c30:	2200      	movs	r2, #0
 8003c32:	701a      	strb	r2, [r3, #0]
			//timeStamp = HAL_GetTick();								// Optional
			break;
 8003c34:	e000      	b.n	8003c38 <responseUART+0x220>
			break;
 8003c36:	bf00      	nop
		}
		break;
 8003c38:	e27f      	b.n	800413a <responseUART+0x722>

	case 6:	// <<<< 95% COMPLETE >>>>
		// Set 1 station
		switch(TxState){
 8003c3a:	4b1c      	ldr	r3, [pc, #112]	; (8003cac <responseUART+0x294>)
 8003c3c:	781b      	ldrb	r3, [r3, #0]
 8003c3e:	2b00      	cmp	r3, #0
 8003c40:	d01a      	beq.n	8003c78 <responseUART+0x260>
 8003c42:	2b01      	cmp	r3, #1
 8003c44:	f040 827b 	bne.w	800413e <responseUART+0x726>
		case 0:
			break;
		case 1:
			nStation = 1;
 8003c48:	4b24      	ldr	r3, [pc, #144]	; (8003cdc <responseUART+0x2c4>)
 8003c4a:	2201      	movs	r2, #1
 8003c4c:	701a      	strb	r2, [r3, #0]
			nDestination = 1;
 8003c4e:	4b21      	ldr	r3, [pc, #132]	; (8003cd4 <responseUART+0x2bc>)
 8003c50:	2201      	movs	r2, #1
 8003c52:	701a      	strb	r2, [r3, #0]
			Destination[0] = tranStation(Receive[1]);
 8003c54:	4b19      	ldr	r3, [pc, #100]	; (8003cbc <responseUART+0x2a4>)
 8003c56:	785b      	ldrb	r3, [r3, #1]
 8003c58:	4618      	mov	r0, r3
 8003c5a:	f000 faa3 	bl	80041a4 <tranStation>
 8003c5e:	4603      	mov	r3, r0
 8003c60:	461a      	mov	r2, r3
 8003c62:	4b1d      	ldr	r3, [pc, #116]	; (8003cd8 <responseUART+0x2c0>)
 8003c64:	801a      	strh	r2, [r3, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003c66:	2202      	movs	r2, #2
 8003c68:	4911      	ldr	r1, [pc, #68]	; (8003cb0 <responseUART+0x298>)
 8003c6a:	4812      	ldr	r0, [pc, #72]	; (8003cb4 <responseUART+0x29c>)
 8003c6c:	f006 fcb0 	bl	800a5d0 <HAL_UART_Transmit_DMA>
			TxState = 0;
 8003c70:	4b0e      	ldr	r3, [pc, #56]	; (8003cac <responseUART+0x294>)
 8003c72:	2200      	movs	r2, #0
 8003c74:	701a      	strb	r2, [r3, #0]
			//timeStamp = HAL_GetTick();								// Optional
			break;
 8003c76:	e000      	b.n	8003c7a <responseUART+0x262>
			break;
 8003c78:	bf00      	nop
		}
		break;
 8003c7a:	e260      	b.n	800413e <responseUART+0x726>

	case 7:
		// set n station
		switch(TxState){
 8003c7c:	4b0b      	ldr	r3, [pc, #44]	; (8003cac <responseUART+0x294>)
 8003c7e:	781b      	ldrb	r3, [r3, #0]
 8003c80:	2b00      	cmp	r3, #0
 8003c82:	d06c      	beq.n	8003d5e <responseUART+0x346>
 8003c84:	2b01      	cmp	r3, #1
 8003c86:	f040 825c 	bne.w	8004142 <responseUART+0x72a>
		case 0:
			break;
		case 1:
			nDestination = nStation;
 8003c8a:	4b14      	ldr	r3, [pc, #80]	; (8003cdc <responseUART+0x2c4>)
 8003c8c:	781a      	ldrb	r2, [r3, #0]
 8003c8e:	4b11      	ldr	r3, [pc, #68]	; (8003cd4 <responseUART+0x2bc>)
 8003c90:	701a      	strb	r2, [r3, #0]
			for(int i=0; i<(nStation+(nStation%2)); i+=2){
 8003c92:	2300      	movs	r3, #0
 8003c94:	607b      	str	r3, [r7, #4]
 8003c96:	e04e      	b.n	8003d36 <responseUART+0x31e>
 8003c98:	00000000 	.word	0x00000000
 8003c9c:	406fe000 	.word	0x406fe000
 8003ca0:	00000000 	.word	0x00000000
 8003ca4:	40deaa00 	.word	0x40deaa00
 8003ca8:	20000548 	.word	0x20000548
 8003cac:	20000545 	.word	0x20000545
 8003cb0:	20000018 	.word	0x20000018
 8003cb4:	200003c0 	.word	0x200003c0
 8003cb8:	2000054c 	.word	0x2000054c
 8003cbc:	20000550 	.word	0x20000550
 8003cc0:	20000546 	.word	0x20000546
 8003cc4:	20000563 	.word	0x20000563
 8003cc8:	40020400 	.word	0x40020400
 8003ccc:	40240000 	.word	0x40240000
 8003cd0:	20000014 	.word	0x20000014
 8003cd4:	200004d0 	.word	0x200004d0
 8003cd8:	200004d4 	.word	0x200004d4
 8003cdc:	20000538 	.word	0x20000538
				Destination[i] = tranStation(Receive[j] & 0x0F);
 8003ce0:	4baf      	ldr	r3, [pc, #700]	; (8003fa0 <responseUART+0x588>)
 8003ce2:	781b      	ldrb	r3, [r3, #0]
 8003ce4:	461a      	mov	r2, r3
 8003ce6:	4baf      	ldr	r3, [pc, #700]	; (8003fa4 <responseUART+0x58c>)
 8003ce8:	5c9b      	ldrb	r3, [r3, r2]
 8003cea:	f003 030f 	and.w	r3, r3, #15
 8003cee:	b2db      	uxtb	r3, r3
 8003cf0:	4618      	mov	r0, r3
 8003cf2:	f000 fa57 	bl	80041a4 <tranStation>
 8003cf6:	4603      	mov	r3, r0
 8003cf8:	4619      	mov	r1, r3
 8003cfa:	4aab      	ldr	r2, [pc, #684]	; (8003fa8 <responseUART+0x590>)
 8003cfc:	687b      	ldr	r3, [r7, #4]
 8003cfe:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				Destination[i+1] = tranStation((Receive[j] & 0xF0)>>4);
 8003d02:	4ba7      	ldr	r3, [pc, #668]	; (8003fa0 <responseUART+0x588>)
 8003d04:	781b      	ldrb	r3, [r3, #0]
 8003d06:	461a      	mov	r2, r3
 8003d08:	4ba6      	ldr	r3, [pc, #664]	; (8003fa4 <responseUART+0x58c>)
 8003d0a:	5c9b      	ldrb	r3, [r3, r2]
 8003d0c:	091b      	lsrs	r3, r3, #4
 8003d0e:	b2da      	uxtb	r2, r3
 8003d10:	687b      	ldr	r3, [r7, #4]
 8003d12:	1c5c      	adds	r4, r3, #1
 8003d14:	4610      	mov	r0, r2
 8003d16:	f000 fa45 	bl	80041a4 <tranStation>
 8003d1a:	4603      	mov	r3, r0
 8003d1c:	461a      	mov	r2, r3
 8003d1e:	4ba2      	ldr	r3, [pc, #648]	; (8003fa8 <responseUART+0x590>)
 8003d20:	f823 2014 	strh.w	r2, [r3, r4, lsl #1]
				j+=1;
 8003d24:	4b9e      	ldr	r3, [pc, #632]	; (8003fa0 <responseUART+0x588>)
 8003d26:	781b      	ldrb	r3, [r3, #0]
 8003d28:	3301      	adds	r3, #1
 8003d2a:	b2da      	uxtb	r2, r3
 8003d2c:	4b9c      	ldr	r3, [pc, #624]	; (8003fa0 <responseUART+0x588>)
 8003d2e:	701a      	strb	r2, [r3, #0]
			for(int i=0; i<(nStation+(nStation%2)); i+=2){
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	3302      	adds	r3, #2
 8003d34:	607b      	str	r3, [r7, #4]
 8003d36:	4b9d      	ldr	r3, [pc, #628]	; (8003fac <responseUART+0x594>)
 8003d38:	781b      	ldrb	r3, [r3, #0]
 8003d3a:	3301      	adds	r3, #1
 8003d3c:	f023 0301 	bic.w	r3, r3, #1
 8003d40:	687a      	ldr	r2, [r7, #4]
 8003d42:	429a      	cmp	r2, r3
 8003d44:	dbcc      	blt.n	8003ce0 <responseUART+0x2c8>
			}
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003d46:	2202      	movs	r2, #2
 8003d48:	4999      	ldr	r1, [pc, #612]	; (8003fb0 <responseUART+0x598>)
 8003d4a:	489a      	ldr	r0, [pc, #616]	; (8003fb4 <responseUART+0x59c>)
 8003d4c:	f006 fc40 	bl	800a5d0 <HAL_UART_Transmit_DMA>
			j = 0;
 8003d50:	4b93      	ldr	r3, [pc, #588]	; (8003fa0 <responseUART+0x588>)
 8003d52:	2200      	movs	r2, #0
 8003d54:	701a      	strb	r2, [r3, #0]
			TxState = 0;
 8003d56:	4b98      	ldr	r3, [pc, #608]	; (8003fb8 <responseUART+0x5a0>)
 8003d58:	2200      	movs	r2, #0
 8003d5a:	701a      	strb	r2, [r3, #0]
			break;
 8003d5c:	e000      	b.n	8003d60 <responseUART+0x348>
			break;
 8003d5e:	bf00      	nop
		}
		break;
 8003d60:	e1ef      	b.n	8004142 <responseUART+0x72a>

	case 8:	// <<<< 95% COMPLETE >>>>
		// Go!
		switch(TxState){
 8003d62:	4b95      	ldr	r3, [pc, #596]	; (8003fb8 <responseUART+0x5a0>)
 8003d64:	781b      	ldrb	r3, [r3, #0]
 8003d66:	2b00      	cmp	r3, #0
 8003d68:	d011      	beq.n	8003d8e <responseUART+0x376>
 8003d6a:	2b01      	cmp	r3, #1
 8003d6c:	f040 81eb 	bne.w	8004146 <responseUART+0x72e>
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003d70:	2202      	movs	r2, #2
 8003d72:	498f      	ldr	r1, [pc, #572]	; (8003fb0 <responseUART+0x598>)
 8003d74:	488f      	ldr	r0, [pc, #572]	; (8003fb4 <responseUART+0x59c>)
 8003d76:	f006 fc2b 	bl	800a5d0 <HAL_UART_Transmit_DMA>
			update = 1;
 8003d7a:	4b90      	ldr	r3, [pc, #576]	; (8003fbc <responseUART+0x5a4>)
 8003d7c:	2201      	movs	r2, #1
 8003d7e:	701a      	strb	r2, [r3, #0]
			movingFlag = 8;
 8003d80:	4b8f      	ldr	r3, [pc, #572]	; (8003fc0 <responseUART+0x5a8>)
 8003d82:	2208      	movs	r2, #8
 8003d84:	701a      	strb	r2, [r3, #0]
			TxState = 0;
 8003d86:	4b8c      	ldr	r3, [pc, #560]	; (8003fb8 <responseUART+0x5a0>)
 8003d88:	2200      	movs	r2, #0
 8003d8a:	701a      	strb	r2, [r3, #0]
			//timeStamp = HAL_GetTick();								// Optional
			break;
 8003d8c:	e000      	b.n	8003d90 <responseUART+0x378>
			break;
 8003d8e:	bf00      	nop
		}
		break;
 8003d90:	e1d9      	b.n	8004146 <responseUART+0x72e>

	case 9:	// <<<< 95% COMPLETE >>>>
		// transmit station
		switch(TxState){
 8003d92:	4b89      	ldr	r3, [pc, #548]	; (8003fb8 <responseUART+0x5a0>)
 8003d94:	781b      	ldrb	r3, [r3, #0]
 8003d96:	2b04      	cmp	r3, #4
 8003d98:	f200 81d7 	bhi.w	800414a <responseUART+0x732>
 8003d9c:	a201      	add	r2, pc, #4	; (adr r2, 8003da4 <responseUART+0x38c>)
 8003d9e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003da2:	bf00      	nop
 8003da4:	08003e39 	.word	0x08003e39
 8003da8:	08003db9 	.word	0x08003db9
 8003dac:	08003dcb 	.word	0x08003dcb
 8003db0:	08003e05 	.word	0x08003e05
 8003db4:	08003e23 	.word	0x08003e23
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003db8:	2202      	movs	r2, #2
 8003dba:	497d      	ldr	r1, [pc, #500]	; (8003fb0 <responseUART+0x598>)
 8003dbc:	487d      	ldr	r0, [pc, #500]	; (8003fb4 <responseUART+0x59c>)
 8003dbe:	f006 fc07 	bl	800a5d0 <HAL_UART_Transmit_DMA>
			TxState = 2;
 8003dc2:	4b7d      	ldr	r3, [pc, #500]	; (8003fb8 <responseUART+0x5a0>)
 8003dc4:	2202      	movs	r2, #2
 8003dc6:	701a      	strb	r2, [r3, #0]
			break;
 8003dc8:	e03b      	b.n	8003e42 <responseUART+0x42a>
		case 2:
			Transmit[0] = 0b10011001;								// Store byte to Transmit.
 8003dca:	4b7e      	ldr	r3, [pc, #504]	; (8003fc4 <responseUART+0x5ac>)
 8003dcc:	2299      	movs	r2, #153	; 0x99
 8003dce:	701a      	strb	r2, [r3, #0]
			Transmit[1] = 0;
 8003dd0:	4b7c      	ldr	r3, [pc, #496]	; (8003fc4 <responseUART+0x5ac>)
 8003dd2:	2200      	movs	r2, #0
 8003dd4:	705a      	strb	r2, [r3, #1]
			Transmit[2] = nowStation;								// Value from state machine.
 8003dd6:	4b7c      	ldr	r3, [pc, #496]	; (8003fc8 <responseUART+0x5b0>)
 8003dd8:	781a      	ldrb	r2, [r3, #0]
 8003dda:	4b7a      	ldr	r3, [pc, #488]	; (8003fc4 <responseUART+0x5ac>)
 8003ddc:	709a      	strb	r2, [r3, #2]
			Transmit[3] = checkSum(frameSum(Transmit, 3));			// Let the last byte equal to checksum of 1st-3rd byte.
 8003dde:	2103      	movs	r1, #3
 8003de0:	4878      	ldr	r0, [pc, #480]	; (8003fc4 <responseUART+0x5ac>)
 8003de2:	f000 fa90 	bl	8004306 <frameSum>
 8003de6:	4603      	mov	r3, r0
 8003de8:	4618      	mov	r0, r3
 8003dea:	f000 fa79 	bl	80042e0 <checkSum>
 8003dee:	4603      	mov	r3, r0
 8003df0:	461a      	mov	r2, r3
 8003df2:	4b74      	ldr	r3, [pc, #464]	; (8003fc4 <responseUART+0x5ac>)
 8003df4:	70da      	strb	r2, [r3, #3]
			RxState = 3;
 8003df6:	4b75      	ldr	r3, [pc, #468]	; (8003fcc <responseUART+0x5b4>)
 8003df8:	2203      	movs	r2, #3
 8003dfa:	701a      	strb	r2, [r3, #0]
			TxState = 3;
 8003dfc:	4b6e      	ldr	r3, [pc, #440]	; (8003fb8 <responseUART+0x5a0>)
 8003dfe:	2203      	movs	r2, #3
 8003e00:	701a      	strb	r2, [r3, #0]
			break;
 8003e02:	e01e      	b.n	8003e42 <responseUART+0x42a>
		case 3:
			if(huart2.gState == HAL_UART_STATE_READY){
 8003e04:	4b6b      	ldr	r3, [pc, #428]	; (8003fb4 <responseUART+0x59c>)
 8003e06:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003e0a:	b2db      	uxtb	r3, r3
 8003e0c:	2b20      	cmp	r3, #32
 8003e0e:	d115      	bne.n	8003e3c <responseUART+0x424>
				HAL_UART_Transmit_DMA(&huart2, Transmit, 4);		// Transmit command back.
 8003e10:	2204      	movs	r2, #4
 8003e12:	496c      	ldr	r1, [pc, #432]	; (8003fc4 <responseUART+0x5ac>)
 8003e14:	4867      	ldr	r0, [pc, #412]	; (8003fb4 <responseUART+0x59c>)
 8003e16:	f006 fbdb 	bl	800a5d0 <HAL_UART_Transmit_DMA>
				TxState = 4;
 8003e1a:	4b67      	ldr	r3, [pc, #412]	; (8003fb8 <responseUART+0x5a0>)
 8003e1c:	2204      	movs	r2, #4
 8003e1e:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003e20:	e00c      	b.n	8003e3c <responseUART+0x424>
		case 4:
			if(ACKFlag){
 8003e22:	4b6b      	ldr	r3, [pc, #428]	; (8003fd0 <responseUART+0x5b8>)
 8003e24:	781b      	ldrb	r3, [r3, #0]
 8003e26:	2b00      	cmp	r3, #0
 8003e28:	d00a      	beq.n	8003e40 <responseUART+0x428>
				ACKFlag = 0;
 8003e2a:	4b69      	ldr	r3, [pc, #420]	; (8003fd0 <responseUART+0x5b8>)
 8003e2c:	2200      	movs	r2, #0
 8003e2e:	701a      	strb	r2, [r3, #0]
				TxState = 0;
 8003e30:	4b61      	ldr	r3, [pc, #388]	; (8003fb8 <responseUART+0x5a0>)
 8003e32:	2200      	movs	r2, #0
 8003e34:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003e36:	e003      	b.n	8003e40 <responseUART+0x428>
			break;
 8003e38:	bf00      	nop
 8003e3a:	e186      	b.n	800414a <responseUART+0x732>
			break;
 8003e3c:	bf00      	nop
 8003e3e:	e184      	b.n	800414a <responseUART+0x732>
			break;
 8003e40:	bf00      	nop
		}
		break;
 8003e42:	e182      	b.n	800414a <responseUART+0x732>

	case 10:	// <<<< 95% COMPLETE >>>>
		// transmit theta (rad variable)
		switch(TxState){
 8003e44:	4b5c      	ldr	r3, [pc, #368]	; (8003fb8 <responseUART+0x5a0>)
 8003e46:	781b      	ldrb	r3, [r3, #0]
 8003e48:	2b04      	cmp	r3, #4
 8003e4a:	f200 8180 	bhi.w	800414e <responseUART+0x736>
 8003e4e:	a201      	add	r2, pc, #4	; (adr r2, 8003e54 <responseUART+0x43c>)
 8003e50:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003e54:	08003f39 	.word	0x08003f39
 8003e58:	08003e69 	.word	0x08003e69
 8003e5c:	08003e7b 	.word	0x08003e7b
 8003e60:	08003f05 	.word	0x08003f05
 8003e64:	08003f23 	.word	0x08003f23
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003e68:	2202      	movs	r2, #2
 8003e6a:	4951      	ldr	r1, [pc, #324]	; (8003fb0 <responseUART+0x598>)
 8003e6c:	4851      	ldr	r0, [pc, #324]	; (8003fb4 <responseUART+0x59c>)
 8003e6e:	f006 fbaf 	bl	800a5d0 <HAL_UART_Transmit_DMA>
			TxState = 2;
 8003e72:	4b51      	ldr	r3, [pc, #324]	; (8003fb8 <responseUART+0x5a0>)
 8003e74:	2202      	movs	r2, #2
 8003e76:	701a      	strb	r2, [r3, #0]
			break;
 8003e78:	e063      	b.n	8003f42 <responseUART+0x52a>
		case 2:
			Transmit[0] = 0b10011010;								// Store byte to Transmit.
 8003e7a:	4b52      	ldr	r3, [pc, #328]	; (8003fc4 <responseUART+0x5ac>)
 8003e7c:	229a      	movs	r2, #154	; 0x9a
 8003e7e:	701a      	strb	r2, [r3, #0]
			Transmit[1] = ( (uint16_t)(current_rad_wrap*10000)) >> 8;									// 16bit value from encoder.
 8003e80:	4b54      	ldr	r3, [pc, #336]	; (8003fd4 <responseUART+0x5bc>)
 8003e82:	edd3 7a00 	vldr	s15, [r3]
 8003e86:	ed9f 7a54 	vldr	s14, [pc, #336]	; 8003fd8 <responseUART+0x5c0>
 8003e8a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003e8e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003e92:	ee17 3a90 	vmov	r3, s15
 8003e96:	b29b      	uxth	r3, r3
 8003e98:	0a1b      	lsrs	r3, r3, #8
 8003e9a:	b29b      	uxth	r3, r3
 8003e9c:	b2da      	uxtb	r2, r3
 8003e9e:	4b49      	ldr	r3, [pc, #292]	; (8003fc4 <responseUART+0x5ac>)
 8003ea0:	705a      	strb	r2, [r3, #1]
			Transmit[2] = ( (uint16_t)(current_rad_wrap*10000)) & 0xFF;
 8003ea2:	4b4c      	ldr	r3, [pc, #304]	; (8003fd4 <responseUART+0x5bc>)
 8003ea4:	edd3 7a00 	vldr	s15, [r3]
 8003ea8:	ed9f 7a4b 	vldr	s14, [pc, #300]	; 8003fd8 <responseUART+0x5c0>
 8003eac:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003eb0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003eb4:	ee17 3a90 	vmov	r3, s15
 8003eb8:	b29b      	uxth	r3, r3
 8003eba:	b2da      	uxtb	r2, r3
 8003ebc:	4b41      	ldr	r3, [pc, #260]	; (8003fc4 <responseUART+0x5ac>)
 8003ebe:	709a      	strb	r2, [r3, #2]
			if(HAL_GetTick()-HMEtimeStamp < 1000){
 8003ec0:	f000 fe06 	bl	8004ad0 <HAL_GetTick>
 8003ec4:	4603      	mov	r3, r0
 8003ec6:	4a45      	ldr	r2, [pc, #276]	; (8003fdc <responseUART+0x5c4>)
 8003ec8:	8812      	ldrh	r2, [r2, #0]
 8003eca:	1a9b      	subs	r3, r3, r2
 8003ecc:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003ed0:	d205      	bcs.n	8003ede <responseUART+0x4c6>
				Transmit[1] = 0;
 8003ed2:	4b3c      	ldr	r3, [pc, #240]	; (8003fc4 <responseUART+0x5ac>)
 8003ed4:	2200      	movs	r2, #0
 8003ed6:	705a      	strb	r2, [r3, #1]
				Transmit[2] = 0;
 8003ed8:	4b3a      	ldr	r3, [pc, #232]	; (8003fc4 <responseUART+0x5ac>)
 8003eda:	2200      	movs	r2, #0
 8003edc:	709a      	strb	r2, [r3, #2]
			}
			Transmit[3] = checkSum(frameSum(Transmit, 3));			// Let the last byte equal to checksum of 1st-3rd byte.
 8003ede:	2103      	movs	r1, #3
 8003ee0:	4838      	ldr	r0, [pc, #224]	; (8003fc4 <responseUART+0x5ac>)
 8003ee2:	f000 fa10 	bl	8004306 <frameSum>
 8003ee6:	4603      	mov	r3, r0
 8003ee8:	4618      	mov	r0, r3
 8003eea:	f000 f9f9 	bl	80042e0 <checkSum>
 8003eee:	4603      	mov	r3, r0
 8003ef0:	461a      	mov	r2, r3
 8003ef2:	4b34      	ldr	r3, [pc, #208]	; (8003fc4 <responseUART+0x5ac>)
 8003ef4:	70da      	strb	r2, [r3, #3]
			RxState = 3;
 8003ef6:	4b35      	ldr	r3, [pc, #212]	; (8003fcc <responseUART+0x5b4>)
 8003ef8:	2203      	movs	r2, #3
 8003efa:	701a      	strb	r2, [r3, #0]
			TxState = 3;
 8003efc:	4b2e      	ldr	r3, [pc, #184]	; (8003fb8 <responseUART+0x5a0>)
 8003efe:	2203      	movs	r2, #3
 8003f00:	701a      	strb	r2, [r3, #0]
			break;
 8003f02:	e01e      	b.n	8003f42 <responseUART+0x52a>
		case 3:
			if(huart2.gState == HAL_UART_STATE_READY){
 8003f04:	4b2b      	ldr	r3, [pc, #172]	; (8003fb4 <responseUART+0x59c>)
 8003f06:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003f0a:	b2db      	uxtb	r3, r3
 8003f0c:	2b20      	cmp	r3, #32
 8003f0e:	d115      	bne.n	8003f3c <responseUART+0x524>
				HAL_UART_Transmit_DMA(&huart2, Transmit, 4);		// Transmit command back.
 8003f10:	2204      	movs	r2, #4
 8003f12:	492c      	ldr	r1, [pc, #176]	; (8003fc4 <responseUART+0x5ac>)
 8003f14:	4827      	ldr	r0, [pc, #156]	; (8003fb4 <responseUART+0x59c>)
 8003f16:	f006 fb5b 	bl	800a5d0 <HAL_UART_Transmit_DMA>
				TxState = 4;
 8003f1a:	4b27      	ldr	r3, [pc, #156]	; (8003fb8 <responseUART+0x5a0>)
 8003f1c:	2204      	movs	r2, #4
 8003f1e:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003f20:	e00c      	b.n	8003f3c <responseUART+0x524>
		case 4:
			if(ACKFlag){
 8003f22:	4b2b      	ldr	r3, [pc, #172]	; (8003fd0 <responseUART+0x5b8>)
 8003f24:	781b      	ldrb	r3, [r3, #0]
 8003f26:	2b00      	cmp	r3, #0
 8003f28:	d00a      	beq.n	8003f40 <responseUART+0x528>
				ACKFlag = 0;
 8003f2a:	4b29      	ldr	r3, [pc, #164]	; (8003fd0 <responseUART+0x5b8>)
 8003f2c:	2200      	movs	r2, #0
 8003f2e:	701a      	strb	r2, [r3, #0]
				TxState = 0;
 8003f30:	4b21      	ldr	r3, [pc, #132]	; (8003fb8 <responseUART+0x5a0>)
 8003f32:	2200      	movs	r2, #0
 8003f34:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003f36:	e003      	b.n	8003f40 <responseUART+0x528>
			break;
 8003f38:	bf00      	nop
 8003f3a:	e108      	b.n	800414e <responseUART+0x736>
			break;
 8003f3c:	bf00      	nop
 8003f3e:	e106      	b.n	800414e <responseUART+0x736>
			break;
 8003f40:	bf00      	nop
		}
		break;
 8003f42:	e104      	b.n	800414e <responseUART+0x736>

	case 11:	// <<<< 95% COMPLETE >>>>
		// transmit top omega (rad variable)
		switch(TxState){
 8003f44:	4b1c      	ldr	r3, [pc, #112]	; (8003fb8 <responseUART+0x5a0>)
 8003f46:	781b      	ldrb	r3, [r3, #0]
 8003f48:	2b04      	cmp	r3, #4
 8003f4a:	f200 8102 	bhi.w	8004152 <responseUART+0x73a>
 8003f4e:	a201      	add	r2, pc, #4	; (adr r2, 8003f54 <responseUART+0x53c>)
 8003f50:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f54:	08004095 	.word	0x08004095
 8003f58:	08003f69 	.word	0x08003f69
 8003f5c:	08003f7b 	.word	0x08003f7b
 8003f60:	08004061 	.word	0x08004061
 8003f64:	0800407f 	.word	0x0800407f
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003f68:	2202      	movs	r2, #2
 8003f6a:	4911      	ldr	r1, [pc, #68]	; (8003fb0 <responseUART+0x598>)
 8003f6c:	4811      	ldr	r0, [pc, #68]	; (8003fb4 <responseUART+0x59c>)
 8003f6e:	f006 fb2f 	bl	800a5d0 <HAL_UART_Transmit_DMA>
			TxState = 2;
 8003f72:	4b11      	ldr	r3, [pc, #68]	; (8003fb8 <responseUART+0x5a0>)
 8003f74:	2202      	movs	r2, #2
 8003f76:	701a      	strb	r2, [r3, #0]
			break;
 8003f78:	e091      	b.n	800409e <responseUART+0x686>
		case 2:
			Transmit[0] = 0b10011011;								// Store byte to Transmit.
 8003f7a:	4b12      	ldr	r3, [pc, #72]	; (8003fc4 <responseUART+0x5ac>)
 8003f7c:	229b      	movs	r2, #155	; 0x9b
 8003f7e:	701a      	strb	r2, [r3, #0]
			Transmit[1] = 0;
 8003f80:	4b10      	ldr	r3, [pc, #64]	; (8003fc4 <responseUART+0x5ac>)
 8003f82:	2200      	movs	r2, #0
 8003f84:	705a      	strb	r2, [r3, #1]
			if(direct == 0){
 8003f86:	4b16      	ldr	r3, [pc, #88]	; (8003fe0 <responseUART+0x5c8>)
 8003f88:	781b      	ldrb	r3, [r3, #0]
 8003f8a:	2b00      	cmp	r3, #0
 8003f8c:	d12e      	bne.n	8003fec <responseUART+0x5d4>
				send_velocity = -kal_velocity;
 8003f8e:	4b15      	ldr	r3, [pc, #84]	; (8003fe4 <responseUART+0x5cc>)
 8003f90:	edd3 7a00 	vldr	s15, [r3]
 8003f94:	eef1 7a67 	vneg.f32	s15, s15
 8003f98:	4b13      	ldr	r3, [pc, #76]	; (8003fe8 <responseUART+0x5d0>)
 8003f9a:	edc3 7a00 	vstr	s15, [r3]
 8003f9e:	e029      	b.n	8003ff4 <responseUART+0x5dc>
 8003fa0:	2000053a 	.word	0x2000053a
 8003fa4:	20000550 	.word	0x20000550
 8003fa8:	200004d4 	.word	0x200004d4
 8003fac:	20000538 	.word	0x20000538
 8003fb0:	20000018 	.word	0x20000018
 8003fb4:	200003c0 	.word	0x200003c0
 8003fb8:	20000545 	.word	0x20000545
 8003fbc:	200005ec 	.word	0x200005ec
 8003fc0:	2000053c 	.word	0x2000053c
 8003fc4:	2000054c 	.word	0x2000054c
 8003fc8:	20000539 	.word	0x20000539
 8003fcc:	20000546 	.word	0x20000546
 8003fd0:	20000563 	.word	0x20000563
 8003fd4:	20000584 	.word	0x20000584
 8003fd8:	461c4000 	.word	0x461c4000
 8003fdc:	20000568 	.word	0x20000568
 8003fe0:	2000002c 	.word	0x2000002c
 8003fe4:	200005b8 	.word	0x200005b8
 8003fe8:	2000056c 	.word	0x2000056c
			}
			else{
				send_velocity = kal_velocity;
 8003fec:	4b60      	ldr	r3, [pc, #384]	; (8004170 <responseUART+0x758>)
 8003fee:	681b      	ldr	r3, [r3, #0]
 8003ff0:	4a60      	ldr	r2, [pc, #384]	; (8004174 <responseUART+0x75c>)
 8003ff2:	6013      	str	r3, [r2, #0]
			}
			Transmit[2] = (send_velocity*255*9.5493)/(10);
 8003ff4:	4b5f      	ldr	r3, [pc, #380]	; (8004174 <responseUART+0x75c>)
 8003ff6:	edd3 7a00 	vldr	s15, [r3]
 8003ffa:	ed9f 7a5f 	vldr	s14, [pc, #380]	; 8004178 <responseUART+0x760>
 8003ffe:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004002:	ee17 0a90 	vmov	r0, s15
 8004006:	f7fc fa4b 	bl	80004a0 <__aeabi_f2d>
 800400a:	a357      	add	r3, pc, #348	; (adr r3, 8004168 <responseUART+0x750>)
 800400c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004010:	f7fc fa9e 	bl	8000550 <__aeabi_dmul>
 8004014:	4602      	mov	r2, r0
 8004016:	460b      	mov	r3, r1
 8004018:	4610      	mov	r0, r2
 800401a:	4619      	mov	r1, r3
 800401c:	f04f 0200 	mov.w	r2, #0
 8004020:	4b56      	ldr	r3, [pc, #344]	; (800417c <responseUART+0x764>)
 8004022:	f7fc fbbf 	bl	80007a4 <__aeabi_ddiv>
 8004026:	4602      	mov	r2, r0
 8004028:	460b      	mov	r3, r1
 800402a:	4610      	mov	r0, r2
 800402c:	4619      	mov	r1, r3
 800402e:	f7fc fd3f 	bl	8000ab0 <__aeabi_d2uiz>
 8004032:	4603      	mov	r3, r0
 8004034:	b2da      	uxtb	r2, r3
 8004036:	4b52      	ldr	r3, [pc, #328]	; (8004180 <responseUART+0x768>)
 8004038:	709a      	strb	r2, [r3, #2]
			// Transmit[2] = ((topOmega*255)/(10))
			Transmit[3] = checkSum(frameSum(Transmit, 3));			// Let the last byte equal to checksum of 1st-3rd byte.
 800403a:	2103      	movs	r1, #3
 800403c:	4850      	ldr	r0, [pc, #320]	; (8004180 <responseUART+0x768>)
 800403e:	f000 f962 	bl	8004306 <frameSum>
 8004042:	4603      	mov	r3, r0
 8004044:	4618      	mov	r0, r3
 8004046:	f000 f94b 	bl	80042e0 <checkSum>
 800404a:	4603      	mov	r3, r0
 800404c:	461a      	mov	r2, r3
 800404e:	4b4c      	ldr	r3, [pc, #304]	; (8004180 <responseUART+0x768>)
 8004050:	70da      	strb	r2, [r3, #3]
			RxState = 3;
 8004052:	4b4c      	ldr	r3, [pc, #304]	; (8004184 <responseUART+0x76c>)
 8004054:	2203      	movs	r2, #3
 8004056:	701a      	strb	r2, [r3, #0]
			TxState = 3;
 8004058:	4b4b      	ldr	r3, [pc, #300]	; (8004188 <responseUART+0x770>)
 800405a:	2203      	movs	r2, #3
 800405c:	701a      	strb	r2, [r3, #0]
			break;
 800405e:	e01e      	b.n	800409e <responseUART+0x686>
		case 3:
			if(huart2.gState == HAL_UART_STATE_READY){
 8004060:	4b4a      	ldr	r3, [pc, #296]	; (800418c <responseUART+0x774>)
 8004062:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004066:	b2db      	uxtb	r3, r3
 8004068:	2b20      	cmp	r3, #32
 800406a:	d115      	bne.n	8004098 <responseUART+0x680>
				HAL_UART_Transmit_DMA(&huart2, Transmit, 4);		// Transmit command back.
 800406c:	2204      	movs	r2, #4
 800406e:	4944      	ldr	r1, [pc, #272]	; (8004180 <responseUART+0x768>)
 8004070:	4846      	ldr	r0, [pc, #280]	; (800418c <responseUART+0x774>)
 8004072:	f006 faad 	bl	800a5d0 <HAL_UART_Transmit_DMA>
				TxState = 4;
 8004076:	4b44      	ldr	r3, [pc, #272]	; (8004188 <responseUART+0x770>)
 8004078:	2204      	movs	r2, #4
 800407a:	701a      	strb	r2, [r3, #0]
			}
			break;
 800407c:	e00c      	b.n	8004098 <responseUART+0x680>
		case 4:
			if(ACKFlag){
 800407e:	4b44      	ldr	r3, [pc, #272]	; (8004190 <responseUART+0x778>)
 8004080:	781b      	ldrb	r3, [r3, #0]
 8004082:	2b00      	cmp	r3, #0
 8004084:	d00a      	beq.n	800409c <responseUART+0x684>
				ACKFlag = 0;
 8004086:	4b42      	ldr	r3, [pc, #264]	; (8004190 <responseUART+0x778>)
 8004088:	2200      	movs	r2, #0
 800408a:	701a      	strb	r2, [r3, #0]
				TxState = 0;
 800408c:	4b3e      	ldr	r3, [pc, #248]	; (8004188 <responseUART+0x770>)
 800408e:	2200      	movs	r2, #0
 8004090:	701a      	strb	r2, [r3, #0]
			}
			break;
 8004092:	e003      	b.n	800409c <responseUART+0x684>
			break;
 8004094:	bf00      	nop
 8004096:	e05c      	b.n	8004152 <responseUART+0x73a>
			break;
 8004098:	bf00      	nop
 800409a:	e05a      	b.n	8004152 <responseUART+0x73a>
			break;
 800409c:	bf00      	nop
		}
		break;
 800409e:	e058      	b.n	8004152 <responseUART+0x73a>

	case 12:
		// Enable end-effector
		switch(TxState){
 80040a0:	4b39      	ldr	r3, [pc, #228]	; (8004188 <responseUART+0x770>)
 80040a2:	781b      	ldrb	r3, [r3, #0]
 80040a4:	2b00      	cmp	r3, #0
 80040a6:	d002      	beq.n	80040ae <responseUART+0x696>
 80040a8:	2b01      	cmp	r3, #1
 80040aa:	d004      	beq.n	80040b6 <responseUART+0x69e>
			NFenable = 1;
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
			TxState = 0;
			break;
		}
		break;
 80040ac:	e056      	b.n	800415c <responseUART+0x744>
			if(huart2.gState == HAL_UART_STATE_READY){
 80040ae:	4b37      	ldr	r3, [pc, #220]	; (800418c <responseUART+0x774>)
 80040b0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
			break;
 80040b4:	e00b      	b.n	80040ce <responseUART+0x6b6>
			NFenable = 1;
 80040b6:	4b37      	ldr	r3, [pc, #220]	; (8004194 <responseUART+0x77c>)
 80040b8:	2201      	movs	r2, #1
 80040ba:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 80040bc:	2202      	movs	r2, #2
 80040be:	4936      	ldr	r1, [pc, #216]	; (8004198 <responseUART+0x780>)
 80040c0:	4832      	ldr	r0, [pc, #200]	; (800418c <responseUART+0x774>)
 80040c2:	f006 fa85 	bl	800a5d0 <HAL_UART_Transmit_DMA>
			TxState = 0;
 80040c6:	4b30      	ldr	r3, [pc, #192]	; (8004188 <responseUART+0x770>)
 80040c8:	2200      	movs	r2, #0
 80040ca:	701a      	strb	r2, [r3, #0]
			break;
 80040cc:	bf00      	nop
		break;
 80040ce:	e045      	b.n	800415c <responseUART+0x744>

	case 13:
		// Disable end-effector
		switch(TxState){
 80040d0:	4b2d      	ldr	r3, [pc, #180]	; (8004188 <responseUART+0x770>)
 80040d2:	781b      	ldrb	r3, [r3, #0]
 80040d4:	2b00      	cmp	r3, #0
 80040d6:	d00d      	beq.n	80040f4 <responseUART+0x6dc>
 80040d8:	2b01      	cmp	r3, #1
 80040da:	d13c      	bne.n	8004156 <responseUART+0x73e>
		case 0:
			break;
		case 1:
			NFenable = 0;
 80040dc:	4b2d      	ldr	r3, [pc, #180]	; (8004194 <responseUART+0x77c>)
 80040de:	2200      	movs	r2, #0
 80040e0:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 80040e2:	2202      	movs	r2, #2
 80040e4:	492c      	ldr	r1, [pc, #176]	; (8004198 <responseUART+0x780>)
 80040e6:	4829      	ldr	r0, [pc, #164]	; (800418c <responseUART+0x774>)
 80040e8:	f006 fa72 	bl	800a5d0 <HAL_UART_Transmit_DMA>
			TxState = 0;
 80040ec:	4b26      	ldr	r3, [pc, #152]	; (8004188 <responseUART+0x770>)
 80040ee:	2200      	movs	r2, #0
 80040f0:	701a      	strb	r2, [r3, #0]
			break;
 80040f2:	e000      	b.n	80040f6 <responseUART+0x6de>
			break;
 80040f4:	bf00      	nop
		}
		break;
 80040f6:	e02e      	b.n	8004156 <responseUART+0x73e>

	case 14:	// <<<< 95% COMPLETE >>>>
		// Set home
		switch(TxState){
 80040f8:	4b23      	ldr	r3, [pc, #140]	; (8004188 <responseUART+0x770>)
 80040fa:	781b      	ldrb	r3, [r3, #0]
 80040fc:	2b00      	cmp	r3, #0
 80040fe:	d010      	beq.n	8004122 <responseUART+0x70a>
 8004100:	2b01      	cmp	r3, #1
 8004102:	d12a      	bne.n	800415a <responseUART+0x742>
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8004104:	2202      	movs	r2, #2
 8004106:	4924      	ldr	r1, [pc, #144]	; (8004198 <responseUART+0x780>)
 8004108:	4820      	ldr	r0, [pc, #128]	; (800418c <responseUART+0x774>)
 800410a:	f006 fa61 	bl	800a5d0 <HAL_UART_Transmit_DMA>
			setzero = 1;
 800410e:	4b23      	ldr	r3, [pc, #140]	; (800419c <responseUART+0x784>)
 8004110:	2201      	movs	r2, #1
 8004112:	701a      	strb	r2, [r3, #0]
			movingFlag = 14;
 8004114:	4b22      	ldr	r3, [pc, #136]	; (80041a0 <responseUART+0x788>)
 8004116:	220e      	movs	r2, #14
 8004118:	701a      	strb	r2, [r3, #0]
			TxState = 0;
 800411a:	4b1b      	ldr	r3, [pc, #108]	; (8004188 <responseUART+0x770>)
 800411c:	2200      	movs	r2, #0
 800411e:	701a      	strb	r2, [r3, #0]
			//timeStamp = HAL_GetTick();								// Optional
			break;
 8004120:	e000      	b.n	8004124 <responseUART+0x70c>
			break;
 8004122:	bf00      	nop
		}
		break;
 8004124:	e019      	b.n	800415a <responseUART+0x742>
		break;
 8004126:	bf00      	nop
 8004128:	e018      	b.n	800415c <responseUART+0x744>
		break;
 800412a:	bf00      	nop
 800412c:	e016      	b.n	800415c <responseUART+0x744>
		break;
 800412e:	bf00      	nop
 8004130:	e014      	b.n	800415c <responseUART+0x744>
		break;
 8004132:	bf00      	nop
 8004134:	e012      	b.n	800415c <responseUART+0x744>
		break;
 8004136:	bf00      	nop
 8004138:	e010      	b.n	800415c <responseUART+0x744>
		break;
 800413a:	bf00      	nop
 800413c:	e00e      	b.n	800415c <responseUART+0x744>
		break;
 800413e:	bf00      	nop
 8004140:	e00c      	b.n	800415c <responseUART+0x744>
		break;
 8004142:	bf00      	nop
 8004144:	e00a      	b.n	800415c <responseUART+0x744>
		break;
 8004146:	bf00      	nop
 8004148:	e008      	b.n	800415c <responseUART+0x744>
		break;
 800414a:	bf00      	nop
 800414c:	e006      	b.n	800415c <responseUART+0x744>
		break;
 800414e:	bf00      	nop
 8004150:	e004      	b.n	800415c <responseUART+0x744>
		break;
 8004152:	bf00      	nop
 8004154:	e002      	b.n	800415c <responseUART+0x744>
		break;
 8004156:	bf00      	nop
 8004158:	e000      	b.n	800415c <responseUART+0x744>
		break;
 800415a:	bf00      	nop
	}
}
 800415c:	bf00      	nop
 800415e:	370c      	adds	r7, #12
 8004160:	46bd      	mov	sp, r7
 8004162:	bd90      	pop	{r4, r7, pc}
 8004164:	f3af 8000 	nop.w
 8004168:	d97f62b7 	.word	0xd97f62b7
 800416c:	4023193d 	.word	0x4023193d
 8004170:	200005b8 	.word	0x200005b8
 8004174:	2000056c 	.word	0x2000056c
 8004178:	437f0000 	.word	0x437f0000
 800417c:	40240000 	.word	0x40240000
 8004180:	2000054c 	.word	0x2000054c
 8004184:	20000546 	.word	0x20000546
 8004188:	20000545 	.word	0x20000545
 800418c:	200003c0 	.word	0x200003c0
 8004190:	20000563 	.word	0x20000563
 8004194:	20000021 	.word	0x20000021
 8004198:	20000018 	.word	0x20000018
 800419c:	200005a0 	.word	0x200005a0
 80041a0:	2000053c 	.word	0x2000053c

080041a4 <tranStation>:

uint16_t tranStation(uint8_t num){
 80041a4:	b480      	push	{r7}
 80041a6:	b083      	sub	sp, #12
 80041a8:	af00      	add	r7, sp, #0
 80041aa:	4603      	mov	r3, r0
 80041ac:	71fb      	strb	r3, [r7, #7]
	switch(num){
 80041ae:	79fb      	ldrb	r3, [r7, #7]
 80041b0:	3b01      	subs	r3, #1
 80041b2:	2b09      	cmp	r3, #9
 80041b4:	d82b      	bhi.n	800420e <tranStation+0x6a>
 80041b6:	a201      	add	r2, pc, #4	; (adr r2, 80041bc <tranStation+0x18>)
 80041b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80041bc:	080041e5 	.word	0x080041e5
 80041c0:	080041e9 	.word	0x080041e9
 80041c4:	080041ed 	.word	0x080041ed
 80041c8:	080041f3 	.word	0x080041f3
 80041cc:	080041f7 	.word	0x080041f7
 80041d0:	080041fb 	.word	0x080041fb
 80041d4:	080041ff 	.word	0x080041ff
 80041d8:	08004203 	.word	0x08004203
 80041dc:	08004207 	.word	0x08004207
 80041e0:	0800420b 	.word	0x0800420b
	case 1:
		return 90;
 80041e4:	235a      	movs	r3, #90	; 0x5a
 80041e6:	e012      	b.n	800420e <tranStation+0x6a>
		break;
	case 2:
		return 180;
 80041e8:	23b4      	movs	r3, #180	; 0xb4
 80041ea:	e010      	b.n	800420e <tranStation+0x6a>
		break;
	case 3:
		return 330;
 80041ec:	f44f 73a5 	mov.w	r3, #330	; 0x14a
 80041f0:	e00d      	b.n	800420e <tranStation+0x6a>
		break;
	case 4:
		return 0;
 80041f2:	2300      	movs	r3, #0
 80041f4:	e00b      	b.n	800420e <tranStation+0x6a>
		break;
	case 5:
		return 5;
 80041f6:	2305      	movs	r3, #5
 80041f8:	e009      	b.n	800420e <tranStation+0x6a>
		break;
	case 6:
		return 10;
 80041fa:	230a      	movs	r3, #10
 80041fc:	e007      	b.n	800420e <tranStation+0x6a>
		break;
	case 7:
		return 15;
 80041fe:	230f      	movs	r3, #15
 8004200:	e005      	b.n	800420e <tranStation+0x6a>
		break;
	case 8:
		return 20;
 8004202:	2314      	movs	r3, #20
 8004204:	e003      	b.n	800420e <tranStation+0x6a>
		break;
	case 9:
		return 255;
 8004206:	23ff      	movs	r3, #255	; 0xff
 8004208:	e001      	b.n	800420e <tranStation+0x6a>
		break;
	case 10:
		return 0;
 800420a:	2300      	movs	r3, #0
 800420c:	e7ff      	b.n	800420e <tranStation+0x6a>
		break;
	}
}
 800420e:	4618      	mov	r0, r3
 8004210:	370c      	adds	r7, #12
 8004212:	46bd      	mov	sp, r7
 8004214:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004218:	4770      	bx	lr
 800421a:	bf00      	nop

0800421c <destinationACK>:

void destinationACK(){
 800421c:	b580      	push	{r7, lr}
 800421e:	af00      	add	r7, sp, #0
	if(movingFlag != 0 && Reached ){
 8004220:	4b0d      	ldr	r3, [pc, #52]	; (8004258 <destinationACK+0x3c>)
 8004222:	781b      	ldrb	r3, [r3, #0]
 8004224:	2b00      	cmp	r3, #0
 8004226:	d015      	beq.n	8004254 <destinationACK+0x38>
 8004228:	4b0c      	ldr	r3, [pc, #48]	; (800425c <destinationACK+0x40>)
 800422a:	781b      	ldrb	r3, [r3, #0]
 800422c:	2b00      	cmp	r3, #0
 800422e:	d011      	beq.n	8004254 <destinationACK+0x38>
		//((HAL_GetTick()-timeStamp > 10000) || Reached)
	    switch(movingFlag){
 8004230:	4b09      	ldr	r3, [pc, #36]	; (8004258 <destinationACK+0x3c>)
 8004232:	781b      	ldrb	r3, [r3, #0]
 8004234:	2b08      	cmp	r3, #8
 8004236:	d001      	beq.n	800423c <destinationACK+0x20>
 8004238:	2b0e      	cmp	r3, #14
	    case 8:
		  HAL_UART_Transmit_DMA(&huart2, ACK2, 2);
		  break;
	    case 14:
//	    	HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
		  break;
 800423a:	e005      	b.n	8004248 <destinationACK+0x2c>
		  HAL_UART_Transmit_DMA(&huart2, ACK2, 2);
 800423c:	2202      	movs	r2, #2
 800423e:	4908      	ldr	r1, [pc, #32]	; (8004260 <destinationACK+0x44>)
 8004240:	4808      	ldr	r0, [pc, #32]	; (8004264 <destinationACK+0x48>)
 8004242:	f006 f9c5 	bl	800a5d0 <HAL_UART_Transmit_DMA>
		  break;
 8004246:	bf00      	nop
	    }
	    movingFlag = 0;
 8004248:	4b03      	ldr	r3, [pc, #12]	; (8004258 <destinationACK+0x3c>)
 800424a:	2200      	movs	r2, #0
 800424c:	701a      	strb	r2, [r3, #0]
	    Reached = 0;
 800424e:	4b03      	ldr	r3, [pc, #12]	; (800425c <destinationACK+0x40>)
 8004250:	2200      	movs	r2, #0
 8004252:	701a      	strb	r2, [r3, #0]
  }
}
 8004254:	bf00      	nop
 8004256:	bd80      	pop	{r7, pc}
 8004258:	2000053c 	.word	0x2000053c
 800425c:	2000053b 	.word	0x2000053b
 8004260:	2000001c 	.word	0x2000001c
 8004264:	200003c0 	.word	0x200003c0

08004268 <frameConfig>:

uint8_t frameConfig(uint8_t mode){
 8004268:	b480      	push	{r7}
 800426a:	b083      	sub	sp, #12
 800426c:	af00      	add	r7, sp, #0
 800426e:	4603      	mov	r3, r0
 8004270:	71fb      	strb	r3, [r7, #7]
	if(mode == 2 || mode == 3 || mode == 8 || mode == 9 || mode == 10 || mode == 11 || mode == 12 || mode == 13 || mode == 14){
 8004272:	79fb      	ldrb	r3, [r7, #7]
 8004274:	2b02      	cmp	r3, #2
 8004276:	d017      	beq.n	80042a8 <frameConfig+0x40>
 8004278:	79fb      	ldrb	r3, [r7, #7]
 800427a:	2b03      	cmp	r3, #3
 800427c:	d014      	beq.n	80042a8 <frameConfig+0x40>
 800427e:	79fb      	ldrb	r3, [r7, #7]
 8004280:	2b08      	cmp	r3, #8
 8004282:	d011      	beq.n	80042a8 <frameConfig+0x40>
 8004284:	79fb      	ldrb	r3, [r7, #7]
 8004286:	2b09      	cmp	r3, #9
 8004288:	d00e      	beq.n	80042a8 <frameConfig+0x40>
 800428a:	79fb      	ldrb	r3, [r7, #7]
 800428c:	2b0a      	cmp	r3, #10
 800428e:	d00b      	beq.n	80042a8 <frameConfig+0x40>
 8004290:	79fb      	ldrb	r3, [r7, #7]
 8004292:	2b0b      	cmp	r3, #11
 8004294:	d008      	beq.n	80042a8 <frameConfig+0x40>
 8004296:	79fb      	ldrb	r3, [r7, #7]
 8004298:	2b0c      	cmp	r3, #12
 800429a:	d005      	beq.n	80042a8 <frameConfig+0x40>
 800429c:	79fb      	ldrb	r3, [r7, #7]
 800429e:	2b0d      	cmp	r3, #13
 80042a0:	d002      	beq.n	80042a8 <frameConfig+0x40>
 80042a2:	79fb      	ldrb	r3, [r7, #7]
 80042a4:	2b0e      	cmp	r3, #14
 80042a6:	d101      	bne.n	80042ac <frameConfig+0x44>
		return 1;
 80042a8:	2301      	movs	r3, #1
 80042aa:	e013      	b.n	80042d4 <frameConfig+0x6c>
	}
	else if(mode == 1 || mode == 4 || mode == 5 ||  mode == 6){
 80042ac:	79fb      	ldrb	r3, [r7, #7]
 80042ae:	2b01      	cmp	r3, #1
 80042b0:	d008      	beq.n	80042c4 <frameConfig+0x5c>
 80042b2:	79fb      	ldrb	r3, [r7, #7]
 80042b4:	2b04      	cmp	r3, #4
 80042b6:	d005      	beq.n	80042c4 <frameConfig+0x5c>
 80042b8:	79fb      	ldrb	r3, [r7, #7]
 80042ba:	2b05      	cmp	r3, #5
 80042bc:	d002      	beq.n	80042c4 <frameConfig+0x5c>
 80042be:	79fb      	ldrb	r3, [r7, #7]
 80042c0:	2b06      	cmp	r3, #6
 80042c2:	d101      	bne.n	80042c8 <frameConfig+0x60>
		return 3;
 80042c4:	2303      	movs	r3, #3
 80042c6:	e005      	b.n	80042d4 <frameConfig+0x6c>
	}
	else if(mode == 7){
 80042c8:	79fb      	ldrb	r3, [r7, #7]
 80042ca:	2b07      	cmp	r3, #7
 80042cc:	d101      	bne.n	80042d2 <frameConfig+0x6a>
		return 1;									// Keep the number of byte first. (nStation)
 80042ce:	2301      	movs	r3, #1
 80042d0:	e000      	b.n	80042d4 <frameConfig+0x6c>
	}
	return 0;
 80042d2:	2300      	movs	r3, #0
}
 80042d4:	4618      	mov	r0, r3
 80042d6:	370c      	adds	r7, #12
 80042d8:	46bd      	mov	sp, r7
 80042da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042de:	4770      	bx	lr

080042e0 <checkSum>:

uint8_t checkSum(uint8_t var){
 80042e0:	b480      	push	{r7}
 80042e2:	b083      	sub	sp, #12
 80042e4:	af00      	add	r7, sp, #0
 80042e6:	4603      	mov	r3, r0
 80042e8:	71fb      	strb	r3, [r7, #7]
	//cSum = (~(var%256))%256;						// Spectrator variable
	return (~(var%256))%256;
 80042ea:	79fb      	ldrb	r3, [r7, #7]
 80042ec:	43db      	mvns	r3, r3
 80042ee:	425a      	negs	r2, r3
 80042f0:	b2db      	uxtb	r3, r3
 80042f2:	b2d2      	uxtb	r2, r2
 80042f4:	bf58      	it	pl
 80042f6:	4253      	negpl	r3, r2
 80042f8:	b2db      	uxtb	r3, r3
}
 80042fa:	4618      	mov	r0, r3
 80042fc:	370c      	adds	r7, #12
 80042fe:	46bd      	mov	sp, r7
 8004300:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004304:	4770      	bx	lr

08004306 <frameSum>:

uint8_t frameSum(uint8_t *frame, uint8_t num){
 8004306:	b480      	push	{r7}
 8004308:	b085      	sub	sp, #20
 800430a:	af00      	add	r7, sp, #0
 800430c:	6078      	str	r0, [r7, #4]
 800430e:	460b      	mov	r3, r1
 8004310:	70fb      	strb	r3, [r7, #3]
	uint8_t var = 0;
 8004312:	2300      	movs	r3, #0
 8004314:	73fb      	strb	r3, [r7, #15]
	for( int i=0; i<num; i+=1){
 8004316:	2300      	movs	r3, #0
 8004318:	60bb      	str	r3, [r7, #8]
 800431a:	e009      	b.n	8004330 <frameSum+0x2a>
		var += frame[i];							// Sum all the bits in buffer.
 800431c:	68bb      	ldr	r3, [r7, #8]
 800431e:	687a      	ldr	r2, [r7, #4]
 8004320:	4413      	add	r3, r2
 8004322:	781a      	ldrb	r2, [r3, #0]
 8004324:	7bfb      	ldrb	r3, [r7, #15]
 8004326:	4413      	add	r3, r2
 8004328:	73fb      	strb	r3, [r7, #15]
	for( int i=0; i<num; i+=1){
 800432a:	68bb      	ldr	r3, [r7, #8]
 800432c:	3301      	adds	r3, #1
 800432e:	60bb      	str	r3, [r7, #8]
 8004330:	78fb      	ldrb	r3, [r7, #3]
 8004332:	68ba      	ldr	r2, [r7, #8]
 8004334:	429a      	cmp	r2, r3
 8004336:	dbf1      	blt.n	800431c <frameSum+0x16>
	}
	return var;
 8004338:	7bfb      	ldrb	r3, [r7, #15]
}
 800433a:	4618      	mov	r0, r3
 800433c:	3714      	adds	r7, #20
 800433e:	46bd      	mov	sp, r7
 8004340:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004344:	4770      	bx	lr
	...

08004348 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 8004348:	b580      	push	{r7, lr}
 800434a:	b082      	sub	sp, #8
 800434c:	af00      	add	r7, sp, #0
 800434e:	6078      	str	r0, [r7, #4]
	//RxComplete = 1;
	callUART();
 8004350:	f7ff fa16 	bl	8003780 <callUART>
	HAL_UART_Receive_DMA(&huart2, Receive, nbyte);
 8004354:	4b05      	ldr	r3, [pc, #20]	; (800436c <HAL_UART_RxCpltCallback+0x24>)
 8004356:	781b      	ldrb	r3, [r3, #0]
 8004358:	b29b      	uxth	r3, r3
 800435a:	461a      	mov	r2, r3
 800435c:	4904      	ldr	r1, [pc, #16]	; (8004370 <HAL_UART_RxCpltCallback+0x28>)
 800435e:	4805      	ldr	r0, [pc, #20]	; (8004374 <HAL_UART_RxCpltCallback+0x2c>)
 8004360:	f006 f9b4 	bl	800a6cc <HAL_UART_Receive_DMA>
}
 8004364:	bf00      	nop
 8004366:	3708      	adds	r7, #8
 8004368:	46bd      	mov	sp, r7
 800436a:	bd80      	pop	{r7, pc}
 800436c:	2000001e 	.word	0x2000001e
 8004370:	20000550 	.word	0x20000550
 8004374:	200003c0 	.word	0x200003c0

08004378 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8004378:	b480      	push	{r7}
 800437a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800437c:	b672      	cpsid	i
}
 800437e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8004380:	e7fe      	b.n	8004380 <Error_Handler+0x8>
	...

08004384 <HAL_MspInit>:
 8004384:	b580      	push	{r7, lr}
 8004386:	b082      	sub	sp, #8
 8004388:	af00      	add	r7, sp, #0
 800438a:	2300      	movs	r3, #0
 800438c:	607b      	str	r3, [r7, #4]
 800438e:	4b10      	ldr	r3, [pc, #64]	; (80043d0 <HAL_MspInit+0x4c>)
 8004390:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004392:	4a0f      	ldr	r2, [pc, #60]	; (80043d0 <HAL_MspInit+0x4c>)
 8004394:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004398:	6453      	str	r3, [r2, #68]	; 0x44
 800439a:	4b0d      	ldr	r3, [pc, #52]	; (80043d0 <HAL_MspInit+0x4c>)
 800439c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800439e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80043a2:	607b      	str	r3, [r7, #4]
 80043a4:	687b      	ldr	r3, [r7, #4]
 80043a6:	2300      	movs	r3, #0
 80043a8:	603b      	str	r3, [r7, #0]
 80043aa:	4b09      	ldr	r3, [pc, #36]	; (80043d0 <HAL_MspInit+0x4c>)
 80043ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043ae:	4a08      	ldr	r2, [pc, #32]	; (80043d0 <HAL_MspInit+0x4c>)
 80043b0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80043b4:	6413      	str	r3, [r2, #64]	; 0x40
 80043b6:	4b06      	ldr	r3, [pc, #24]	; (80043d0 <HAL_MspInit+0x4c>)
 80043b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043ba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80043be:	603b      	str	r3, [r7, #0]
 80043c0:	683b      	ldr	r3, [r7, #0]
 80043c2:	2007      	movs	r0, #7
 80043c4:	f000 fc60 	bl	8004c88 <HAL_NVIC_SetPriorityGrouping>
 80043c8:	bf00      	nop
 80043ca:	3708      	adds	r7, #8
 80043cc:	46bd      	mov	sp, r7
 80043ce:	bd80      	pop	{r7, pc}
 80043d0:	40023800 	.word	0x40023800

080043d4 <HAL_I2C_MspInit>:
 80043d4:	b580      	push	{r7, lr}
 80043d6:	b08a      	sub	sp, #40	; 0x28
 80043d8:	af00      	add	r7, sp, #0
 80043da:	6078      	str	r0, [r7, #4]
 80043dc:	f107 0314 	add.w	r3, r7, #20
 80043e0:	2200      	movs	r2, #0
 80043e2:	601a      	str	r2, [r3, #0]
 80043e4:	605a      	str	r2, [r3, #4]
 80043e6:	609a      	str	r2, [r3, #8]
 80043e8:	60da      	str	r2, [r3, #12]
 80043ea:	611a      	str	r2, [r3, #16]
 80043ec:	687b      	ldr	r3, [r7, #4]
 80043ee:	681b      	ldr	r3, [r3, #0]
 80043f0:	4a21      	ldr	r2, [pc, #132]	; (8004478 <HAL_I2C_MspInit+0xa4>)
 80043f2:	4293      	cmp	r3, r2
 80043f4:	d13c      	bne.n	8004470 <HAL_I2C_MspInit+0x9c>
 80043f6:	2300      	movs	r3, #0
 80043f8:	613b      	str	r3, [r7, #16]
 80043fa:	4b20      	ldr	r3, [pc, #128]	; (800447c <HAL_I2C_MspInit+0xa8>)
 80043fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80043fe:	4a1f      	ldr	r2, [pc, #124]	; (800447c <HAL_I2C_MspInit+0xa8>)
 8004400:	f043 0302 	orr.w	r3, r3, #2
 8004404:	6313      	str	r3, [r2, #48]	; 0x30
 8004406:	4b1d      	ldr	r3, [pc, #116]	; (800447c <HAL_I2C_MspInit+0xa8>)
 8004408:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800440a:	f003 0302 	and.w	r3, r3, #2
 800440e:	613b      	str	r3, [r7, #16]
 8004410:	693b      	ldr	r3, [r7, #16]
 8004412:	f44f 7340 	mov.w	r3, #768	; 0x300
 8004416:	617b      	str	r3, [r7, #20]
 8004418:	2312      	movs	r3, #18
 800441a:	61bb      	str	r3, [r7, #24]
 800441c:	2300      	movs	r3, #0
 800441e:	61fb      	str	r3, [r7, #28]
 8004420:	2303      	movs	r3, #3
 8004422:	623b      	str	r3, [r7, #32]
 8004424:	2304      	movs	r3, #4
 8004426:	627b      	str	r3, [r7, #36]	; 0x24
 8004428:	f107 0314 	add.w	r3, r7, #20
 800442c:	4619      	mov	r1, r3
 800442e:	4814      	ldr	r0, [pc, #80]	; (8004480 <HAL_I2C_MspInit+0xac>)
 8004430:	f001 f87c 	bl	800552c <HAL_GPIO_Init>
 8004434:	2300      	movs	r3, #0
 8004436:	60fb      	str	r3, [r7, #12]
 8004438:	4b10      	ldr	r3, [pc, #64]	; (800447c <HAL_I2C_MspInit+0xa8>)
 800443a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800443c:	4a0f      	ldr	r2, [pc, #60]	; (800447c <HAL_I2C_MspInit+0xa8>)
 800443e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8004442:	6413      	str	r3, [r2, #64]	; 0x40
 8004444:	4b0d      	ldr	r3, [pc, #52]	; (800447c <HAL_I2C_MspInit+0xa8>)
 8004446:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004448:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800444c:	60fb      	str	r3, [r7, #12]
 800444e:	68fb      	ldr	r3, [r7, #12]
 8004450:	2200      	movs	r2, #0
 8004452:	2100      	movs	r1, #0
 8004454:	201f      	movs	r0, #31
 8004456:	f000 fc22 	bl	8004c9e <HAL_NVIC_SetPriority>
 800445a:	201f      	movs	r0, #31
 800445c:	f000 fc3b 	bl	8004cd6 <HAL_NVIC_EnableIRQ>
 8004460:	2200      	movs	r2, #0
 8004462:	2100      	movs	r1, #0
 8004464:	2020      	movs	r0, #32
 8004466:	f000 fc1a 	bl	8004c9e <HAL_NVIC_SetPriority>
 800446a:	2020      	movs	r0, #32
 800446c:	f000 fc33 	bl	8004cd6 <HAL_NVIC_EnableIRQ>
 8004470:	bf00      	nop
 8004472:	3728      	adds	r7, #40	; 0x28
 8004474:	46bd      	mov	sp, r7
 8004476:	bd80      	pop	{r7, pc}
 8004478:	40005400 	.word	0x40005400
 800447c:	40023800 	.word	0x40023800
 8004480:	40020400 	.word	0x40020400

08004484 <HAL_SPI_MspInit>:
 8004484:	b580      	push	{r7, lr}
 8004486:	b08a      	sub	sp, #40	; 0x28
 8004488:	af00      	add	r7, sp, #0
 800448a:	6078      	str	r0, [r7, #4]
 800448c:	f107 0314 	add.w	r3, r7, #20
 8004490:	2200      	movs	r2, #0
 8004492:	601a      	str	r2, [r3, #0]
 8004494:	605a      	str	r2, [r3, #4]
 8004496:	609a      	str	r2, [r3, #8]
 8004498:	60da      	str	r2, [r3, #12]
 800449a:	611a      	str	r2, [r3, #16]
 800449c:	687b      	ldr	r3, [r7, #4]
 800449e:	681b      	ldr	r3, [r3, #0]
 80044a0:	4a4b      	ldr	r2, [pc, #300]	; (80045d0 <HAL_SPI_MspInit+0x14c>)
 80044a2:	4293      	cmp	r3, r2
 80044a4:	f040 8090 	bne.w	80045c8 <HAL_SPI_MspInit+0x144>
 80044a8:	2300      	movs	r3, #0
 80044aa:	613b      	str	r3, [r7, #16]
 80044ac:	4b49      	ldr	r3, [pc, #292]	; (80045d4 <HAL_SPI_MspInit+0x150>)
 80044ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044b0:	4a48      	ldr	r2, [pc, #288]	; (80045d4 <HAL_SPI_MspInit+0x150>)
 80044b2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80044b6:	6413      	str	r3, [r2, #64]	; 0x40
 80044b8:	4b46      	ldr	r3, [pc, #280]	; (80045d4 <HAL_SPI_MspInit+0x150>)
 80044ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044bc:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80044c0:	613b      	str	r3, [r7, #16]
 80044c2:	693b      	ldr	r3, [r7, #16]
 80044c4:	2300      	movs	r3, #0
 80044c6:	60fb      	str	r3, [r7, #12]
 80044c8:	4b42      	ldr	r3, [pc, #264]	; (80045d4 <HAL_SPI_MspInit+0x150>)
 80044ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80044cc:	4a41      	ldr	r2, [pc, #260]	; (80045d4 <HAL_SPI_MspInit+0x150>)
 80044ce:	f043 0302 	orr.w	r3, r3, #2
 80044d2:	6313      	str	r3, [r2, #48]	; 0x30
 80044d4:	4b3f      	ldr	r3, [pc, #252]	; (80045d4 <HAL_SPI_MspInit+0x150>)
 80044d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80044d8:	f003 0302 	and.w	r3, r3, #2
 80044dc:	60fb      	str	r3, [r7, #12]
 80044de:	68fb      	ldr	r3, [r7, #12]
 80044e0:	2338      	movs	r3, #56	; 0x38
 80044e2:	617b      	str	r3, [r7, #20]
 80044e4:	2302      	movs	r3, #2
 80044e6:	61bb      	str	r3, [r7, #24]
 80044e8:	2300      	movs	r3, #0
 80044ea:	61fb      	str	r3, [r7, #28]
 80044ec:	2303      	movs	r3, #3
 80044ee:	623b      	str	r3, [r7, #32]
 80044f0:	2306      	movs	r3, #6
 80044f2:	627b      	str	r3, [r7, #36]	; 0x24
 80044f4:	f107 0314 	add.w	r3, r7, #20
 80044f8:	4619      	mov	r1, r3
 80044fa:	4837      	ldr	r0, [pc, #220]	; (80045d8 <HAL_SPI_MspInit+0x154>)
 80044fc:	f001 f816 	bl	800552c <HAL_GPIO_Init>
 8004500:	4b36      	ldr	r3, [pc, #216]	; (80045dc <HAL_SPI_MspInit+0x158>)
 8004502:	4a37      	ldr	r2, [pc, #220]	; (80045e0 <HAL_SPI_MspInit+0x15c>)
 8004504:	601a      	str	r2, [r3, #0]
 8004506:	4b35      	ldr	r3, [pc, #212]	; (80045dc <HAL_SPI_MspInit+0x158>)
 8004508:	2200      	movs	r2, #0
 800450a:	605a      	str	r2, [r3, #4]
 800450c:	4b33      	ldr	r3, [pc, #204]	; (80045dc <HAL_SPI_MspInit+0x158>)
 800450e:	2200      	movs	r2, #0
 8004510:	609a      	str	r2, [r3, #8]
 8004512:	4b32      	ldr	r3, [pc, #200]	; (80045dc <HAL_SPI_MspInit+0x158>)
 8004514:	2200      	movs	r2, #0
 8004516:	60da      	str	r2, [r3, #12]
 8004518:	4b30      	ldr	r3, [pc, #192]	; (80045dc <HAL_SPI_MspInit+0x158>)
 800451a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800451e:	611a      	str	r2, [r3, #16]
 8004520:	4b2e      	ldr	r3, [pc, #184]	; (80045dc <HAL_SPI_MspInit+0x158>)
 8004522:	2200      	movs	r2, #0
 8004524:	615a      	str	r2, [r3, #20]
 8004526:	4b2d      	ldr	r3, [pc, #180]	; (80045dc <HAL_SPI_MspInit+0x158>)
 8004528:	2200      	movs	r2, #0
 800452a:	619a      	str	r2, [r3, #24]
 800452c:	4b2b      	ldr	r3, [pc, #172]	; (80045dc <HAL_SPI_MspInit+0x158>)
 800452e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004532:	61da      	str	r2, [r3, #28]
 8004534:	4b29      	ldr	r3, [pc, #164]	; (80045dc <HAL_SPI_MspInit+0x158>)
 8004536:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800453a:	621a      	str	r2, [r3, #32]
 800453c:	4b27      	ldr	r3, [pc, #156]	; (80045dc <HAL_SPI_MspInit+0x158>)
 800453e:	2200      	movs	r2, #0
 8004540:	625a      	str	r2, [r3, #36]	; 0x24
 8004542:	4826      	ldr	r0, [pc, #152]	; (80045dc <HAL_SPI_MspInit+0x158>)
 8004544:	f000 fbe2 	bl	8004d0c <HAL_DMA_Init>
 8004548:	4603      	mov	r3, r0
 800454a:	2b00      	cmp	r3, #0
 800454c:	d001      	beq.n	8004552 <HAL_SPI_MspInit+0xce>
 800454e:	f7ff ff13 	bl	8004378 <Error_Handler>
 8004552:	687b      	ldr	r3, [r7, #4]
 8004554:	4a21      	ldr	r2, [pc, #132]	; (80045dc <HAL_SPI_MspInit+0x158>)
 8004556:	64da      	str	r2, [r3, #76]	; 0x4c
 8004558:	4a20      	ldr	r2, [pc, #128]	; (80045dc <HAL_SPI_MspInit+0x158>)
 800455a:	687b      	ldr	r3, [r7, #4]
 800455c:	6393      	str	r3, [r2, #56]	; 0x38
 800455e:	4b21      	ldr	r3, [pc, #132]	; (80045e4 <HAL_SPI_MspInit+0x160>)
 8004560:	4a21      	ldr	r2, [pc, #132]	; (80045e8 <HAL_SPI_MspInit+0x164>)
 8004562:	601a      	str	r2, [r3, #0]
 8004564:	4b1f      	ldr	r3, [pc, #124]	; (80045e4 <HAL_SPI_MspInit+0x160>)
 8004566:	2200      	movs	r2, #0
 8004568:	605a      	str	r2, [r3, #4]
 800456a:	4b1e      	ldr	r3, [pc, #120]	; (80045e4 <HAL_SPI_MspInit+0x160>)
 800456c:	2240      	movs	r2, #64	; 0x40
 800456e:	609a      	str	r2, [r3, #8]
 8004570:	4b1c      	ldr	r3, [pc, #112]	; (80045e4 <HAL_SPI_MspInit+0x160>)
 8004572:	2200      	movs	r2, #0
 8004574:	60da      	str	r2, [r3, #12]
 8004576:	4b1b      	ldr	r3, [pc, #108]	; (80045e4 <HAL_SPI_MspInit+0x160>)
 8004578:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800457c:	611a      	str	r2, [r3, #16]
 800457e:	4b19      	ldr	r3, [pc, #100]	; (80045e4 <HAL_SPI_MspInit+0x160>)
 8004580:	2200      	movs	r2, #0
 8004582:	615a      	str	r2, [r3, #20]
 8004584:	4b17      	ldr	r3, [pc, #92]	; (80045e4 <HAL_SPI_MspInit+0x160>)
 8004586:	2200      	movs	r2, #0
 8004588:	619a      	str	r2, [r3, #24]
 800458a:	4b16      	ldr	r3, [pc, #88]	; (80045e4 <HAL_SPI_MspInit+0x160>)
 800458c:	2200      	movs	r2, #0
 800458e:	61da      	str	r2, [r3, #28]
 8004590:	4b14      	ldr	r3, [pc, #80]	; (80045e4 <HAL_SPI_MspInit+0x160>)
 8004592:	2200      	movs	r2, #0
 8004594:	621a      	str	r2, [r3, #32]
 8004596:	4b13      	ldr	r3, [pc, #76]	; (80045e4 <HAL_SPI_MspInit+0x160>)
 8004598:	2200      	movs	r2, #0
 800459a:	625a      	str	r2, [r3, #36]	; 0x24
 800459c:	4811      	ldr	r0, [pc, #68]	; (80045e4 <HAL_SPI_MspInit+0x160>)
 800459e:	f000 fbb5 	bl	8004d0c <HAL_DMA_Init>
 80045a2:	4603      	mov	r3, r0
 80045a4:	2b00      	cmp	r3, #0
 80045a6:	d001      	beq.n	80045ac <HAL_SPI_MspInit+0x128>
 80045a8:	f7ff fee6 	bl	8004378 <Error_Handler>
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	4a0d      	ldr	r2, [pc, #52]	; (80045e4 <HAL_SPI_MspInit+0x160>)
 80045b0:	649a      	str	r2, [r3, #72]	; 0x48
 80045b2:	4a0c      	ldr	r2, [pc, #48]	; (80045e4 <HAL_SPI_MspInit+0x160>)
 80045b4:	687b      	ldr	r3, [r7, #4]
 80045b6:	6393      	str	r3, [r2, #56]	; 0x38
 80045b8:	2200      	movs	r2, #0
 80045ba:	2100      	movs	r1, #0
 80045bc:	2033      	movs	r0, #51	; 0x33
 80045be:	f000 fb6e 	bl	8004c9e <HAL_NVIC_SetPriority>
 80045c2:	2033      	movs	r0, #51	; 0x33
 80045c4:	f000 fb87 	bl	8004cd6 <HAL_NVIC_EnableIRQ>
 80045c8:	bf00      	nop
 80045ca:	3728      	adds	r7, #40	; 0x28
 80045cc:	46bd      	mov	sp, r7
 80045ce:	bd80      	pop	{r7, pc}
 80045d0:	40003c00 	.word	0x40003c00
 80045d4:	40023800 	.word	0x40023800
 80045d8:	40020400 	.word	0x40020400
 80045dc:	20000270 	.word	0x20000270
 80045e0:	40026010 	.word	0x40026010
 80045e4:	200002d0 	.word	0x200002d0
 80045e8:	400260b8 	.word	0x400260b8

080045ec <HAL_TIM_Base_MspInit>:
 80045ec:	b580      	push	{r7, lr}
 80045ee:	b084      	sub	sp, #16
 80045f0:	af00      	add	r7, sp, #0
 80045f2:	6078      	str	r0, [r7, #4]
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	681b      	ldr	r3, [r3, #0]
 80045f8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80045fc:	d116      	bne.n	800462c <HAL_TIM_Base_MspInit+0x40>
 80045fe:	2300      	movs	r3, #0
 8004600:	60fb      	str	r3, [r7, #12]
 8004602:	4b1a      	ldr	r3, [pc, #104]	; (800466c <HAL_TIM_Base_MspInit+0x80>)
 8004604:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004606:	4a19      	ldr	r2, [pc, #100]	; (800466c <HAL_TIM_Base_MspInit+0x80>)
 8004608:	f043 0301 	orr.w	r3, r3, #1
 800460c:	6413      	str	r3, [r2, #64]	; 0x40
 800460e:	4b17      	ldr	r3, [pc, #92]	; (800466c <HAL_TIM_Base_MspInit+0x80>)
 8004610:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004612:	f003 0301 	and.w	r3, r3, #1
 8004616:	60fb      	str	r3, [r7, #12]
 8004618:	68fb      	ldr	r3, [r7, #12]
 800461a:	2200      	movs	r2, #0
 800461c:	2100      	movs	r1, #0
 800461e:	201c      	movs	r0, #28
 8004620:	f000 fb3d 	bl	8004c9e <HAL_NVIC_SetPriority>
 8004624:	201c      	movs	r0, #28
 8004626:	f000 fb56 	bl	8004cd6 <HAL_NVIC_EnableIRQ>
 800462a:	e01a      	b.n	8004662 <HAL_TIM_Base_MspInit+0x76>
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	681b      	ldr	r3, [r3, #0]
 8004630:	4a0f      	ldr	r2, [pc, #60]	; (8004670 <HAL_TIM_Base_MspInit+0x84>)
 8004632:	4293      	cmp	r3, r2
 8004634:	d115      	bne.n	8004662 <HAL_TIM_Base_MspInit+0x76>
 8004636:	2300      	movs	r3, #0
 8004638:	60bb      	str	r3, [r7, #8]
 800463a:	4b0c      	ldr	r3, [pc, #48]	; (800466c <HAL_TIM_Base_MspInit+0x80>)
 800463c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800463e:	4a0b      	ldr	r2, [pc, #44]	; (800466c <HAL_TIM_Base_MspInit+0x80>)
 8004640:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004644:	6453      	str	r3, [r2, #68]	; 0x44
 8004646:	4b09      	ldr	r3, [pc, #36]	; (800466c <HAL_TIM_Base_MspInit+0x80>)
 8004648:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800464a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800464e:	60bb      	str	r3, [r7, #8]
 8004650:	68bb      	ldr	r3, [r7, #8]
 8004652:	2200      	movs	r2, #0
 8004654:	2100      	movs	r1, #0
 8004656:	201a      	movs	r0, #26
 8004658:	f000 fb21 	bl	8004c9e <HAL_NVIC_SetPriority>
 800465c:	201a      	movs	r0, #26
 800465e:	f000 fb3a 	bl	8004cd6 <HAL_NVIC_EnableIRQ>
 8004662:	bf00      	nop
 8004664:	3710      	adds	r7, #16
 8004666:	46bd      	mov	sp, r7
 8004668:	bd80      	pop	{r7, pc}
 800466a:	bf00      	nop
 800466c:	40023800 	.word	0x40023800
 8004670:	40014800 	.word	0x40014800

08004674 <HAL_TIM_MspPostInit>:
 8004674:	b580      	push	{r7, lr}
 8004676:	b088      	sub	sp, #32
 8004678:	af00      	add	r7, sp, #0
 800467a:	6078      	str	r0, [r7, #4]
 800467c:	f107 030c 	add.w	r3, r7, #12
 8004680:	2200      	movs	r2, #0
 8004682:	601a      	str	r2, [r3, #0]
 8004684:	605a      	str	r2, [r3, #4]
 8004686:	609a      	str	r2, [r3, #8]
 8004688:	60da      	str	r2, [r3, #12]
 800468a:	611a      	str	r2, [r3, #16]
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	681b      	ldr	r3, [r3, #0]
 8004690:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004694:	d11d      	bne.n	80046d2 <HAL_TIM_MspPostInit+0x5e>
 8004696:	2300      	movs	r3, #0
 8004698:	60bb      	str	r3, [r7, #8]
 800469a:	4b10      	ldr	r3, [pc, #64]	; (80046dc <HAL_TIM_MspPostInit+0x68>)
 800469c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800469e:	4a0f      	ldr	r2, [pc, #60]	; (80046dc <HAL_TIM_MspPostInit+0x68>)
 80046a0:	f043 0301 	orr.w	r3, r3, #1
 80046a4:	6313      	str	r3, [r2, #48]	; 0x30
 80046a6:	4b0d      	ldr	r3, [pc, #52]	; (80046dc <HAL_TIM_MspPostInit+0x68>)
 80046a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80046aa:	f003 0301 	and.w	r3, r3, #1
 80046ae:	60bb      	str	r3, [r7, #8]
 80046b0:	68bb      	ldr	r3, [r7, #8]
 80046b2:	2303      	movs	r3, #3
 80046b4:	60fb      	str	r3, [r7, #12]
 80046b6:	2302      	movs	r3, #2
 80046b8:	613b      	str	r3, [r7, #16]
 80046ba:	2300      	movs	r3, #0
 80046bc:	617b      	str	r3, [r7, #20]
 80046be:	2300      	movs	r3, #0
 80046c0:	61bb      	str	r3, [r7, #24]
 80046c2:	2301      	movs	r3, #1
 80046c4:	61fb      	str	r3, [r7, #28]
 80046c6:	f107 030c 	add.w	r3, r7, #12
 80046ca:	4619      	mov	r1, r3
 80046cc:	4804      	ldr	r0, [pc, #16]	; (80046e0 <HAL_TIM_MspPostInit+0x6c>)
 80046ce:	f000 ff2d 	bl	800552c <HAL_GPIO_Init>
 80046d2:	bf00      	nop
 80046d4:	3720      	adds	r7, #32
 80046d6:	46bd      	mov	sp, r7
 80046d8:	bd80      	pop	{r7, pc}
 80046da:	bf00      	nop
 80046dc:	40023800 	.word	0x40023800
 80046e0:	40020000 	.word	0x40020000

080046e4 <HAL_UART_MspInit>:
 80046e4:	b580      	push	{r7, lr}
 80046e6:	b08a      	sub	sp, #40	; 0x28
 80046e8:	af00      	add	r7, sp, #0
 80046ea:	6078      	str	r0, [r7, #4]
 80046ec:	f107 0314 	add.w	r3, r7, #20
 80046f0:	2200      	movs	r2, #0
 80046f2:	601a      	str	r2, [r3, #0]
 80046f4:	605a      	str	r2, [r3, #4]
 80046f6:	609a      	str	r2, [r3, #8]
 80046f8:	60da      	str	r2, [r3, #12]
 80046fa:	611a      	str	r2, [r3, #16]
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	681b      	ldr	r3, [r3, #0]
 8004700:	4a4c      	ldr	r2, [pc, #304]	; (8004834 <HAL_UART_MspInit+0x150>)
 8004702:	4293      	cmp	r3, r2
 8004704:	f040 8092 	bne.w	800482c <HAL_UART_MspInit+0x148>
 8004708:	2300      	movs	r3, #0
 800470a:	613b      	str	r3, [r7, #16]
 800470c:	4b4a      	ldr	r3, [pc, #296]	; (8004838 <HAL_UART_MspInit+0x154>)
 800470e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004710:	4a49      	ldr	r2, [pc, #292]	; (8004838 <HAL_UART_MspInit+0x154>)
 8004712:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004716:	6413      	str	r3, [r2, #64]	; 0x40
 8004718:	4b47      	ldr	r3, [pc, #284]	; (8004838 <HAL_UART_MspInit+0x154>)
 800471a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800471c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004720:	613b      	str	r3, [r7, #16]
 8004722:	693b      	ldr	r3, [r7, #16]
 8004724:	2300      	movs	r3, #0
 8004726:	60fb      	str	r3, [r7, #12]
 8004728:	4b43      	ldr	r3, [pc, #268]	; (8004838 <HAL_UART_MspInit+0x154>)
 800472a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800472c:	4a42      	ldr	r2, [pc, #264]	; (8004838 <HAL_UART_MspInit+0x154>)
 800472e:	f043 0301 	orr.w	r3, r3, #1
 8004732:	6313      	str	r3, [r2, #48]	; 0x30
 8004734:	4b40      	ldr	r3, [pc, #256]	; (8004838 <HAL_UART_MspInit+0x154>)
 8004736:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004738:	f003 0301 	and.w	r3, r3, #1
 800473c:	60fb      	str	r3, [r7, #12]
 800473e:	68fb      	ldr	r3, [r7, #12]
 8004740:	230c      	movs	r3, #12
 8004742:	617b      	str	r3, [r7, #20]
 8004744:	2302      	movs	r3, #2
 8004746:	61bb      	str	r3, [r7, #24]
 8004748:	2300      	movs	r3, #0
 800474a:	61fb      	str	r3, [r7, #28]
 800474c:	2303      	movs	r3, #3
 800474e:	623b      	str	r3, [r7, #32]
 8004750:	2307      	movs	r3, #7
 8004752:	627b      	str	r3, [r7, #36]	; 0x24
 8004754:	f107 0314 	add.w	r3, r7, #20
 8004758:	4619      	mov	r1, r3
 800475a:	4838      	ldr	r0, [pc, #224]	; (800483c <HAL_UART_MspInit+0x158>)
 800475c:	f000 fee6 	bl	800552c <HAL_GPIO_Init>
 8004760:	4b37      	ldr	r3, [pc, #220]	; (8004840 <HAL_UART_MspInit+0x15c>)
 8004762:	4a38      	ldr	r2, [pc, #224]	; (8004844 <HAL_UART_MspInit+0x160>)
 8004764:	601a      	str	r2, [r3, #0]
 8004766:	4b36      	ldr	r3, [pc, #216]	; (8004840 <HAL_UART_MspInit+0x15c>)
 8004768:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800476c:	605a      	str	r2, [r3, #4]
 800476e:	4b34      	ldr	r3, [pc, #208]	; (8004840 <HAL_UART_MspInit+0x15c>)
 8004770:	2240      	movs	r2, #64	; 0x40
 8004772:	609a      	str	r2, [r3, #8]
 8004774:	4b32      	ldr	r3, [pc, #200]	; (8004840 <HAL_UART_MspInit+0x15c>)
 8004776:	2200      	movs	r2, #0
 8004778:	60da      	str	r2, [r3, #12]
 800477a:	4b31      	ldr	r3, [pc, #196]	; (8004840 <HAL_UART_MspInit+0x15c>)
 800477c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004780:	611a      	str	r2, [r3, #16]
 8004782:	4b2f      	ldr	r3, [pc, #188]	; (8004840 <HAL_UART_MspInit+0x15c>)
 8004784:	2200      	movs	r2, #0
 8004786:	615a      	str	r2, [r3, #20]
 8004788:	4b2d      	ldr	r3, [pc, #180]	; (8004840 <HAL_UART_MspInit+0x15c>)
 800478a:	2200      	movs	r2, #0
 800478c:	619a      	str	r2, [r3, #24]
 800478e:	4b2c      	ldr	r3, [pc, #176]	; (8004840 <HAL_UART_MspInit+0x15c>)
 8004790:	2200      	movs	r2, #0
 8004792:	61da      	str	r2, [r3, #28]
 8004794:	4b2a      	ldr	r3, [pc, #168]	; (8004840 <HAL_UART_MspInit+0x15c>)
 8004796:	2200      	movs	r2, #0
 8004798:	621a      	str	r2, [r3, #32]
 800479a:	4b29      	ldr	r3, [pc, #164]	; (8004840 <HAL_UART_MspInit+0x15c>)
 800479c:	2200      	movs	r2, #0
 800479e:	625a      	str	r2, [r3, #36]	; 0x24
 80047a0:	4827      	ldr	r0, [pc, #156]	; (8004840 <HAL_UART_MspInit+0x15c>)
 80047a2:	f000 fab3 	bl	8004d0c <HAL_DMA_Init>
 80047a6:	4603      	mov	r3, r0
 80047a8:	2b00      	cmp	r3, #0
 80047aa:	d001      	beq.n	80047b0 <HAL_UART_MspInit+0xcc>
 80047ac:	f7ff fde4 	bl	8004378 <Error_Handler>
 80047b0:	687b      	ldr	r3, [r7, #4]
 80047b2:	4a23      	ldr	r2, [pc, #140]	; (8004840 <HAL_UART_MspInit+0x15c>)
 80047b4:	635a      	str	r2, [r3, #52]	; 0x34
 80047b6:	4a22      	ldr	r2, [pc, #136]	; (8004840 <HAL_UART_MspInit+0x15c>)
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	6393      	str	r3, [r2, #56]	; 0x38
 80047bc:	4b22      	ldr	r3, [pc, #136]	; (8004848 <HAL_UART_MspInit+0x164>)
 80047be:	4a23      	ldr	r2, [pc, #140]	; (800484c <HAL_UART_MspInit+0x168>)
 80047c0:	601a      	str	r2, [r3, #0]
 80047c2:	4b21      	ldr	r3, [pc, #132]	; (8004848 <HAL_UART_MspInit+0x164>)
 80047c4:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80047c8:	605a      	str	r2, [r3, #4]
 80047ca:	4b1f      	ldr	r3, [pc, #124]	; (8004848 <HAL_UART_MspInit+0x164>)
 80047cc:	2200      	movs	r2, #0
 80047ce:	609a      	str	r2, [r3, #8]
 80047d0:	4b1d      	ldr	r3, [pc, #116]	; (8004848 <HAL_UART_MspInit+0x164>)
 80047d2:	2200      	movs	r2, #0
 80047d4:	60da      	str	r2, [r3, #12]
 80047d6:	4b1c      	ldr	r3, [pc, #112]	; (8004848 <HAL_UART_MspInit+0x164>)
 80047d8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80047dc:	611a      	str	r2, [r3, #16]
 80047de:	4b1a      	ldr	r3, [pc, #104]	; (8004848 <HAL_UART_MspInit+0x164>)
 80047e0:	2200      	movs	r2, #0
 80047e2:	615a      	str	r2, [r3, #20]
 80047e4:	4b18      	ldr	r3, [pc, #96]	; (8004848 <HAL_UART_MspInit+0x164>)
 80047e6:	2200      	movs	r2, #0
 80047e8:	619a      	str	r2, [r3, #24]
 80047ea:	4b17      	ldr	r3, [pc, #92]	; (8004848 <HAL_UART_MspInit+0x164>)
 80047ec:	f44f 7280 	mov.w	r2, #256	; 0x100
 80047f0:	61da      	str	r2, [r3, #28]
 80047f2:	4b15      	ldr	r3, [pc, #84]	; (8004848 <HAL_UART_MspInit+0x164>)
 80047f4:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 80047f8:	621a      	str	r2, [r3, #32]
 80047fa:	4b13      	ldr	r3, [pc, #76]	; (8004848 <HAL_UART_MspInit+0x164>)
 80047fc:	2200      	movs	r2, #0
 80047fe:	625a      	str	r2, [r3, #36]	; 0x24
 8004800:	4811      	ldr	r0, [pc, #68]	; (8004848 <HAL_UART_MspInit+0x164>)
 8004802:	f000 fa83 	bl	8004d0c <HAL_DMA_Init>
 8004806:	4603      	mov	r3, r0
 8004808:	2b00      	cmp	r3, #0
 800480a:	d001      	beq.n	8004810 <HAL_UART_MspInit+0x12c>
 800480c:	f7ff fdb4 	bl	8004378 <Error_Handler>
 8004810:	687b      	ldr	r3, [r7, #4]
 8004812:	4a0d      	ldr	r2, [pc, #52]	; (8004848 <HAL_UART_MspInit+0x164>)
 8004814:	639a      	str	r2, [r3, #56]	; 0x38
 8004816:	4a0c      	ldr	r2, [pc, #48]	; (8004848 <HAL_UART_MspInit+0x164>)
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	6393      	str	r3, [r2, #56]	; 0x38
 800481c:	2200      	movs	r2, #0
 800481e:	2100      	movs	r1, #0
 8004820:	2026      	movs	r0, #38	; 0x26
 8004822:	f000 fa3c 	bl	8004c9e <HAL_NVIC_SetPriority>
 8004826:	2026      	movs	r0, #38	; 0x26
 8004828:	f000 fa55 	bl	8004cd6 <HAL_NVIC_EnableIRQ>
 800482c:	bf00      	nop
 800482e:	3728      	adds	r7, #40	; 0x28
 8004830:	46bd      	mov	sp, r7
 8004832:	bd80      	pop	{r7, pc}
 8004834:	40004400 	.word	0x40004400
 8004838:	40023800 	.word	0x40023800
 800483c:	40020000 	.word	0x40020000
 8004840:	20000404 	.word	0x20000404
 8004844:	400260a0 	.word	0x400260a0
 8004848:	20000464 	.word	0x20000464
 800484c:	40026088 	.word	0x40026088

08004850 <NMI_Handler>:
 8004850:	b480      	push	{r7}
 8004852:	af00      	add	r7, sp, #0
 8004854:	e7fe      	b.n	8004854 <NMI_Handler+0x4>

08004856 <HardFault_Handler>:
 8004856:	b480      	push	{r7}
 8004858:	af00      	add	r7, sp, #0
 800485a:	e7fe      	b.n	800485a <HardFault_Handler+0x4>

0800485c <MemManage_Handler>:
 800485c:	b480      	push	{r7}
 800485e:	af00      	add	r7, sp, #0
 8004860:	e7fe      	b.n	8004860 <MemManage_Handler+0x4>

08004862 <BusFault_Handler>:
 8004862:	b480      	push	{r7}
 8004864:	af00      	add	r7, sp, #0
 8004866:	e7fe      	b.n	8004866 <BusFault_Handler+0x4>

08004868 <UsageFault_Handler>:
 8004868:	b480      	push	{r7}
 800486a:	af00      	add	r7, sp, #0
 800486c:	e7fe      	b.n	800486c <UsageFault_Handler+0x4>

0800486e <SVC_Handler>:
 800486e:	b480      	push	{r7}
 8004870:	af00      	add	r7, sp, #0
 8004872:	bf00      	nop
 8004874:	46bd      	mov	sp, r7
 8004876:	f85d 7b04 	ldr.w	r7, [sp], #4
 800487a:	4770      	bx	lr

0800487c <DebugMon_Handler>:
 800487c:	b480      	push	{r7}
 800487e:	af00      	add	r7, sp, #0
 8004880:	bf00      	nop
 8004882:	46bd      	mov	sp, r7
 8004884:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004888:	4770      	bx	lr

0800488a <PendSV_Handler>:
 800488a:	b480      	push	{r7}
 800488c:	af00      	add	r7, sp, #0
 800488e:	bf00      	nop
 8004890:	46bd      	mov	sp, r7
 8004892:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004896:	4770      	bx	lr

08004898 <SysTick_Handler>:
 8004898:	b580      	push	{r7, lr}
 800489a:	af00      	add	r7, sp, #0
 800489c:	f000 f904 	bl	8004aa8 <HAL_IncTick>
 80048a0:	bf00      	nop
 80048a2:	bd80      	pop	{r7, pc}

080048a4 <DMA1_Stream0_IRQHandler>:
 80048a4:	b580      	push	{r7, lr}
 80048a6:	af00      	add	r7, sp, #0
 80048a8:	4802      	ldr	r0, [pc, #8]	; (80048b4 <DMA1_Stream0_IRQHandler+0x10>)
 80048aa:	f000 fbc7 	bl	800503c <HAL_DMA_IRQHandler>
 80048ae:	bf00      	nop
 80048b0:	bd80      	pop	{r7, pc}
 80048b2:	bf00      	nop
 80048b4:	20000270 	.word	0x20000270

080048b8 <DMA1_Stream5_IRQHandler>:
 80048b8:	b580      	push	{r7, lr}
 80048ba:	af00      	add	r7, sp, #0
 80048bc:	4802      	ldr	r0, [pc, #8]	; (80048c8 <DMA1_Stream5_IRQHandler+0x10>)
 80048be:	f000 fbbd 	bl	800503c <HAL_DMA_IRQHandler>
 80048c2:	bf00      	nop
 80048c4:	bd80      	pop	{r7, pc}
 80048c6:	bf00      	nop
 80048c8:	20000464 	.word	0x20000464

080048cc <DMA1_Stream6_IRQHandler>:
 80048cc:	b580      	push	{r7, lr}
 80048ce:	af00      	add	r7, sp, #0
 80048d0:	4802      	ldr	r0, [pc, #8]	; (80048dc <DMA1_Stream6_IRQHandler+0x10>)
 80048d2:	f000 fbb3 	bl	800503c <HAL_DMA_IRQHandler>
 80048d6:	bf00      	nop
 80048d8:	bd80      	pop	{r7, pc}
 80048da:	bf00      	nop
 80048dc:	20000404 	.word	0x20000404

080048e0 <EXTI9_5_IRQHandler>:
 80048e0:	b580      	push	{r7, lr}
 80048e2:	af00      	add	r7, sp, #0
 80048e4:	f44f 7080 	mov.w	r0, #256	; 0x100
 80048e8:	f000 ffd6 	bl	8005898 <HAL_GPIO_EXTI_IRQHandler>
 80048ec:	bf00      	nop
 80048ee:	bd80      	pop	{r7, pc}

080048f0 <TIM1_TRG_COM_TIM11_IRQHandler>:
 80048f0:	b580      	push	{r7, lr}
 80048f2:	af00      	add	r7, sp, #0
 80048f4:	4802      	ldr	r0, [pc, #8]	; (8004900 <TIM1_TRG_COM_TIM11_IRQHandler+0x10>)
 80048f6:	f005 f815 	bl	8009924 <HAL_TIM_IRQHandler>
 80048fa:	bf00      	nop
 80048fc:	bd80      	pop	{r7, pc}
 80048fe:	bf00      	nop
 8004900:	20000378 	.word	0x20000378

08004904 <TIM2_IRQHandler>:
 8004904:	b580      	push	{r7, lr}
 8004906:	af00      	add	r7, sp, #0
 8004908:	4802      	ldr	r0, [pc, #8]	; (8004914 <TIM2_IRQHandler+0x10>)
 800490a:	f005 f80b 	bl	8009924 <HAL_TIM_IRQHandler>
 800490e:	bf00      	nop
 8004910:	bd80      	pop	{r7, pc}
 8004912:	bf00      	nop
 8004914:	20000330 	.word	0x20000330

08004918 <I2C1_EV_IRQHandler>:
 8004918:	b580      	push	{r7, lr}
 800491a:	af00      	add	r7, sp, #0
 800491c:	4802      	ldr	r0, [pc, #8]	; (8004928 <I2C1_EV_IRQHandler+0x10>)
 800491e:	f001 fc3b 	bl	8006198 <HAL_I2C_EV_IRQHandler>
 8004922:	bf00      	nop
 8004924:	bd80      	pop	{r7, pc}
 8004926:	bf00      	nop
 8004928:	200001c4 	.word	0x200001c4

0800492c <I2C1_ER_IRQHandler>:
 800492c:	b580      	push	{r7, lr}
 800492e:	af00      	add	r7, sp, #0
 8004930:	4802      	ldr	r0, [pc, #8]	; (800493c <I2C1_ER_IRQHandler+0x10>)
 8004932:	f001 fda2 	bl	800647a <HAL_I2C_ER_IRQHandler>
 8004936:	bf00      	nop
 8004938:	bd80      	pop	{r7, pc}
 800493a:	bf00      	nop
 800493c:	200001c4 	.word	0x200001c4

08004940 <USART2_IRQHandler>:
 8004940:	b580      	push	{r7, lr}
 8004942:	af00      	add	r7, sp, #0
 8004944:	4802      	ldr	r0, [pc, #8]	; (8004950 <USART2_IRQHandler+0x10>)
 8004946:	f005 ff71 	bl	800a82c <HAL_UART_IRQHandler>
 800494a:	bf00      	nop
 800494c:	bd80      	pop	{r7, pc}
 800494e:	bf00      	nop
 8004950:	200003c0 	.word	0x200003c0

08004954 <EXTI15_10_IRQHandler>:
 8004954:	b580      	push	{r7, lr}
 8004956:	af00      	add	r7, sp, #0
 8004958:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 800495c:	f000 ff9c 	bl	8005898 <HAL_GPIO_EXTI_IRQHandler>
 8004960:	bf00      	nop
 8004962:	bd80      	pop	{r7, pc}

08004964 <DMA1_Stream7_IRQHandler>:
 8004964:	b580      	push	{r7, lr}
 8004966:	af00      	add	r7, sp, #0
 8004968:	4802      	ldr	r0, [pc, #8]	; (8004974 <DMA1_Stream7_IRQHandler+0x10>)
 800496a:	f000 fb67 	bl	800503c <HAL_DMA_IRQHandler>
 800496e:	bf00      	nop
 8004970:	bd80      	pop	{r7, pc}
 8004972:	bf00      	nop
 8004974:	200002d0 	.word	0x200002d0

08004978 <SPI3_IRQHandler>:
 8004978:	b580      	push	{r7, lr}
 800497a:	af00      	add	r7, sp, #0
 800497c:	4802      	ldr	r0, [pc, #8]	; (8004988 <SPI3_IRQHandler+0x10>)
 800497e:	f004 fa77 	bl	8008e70 <HAL_SPI_IRQHandler>
 8004982:	bf00      	nop
 8004984:	bd80      	pop	{r7, pc}
 8004986:	bf00      	nop
 8004988:	20000218 	.word	0x20000218

0800498c <SystemInit>:
 800498c:	b480      	push	{r7}
 800498e:	af00      	add	r7, sp, #0
 8004990:	4b06      	ldr	r3, [pc, #24]	; (80049ac <SystemInit+0x20>)
 8004992:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004996:	4a05      	ldr	r2, [pc, #20]	; (80049ac <SystemInit+0x20>)
 8004998:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800499c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80049a0:	bf00      	nop
 80049a2:	46bd      	mov	sp, r7
 80049a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049a8:	4770      	bx	lr
 80049aa:	bf00      	nop
 80049ac:	e000ed00 	.word	0xe000ed00

080049b0 <Reset_Handler>:
 80049b0:	f8df d034 	ldr.w	sp, [pc, #52]	; 80049e8 <LoopFillZerobss+0x12>
 80049b4:	480d      	ldr	r0, [pc, #52]	; (80049ec <LoopFillZerobss+0x16>)
 80049b6:	490e      	ldr	r1, [pc, #56]	; (80049f0 <LoopFillZerobss+0x1a>)
 80049b8:	4a0e      	ldr	r2, [pc, #56]	; (80049f4 <LoopFillZerobss+0x1e>)
 80049ba:	2300      	movs	r3, #0
 80049bc:	e002      	b.n	80049c4 <LoopCopyDataInit>

080049be <CopyDataInit>:
 80049be:	58d4      	ldr	r4, [r2, r3]
 80049c0:	50c4      	str	r4, [r0, r3]
 80049c2:	3304      	adds	r3, #4

080049c4 <LoopCopyDataInit>:
 80049c4:	18c4      	adds	r4, r0, r3
 80049c6:	428c      	cmp	r4, r1
 80049c8:	d3f9      	bcc.n	80049be <CopyDataInit>
 80049ca:	4a0b      	ldr	r2, [pc, #44]	; (80049f8 <LoopFillZerobss+0x22>)
 80049cc:	4c0b      	ldr	r4, [pc, #44]	; (80049fc <LoopFillZerobss+0x26>)
 80049ce:	2300      	movs	r3, #0
 80049d0:	e001      	b.n	80049d6 <LoopFillZerobss>

080049d2 <FillZerobss>:
 80049d2:	6013      	str	r3, [r2, #0]
 80049d4:	3204      	adds	r2, #4

080049d6 <LoopFillZerobss>:
 80049d6:	42a2      	cmp	r2, r4
 80049d8:	d3fb      	bcc.n	80049d2 <FillZerobss>
 80049da:	f7ff ffd7 	bl	800498c <SystemInit>
 80049de:	f007 f815 	bl	800ba0c <__libc_init_array>
 80049e2:	f7fc fa59 	bl	8000e98 <main>
 80049e6:	4770      	bx	lr
 80049e8:	20020000 	.word	0x20020000
 80049ec:	20000000 	.word	0x20000000
 80049f0:	200001a4 	.word	0x200001a4
 80049f4:	0800bc68 	.word	0x0800bc68
 80049f8:	200001a8 	.word	0x200001a8
 80049fc:	20000818 	.word	0x20000818

08004a00 <ADC_IRQHandler>:
 8004a00:	e7fe      	b.n	8004a00 <ADC_IRQHandler>
	...

08004a04 <HAL_Init>:
 8004a04:	b580      	push	{r7, lr}
 8004a06:	af00      	add	r7, sp, #0
 8004a08:	4b0e      	ldr	r3, [pc, #56]	; (8004a44 <HAL_Init+0x40>)
 8004a0a:	681b      	ldr	r3, [r3, #0]
 8004a0c:	4a0d      	ldr	r2, [pc, #52]	; (8004a44 <HAL_Init+0x40>)
 8004a0e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004a12:	6013      	str	r3, [r2, #0]
 8004a14:	4b0b      	ldr	r3, [pc, #44]	; (8004a44 <HAL_Init+0x40>)
 8004a16:	681b      	ldr	r3, [r3, #0]
 8004a18:	4a0a      	ldr	r2, [pc, #40]	; (8004a44 <HAL_Init+0x40>)
 8004a1a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8004a1e:	6013      	str	r3, [r2, #0]
 8004a20:	4b08      	ldr	r3, [pc, #32]	; (8004a44 <HAL_Init+0x40>)
 8004a22:	681b      	ldr	r3, [r3, #0]
 8004a24:	4a07      	ldr	r2, [pc, #28]	; (8004a44 <HAL_Init+0x40>)
 8004a26:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004a2a:	6013      	str	r3, [r2, #0]
 8004a2c:	2003      	movs	r0, #3
 8004a2e:	f000 f92b 	bl	8004c88 <HAL_NVIC_SetPriorityGrouping>
 8004a32:	2000      	movs	r0, #0
 8004a34:	f000 f808 	bl	8004a48 <HAL_InitTick>
 8004a38:	f7ff fca4 	bl	8004384 <HAL_MspInit>
 8004a3c:	2300      	movs	r3, #0
 8004a3e:	4618      	mov	r0, r3
 8004a40:	bd80      	pop	{r7, pc}
 8004a42:	bf00      	nop
 8004a44:	40023c00 	.word	0x40023c00

08004a48 <HAL_InitTick>:
 8004a48:	b580      	push	{r7, lr}
 8004a4a:	b082      	sub	sp, #8
 8004a4c:	af00      	add	r7, sp, #0
 8004a4e:	6078      	str	r0, [r7, #4]
 8004a50:	4b12      	ldr	r3, [pc, #72]	; (8004a9c <HAL_InitTick+0x54>)
 8004a52:	681a      	ldr	r2, [r3, #0]
 8004a54:	4b12      	ldr	r3, [pc, #72]	; (8004aa0 <HAL_InitTick+0x58>)
 8004a56:	781b      	ldrb	r3, [r3, #0]
 8004a58:	4619      	mov	r1, r3
 8004a5a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004a5e:	fbb3 f3f1 	udiv	r3, r3, r1
 8004a62:	fbb2 f3f3 	udiv	r3, r2, r3
 8004a66:	4618      	mov	r0, r3
 8004a68:	f000 f943 	bl	8004cf2 <HAL_SYSTICK_Config>
 8004a6c:	4603      	mov	r3, r0
 8004a6e:	2b00      	cmp	r3, #0
 8004a70:	d001      	beq.n	8004a76 <HAL_InitTick+0x2e>
 8004a72:	2301      	movs	r3, #1
 8004a74:	e00e      	b.n	8004a94 <HAL_InitTick+0x4c>
 8004a76:	687b      	ldr	r3, [r7, #4]
 8004a78:	2b0f      	cmp	r3, #15
 8004a7a:	d80a      	bhi.n	8004a92 <HAL_InitTick+0x4a>
 8004a7c:	2200      	movs	r2, #0
 8004a7e:	6879      	ldr	r1, [r7, #4]
 8004a80:	f04f 30ff 	mov.w	r0, #4294967295
 8004a84:	f000 f90b 	bl	8004c9e <HAL_NVIC_SetPriority>
 8004a88:	4a06      	ldr	r2, [pc, #24]	; (8004aa4 <HAL_InitTick+0x5c>)
 8004a8a:	687b      	ldr	r3, [r7, #4]
 8004a8c:	6013      	str	r3, [r2, #0]
 8004a8e:	2300      	movs	r3, #0
 8004a90:	e000      	b.n	8004a94 <HAL_InitTick+0x4c>
 8004a92:	2301      	movs	r3, #1
 8004a94:	4618      	mov	r0, r3
 8004a96:	3708      	adds	r7, #8
 8004a98:	46bd      	mov	sp, r7
 8004a9a:	bd80      	pop	{r7, pc}
 8004a9c:	20000134 	.word	0x20000134
 8004aa0:	2000013c 	.word	0x2000013c
 8004aa4:	20000138 	.word	0x20000138

08004aa8 <HAL_IncTick>:
 8004aa8:	b480      	push	{r7}
 8004aaa:	af00      	add	r7, sp, #0
 8004aac:	4b06      	ldr	r3, [pc, #24]	; (8004ac8 <HAL_IncTick+0x20>)
 8004aae:	781b      	ldrb	r3, [r3, #0]
 8004ab0:	461a      	mov	r2, r3
 8004ab2:	4b06      	ldr	r3, [pc, #24]	; (8004acc <HAL_IncTick+0x24>)
 8004ab4:	681b      	ldr	r3, [r3, #0]
 8004ab6:	4413      	add	r3, r2
 8004ab8:	4a04      	ldr	r2, [pc, #16]	; (8004acc <HAL_IncTick+0x24>)
 8004aba:	6013      	str	r3, [r2, #0]
 8004abc:	bf00      	nop
 8004abe:	46bd      	mov	sp, r7
 8004ac0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ac4:	4770      	bx	lr
 8004ac6:	bf00      	nop
 8004ac8:	2000013c 	.word	0x2000013c
 8004acc:	20000814 	.word	0x20000814

08004ad0 <HAL_GetTick>:
 8004ad0:	b480      	push	{r7}
 8004ad2:	af00      	add	r7, sp, #0
 8004ad4:	4b03      	ldr	r3, [pc, #12]	; (8004ae4 <HAL_GetTick+0x14>)
 8004ad6:	681b      	ldr	r3, [r3, #0]
 8004ad8:	4618      	mov	r0, r3
 8004ada:	46bd      	mov	sp, r7
 8004adc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ae0:	4770      	bx	lr
 8004ae2:	bf00      	nop
 8004ae4:	20000814 	.word	0x20000814

08004ae8 <__NVIC_SetPriorityGrouping>:
 8004ae8:	b480      	push	{r7}
 8004aea:	b085      	sub	sp, #20
 8004aec:	af00      	add	r7, sp, #0
 8004aee:	6078      	str	r0, [r7, #4]
 8004af0:	687b      	ldr	r3, [r7, #4]
 8004af2:	f003 0307 	and.w	r3, r3, #7
 8004af6:	60fb      	str	r3, [r7, #12]
 8004af8:	4b0c      	ldr	r3, [pc, #48]	; (8004b2c <__NVIC_SetPriorityGrouping+0x44>)
 8004afa:	68db      	ldr	r3, [r3, #12]
 8004afc:	60bb      	str	r3, [r7, #8]
 8004afe:	68ba      	ldr	r2, [r7, #8]
 8004b00:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8004b04:	4013      	ands	r3, r2
 8004b06:	60bb      	str	r3, [r7, #8]
 8004b08:	68fb      	ldr	r3, [r7, #12]
 8004b0a:	021a      	lsls	r2, r3, #8
 8004b0c:	68bb      	ldr	r3, [r7, #8]
 8004b0e:	4313      	orrs	r3, r2
 8004b10:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004b14:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004b18:	60bb      	str	r3, [r7, #8]
 8004b1a:	4a04      	ldr	r2, [pc, #16]	; (8004b2c <__NVIC_SetPriorityGrouping+0x44>)
 8004b1c:	68bb      	ldr	r3, [r7, #8]
 8004b1e:	60d3      	str	r3, [r2, #12]
 8004b20:	bf00      	nop
 8004b22:	3714      	adds	r7, #20
 8004b24:	46bd      	mov	sp, r7
 8004b26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b2a:	4770      	bx	lr
 8004b2c:	e000ed00 	.word	0xe000ed00

08004b30 <__NVIC_GetPriorityGrouping>:
 8004b30:	b480      	push	{r7}
 8004b32:	af00      	add	r7, sp, #0
 8004b34:	4b04      	ldr	r3, [pc, #16]	; (8004b48 <__NVIC_GetPriorityGrouping+0x18>)
 8004b36:	68db      	ldr	r3, [r3, #12]
 8004b38:	0a1b      	lsrs	r3, r3, #8
 8004b3a:	f003 0307 	and.w	r3, r3, #7
 8004b3e:	4618      	mov	r0, r3
 8004b40:	46bd      	mov	sp, r7
 8004b42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b46:	4770      	bx	lr
 8004b48:	e000ed00 	.word	0xe000ed00

08004b4c <__NVIC_EnableIRQ>:
 8004b4c:	b480      	push	{r7}
 8004b4e:	b083      	sub	sp, #12
 8004b50:	af00      	add	r7, sp, #0
 8004b52:	4603      	mov	r3, r0
 8004b54:	71fb      	strb	r3, [r7, #7]
 8004b56:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004b5a:	2b00      	cmp	r3, #0
 8004b5c:	db0b      	blt.n	8004b76 <__NVIC_EnableIRQ+0x2a>
 8004b5e:	79fb      	ldrb	r3, [r7, #7]
 8004b60:	f003 021f 	and.w	r2, r3, #31
 8004b64:	4907      	ldr	r1, [pc, #28]	; (8004b84 <__NVIC_EnableIRQ+0x38>)
 8004b66:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004b6a:	095b      	lsrs	r3, r3, #5
 8004b6c:	2001      	movs	r0, #1
 8004b6e:	fa00 f202 	lsl.w	r2, r0, r2
 8004b72:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004b76:	bf00      	nop
 8004b78:	370c      	adds	r7, #12
 8004b7a:	46bd      	mov	sp, r7
 8004b7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b80:	4770      	bx	lr
 8004b82:	bf00      	nop
 8004b84:	e000e100 	.word	0xe000e100

08004b88 <__NVIC_SetPriority>:
 8004b88:	b480      	push	{r7}
 8004b8a:	b083      	sub	sp, #12
 8004b8c:	af00      	add	r7, sp, #0
 8004b8e:	4603      	mov	r3, r0
 8004b90:	6039      	str	r1, [r7, #0]
 8004b92:	71fb      	strb	r3, [r7, #7]
 8004b94:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004b98:	2b00      	cmp	r3, #0
 8004b9a:	db0a      	blt.n	8004bb2 <__NVIC_SetPriority+0x2a>
 8004b9c:	683b      	ldr	r3, [r7, #0]
 8004b9e:	b2da      	uxtb	r2, r3
 8004ba0:	490c      	ldr	r1, [pc, #48]	; (8004bd4 <__NVIC_SetPriority+0x4c>)
 8004ba2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004ba6:	0112      	lsls	r2, r2, #4
 8004ba8:	b2d2      	uxtb	r2, r2
 8004baa:	440b      	add	r3, r1
 8004bac:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8004bb0:	e00a      	b.n	8004bc8 <__NVIC_SetPriority+0x40>
 8004bb2:	683b      	ldr	r3, [r7, #0]
 8004bb4:	b2da      	uxtb	r2, r3
 8004bb6:	4908      	ldr	r1, [pc, #32]	; (8004bd8 <__NVIC_SetPriority+0x50>)
 8004bb8:	79fb      	ldrb	r3, [r7, #7]
 8004bba:	f003 030f 	and.w	r3, r3, #15
 8004bbe:	3b04      	subs	r3, #4
 8004bc0:	0112      	lsls	r2, r2, #4
 8004bc2:	b2d2      	uxtb	r2, r2
 8004bc4:	440b      	add	r3, r1
 8004bc6:	761a      	strb	r2, [r3, #24]
 8004bc8:	bf00      	nop
 8004bca:	370c      	adds	r7, #12
 8004bcc:	46bd      	mov	sp, r7
 8004bce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bd2:	4770      	bx	lr
 8004bd4:	e000e100 	.word	0xe000e100
 8004bd8:	e000ed00 	.word	0xe000ed00

08004bdc <NVIC_EncodePriority>:
 8004bdc:	b480      	push	{r7}
 8004bde:	b089      	sub	sp, #36	; 0x24
 8004be0:	af00      	add	r7, sp, #0
 8004be2:	60f8      	str	r0, [r7, #12]
 8004be4:	60b9      	str	r1, [r7, #8]
 8004be6:	607a      	str	r2, [r7, #4]
 8004be8:	68fb      	ldr	r3, [r7, #12]
 8004bea:	f003 0307 	and.w	r3, r3, #7
 8004bee:	61fb      	str	r3, [r7, #28]
 8004bf0:	69fb      	ldr	r3, [r7, #28]
 8004bf2:	f1c3 0307 	rsb	r3, r3, #7
 8004bf6:	2b04      	cmp	r3, #4
 8004bf8:	bf28      	it	cs
 8004bfa:	2304      	movcs	r3, #4
 8004bfc:	61bb      	str	r3, [r7, #24]
 8004bfe:	69fb      	ldr	r3, [r7, #28]
 8004c00:	3304      	adds	r3, #4
 8004c02:	2b06      	cmp	r3, #6
 8004c04:	d902      	bls.n	8004c0c <NVIC_EncodePriority+0x30>
 8004c06:	69fb      	ldr	r3, [r7, #28]
 8004c08:	3b03      	subs	r3, #3
 8004c0a:	e000      	b.n	8004c0e <NVIC_EncodePriority+0x32>
 8004c0c:	2300      	movs	r3, #0
 8004c0e:	617b      	str	r3, [r7, #20]
 8004c10:	f04f 32ff 	mov.w	r2, #4294967295
 8004c14:	69bb      	ldr	r3, [r7, #24]
 8004c16:	fa02 f303 	lsl.w	r3, r2, r3
 8004c1a:	43da      	mvns	r2, r3
 8004c1c:	68bb      	ldr	r3, [r7, #8]
 8004c1e:	401a      	ands	r2, r3
 8004c20:	697b      	ldr	r3, [r7, #20]
 8004c22:	409a      	lsls	r2, r3
 8004c24:	f04f 31ff 	mov.w	r1, #4294967295
 8004c28:	697b      	ldr	r3, [r7, #20]
 8004c2a:	fa01 f303 	lsl.w	r3, r1, r3
 8004c2e:	43d9      	mvns	r1, r3
 8004c30:	687b      	ldr	r3, [r7, #4]
 8004c32:	400b      	ands	r3, r1
 8004c34:	4313      	orrs	r3, r2
 8004c36:	4618      	mov	r0, r3
 8004c38:	3724      	adds	r7, #36	; 0x24
 8004c3a:	46bd      	mov	sp, r7
 8004c3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c40:	4770      	bx	lr
	...

08004c44 <SysTick_Config>:
 8004c44:	b580      	push	{r7, lr}
 8004c46:	b082      	sub	sp, #8
 8004c48:	af00      	add	r7, sp, #0
 8004c4a:	6078      	str	r0, [r7, #4]
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	3b01      	subs	r3, #1
 8004c50:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004c54:	d301      	bcc.n	8004c5a <SysTick_Config+0x16>
 8004c56:	2301      	movs	r3, #1
 8004c58:	e00f      	b.n	8004c7a <SysTick_Config+0x36>
 8004c5a:	4a0a      	ldr	r2, [pc, #40]	; (8004c84 <SysTick_Config+0x40>)
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	3b01      	subs	r3, #1
 8004c60:	6053      	str	r3, [r2, #4]
 8004c62:	210f      	movs	r1, #15
 8004c64:	f04f 30ff 	mov.w	r0, #4294967295
 8004c68:	f7ff ff8e 	bl	8004b88 <__NVIC_SetPriority>
 8004c6c:	4b05      	ldr	r3, [pc, #20]	; (8004c84 <SysTick_Config+0x40>)
 8004c6e:	2200      	movs	r2, #0
 8004c70:	609a      	str	r2, [r3, #8]
 8004c72:	4b04      	ldr	r3, [pc, #16]	; (8004c84 <SysTick_Config+0x40>)
 8004c74:	2207      	movs	r2, #7
 8004c76:	601a      	str	r2, [r3, #0]
 8004c78:	2300      	movs	r3, #0
 8004c7a:	4618      	mov	r0, r3
 8004c7c:	3708      	adds	r7, #8
 8004c7e:	46bd      	mov	sp, r7
 8004c80:	bd80      	pop	{r7, pc}
 8004c82:	bf00      	nop
 8004c84:	e000e010 	.word	0xe000e010

08004c88 <HAL_NVIC_SetPriorityGrouping>:
 8004c88:	b580      	push	{r7, lr}
 8004c8a:	b082      	sub	sp, #8
 8004c8c:	af00      	add	r7, sp, #0
 8004c8e:	6078      	str	r0, [r7, #4]
 8004c90:	6878      	ldr	r0, [r7, #4]
 8004c92:	f7ff ff29 	bl	8004ae8 <__NVIC_SetPriorityGrouping>
 8004c96:	bf00      	nop
 8004c98:	3708      	adds	r7, #8
 8004c9a:	46bd      	mov	sp, r7
 8004c9c:	bd80      	pop	{r7, pc}

08004c9e <HAL_NVIC_SetPriority>:
 8004c9e:	b580      	push	{r7, lr}
 8004ca0:	b086      	sub	sp, #24
 8004ca2:	af00      	add	r7, sp, #0
 8004ca4:	4603      	mov	r3, r0
 8004ca6:	60b9      	str	r1, [r7, #8]
 8004ca8:	607a      	str	r2, [r7, #4]
 8004caa:	73fb      	strb	r3, [r7, #15]
 8004cac:	2300      	movs	r3, #0
 8004cae:	617b      	str	r3, [r7, #20]
 8004cb0:	f7ff ff3e 	bl	8004b30 <__NVIC_GetPriorityGrouping>
 8004cb4:	6178      	str	r0, [r7, #20]
 8004cb6:	687a      	ldr	r2, [r7, #4]
 8004cb8:	68b9      	ldr	r1, [r7, #8]
 8004cba:	6978      	ldr	r0, [r7, #20]
 8004cbc:	f7ff ff8e 	bl	8004bdc <NVIC_EncodePriority>
 8004cc0:	4602      	mov	r2, r0
 8004cc2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004cc6:	4611      	mov	r1, r2
 8004cc8:	4618      	mov	r0, r3
 8004cca:	f7ff ff5d 	bl	8004b88 <__NVIC_SetPriority>
 8004cce:	bf00      	nop
 8004cd0:	3718      	adds	r7, #24
 8004cd2:	46bd      	mov	sp, r7
 8004cd4:	bd80      	pop	{r7, pc}

08004cd6 <HAL_NVIC_EnableIRQ>:
 8004cd6:	b580      	push	{r7, lr}
 8004cd8:	b082      	sub	sp, #8
 8004cda:	af00      	add	r7, sp, #0
 8004cdc:	4603      	mov	r3, r0
 8004cde:	71fb      	strb	r3, [r7, #7]
 8004ce0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004ce4:	4618      	mov	r0, r3
 8004ce6:	f7ff ff31 	bl	8004b4c <__NVIC_EnableIRQ>
 8004cea:	bf00      	nop
 8004cec:	3708      	adds	r7, #8
 8004cee:	46bd      	mov	sp, r7
 8004cf0:	bd80      	pop	{r7, pc}

08004cf2 <HAL_SYSTICK_Config>:
 8004cf2:	b580      	push	{r7, lr}
 8004cf4:	b082      	sub	sp, #8
 8004cf6:	af00      	add	r7, sp, #0
 8004cf8:	6078      	str	r0, [r7, #4]
 8004cfa:	6878      	ldr	r0, [r7, #4]
 8004cfc:	f7ff ffa2 	bl	8004c44 <SysTick_Config>
 8004d00:	4603      	mov	r3, r0
 8004d02:	4618      	mov	r0, r3
 8004d04:	3708      	adds	r7, #8
 8004d06:	46bd      	mov	sp, r7
 8004d08:	bd80      	pop	{r7, pc}
	...

08004d0c <HAL_DMA_Init>:
 8004d0c:	b580      	push	{r7, lr}
 8004d0e:	b086      	sub	sp, #24
 8004d10:	af00      	add	r7, sp, #0
 8004d12:	6078      	str	r0, [r7, #4]
 8004d14:	2300      	movs	r3, #0
 8004d16:	617b      	str	r3, [r7, #20]
 8004d18:	f7ff feda 	bl	8004ad0 <HAL_GetTick>
 8004d1c:	6138      	str	r0, [r7, #16]
 8004d1e:	687b      	ldr	r3, [r7, #4]
 8004d20:	2b00      	cmp	r3, #0
 8004d22:	d101      	bne.n	8004d28 <HAL_DMA_Init+0x1c>
 8004d24:	2301      	movs	r3, #1
 8004d26:	e099      	b.n	8004e5c <HAL_DMA_Init+0x150>
 8004d28:	687b      	ldr	r3, [r7, #4]
 8004d2a:	2202      	movs	r2, #2
 8004d2c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004d30:	687b      	ldr	r3, [r7, #4]
 8004d32:	2200      	movs	r2, #0
 8004d34:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004d38:	687b      	ldr	r3, [r7, #4]
 8004d3a:	681b      	ldr	r3, [r3, #0]
 8004d3c:	681a      	ldr	r2, [r3, #0]
 8004d3e:	687b      	ldr	r3, [r7, #4]
 8004d40:	681b      	ldr	r3, [r3, #0]
 8004d42:	f022 0201 	bic.w	r2, r2, #1
 8004d46:	601a      	str	r2, [r3, #0]
 8004d48:	e00f      	b.n	8004d6a <HAL_DMA_Init+0x5e>
 8004d4a:	f7ff fec1 	bl	8004ad0 <HAL_GetTick>
 8004d4e:	4602      	mov	r2, r0
 8004d50:	693b      	ldr	r3, [r7, #16]
 8004d52:	1ad3      	subs	r3, r2, r3
 8004d54:	2b05      	cmp	r3, #5
 8004d56:	d908      	bls.n	8004d6a <HAL_DMA_Init+0x5e>
 8004d58:	687b      	ldr	r3, [r7, #4]
 8004d5a:	2220      	movs	r2, #32
 8004d5c:	655a      	str	r2, [r3, #84]	; 0x54
 8004d5e:	687b      	ldr	r3, [r7, #4]
 8004d60:	2203      	movs	r2, #3
 8004d62:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004d66:	2303      	movs	r3, #3
 8004d68:	e078      	b.n	8004e5c <HAL_DMA_Init+0x150>
 8004d6a:	687b      	ldr	r3, [r7, #4]
 8004d6c:	681b      	ldr	r3, [r3, #0]
 8004d6e:	681b      	ldr	r3, [r3, #0]
 8004d70:	f003 0301 	and.w	r3, r3, #1
 8004d74:	2b00      	cmp	r3, #0
 8004d76:	d1e8      	bne.n	8004d4a <HAL_DMA_Init+0x3e>
 8004d78:	687b      	ldr	r3, [r7, #4]
 8004d7a:	681b      	ldr	r3, [r3, #0]
 8004d7c:	681b      	ldr	r3, [r3, #0]
 8004d7e:	617b      	str	r3, [r7, #20]
 8004d80:	697a      	ldr	r2, [r7, #20]
 8004d82:	4b38      	ldr	r3, [pc, #224]	; (8004e64 <HAL_DMA_Init+0x158>)
 8004d84:	4013      	ands	r3, r2
 8004d86:	617b      	str	r3, [r7, #20]
 8004d88:	687b      	ldr	r3, [r7, #4]
 8004d8a:	685a      	ldr	r2, [r3, #4]
 8004d8c:	687b      	ldr	r3, [r7, #4]
 8004d8e:	689b      	ldr	r3, [r3, #8]
 8004d90:	431a      	orrs	r2, r3
 8004d92:	687b      	ldr	r3, [r7, #4]
 8004d94:	68db      	ldr	r3, [r3, #12]
 8004d96:	431a      	orrs	r2, r3
 8004d98:	687b      	ldr	r3, [r7, #4]
 8004d9a:	691b      	ldr	r3, [r3, #16]
 8004d9c:	431a      	orrs	r2, r3
 8004d9e:	687b      	ldr	r3, [r7, #4]
 8004da0:	695b      	ldr	r3, [r3, #20]
 8004da2:	431a      	orrs	r2, r3
 8004da4:	687b      	ldr	r3, [r7, #4]
 8004da6:	699b      	ldr	r3, [r3, #24]
 8004da8:	431a      	orrs	r2, r3
 8004daa:	687b      	ldr	r3, [r7, #4]
 8004dac:	69db      	ldr	r3, [r3, #28]
 8004dae:	431a      	orrs	r2, r3
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	6a1b      	ldr	r3, [r3, #32]
 8004db4:	4313      	orrs	r3, r2
 8004db6:	697a      	ldr	r2, [r7, #20]
 8004db8:	4313      	orrs	r3, r2
 8004dba:	617b      	str	r3, [r7, #20]
 8004dbc:	687b      	ldr	r3, [r7, #4]
 8004dbe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dc0:	2b04      	cmp	r3, #4
 8004dc2:	d107      	bne.n	8004dd4 <HAL_DMA_Init+0xc8>
 8004dc4:	687b      	ldr	r3, [r7, #4]
 8004dc6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004dc8:	687b      	ldr	r3, [r7, #4]
 8004dca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004dcc:	4313      	orrs	r3, r2
 8004dce:	697a      	ldr	r2, [r7, #20]
 8004dd0:	4313      	orrs	r3, r2
 8004dd2:	617b      	str	r3, [r7, #20]
 8004dd4:	687b      	ldr	r3, [r7, #4]
 8004dd6:	681b      	ldr	r3, [r3, #0]
 8004dd8:	697a      	ldr	r2, [r7, #20]
 8004dda:	601a      	str	r2, [r3, #0]
 8004ddc:	687b      	ldr	r3, [r7, #4]
 8004dde:	681b      	ldr	r3, [r3, #0]
 8004de0:	695b      	ldr	r3, [r3, #20]
 8004de2:	617b      	str	r3, [r7, #20]
 8004de4:	697b      	ldr	r3, [r7, #20]
 8004de6:	f023 0307 	bic.w	r3, r3, #7
 8004dea:	617b      	str	r3, [r7, #20]
 8004dec:	687b      	ldr	r3, [r7, #4]
 8004dee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004df0:	697a      	ldr	r2, [r7, #20]
 8004df2:	4313      	orrs	r3, r2
 8004df4:	617b      	str	r3, [r7, #20]
 8004df6:	687b      	ldr	r3, [r7, #4]
 8004df8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dfa:	2b04      	cmp	r3, #4
 8004dfc:	d117      	bne.n	8004e2e <HAL_DMA_Init+0x122>
 8004dfe:	687b      	ldr	r3, [r7, #4]
 8004e00:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004e02:	697a      	ldr	r2, [r7, #20]
 8004e04:	4313      	orrs	r3, r2
 8004e06:	617b      	str	r3, [r7, #20]
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004e0c:	2b00      	cmp	r3, #0
 8004e0e:	d00e      	beq.n	8004e2e <HAL_DMA_Init+0x122>
 8004e10:	6878      	ldr	r0, [r7, #4]
 8004e12:	f000 fb0f 	bl	8005434 <DMA_CheckFifoParam>
 8004e16:	4603      	mov	r3, r0
 8004e18:	2b00      	cmp	r3, #0
 8004e1a:	d008      	beq.n	8004e2e <HAL_DMA_Init+0x122>
 8004e1c:	687b      	ldr	r3, [r7, #4]
 8004e1e:	2240      	movs	r2, #64	; 0x40
 8004e20:	655a      	str	r2, [r3, #84]	; 0x54
 8004e22:	687b      	ldr	r3, [r7, #4]
 8004e24:	2201      	movs	r2, #1
 8004e26:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004e2a:	2301      	movs	r3, #1
 8004e2c:	e016      	b.n	8004e5c <HAL_DMA_Init+0x150>
 8004e2e:	687b      	ldr	r3, [r7, #4]
 8004e30:	681b      	ldr	r3, [r3, #0]
 8004e32:	697a      	ldr	r2, [r7, #20]
 8004e34:	615a      	str	r2, [r3, #20]
 8004e36:	6878      	ldr	r0, [r7, #4]
 8004e38:	f000 fac6 	bl	80053c8 <DMA_CalcBaseAndBitshift>
 8004e3c:	4603      	mov	r3, r0
 8004e3e:	60fb      	str	r3, [r7, #12]
 8004e40:	687b      	ldr	r3, [r7, #4]
 8004e42:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004e44:	223f      	movs	r2, #63	; 0x3f
 8004e46:	409a      	lsls	r2, r3
 8004e48:	68fb      	ldr	r3, [r7, #12]
 8004e4a:	609a      	str	r2, [r3, #8]
 8004e4c:	687b      	ldr	r3, [r7, #4]
 8004e4e:	2200      	movs	r2, #0
 8004e50:	655a      	str	r2, [r3, #84]	; 0x54
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	2201      	movs	r2, #1
 8004e56:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004e5a:	2300      	movs	r3, #0
 8004e5c:	4618      	mov	r0, r3
 8004e5e:	3718      	adds	r7, #24
 8004e60:	46bd      	mov	sp, r7
 8004e62:	bd80      	pop	{r7, pc}
 8004e64:	f010803f 	.word	0xf010803f

08004e68 <HAL_DMA_Start_IT>:
 8004e68:	b580      	push	{r7, lr}
 8004e6a:	b086      	sub	sp, #24
 8004e6c:	af00      	add	r7, sp, #0
 8004e6e:	60f8      	str	r0, [r7, #12]
 8004e70:	60b9      	str	r1, [r7, #8]
 8004e72:	607a      	str	r2, [r7, #4]
 8004e74:	603b      	str	r3, [r7, #0]
 8004e76:	2300      	movs	r3, #0
 8004e78:	75fb      	strb	r3, [r7, #23]
 8004e7a:	68fb      	ldr	r3, [r7, #12]
 8004e7c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004e7e:	613b      	str	r3, [r7, #16]
 8004e80:	68fb      	ldr	r3, [r7, #12]
 8004e82:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8004e86:	2b01      	cmp	r3, #1
 8004e88:	d101      	bne.n	8004e8e <HAL_DMA_Start_IT+0x26>
 8004e8a:	2302      	movs	r3, #2
 8004e8c:	e040      	b.n	8004f10 <HAL_DMA_Start_IT+0xa8>
 8004e8e:	68fb      	ldr	r3, [r7, #12]
 8004e90:	2201      	movs	r2, #1
 8004e92:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004e96:	68fb      	ldr	r3, [r7, #12]
 8004e98:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004e9c:	b2db      	uxtb	r3, r3
 8004e9e:	2b01      	cmp	r3, #1
 8004ea0:	d12f      	bne.n	8004f02 <HAL_DMA_Start_IT+0x9a>
 8004ea2:	68fb      	ldr	r3, [r7, #12]
 8004ea4:	2202      	movs	r2, #2
 8004ea6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004eaa:	68fb      	ldr	r3, [r7, #12]
 8004eac:	2200      	movs	r2, #0
 8004eae:	655a      	str	r2, [r3, #84]	; 0x54
 8004eb0:	683b      	ldr	r3, [r7, #0]
 8004eb2:	687a      	ldr	r2, [r7, #4]
 8004eb4:	68b9      	ldr	r1, [r7, #8]
 8004eb6:	68f8      	ldr	r0, [r7, #12]
 8004eb8:	f000 fa58 	bl	800536c <DMA_SetConfig>
 8004ebc:	68fb      	ldr	r3, [r7, #12]
 8004ebe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004ec0:	223f      	movs	r2, #63	; 0x3f
 8004ec2:	409a      	lsls	r2, r3
 8004ec4:	693b      	ldr	r3, [r7, #16]
 8004ec6:	609a      	str	r2, [r3, #8]
 8004ec8:	68fb      	ldr	r3, [r7, #12]
 8004eca:	681b      	ldr	r3, [r3, #0]
 8004ecc:	681a      	ldr	r2, [r3, #0]
 8004ece:	68fb      	ldr	r3, [r7, #12]
 8004ed0:	681b      	ldr	r3, [r3, #0]
 8004ed2:	f042 0216 	orr.w	r2, r2, #22
 8004ed6:	601a      	str	r2, [r3, #0]
 8004ed8:	68fb      	ldr	r3, [r7, #12]
 8004eda:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004edc:	2b00      	cmp	r3, #0
 8004ede:	d007      	beq.n	8004ef0 <HAL_DMA_Start_IT+0x88>
 8004ee0:	68fb      	ldr	r3, [r7, #12]
 8004ee2:	681b      	ldr	r3, [r3, #0]
 8004ee4:	681a      	ldr	r2, [r3, #0]
 8004ee6:	68fb      	ldr	r3, [r7, #12]
 8004ee8:	681b      	ldr	r3, [r3, #0]
 8004eea:	f042 0208 	orr.w	r2, r2, #8
 8004eee:	601a      	str	r2, [r3, #0]
 8004ef0:	68fb      	ldr	r3, [r7, #12]
 8004ef2:	681b      	ldr	r3, [r3, #0]
 8004ef4:	681a      	ldr	r2, [r3, #0]
 8004ef6:	68fb      	ldr	r3, [r7, #12]
 8004ef8:	681b      	ldr	r3, [r3, #0]
 8004efa:	f042 0201 	orr.w	r2, r2, #1
 8004efe:	601a      	str	r2, [r3, #0]
 8004f00:	e005      	b.n	8004f0e <HAL_DMA_Start_IT+0xa6>
 8004f02:	68fb      	ldr	r3, [r7, #12]
 8004f04:	2200      	movs	r2, #0
 8004f06:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004f0a:	2302      	movs	r3, #2
 8004f0c:	75fb      	strb	r3, [r7, #23]
 8004f0e:	7dfb      	ldrb	r3, [r7, #23]
 8004f10:	4618      	mov	r0, r3
 8004f12:	3718      	adds	r7, #24
 8004f14:	46bd      	mov	sp, r7
 8004f16:	bd80      	pop	{r7, pc}

08004f18 <HAL_DMA_Abort>:
 8004f18:	b580      	push	{r7, lr}
 8004f1a:	b084      	sub	sp, #16
 8004f1c:	af00      	add	r7, sp, #0
 8004f1e:	6078      	str	r0, [r7, #4]
 8004f20:	687b      	ldr	r3, [r7, #4]
 8004f22:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004f24:	60fb      	str	r3, [r7, #12]
 8004f26:	f7ff fdd3 	bl	8004ad0 <HAL_GetTick>
 8004f2a:	60b8      	str	r0, [r7, #8]
 8004f2c:	687b      	ldr	r3, [r7, #4]
 8004f2e:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004f32:	b2db      	uxtb	r3, r3
 8004f34:	2b02      	cmp	r3, #2
 8004f36:	d008      	beq.n	8004f4a <HAL_DMA_Abort+0x32>
 8004f38:	687b      	ldr	r3, [r7, #4]
 8004f3a:	2280      	movs	r2, #128	; 0x80
 8004f3c:	655a      	str	r2, [r3, #84]	; 0x54
 8004f3e:	687b      	ldr	r3, [r7, #4]
 8004f40:	2200      	movs	r2, #0
 8004f42:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004f46:	2301      	movs	r3, #1
 8004f48:	e052      	b.n	8004ff0 <HAL_DMA_Abort+0xd8>
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	681b      	ldr	r3, [r3, #0]
 8004f4e:	681a      	ldr	r2, [r3, #0]
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	681b      	ldr	r3, [r3, #0]
 8004f54:	f022 0216 	bic.w	r2, r2, #22
 8004f58:	601a      	str	r2, [r3, #0]
 8004f5a:	687b      	ldr	r3, [r7, #4]
 8004f5c:	681b      	ldr	r3, [r3, #0]
 8004f5e:	695a      	ldr	r2, [r3, #20]
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	681b      	ldr	r3, [r3, #0]
 8004f64:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004f68:	615a      	str	r2, [r3, #20]
 8004f6a:	687b      	ldr	r3, [r7, #4]
 8004f6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f6e:	2b00      	cmp	r3, #0
 8004f70:	d103      	bne.n	8004f7a <HAL_DMA_Abort+0x62>
 8004f72:	687b      	ldr	r3, [r7, #4]
 8004f74:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004f76:	2b00      	cmp	r3, #0
 8004f78:	d007      	beq.n	8004f8a <HAL_DMA_Abort+0x72>
 8004f7a:	687b      	ldr	r3, [r7, #4]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	681a      	ldr	r2, [r3, #0]
 8004f80:	687b      	ldr	r3, [r7, #4]
 8004f82:	681b      	ldr	r3, [r3, #0]
 8004f84:	f022 0208 	bic.w	r2, r2, #8
 8004f88:	601a      	str	r2, [r3, #0]
 8004f8a:	687b      	ldr	r3, [r7, #4]
 8004f8c:	681b      	ldr	r3, [r3, #0]
 8004f8e:	681a      	ldr	r2, [r3, #0]
 8004f90:	687b      	ldr	r3, [r7, #4]
 8004f92:	681b      	ldr	r3, [r3, #0]
 8004f94:	f022 0201 	bic.w	r2, r2, #1
 8004f98:	601a      	str	r2, [r3, #0]
 8004f9a:	e013      	b.n	8004fc4 <HAL_DMA_Abort+0xac>
 8004f9c:	f7ff fd98 	bl	8004ad0 <HAL_GetTick>
 8004fa0:	4602      	mov	r2, r0
 8004fa2:	68bb      	ldr	r3, [r7, #8]
 8004fa4:	1ad3      	subs	r3, r2, r3
 8004fa6:	2b05      	cmp	r3, #5
 8004fa8:	d90c      	bls.n	8004fc4 <HAL_DMA_Abort+0xac>
 8004faa:	687b      	ldr	r3, [r7, #4]
 8004fac:	2220      	movs	r2, #32
 8004fae:	655a      	str	r2, [r3, #84]	; 0x54
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	2203      	movs	r2, #3
 8004fb4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004fb8:	687b      	ldr	r3, [r7, #4]
 8004fba:	2200      	movs	r2, #0
 8004fbc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004fc0:	2303      	movs	r3, #3
 8004fc2:	e015      	b.n	8004ff0 <HAL_DMA_Abort+0xd8>
 8004fc4:	687b      	ldr	r3, [r7, #4]
 8004fc6:	681b      	ldr	r3, [r3, #0]
 8004fc8:	681b      	ldr	r3, [r3, #0]
 8004fca:	f003 0301 	and.w	r3, r3, #1
 8004fce:	2b00      	cmp	r3, #0
 8004fd0:	d1e4      	bne.n	8004f9c <HAL_DMA_Abort+0x84>
 8004fd2:	687b      	ldr	r3, [r7, #4]
 8004fd4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004fd6:	223f      	movs	r2, #63	; 0x3f
 8004fd8:	409a      	lsls	r2, r3
 8004fda:	68fb      	ldr	r3, [r7, #12]
 8004fdc:	609a      	str	r2, [r3, #8]
 8004fde:	687b      	ldr	r3, [r7, #4]
 8004fe0:	2201      	movs	r2, #1
 8004fe2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004fe6:	687b      	ldr	r3, [r7, #4]
 8004fe8:	2200      	movs	r2, #0
 8004fea:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004fee:	2300      	movs	r3, #0
 8004ff0:	4618      	mov	r0, r3
 8004ff2:	3710      	adds	r7, #16
 8004ff4:	46bd      	mov	sp, r7
 8004ff6:	bd80      	pop	{r7, pc}

08004ff8 <HAL_DMA_Abort_IT>:
 8004ff8:	b480      	push	{r7}
 8004ffa:	b083      	sub	sp, #12
 8004ffc:	af00      	add	r7, sp, #0
 8004ffe:	6078      	str	r0, [r7, #4]
 8005000:	687b      	ldr	r3, [r7, #4]
 8005002:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8005006:	b2db      	uxtb	r3, r3
 8005008:	2b02      	cmp	r3, #2
 800500a:	d004      	beq.n	8005016 <HAL_DMA_Abort_IT+0x1e>
 800500c:	687b      	ldr	r3, [r7, #4]
 800500e:	2280      	movs	r2, #128	; 0x80
 8005010:	655a      	str	r2, [r3, #84]	; 0x54
 8005012:	2301      	movs	r3, #1
 8005014:	e00c      	b.n	8005030 <HAL_DMA_Abort_IT+0x38>
 8005016:	687b      	ldr	r3, [r7, #4]
 8005018:	2205      	movs	r2, #5
 800501a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800501e:	687b      	ldr	r3, [r7, #4]
 8005020:	681b      	ldr	r3, [r3, #0]
 8005022:	681a      	ldr	r2, [r3, #0]
 8005024:	687b      	ldr	r3, [r7, #4]
 8005026:	681b      	ldr	r3, [r3, #0]
 8005028:	f022 0201 	bic.w	r2, r2, #1
 800502c:	601a      	str	r2, [r3, #0]
 800502e:	2300      	movs	r3, #0
 8005030:	4618      	mov	r0, r3
 8005032:	370c      	adds	r7, #12
 8005034:	46bd      	mov	sp, r7
 8005036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800503a:	4770      	bx	lr

0800503c <HAL_DMA_IRQHandler>:
 800503c:	b580      	push	{r7, lr}
 800503e:	b086      	sub	sp, #24
 8005040:	af00      	add	r7, sp, #0
 8005042:	6078      	str	r0, [r7, #4]
 8005044:	2300      	movs	r3, #0
 8005046:	60bb      	str	r3, [r7, #8]
 8005048:	4b8e      	ldr	r3, [pc, #568]	; (8005284 <HAL_DMA_IRQHandler+0x248>)
 800504a:	681b      	ldr	r3, [r3, #0]
 800504c:	4a8e      	ldr	r2, [pc, #568]	; (8005288 <HAL_DMA_IRQHandler+0x24c>)
 800504e:	fba2 2303 	umull	r2, r3, r2, r3
 8005052:	0a9b      	lsrs	r3, r3, #10
 8005054:	617b      	str	r3, [r7, #20]
 8005056:	687b      	ldr	r3, [r7, #4]
 8005058:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800505a:	613b      	str	r3, [r7, #16]
 800505c:	693b      	ldr	r3, [r7, #16]
 800505e:	681b      	ldr	r3, [r3, #0]
 8005060:	60fb      	str	r3, [r7, #12]
 8005062:	687b      	ldr	r3, [r7, #4]
 8005064:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005066:	2208      	movs	r2, #8
 8005068:	409a      	lsls	r2, r3
 800506a:	68fb      	ldr	r3, [r7, #12]
 800506c:	4013      	ands	r3, r2
 800506e:	2b00      	cmp	r3, #0
 8005070:	d01a      	beq.n	80050a8 <HAL_DMA_IRQHandler+0x6c>
 8005072:	687b      	ldr	r3, [r7, #4]
 8005074:	681b      	ldr	r3, [r3, #0]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	f003 0304 	and.w	r3, r3, #4
 800507c:	2b00      	cmp	r3, #0
 800507e:	d013      	beq.n	80050a8 <HAL_DMA_IRQHandler+0x6c>
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	681b      	ldr	r3, [r3, #0]
 8005084:	681a      	ldr	r2, [r3, #0]
 8005086:	687b      	ldr	r3, [r7, #4]
 8005088:	681b      	ldr	r3, [r3, #0]
 800508a:	f022 0204 	bic.w	r2, r2, #4
 800508e:	601a      	str	r2, [r3, #0]
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005094:	2208      	movs	r2, #8
 8005096:	409a      	lsls	r2, r3
 8005098:	693b      	ldr	r3, [r7, #16]
 800509a:	609a      	str	r2, [r3, #8]
 800509c:	687b      	ldr	r3, [r7, #4]
 800509e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80050a0:	f043 0201 	orr.w	r2, r3, #1
 80050a4:	687b      	ldr	r3, [r7, #4]
 80050a6:	655a      	str	r2, [r3, #84]	; 0x54
 80050a8:	687b      	ldr	r3, [r7, #4]
 80050aa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80050ac:	2201      	movs	r2, #1
 80050ae:	409a      	lsls	r2, r3
 80050b0:	68fb      	ldr	r3, [r7, #12]
 80050b2:	4013      	ands	r3, r2
 80050b4:	2b00      	cmp	r3, #0
 80050b6:	d012      	beq.n	80050de <HAL_DMA_IRQHandler+0xa2>
 80050b8:	687b      	ldr	r3, [r7, #4]
 80050ba:	681b      	ldr	r3, [r3, #0]
 80050bc:	695b      	ldr	r3, [r3, #20]
 80050be:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80050c2:	2b00      	cmp	r3, #0
 80050c4:	d00b      	beq.n	80050de <HAL_DMA_IRQHandler+0xa2>
 80050c6:	687b      	ldr	r3, [r7, #4]
 80050c8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80050ca:	2201      	movs	r2, #1
 80050cc:	409a      	lsls	r2, r3
 80050ce:	693b      	ldr	r3, [r7, #16]
 80050d0:	609a      	str	r2, [r3, #8]
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80050d6:	f043 0202 	orr.w	r2, r3, #2
 80050da:	687b      	ldr	r3, [r7, #4]
 80050dc:	655a      	str	r2, [r3, #84]	; 0x54
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80050e2:	2204      	movs	r2, #4
 80050e4:	409a      	lsls	r2, r3
 80050e6:	68fb      	ldr	r3, [r7, #12]
 80050e8:	4013      	ands	r3, r2
 80050ea:	2b00      	cmp	r3, #0
 80050ec:	d012      	beq.n	8005114 <HAL_DMA_IRQHandler+0xd8>
 80050ee:	687b      	ldr	r3, [r7, #4]
 80050f0:	681b      	ldr	r3, [r3, #0]
 80050f2:	681b      	ldr	r3, [r3, #0]
 80050f4:	f003 0302 	and.w	r3, r3, #2
 80050f8:	2b00      	cmp	r3, #0
 80050fa:	d00b      	beq.n	8005114 <HAL_DMA_IRQHandler+0xd8>
 80050fc:	687b      	ldr	r3, [r7, #4]
 80050fe:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005100:	2204      	movs	r2, #4
 8005102:	409a      	lsls	r2, r3
 8005104:	693b      	ldr	r3, [r7, #16]
 8005106:	609a      	str	r2, [r3, #8]
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800510c:	f043 0204 	orr.w	r2, r3, #4
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	655a      	str	r2, [r3, #84]	; 0x54
 8005114:	687b      	ldr	r3, [r7, #4]
 8005116:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005118:	2210      	movs	r2, #16
 800511a:	409a      	lsls	r2, r3
 800511c:	68fb      	ldr	r3, [r7, #12]
 800511e:	4013      	ands	r3, r2
 8005120:	2b00      	cmp	r3, #0
 8005122:	d043      	beq.n	80051ac <HAL_DMA_IRQHandler+0x170>
 8005124:	687b      	ldr	r3, [r7, #4]
 8005126:	681b      	ldr	r3, [r3, #0]
 8005128:	681b      	ldr	r3, [r3, #0]
 800512a:	f003 0308 	and.w	r3, r3, #8
 800512e:	2b00      	cmp	r3, #0
 8005130:	d03c      	beq.n	80051ac <HAL_DMA_IRQHandler+0x170>
 8005132:	687b      	ldr	r3, [r7, #4]
 8005134:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005136:	2210      	movs	r2, #16
 8005138:	409a      	lsls	r2, r3
 800513a:	693b      	ldr	r3, [r7, #16]
 800513c:	609a      	str	r2, [r3, #8]
 800513e:	687b      	ldr	r3, [r7, #4]
 8005140:	681b      	ldr	r3, [r3, #0]
 8005142:	681b      	ldr	r3, [r3, #0]
 8005144:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005148:	2b00      	cmp	r3, #0
 800514a:	d018      	beq.n	800517e <HAL_DMA_IRQHandler+0x142>
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	681b      	ldr	r3, [r3, #0]
 8005150:	681b      	ldr	r3, [r3, #0]
 8005152:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8005156:	2b00      	cmp	r3, #0
 8005158:	d108      	bne.n	800516c <HAL_DMA_IRQHandler+0x130>
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800515e:	2b00      	cmp	r3, #0
 8005160:	d024      	beq.n	80051ac <HAL_DMA_IRQHandler+0x170>
 8005162:	687b      	ldr	r3, [r7, #4]
 8005164:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005166:	6878      	ldr	r0, [r7, #4]
 8005168:	4798      	blx	r3
 800516a:	e01f      	b.n	80051ac <HAL_DMA_IRQHandler+0x170>
 800516c:	687b      	ldr	r3, [r7, #4]
 800516e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005170:	2b00      	cmp	r3, #0
 8005172:	d01b      	beq.n	80051ac <HAL_DMA_IRQHandler+0x170>
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005178:	6878      	ldr	r0, [r7, #4]
 800517a:	4798      	blx	r3
 800517c:	e016      	b.n	80051ac <HAL_DMA_IRQHandler+0x170>
 800517e:	687b      	ldr	r3, [r7, #4]
 8005180:	681b      	ldr	r3, [r3, #0]
 8005182:	681b      	ldr	r3, [r3, #0]
 8005184:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005188:	2b00      	cmp	r3, #0
 800518a:	d107      	bne.n	800519c <HAL_DMA_IRQHandler+0x160>
 800518c:	687b      	ldr	r3, [r7, #4]
 800518e:	681b      	ldr	r3, [r3, #0]
 8005190:	681a      	ldr	r2, [r3, #0]
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	681b      	ldr	r3, [r3, #0]
 8005196:	f022 0208 	bic.w	r2, r2, #8
 800519a:	601a      	str	r2, [r3, #0]
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80051a0:	2b00      	cmp	r3, #0
 80051a2:	d003      	beq.n	80051ac <HAL_DMA_IRQHandler+0x170>
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80051a8:	6878      	ldr	r0, [r7, #4]
 80051aa:	4798      	blx	r3
 80051ac:	687b      	ldr	r3, [r7, #4]
 80051ae:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80051b0:	2220      	movs	r2, #32
 80051b2:	409a      	lsls	r2, r3
 80051b4:	68fb      	ldr	r3, [r7, #12]
 80051b6:	4013      	ands	r3, r2
 80051b8:	2b00      	cmp	r3, #0
 80051ba:	f000 808f 	beq.w	80052dc <HAL_DMA_IRQHandler+0x2a0>
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	681b      	ldr	r3, [r3, #0]
 80051c2:	681b      	ldr	r3, [r3, #0]
 80051c4:	f003 0310 	and.w	r3, r3, #16
 80051c8:	2b00      	cmp	r3, #0
 80051ca:	f000 8087 	beq.w	80052dc <HAL_DMA_IRQHandler+0x2a0>
 80051ce:	687b      	ldr	r3, [r7, #4]
 80051d0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80051d2:	2220      	movs	r2, #32
 80051d4:	409a      	lsls	r2, r3
 80051d6:	693b      	ldr	r3, [r7, #16]
 80051d8:	609a      	str	r2, [r3, #8]
 80051da:	687b      	ldr	r3, [r7, #4]
 80051dc:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80051e0:	b2db      	uxtb	r3, r3
 80051e2:	2b05      	cmp	r3, #5
 80051e4:	d136      	bne.n	8005254 <HAL_DMA_IRQHandler+0x218>
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	681b      	ldr	r3, [r3, #0]
 80051ea:	681a      	ldr	r2, [r3, #0]
 80051ec:	687b      	ldr	r3, [r7, #4]
 80051ee:	681b      	ldr	r3, [r3, #0]
 80051f0:	f022 0216 	bic.w	r2, r2, #22
 80051f4:	601a      	str	r2, [r3, #0]
 80051f6:	687b      	ldr	r3, [r7, #4]
 80051f8:	681b      	ldr	r3, [r3, #0]
 80051fa:	695a      	ldr	r2, [r3, #20]
 80051fc:	687b      	ldr	r3, [r7, #4]
 80051fe:	681b      	ldr	r3, [r3, #0]
 8005200:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005204:	615a      	str	r2, [r3, #20]
 8005206:	687b      	ldr	r3, [r7, #4]
 8005208:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800520a:	2b00      	cmp	r3, #0
 800520c:	d103      	bne.n	8005216 <HAL_DMA_IRQHandler+0x1da>
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005212:	2b00      	cmp	r3, #0
 8005214:	d007      	beq.n	8005226 <HAL_DMA_IRQHandler+0x1ea>
 8005216:	687b      	ldr	r3, [r7, #4]
 8005218:	681b      	ldr	r3, [r3, #0]
 800521a:	681a      	ldr	r2, [r3, #0]
 800521c:	687b      	ldr	r3, [r7, #4]
 800521e:	681b      	ldr	r3, [r3, #0]
 8005220:	f022 0208 	bic.w	r2, r2, #8
 8005224:	601a      	str	r2, [r3, #0]
 8005226:	687b      	ldr	r3, [r7, #4]
 8005228:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800522a:	223f      	movs	r2, #63	; 0x3f
 800522c:	409a      	lsls	r2, r3
 800522e:	693b      	ldr	r3, [r7, #16]
 8005230:	609a      	str	r2, [r3, #8]
 8005232:	687b      	ldr	r3, [r7, #4]
 8005234:	2201      	movs	r2, #1
 8005236:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800523a:	687b      	ldr	r3, [r7, #4]
 800523c:	2200      	movs	r2, #0
 800523e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8005242:	687b      	ldr	r3, [r7, #4]
 8005244:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005246:	2b00      	cmp	r3, #0
 8005248:	d07e      	beq.n	8005348 <HAL_DMA_IRQHandler+0x30c>
 800524a:	687b      	ldr	r3, [r7, #4]
 800524c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800524e:	6878      	ldr	r0, [r7, #4]
 8005250:	4798      	blx	r3
 8005252:	e079      	b.n	8005348 <HAL_DMA_IRQHandler+0x30c>
 8005254:	687b      	ldr	r3, [r7, #4]
 8005256:	681b      	ldr	r3, [r3, #0]
 8005258:	681b      	ldr	r3, [r3, #0]
 800525a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800525e:	2b00      	cmp	r3, #0
 8005260:	d01d      	beq.n	800529e <HAL_DMA_IRQHandler+0x262>
 8005262:	687b      	ldr	r3, [r7, #4]
 8005264:	681b      	ldr	r3, [r3, #0]
 8005266:	681b      	ldr	r3, [r3, #0]
 8005268:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800526c:	2b00      	cmp	r3, #0
 800526e:	d10d      	bne.n	800528c <HAL_DMA_IRQHandler+0x250>
 8005270:	687b      	ldr	r3, [r7, #4]
 8005272:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005274:	2b00      	cmp	r3, #0
 8005276:	d031      	beq.n	80052dc <HAL_DMA_IRQHandler+0x2a0>
 8005278:	687b      	ldr	r3, [r7, #4]
 800527a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800527c:	6878      	ldr	r0, [r7, #4]
 800527e:	4798      	blx	r3
 8005280:	e02c      	b.n	80052dc <HAL_DMA_IRQHandler+0x2a0>
 8005282:	bf00      	nop
 8005284:	20000134 	.word	0x20000134
 8005288:	1b4e81b5 	.word	0x1b4e81b5
 800528c:	687b      	ldr	r3, [r7, #4]
 800528e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005290:	2b00      	cmp	r3, #0
 8005292:	d023      	beq.n	80052dc <HAL_DMA_IRQHandler+0x2a0>
 8005294:	687b      	ldr	r3, [r7, #4]
 8005296:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005298:	6878      	ldr	r0, [r7, #4]
 800529a:	4798      	blx	r3
 800529c:	e01e      	b.n	80052dc <HAL_DMA_IRQHandler+0x2a0>
 800529e:	687b      	ldr	r3, [r7, #4]
 80052a0:	681b      	ldr	r3, [r3, #0]
 80052a2:	681b      	ldr	r3, [r3, #0]
 80052a4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80052a8:	2b00      	cmp	r3, #0
 80052aa:	d10f      	bne.n	80052cc <HAL_DMA_IRQHandler+0x290>
 80052ac:	687b      	ldr	r3, [r7, #4]
 80052ae:	681b      	ldr	r3, [r3, #0]
 80052b0:	681a      	ldr	r2, [r3, #0]
 80052b2:	687b      	ldr	r3, [r7, #4]
 80052b4:	681b      	ldr	r3, [r3, #0]
 80052b6:	f022 0210 	bic.w	r2, r2, #16
 80052ba:	601a      	str	r2, [r3, #0]
 80052bc:	687b      	ldr	r3, [r7, #4]
 80052be:	2201      	movs	r2, #1
 80052c0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80052c4:	687b      	ldr	r3, [r7, #4]
 80052c6:	2200      	movs	r2, #0
 80052c8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80052cc:	687b      	ldr	r3, [r7, #4]
 80052ce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80052d0:	2b00      	cmp	r3, #0
 80052d2:	d003      	beq.n	80052dc <HAL_DMA_IRQHandler+0x2a0>
 80052d4:	687b      	ldr	r3, [r7, #4]
 80052d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80052d8:	6878      	ldr	r0, [r7, #4]
 80052da:	4798      	blx	r3
 80052dc:	687b      	ldr	r3, [r7, #4]
 80052de:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80052e0:	2b00      	cmp	r3, #0
 80052e2:	d032      	beq.n	800534a <HAL_DMA_IRQHandler+0x30e>
 80052e4:	687b      	ldr	r3, [r7, #4]
 80052e6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80052e8:	f003 0301 	and.w	r3, r3, #1
 80052ec:	2b00      	cmp	r3, #0
 80052ee:	d022      	beq.n	8005336 <HAL_DMA_IRQHandler+0x2fa>
 80052f0:	687b      	ldr	r3, [r7, #4]
 80052f2:	2205      	movs	r2, #5
 80052f4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80052f8:	687b      	ldr	r3, [r7, #4]
 80052fa:	681b      	ldr	r3, [r3, #0]
 80052fc:	681a      	ldr	r2, [r3, #0]
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	f022 0201 	bic.w	r2, r2, #1
 8005306:	601a      	str	r2, [r3, #0]
 8005308:	68bb      	ldr	r3, [r7, #8]
 800530a:	3301      	adds	r3, #1
 800530c:	60bb      	str	r3, [r7, #8]
 800530e:	697a      	ldr	r2, [r7, #20]
 8005310:	429a      	cmp	r2, r3
 8005312:	d307      	bcc.n	8005324 <HAL_DMA_IRQHandler+0x2e8>
 8005314:	687b      	ldr	r3, [r7, #4]
 8005316:	681b      	ldr	r3, [r3, #0]
 8005318:	681b      	ldr	r3, [r3, #0]
 800531a:	f003 0301 	and.w	r3, r3, #1
 800531e:	2b00      	cmp	r3, #0
 8005320:	d1f2      	bne.n	8005308 <HAL_DMA_IRQHandler+0x2cc>
 8005322:	e000      	b.n	8005326 <HAL_DMA_IRQHandler+0x2ea>
 8005324:	bf00      	nop
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	2201      	movs	r2, #1
 800532a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800532e:	687b      	ldr	r3, [r7, #4]
 8005330:	2200      	movs	r2, #0
 8005332:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800533a:	2b00      	cmp	r3, #0
 800533c:	d005      	beq.n	800534a <HAL_DMA_IRQHandler+0x30e>
 800533e:	687b      	ldr	r3, [r7, #4]
 8005340:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005342:	6878      	ldr	r0, [r7, #4]
 8005344:	4798      	blx	r3
 8005346:	e000      	b.n	800534a <HAL_DMA_IRQHandler+0x30e>
 8005348:	bf00      	nop
 800534a:	3718      	adds	r7, #24
 800534c:	46bd      	mov	sp, r7
 800534e:	bd80      	pop	{r7, pc}

08005350 <HAL_DMA_GetState>:
 8005350:	b480      	push	{r7}
 8005352:	b083      	sub	sp, #12
 8005354:	af00      	add	r7, sp, #0
 8005356:	6078      	str	r0, [r7, #4]
 8005358:	687b      	ldr	r3, [r7, #4]
 800535a:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800535e:	b2db      	uxtb	r3, r3
 8005360:	4618      	mov	r0, r3
 8005362:	370c      	adds	r7, #12
 8005364:	46bd      	mov	sp, r7
 8005366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800536a:	4770      	bx	lr

0800536c <DMA_SetConfig>:
 800536c:	b480      	push	{r7}
 800536e:	b085      	sub	sp, #20
 8005370:	af00      	add	r7, sp, #0
 8005372:	60f8      	str	r0, [r7, #12]
 8005374:	60b9      	str	r1, [r7, #8]
 8005376:	607a      	str	r2, [r7, #4]
 8005378:	603b      	str	r3, [r7, #0]
 800537a:	68fb      	ldr	r3, [r7, #12]
 800537c:	681b      	ldr	r3, [r3, #0]
 800537e:	681a      	ldr	r2, [r3, #0]
 8005380:	68fb      	ldr	r3, [r7, #12]
 8005382:	681b      	ldr	r3, [r3, #0]
 8005384:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8005388:	601a      	str	r2, [r3, #0]
 800538a:	68fb      	ldr	r3, [r7, #12]
 800538c:	681b      	ldr	r3, [r3, #0]
 800538e:	683a      	ldr	r2, [r7, #0]
 8005390:	605a      	str	r2, [r3, #4]
 8005392:	68fb      	ldr	r3, [r7, #12]
 8005394:	689b      	ldr	r3, [r3, #8]
 8005396:	2b40      	cmp	r3, #64	; 0x40
 8005398:	d108      	bne.n	80053ac <DMA_SetConfig+0x40>
 800539a:	68fb      	ldr	r3, [r7, #12]
 800539c:	681b      	ldr	r3, [r3, #0]
 800539e:	687a      	ldr	r2, [r7, #4]
 80053a0:	609a      	str	r2, [r3, #8]
 80053a2:	68fb      	ldr	r3, [r7, #12]
 80053a4:	681b      	ldr	r3, [r3, #0]
 80053a6:	68ba      	ldr	r2, [r7, #8]
 80053a8:	60da      	str	r2, [r3, #12]
 80053aa:	e007      	b.n	80053bc <DMA_SetConfig+0x50>
 80053ac:	68fb      	ldr	r3, [r7, #12]
 80053ae:	681b      	ldr	r3, [r3, #0]
 80053b0:	68ba      	ldr	r2, [r7, #8]
 80053b2:	609a      	str	r2, [r3, #8]
 80053b4:	68fb      	ldr	r3, [r7, #12]
 80053b6:	681b      	ldr	r3, [r3, #0]
 80053b8:	687a      	ldr	r2, [r7, #4]
 80053ba:	60da      	str	r2, [r3, #12]
 80053bc:	bf00      	nop
 80053be:	3714      	adds	r7, #20
 80053c0:	46bd      	mov	sp, r7
 80053c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053c6:	4770      	bx	lr

080053c8 <DMA_CalcBaseAndBitshift>:
 80053c8:	b480      	push	{r7}
 80053ca:	b085      	sub	sp, #20
 80053cc:	af00      	add	r7, sp, #0
 80053ce:	6078      	str	r0, [r7, #4]
 80053d0:	687b      	ldr	r3, [r7, #4]
 80053d2:	681b      	ldr	r3, [r3, #0]
 80053d4:	b2db      	uxtb	r3, r3
 80053d6:	3b10      	subs	r3, #16
 80053d8:	4a14      	ldr	r2, [pc, #80]	; (800542c <DMA_CalcBaseAndBitshift+0x64>)
 80053da:	fba2 2303 	umull	r2, r3, r2, r3
 80053de:	091b      	lsrs	r3, r3, #4
 80053e0:	60fb      	str	r3, [r7, #12]
 80053e2:	4a13      	ldr	r2, [pc, #76]	; (8005430 <DMA_CalcBaseAndBitshift+0x68>)
 80053e4:	68fb      	ldr	r3, [r7, #12]
 80053e6:	4413      	add	r3, r2
 80053e8:	781b      	ldrb	r3, [r3, #0]
 80053ea:	461a      	mov	r2, r3
 80053ec:	687b      	ldr	r3, [r7, #4]
 80053ee:	65da      	str	r2, [r3, #92]	; 0x5c
 80053f0:	68fb      	ldr	r3, [r7, #12]
 80053f2:	2b03      	cmp	r3, #3
 80053f4:	d909      	bls.n	800540a <DMA_CalcBaseAndBitshift+0x42>
 80053f6:	687b      	ldr	r3, [r7, #4]
 80053f8:	681b      	ldr	r3, [r3, #0]
 80053fa:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80053fe:	f023 0303 	bic.w	r3, r3, #3
 8005402:	1d1a      	adds	r2, r3, #4
 8005404:	687b      	ldr	r3, [r7, #4]
 8005406:	659a      	str	r2, [r3, #88]	; 0x58
 8005408:	e007      	b.n	800541a <DMA_CalcBaseAndBitshift+0x52>
 800540a:	687b      	ldr	r3, [r7, #4]
 800540c:	681b      	ldr	r3, [r3, #0]
 800540e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8005412:	f023 0303 	bic.w	r3, r3, #3
 8005416:	687a      	ldr	r2, [r7, #4]
 8005418:	6593      	str	r3, [r2, #88]	; 0x58
 800541a:	687b      	ldr	r3, [r7, #4]
 800541c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800541e:	4618      	mov	r0, r3
 8005420:	3714      	adds	r7, #20
 8005422:	46bd      	mov	sp, r7
 8005424:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005428:	4770      	bx	lr
 800542a:	bf00      	nop
 800542c:	aaaaaaab 	.word	0xaaaaaaab
 8005430:	0800bc50 	.word	0x0800bc50

08005434 <DMA_CheckFifoParam>:
 8005434:	b480      	push	{r7}
 8005436:	b085      	sub	sp, #20
 8005438:	af00      	add	r7, sp, #0
 800543a:	6078      	str	r0, [r7, #4]
 800543c:	2300      	movs	r3, #0
 800543e:	73fb      	strb	r3, [r7, #15]
 8005440:	687b      	ldr	r3, [r7, #4]
 8005442:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005444:	60bb      	str	r3, [r7, #8]
 8005446:	687b      	ldr	r3, [r7, #4]
 8005448:	699b      	ldr	r3, [r3, #24]
 800544a:	2b00      	cmp	r3, #0
 800544c:	d11f      	bne.n	800548e <DMA_CheckFifoParam+0x5a>
 800544e:	68bb      	ldr	r3, [r7, #8]
 8005450:	2b03      	cmp	r3, #3
 8005452:	d856      	bhi.n	8005502 <DMA_CheckFifoParam+0xce>
 8005454:	a201      	add	r2, pc, #4	; (adr r2, 800545c <DMA_CheckFifoParam+0x28>)
 8005456:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800545a:	bf00      	nop
 800545c:	0800546d 	.word	0x0800546d
 8005460:	0800547f 	.word	0x0800547f
 8005464:	0800546d 	.word	0x0800546d
 8005468:	08005503 	.word	0x08005503
 800546c:	687b      	ldr	r3, [r7, #4]
 800546e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005470:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005474:	2b00      	cmp	r3, #0
 8005476:	d046      	beq.n	8005506 <DMA_CheckFifoParam+0xd2>
 8005478:	2301      	movs	r3, #1
 800547a:	73fb      	strb	r3, [r7, #15]
 800547c:	e043      	b.n	8005506 <DMA_CheckFifoParam+0xd2>
 800547e:	687b      	ldr	r3, [r7, #4]
 8005480:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005482:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8005486:	d140      	bne.n	800550a <DMA_CheckFifoParam+0xd6>
 8005488:	2301      	movs	r3, #1
 800548a:	73fb      	strb	r3, [r7, #15]
 800548c:	e03d      	b.n	800550a <DMA_CheckFifoParam+0xd6>
 800548e:	687b      	ldr	r3, [r7, #4]
 8005490:	699b      	ldr	r3, [r3, #24]
 8005492:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005496:	d121      	bne.n	80054dc <DMA_CheckFifoParam+0xa8>
 8005498:	68bb      	ldr	r3, [r7, #8]
 800549a:	2b03      	cmp	r3, #3
 800549c:	d837      	bhi.n	800550e <DMA_CheckFifoParam+0xda>
 800549e:	a201      	add	r2, pc, #4	; (adr r2, 80054a4 <DMA_CheckFifoParam+0x70>)
 80054a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80054a4:	080054b5 	.word	0x080054b5
 80054a8:	080054bb 	.word	0x080054bb
 80054ac:	080054b5 	.word	0x080054b5
 80054b0:	080054cd 	.word	0x080054cd
 80054b4:	2301      	movs	r3, #1
 80054b6:	73fb      	strb	r3, [r7, #15]
 80054b8:	e030      	b.n	800551c <DMA_CheckFifoParam+0xe8>
 80054ba:	687b      	ldr	r3, [r7, #4]
 80054bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80054be:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80054c2:	2b00      	cmp	r3, #0
 80054c4:	d025      	beq.n	8005512 <DMA_CheckFifoParam+0xde>
 80054c6:	2301      	movs	r3, #1
 80054c8:	73fb      	strb	r3, [r7, #15]
 80054ca:	e022      	b.n	8005512 <DMA_CheckFifoParam+0xde>
 80054cc:	687b      	ldr	r3, [r7, #4]
 80054ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80054d0:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80054d4:	d11f      	bne.n	8005516 <DMA_CheckFifoParam+0xe2>
 80054d6:	2301      	movs	r3, #1
 80054d8:	73fb      	strb	r3, [r7, #15]
 80054da:	e01c      	b.n	8005516 <DMA_CheckFifoParam+0xe2>
 80054dc:	68bb      	ldr	r3, [r7, #8]
 80054de:	2b02      	cmp	r3, #2
 80054e0:	d903      	bls.n	80054ea <DMA_CheckFifoParam+0xb6>
 80054e2:	68bb      	ldr	r3, [r7, #8]
 80054e4:	2b03      	cmp	r3, #3
 80054e6:	d003      	beq.n	80054f0 <DMA_CheckFifoParam+0xbc>
 80054e8:	e018      	b.n	800551c <DMA_CheckFifoParam+0xe8>
 80054ea:	2301      	movs	r3, #1
 80054ec:	73fb      	strb	r3, [r7, #15]
 80054ee:	e015      	b.n	800551c <DMA_CheckFifoParam+0xe8>
 80054f0:	687b      	ldr	r3, [r7, #4]
 80054f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80054f4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80054f8:	2b00      	cmp	r3, #0
 80054fa:	d00e      	beq.n	800551a <DMA_CheckFifoParam+0xe6>
 80054fc:	2301      	movs	r3, #1
 80054fe:	73fb      	strb	r3, [r7, #15]
 8005500:	e00b      	b.n	800551a <DMA_CheckFifoParam+0xe6>
 8005502:	bf00      	nop
 8005504:	e00a      	b.n	800551c <DMA_CheckFifoParam+0xe8>
 8005506:	bf00      	nop
 8005508:	e008      	b.n	800551c <DMA_CheckFifoParam+0xe8>
 800550a:	bf00      	nop
 800550c:	e006      	b.n	800551c <DMA_CheckFifoParam+0xe8>
 800550e:	bf00      	nop
 8005510:	e004      	b.n	800551c <DMA_CheckFifoParam+0xe8>
 8005512:	bf00      	nop
 8005514:	e002      	b.n	800551c <DMA_CheckFifoParam+0xe8>
 8005516:	bf00      	nop
 8005518:	e000      	b.n	800551c <DMA_CheckFifoParam+0xe8>
 800551a:	bf00      	nop
 800551c:	7bfb      	ldrb	r3, [r7, #15]
 800551e:	4618      	mov	r0, r3
 8005520:	3714      	adds	r7, #20
 8005522:	46bd      	mov	sp, r7
 8005524:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005528:	4770      	bx	lr
 800552a:	bf00      	nop

0800552c <HAL_GPIO_Init>:
 800552c:	b480      	push	{r7}
 800552e:	b089      	sub	sp, #36	; 0x24
 8005530:	af00      	add	r7, sp, #0
 8005532:	6078      	str	r0, [r7, #4]
 8005534:	6039      	str	r1, [r7, #0]
 8005536:	2300      	movs	r3, #0
 8005538:	617b      	str	r3, [r7, #20]
 800553a:	2300      	movs	r3, #0
 800553c:	613b      	str	r3, [r7, #16]
 800553e:	2300      	movs	r3, #0
 8005540:	61bb      	str	r3, [r7, #24]
 8005542:	2300      	movs	r3, #0
 8005544:	61fb      	str	r3, [r7, #28]
 8005546:	e159      	b.n	80057fc <HAL_GPIO_Init+0x2d0>
 8005548:	2201      	movs	r2, #1
 800554a:	69fb      	ldr	r3, [r7, #28]
 800554c:	fa02 f303 	lsl.w	r3, r2, r3
 8005550:	617b      	str	r3, [r7, #20]
 8005552:	683b      	ldr	r3, [r7, #0]
 8005554:	681b      	ldr	r3, [r3, #0]
 8005556:	697a      	ldr	r2, [r7, #20]
 8005558:	4013      	ands	r3, r2
 800555a:	613b      	str	r3, [r7, #16]
 800555c:	693a      	ldr	r2, [r7, #16]
 800555e:	697b      	ldr	r3, [r7, #20]
 8005560:	429a      	cmp	r2, r3
 8005562:	f040 8148 	bne.w	80057f6 <HAL_GPIO_Init+0x2ca>
 8005566:	683b      	ldr	r3, [r7, #0]
 8005568:	685b      	ldr	r3, [r3, #4]
 800556a:	f003 0303 	and.w	r3, r3, #3
 800556e:	2b01      	cmp	r3, #1
 8005570:	d005      	beq.n	800557e <HAL_GPIO_Init+0x52>
 8005572:	683b      	ldr	r3, [r7, #0]
 8005574:	685b      	ldr	r3, [r3, #4]
 8005576:	f003 0303 	and.w	r3, r3, #3
 800557a:	2b02      	cmp	r3, #2
 800557c:	d130      	bne.n	80055e0 <HAL_GPIO_Init+0xb4>
 800557e:	687b      	ldr	r3, [r7, #4]
 8005580:	689b      	ldr	r3, [r3, #8]
 8005582:	61bb      	str	r3, [r7, #24]
 8005584:	69fb      	ldr	r3, [r7, #28]
 8005586:	005b      	lsls	r3, r3, #1
 8005588:	2203      	movs	r2, #3
 800558a:	fa02 f303 	lsl.w	r3, r2, r3
 800558e:	43db      	mvns	r3, r3
 8005590:	69ba      	ldr	r2, [r7, #24]
 8005592:	4013      	ands	r3, r2
 8005594:	61bb      	str	r3, [r7, #24]
 8005596:	683b      	ldr	r3, [r7, #0]
 8005598:	68da      	ldr	r2, [r3, #12]
 800559a:	69fb      	ldr	r3, [r7, #28]
 800559c:	005b      	lsls	r3, r3, #1
 800559e:	fa02 f303 	lsl.w	r3, r2, r3
 80055a2:	69ba      	ldr	r2, [r7, #24]
 80055a4:	4313      	orrs	r3, r2
 80055a6:	61bb      	str	r3, [r7, #24]
 80055a8:	687b      	ldr	r3, [r7, #4]
 80055aa:	69ba      	ldr	r2, [r7, #24]
 80055ac:	609a      	str	r2, [r3, #8]
 80055ae:	687b      	ldr	r3, [r7, #4]
 80055b0:	685b      	ldr	r3, [r3, #4]
 80055b2:	61bb      	str	r3, [r7, #24]
 80055b4:	2201      	movs	r2, #1
 80055b6:	69fb      	ldr	r3, [r7, #28]
 80055b8:	fa02 f303 	lsl.w	r3, r2, r3
 80055bc:	43db      	mvns	r3, r3
 80055be:	69ba      	ldr	r2, [r7, #24]
 80055c0:	4013      	ands	r3, r2
 80055c2:	61bb      	str	r3, [r7, #24]
 80055c4:	683b      	ldr	r3, [r7, #0]
 80055c6:	685b      	ldr	r3, [r3, #4]
 80055c8:	091b      	lsrs	r3, r3, #4
 80055ca:	f003 0201 	and.w	r2, r3, #1
 80055ce:	69fb      	ldr	r3, [r7, #28]
 80055d0:	fa02 f303 	lsl.w	r3, r2, r3
 80055d4:	69ba      	ldr	r2, [r7, #24]
 80055d6:	4313      	orrs	r3, r2
 80055d8:	61bb      	str	r3, [r7, #24]
 80055da:	687b      	ldr	r3, [r7, #4]
 80055dc:	69ba      	ldr	r2, [r7, #24]
 80055de:	605a      	str	r2, [r3, #4]
 80055e0:	683b      	ldr	r3, [r7, #0]
 80055e2:	685b      	ldr	r3, [r3, #4]
 80055e4:	f003 0303 	and.w	r3, r3, #3
 80055e8:	2b03      	cmp	r3, #3
 80055ea:	d017      	beq.n	800561c <HAL_GPIO_Init+0xf0>
 80055ec:	687b      	ldr	r3, [r7, #4]
 80055ee:	68db      	ldr	r3, [r3, #12]
 80055f0:	61bb      	str	r3, [r7, #24]
 80055f2:	69fb      	ldr	r3, [r7, #28]
 80055f4:	005b      	lsls	r3, r3, #1
 80055f6:	2203      	movs	r2, #3
 80055f8:	fa02 f303 	lsl.w	r3, r2, r3
 80055fc:	43db      	mvns	r3, r3
 80055fe:	69ba      	ldr	r2, [r7, #24]
 8005600:	4013      	ands	r3, r2
 8005602:	61bb      	str	r3, [r7, #24]
 8005604:	683b      	ldr	r3, [r7, #0]
 8005606:	689a      	ldr	r2, [r3, #8]
 8005608:	69fb      	ldr	r3, [r7, #28]
 800560a:	005b      	lsls	r3, r3, #1
 800560c:	fa02 f303 	lsl.w	r3, r2, r3
 8005610:	69ba      	ldr	r2, [r7, #24]
 8005612:	4313      	orrs	r3, r2
 8005614:	61bb      	str	r3, [r7, #24]
 8005616:	687b      	ldr	r3, [r7, #4]
 8005618:	69ba      	ldr	r2, [r7, #24]
 800561a:	60da      	str	r2, [r3, #12]
 800561c:	683b      	ldr	r3, [r7, #0]
 800561e:	685b      	ldr	r3, [r3, #4]
 8005620:	f003 0303 	and.w	r3, r3, #3
 8005624:	2b02      	cmp	r3, #2
 8005626:	d123      	bne.n	8005670 <HAL_GPIO_Init+0x144>
 8005628:	69fb      	ldr	r3, [r7, #28]
 800562a:	08da      	lsrs	r2, r3, #3
 800562c:	687b      	ldr	r3, [r7, #4]
 800562e:	3208      	adds	r2, #8
 8005630:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005634:	61bb      	str	r3, [r7, #24]
 8005636:	69fb      	ldr	r3, [r7, #28]
 8005638:	f003 0307 	and.w	r3, r3, #7
 800563c:	009b      	lsls	r3, r3, #2
 800563e:	220f      	movs	r2, #15
 8005640:	fa02 f303 	lsl.w	r3, r2, r3
 8005644:	43db      	mvns	r3, r3
 8005646:	69ba      	ldr	r2, [r7, #24]
 8005648:	4013      	ands	r3, r2
 800564a:	61bb      	str	r3, [r7, #24]
 800564c:	683b      	ldr	r3, [r7, #0]
 800564e:	691a      	ldr	r2, [r3, #16]
 8005650:	69fb      	ldr	r3, [r7, #28]
 8005652:	f003 0307 	and.w	r3, r3, #7
 8005656:	009b      	lsls	r3, r3, #2
 8005658:	fa02 f303 	lsl.w	r3, r2, r3
 800565c:	69ba      	ldr	r2, [r7, #24]
 800565e:	4313      	orrs	r3, r2
 8005660:	61bb      	str	r3, [r7, #24]
 8005662:	69fb      	ldr	r3, [r7, #28]
 8005664:	08da      	lsrs	r2, r3, #3
 8005666:	687b      	ldr	r3, [r7, #4]
 8005668:	3208      	adds	r2, #8
 800566a:	69b9      	ldr	r1, [r7, #24]
 800566c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8005670:	687b      	ldr	r3, [r7, #4]
 8005672:	681b      	ldr	r3, [r3, #0]
 8005674:	61bb      	str	r3, [r7, #24]
 8005676:	69fb      	ldr	r3, [r7, #28]
 8005678:	005b      	lsls	r3, r3, #1
 800567a:	2203      	movs	r2, #3
 800567c:	fa02 f303 	lsl.w	r3, r2, r3
 8005680:	43db      	mvns	r3, r3
 8005682:	69ba      	ldr	r2, [r7, #24]
 8005684:	4013      	ands	r3, r2
 8005686:	61bb      	str	r3, [r7, #24]
 8005688:	683b      	ldr	r3, [r7, #0]
 800568a:	685b      	ldr	r3, [r3, #4]
 800568c:	f003 0203 	and.w	r2, r3, #3
 8005690:	69fb      	ldr	r3, [r7, #28]
 8005692:	005b      	lsls	r3, r3, #1
 8005694:	fa02 f303 	lsl.w	r3, r2, r3
 8005698:	69ba      	ldr	r2, [r7, #24]
 800569a:	4313      	orrs	r3, r2
 800569c:	61bb      	str	r3, [r7, #24]
 800569e:	687b      	ldr	r3, [r7, #4]
 80056a0:	69ba      	ldr	r2, [r7, #24]
 80056a2:	601a      	str	r2, [r3, #0]
 80056a4:	683b      	ldr	r3, [r7, #0]
 80056a6:	685b      	ldr	r3, [r3, #4]
 80056a8:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80056ac:	2b00      	cmp	r3, #0
 80056ae:	f000 80a2 	beq.w	80057f6 <HAL_GPIO_Init+0x2ca>
 80056b2:	2300      	movs	r3, #0
 80056b4:	60fb      	str	r3, [r7, #12]
 80056b6:	4b57      	ldr	r3, [pc, #348]	; (8005814 <HAL_GPIO_Init+0x2e8>)
 80056b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80056ba:	4a56      	ldr	r2, [pc, #344]	; (8005814 <HAL_GPIO_Init+0x2e8>)
 80056bc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80056c0:	6453      	str	r3, [r2, #68]	; 0x44
 80056c2:	4b54      	ldr	r3, [pc, #336]	; (8005814 <HAL_GPIO_Init+0x2e8>)
 80056c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80056c6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80056ca:	60fb      	str	r3, [r7, #12]
 80056cc:	68fb      	ldr	r3, [r7, #12]
 80056ce:	4a52      	ldr	r2, [pc, #328]	; (8005818 <HAL_GPIO_Init+0x2ec>)
 80056d0:	69fb      	ldr	r3, [r7, #28]
 80056d2:	089b      	lsrs	r3, r3, #2
 80056d4:	3302      	adds	r3, #2
 80056d6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80056da:	61bb      	str	r3, [r7, #24]
 80056dc:	69fb      	ldr	r3, [r7, #28]
 80056de:	f003 0303 	and.w	r3, r3, #3
 80056e2:	009b      	lsls	r3, r3, #2
 80056e4:	220f      	movs	r2, #15
 80056e6:	fa02 f303 	lsl.w	r3, r2, r3
 80056ea:	43db      	mvns	r3, r3
 80056ec:	69ba      	ldr	r2, [r7, #24]
 80056ee:	4013      	ands	r3, r2
 80056f0:	61bb      	str	r3, [r7, #24]
 80056f2:	687b      	ldr	r3, [r7, #4]
 80056f4:	4a49      	ldr	r2, [pc, #292]	; (800581c <HAL_GPIO_Init+0x2f0>)
 80056f6:	4293      	cmp	r3, r2
 80056f8:	d019      	beq.n	800572e <HAL_GPIO_Init+0x202>
 80056fa:	687b      	ldr	r3, [r7, #4]
 80056fc:	4a48      	ldr	r2, [pc, #288]	; (8005820 <HAL_GPIO_Init+0x2f4>)
 80056fe:	4293      	cmp	r3, r2
 8005700:	d013      	beq.n	800572a <HAL_GPIO_Init+0x1fe>
 8005702:	687b      	ldr	r3, [r7, #4]
 8005704:	4a47      	ldr	r2, [pc, #284]	; (8005824 <HAL_GPIO_Init+0x2f8>)
 8005706:	4293      	cmp	r3, r2
 8005708:	d00d      	beq.n	8005726 <HAL_GPIO_Init+0x1fa>
 800570a:	687b      	ldr	r3, [r7, #4]
 800570c:	4a46      	ldr	r2, [pc, #280]	; (8005828 <HAL_GPIO_Init+0x2fc>)
 800570e:	4293      	cmp	r3, r2
 8005710:	d007      	beq.n	8005722 <HAL_GPIO_Init+0x1f6>
 8005712:	687b      	ldr	r3, [r7, #4]
 8005714:	4a45      	ldr	r2, [pc, #276]	; (800582c <HAL_GPIO_Init+0x300>)
 8005716:	4293      	cmp	r3, r2
 8005718:	d101      	bne.n	800571e <HAL_GPIO_Init+0x1f2>
 800571a:	2304      	movs	r3, #4
 800571c:	e008      	b.n	8005730 <HAL_GPIO_Init+0x204>
 800571e:	2307      	movs	r3, #7
 8005720:	e006      	b.n	8005730 <HAL_GPIO_Init+0x204>
 8005722:	2303      	movs	r3, #3
 8005724:	e004      	b.n	8005730 <HAL_GPIO_Init+0x204>
 8005726:	2302      	movs	r3, #2
 8005728:	e002      	b.n	8005730 <HAL_GPIO_Init+0x204>
 800572a:	2301      	movs	r3, #1
 800572c:	e000      	b.n	8005730 <HAL_GPIO_Init+0x204>
 800572e:	2300      	movs	r3, #0
 8005730:	69fa      	ldr	r2, [r7, #28]
 8005732:	f002 0203 	and.w	r2, r2, #3
 8005736:	0092      	lsls	r2, r2, #2
 8005738:	4093      	lsls	r3, r2
 800573a:	69ba      	ldr	r2, [r7, #24]
 800573c:	4313      	orrs	r3, r2
 800573e:	61bb      	str	r3, [r7, #24]
 8005740:	4935      	ldr	r1, [pc, #212]	; (8005818 <HAL_GPIO_Init+0x2ec>)
 8005742:	69fb      	ldr	r3, [r7, #28]
 8005744:	089b      	lsrs	r3, r3, #2
 8005746:	3302      	adds	r3, #2
 8005748:	69ba      	ldr	r2, [r7, #24]
 800574a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800574e:	4b38      	ldr	r3, [pc, #224]	; (8005830 <HAL_GPIO_Init+0x304>)
 8005750:	689b      	ldr	r3, [r3, #8]
 8005752:	61bb      	str	r3, [r7, #24]
 8005754:	693b      	ldr	r3, [r7, #16]
 8005756:	43db      	mvns	r3, r3
 8005758:	69ba      	ldr	r2, [r7, #24]
 800575a:	4013      	ands	r3, r2
 800575c:	61bb      	str	r3, [r7, #24]
 800575e:	683b      	ldr	r3, [r7, #0]
 8005760:	685b      	ldr	r3, [r3, #4]
 8005762:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005766:	2b00      	cmp	r3, #0
 8005768:	d003      	beq.n	8005772 <HAL_GPIO_Init+0x246>
 800576a:	69ba      	ldr	r2, [r7, #24]
 800576c:	693b      	ldr	r3, [r7, #16]
 800576e:	4313      	orrs	r3, r2
 8005770:	61bb      	str	r3, [r7, #24]
 8005772:	4a2f      	ldr	r2, [pc, #188]	; (8005830 <HAL_GPIO_Init+0x304>)
 8005774:	69bb      	ldr	r3, [r7, #24]
 8005776:	6093      	str	r3, [r2, #8]
 8005778:	4b2d      	ldr	r3, [pc, #180]	; (8005830 <HAL_GPIO_Init+0x304>)
 800577a:	68db      	ldr	r3, [r3, #12]
 800577c:	61bb      	str	r3, [r7, #24]
 800577e:	693b      	ldr	r3, [r7, #16]
 8005780:	43db      	mvns	r3, r3
 8005782:	69ba      	ldr	r2, [r7, #24]
 8005784:	4013      	ands	r3, r2
 8005786:	61bb      	str	r3, [r7, #24]
 8005788:	683b      	ldr	r3, [r7, #0]
 800578a:	685b      	ldr	r3, [r3, #4]
 800578c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005790:	2b00      	cmp	r3, #0
 8005792:	d003      	beq.n	800579c <HAL_GPIO_Init+0x270>
 8005794:	69ba      	ldr	r2, [r7, #24]
 8005796:	693b      	ldr	r3, [r7, #16]
 8005798:	4313      	orrs	r3, r2
 800579a:	61bb      	str	r3, [r7, #24]
 800579c:	4a24      	ldr	r2, [pc, #144]	; (8005830 <HAL_GPIO_Init+0x304>)
 800579e:	69bb      	ldr	r3, [r7, #24]
 80057a0:	60d3      	str	r3, [r2, #12]
 80057a2:	4b23      	ldr	r3, [pc, #140]	; (8005830 <HAL_GPIO_Init+0x304>)
 80057a4:	685b      	ldr	r3, [r3, #4]
 80057a6:	61bb      	str	r3, [r7, #24]
 80057a8:	693b      	ldr	r3, [r7, #16]
 80057aa:	43db      	mvns	r3, r3
 80057ac:	69ba      	ldr	r2, [r7, #24]
 80057ae:	4013      	ands	r3, r2
 80057b0:	61bb      	str	r3, [r7, #24]
 80057b2:	683b      	ldr	r3, [r7, #0]
 80057b4:	685b      	ldr	r3, [r3, #4]
 80057b6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80057ba:	2b00      	cmp	r3, #0
 80057bc:	d003      	beq.n	80057c6 <HAL_GPIO_Init+0x29a>
 80057be:	69ba      	ldr	r2, [r7, #24]
 80057c0:	693b      	ldr	r3, [r7, #16]
 80057c2:	4313      	orrs	r3, r2
 80057c4:	61bb      	str	r3, [r7, #24]
 80057c6:	4a1a      	ldr	r2, [pc, #104]	; (8005830 <HAL_GPIO_Init+0x304>)
 80057c8:	69bb      	ldr	r3, [r7, #24]
 80057ca:	6053      	str	r3, [r2, #4]
 80057cc:	4b18      	ldr	r3, [pc, #96]	; (8005830 <HAL_GPIO_Init+0x304>)
 80057ce:	681b      	ldr	r3, [r3, #0]
 80057d0:	61bb      	str	r3, [r7, #24]
 80057d2:	693b      	ldr	r3, [r7, #16]
 80057d4:	43db      	mvns	r3, r3
 80057d6:	69ba      	ldr	r2, [r7, #24]
 80057d8:	4013      	ands	r3, r2
 80057da:	61bb      	str	r3, [r7, #24]
 80057dc:	683b      	ldr	r3, [r7, #0]
 80057de:	685b      	ldr	r3, [r3, #4]
 80057e0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80057e4:	2b00      	cmp	r3, #0
 80057e6:	d003      	beq.n	80057f0 <HAL_GPIO_Init+0x2c4>
 80057e8:	69ba      	ldr	r2, [r7, #24]
 80057ea:	693b      	ldr	r3, [r7, #16]
 80057ec:	4313      	orrs	r3, r2
 80057ee:	61bb      	str	r3, [r7, #24]
 80057f0:	4a0f      	ldr	r2, [pc, #60]	; (8005830 <HAL_GPIO_Init+0x304>)
 80057f2:	69bb      	ldr	r3, [r7, #24]
 80057f4:	6013      	str	r3, [r2, #0]
 80057f6:	69fb      	ldr	r3, [r7, #28]
 80057f8:	3301      	adds	r3, #1
 80057fa:	61fb      	str	r3, [r7, #28]
 80057fc:	69fb      	ldr	r3, [r7, #28]
 80057fe:	2b0f      	cmp	r3, #15
 8005800:	f67f aea2 	bls.w	8005548 <HAL_GPIO_Init+0x1c>
 8005804:	bf00      	nop
 8005806:	bf00      	nop
 8005808:	3724      	adds	r7, #36	; 0x24
 800580a:	46bd      	mov	sp, r7
 800580c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005810:	4770      	bx	lr
 8005812:	bf00      	nop
 8005814:	40023800 	.word	0x40023800
 8005818:	40013800 	.word	0x40013800
 800581c:	40020000 	.word	0x40020000
 8005820:	40020400 	.word	0x40020400
 8005824:	40020800 	.word	0x40020800
 8005828:	40020c00 	.word	0x40020c00
 800582c:	40021000 	.word	0x40021000
 8005830:	40013c00 	.word	0x40013c00

08005834 <HAL_GPIO_ReadPin>:
 8005834:	b480      	push	{r7}
 8005836:	b085      	sub	sp, #20
 8005838:	af00      	add	r7, sp, #0
 800583a:	6078      	str	r0, [r7, #4]
 800583c:	460b      	mov	r3, r1
 800583e:	807b      	strh	r3, [r7, #2]
 8005840:	687b      	ldr	r3, [r7, #4]
 8005842:	691a      	ldr	r2, [r3, #16]
 8005844:	887b      	ldrh	r3, [r7, #2]
 8005846:	4013      	ands	r3, r2
 8005848:	2b00      	cmp	r3, #0
 800584a:	d002      	beq.n	8005852 <HAL_GPIO_ReadPin+0x1e>
 800584c:	2301      	movs	r3, #1
 800584e:	73fb      	strb	r3, [r7, #15]
 8005850:	e001      	b.n	8005856 <HAL_GPIO_ReadPin+0x22>
 8005852:	2300      	movs	r3, #0
 8005854:	73fb      	strb	r3, [r7, #15]
 8005856:	7bfb      	ldrb	r3, [r7, #15]
 8005858:	4618      	mov	r0, r3
 800585a:	3714      	adds	r7, #20
 800585c:	46bd      	mov	sp, r7
 800585e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005862:	4770      	bx	lr

08005864 <HAL_GPIO_WritePin>:
 8005864:	b480      	push	{r7}
 8005866:	b083      	sub	sp, #12
 8005868:	af00      	add	r7, sp, #0
 800586a:	6078      	str	r0, [r7, #4]
 800586c:	460b      	mov	r3, r1
 800586e:	807b      	strh	r3, [r7, #2]
 8005870:	4613      	mov	r3, r2
 8005872:	707b      	strb	r3, [r7, #1]
 8005874:	787b      	ldrb	r3, [r7, #1]
 8005876:	2b00      	cmp	r3, #0
 8005878:	d003      	beq.n	8005882 <HAL_GPIO_WritePin+0x1e>
 800587a:	887a      	ldrh	r2, [r7, #2]
 800587c:	687b      	ldr	r3, [r7, #4]
 800587e:	619a      	str	r2, [r3, #24]
 8005880:	e003      	b.n	800588a <HAL_GPIO_WritePin+0x26>
 8005882:	887b      	ldrh	r3, [r7, #2]
 8005884:	041a      	lsls	r2, r3, #16
 8005886:	687b      	ldr	r3, [r7, #4]
 8005888:	619a      	str	r2, [r3, #24]
 800588a:	bf00      	nop
 800588c:	370c      	adds	r7, #12
 800588e:	46bd      	mov	sp, r7
 8005890:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005894:	4770      	bx	lr
	...

08005898 <HAL_GPIO_EXTI_IRQHandler>:
 8005898:	b580      	push	{r7, lr}
 800589a:	b082      	sub	sp, #8
 800589c:	af00      	add	r7, sp, #0
 800589e:	4603      	mov	r3, r0
 80058a0:	80fb      	strh	r3, [r7, #6]
 80058a2:	4b08      	ldr	r3, [pc, #32]	; (80058c4 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80058a4:	695a      	ldr	r2, [r3, #20]
 80058a6:	88fb      	ldrh	r3, [r7, #6]
 80058a8:	4013      	ands	r3, r2
 80058aa:	2b00      	cmp	r3, #0
 80058ac:	d006      	beq.n	80058bc <HAL_GPIO_EXTI_IRQHandler+0x24>
 80058ae:	4a05      	ldr	r2, [pc, #20]	; (80058c4 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80058b0:	88fb      	ldrh	r3, [r7, #6]
 80058b2:	6153      	str	r3, [r2, #20]
 80058b4:	88fb      	ldrh	r3, [r7, #6]
 80058b6:	4618      	mov	r0, r3
 80058b8:	f7fd fedc 	bl	8003674 <HAL_GPIO_EXTI_Callback>
 80058bc:	bf00      	nop
 80058be:	3708      	adds	r7, #8
 80058c0:	46bd      	mov	sp, r7
 80058c2:	bd80      	pop	{r7, pc}
 80058c4:	40013c00 	.word	0x40013c00

080058c8 <HAL_I2C_Init>:
 80058c8:	b580      	push	{r7, lr}
 80058ca:	b084      	sub	sp, #16
 80058cc:	af00      	add	r7, sp, #0
 80058ce:	6078      	str	r0, [r7, #4]
 80058d0:	687b      	ldr	r3, [r7, #4]
 80058d2:	2b00      	cmp	r3, #0
 80058d4:	d101      	bne.n	80058da <HAL_I2C_Init+0x12>
 80058d6:	2301      	movs	r3, #1
 80058d8:	e12b      	b.n	8005b32 <HAL_I2C_Init+0x26a>
 80058da:	687b      	ldr	r3, [r7, #4]
 80058dc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80058e0:	b2db      	uxtb	r3, r3
 80058e2:	2b00      	cmp	r3, #0
 80058e4:	d106      	bne.n	80058f4 <HAL_I2C_Init+0x2c>
 80058e6:	687b      	ldr	r3, [r7, #4]
 80058e8:	2200      	movs	r2, #0
 80058ea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80058ee:	6878      	ldr	r0, [r7, #4]
 80058f0:	f7fe fd70 	bl	80043d4 <HAL_I2C_MspInit>
 80058f4:	687b      	ldr	r3, [r7, #4]
 80058f6:	2224      	movs	r2, #36	; 0x24
 80058f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80058fc:	687b      	ldr	r3, [r7, #4]
 80058fe:	681b      	ldr	r3, [r3, #0]
 8005900:	681a      	ldr	r2, [r3, #0]
 8005902:	687b      	ldr	r3, [r7, #4]
 8005904:	681b      	ldr	r3, [r3, #0]
 8005906:	f022 0201 	bic.w	r2, r2, #1
 800590a:	601a      	str	r2, [r3, #0]
 800590c:	687b      	ldr	r3, [r7, #4]
 800590e:	681b      	ldr	r3, [r3, #0]
 8005910:	681a      	ldr	r2, [r3, #0]
 8005912:	687b      	ldr	r3, [r7, #4]
 8005914:	681b      	ldr	r3, [r3, #0]
 8005916:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800591a:	601a      	str	r2, [r3, #0]
 800591c:	687b      	ldr	r3, [r7, #4]
 800591e:	681b      	ldr	r3, [r3, #0]
 8005920:	681a      	ldr	r2, [r3, #0]
 8005922:	687b      	ldr	r3, [r7, #4]
 8005924:	681b      	ldr	r3, [r3, #0]
 8005926:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800592a:	601a      	str	r2, [r3, #0]
 800592c:	f003 f8ac 	bl	8008a88 <HAL_RCC_GetPCLK1Freq>
 8005930:	60f8      	str	r0, [r7, #12]
 8005932:	687b      	ldr	r3, [r7, #4]
 8005934:	685b      	ldr	r3, [r3, #4]
 8005936:	4a81      	ldr	r2, [pc, #516]	; (8005b3c <HAL_I2C_Init+0x274>)
 8005938:	4293      	cmp	r3, r2
 800593a:	d807      	bhi.n	800594c <HAL_I2C_Init+0x84>
 800593c:	68fb      	ldr	r3, [r7, #12]
 800593e:	4a80      	ldr	r2, [pc, #512]	; (8005b40 <HAL_I2C_Init+0x278>)
 8005940:	4293      	cmp	r3, r2
 8005942:	bf94      	ite	ls
 8005944:	2301      	movls	r3, #1
 8005946:	2300      	movhi	r3, #0
 8005948:	b2db      	uxtb	r3, r3
 800594a:	e006      	b.n	800595a <HAL_I2C_Init+0x92>
 800594c:	68fb      	ldr	r3, [r7, #12]
 800594e:	4a7d      	ldr	r2, [pc, #500]	; (8005b44 <HAL_I2C_Init+0x27c>)
 8005950:	4293      	cmp	r3, r2
 8005952:	bf94      	ite	ls
 8005954:	2301      	movls	r3, #1
 8005956:	2300      	movhi	r3, #0
 8005958:	b2db      	uxtb	r3, r3
 800595a:	2b00      	cmp	r3, #0
 800595c:	d001      	beq.n	8005962 <HAL_I2C_Init+0x9a>
 800595e:	2301      	movs	r3, #1
 8005960:	e0e7      	b.n	8005b32 <HAL_I2C_Init+0x26a>
 8005962:	68fb      	ldr	r3, [r7, #12]
 8005964:	4a78      	ldr	r2, [pc, #480]	; (8005b48 <HAL_I2C_Init+0x280>)
 8005966:	fba2 2303 	umull	r2, r3, r2, r3
 800596a:	0c9b      	lsrs	r3, r3, #18
 800596c:	60bb      	str	r3, [r7, #8]
 800596e:	687b      	ldr	r3, [r7, #4]
 8005970:	681b      	ldr	r3, [r3, #0]
 8005972:	685b      	ldr	r3, [r3, #4]
 8005974:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8005978:	687b      	ldr	r3, [r7, #4]
 800597a:	681b      	ldr	r3, [r3, #0]
 800597c:	68ba      	ldr	r2, [r7, #8]
 800597e:	430a      	orrs	r2, r1
 8005980:	605a      	str	r2, [r3, #4]
 8005982:	687b      	ldr	r3, [r7, #4]
 8005984:	681b      	ldr	r3, [r3, #0]
 8005986:	6a1b      	ldr	r3, [r3, #32]
 8005988:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 800598c:	687b      	ldr	r3, [r7, #4]
 800598e:	685b      	ldr	r3, [r3, #4]
 8005990:	4a6a      	ldr	r2, [pc, #424]	; (8005b3c <HAL_I2C_Init+0x274>)
 8005992:	4293      	cmp	r3, r2
 8005994:	d802      	bhi.n	800599c <HAL_I2C_Init+0xd4>
 8005996:	68bb      	ldr	r3, [r7, #8]
 8005998:	3301      	adds	r3, #1
 800599a:	e009      	b.n	80059b0 <HAL_I2C_Init+0xe8>
 800599c:	68bb      	ldr	r3, [r7, #8]
 800599e:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80059a2:	fb02 f303 	mul.w	r3, r2, r3
 80059a6:	4a69      	ldr	r2, [pc, #420]	; (8005b4c <HAL_I2C_Init+0x284>)
 80059a8:	fba2 2303 	umull	r2, r3, r2, r3
 80059ac:	099b      	lsrs	r3, r3, #6
 80059ae:	3301      	adds	r3, #1
 80059b0:	687a      	ldr	r2, [r7, #4]
 80059b2:	6812      	ldr	r2, [r2, #0]
 80059b4:	430b      	orrs	r3, r1
 80059b6:	6213      	str	r3, [r2, #32]
 80059b8:	687b      	ldr	r3, [r7, #4]
 80059ba:	681b      	ldr	r3, [r3, #0]
 80059bc:	69db      	ldr	r3, [r3, #28]
 80059be:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 80059c2:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80059c6:	687b      	ldr	r3, [r7, #4]
 80059c8:	685b      	ldr	r3, [r3, #4]
 80059ca:	495c      	ldr	r1, [pc, #368]	; (8005b3c <HAL_I2C_Init+0x274>)
 80059cc:	428b      	cmp	r3, r1
 80059ce:	d819      	bhi.n	8005a04 <HAL_I2C_Init+0x13c>
 80059d0:	68fb      	ldr	r3, [r7, #12]
 80059d2:	1e59      	subs	r1, r3, #1
 80059d4:	687b      	ldr	r3, [r7, #4]
 80059d6:	685b      	ldr	r3, [r3, #4]
 80059d8:	005b      	lsls	r3, r3, #1
 80059da:	fbb1 f3f3 	udiv	r3, r1, r3
 80059de:	1c59      	adds	r1, r3, #1
 80059e0:	f640 73fc 	movw	r3, #4092	; 0xffc
 80059e4:	400b      	ands	r3, r1
 80059e6:	2b00      	cmp	r3, #0
 80059e8:	d00a      	beq.n	8005a00 <HAL_I2C_Init+0x138>
 80059ea:	68fb      	ldr	r3, [r7, #12]
 80059ec:	1e59      	subs	r1, r3, #1
 80059ee:	687b      	ldr	r3, [r7, #4]
 80059f0:	685b      	ldr	r3, [r3, #4]
 80059f2:	005b      	lsls	r3, r3, #1
 80059f4:	fbb1 f3f3 	udiv	r3, r1, r3
 80059f8:	3301      	adds	r3, #1
 80059fa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80059fe:	e051      	b.n	8005aa4 <HAL_I2C_Init+0x1dc>
 8005a00:	2304      	movs	r3, #4
 8005a02:	e04f      	b.n	8005aa4 <HAL_I2C_Init+0x1dc>
 8005a04:	687b      	ldr	r3, [r7, #4]
 8005a06:	689b      	ldr	r3, [r3, #8]
 8005a08:	2b00      	cmp	r3, #0
 8005a0a:	d111      	bne.n	8005a30 <HAL_I2C_Init+0x168>
 8005a0c:	68fb      	ldr	r3, [r7, #12]
 8005a0e:	1e58      	subs	r0, r3, #1
 8005a10:	687b      	ldr	r3, [r7, #4]
 8005a12:	6859      	ldr	r1, [r3, #4]
 8005a14:	460b      	mov	r3, r1
 8005a16:	005b      	lsls	r3, r3, #1
 8005a18:	440b      	add	r3, r1
 8005a1a:	fbb0 f3f3 	udiv	r3, r0, r3
 8005a1e:	3301      	adds	r3, #1
 8005a20:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005a24:	2b00      	cmp	r3, #0
 8005a26:	bf0c      	ite	eq
 8005a28:	2301      	moveq	r3, #1
 8005a2a:	2300      	movne	r3, #0
 8005a2c:	b2db      	uxtb	r3, r3
 8005a2e:	e012      	b.n	8005a56 <HAL_I2C_Init+0x18e>
 8005a30:	68fb      	ldr	r3, [r7, #12]
 8005a32:	1e58      	subs	r0, r3, #1
 8005a34:	687b      	ldr	r3, [r7, #4]
 8005a36:	6859      	ldr	r1, [r3, #4]
 8005a38:	460b      	mov	r3, r1
 8005a3a:	009b      	lsls	r3, r3, #2
 8005a3c:	440b      	add	r3, r1
 8005a3e:	0099      	lsls	r1, r3, #2
 8005a40:	440b      	add	r3, r1
 8005a42:	fbb0 f3f3 	udiv	r3, r0, r3
 8005a46:	3301      	adds	r3, #1
 8005a48:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005a4c:	2b00      	cmp	r3, #0
 8005a4e:	bf0c      	ite	eq
 8005a50:	2301      	moveq	r3, #1
 8005a52:	2300      	movne	r3, #0
 8005a54:	b2db      	uxtb	r3, r3
 8005a56:	2b00      	cmp	r3, #0
 8005a58:	d001      	beq.n	8005a5e <HAL_I2C_Init+0x196>
 8005a5a:	2301      	movs	r3, #1
 8005a5c:	e022      	b.n	8005aa4 <HAL_I2C_Init+0x1dc>
 8005a5e:	687b      	ldr	r3, [r7, #4]
 8005a60:	689b      	ldr	r3, [r3, #8]
 8005a62:	2b00      	cmp	r3, #0
 8005a64:	d10e      	bne.n	8005a84 <HAL_I2C_Init+0x1bc>
 8005a66:	68fb      	ldr	r3, [r7, #12]
 8005a68:	1e58      	subs	r0, r3, #1
 8005a6a:	687b      	ldr	r3, [r7, #4]
 8005a6c:	6859      	ldr	r1, [r3, #4]
 8005a6e:	460b      	mov	r3, r1
 8005a70:	005b      	lsls	r3, r3, #1
 8005a72:	440b      	add	r3, r1
 8005a74:	fbb0 f3f3 	udiv	r3, r0, r3
 8005a78:	3301      	adds	r3, #1
 8005a7a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005a7e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005a82:	e00f      	b.n	8005aa4 <HAL_I2C_Init+0x1dc>
 8005a84:	68fb      	ldr	r3, [r7, #12]
 8005a86:	1e58      	subs	r0, r3, #1
 8005a88:	687b      	ldr	r3, [r7, #4]
 8005a8a:	6859      	ldr	r1, [r3, #4]
 8005a8c:	460b      	mov	r3, r1
 8005a8e:	009b      	lsls	r3, r3, #2
 8005a90:	440b      	add	r3, r1
 8005a92:	0099      	lsls	r1, r3, #2
 8005a94:	440b      	add	r3, r1
 8005a96:	fbb0 f3f3 	udiv	r3, r0, r3
 8005a9a:	3301      	adds	r3, #1
 8005a9c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005aa0:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005aa4:	6879      	ldr	r1, [r7, #4]
 8005aa6:	6809      	ldr	r1, [r1, #0]
 8005aa8:	4313      	orrs	r3, r2
 8005aaa:	61cb      	str	r3, [r1, #28]
 8005aac:	687b      	ldr	r3, [r7, #4]
 8005aae:	681b      	ldr	r3, [r3, #0]
 8005ab0:	681b      	ldr	r3, [r3, #0]
 8005ab2:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8005ab6:	687b      	ldr	r3, [r7, #4]
 8005ab8:	69da      	ldr	r2, [r3, #28]
 8005aba:	687b      	ldr	r3, [r7, #4]
 8005abc:	6a1b      	ldr	r3, [r3, #32]
 8005abe:	431a      	orrs	r2, r3
 8005ac0:	687b      	ldr	r3, [r7, #4]
 8005ac2:	681b      	ldr	r3, [r3, #0]
 8005ac4:	430a      	orrs	r2, r1
 8005ac6:	601a      	str	r2, [r3, #0]
 8005ac8:	687b      	ldr	r3, [r7, #4]
 8005aca:	681b      	ldr	r3, [r3, #0]
 8005acc:	689b      	ldr	r3, [r3, #8]
 8005ace:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8005ad2:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8005ad6:	687a      	ldr	r2, [r7, #4]
 8005ad8:	6911      	ldr	r1, [r2, #16]
 8005ada:	687a      	ldr	r2, [r7, #4]
 8005adc:	68d2      	ldr	r2, [r2, #12]
 8005ade:	4311      	orrs	r1, r2
 8005ae0:	687a      	ldr	r2, [r7, #4]
 8005ae2:	6812      	ldr	r2, [r2, #0]
 8005ae4:	430b      	orrs	r3, r1
 8005ae6:	6093      	str	r3, [r2, #8]
 8005ae8:	687b      	ldr	r3, [r7, #4]
 8005aea:	681b      	ldr	r3, [r3, #0]
 8005aec:	68db      	ldr	r3, [r3, #12]
 8005aee:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8005af2:	687b      	ldr	r3, [r7, #4]
 8005af4:	695a      	ldr	r2, [r3, #20]
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	699b      	ldr	r3, [r3, #24]
 8005afa:	431a      	orrs	r2, r3
 8005afc:	687b      	ldr	r3, [r7, #4]
 8005afe:	681b      	ldr	r3, [r3, #0]
 8005b00:	430a      	orrs	r2, r1
 8005b02:	60da      	str	r2, [r3, #12]
 8005b04:	687b      	ldr	r3, [r7, #4]
 8005b06:	681b      	ldr	r3, [r3, #0]
 8005b08:	681a      	ldr	r2, [r3, #0]
 8005b0a:	687b      	ldr	r3, [r7, #4]
 8005b0c:	681b      	ldr	r3, [r3, #0]
 8005b0e:	f042 0201 	orr.w	r2, r2, #1
 8005b12:	601a      	str	r2, [r3, #0]
 8005b14:	687b      	ldr	r3, [r7, #4]
 8005b16:	2200      	movs	r2, #0
 8005b18:	641a      	str	r2, [r3, #64]	; 0x40
 8005b1a:	687b      	ldr	r3, [r7, #4]
 8005b1c:	2220      	movs	r2, #32
 8005b1e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005b22:	687b      	ldr	r3, [r7, #4]
 8005b24:	2200      	movs	r2, #0
 8005b26:	631a      	str	r2, [r3, #48]	; 0x30
 8005b28:	687b      	ldr	r3, [r7, #4]
 8005b2a:	2200      	movs	r2, #0
 8005b2c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005b30:	2300      	movs	r3, #0
 8005b32:	4618      	mov	r0, r3
 8005b34:	3710      	adds	r7, #16
 8005b36:	46bd      	mov	sp, r7
 8005b38:	bd80      	pop	{r7, pc}
 8005b3a:	bf00      	nop
 8005b3c:	000186a0 	.word	0x000186a0
 8005b40:	001e847f 	.word	0x001e847f
 8005b44:	003d08ff 	.word	0x003d08ff
 8005b48:	431bde83 	.word	0x431bde83
 8005b4c:	10624dd3 	.word	0x10624dd3

08005b50 <HAL_I2C_Master_Transmit>:
 8005b50:	b580      	push	{r7, lr}
 8005b52:	b088      	sub	sp, #32
 8005b54:	af02      	add	r7, sp, #8
 8005b56:	60f8      	str	r0, [r7, #12]
 8005b58:	607a      	str	r2, [r7, #4]
 8005b5a:	461a      	mov	r2, r3
 8005b5c:	460b      	mov	r3, r1
 8005b5e:	817b      	strh	r3, [r7, #10]
 8005b60:	4613      	mov	r3, r2
 8005b62:	813b      	strh	r3, [r7, #8]
 8005b64:	f7fe ffb4 	bl	8004ad0 <HAL_GetTick>
 8005b68:	6178      	str	r0, [r7, #20]
 8005b6a:	68fb      	ldr	r3, [r7, #12]
 8005b6c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005b70:	b2db      	uxtb	r3, r3
 8005b72:	2b20      	cmp	r3, #32
 8005b74:	f040 80e0 	bne.w	8005d38 <HAL_I2C_Master_Transmit+0x1e8>
 8005b78:	697b      	ldr	r3, [r7, #20]
 8005b7a:	9300      	str	r3, [sp, #0]
 8005b7c:	2319      	movs	r3, #25
 8005b7e:	2201      	movs	r2, #1
 8005b80:	4970      	ldr	r1, [pc, #448]	; (8005d44 <HAL_I2C_Master_Transmit+0x1f4>)
 8005b82:	68f8      	ldr	r0, [r7, #12]
 8005b84:	f002 f8e6 	bl	8007d54 <I2C_WaitOnFlagUntilTimeout>
 8005b88:	4603      	mov	r3, r0
 8005b8a:	2b00      	cmp	r3, #0
 8005b8c:	d001      	beq.n	8005b92 <HAL_I2C_Master_Transmit+0x42>
 8005b8e:	2302      	movs	r3, #2
 8005b90:	e0d3      	b.n	8005d3a <HAL_I2C_Master_Transmit+0x1ea>
 8005b92:	68fb      	ldr	r3, [r7, #12]
 8005b94:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005b98:	2b01      	cmp	r3, #1
 8005b9a:	d101      	bne.n	8005ba0 <HAL_I2C_Master_Transmit+0x50>
 8005b9c:	2302      	movs	r3, #2
 8005b9e:	e0cc      	b.n	8005d3a <HAL_I2C_Master_Transmit+0x1ea>
 8005ba0:	68fb      	ldr	r3, [r7, #12]
 8005ba2:	2201      	movs	r2, #1
 8005ba4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005ba8:	68fb      	ldr	r3, [r7, #12]
 8005baa:	681b      	ldr	r3, [r3, #0]
 8005bac:	681b      	ldr	r3, [r3, #0]
 8005bae:	f003 0301 	and.w	r3, r3, #1
 8005bb2:	2b01      	cmp	r3, #1
 8005bb4:	d007      	beq.n	8005bc6 <HAL_I2C_Master_Transmit+0x76>
 8005bb6:	68fb      	ldr	r3, [r7, #12]
 8005bb8:	681b      	ldr	r3, [r3, #0]
 8005bba:	681a      	ldr	r2, [r3, #0]
 8005bbc:	68fb      	ldr	r3, [r7, #12]
 8005bbe:	681b      	ldr	r3, [r3, #0]
 8005bc0:	f042 0201 	orr.w	r2, r2, #1
 8005bc4:	601a      	str	r2, [r3, #0]
 8005bc6:	68fb      	ldr	r3, [r7, #12]
 8005bc8:	681b      	ldr	r3, [r3, #0]
 8005bca:	681a      	ldr	r2, [r3, #0]
 8005bcc:	68fb      	ldr	r3, [r7, #12]
 8005bce:	681b      	ldr	r3, [r3, #0]
 8005bd0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005bd4:	601a      	str	r2, [r3, #0]
 8005bd6:	68fb      	ldr	r3, [r7, #12]
 8005bd8:	2221      	movs	r2, #33	; 0x21
 8005bda:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005bde:	68fb      	ldr	r3, [r7, #12]
 8005be0:	2210      	movs	r2, #16
 8005be2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005be6:	68fb      	ldr	r3, [r7, #12]
 8005be8:	2200      	movs	r2, #0
 8005bea:	641a      	str	r2, [r3, #64]	; 0x40
 8005bec:	68fb      	ldr	r3, [r7, #12]
 8005bee:	687a      	ldr	r2, [r7, #4]
 8005bf0:	625a      	str	r2, [r3, #36]	; 0x24
 8005bf2:	68fb      	ldr	r3, [r7, #12]
 8005bf4:	893a      	ldrh	r2, [r7, #8]
 8005bf6:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005bf8:	68fb      	ldr	r3, [r7, #12]
 8005bfa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005bfc:	b29a      	uxth	r2, r3
 8005bfe:	68fb      	ldr	r3, [r7, #12]
 8005c00:	851a      	strh	r2, [r3, #40]	; 0x28
 8005c02:	68fb      	ldr	r3, [r7, #12]
 8005c04:	4a50      	ldr	r2, [pc, #320]	; (8005d48 <HAL_I2C_Master_Transmit+0x1f8>)
 8005c06:	62da      	str	r2, [r3, #44]	; 0x2c
 8005c08:	8979      	ldrh	r1, [r7, #10]
 8005c0a:	697b      	ldr	r3, [r7, #20]
 8005c0c:	6a3a      	ldr	r2, [r7, #32]
 8005c0e:	68f8      	ldr	r0, [r7, #12]
 8005c10:	f001 fea8 	bl	8007964 <I2C_MasterRequestWrite>
 8005c14:	4603      	mov	r3, r0
 8005c16:	2b00      	cmp	r3, #0
 8005c18:	d001      	beq.n	8005c1e <HAL_I2C_Master_Transmit+0xce>
 8005c1a:	2301      	movs	r3, #1
 8005c1c:	e08d      	b.n	8005d3a <HAL_I2C_Master_Transmit+0x1ea>
 8005c1e:	2300      	movs	r3, #0
 8005c20:	613b      	str	r3, [r7, #16]
 8005c22:	68fb      	ldr	r3, [r7, #12]
 8005c24:	681b      	ldr	r3, [r3, #0]
 8005c26:	695b      	ldr	r3, [r3, #20]
 8005c28:	613b      	str	r3, [r7, #16]
 8005c2a:	68fb      	ldr	r3, [r7, #12]
 8005c2c:	681b      	ldr	r3, [r3, #0]
 8005c2e:	699b      	ldr	r3, [r3, #24]
 8005c30:	613b      	str	r3, [r7, #16]
 8005c32:	693b      	ldr	r3, [r7, #16]
 8005c34:	e066      	b.n	8005d04 <HAL_I2C_Master_Transmit+0x1b4>
 8005c36:	697a      	ldr	r2, [r7, #20]
 8005c38:	6a39      	ldr	r1, [r7, #32]
 8005c3a:	68f8      	ldr	r0, [r7, #12]
 8005c3c:	f002 f960 	bl	8007f00 <I2C_WaitOnTXEFlagUntilTimeout>
 8005c40:	4603      	mov	r3, r0
 8005c42:	2b00      	cmp	r3, #0
 8005c44:	d00d      	beq.n	8005c62 <HAL_I2C_Master_Transmit+0x112>
 8005c46:	68fb      	ldr	r3, [r7, #12]
 8005c48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c4a:	2b04      	cmp	r3, #4
 8005c4c:	d107      	bne.n	8005c5e <HAL_I2C_Master_Transmit+0x10e>
 8005c4e:	68fb      	ldr	r3, [r7, #12]
 8005c50:	681b      	ldr	r3, [r3, #0]
 8005c52:	681a      	ldr	r2, [r3, #0]
 8005c54:	68fb      	ldr	r3, [r7, #12]
 8005c56:	681b      	ldr	r3, [r3, #0]
 8005c58:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005c5c:	601a      	str	r2, [r3, #0]
 8005c5e:	2301      	movs	r3, #1
 8005c60:	e06b      	b.n	8005d3a <HAL_I2C_Master_Transmit+0x1ea>
 8005c62:	68fb      	ldr	r3, [r7, #12]
 8005c64:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c66:	781a      	ldrb	r2, [r3, #0]
 8005c68:	68fb      	ldr	r3, [r7, #12]
 8005c6a:	681b      	ldr	r3, [r3, #0]
 8005c6c:	611a      	str	r2, [r3, #16]
 8005c6e:	68fb      	ldr	r3, [r7, #12]
 8005c70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c72:	1c5a      	adds	r2, r3, #1
 8005c74:	68fb      	ldr	r3, [r7, #12]
 8005c76:	625a      	str	r2, [r3, #36]	; 0x24
 8005c78:	68fb      	ldr	r3, [r7, #12]
 8005c7a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005c7c:	b29b      	uxth	r3, r3
 8005c7e:	3b01      	subs	r3, #1
 8005c80:	b29a      	uxth	r2, r3
 8005c82:	68fb      	ldr	r3, [r7, #12]
 8005c84:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005c86:	68fb      	ldr	r3, [r7, #12]
 8005c88:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005c8a:	3b01      	subs	r3, #1
 8005c8c:	b29a      	uxth	r2, r3
 8005c8e:	68fb      	ldr	r3, [r7, #12]
 8005c90:	851a      	strh	r2, [r3, #40]	; 0x28
 8005c92:	68fb      	ldr	r3, [r7, #12]
 8005c94:	681b      	ldr	r3, [r3, #0]
 8005c96:	695b      	ldr	r3, [r3, #20]
 8005c98:	f003 0304 	and.w	r3, r3, #4
 8005c9c:	2b04      	cmp	r3, #4
 8005c9e:	d11b      	bne.n	8005cd8 <HAL_I2C_Master_Transmit+0x188>
 8005ca0:	68fb      	ldr	r3, [r7, #12]
 8005ca2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005ca4:	2b00      	cmp	r3, #0
 8005ca6:	d017      	beq.n	8005cd8 <HAL_I2C_Master_Transmit+0x188>
 8005ca8:	68fb      	ldr	r3, [r7, #12]
 8005caa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cac:	781a      	ldrb	r2, [r3, #0]
 8005cae:	68fb      	ldr	r3, [r7, #12]
 8005cb0:	681b      	ldr	r3, [r3, #0]
 8005cb2:	611a      	str	r2, [r3, #16]
 8005cb4:	68fb      	ldr	r3, [r7, #12]
 8005cb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cb8:	1c5a      	adds	r2, r3, #1
 8005cba:	68fb      	ldr	r3, [r7, #12]
 8005cbc:	625a      	str	r2, [r3, #36]	; 0x24
 8005cbe:	68fb      	ldr	r3, [r7, #12]
 8005cc0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005cc2:	b29b      	uxth	r3, r3
 8005cc4:	3b01      	subs	r3, #1
 8005cc6:	b29a      	uxth	r2, r3
 8005cc8:	68fb      	ldr	r3, [r7, #12]
 8005cca:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005ccc:	68fb      	ldr	r3, [r7, #12]
 8005cce:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005cd0:	3b01      	subs	r3, #1
 8005cd2:	b29a      	uxth	r2, r3
 8005cd4:	68fb      	ldr	r3, [r7, #12]
 8005cd6:	851a      	strh	r2, [r3, #40]	; 0x28
 8005cd8:	697a      	ldr	r2, [r7, #20]
 8005cda:	6a39      	ldr	r1, [r7, #32]
 8005cdc:	68f8      	ldr	r0, [r7, #12]
 8005cde:	f002 f950 	bl	8007f82 <I2C_WaitOnBTFFlagUntilTimeout>
 8005ce2:	4603      	mov	r3, r0
 8005ce4:	2b00      	cmp	r3, #0
 8005ce6:	d00d      	beq.n	8005d04 <HAL_I2C_Master_Transmit+0x1b4>
 8005ce8:	68fb      	ldr	r3, [r7, #12]
 8005cea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005cec:	2b04      	cmp	r3, #4
 8005cee:	d107      	bne.n	8005d00 <HAL_I2C_Master_Transmit+0x1b0>
 8005cf0:	68fb      	ldr	r3, [r7, #12]
 8005cf2:	681b      	ldr	r3, [r3, #0]
 8005cf4:	681a      	ldr	r2, [r3, #0]
 8005cf6:	68fb      	ldr	r3, [r7, #12]
 8005cf8:	681b      	ldr	r3, [r3, #0]
 8005cfa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005cfe:	601a      	str	r2, [r3, #0]
 8005d00:	2301      	movs	r3, #1
 8005d02:	e01a      	b.n	8005d3a <HAL_I2C_Master_Transmit+0x1ea>
 8005d04:	68fb      	ldr	r3, [r7, #12]
 8005d06:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005d08:	2b00      	cmp	r3, #0
 8005d0a:	d194      	bne.n	8005c36 <HAL_I2C_Master_Transmit+0xe6>
 8005d0c:	68fb      	ldr	r3, [r7, #12]
 8005d0e:	681b      	ldr	r3, [r3, #0]
 8005d10:	681a      	ldr	r2, [r3, #0]
 8005d12:	68fb      	ldr	r3, [r7, #12]
 8005d14:	681b      	ldr	r3, [r3, #0]
 8005d16:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005d1a:	601a      	str	r2, [r3, #0]
 8005d1c:	68fb      	ldr	r3, [r7, #12]
 8005d1e:	2220      	movs	r2, #32
 8005d20:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005d24:	68fb      	ldr	r3, [r7, #12]
 8005d26:	2200      	movs	r2, #0
 8005d28:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005d2c:	68fb      	ldr	r3, [r7, #12]
 8005d2e:	2200      	movs	r2, #0
 8005d30:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005d34:	2300      	movs	r3, #0
 8005d36:	e000      	b.n	8005d3a <HAL_I2C_Master_Transmit+0x1ea>
 8005d38:	2302      	movs	r3, #2
 8005d3a:	4618      	mov	r0, r3
 8005d3c:	3718      	adds	r7, #24
 8005d3e:	46bd      	mov	sp, r7
 8005d40:	bd80      	pop	{r7, pc}
 8005d42:	bf00      	nop
 8005d44:	00100002 	.word	0x00100002
 8005d48:	ffff0000 	.word	0xffff0000

08005d4c <HAL_I2C_Master_Receive>:
 8005d4c:	b580      	push	{r7, lr}
 8005d4e:	b08c      	sub	sp, #48	; 0x30
 8005d50:	af02      	add	r7, sp, #8
 8005d52:	60f8      	str	r0, [r7, #12]
 8005d54:	607a      	str	r2, [r7, #4]
 8005d56:	461a      	mov	r2, r3
 8005d58:	460b      	mov	r3, r1
 8005d5a:	817b      	strh	r3, [r7, #10]
 8005d5c:	4613      	mov	r3, r2
 8005d5e:	813b      	strh	r3, [r7, #8]
 8005d60:	f7fe feb6 	bl	8004ad0 <HAL_GetTick>
 8005d64:	6278      	str	r0, [r7, #36]	; 0x24
 8005d66:	68fb      	ldr	r3, [r7, #12]
 8005d68:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005d6c:	b2db      	uxtb	r3, r3
 8005d6e:	2b20      	cmp	r3, #32
 8005d70:	f040 820b 	bne.w	800618a <HAL_I2C_Master_Receive+0x43e>
 8005d74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005d76:	9300      	str	r3, [sp, #0]
 8005d78:	2319      	movs	r3, #25
 8005d7a:	2201      	movs	r2, #1
 8005d7c:	497c      	ldr	r1, [pc, #496]	; (8005f70 <HAL_I2C_Master_Receive+0x224>)
 8005d7e:	68f8      	ldr	r0, [r7, #12]
 8005d80:	f001 ffe8 	bl	8007d54 <I2C_WaitOnFlagUntilTimeout>
 8005d84:	4603      	mov	r3, r0
 8005d86:	2b00      	cmp	r3, #0
 8005d88:	d001      	beq.n	8005d8e <HAL_I2C_Master_Receive+0x42>
 8005d8a:	2302      	movs	r3, #2
 8005d8c:	e1fe      	b.n	800618c <HAL_I2C_Master_Receive+0x440>
 8005d8e:	68fb      	ldr	r3, [r7, #12]
 8005d90:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005d94:	2b01      	cmp	r3, #1
 8005d96:	d101      	bne.n	8005d9c <HAL_I2C_Master_Receive+0x50>
 8005d98:	2302      	movs	r3, #2
 8005d9a:	e1f7      	b.n	800618c <HAL_I2C_Master_Receive+0x440>
 8005d9c:	68fb      	ldr	r3, [r7, #12]
 8005d9e:	2201      	movs	r2, #1
 8005da0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005da4:	68fb      	ldr	r3, [r7, #12]
 8005da6:	681b      	ldr	r3, [r3, #0]
 8005da8:	681b      	ldr	r3, [r3, #0]
 8005daa:	f003 0301 	and.w	r3, r3, #1
 8005dae:	2b01      	cmp	r3, #1
 8005db0:	d007      	beq.n	8005dc2 <HAL_I2C_Master_Receive+0x76>
 8005db2:	68fb      	ldr	r3, [r7, #12]
 8005db4:	681b      	ldr	r3, [r3, #0]
 8005db6:	681a      	ldr	r2, [r3, #0]
 8005db8:	68fb      	ldr	r3, [r7, #12]
 8005dba:	681b      	ldr	r3, [r3, #0]
 8005dbc:	f042 0201 	orr.w	r2, r2, #1
 8005dc0:	601a      	str	r2, [r3, #0]
 8005dc2:	68fb      	ldr	r3, [r7, #12]
 8005dc4:	681b      	ldr	r3, [r3, #0]
 8005dc6:	681a      	ldr	r2, [r3, #0]
 8005dc8:	68fb      	ldr	r3, [r7, #12]
 8005dca:	681b      	ldr	r3, [r3, #0]
 8005dcc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005dd0:	601a      	str	r2, [r3, #0]
 8005dd2:	68fb      	ldr	r3, [r7, #12]
 8005dd4:	2222      	movs	r2, #34	; 0x22
 8005dd6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005dda:	68fb      	ldr	r3, [r7, #12]
 8005ddc:	2210      	movs	r2, #16
 8005dde:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005de2:	68fb      	ldr	r3, [r7, #12]
 8005de4:	2200      	movs	r2, #0
 8005de6:	641a      	str	r2, [r3, #64]	; 0x40
 8005de8:	68fb      	ldr	r3, [r7, #12]
 8005dea:	687a      	ldr	r2, [r7, #4]
 8005dec:	625a      	str	r2, [r3, #36]	; 0x24
 8005dee:	68fb      	ldr	r3, [r7, #12]
 8005df0:	893a      	ldrh	r2, [r7, #8]
 8005df2:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005df4:	68fb      	ldr	r3, [r7, #12]
 8005df6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005df8:	b29a      	uxth	r2, r3
 8005dfa:	68fb      	ldr	r3, [r7, #12]
 8005dfc:	851a      	strh	r2, [r3, #40]	; 0x28
 8005dfe:	68fb      	ldr	r3, [r7, #12]
 8005e00:	4a5c      	ldr	r2, [pc, #368]	; (8005f74 <HAL_I2C_Master_Receive+0x228>)
 8005e02:	62da      	str	r2, [r3, #44]	; 0x2c
 8005e04:	8979      	ldrh	r1, [r7, #10]
 8005e06:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005e08:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005e0a:	68f8      	ldr	r0, [r7, #12]
 8005e0c:	f001 fe2c 	bl	8007a68 <I2C_MasterRequestRead>
 8005e10:	4603      	mov	r3, r0
 8005e12:	2b00      	cmp	r3, #0
 8005e14:	d001      	beq.n	8005e1a <HAL_I2C_Master_Receive+0xce>
 8005e16:	2301      	movs	r3, #1
 8005e18:	e1b8      	b.n	800618c <HAL_I2C_Master_Receive+0x440>
 8005e1a:	68fb      	ldr	r3, [r7, #12]
 8005e1c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005e1e:	2b00      	cmp	r3, #0
 8005e20:	d113      	bne.n	8005e4a <HAL_I2C_Master_Receive+0xfe>
 8005e22:	2300      	movs	r3, #0
 8005e24:	623b      	str	r3, [r7, #32]
 8005e26:	68fb      	ldr	r3, [r7, #12]
 8005e28:	681b      	ldr	r3, [r3, #0]
 8005e2a:	695b      	ldr	r3, [r3, #20]
 8005e2c:	623b      	str	r3, [r7, #32]
 8005e2e:	68fb      	ldr	r3, [r7, #12]
 8005e30:	681b      	ldr	r3, [r3, #0]
 8005e32:	699b      	ldr	r3, [r3, #24]
 8005e34:	623b      	str	r3, [r7, #32]
 8005e36:	6a3b      	ldr	r3, [r7, #32]
 8005e38:	68fb      	ldr	r3, [r7, #12]
 8005e3a:	681b      	ldr	r3, [r3, #0]
 8005e3c:	681a      	ldr	r2, [r3, #0]
 8005e3e:	68fb      	ldr	r3, [r7, #12]
 8005e40:	681b      	ldr	r3, [r3, #0]
 8005e42:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005e46:	601a      	str	r2, [r3, #0]
 8005e48:	e18c      	b.n	8006164 <HAL_I2C_Master_Receive+0x418>
 8005e4a:	68fb      	ldr	r3, [r7, #12]
 8005e4c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005e4e:	2b01      	cmp	r3, #1
 8005e50:	d11b      	bne.n	8005e8a <HAL_I2C_Master_Receive+0x13e>
 8005e52:	68fb      	ldr	r3, [r7, #12]
 8005e54:	681b      	ldr	r3, [r3, #0]
 8005e56:	681a      	ldr	r2, [r3, #0]
 8005e58:	68fb      	ldr	r3, [r7, #12]
 8005e5a:	681b      	ldr	r3, [r3, #0]
 8005e5c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005e60:	601a      	str	r2, [r3, #0]
 8005e62:	2300      	movs	r3, #0
 8005e64:	61fb      	str	r3, [r7, #28]
 8005e66:	68fb      	ldr	r3, [r7, #12]
 8005e68:	681b      	ldr	r3, [r3, #0]
 8005e6a:	695b      	ldr	r3, [r3, #20]
 8005e6c:	61fb      	str	r3, [r7, #28]
 8005e6e:	68fb      	ldr	r3, [r7, #12]
 8005e70:	681b      	ldr	r3, [r3, #0]
 8005e72:	699b      	ldr	r3, [r3, #24]
 8005e74:	61fb      	str	r3, [r7, #28]
 8005e76:	69fb      	ldr	r3, [r7, #28]
 8005e78:	68fb      	ldr	r3, [r7, #12]
 8005e7a:	681b      	ldr	r3, [r3, #0]
 8005e7c:	681a      	ldr	r2, [r3, #0]
 8005e7e:	68fb      	ldr	r3, [r7, #12]
 8005e80:	681b      	ldr	r3, [r3, #0]
 8005e82:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005e86:	601a      	str	r2, [r3, #0]
 8005e88:	e16c      	b.n	8006164 <HAL_I2C_Master_Receive+0x418>
 8005e8a:	68fb      	ldr	r3, [r7, #12]
 8005e8c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005e8e:	2b02      	cmp	r3, #2
 8005e90:	d11b      	bne.n	8005eca <HAL_I2C_Master_Receive+0x17e>
 8005e92:	68fb      	ldr	r3, [r7, #12]
 8005e94:	681b      	ldr	r3, [r3, #0]
 8005e96:	681a      	ldr	r2, [r3, #0]
 8005e98:	68fb      	ldr	r3, [r7, #12]
 8005e9a:	681b      	ldr	r3, [r3, #0]
 8005e9c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005ea0:	601a      	str	r2, [r3, #0]
 8005ea2:	68fb      	ldr	r3, [r7, #12]
 8005ea4:	681b      	ldr	r3, [r3, #0]
 8005ea6:	681a      	ldr	r2, [r3, #0]
 8005ea8:	68fb      	ldr	r3, [r7, #12]
 8005eaa:	681b      	ldr	r3, [r3, #0]
 8005eac:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005eb0:	601a      	str	r2, [r3, #0]
 8005eb2:	2300      	movs	r3, #0
 8005eb4:	61bb      	str	r3, [r7, #24]
 8005eb6:	68fb      	ldr	r3, [r7, #12]
 8005eb8:	681b      	ldr	r3, [r3, #0]
 8005eba:	695b      	ldr	r3, [r3, #20]
 8005ebc:	61bb      	str	r3, [r7, #24]
 8005ebe:	68fb      	ldr	r3, [r7, #12]
 8005ec0:	681b      	ldr	r3, [r3, #0]
 8005ec2:	699b      	ldr	r3, [r3, #24]
 8005ec4:	61bb      	str	r3, [r7, #24]
 8005ec6:	69bb      	ldr	r3, [r7, #24]
 8005ec8:	e14c      	b.n	8006164 <HAL_I2C_Master_Receive+0x418>
 8005eca:	68fb      	ldr	r3, [r7, #12]
 8005ecc:	681b      	ldr	r3, [r3, #0]
 8005ece:	681a      	ldr	r2, [r3, #0]
 8005ed0:	68fb      	ldr	r3, [r7, #12]
 8005ed2:	681b      	ldr	r3, [r3, #0]
 8005ed4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005ed8:	601a      	str	r2, [r3, #0]
 8005eda:	2300      	movs	r3, #0
 8005edc:	617b      	str	r3, [r7, #20]
 8005ede:	68fb      	ldr	r3, [r7, #12]
 8005ee0:	681b      	ldr	r3, [r3, #0]
 8005ee2:	695b      	ldr	r3, [r3, #20]
 8005ee4:	617b      	str	r3, [r7, #20]
 8005ee6:	68fb      	ldr	r3, [r7, #12]
 8005ee8:	681b      	ldr	r3, [r3, #0]
 8005eea:	699b      	ldr	r3, [r3, #24]
 8005eec:	617b      	str	r3, [r7, #20]
 8005eee:	697b      	ldr	r3, [r7, #20]
 8005ef0:	e138      	b.n	8006164 <HAL_I2C_Master_Receive+0x418>
 8005ef2:	68fb      	ldr	r3, [r7, #12]
 8005ef4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005ef6:	2b03      	cmp	r3, #3
 8005ef8:	f200 80f1 	bhi.w	80060de <HAL_I2C_Master_Receive+0x392>
 8005efc:	68fb      	ldr	r3, [r7, #12]
 8005efe:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005f00:	2b01      	cmp	r3, #1
 8005f02:	d123      	bne.n	8005f4c <HAL_I2C_Master_Receive+0x200>
 8005f04:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005f06:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8005f08:	68f8      	ldr	r0, [r7, #12]
 8005f0a:	f002 f8ad 	bl	8008068 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005f0e:	4603      	mov	r3, r0
 8005f10:	2b00      	cmp	r3, #0
 8005f12:	d001      	beq.n	8005f18 <HAL_I2C_Master_Receive+0x1cc>
 8005f14:	2301      	movs	r3, #1
 8005f16:	e139      	b.n	800618c <HAL_I2C_Master_Receive+0x440>
 8005f18:	68fb      	ldr	r3, [r7, #12]
 8005f1a:	681b      	ldr	r3, [r3, #0]
 8005f1c:	691a      	ldr	r2, [r3, #16]
 8005f1e:	68fb      	ldr	r3, [r7, #12]
 8005f20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f22:	b2d2      	uxtb	r2, r2
 8005f24:	701a      	strb	r2, [r3, #0]
 8005f26:	68fb      	ldr	r3, [r7, #12]
 8005f28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f2a:	1c5a      	adds	r2, r3, #1
 8005f2c:	68fb      	ldr	r3, [r7, #12]
 8005f2e:	625a      	str	r2, [r3, #36]	; 0x24
 8005f30:	68fb      	ldr	r3, [r7, #12]
 8005f32:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005f34:	3b01      	subs	r3, #1
 8005f36:	b29a      	uxth	r2, r3
 8005f38:	68fb      	ldr	r3, [r7, #12]
 8005f3a:	851a      	strh	r2, [r3, #40]	; 0x28
 8005f3c:	68fb      	ldr	r3, [r7, #12]
 8005f3e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005f40:	b29b      	uxth	r3, r3
 8005f42:	3b01      	subs	r3, #1
 8005f44:	b29a      	uxth	r2, r3
 8005f46:	68fb      	ldr	r3, [r7, #12]
 8005f48:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005f4a:	e10b      	b.n	8006164 <HAL_I2C_Master_Receive+0x418>
 8005f4c:	68fb      	ldr	r3, [r7, #12]
 8005f4e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005f50:	2b02      	cmp	r3, #2
 8005f52:	d14e      	bne.n	8005ff2 <HAL_I2C_Master_Receive+0x2a6>
 8005f54:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005f56:	9300      	str	r3, [sp, #0]
 8005f58:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f5a:	2200      	movs	r2, #0
 8005f5c:	4906      	ldr	r1, [pc, #24]	; (8005f78 <HAL_I2C_Master_Receive+0x22c>)
 8005f5e:	68f8      	ldr	r0, [r7, #12]
 8005f60:	f001 fef8 	bl	8007d54 <I2C_WaitOnFlagUntilTimeout>
 8005f64:	4603      	mov	r3, r0
 8005f66:	2b00      	cmp	r3, #0
 8005f68:	d008      	beq.n	8005f7c <HAL_I2C_Master_Receive+0x230>
 8005f6a:	2301      	movs	r3, #1
 8005f6c:	e10e      	b.n	800618c <HAL_I2C_Master_Receive+0x440>
 8005f6e:	bf00      	nop
 8005f70:	00100002 	.word	0x00100002
 8005f74:	ffff0000 	.word	0xffff0000
 8005f78:	00010004 	.word	0x00010004
 8005f7c:	68fb      	ldr	r3, [r7, #12]
 8005f7e:	681b      	ldr	r3, [r3, #0]
 8005f80:	681a      	ldr	r2, [r3, #0]
 8005f82:	68fb      	ldr	r3, [r7, #12]
 8005f84:	681b      	ldr	r3, [r3, #0]
 8005f86:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005f8a:	601a      	str	r2, [r3, #0]
 8005f8c:	68fb      	ldr	r3, [r7, #12]
 8005f8e:	681b      	ldr	r3, [r3, #0]
 8005f90:	691a      	ldr	r2, [r3, #16]
 8005f92:	68fb      	ldr	r3, [r7, #12]
 8005f94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f96:	b2d2      	uxtb	r2, r2
 8005f98:	701a      	strb	r2, [r3, #0]
 8005f9a:	68fb      	ldr	r3, [r7, #12]
 8005f9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f9e:	1c5a      	adds	r2, r3, #1
 8005fa0:	68fb      	ldr	r3, [r7, #12]
 8005fa2:	625a      	str	r2, [r3, #36]	; 0x24
 8005fa4:	68fb      	ldr	r3, [r7, #12]
 8005fa6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005fa8:	3b01      	subs	r3, #1
 8005faa:	b29a      	uxth	r2, r3
 8005fac:	68fb      	ldr	r3, [r7, #12]
 8005fae:	851a      	strh	r2, [r3, #40]	; 0x28
 8005fb0:	68fb      	ldr	r3, [r7, #12]
 8005fb2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005fb4:	b29b      	uxth	r3, r3
 8005fb6:	3b01      	subs	r3, #1
 8005fb8:	b29a      	uxth	r2, r3
 8005fba:	68fb      	ldr	r3, [r7, #12]
 8005fbc:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005fbe:	68fb      	ldr	r3, [r7, #12]
 8005fc0:	681b      	ldr	r3, [r3, #0]
 8005fc2:	691a      	ldr	r2, [r3, #16]
 8005fc4:	68fb      	ldr	r3, [r7, #12]
 8005fc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fc8:	b2d2      	uxtb	r2, r2
 8005fca:	701a      	strb	r2, [r3, #0]
 8005fcc:	68fb      	ldr	r3, [r7, #12]
 8005fce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fd0:	1c5a      	adds	r2, r3, #1
 8005fd2:	68fb      	ldr	r3, [r7, #12]
 8005fd4:	625a      	str	r2, [r3, #36]	; 0x24
 8005fd6:	68fb      	ldr	r3, [r7, #12]
 8005fd8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005fda:	3b01      	subs	r3, #1
 8005fdc:	b29a      	uxth	r2, r3
 8005fde:	68fb      	ldr	r3, [r7, #12]
 8005fe0:	851a      	strh	r2, [r3, #40]	; 0x28
 8005fe2:	68fb      	ldr	r3, [r7, #12]
 8005fe4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005fe6:	b29b      	uxth	r3, r3
 8005fe8:	3b01      	subs	r3, #1
 8005fea:	b29a      	uxth	r2, r3
 8005fec:	68fb      	ldr	r3, [r7, #12]
 8005fee:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005ff0:	e0b8      	b.n	8006164 <HAL_I2C_Master_Receive+0x418>
 8005ff2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005ff4:	9300      	str	r3, [sp, #0]
 8005ff6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005ff8:	2200      	movs	r2, #0
 8005ffa:	4966      	ldr	r1, [pc, #408]	; (8006194 <HAL_I2C_Master_Receive+0x448>)
 8005ffc:	68f8      	ldr	r0, [r7, #12]
 8005ffe:	f001 fea9 	bl	8007d54 <I2C_WaitOnFlagUntilTimeout>
 8006002:	4603      	mov	r3, r0
 8006004:	2b00      	cmp	r3, #0
 8006006:	d001      	beq.n	800600c <HAL_I2C_Master_Receive+0x2c0>
 8006008:	2301      	movs	r3, #1
 800600a:	e0bf      	b.n	800618c <HAL_I2C_Master_Receive+0x440>
 800600c:	68fb      	ldr	r3, [r7, #12]
 800600e:	681b      	ldr	r3, [r3, #0]
 8006010:	681a      	ldr	r2, [r3, #0]
 8006012:	68fb      	ldr	r3, [r7, #12]
 8006014:	681b      	ldr	r3, [r3, #0]
 8006016:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800601a:	601a      	str	r2, [r3, #0]
 800601c:	68fb      	ldr	r3, [r7, #12]
 800601e:	681b      	ldr	r3, [r3, #0]
 8006020:	691a      	ldr	r2, [r3, #16]
 8006022:	68fb      	ldr	r3, [r7, #12]
 8006024:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006026:	b2d2      	uxtb	r2, r2
 8006028:	701a      	strb	r2, [r3, #0]
 800602a:	68fb      	ldr	r3, [r7, #12]
 800602c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800602e:	1c5a      	adds	r2, r3, #1
 8006030:	68fb      	ldr	r3, [r7, #12]
 8006032:	625a      	str	r2, [r3, #36]	; 0x24
 8006034:	68fb      	ldr	r3, [r7, #12]
 8006036:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006038:	3b01      	subs	r3, #1
 800603a:	b29a      	uxth	r2, r3
 800603c:	68fb      	ldr	r3, [r7, #12]
 800603e:	851a      	strh	r2, [r3, #40]	; 0x28
 8006040:	68fb      	ldr	r3, [r7, #12]
 8006042:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006044:	b29b      	uxth	r3, r3
 8006046:	3b01      	subs	r3, #1
 8006048:	b29a      	uxth	r2, r3
 800604a:	68fb      	ldr	r3, [r7, #12]
 800604c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800604e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006050:	9300      	str	r3, [sp, #0]
 8006052:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006054:	2200      	movs	r2, #0
 8006056:	494f      	ldr	r1, [pc, #316]	; (8006194 <HAL_I2C_Master_Receive+0x448>)
 8006058:	68f8      	ldr	r0, [r7, #12]
 800605a:	f001 fe7b 	bl	8007d54 <I2C_WaitOnFlagUntilTimeout>
 800605e:	4603      	mov	r3, r0
 8006060:	2b00      	cmp	r3, #0
 8006062:	d001      	beq.n	8006068 <HAL_I2C_Master_Receive+0x31c>
 8006064:	2301      	movs	r3, #1
 8006066:	e091      	b.n	800618c <HAL_I2C_Master_Receive+0x440>
 8006068:	68fb      	ldr	r3, [r7, #12]
 800606a:	681b      	ldr	r3, [r3, #0]
 800606c:	681a      	ldr	r2, [r3, #0]
 800606e:	68fb      	ldr	r3, [r7, #12]
 8006070:	681b      	ldr	r3, [r3, #0]
 8006072:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006076:	601a      	str	r2, [r3, #0]
 8006078:	68fb      	ldr	r3, [r7, #12]
 800607a:	681b      	ldr	r3, [r3, #0]
 800607c:	691a      	ldr	r2, [r3, #16]
 800607e:	68fb      	ldr	r3, [r7, #12]
 8006080:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006082:	b2d2      	uxtb	r2, r2
 8006084:	701a      	strb	r2, [r3, #0]
 8006086:	68fb      	ldr	r3, [r7, #12]
 8006088:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800608a:	1c5a      	adds	r2, r3, #1
 800608c:	68fb      	ldr	r3, [r7, #12]
 800608e:	625a      	str	r2, [r3, #36]	; 0x24
 8006090:	68fb      	ldr	r3, [r7, #12]
 8006092:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006094:	3b01      	subs	r3, #1
 8006096:	b29a      	uxth	r2, r3
 8006098:	68fb      	ldr	r3, [r7, #12]
 800609a:	851a      	strh	r2, [r3, #40]	; 0x28
 800609c:	68fb      	ldr	r3, [r7, #12]
 800609e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80060a0:	b29b      	uxth	r3, r3
 80060a2:	3b01      	subs	r3, #1
 80060a4:	b29a      	uxth	r2, r3
 80060a6:	68fb      	ldr	r3, [r7, #12]
 80060a8:	855a      	strh	r2, [r3, #42]	; 0x2a
 80060aa:	68fb      	ldr	r3, [r7, #12]
 80060ac:	681b      	ldr	r3, [r3, #0]
 80060ae:	691a      	ldr	r2, [r3, #16]
 80060b0:	68fb      	ldr	r3, [r7, #12]
 80060b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060b4:	b2d2      	uxtb	r2, r2
 80060b6:	701a      	strb	r2, [r3, #0]
 80060b8:	68fb      	ldr	r3, [r7, #12]
 80060ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060bc:	1c5a      	adds	r2, r3, #1
 80060be:	68fb      	ldr	r3, [r7, #12]
 80060c0:	625a      	str	r2, [r3, #36]	; 0x24
 80060c2:	68fb      	ldr	r3, [r7, #12]
 80060c4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80060c6:	3b01      	subs	r3, #1
 80060c8:	b29a      	uxth	r2, r3
 80060ca:	68fb      	ldr	r3, [r7, #12]
 80060cc:	851a      	strh	r2, [r3, #40]	; 0x28
 80060ce:	68fb      	ldr	r3, [r7, #12]
 80060d0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80060d2:	b29b      	uxth	r3, r3
 80060d4:	3b01      	subs	r3, #1
 80060d6:	b29a      	uxth	r2, r3
 80060d8:	68fb      	ldr	r3, [r7, #12]
 80060da:	855a      	strh	r2, [r3, #42]	; 0x2a
 80060dc:	e042      	b.n	8006164 <HAL_I2C_Master_Receive+0x418>
 80060de:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80060e0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80060e2:	68f8      	ldr	r0, [r7, #12]
 80060e4:	f001 ffc0 	bl	8008068 <I2C_WaitOnRXNEFlagUntilTimeout>
 80060e8:	4603      	mov	r3, r0
 80060ea:	2b00      	cmp	r3, #0
 80060ec:	d001      	beq.n	80060f2 <HAL_I2C_Master_Receive+0x3a6>
 80060ee:	2301      	movs	r3, #1
 80060f0:	e04c      	b.n	800618c <HAL_I2C_Master_Receive+0x440>
 80060f2:	68fb      	ldr	r3, [r7, #12]
 80060f4:	681b      	ldr	r3, [r3, #0]
 80060f6:	691a      	ldr	r2, [r3, #16]
 80060f8:	68fb      	ldr	r3, [r7, #12]
 80060fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060fc:	b2d2      	uxtb	r2, r2
 80060fe:	701a      	strb	r2, [r3, #0]
 8006100:	68fb      	ldr	r3, [r7, #12]
 8006102:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006104:	1c5a      	adds	r2, r3, #1
 8006106:	68fb      	ldr	r3, [r7, #12]
 8006108:	625a      	str	r2, [r3, #36]	; 0x24
 800610a:	68fb      	ldr	r3, [r7, #12]
 800610c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800610e:	3b01      	subs	r3, #1
 8006110:	b29a      	uxth	r2, r3
 8006112:	68fb      	ldr	r3, [r7, #12]
 8006114:	851a      	strh	r2, [r3, #40]	; 0x28
 8006116:	68fb      	ldr	r3, [r7, #12]
 8006118:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800611a:	b29b      	uxth	r3, r3
 800611c:	3b01      	subs	r3, #1
 800611e:	b29a      	uxth	r2, r3
 8006120:	68fb      	ldr	r3, [r7, #12]
 8006122:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006124:	68fb      	ldr	r3, [r7, #12]
 8006126:	681b      	ldr	r3, [r3, #0]
 8006128:	695b      	ldr	r3, [r3, #20]
 800612a:	f003 0304 	and.w	r3, r3, #4
 800612e:	2b04      	cmp	r3, #4
 8006130:	d118      	bne.n	8006164 <HAL_I2C_Master_Receive+0x418>
 8006132:	68fb      	ldr	r3, [r7, #12]
 8006134:	681b      	ldr	r3, [r3, #0]
 8006136:	691a      	ldr	r2, [r3, #16]
 8006138:	68fb      	ldr	r3, [r7, #12]
 800613a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800613c:	b2d2      	uxtb	r2, r2
 800613e:	701a      	strb	r2, [r3, #0]
 8006140:	68fb      	ldr	r3, [r7, #12]
 8006142:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006144:	1c5a      	adds	r2, r3, #1
 8006146:	68fb      	ldr	r3, [r7, #12]
 8006148:	625a      	str	r2, [r3, #36]	; 0x24
 800614a:	68fb      	ldr	r3, [r7, #12]
 800614c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800614e:	3b01      	subs	r3, #1
 8006150:	b29a      	uxth	r2, r3
 8006152:	68fb      	ldr	r3, [r7, #12]
 8006154:	851a      	strh	r2, [r3, #40]	; 0x28
 8006156:	68fb      	ldr	r3, [r7, #12]
 8006158:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800615a:	b29b      	uxth	r3, r3
 800615c:	3b01      	subs	r3, #1
 800615e:	b29a      	uxth	r2, r3
 8006160:	68fb      	ldr	r3, [r7, #12]
 8006162:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006164:	68fb      	ldr	r3, [r7, #12]
 8006166:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006168:	2b00      	cmp	r3, #0
 800616a:	f47f aec2 	bne.w	8005ef2 <HAL_I2C_Master_Receive+0x1a6>
 800616e:	68fb      	ldr	r3, [r7, #12]
 8006170:	2220      	movs	r2, #32
 8006172:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006176:	68fb      	ldr	r3, [r7, #12]
 8006178:	2200      	movs	r2, #0
 800617a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800617e:	68fb      	ldr	r3, [r7, #12]
 8006180:	2200      	movs	r2, #0
 8006182:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006186:	2300      	movs	r3, #0
 8006188:	e000      	b.n	800618c <HAL_I2C_Master_Receive+0x440>
 800618a:	2302      	movs	r3, #2
 800618c:	4618      	mov	r0, r3
 800618e:	3728      	adds	r7, #40	; 0x28
 8006190:	46bd      	mov	sp, r7
 8006192:	bd80      	pop	{r7, pc}
 8006194:	00010004 	.word	0x00010004

08006198 <HAL_I2C_EV_IRQHandler>:
 8006198:	b580      	push	{r7, lr}
 800619a:	b088      	sub	sp, #32
 800619c:	af00      	add	r7, sp, #0
 800619e:	6078      	str	r0, [r7, #4]
 80061a0:	2300      	movs	r3, #0
 80061a2:	61bb      	str	r3, [r7, #24]
 80061a4:	687b      	ldr	r3, [r7, #4]
 80061a6:	681b      	ldr	r3, [r3, #0]
 80061a8:	685b      	ldr	r3, [r3, #4]
 80061aa:	617b      	str	r3, [r7, #20]
 80061ac:	687b      	ldr	r3, [r7, #4]
 80061ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80061b0:	613b      	str	r3, [r7, #16]
 80061b2:	687b      	ldr	r3, [r7, #4]
 80061b4:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80061b8:	73fb      	strb	r3, [r7, #15]
 80061ba:	687b      	ldr	r3, [r7, #4]
 80061bc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80061c0:	73bb      	strb	r3, [r7, #14]
 80061c2:	7bfb      	ldrb	r3, [r7, #15]
 80061c4:	2b10      	cmp	r3, #16
 80061c6:	d003      	beq.n	80061d0 <HAL_I2C_EV_IRQHandler+0x38>
 80061c8:	7bfb      	ldrb	r3, [r7, #15]
 80061ca:	2b40      	cmp	r3, #64	; 0x40
 80061cc:	f040 80c1 	bne.w	8006352 <HAL_I2C_EV_IRQHandler+0x1ba>
 80061d0:	687b      	ldr	r3, [r7, #4]
 80061d2:	681b      	ldr	r3, [r3, #0]
 80061d4:	699b      	ldr	r3, [r3, #24]
 80061d6:	61bb      	str	r3, [r7, #24]
 80061d8:	687b      	ldr	r3, [r7, #4]
 80061da:	681b      	ldr	r3, [r3, #0]
 80061dc:	695b      	ldr	r3, [r3, #20]
 80061de:	61fb      	str	r3, [r7, #28]
 80061e0:	69fb      	ldr	r3, [r7, #28]
 80061e2:	f003 0301 	and.w	r3, r3, #1
 80061e6:	2b00      	cmp	r3, #0
 80061e8:	d10d      	bne.n	8006206 <HAL_I2C_EV_IRQHandler+0x6e>
 80061ea:	693b      	ldr	r3, [r7, #16]
 80061ec:	f5b3 0f2a 	cmp.w	r3, #11141120	; 0xaa0000
 80061f0:	d003      	beq.n	80061fa <HAL_I2C_EV_IRQHandler+0x62>
 80061f2:	693b      	ldr	r3, [r7, #16]
 80061f4:	f1b3 4f2a 	cmp.w	r3, #2852126720	; 0xaa000000
 80061f8:	d101      	bne.n	80061fe <HAL_I2C_EV_IRQHandler+0x66>
 80061fa:	2301      	movs	r3, #1
 80061fc:	e000      	b.n	8006200 <HAL_I2C_EV_IRQHandler+0x68>
 80061fe:	2300      	movs	r3, #0
 8006200:	2b01      	cmp	r3, #1
 8006202:	f000 8132 	beq.w	800646a <HAL_I2C_EV_IRQHandler+0x2d2>
 8006206:	69fb      	ldr	r3, [r7, #28]
 8006208:	f003 0301 	and.w	r3, r3, #1
 800620c:	2b00      	cmp	r3, #0
 800620e:	d00c      	beq.n	800622a <HAL_I2C_EV_IRQHandler+0x92>
 8006210:	697b      	ldr	r3, [r7, #20]
 8006212:	0a5b      	lsrs	r3, r3, #9
 8006214:	f003 0301 	and.w	r3, r3, #1
 8006218:	2b00      	cmp	r3, #0
 800621a:	d006      	beq.n	800622a <HAL_I2C_EV_IRQHandler+0x92>
 800621c:	6878      	ldr	r0, [r7, #4]
 800621e:	f001 ffa8 	bl	8008172 <I2C_ConvertOtherXferOptions>
 8006222:	6878      	ldr	r0, [r7, #4]
 8006224:	f000 fd83 	bl	8006d2e <I2C_Master_SB>
 8006228:	e092      	b.n	8006350 <HAL_I2C_EV_IRQHandler+0x1b8>
 800622a:	69fb      	ldr	r3, [r7, #28]
 800622c:	08db      	lsrs	r3, r3, #3
 800622e:	f003 0301 	and.w	r3, r3, #1
 8006232:	2b00      	cmp	r3, #0
 8006234:	d009      	beq.n	800624a <HAL_I2C_EV_IRQHandler+0xb2>
 8006236:	697b      	ldr	r3, [r7, #20]
 8006238:	0a5b      	lsrs	r3, r3, #9
 800623a:	f003 0301 	and.w	r3, r3, #1
 800623e:	2b00      	cmp	r3, #0
 8006240:	d003      	beq.n	800624a <HAL_I2C_EV_IRQHandler+0xb2>
 8006242:	6878      	ldr	r0, [r7, #4]
 8006244:	f000 fdf9 	bl	8006e3a <I2C_Master_ADD10>
 8006248:	e082      	b.n	8006350 <HAL_I2C_EV_IRQHandler+0x1b8>
 800624a:	69fb      	ldr	r3, [r7, #28]
 800624c:	085b      	lsrs	r3, r3, #1
 800624e:	f003 0301 	and.w	r3, r3, #1
 8006252:	2b00      	cmp	r3, #0
 8006254:	d009      	beq.n	800626a <HAL_I2C_EV_IRQHandler+0xd2>
 8006256:	697b      	ldr	r3, [r7, #20]
 8006258:	0a5b      	lsrs	r3, r3, #9
 800625a:	f003 0301 	and.w	r3, r3, #1
 800625e:	2b00      	cmp	r3, #0
 8006260:	d003      	beq.n	800626a <HAL_I2C_EV_IRQHandler+0xd2>
 8006262:	6878      	ldr	r0, [r7, #4]
 8006264:	f000 fe13 	bl	8006e8e <I2C_Master_ADDR>
 8006268:	e072      	b.n	8006350 <HAL_I2C_EV_IRQHandler+0x1b8>
 800626a:	69bb      	ldr	r3, [r7, #24]
 800626c:	089b      	lsrs	r3, r3, #2
 800626e:	f003 0301 	and.w	r3, r3, #1
 8006272:	2b00      	cmp	r3, #0
 8006274:	d03b      	beq.n	80062ee <HAL_I2C_EV_IRQHandler+0x156>
 8006276:	687b      	ldr	r3, [r7, #4]
 8006278:	681b      	ldr	r3, [r3, #0]
 800627a:	685b      	ldr	r3, [r3, #4]
 800627c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8006280:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006284:	f000 80f3 	beq.w	800646e <HAL_I2C_EV_IRQHandler+0x2d6>
 8006288:	69fb      	ldr	r3, [r7, #28]
 800628a:	09db      	lsrs	r3, r3, #7
 800628c:	f003 0301 	and.w	r3, r3, #1
 8006290:	2b00      	cmp	r3, #0
 8006292:	d00f      	beq.n	80062b4 <HAL_I2C_EV_IRQHandler+0x11c>
 8006294:	697b      	ldr	r3, [r7, #20]
 8006296:	0a9b      	lsrs	r3, r3, #10
 8006298:	f003 0301 	and.w	r3, r3, #1
 800629c:	2b00      	cmp	r3, #0
 800629e:	d009      	beq.n	80062b4 <HAL_I2C_EV_IRQHandler+0x11c>
 80062a0:	69fb      	ldr	r3, [r7, #28]
 80062a2:	089b      	lsrs	r3, r3, #2
 80062a4:	f003 0301 	and.w	r3, r3, #1
 80062a8:	2b00      	cmp	r3, #0
 80062aa:	d103      	bne.n	80062b4 <HAL_I2C_EV_IRQHandler+0x11c>
 80062ac:	6878      	ldr	r0, [r7, #4]
 80062ae:	f000 f9f3 	bl	8006698 <I2C_MasterTransmit_TXE>
 80062b2:	e04d      	b.n	8006350 <HAL_I2C_EV_IRQHandler+0x1b8>
 80062b4:	69fb      	ldr	r3, [r7, #28]
 80062b6:	089b      	lsrs	r3, r3, #2
 80062b8:	f003 0301 	and.w	r3, r3, #1
 80062bc:	2b00      	cmp	r3, #0
 80062be:	f000 80d6 	beq.w	800646e <HAL_I2C_EV_IRQHandler+0x2d6>
 80062c2:	697b      	ldr	r3, [r7, #20]
 80062c4:	0a5b      	lsrs	r3, r3, #9
 80062c6:	f003 0301 	and.w	r3, r3, #1
 80062ca:	2b00      	cmp	r3, #0
 80062cc:	f000 80cf 	beq.w	800646e <HAL_I2C_EV_IRQHandler+0x2d6>
 80062d0:	7bbb      	ldrb	r3, [r7, #14]
 80062d2:	2b21      	cmp	r3, #33	; 0x21
 80062d4:	d103      	bne.n	80062de <HAL_I2C_EV_IRQHandler+0x146>
 80062d6:	6878      	ldr	r0, [r7, #4]
 80062d8:	f000 fa7a 	bl	80067d0 <I2C_MasterTransmit_BTF>
 80062dc:	e0c7      	b.n	800646e <HAL_I2C_EV_IRQHandler+0x2d6>
 80062de:	7bfb      	ldrb	r3, [r7, #15]
 80062e0:	2b40      	cmp	r3, #64	; 0x40
 80062e2:	f040 80c4 	bne.w	800646e <HAL_I2C_EV_IRQHandler+0x2d6>
 80062e6:	6878      	ldr	r0, [r7, #4]
 80062e8:	f000 fae8 	bl	80068bc <I2C_MemoryTransmit_TXE_BTF>
 80062ec:	e0bf      	b.n	800646e <HAL_I2C_EV_IRQHandler+0x2d6>
 80062ee:	687b      	ldr	r3, [r7, #4]
 80062f0:	681b      	ldr	r3, [r3, #0]
 80062f2:	685b      	ldr	r3, [r3, #4]
 80062f4:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80062f8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80062fc:	f000 80b7 	beq.w	800646e <HAL_I2C_EV_IRQHandler+0x2d6>
 8006300:	69fb      	ldr	r3, [r7, #28]
 8006302:	099b      	lsrs	r3, r3, #6
 8006304:	f003 0301 	and.w	r3, r3, #1
 8006308:	2b00      	cmp	r3, #0
 800630a:	d00f      	beq.n	800632c <HAL_I2C_EV_IRQHandler+0x194>
 800630c:	697b      	ldr	r3, [r7, #20]
 800630e:	0a9b      	lsrs	r3, r3, #10
 8006310:	f003 0301 	and.w	r3, r3, #1
 8006314:	2b00      	cmp	r3, #0
 8006316:	d009      	beq.n	800632c <HAL_I2C_EV_IRQHandler+0x194>
 8006318:	69fb      	ldr	r3, [r7, #28]
 800631a:	089b      	lsrs	r3, r3, #2
 800631c:	f003 0301 	and.w	r3, r3, #1
 8006320:	2b00      	cmp	r3, #0
 8006322:	d103      	bne.n	800632c <HAL_I2C_EV_IRQHandler+0x194>
 8006324:	6878      	ldr	r0, [r7, #4]
 8006326:	f000 fb5d 	bl	80069e4 <I2C_MasterReceive_RXNE>
 800632a:	e011      	b.n	8006350 <HAL_I2C_EV_IRQHandler+0x1b8>
 800632c:	69fb      	ldr	r3, [r7, #28]
 800632e:	089b      	lsrs	r3, r3, #2
 8006330:	f003 0301 	and.w	r3, r3, #1
 8006334:	2b00      	cmp	r3, #0
 8006336:	f000 809a 	beq.w	800646e <HAL_I2C_EV_IRQHandler+0x2d6>
 800633a:	697b      	ldr	r3, [r7, #20]
 800633c:	0a5b      	lsrs	r3, r3, #9
 800633e:	f003 0301 	and.w	r3, r3, #1
 8006342:	2b00      	cmp	r3, #0
 8006344:	f000 8093 	beq.w	800646e <HAL_I2C_EV_IRQHandler+0x2d6>
 8006348:	6878      	ldr	r0, [r7, #4]
 800634a:	f000 fc06 	bl	8006b5a <I2C_MasterReceive_BTF>
 800634e:	e08e      	b.n	800646e <HAL_I2C_EV_IRQHandler+0x2d6>
 8006350:	e08d      	b.n	800646e <HAL_I2C_EV_IRQHandler+0x2d6>
 8006352:	687b      	ldr	r3, [r7, #4]
 8006354:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006356:	2b00      	cmp	r3, #0
 8006358:	d004      	beq.n	8006364 <HAL_I2C_EV_IRQHandler+0x1cc>
 800635a:	687b      	ldr	r3, [r7, #4]
 800635c:	681b      	ldr	r3, [r3, #0]
 800635e:	695b      	ldr	r3, [r3, #20]
 8006360:	61fb      	str	r3, [r7, #28]
 8006362:	e007      	b.n	8006374 <HAL_I2C_EV_IRQHandler+0x1dc>
 8006364:	687b      	ldr	r3, [r7, #4]
 8006366:	681b      	ldr	r3, [r3, #0]
 8006368:	699b      	ldr	r3, [r3, #24]
 800636a:	61bb      	str	r3, [r7, #24]
 800636c:	687b      	ldr	r3, [r7, #4]
 800636e:	681b      	ldr	r3, [r3, #0]
 8006370:	695b      	ldr	r3, [r3, #20]
 8006372:	61fb      	str	r3, [r7, #28]
 8006374:	69fb      	ldr	r3, [r7, #28]
 8006376:	085b      	lsrs	r3, r3, #1
 8006378:	f003 0301 	and.w	r3, r3, #1
 800637c:	2b00      	cmp	r3, #0
 800637e:	d012      	beq.n	80063a6 <HAL_I2C_EV_IRQHandler+0x20e>
 8006380:	697b      	ldr	r3, [r7, #20]
 8006382:	0a5b      	lsrs	r3, r3, #9
 8006384:	f003 0301 	and.w	r3, r3, #1
 8006388:	2b00      	cmp	r3, #0
 800638a:	d00c      	beq.n	80063a6 <HAL_I2C_EV_IRQHandler+0x20e>
 800638c:	687b      	ldr	r3, [r7, #4]
 800638e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006390:	2b00      	cmp	r3, #0
 8006392:	d003      	beq.n	800639c <HAL_I2C_EV_IRQHandler+0x204>
 8006394:	687b      	ldr	r3, [r7, #4]
 8006396:	681b      	ldr	r3, [r3, #0]
 8006398:	699b      	ldr	r3, [r3, #24]
 800639a:	61bb      	str	r3, [r7, #24]
 800639c:	69b9      	ldr	r1, [r7, #24]
 800639e:	6878      	ldr	r0, [r7, #4]
 80063a0:	f000 ffc4 	bl	800732c <I2C_Slave_ADDR>
 80063a4:	e066      	b.n	8006474 <HAL_I2C_EV_IRQHandler+0x2dc>
 80063a6:	69fb      	ldr	r3, [r7, #28]
 80063a8:	091b      	lsrs	r3, r3, #4
 80063aa:	f003 0301 	and.w	r3, r3, #1
 80063ae:	2b00      	cmp	r3, #0
 80063b0:	d009      	beq.n	80063c6 <HAL_I2C_EV_IRQHandler+0x22e>
 80063b2:	697b      	ldr	r3, [r7, #20]
 80063b4:	0a5b      	lsrs	r3, r3, #9
 80063b6:	f003 0301 	and.w	r3, r3, #1
 80063ba:	2b00      	cmp	r3, #0
 80063bc:	d003      	beq.n	80063c6 <HAL_I2C_EV_IRQHandler+0x22e>
 80063be:	6878      	ldr	r0, [r7, #4]
 80063c0:	f000 fffe 	bl	80073c0 <I2C_Slave_STOPF>
 80063c4:	e056      	b.n	8006474 <HAL_I2C_EV_IRQHandler+0x2dc>
 80063c6:	7bbb      	ldrb	r3, [r7, #14]
 80063c8:	2b21      	cmp	r3, #33	; 0x21
 80063ca:	d002      	beq.n	80063d2 <HAL_I2C_EV_IRQHandler+0x23a>
 80063cc:	7bbb      	ldrb	r3, [r7, #14]
 80063ce:	2b29      	cmp	r3, #41	; 0x29
 80063d0:	d125      	bne.n	800641e <HAL_I2C_EV_IRQHandler+0x286>
 80063d2:	69fb      	ldr	r3, [r7, #28]
 80063d4:	09db      	lsrs	r3, r3, #7
 80063d6:	f003 0301 	and.w	r3, r3, #1
 80063da:	2b00      	cmp	r3, #0
 80063dc:	d00f      	beq.n	80063fe <HAL_I2C_EV_IRQHandler+0x266>
 80063de:	697b      	ldr	r3, [r7, #20]
 80063e0:	0a9b      	lsrs	r3, r3, #10
 80063e2:	f003 0301 	and.w	r3, r3, #1
 80063e6:	2b00      	cmp	r3, #0
 80063e8:	d009      	beq.n	80063fe <HAL_I2C_EV_IRQHandler+0x266>
 80063ea:	69fb      	ldr	r3, [r7, #28]
 80063ec:	089b      	lsrs	r3, r3, #2
 80063ee:	f003 0301 	and.w	r3, r3, #1
 80063f2:	2b00      	cmp	r3, #0
 80063f4:	d103      	bne.n	80063fe <HAL_I2C_EV_IRQHandler+0x266>
 80063f6:	6878      	ldr	r0, [r7, #4]
 80063f8:	f000 feda 	bl	80071b0 <I2C_SlaveTransmit_TXE>
 80063fc:	e039      	b.n	8006472 <HAL_I2C_EV_IRQHandler+0x2da>
 80063fe:	69fb      	ldr	r3, [r7, #28]
 8006400:	089b      	lsrs	r3, r3, #2
 8006402:	f003 0301 	and.w	r3, r3, #1
 8006406:	2b00      	cmp	r3, #0
 8006408:	d033      	beq.n	8006472 <HAL_I2C_EV_IRQHandler+0x2da>
 800640a:	697b      	ldr	r3, [r7, #20]
 800640c:	0a5b      	lsrs	r3, r3, #9
 800640e:	f003 0301 	and.w	r3, r3, #1
 8006412:	2b00      	cmp	r3, #0
 8006414:	d02d      	beq.n	8006472 <HAL_I2C_EV_IRQHandler+0x2da>
 8006416:	6878      	ldr	r0, [r7, #4]
 8006418:	f000 ff07 	bl	800722a <I2C_SlaveTransmit_BTF>
 800641c:	e029      	b.n	8006472 <HAL_I2C_EV_IRQHandler+0x2da>
 800641e:	69fb      	ldr	r3, [r7, #28]
 8006420:	099b      	lsrs	r3, r3, #6
 8006422:	f003 0301 	and.w	r3, r3, #1
 8006426:	2b00      	cmp	r3, #0
 8006428:	d00f      	beq.n	800644a <HAL_I2C_EV_IRQHandler+0x2b2>
 800642a:	697b      	ldr	r3, [r7, #20]
 800642c:	0a9b      	lsrs	r3, r3, #10
 800642e:	f003 0301 	and.w	r3, r3, #1
 8006432:	2b00      	cmp	r3, #0
 8006434:	d009      	beq.n	800644a <HAL_I2C_EV_IRQHandler+0x2b2>
 8006436:	69fb      	ldr	r3, [r7, #28]
 8006438:	089b      	lsrs	r3, r3, #2
 800643a:	f003 0301 	and.w	r3, r3, #1
 800643e:	2b00      	cmp	r3, #0
 8006440:	d103      	bne.n	800644a <HAL_I2C_EV_IRQHandler+0x2b2>
 8006442:	6878      	ldr	r0, [r7, #4]
 8006444:	f000 ff12 	bl	800726c <I2C_SlaveReceive_RXNE>
 8006448:	e014      	b.n	8006474 <HAL_I2C_EV_IRQHandler+0x2dc>
 800644a:	69fb      	ldr	r3, [r7, #28]
 800644c:	089b      	lsrs	r3, r3, #2
 800644e:	f003 0301 	and.w	r3, r3, #1
 8006452:	2b00      	cmp	r3, #0
 8006454:	d00e      	beq.n	8006474 <HAL_I2C_EV_IRQHandler+0x2dc>
 8006456:	697b      	ldr	r3, [r7, #20]
 8006458:	0a5b      	lsrs	r3, r3, #9
 800645a:	f003 0301 	and.w	r3, r3, #1
 800645e:	2b00      	cmp	r3, #0
 8006460:	d008      	beq.n	8006474 <HAL_I2C_EV_IRQHandler+0x2dc>
 8006462:	6878      	ldr	r0, [r7, #4]
 8006464:	f000 ff40 	bl	80072e8 <I2C_SlaveReceive_BTF>
 8006468:	e004      	b.n	8006474 <HAL_I2C_EV_IRQHandler+0x2dc>
 800646a:	bf00      	nop
 800646c:	e002      	b.n	8006474 <HAL_I2C_EV_IRQHandler+0x2dc>
 800646e:	bf00      	nop
 8006470:	e000      	b.n	8006474 <HAL_I2C_EV_IRQHandler+0x2dc>
 8006472:	bf00      	nop
 8006474:	3720      	adds	r7, #32
 8006476:	46bd      	mov	sp, r7
 8006478:	bd80      	pop	{r7, pc}

0800647a <HAL_I2C_ER_IRQHandler>:
 800647a:	b580      	push	{r7, lr}
 800647c:	b08a      	sub	sp, #40	; 0x28
 800647e:	af00      	add	r7, sp, #0
 8006480:	6078      	str	r0, [r7, #4]
 8006482:	687b      	ldr	r3, [r7, #4]
 8006484:	681b      	ldr	r3, [r3, #0]
 8006486:	695b      	ldr	r3, [r3, #20]
 8006488:	623b      	str	r3, [r7, #32]
 800648a:	687b      	ldr	r3, [r7, #4]
 800648c:	681b      	ldr	r3, [r3, #0]
 800648e:	685b      	ldr	r3, [r3, #4]
 8006490:	61fb      	str	r3, [r7, #28]
 8006492:	2300      	movs	r3, #0
 8006494:	627b      	str	r3, [r7, #36]	; 0x24
 8006496:	687b      	ldr	r3, [r7, #4]
 8006498:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800649c:	76fb      	strb	r3, [r7, #27]
 800649e:	6a3b      	ldr	r3, [r7, #32]
 80064a0:	0a1b      	lsrs	r3, r3, #8
 80064a2:	f003 0301 	and.w	r3, r3, #1
 80064a6:	2b00      	cmp	r3, #0
 80064a8:	d00e      	beq.n	80064c8 <HAL_I2C_ER_IRQHandler+0x4e>
 80064aa:	69fb      	ldr	r3, [r7, #28]
 80064ac:	0a1b      	lsrs	r3, r3, #8
 80064ae:	f003 0301 	and.w	r3, r3, #1
 80064b2:	2b00      	cmp	r3, #0
 80064b4:	d008      	beq.n	80064c8 <HAL_I2C_ER_IRQHandler+0x4e>
 80064b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80064b8:	f043 0301 	orr.w	r3, r3, #1
 80064bc:	627b      	str	r3, [r7, #36]	; 0x24
 80064be:	687b      	ldr	r3, [r7, #4]
 80064c0:	681b      	ldr	r3, [r3, #0]
 80064c2:	f46f 7280 	mvn.w	r2, #256	; 0x100
 80064c6:	615a      	str	r2, [r3, #20]
 80064c8:	6a3b      	ldr	r3, [r7, #32]
 80064ca:	0a5b      	lsrs	r3, r3, #9
 80064cc:	f003 0301 	and.w	r3, r3, #1
 80064d0:	2b00      	cmp	r3, #0
 80064d2:	d00e      	beq.n	80064f2 <HAL_I2C_ER_IRQHandler+0x78>
 80064d4:	69fb      	ldr	r3, [r7, #28]
 80064d6:	0a1b      	lsrs	r3, r3, #8
 80064d8:	f003 0301 	and.w	r3, r3, #1
 80064dc:	2b00      	cmp	r3, #0
 80064de:	d008      	beq.n	80064f2 <HAL_I2C_ER_IRQHandler+0x78>
 80064e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80064e2:	f043 0302 	orr.w	r3, r3, #2
 80064e6:	627b      	str	r3, [r7, #36]	; 0x24
 80064e8:	687b      	ldr	r3, [r7, #4]
 80064ea:	681b      	ldr	r3, [r3, #0]
 80064ec:	f46f 7200 	mvn.w	r2, #512	; 0x200
 80064f0:	615a      	str	r2, [r3, #20]
 80064f2:	6a3b      	ldr	r3, [r7, #32]
 80064f4:	0a9b      	lsrs	r3, r3, #10
 80064f6:	f003 0301 	and.w	r3, r3, #1
 80064fa:	2b00      	cmp	r3, #0
 80064fc:	d03f      	beq.n	800657e <HAL_I2C_ER_IRQHandler+0x104>
 80064fe:	69fb      	ldr	r3, [r7, #28]
 8006500:	0a1b      	lsrs	r3, r3, #8
 8006502:	f003 0301 	and.w	r3, r3, #1
 8006506:	2b00      	cmp	r3, #0
 8006508:	d039      	beq.n	800657e <HAL_I2C_ER_IRQHandler+0x104>
 800650a:	7efb      	ldrb	r3, [r7, #27]
 800650c:	76bb      	strb	r3, [r7, #26]
 800650e:	687b      	ldr	r3, [r7, #4]
 8006510:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006512:	b29b      	uxth	r3, r3
 8006514:	617b      	str	r3, [r7, #20]
 8006516:	687b      	ldr	r3, [r7, #4]
 8006518:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800651c:	74fb      	strb	r3, [r7, #19]
 800651e:	687b      	ldr	r3, [r7, #4]
 8006520:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006522:	60fb      	str	r3, [r7, #12]
 8006524:	7ebb      	ldrb	r3, [r7, #26]
 8006526:	2b20      	cmp	r3, #32
 8006528:	d112      	bne.n	8006550 <HAL_I2C_ER_IRQHandler+0xd6>
 800652a:	697b      	ldr	r3, [r7, #20]
 800652c:	2b00      	cmp	r3, #0
 800652e:	d10f      	bne.n	8006550 <HAL_I2C_ER_IRQHandler+0xd6>
 8006530:	7cfb      	ldrb	r3, [r7, #19]
 8006532:	2b21      	cmp	r3, #33	; 0x21
 8006534:	d008      	beq.n	8006548 <HAL_I2C_ER_IRQHandler+0xce>
 8006536:	7cfb      	ldrb	r3, [r7, #19]
 8006538:	2b29      	cmp	r3, #41	; 0x29
 800653a:	d005      	beq.n	8006548 <HAL_I2C_ER_IRQHandler+0xce>
 800653c:	7cfb      	ldrb	r3, [r7, #19]
 800653e:	2b28      	cmp	r3, #40	; 0x28
 8006540:	d106      	bne.n	8006550 <HAL_I2C_ER_IRQHandler+0xd6>
 8006542:	68fb      	ldr	r3, [r7, #12]
 8006544:	2b21      	cmp	r3, #33	; 0x21
 8006546:	d103      	bne.n	8006550 <HAL_I2C_ER_IRQHandler+0xd6>
 8006548:	6878      	ldr	r0, [r7, #4]
 800654a:	f001 f869 	bl	8007620 <I2C_Slave_AF>
 800654e:	e016      	b.n	800657e <HAL_I2C_ER_IRQHandler+0x104>
 8006550:	687b      	ldr	r3, [r7, #4]
 8006552:	681b      	ldr	r3, [r3, #0]
 8006554:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8006558:	615a      	str	r2, [r3, #20]
 800655a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800655c:	f043 0304 	orr.w	r3, r3, #4
 8006560:	627b      	str	r3, [r7, #36]	; 0x24
 8006562:	7efb      	ldrb	r3, [r7, #27]
 8006564:	2b10      	cmp	r3, #16
 8006566:	d002      	beq.n	800656e <HAL_I2C_ER_IRQHandler+0xf4>
 8006568:	7efb      	ldrb	r3, [r7, #27]
 800656a:	2b40      	cmp	r3, #64	; 0x40
 800656c:	d107      	bne.n	800657e <HAL_I2C_ER_IRQHandler+0x104>
 800656e:	687b      	ldr	r3, [r7, #4]
 8006570:	681b      	ldr	r3, [r3, #0]
 8006572:	681a      	ldr	r2, [r3, #0]
 8006574:	687b      	ldr	r3, [r7, #4]
 8006576:	681b      	ldr	r3, [r3, #0]
 8006578:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800657c:	601a      	str	r2, [r3, #0]
 800657e:	6a3b      	ldr	r3, [r7, #32]
 8006580:	0adb      	lsrs	r3, r3, #11
 8006582:	f003 0301 	and.w	r3, r3, #1
 8006586:	2b00      	cmp	r3, #0
 8006588:	d00e      	beq.n	80065a8 <HAL_I2C_ER_IRQHandler+0x12e>
 800658a:	69fb      	ldr	r3, [r7, #28]
 800658c:	0a1b      	lsrs	r3, r3, #8
 800658e:	f003 0301 	and.w	r3, r3, #1
 8006592:	2b00      	cmp	r3, #0
 8006594:	d008      	beq.n	80065a8 <HAL_I2C_ER_IRQHandler+0x12e>
 8006596:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006598:	f043 0308 	orr.w	r3, r3, #8
 800659c:	627b      	str	r3, [r7, #36]	; 0x24
 800659e:	687b      	ldr	r3, [r7, #4]
 80065a0:	681b      	ldr	r3, [r3, #0]
 80065a2:	f46f 6200 	mvn.w	r2, #2048	; 0x800
 80065a6:	615a      	str	r2, [r3, #20]
 80065a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80065aa:	2b00      	cmp	r3, #0
 80065ac:	d008      	beq.n	80065c0 <HAL_I2C_ER_IRQHandler+0x146>
 80065ae:	687b      	ldr	r3, [r7, #4]
 80065b0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80065b2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80065b4:	431a      	orrs	r2, r3
 80065b6:	687b      	ldr	r3, [r7, #4]
 80065b8:	641a      	str	r2, [r3, #64]	; 0x40
 80065ba:	6878      	ldr	r0, [r7, #4]
 80065bc:	f001 f8a0 	bl	8007700 <I2C_ITError>
 80065c0:	bf00      	nop
 80065c2:	3728      	adds	r7, #40	; 0x28
 80065c4:	46bd      	mov	sp, r7
 80065c6:	bd80      	pop	{r7, pc}

080065c8 <HAL_I2C_MasterTxCpltCallback>:
 80065c8:	b480      	push	{r7}
 80065ca:	b083      	sub	sp, #12
 80065cc:	af00      	add	r7, sp, #0
 80065ce:	6078      	str	r0, [r7, #4]
 80065d0:	bf00      	nop
 80065d2:	370c      	adds	r7, #12
 80065d4:	46bd      	mov	sp, r7
 80065d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065da:	4770      	bx	lr

080065dc <HAL_I2C_MasterRxCpltCallback>:
 80065dc:	b480      	push	{r7}
 80065de:	b083      	sub	sp, #12
 80065e0:	af00      	add	r7, sp, #0
 80065e2:	6078      	str	r0, [r7, #4]
 80065e4:	bf00      	nop
 80065e6:	370c      	adds	r7, #12
 80065e8:	46bd      	mov	sp, r7
 80065ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065ee:	4770      	bx	lr

080065f0 <HAL_I2C_SlaveTxCpltCallback>:
 80065f0:	b480      	push	{r7}
 80065f2:	b083      	sub	sp, #12
 80065f4:	af00      	add	r7, sp, #0
 80065f6:	6078      	str	r0, [r7, #4]
 80065f8:	bf00      	nop
 80065fa:	370c      	adds	r7, #12
 80065fc:	46bd      	mov	sp, r7
 80065fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006602:	4770      	bx	lr

08006604 <HAL_I2C_SlaveRxCpltCallback>:
 8006604:	b480      	push	{r7}
 8006606:	b083      	sub	sp, #12
 8006608:	af00      	add	r7, sp, #0
 800660a:	6078      	str	r0, [r7, #4]
 800660c:	bf00      	nop
 800660e:	370c      	adds	r7, #12
 8006610:	46bd      	mov	sp, r7
 8006612:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006616:	4770      	bx	lr

08006618 <HAL_I2C_AddrCallback>:
 8006618:	b480      	push	{r7}
 800661a:	b083      	sub	sp, #12
 800661c:	af00      	add	r7, sp, #0
 800661e:	6078      	str	r0, [r7, #4]
 8006620:	460b      	mov	r3, r1
 8006622:	70fb      	strb	r3, [r7, #3]
 8006624:	4613      	mov	r3, r2
 8006626:	803b      	strh	r3, [r7, #0]
 8006628:	bf00      	nop
 800662a:	370c      	adds	r7, #12
 800662c:	46bd      	mov	sp, r7
 800662e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006632:	4770      	bx	lr

08006634 <HAL_I2C_ListenCpltCallback>:
 8006634:	b480      	push	{r7}
 8006636:	b083      	sub	sp, #12
 8006638:	af00      	add	r7, sp, #0
 800663a:	6078      	str	r0, [r7, #4]
 800663c:	bf00      	nop
 800663e:	370c      	adds	r7, #12
 8006640:	46bd      	mov	sp, r7
 8006642:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006646:	4770      	bx	lr

08006648 <HAL_I2C_MemTxCpltCallback>:
 8006648:	b480      	push	{r7}
 800664a:	b083      	sub	sp, #12
 800664c:	af00      	add	r7, sp, #0
 800664e:	6078      	str	r0, [r7, #4]
 8006650:	bf00      	nop
 8006652:	370c      	adds	r7, #12
 8006654:	46bd      	mov	sp, r7
 8006656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800665a:	4770      	bx	lr

0800665c <HAL_I2C_MemRxCpltCallback>:
 800665c:	b480      	push	{r7}
 800665e:	b083      	sub	sp, #12
 8006660:	af00      	add	r7, sp, #0
 8006662:	6078      	str	r0, [r7, #4]
 8006664:	bf00      	nop
 8006666:	370c      	adds	r7, #12
 8006668:	46bd      	mov	sp, r7
 800666a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800666e:	4770      	bx	lr

08006670 <HAL_I2C_ErrorCallback>:
 8006670:	b480      	push	{r7}
 8006672:	b083      	sub	sp, #12
 8006674:	af00      	add	r7, sp, #0
 8006676:	6078      	str	r0, [r7, #4]
 8006678:	bf00      	nop
 800667a:	370c      	adds	r7, #12
 800667c:	46bd      	mov	sp, r7
 800667e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006682:	4770      	bx	lr

08006684 <HAL_I2C_AbortCpltCallback>:
 8006684:	b480      	push	{r7}
 8006686:	b083      	sub	sp, #12
 8006688:	af00      	add	r7, sp, #0
 800668a:	6078      	str	r0, [r7, #4]
 800668c:	bf00      	nop
 800668e:	370c      	adds	r7, #12
 8006690:	46bd      	mov	sp, r7
 8006692:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006696:	4770      	bx	lr

08006698 <I2C_MasterTransmit_TXE>:
 8006698:	b580      	push	{r7, lr}
 800669a:	b084      	sub	sp, #16
 800669c:	af00      	add	r7, sp, #0
 800669e:	6078      	str	r0, [r7, #4]
 80066a0:	687b      	ldr	r3, [r7, #4]
 80066a2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80066a6:	73fb      	strb	r3, [r7, #15]
 80066a8:	687b      	ldr	r3, [r7, #4]
 80066aa:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80066ae:	73bb      	strb	r3, [r7, #14]
 80066b0:	687b      	ldr	r3, [r7, #4]
 80066b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80066b4:	60bb      	str	r3, [r7, #8]
 80066b6:	687b      	ldr	r3, [r7, #4]
 80066b8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80066ba:	2b00      	cmp	r3, #0
 80066bc:	d150      	bne.n	8006760 <I2C_MasterTransmit_TXE+0xc8>
 80066be:	7bfb      	ldrb	r3, [r7, #15]
 80066c0:	2b21      	cmp	r3, #33	; 0x21
 80066c2:	d14d      	bne.n	8006760 <I2C_MasterTransmit_TXE+0xc8>
 80066c4:	68bb      	ldr	r3, [r7, #8]
 80066c6:	2b08      	cmp	r3, #8
 80066c8:	d01d      	beq.n	8006706 <I2C_MasterTransmit_TXE+0x6e>
 80066ca:	68bb      	ldr	r3, [r7, #8]
 80066cc:	2b20      	cmp	r3, #32
 80066ce:	d01a      	beq.n	8006706 <I2C_MasterTransmit_TXE+0x6e>
 80066d0:	68bb      	ldr	r3, [r7, #8]
 80066d2:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80066d6:	d016      	beq.n	8006706 <I2C_MasterTransmit_TXE+0x6e>
 80066d8:	687b      	ldr	r3, [r7, #4]
 80066da:	681b      	ldr	r3, [r3, #0]
 80066dc:	685a      	ldr	r2, [r3, #4]
 80066de:	687b      	ldr	r3, [r7, #4]
 80066e0:	681b      	ldr	r3, [r3, #0]
 80066e2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80066e6:	605a      	str	r2, [r3, #4]
 80066e8:	687b      	ldr	r3, [r7, #4]
 80066ea:	2211      	movs	r2, #17
 80066ec:	631a      	str	r2, [r3, #48]	; 0x30
 80066ee:	687b      	ldr	r3, [r7, #4]
 80066f0:	2200      	movs	r2, #0
 80066f2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80066f6:	687b      	ldr	r3, [r7, #4]
 80066f8:	2220      	movs	r2, #32
 80066fa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80066fe:	6878      	ldr	r0, [r7, #4]
 8006700:	f7ff ff62 	bl	80065c8 <HAL_I2C_MasterTxCpltCallback>
 8006704:	e060      	b.n	80067c8 <I2C_MasterTransmit_TXE+0x130>
 8006706:	687b      	ldr	r3, [r7, #4]
 8006708:	681b      	ldr	r3, [r3, #0]
 800670a:	685a      	ldr	r2, [r3, #4]
 800670c:	687b      	ldr	r3, [r7, #4]
 800670e:	681b      	ldr	r3, [r3, #0]
 8006710:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006714:	605a      	str	r2, [r3, #4]
 8006716:	687b      	ldr	r3, [r7, #4]
 8006718:	681b      	ldr	r3, [r3, #0]
 800671a:	681a      	ldr	r2, [r3, #0]
 800671c:	687b      	ldr	r3, [r7, #4]
 800671e:	681b      	ldr	r3, [r3, #0]
 8006720:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006724:	601a      	str	r2, [r3, #0]
 8006726:	687b      	ldr	r3, [r7, #4]
 8006728:	2200      	movs	r2, #0
 800672a:	631a      	str	r2, [r3, #48]	; 0x30
 800672c:	687b      	ldr	r3, [r7, #4]
 800672e:	2220      	movs	r2, #32
 8006730:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006734:	687b      	ldr	r3, [r7, #4]
 8006736:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800673a:	b2db      	uxtb	r3, r3
 800673c:	2b40      	cmp	r3, #64	; 0x40
 800673e:	d107      	bne.n	8006750 <I2C_MasterTransmit_TXE+0xb8>
 8006740:	687b      	ldr	r3, [r7, #4]
 8006742:	2200      	movs	r2, #0
 8006744:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006748:	6878      	ldr	r0, [r7, #4]
 800674a:	f7ff ff7d 	bl	8006648 <HAL_I2C_MemTxCpltCallback>
 800674e:	e03b      	b.n	80067c8 <I2C_MasterTransmit_TXE+0x130>
 8006750:	687b      	ldr	r3, [r7, #4]
 8006752:	2200      	movs	r2, #0
 8006754:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006758:	6878      	ldr	r0, [r7, #4]
 800675a:	f7ff ff35 	bl	80065c8 <HAL_I2C_MasterTxCpltCallback>
 800675e:	e033      	b.n	80067c8 <I2C_MasterTransmit_TXE+0x130>
 8006760:	7bfb      	ldrb	r3, [r7, #15]
 8006762:	2b21      	cmp	r3, #33	; 0x21
 8006764:	d005      	beq.n	8006772 <I2C_MasterTransmit_TXE+0xda>
 8006766:	7bbb      	ldrb	r3, [r7, #14]
 8006768:	2b40      	cmp	r3, #64	; 0x40
 800676a:	d12d      	bne.n	80067c8 <I2C_MasterTransmit_TXE+0x130>
 800676c:	7bfb      	ldrb	r3, [r7, #15]
 800676e:	2b22      	cmp	r3, #34	; 0x22
 8006770:	d12a      	bne.n	80067c8 <I2C_MasterTransmit_TXE+0x130>
 8006772:	687b      	ldr	r3, [r7, #4]
 8006774:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006776:	b29b      	uxth	r3, r3
 8006778:	2b00      	cmp	r3, #0
 800677a:	d108      	bne.n	800678e <I2C_MasterTransmit_TXE+0xf6>
 800677c:	687b      	ldr	r3, [r7, #4]
 800677e:	681b      	ldr	r3, [r3, #0]
 8006780:	685a      	ldr	r2, [r3, #4]
 8006782:	687b      	ldr	r3, [r7, #4]
 8006784:	681b      	ldr	r3, [r3, #0]
 8006786:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800678a:	605a      	str	r2, [r3, #4]
 800678c:	e01c      	b.n	80067c8 <I2C_MasterTransmit_TXE+0x130>
 800678e:	687b      	ldr	r3, [r7, #4]
 8006790:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006794:	b2db      	uxtb	r3, r3
 8006796:	2b40      	cmp	r3, #64	; 0x40
 8006798:	d103      	bne.n	80067a2 <I2C_MasterTransmit_TXE+0x10a>
 800679a:	6878      	ldr	r0, [r7, #4]
 800679c:	f000 f88e 	bl	80068bc <I2C_MemoryTransmit_TXE_BTF>
 80067a0:	e012      	b.n	80067c8 <I2C_MasterTransmit_TXE+0x130>
 80067a2:	687b      	ldr	r3, [r7, #4]
 80067a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80067a6:	781a      	ldrb	r2, [r3, #0]
 80067a8:	687b      	ldr	r3, [r7, #4]
 80067aa:	681b      	ldr	r3, [r3, #0]
 80067ac:	611a      	str	r2, [r3, #16]
 80067ae:	687b      	ldr	r3, [r7, #4]
 80067b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80067b2:	1c5a      	adds	r2, r3, #1
 80067b4:	687b      	ldr	r3, [r7, #4]
 80067b6:	625a      	str	r2, [r3, #36]	; 0x24
 80067b8:	687b      	ldr	r3, [r7, #4]
 80067ba:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80067bc:	b29b      	uxth	r3, r3
 80067be:	3b01      	subs	r3, #1
 80067c0:	b29a      	uxth	r2, r3
 80067c2:	687b      	ldr	r3, [r7, #4]
 80067c4:	855a      	strh	r2, [r3, #42]	; 0x2a
 80067c6:	e7ff      	b.n	80067c8 <I2C_MasterTransmit_TXE+0x130>
 80067c8:	bf00      	nop
 80067ca:	3710      	adds	r7, #16
 80067cc:	46bd      	mov	sp, r7
 80067ce:	bd80      	pop	{r7, pc}

080067d0 <I2C_MasterTransmit_BTF>:
 80067d0:	b580      	push	{r7, lr}
 80067d2:	b084      	sub	sp, #16
 80067d4:	af00      	add	r7, sp, #0
 80067d6:	6078      	str	r0, [r7, #4]
 80067d8:	687b      	ldr	r3, [r7, #4]
 80067da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80067dc:	60fb      	str	r3, [r7, #12]
 80067de:	687b      	ldr	r3, [r7, #4]
 80067e0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80067e4:	b2db      	uxtb	r3, r3
 80067e6:	2b21      	cmp	r3, #33	; 0x21
 80067e8:	d164      	bne.n	80068b4 <I2C_MasterTransmit_BTF+0xe4>
 80067ea:	687b      	ldr	r3, [r7, #4]
 80067ec:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80067ee:	b29b      	uxth	r3, r3
 80067f0:	2b00      	cmp	r3, #0
 80067f2:	d012      	beq.n	800681a <I2C_MasterTransmit_BTF+0x4a>
 80067f4:	687b      	ldr	r3, [r7, #4]
 80067f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80067f8:	781a      	ldrb	r2, [r3, #0]
 80067fa:	687b      	ldr	r3, [r7, #4]
 80067fc:	681b      	ldr	r3, [r3, #0]
 80067fe:	611a      	str	r2, [r3, #16]
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006804:	1c5a      	adds	r2, r3, #1
 8006806:	687b      	ldr	r3, [r7, #4]
 8006808:	625a      	str	r2, [r3, #36]	; 0x24
 800680a:	687b      	ldr	r3, [r7, #4]
 800680c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800680e:	b29b      	uxth	r3, r3
 8006810:	3b01      	subs	r3, #1
 8006812:	b29a      	uxth	r2, r3
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006818:	e04c      	b.n	80068b4 <I2C_MasterTransmit_BTF+0xe4>
 800681a:	68fb      	ldr	r3, [r7, #12]
 800681c:	2b08      	cmp	r3, #8
 800681e:	d01d      	beq.n	800685c <I2C_MasterTransmit_BTF+0x8c>
 8006820:	68fb      	ldr	r3, [r7, #12]
 8006822:	2b20      	cmp	r3, #32
 8006824:	d01a      	beq.n	800685c <I2C_MasterTransmit_BTF+0x8c>
 8006826:	68fb      	ldr	r3, [r7, #12]
 8006828:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800682c:	d016      	beq.n	800685c <I2C_MasterTransmit_BTF+0x8c>
 800682e:	687b      	ldr	r3, [r7, #4]
 8006830:	681b      	ldr	r3, [r3, #0]
 8006832:	685a      	ldr	r2, [r3, #4]
 8006834:	687b      	ldr	r3, [r7, #4]
 8006836:	681b      	ldr	r3, [r3, #0]
 8006838:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800683c:	605a      	str	r2, [r3, #4]
 800683e:	687b      	ldr	r3, [r7, #4]
 8006840:	2211      	movs	r2, #17
 8006842:	631a      	str	r2, [r3, #48]	; 0x30
 8006844:	687b      	ldr	r3, [r7, #4]
 8006846:	2200      	movs	r2, #0
 8006848:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800684c:	687b      	ldr	r3, [r7, #4]
 800684e:	2220      	movs	r2, #32
 8006850:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006854:	6878      	ldr	r0, [r7, #4]
 8006856:	f7ff feb7 	bl	80065c8 <HAL_I2C_MasterTxCpltCallback>
 800685a:	e02b      	b.n	80068b4 <I2C_MasterTransmit_BTF+0xe4>
 800685c:	687b      	ldr	r3, [r7, #4]
 800685e:	681b      	ldr	r3, [r3, #0]
 8006860:	685a      	ldr	r2, [r3, #4]
 8006862:	687b      	ldr	r3, [r7, #4]
 8006864:	681b      	ldr	r3, [r3, #0]
 8006866:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800686a:	605a      	str	r2, [r3, #4]
 800686c:	687b      	ldr	r3, [r7, #4]
 800686e:	681b      	ldr	r3, [r3, #0]
 8006870:	681a      	ldr	r2, [r3, #0]
 8006872:	687b      	ldr	r3, [r7, #4]
 8006874:	681b      	ldr	r3, [r3, #0]
 8006876:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800687a:	601a      	str	r2, [r3, #0]
 800687c:	687b      	ldr	r3, [r7, #4]
 800687e:	2200      	movs	r2, #0
 8006880:	631a      	str	r2, [r3, #48]	; 0x30
 8006882:	687b      	ldr	r3, [r7, #4]
 8006884:	2220      	movs	r2, #32
 8006886:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800688a:	687b      	ldr	r3, [r7, #4]
 800688c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006890:	b2db      	uxtb	r3, r3
 8006892:	2b40      	cmp	r3, #64	; 0x40
 8006894:	d107      	bne.n	80068a6 <I2C_MasterTransmit_BTF+0xd6>
 8006896:	687b      	ldr	r3, [r7, #4]
 8006898:	2200      	movs	r2, #0
 800689a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800689e:	6878      	ldr	r0, [r7, #4]
 80068a0:	f7ff fed2 	bl	8006648 <HAL_I2C_MemTxCpltCallback>
 80068a4:	e006      	b.n	80068b4 <I2C_MasterTransmit_BTF+0xe4>
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	2200      	movs	r2, #0
 80068aa:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80068ae:	6878      	ldr	r0, [r7, #4]
 80068b0:	f7ff fe8a 	bl	80065c8 <HAL_I2C_MasterTxCpltCallback>
 80068b4:	bf00      	nop
 80068b6:	3710      	adds	r7, #16
 80068b8:	46bd      	mov	sp, r7
 80068ba:	bd80      	pop	{r7, pc}

080068bc <I2C_MemoryTransmit_TXE_BTF>:
 80068bc:	b580      	push	{r7, lr}
 80068be:	b084      	sub	sp, #16
 80068c0:	af00      	add	r7, sp, #0
 80068c2:	6078      	str	r0, [r7, #4]
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80068ca:	73fb      	strb	r3, [r7, #15]
 80068cc:	687b      	ldr	r3, [r7, #4]
 80068ce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80068d0:	2b00      	cmp	r3, #0
 80068d2:	d11d      	bne.n	8006910 <I2C_MemoryTransmit_TXE_BTF+0x54>
 80068d4:	687b      	ldr	r3, [r7, #4]
 80068d6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80068d8:	2b01      	cmp	r3, #1
 80068da:	d10b      	bne.n	80068f4 <I2C_MemoryTransmit_TXE_BTF+0x38>
 80068dc:	687b      	ldr	r3, [r7, #4]
 80068de:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80068e0:	b2da      	uxtb	r2, r3
 80068e2:	687b      	ldr	r3, [r7, #4]
 80068e4:	681b      	ldr	r3, [r3, #0]
 80068e6:	611a      	str	r2, [r3, #16]
 80068e8:	687b      	ldr	r3, [r7, #4]
 80068ea:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80068ec:	1c9a      	adds	r2, r3, #2
 80068ee:	687b      	ldr	r3, [r7, #4]
 80068f0:	651a      	str	r2, [r3, #80]	; 0x50
 80068f2:	e073      	b.n	80069dc <I2C_MemoryTransmit_TXE_BTF+0x120>
 80068f4:	687b      	ldr	r3, [r7, #4]
 80068f6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80068f8:	b29b      	uxth	r3, r3
 80068fa:	121b      	asrs	r3, r3, #8
 80068fc:	b2da      	uxtb	r2, r3
 80068fe:	687b      	ldr	r3, [r7, #4]
 8006900:	681b      	ldr	r3, [r3, #0]
 8006902:	611a      	str	r2, [r3, #16]
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006908:	1c5a      	adds	r2, r3, #1
 800690a:	687b      	ldr	r3, [r7, #4]
 800690c:	651a      	str	r2, [r3, #80]	; 0x50
 800690e:	e065      	b.n	80069dc <I2C_MemoryTransmit_TXE_BTF+0x120>
 8006910:	687b      	ldr	r3, [r7, #4]
 8006912:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006914:	2b01      	cmp	r3, #1
 8006916:	d10b      	bne.n	8006930 <I2C_MemoryTransmit_TXE_BTF+0x74>
 8006918:	687b      	ldr	r3, [r7, #4]
 800691a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800691c:	b2da      	uxtb	r2, r3
 800691e:	687b      	ldr	r3, [r7, #4]
 8006920:	681b      	ldr	r3, [r3, #0]
 8006922:	611a      	str	r2, [r3, #16]
 8006924:	687b      	ldr	r3, [r7, #4]
 8006926:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006928:	1c5a      	adds	r2, r3, #1
 800692a:	687b      	ldr	r3, [r7, #4]
 800692c:	651a      	str	r2, [r3, #80]	; 0x50
 800692e:	e055      	b.n	80069dc <I2C_MemoryTransmit_TXE_BTF+0x120>
 8006930:	687b      	ldr	r3, [r7, #4]
 8006932:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006934:	2b02      	cmp	r3, #2
 8006936:	d151      	bne.n	80069dc <I2C_MemoryTransmit_TXE_BTF+0x120>
 8006938:	7bfb      	ldrb	r3, [r7, #15]
 800693a:	2b22      	cmp	r3, #34	; 0x22
 800693c:	d10d      	bne.n	800695a <I2C_MemoryTransmit_TXE_BTF+0x9e>
 800693e:	687b      	ldr	r3, [r7, #4]
 8006940:	681b      	ldr	r3, [r3, #0]
 8006942:	681a      	ldr	r2, [r3, #0]
 8006944:	687b      	ldr	r3, [r7, #4]
 8006946:	681b      	ldr	r3, [r3, #0]
 8006948:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800694c:	601a      	str	r2, [r3, #0]
 800694e:	687b      	ldr	r3, [r7, #4]
 8006950:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006952:	1c5a      	adds	r2, r3, #1
 8006954:	687b      	ldr	r3, [r7, #4]
 8006956:	651a      	str	r2, [r3, #80]	; 0x50
 8006958:	e040      	b.n	80069dc <I2C_MemoryTransmit_TXE_BTF+0x120>
 800695a:	687b      	ldr	r3, [r7, #4]
 800695c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800695e:	b29b      	uxth	r3, r3
 8006960:	2b00      	cmp	r3, #0
 8006962:	d015      	beq.n	8006990 <I2C_MemoryTransmit_TXE_BTF+0xd4>
 8006964:	7bfb      	ldrb	r3, [r7, #15]
 8006966:	2b21      	cmp	r3, #33	; 0x21
 8006968:	d112      	bne.n	8006990 <I2C_MemoryTransmit_TXE_BTF+0xd4>
 800696a:	687b      	ldr	r3, [r7, #4]
 800696c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800696e:	781a      	ldrb	r2, [r3, #0]
 8006970:	687b      	ldr	r3, [r7, #4]
 8006972:	681b      	ldr	r3, [r3, #0]
 8006974:	611a      	str	r2, [r3, #16]
 8006976:	687b      	ldr	r3, [r7, #4]
 8006978:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800697a:	1c5a      	adds	r2, r3, #1
 800697c:	687b      	ldr	r3, [r7, #4]
 800697e:	625a      	str	r2, [r3, #36]	; 0x24
 8006980:	687b      	ldr	r3, [r7, #4]
 8006982:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006984:	b29b      	uxth	r3, r3
 8006986:	3b01      	subs	r3, #1
 8006988:	b29a      	uxth	r2, r3
 800698a:	687b      	ldr	r3, [r7, #4]
 800698c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800698e:	e025      	b.n	80069dc <I2C_MemoryTransmit_TXE_BTF+0x120>
 8006990:	687b      	ldr	r3, [r7, #4]
 8006992:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006994:	b29b      	uxth	r3, r3
 8006996:	2b00      	cmp	r3, #0
 8006998:	d120      	bne.n	80069dc <I2C_MemoryTransmit_TXE_BTF+0x120>
 800699a:	7bfb      	ldrb	r3, [r7, #15]
 800699c:	2b21      	cmp	r3, #33	; 0x21
 800699e:	d11d      	bne.n	80069dc <I2C_MemoryTransmit_TXE_BTF+0x120>
 80069a0:	687b      	ldr	r3, [r7, #4]
 80069a2:	681b      	ldr	r3, [r3, #0]
 80069a4:	685a      	ldr	r2, [r3, #4]
 80069a6:	687b      	ldr	r3, [r7, #4]
 80069a8:	681b      	ldr	r3, [r3, #0]
 80069aa:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80069ae:	605a      	str	r2, [r3, #4]
 80069b0:	687b      	ldr	r3, [r7, #4]
 80069b2:	681b      	ldr	r3, [r3, #0]
 80069b4:	681a      	ldr	r2, [r3, #0]
 80069b6:	687b      	ldr	r3, [r7, #4]
 80069b8:	681b      	ldr	r3, [r3, #0]
 80069ba:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80069be:	601a      	str	r2, [r3, #0]
 80069c0:	687b      	ldr	r3, [r7, #4]
 80069c2:	2200      	movs	r2, #0
 80069c4:	631a      	str	r2, [r3, #48]	; 0x30
 80069c6:	687b      	ldr	r3, [r7, #4]
 80069c8:	2220      	movs	r2, #32
 80069ca:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80069ce:	687b      	ldr	r3, [r7, #4]
 80069d0:	2200      	movs	r2, #0
 80069d2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80069d6:	6878      	ldr	r0, [r7, #4]
 80069d8:	f7ff fe36 	bl	8006648 <HAL_I2C_MemTxCpltCallback>
 80069dc:	bf00      	nop
 80069de:	3710      	adds	r7, #16
 80069e0:	46bd      	mov	sp, r7
 80069e2:	bd80      	pop	{r7, pc}

080069e4 <I2C_MasterReceive_RXNE>:
 80069e4:	b580      	push	{r7, lr}
 80069e6:	b084      	sub	sp, #16
 80069e8:	af00      	add	r7, sp, #0
 80069ea:	6078      	str	r0, [r7, #4]
 80069ec:	687b      	ldr	r3, [r7, #4]
 80069ee:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80069f2:	b2db      	uxtb	r3, r3
 80069f4:	2b22      	cmp	r3, #34	; 0x22
 80069f6:	f040 80ac 	bne.w	8006b52 <I2C_MasterReceive_RXNE+0x16e>
 80069fa:	687b      	ldr	r3, [r7, #4]
 80069fc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80069fe:	b29b      	uxth	r3, r3
 8006a00:	60fb      	str	r3, [r7, #12]
 8006a02:	68fb      	ldr	r3, [r7, #12]
 8006a04:	2b03      	cmp	r3, #3
 8006a06:	d921      	bls.n	8006a4c <I2C_MasterReceive_RXNE+0x68>
 8006a08:	687b      	ldr	r3, [r7, #4]
 8006a0a:	681b      	ldr	r3, [r3, #0]
 8006a0c:	691a      	ldr	r2, [r3, #16]
 8006a0e:	687b      	ldr	r3, [r7, #4]
 8006a10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006a12:	b2d2      	uxtb	r2, r2
 8006a14:	701a      	strb	r2, [r3, #0]
 8006a16:	687b      	ldr	r3, [r7, #4]
 8006a18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006a1a:	1c5a      	adds	r2, r3, #1
 8006a1c:	687b      	ldr	r3, [r7, #4]
 8006a1e:	625a      	str	r2, [r3, #36]	; 0x24
 8006a20:	687b      	ldr	r3, [r7, #4]
 8006a22:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006a24:	b29b      	uxth	r3, r3
 8006a26:	3b01      	subs	r3, #1
 8006a28:	b29a      	uxth	r2, r3
 8006a2a:	687b      	ldr	r3, [r7, #4]
 8006a2c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006a2e:	687b      	ldr	r3, [r7, #4]
 8006a30:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006a32:	b29b      	uxth	r3, r3
 8006a34:	2b03      	cmp	r3, #3
 8006a36:	f040 808c 	bne.w	8006b52 <I2C_MasterReceive_RXNE+0x16e>
 8006a3a:	687b      	ldr	r3, [r7, #4]
 8006a3c:	681b      	ldr	r3, [r3, #0]
 8006a3e:	685a      	ldr	r2, [r3, #4]
 8006a40:	687b      	ldr	r3, [r7, #4]
 8006a42:	681b      	ldr	r3, [r3, #0]
 8006a44:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006a48:	605a      	str	r2, [r3, #4]
 8006a4a:	e082      	b.n	8006b52 <I2C_MasterReceive_RXNE+0x16e>
 8006a4c:	687b      	ldr	r3, [r7, #4]
 8006a4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006a50:	2b02      	cmp	r3, #2
 8006a52:	d075      	beq.n	8006b40 <I2C_MasterReceive_RXNE+0x15c>
 8006a54:	68fb      	ldr	r3, [r7, #12]
 8006a56:	2b01      	cmp	r3, #1
 8006a58:	d002      	beq.n	8006a60 <I2C_MasterReceive_RXNE+0x7c>
 8006a5a:	68fb      	ldr	r3, [r7, #12]
 8006a5c:	2b00      	cmp	r3, #0
 8006a5e:	d16f      	bne.n	8006b40 <I2C_MasterReceive_RXNE+0x15c>
 8006a60:	6878      	ldr	r0, [r7, #4]
 8006a62:	f001 facf 	bl	8008004 <I2C_WaitOnSTOPRequestThroughIT>
 8006a66:	4603      	mov	r3, r0
 8006a68:	2b00      	cmp	r3, #0
 8006a6a:	d142      	bne.n	8006af2 <I2C_MasterReceive_RXNE+0x10e>
 8006a6c:	687b      	ldr	r3, [r7, #4]
 8006a6e:	681b      	ldr	r3, [r3, #0]
 8006a70:	681a      	ldr	r2, [r3, #0]
 8006a72:	687b      	ldr	r3, [r7, #4]
 8006a74:	681b      	ldr	r3, [r3, #0]
 8006a76:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006a7a:	601a      	str	r2, [r3, #0]
 8006a7c:	687b      	ldr	r3, [r7, #4]
 8006a7e:	681b      	ldr	r3, [r3, #0]
 8006a80:	685a      	ldr	r2, [r3, #4]
 8006a82:	687b      	ldr	r3, [r7, #4]
 8006a84:	681b      	ldr	r3, [r3, #0]
 8006a86:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006a8a:	605a      	str	r2, [r3, #4]
 8006a8c:	687b      	ldr	r3, [r7, #4]
 8006a8e:	681b      	ldr	r3, [r3, #0]
 8006a90:	691a      	ldr	r2, [r3, #16]
 8006a92:	687b      	ldr	r3, [r7, #4]
 8006a94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006a96:	b2d2      	uxtb	r2, r2
 8006a98:	701a      	strb	r2, [r3, #0]
 8006a9a:	687b      	ldr	r3, [r7, #4]
 8006a9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006a9e:	1c5a      	adds	r2, r3, #1
 8006aa0:	687b      	ldr	r3, [r7, #4]
 8006aa2:	625a      	str	r2, [r3, #36]	; 0x24
 8006aa4:	687b      	ldr	r3, [r7, #4]
 8006aa6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006aa8:	b29b      	uxth	r3, r3
 8006aaa:	3b01      	subs	r3, #1
 8006aac:	b29a      	uxth	r2, r3
 8006aae:	687b      	ldr	r3, [r7, #4]
 8006ab0:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006ab2:	687b      	ldr	r3, [r7, #4]
 8006ab4:	2220      	movs	r2, #32
 8006ab6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006aba:	687b      	ldr	r3, [r7, #4]
 8006abc:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006ac0:	b2db      	uxtb	r3, r3
 8006ac2:	2b40      	cmp	r3, #64	; 0x40
 8006ac4:	d10a      	bne.n	8006adc <I2C_MasterReceive_RXNE+0xf8>
 8006ac6:	687b      	ldr	r3, [r7, #4]
 8006ac8:	2200      	movs	r2, #0
 8006aca:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006ace:	687b      	ldr	r3, [r7, #4]
 8006ad0:	2200      	movs	r2, #0
 8006ad2:	631a      	str	r2, [r3, #48]	; 0x30
 8006ad4:	6878      	ldr	r0, [r7, #4]
 8006ad6:	f7ff fdc1 	bl	800665c <HAL_I2C_MemRxCpltCallback>
 8006ada:	e03a      	b.n	8006b52 <I2C_MasterReceive_RXNE+0x16e>
 8006adc:	687b      	ldr	r3, [r7, #4]
 8006ade:	2200      	movs	r2, #0
 8006ae0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006ae4:	687b      	ldr	r3, [r7, #4]
 8006ae6:	2212      	movs	r2, #18
 8006ae8:	631a      	str	r2, [r3, #48]	; 0x30
 8006aea:	6878      	ldr	r0, [r7, #4]
 8006aec:	f7ff fd76 	bl	80065dc <HAL_I2C_MasterRxCpltCallback>
 8006af0:	e02f      	b.n	8006b52 <I2C_MasterReceive_RXNE+0x16e>
 8006af2:	687b      	ldr	r3, [r7, #4]
 8006af4:	681b      	ldr	r3, [r3, #0]
 8006af6:	685a      	ldr	r2, [r3, #4]
 8006af8:	687b      	ldr	r3, [r7, #4]
 8006afa:	681b      	ldr	r3, [r3, #0]
 8006afc:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006b00:	605a      	str	r2, [r3, #4]
 8006b02:	687b      	ldr	r3, [r7, #4]
 8006b04:	681b      	ldr	r3, [r3, #0]
 8006b06:	691a      	ldr	r2, [r3, #16]
 8006b08:	687b      	ldr	r3, [r7, #4]
 8006b0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006b0c:	b2d2      	uxtb	r2, r2
 8006b0e:	701a      	strb	r2, [r3, #0]
 8006b10:	687b      	ldr	r3, [r7, #4]
 8006b12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006b14:	1c5a      	adds	r2, r3, #1
 8006b16:	687b      	ldr	r3, [r7, #4]
 8006b18:	625a      	str	r2, [r3, #36]	; 0x24
 8006b1a:	687b      	ldr	r3, [r7, #4]
 8006b1c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006b1e:	b29b      	uxth	r3, r3
 8006b20:	3b01      	subs	r3, #1
 8006b22:	b29a      	uxth	r2, r3
 8006b24:	687b      	ldr	r3, [r7, #4]
 8006b26:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006b28:	687b      	ldr	r3, [r7, #4]
 8006b2a:	2220      	movs	r2, #32
 8006b2c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006b30:	687b      	ldr	r3, [r7, #4]
 8006b32:	2200      	movs	r2, #0
 8006b34:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006b38:	6878      	ldr	r0, [r7, #4]
 8006b3a:	f7ff fd99 	bl	8006670 <HAL_I2C_ErrorCallback>
 8006b3e:	e008      	b.n	8006b52 <I2C_MasterReceive_RXNE+0x16e>
 8006b40:	687b      	ldr	r3, [r7, #4]
 8006b42:	681b      	ldr	r3, [r3, #0]
 8006b44:	685a      	ldr	r2, [r3, #4]
 8006b46:	687b      	ldr	r3, [r7, #4]
 8006b48:	681b      	ldr	r3, [r3, #0]
 8006b4a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006b4e:	605a      	str	r2, [r3, #4]
 8006b50:	e7ff      	b.n	8006b52 <I2C_MasterReceive_RXNE+0x16e>
 8006b52:	bf00      	nop
 8006b54:	3710      	adds	r7, #16
 8006b56:	46bd      	mov	sp, r7
 8006b58:	bd80      	pop	{r7, pc}

08006b5a <I2C_MasterReceive_BTF>:
 8006b5a:	b580      	push	{r7, lr}
 8006b5c:	b084      	sub	sp, #16
 8006b5e:	af00      	add	r7, sp, #0
 8006b60:	6078      	str	r0, [r7, #4]
 8006b62:	687b      	ldr	r3, [r7, #4]
 8006b64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b66:	60fb      	str	r3, [r7, #12]
 8006b68:	687b      	ldr	r3, [r7, #4]
 8006b6a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006b6c:	b29b      	uxth	r3, r3
 8006b6e:	2b04      	cmp	r3, #4
 8006b70:	d11b      	bne.n	8006baa <I2C_MasterReceive_BTF+0x50>
 8006b72:	687b      	ldr	r3, [r7, #4]
 8006b74:	681b      	ldr	r3, [r3, #0]
 8006b76:	685a      	ldr	r2, [r3, #4]
 8006b78:	687b      	ldr	r3, [r7, #4]
 8006b7a:	681b      	ldr	r3, [r3, #0]
 8006b7c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006b80:	605a      	str	r2, [r3, #4]
 8006b82:	687b      	ldr	r3, [r7, #4]
 8006b84:	681b      	ldr	r3, [r3, #0]
 8006b86:	691a      	ldr	r2, [r3, #16]
 8006b88:	687b      	ldr	r3, [r7, #4]
 8006b8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006b8c:	b2d2      	uxtb	r2, r2
 8006b8e:	701a      	strb	r2, [r3, #0]
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006b94:	1c5a      	adds	r2, r3, #1
 8006b96:	687b      	ldr	r3, [r7, #4]
 8006b98:	625a      	str	r2, [r3, #36]	; 0x24
 8006b9a:	687b      	ldr	r3, [r7, #4]
 8006b9c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006b9e:	b29b      	uxth	r3, r3
 8006ba0:	3b01      	subs	r3, #1
 8006ba2:	b29a      	uxth	r2, r3
 8006ba4:	687b      	ldr	r3, [r7, #4]
 8006ba6:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006ba8:	e0bd      	b.n	8006d26 <I2C_MasterReceive_BTF+0x1cc>
 8006baa:	687b      	ldr	r3, [r7, #4]
 8006bac:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006bae:	b29b      	uxth	r3, r3
 8006bb0:	2b03      	cmp	r3, #3
 8006bb2:	d129      	bne.n	8006c08 <I2C_MasterReceive_BTF+0xae>
 8006bb4:	687b      	ldr	r3, [r7, #4]
 8006bb6:	681b      	ldr	r3, [r3, #0]
 8006bb8:	685a      	ldr	r2, [r3, #4]
 8006bba:	687b      	ldr	r3, [r7, #4]
 8006bbc:	681b      	ldr	r3, [r3, #0]
 8006bbe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006bc2:	605a      	str	r2, [r3, #4]
 8006bc4:	68fb      	ldr	r3, [r7, #12]
 8006bc6:	2b04      	cmp	r3, #4
 8006bc8:	d00a      	beq.n	8006be0 <I2C_MasterReceive_BTF+0x86>
 8006bca:	68fb      	ldr	r3, [r7, #12]
 8006bcc:	2b02      	cmp	r3, #2
 8006bce:	d007      	beq.n	8006be0 <I2C_MasterReceive_BTF+0x86>
 8006bd0:	687b      	ldr	r3, [r7, #4]
 8006bd2:	681b      	ldr	r3, [r3, #0]
 8006bd4:	681a      	ldr	r2, [r3, #0]
 8006bd6:	687b      	ldr	r3, [r7, #4]
 8006bd8:	681b      	ldr	r3, [r3, #0]
 8006bda:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006bde:	601a      	str	r2, [r3, #0]
 8006be0:	687b      	ldr	r3, [r7, #4]
 8006be2:	681b      	ldr	r3, [r3, #0]
 8006be4:	691a      	ldr	r2, [r3, #16]
 8006be6:	687b      	ldr	r3, [r7, #4]
 8006be8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006bea:	b2d2      	uxtb	r2, r2
 8006bec:	701a      	strb	r2, [r3, #0]
 8006bee:	687b      	ldr	r3, [r7, #4]
 8006bf0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006bf2:	1c5a      	adds	r2, r3, #1
 8006bf4:	687b      	ldr	r3, [r7, #4]
 8006bf6:	625a      	str	r2, [r3, #36]	; 0x24
 8006bf8:	687b      	ldr	r3, [r7, #4]
 8006bfa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006bfc:	b29b      	uxth	r3, r3
 8006bfe:	3b01      	subs	r3, #1
 8006c00:	b29a      	uxth	r2, r3
 8006c02:	687b      	ldr	r3, [r7, #4]
 8006c04:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006c06:	e08e      	b.n	8006d26 <I2C_MasterReceive_BTF+0x1cc>
 8006c08:	687b      	ldr	r3, [r7, #4]
 8006c0a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006c0c:	b29b      	uxth	r3, r3
 8006c0e:	2b02      	cmp	r3, #2
 8006c10:	d176      	bne.n	8006d00 <I2C_MasterReceive_BTF+0x1a6>
 8006c12:	68fb      	ldr	r3, [r7, #12]
 8006c14:	2b01      	cmp	r3, #1
 8006c16:	d002      	beq.n	8006c1e <I2C_MasterReceive_BTF+0xc4>
 8006c18:	68fb      	ldr	r3, [r7, #12]
 8006c1a:	2b10      	cmp	r3, #16
 8006c1c:	d108      	bne.n	8006c30 <I2C_MasterReceive_BTF+0xd6>
 8006c1e:	687b      	ldr	r3, [r7, #4]
 8006c20:	681b      	ldr	r3, [r3, #0]
 8006c22:	681a      	ldr	r2, [r3, #0]
 8006c24:	687b      	ldr	r3, [r7, #4]
 8006c26:	681b      	ldr	r3, [r3, #0]
 8006c28:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006c2c:	601a      	str	r2, [r3, #0]
 8006c2e:	e019      	b.n	8006c64 <I2C_MasterReceive_BTF+0x10a>
 8006c30:	68fb      	ldr	r3, [r7, #12]
 8006c32:	2b04      	cmp	r3, #4
 8006c34:	d002      	beq.n	8006c3c <I2C_MasterReceive_BTF+0xe2>
 8006c36:	68fb      	ldr	r3, [r7, #12]
 8006c38:	2b02      	cmp	r3, #2
 8006c3a:	d108      	bne.n	8006c4e <I2C_MasterReceive_BTF+0xf4>
 8006c3c:	687b      	ldr	r3, [r7, #4]
 8006c3e:	681b      	ldr	r3, [r3, #0]
 8006c40:	681a      	ldr	r2, [r3, #0]
 8006c42:	687b      	ldr	r3, [r7, #4]
 8006c44:	681b      	ldr	r3, [r3, #0]
 8006c46:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006c4a:	601a      	str	r2, [r3, #0]
 8006c4c:	e00a      	b.n	8006c64 <I2C_MasterReceive_BTF+0x10a>
 8006c4e:	68fb      	ldr	r3, [r7, #12]
 8006c50:	2b10      	cmp	r3, #16
 8006c52:	d007      	beq.n	8006c64 <I2C_MasterReceive_BTF+0x10a>
 8006c54:	687b      	ldr	r3, [r7, #4]
 8006c56:	681b      	ldr	r3, [r3, #0]
 8006c58:	681a      	ldr	r2, [r3, #0]
 8006c5a:	687b      	ldr	r3, [r7, #4]
 8006c5c:	681b      	ldr	r3, [r3, #0]
 8006c5e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006c62:	601a      	str	r2, [r3, #0]
 8006c64:	687b      	ldr	r3, [r7, #4]
 8006c66:	681b      	ldr	r3, [r3, #0]
 8006c68:	691a      	ldr	r2, [r3, #16]
 8006c6a:	687b      	ldr	r3, [r7, #4]
 8006c6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006c6e:	b2d2      	uxtb	r2, r2
 8006c70:	701a      	strb	r2, [r3, #0]
 8006c72:	687b      	ldr	r3, [r7, #4]
 8006c74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006c76:	1c5a      	adds	r2, r3, #1
 8006c78:	687b      	ldr	r3, [r7, #4]
 8006c7a:	625a      	str	r2, [r3, #36]	; 0x24
 8006c7c:	687b      	ldr	r3, [r7, #4]
 8006c7e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006c80:	b29b      	uxth	r3, r3
 8006c82:	3b01      	subs	r3, #1
 8006c84:	b29a      	uxth	r2, r3
 8006c86:	687b      	ldr	r3, [r7, #4]
 8006c88:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006c8a:	687b      	ldr	r3, [r7, #4]
 8006c8c:	681b      	ldr	r3, [r3, #0]
 8006c8e:	691a      	ldr	r2, [r3, #16]
 8006c90:	687b      	ldr	r3, [r7, #4]
 8006c92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006c94:	b2d2      	uxtb	r2, r2
 8006c96:	701a      	strb	r2, [r3, #0]
 8006c98:	687b      	ldr	r3, [r7, #4]
 8006c9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006c9c:	1c5a      	adds	r2, r3, #1
 8006c9e:	687b      	ldr	r3, [r7, #4]
 8006ca0:	625a      	str	r2, [r3, #36]	; 0x24
 8006ca2:	687b      	ldr	r3, [r7, #4]
 8006ca4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006ca6:	b29b      	uxth	r3, r3
 8006ca8:	3b01      	subs	r3, #1
 8006caa:	b29a      	uxth	r2, r3
 8006cac:	687b      	ldr	r3, [r7, #4]
 8006cae:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006cb0:	687b      	ldr	r3, [r7, #4]
 8006cb2:	681b      	ldr	r3, [r3, #0]
 8006cb4:	685a      	ldr	r2, [r3, #4]
 8006cb6:	687b      	ldr	r3, [r7, #4]
 8006cb8:	681b      	ldr	r3, [r3, #0]
 8006cba:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8006cbe:	605a      	str	r2, [r3, #4]
 8006cc0:	687b      	ldr	r3, [r7, #4]
 8006cc2:	2220      	movs	r2, #32
 8006cc4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006cc8:	687b      	ldr	r3, [r7, #4]
 8006cca:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006cce:	b2db      	uxtb	r3, r3
 8006cd0:	2b40      	cmp	r3, #64	; 0x40
 8006cd2:	d10a      	bne.n	8006cea <I2C_MasterReceive_BTF+0x190>
 8006cd4:	687b      	ldr	r3, [r7, #4]
 8006cd6:	2200      	movs	r2, #0
 8006cd8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006cdc:	687b      	ldr	r3, [r7, #4]
 8006cde:	2200      	movs	r2, #0
 8006ce0:	631a      	str	r2, [r3, #48]	; 0x30
 8006ce2:	6878      	ldr	r0, [r7, #4]
 8006ce4:	f7ff fcba 	bl	800665c <HAL_I2C_MemRxCpltCallback>
 8006ce8:	e01d      	b.n	8006d26 <I2C_MasterReceive_BTF+0x1cc>
 8006cea:	687b      	ldr	r3, [r7, #4]
 8006cec:	2200      	movs	r2, #0
 8006cee:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006cf2:	687b      	ldr	r3, [r7, #4]
 8006cf4:	2212      	movs	r2, #18
 8006cf6:	631a      	str	r2, [r3, #48]	; 0x30
 8006cf8:	6878      	ldr	r0, [r7, #4]
 8006cfa:	f7ff fc6f 	bl	80065dc <HAL_I2C_MasterRxCpltCallback>
 8006cfe:	e012      	b.n	8006d26 <I2C_MasterReceive_BTF+0x1cc>
 8006d00:	687b      	ldr	r3, [r7, #4]
 8006d02:	681b      	ldr	r3, [r3, #0]
 8006d04:	691a      	ldr	r2, [r3, #16]
 8006d06:	687b      	ldr	r3, [r7, #4]
 8006d08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006d0a:	b2d2      	uxtb	r2, r2
 8006d0c:	701a      	strb	r2, [r3, #0]
 8006d0e:	687b      	ldr	r3, [r7, #4]
 8006d10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006d12:	1c5a      	adds	r2, r3, #1
 8006d14:	687b      	ldr	r3, [r7, #4]
 8006d16:	625a      	str	r2, [r3, #36]	; 0x24
 8006d18:	687b      	ldr	r3, [r7, #4]
 8006d1a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006d1c:	b29b      	uxth	r3, r3
 8006d1e:	3b01      	subs	r3, #1
 8006d20:	b29a      	uxth	r2, r3
 8006d22:	687b      	ldr	r3, [r7, #4]
 8006d24:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006d26:	bf00      	nop
 8006d28:	3710      	adds	r7, #16
 8006d2a:	46bd      	mov	sp, r7
 8006d2c:	bd80      	pop	{r7, pc}

08006d2e <I2C_Master_SB>:
 8006d2e:	b480      	push	{r7}
 8006d30:	b083      	sub	sp, #12
 8006d32:	af00      	add	r7, sp, #0
 8006d34:	6078      	str	r0, [r7, #4]
 8006d36:	687b      	ldr	r3, [r7, #4]
 8006d38:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006d3c:	b2db      	uxtb	r3, r3
 8006d3e:	2b40      	cmp	r3, #64	; 0x40
 8006d40:	d117      	bne.n	8006d72 <I2C_Master_SB+0x44>
 8006d42:	687b      	ldr	r3, [r7, #4]
 8006d44:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006d46:	2b00      	cmp	r3, #0
 8006d48:	d109      	bne.n	8006d5e <I2C_Master_SB+0x30>
 8006d4a:	687b      	ldr	r3, [r7, #4]
 8006d4c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006d4e:	b2db      	uxtb	r3, r3
 8006d50:	461a      	mov	r2, r3
 8006d52:	687b      	ldr	r3, [r7, #4]
 8006d54:	681b      	ldr	r3, [r3, #0]
 8006d56:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8006d5a:	611a      	str	r2, [r3, #16]
 8006d5c:	e067      	b.n	8006e2e <I2C_Master_SB+0x100>
 8006d5e:	687b      	ldr	r3, [r7, #4]
 8006d60:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006d62:	b2db      	uxtb	r3, r3
 8006d64:	f043 0301 	orr.w	r3, r3, #1
 8006d68:	b2da      	uxtb	r2, r3
 8006d6a:	687b      	ldr	r3, [r7, #4]
 8006d6c:	681b      	ldr	r3, [r3, #0]
 8006d6e:	611a      	str	r2, [r3, #16]
 8006d70:	e05d      	b.n	8006e2e <I2C_Master_SB+0x100>
 8006d72:	687b      	ldr	r3, [r7, #4]
 8006d74:	691b      	ldr	r3, [r3, #16]
 8006d76:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8006d7a:	d133      	bne.n	8006de4 <I2C_Master_SB+0xb6>
 8006d7c:	687b      	ldr	r3, [r7, #4]
 8006d7e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006d82:	b2db      	uxtb	r3, r3
 8006d84:	2b21      	cmp	r3, #33	; 0x21
 8006d86:	d109      	bne.n	8006d9c <I2C_Master_SB+0x6e>
 8006d88:	687b      	ldr	r3, [r7, #4]
 8006d8a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006d8c:	b2db      	uxtb	r3, r3
 8006d8e:	461a      	mov	r2, r3
 8006d90:	687b      	ldr	r3, [r7, #4]
 8006d92:	681b      	ldr	r3, [r3, #0]
 8006d94:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8006d98:	611a      	str	r2, [r3, #16]
 8006d9a:	e008      	b.n	8006dae <I2C_Master_SB+0x80>
 8006d9c:	687b      	ldr	r3, [r7, #4]
 8006d9e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006da0:	b2db      	uxtb	r3, r3
 8006da2:	f043 0301 	orr.w	r3, r3, #1
 8006da6:	b2da      	uxtb	r2, r3
 8006da8:	687b      	ldr	r3, [r7, #4]
 8006daa:	681b      	ldr	r3, [r3, #0]
 8006dac:	611a      	str	r2, [r3, #16]
 8006dae:	687b      	ldr	r3, [r7, #4]
 8006db0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006db2:	2b00      	cmp	r3, #0
 8006db4:	d004      	beq.n	8006dc0 <I2C_Master_SB+0x92>
 8006db6:	687b      	ldr	r3, [r7, #4]
 8006db8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006dba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006dbc:	2b00      	cmp	r3, #0
 8006dbe:	d108      	bne.n	8006dd2 <I2C_Master_SB+0xa4>
 8006dc0:	687b      	ldr	r3, [r7, #4]
 8006dc2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006dc4:	2b00      	cmp	r3, #0
 8006dc6:	d032      	beq.n	8006e2e <I2C_Master_SB+0x100>
 8006dc8:	687b      	ldr	r3, [r7, #4]
 8006dca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006dcc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006dce:	2b00      	cmp	r3, #0
 8006dd0:	d02d      	beq.n	8006e2e <I2C_Master_SB+0x100>
 8006dd2:	687b      	ldr	r3, [r7, #4]
 8006dd4:	681b      	ldr	r3, [r3, #0]
 8006dd6:	685a      	ldr	r2, [r3, #4]
 8006dd8:	687b      	ldr	r3, [r7, #4]
 8006dda:	681b      	ldr	r3, [r3, #0]
 8006ddc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006de0:	605a      	str	r2, [r3, #4]
 8006de2:	e024      	b.n	8006e2e <I2C_Master_SB+0x100>
 8006de4:	687b      	ldr	r3, [r7, #4]
 8006de6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006de8:	2b00      	cmp	r3, #0
 8006dea:	d10e      	bne.n	8006e0a <I2C_Master_SB+0xdc>
 8006dec:	687b      	ldr	r3, [r7, #4]
 8006dee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006df0:	b29b      	uxth	r3, r3
 8006df2:	11db      	asrs	r3, r3, #7
 8006df4:	b2db      	uxtb	r3, r3
 8006df6:	f003 0306 	and.w	r3, r3, #6
 8006dfa:	b2db      	uxtb	r3, r3
 8006dfc:	f063 030f 	orn	r3, r3, #15
 8006e00:	b2da      	uxtb	r2, r3
 8006e02:	687b      	ldr	r3, [r7, #4]
 8006e04:	681b      	ldr	r3, [r3, #0]
 8006e06:	611a      	str	r2, [r3, #16]
 8006e08:	e011      	b.n	8006e2e <I2C_Master_SB+0x100>
 8006e0a:	687b      	ldr	r3, [r7, #4]
 8006e0c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006e0e:	2b01      	cmp	r3, #1
 8006e10:	d10d      	bne.n	8006e2e <I2C_Master_SB+0x100>
 8006e12:	687b      	ldr	r3, [r7, #4]
 8006e14:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e16:	b29b      	uxth	r3, r3
 8006e18:	11db      	asrs	r3, r3, #7
 8006e1a:	b2db      	uxtb	r3, r3
 8006e1c:	f003 0306 	and.w	r3, r3, #6
 8006e20:	b2db      	uxtb	r3, r3
 8006e22:	f063 030e 	orn	r3, r3, #14
 8006e26:	b2da      	uxtb	r2, r3
 8006e28:	687b      	ldr	r3, [r7, #4]
 8006e2a:	681b      	ldr	r3, [r3, #0]
 8006e2c:	611a      	str	r2, [r3, #16]
 8006e2e:	bf00      	nop
 8006e30:	370c      	adds	r7, #12
 8006e32:	46bd      	mov	sp, r7
 8006e34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e38:	4770      	bx	lr

08006e3a <I2C_Master_ADD10>:
 8006e3a:	b480      	push	{r7}
 8006e3c:	b083      	sub	sp, #12
 8006e3e:	af00      	add	r7, sp, #0
 8006e40:	6078      	str	r0, [r7, #4]
 8006e42:	687b      	ldr	r3, [r7, #4]
 8006e44:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e46:	b2da      	uxtb	r2, r3
 8006e48:	687b      	ldr	r3, [r7, #4]
 8006e4a:	681b      	ldr	r3, [r3, #0]
 8006e4c:	611a      	str	r2, [r3, #16]
 8006e4e:	687b      	ldr	r3, [r7, #4]
 8006e50:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006e52:	2b00      	cmp	r3, #0
 8006e54:	d004      	beq.n	8006e60 <I2C_Master_ADD10+0x26>
 8006e56:	687b      	ldr	r3, [r7, #4]
 8006e58:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006e5a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006e5c:	2b00      	cmp	r3, #0
 8006e5e:	d108      	bne.n	8006e72 <I2C_Master_ADD10+0x38>
 8006e60:	687b      	ldr	r3, [r7, #4]
 8006e62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006e64:	2b00      	cmp	r3, #0
 8006e66:	d00c      	beq.n	8006e82 <I2C_Master_ADD10+0x48>
 8006e68:	687b      	ldr	r3, [r7, #4]
 8006e6a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006e6c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006e6e:	2b00      	cmp	r3, #0
 8006e70:	d007      	beq.n	8006e82 <I2C_Master_ADD10+0x48>
 8006e72:	687b      	ldr	r3, [r7, #4]
 8006e74:	681b      	ldr	r3, [r3, #0]
 8006e76:	685a      	ldr	r2, [r3, #4]
 8006e78:	687b      	ldr	r3, [r7, #4]
 8006e7a:	681b      	ldr	r3, [r3, #0]
 8006e7c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006e80:	605a      	str	r2, [r3, #4]
 8006e82:	bf00      	nop
 8006e84:	370c      	adds	r7, #12
 8006e86:	46bd      	mov	sp, r7
 8006e88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e8c:	4770      	bx	lr

08006e8e <I2C_Master_ADDR>:
 8006e8e:	b480      	push	{r7}
 8006e90:	b091      	sub	sp, #68	; 0x44
 8006e92:	af00      	add	r7, sp, #0
 8006e94:	6078      	str	r0, [r7, #4]
 8006e96:	687b      	ldr	r3, [r7, #4]
 8006e98:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006e9c:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8006ea0:	687b      	ldr	r3, [r7, #4]
 8006ea2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006ea4:	63bb      	str	r3, [r7, #56]	; 0x38
 8006ea6:	687b      	ldr	r3, [r7, #4]
 8006ea8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006eaa:	637b      	str	r3, [r7, #52]	; 0x34
 8006eac:	687b      	ldr	r3, [r7, #4]
 8006eae:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006eb2:	b2db      	uxtb	r3, r3
 8006eb4:	2b22      	cmp	r3, #34	; 0x22
 8006eb6:	f040 8169 	bne.w	800718c <I2C_Master_ADDR+0x2fe>
 8006eba:	687b      	ldr	r3, [r7, #4]
 8006ebc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006ebe:	2b00      	cmp	r3, #0
 8006ec0:	d10f      	bne.n	8006ee2 <I2C_Master_ADDR+0x54>
 8006ec2:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 8006ec6:	2b40      	cmp	r3, #64	; 0x40
 8006ec8:	d10b      	bne.n	8006ee2 <I2C_Master_ADDR+0x54>
 8006eca:	2300      	movs	r3, #0
 8006ecc:	633b      	str	r3, [r7, #48]	; 0x30
 8006ece:	687b      	ldr	r3, [r7, #4]
 8006ed0:	681b      	ldr	r3, [r3, #0]
 8006ed2:	695b      	ldr	r3, [r3, #20]
 8006ed4:	633b      	str	r3, [r7, #48]	; 0x30
 8006ed6:	687b      	ldr	r3, [r7, #4]
 8006ed8:	681b      	ldr	r3, [r3, #0]
 8006eda:	699b      	ldr	r3, [r3, #24]
 8006edc:	633b      	str	r3, [r7, #48]	; 0x30
 8006ede:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006ee0:	e160      	b.n	80071a4 <I2C_Master_ADDR+0x316>
 8006ee2:	687b      	ldr	r3, [r7, #4]
 8006ee4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006ee6:	2b00      	cmp	r3, #0
 8006ee8:	d11d      	bne.n	8006f26 <I2C_Master_ADDR+0x98>
 8006eea:	687b      	ldr	r3, [r7, #4]
 8006eec:	691b      	ldr	r3, [r3, #16]
 8006eee:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8006ef2:	d118      	bne.n	8006f26 <I2C_Master_ADDR+0x98>
 8006ef4:	2300      	movs	r3, #0
 8006ef6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006ef8:	687b      	ldr	r3, [r7, #4]
 8006efa:	681b      	ldr	r3, [r3, #0]
 8006efc:	695b      	ldr	r3, [r3, #20]
 8006efe:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006f00:	687b      	ldr	r3, [r7, #4]
 8006f02:	681b      	ldr	r3, [r3, #0]
 8006f04:	699b      	ldr	r3, [r3, #24]
 8006f06:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006f08:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006f0a:	687b      	ldr	r3, [r7, #4]
 8006f0c:	681b      	ldr	r3, [r3, #0]
 8006f0e:	681a      	ldr	r2, [r3, #0]
 8006f10:	687b      	ldr	r3, [r7, #4]
 8006f12:	681b      	ldr	r3, [r3, #0]
 8006f14:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006f18:	601a      	str	r2, [r3, #0]
 8006f1a:	687b      	ldr	r3, [r7, #4]
 8006f1c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006f1e:	1c5a      	adds	r2, r3, #1
 8006f20:	687b      	ldr	r3, [r7, #4]
 8006f22:	651a      	str	r2, [r3, #80]	; 0x50
 8006f24:	e13e      	b.n	80071a4 <I2C_Master_ADDR+0x316>
 8006f26:	687b      	ldr	r3, [r7, #4]
 8006f28:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006f2a:	b29b      	uxth	r3, r3
 8006f2c:	2b00      	cmp	r3, #0
 8006f2e:	d113      	bne.n	8006f58 <I2C_Master_ADDR+0xca>
 8006f30:	2300      	movs	r3, #0
 8006f32:	62bb      	str	r3, [r7, #40]	; 0x28
 8006f34:	687b      	ldr	r3, [r7, #4]
 8006f36:	681b      	ldr	r3, [r3, #0]
 8006f38:	695b      	ldr	r3, [r3, #20]
 8006f3a:	62bb      	str	r3, [r7, #40]	; 0x28
 8006f3c:	687b      	ldr	r3, [r7, #4]
 8006f3e:	681b      	ldr	r3, [r3, #0]
 8006f40:	699b      	ldr	r3, [r3, #24]
 8006f42:	62bb      	str	r3, [r7, #40]	; 0x28
 8006f44:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006f46:	687b      	ldr	r3, [r7, #4]
 8006f48:	681b      	ldr	r3, [r3, #0]
 8006f4a:	681a      	ldr	r2, [r3, #0]
 8006f4c:	687b      	ldr	r3, [r7, #4]
 8006f4e:	681b      	ldr	r3, [r3, #0]
 8006f50:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006f54:	601a      	str	r2, [r3, #0]
 8006f56:	e115      	b.n	8007184 <I2C_Master_ADDR+0x2f6>
 8006f58:	687b      	ldr	r3, [r7, #4]
 8006f5a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006f5c:	b29b      	uxth	r3, r3
 8006f5e:	2b01      	cmp	r3, #1
 8006f60:	f040 808a 	bne.w	8007078 <I2C_Master_ADDR+0x1ea>
 8006f64:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f66:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8006f6a:	d137      	bne.n	8006fdc <I2C_Master_ADDR+0x14e>
 8006f6c:	687b      	ldr	r3, [r7, #4]
 8006f6e:	681b      	ldr	r3, [r3, #0]
 8006f70:	681a      	ldr	r2, [r3, #0]
 8006f72:	687b      	ldr	r3, [r7, #4]
 8006f74:	681b      	ldr	r3, [r3, #0]
 8006f76:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006f7a:	601a      	str	r2, [r3, #0]
 8006f7c:	687b      	ldr	r3, [r7, #4]
 8006f7e:	681b      	ldr	r3, [r3, #0]
 8006f80:	685b      	ldr	r3, [r3, #4]
 8006f82:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8006f86:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006f8a:	d113      	bne.n	8006fb4 <I2C_Master_ADDR+0x126>
 8006f8c:	687b      	ldr	r3, [r7, #4]
 8006f8e:	681b      	ldr	r3, [r3, #0]
 8006f90:	681a      	ldr	r2, [r3, #0]
 8006f92:	687b      	ldr	r3, [r7, #4]
 8006f94:	681b      	ldr	r3, [r3, #0]
 8006f96:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006f9a:	601a      	str	r2, [r3, #0]
 8006f9c:	2300      	movs	r3, #0
 8006f9e:	627b      	str	r3, [r7, #36]	; 0x24
 8006fa0:	687b      	ldr	r3, [r7, #4]
 8006fa2:	681b      	ldr	r3, [r3, #0]
 8006fa4:	695b      	ldr	r3, [r3, #20]
 8006fa6:	627b      	str	r3, [r7, #36]	; 0x24
 8006fa8:	687b      	ldr	r3, [r7, #4]
 8006faa:	681b      	ldr	r3, [r3, #0]
 8006fac:	699b      	ldr	r3, [r3, #24]
 8006fae:	627b      	str	r3, [r7, #36]	; 0x24
 8006fb0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006fb2:	e0e7      	b.n	8007184 <I2C_Master_ADDR+0x2f6>
 8006fb4:	2300      	movs	r3, #0
 8006fb6:	623b      	str	r3, [r7, #32]
 8006fb8:	687b      	ldr	r3, [r7, #4]
 8006fba:	681b      	ldr	r3, [r3, #0]
 8006fbc:	695b      	ldr	r3, [r3, #20]
 8006fbe:	623b      	str	r3, [r7, #32]
 8006fc0:	687b      	ldr	r3, [r7, #4]
 8006fc2:	681b      	ldr	r3, [r3, #0]
 8006fc4:	699b      	ldr	r3, [r3, #24]
 8006fc6:	623b      	str	r3, [r7, #32]
 8006fc8:	6a3b      	ldr	r3, [r7, #32]
 8006fca:	687b      	ldr	r3, [r7, #4]
 8006fcc:	681b      	ldr	r3, [r3, #0]
 8006fce:	681a      	ldr	r2, [r3, #0]
 8006fd0:	687b      	ldr	r3, [r7, #4]
 8006fd2:	681b      	ldr	r3, [r3, #0]
 8006fd4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006fd8:	601a      	str	r2, [r3, #0]
 8006fda:	e0d3      	b.n	8007184 <I2C_Master_ADDR+0x2f6>
 8006fdc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006fde:	2b08      	cmp	r3, #8
 8006fe0:	d02e      	beq.n	8007040 <I2C_Master_ADDR+0x1b2>
 8006fe2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006fe4:	2b20      	cmp	r3, #32
 8006fe6:	d02b      	beq.n	8007040 <I2C_Master_ADDR+0x1b2>
 8006fe8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006fea:	2b12      	cmp	r3, #18
 8006fec:	d102      	bne.n	8006ff4 <I2C_Master_ADDR+0x166>
 8006fee:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006ff0:	2b01      	cmp	r3, #1
 8006ff2:	d125      	bne.n	8007040 <I2C_Master_ADDR+0x1b2>
 8006ff4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006ff6:	2b04      	cmp	r3, #4
 8006ff8:	d00e      	beq.n	8007018 <I2C_Master_ADDR+0x18a>
 8006ffa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006ffc:	2b02      	cmp	r3, #2
 8006ffe:	d00b      	beq.n	8007018 <I2C_Master_ADDR+0x18a>
 8007000:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007002:	2b10      	cmp	r3, #16
 8007004:	d008      	beq.n	8007018 <I2C_Master_ADDR+0x18a>
 8007006:	687b      	ldr	r3, [r7, #4]
 8007008:	681b      	ldr	r3, [r3, #0]
 800700a:	681a      	ldr	r2, [r3, #0]
 800700c:	687b      	ldr	r3, [r7, #4]
 800700e:	681b      	ldr	r3, [r3, #0]
 8007010:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007014:	601a      	str	r2, [r3, #0]
 8007016:	e007      	b.n	8007028 <I2C_Master_ADDR+0x19a>
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	681b      	ldr	r3, [r3, #0]
 800701c:	681a      	ldr	r2, [r3, #0]
 800701e:	687b      	ldr	r3, [r7, #4]
 8007020:	681b      	ldr	r3, [r3, #0]
 8007022:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007026:	601a      	str	r2, [r3, #0]
 8007028:	2300      	movs	r3, #0
 800702a:	61fb      	str	r3, [r7, #28]
 800702c:	687b      	ldr	r3, [r7, #4]
 800702e:	681b      	ldr	r3, [r3, #0]
 8007030:	695b      	ldr	r3, [r3, #20]
 8007032:	61fb      	str	r3, [r7, #28]
 8007034:	687b      	ldr	r3, [r7, #4]
 8007036:	681b      	ldr	r3, [r3, #0]
 8007038:	699b      	ldr	r3, [r3, #24]
 800703a:	61fb      	str	r3, [r7, #28]
 800703c:	69fb      	ldr	r3, [r7, #28]
 800703e:	e0a1      	b.n	8007184 <I2C_Master_ADDR+0x2f6>
 8007040:	687b      	ldr	r3, [r7, #4]
 8007042:	681b      	ldr	r3, [r3, #0]
 8007044:	681a      	ldr	r2, [r3, #0]
 8007046:	687b      	ldr	r3, [r7, #4]
 8007048:	681b      	ldr	r3, [r3, #0]
 800704a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800704e:	601a      	str	r2, [r3, #0]
 8007050:	2300      	movs	r3, #0
 8007052:	61bb      	str	r3, [r7, #24]
 8007054:	687b      	ldr	r3, [r7, #4]
 8007056:	681b      	ldr	r3, [r3, #0]
 8007058:	695b      	ldr	r3, [r3, #20]
 800705a:	61bb      	str	r3, [r7, #24]
 800705c:	687b      	ldr	r3, [r7, #4]
 800705e:	681b      	ldr	r3, [r3, #0]
 8007060:	699b      	ldr	r3, [r3, #24]
 8007062:	61bb      	str	r3, [r7, #24]
 8007064:	69bb      	ldr	r3, [r7, #24]
 8007066:	687b      	ldr	r3, [r7, #4]
 8007068:	681b      	ldr	r3, [r3, #0]
 800706a:	681a      	ldr	r2, [r3, #0]
 800706c:	687b      	ldr	r3, [r7, #4]
 800706e:	681b      	ldr	r3, [r3, #0]
 8007070:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007074:	601a      	str	r2, [r3, #0]
 8007076:	e085      	b.n	8007184 <I2C_Master_ADDR+0x2f6>
 8007078:	687b      	ldr	r3, [r7, #4]
 800707a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800707c:	b29b      	uxth	r3, r3
 800707e:	2b02      	cmp	r3, #2
 8007080:	d14d      	bne.n	800711e <I2C_Master_ADDR+0x290>
 8007082:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007084:	2b04      	cmp	r3, #4
 8007086:	d016      	beq.n	80070b6 <I2C_Master_ADDR+0x228>
 8007088:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800708a:	2b02      	cmp	r3, #2
 800708c:	d013      	beq.n	80070b6 <I2C_Master_ADDR+0x228>
 800708e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007090:	2b10      	cmp	r3, #16
 8007092:	d010      	beq.n	80070b6 <I2C_Master_ADDR+0x228>
 8007094:	687b      	ldr	r3, [r7, #4]
 8007096:	681b      	ldr	r3, [r3, #0]
 8007098:	681a      	ldr	r2, [r3, #0]
 800709a:	687b      	ldr	r3, [r7, #4]
 800709c:	681b      	ldr	r3, [r3, #0]
 800709e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80070a2:	601a      	str	r2, [r3, #0]
 80070a4:	687b      	ldr	r3, [r7, #4]
 80070a6:	681b      	ldr	r3, [r3, #0]
 80070a8:	681a      	ldr	r2, [r3, #0]
 80070aa:	687b      	ldr	r3, [r7, #4]
 80070ac:	681b      	ldr	r3, [r3, #0]
 80070ae:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80070b2:	601a      	str	r2, [r3, #0]
 80070b4:	e007      	b.n	80070c6 <I2C_Master_ADDR+0x238>
 80070b6:	687b      	ldr	r3, [r7, #4]
 80070b8:	681b      	ldr	r3, [r3, #0]
 80070ba:	681a      	ldr	r2, [r3, #0]
 80070bc:	687b      	ldr	r3, [r7, #4]
 80070be:	681b      	ldr	r3, [r3, #0]
 80070c0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80070c4:	601a      	str	r2, [r3, #0]
 80070c6:	687b      	ldr	r3, [r7, #4]
 80070c8:	681b      	ldr	r3, [r3, #0]
 80070ca:	685b      	ldr	r3, [r3, #4]
 80070cc:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80070d0:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80070d4:	d117      	bne.n	8007106 <I2C_Master_ADDR+0x278>
 80070d6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070d8:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80070dc:	d00b      	beq.n	80070f6 <I2C_Master_ADDR+0x268>
 80070de:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070e0:	2b01      	cmp	r3, #1
 80070e2:	d008      	beq.n	80070f6 <I2C_Master_ADDR+0x268>
 80070e4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070e6:	2b08      	cmp	r3, #8
 80070e8:	d005      	beq.n	80070f6 <I2C_Master_ADDR+0x268>
 80070ea:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070ec:	2b10      	cmp	r3, #16
 80070ee:	d002      	beq.n	80070f6 <I2C_Master_ADDR+0x268>
 80070f0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070f2:	2b20      	cmp	r3, #32
 80070f4:	d107      	bne.n	8007106 <I2C_Master_ADDR+0x278>
 80070f6:	687b      	ldr	r3, [r7, #4]
 80070f8:	681b      	ldr	r3, [r3, #0]
 80070fa:	685a      	ldr	r2, [r3, #4]
 80070fc:	687b      	ldr	r3, [r7, #4]
 80070fe:	681b      	ldr	r3, [r3, #0]
 8007100:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8007104:	605a      	str	r2, [r3, #4]
 8007106:	2300      	movs	r3, #0
 8007108:	617b      	str	r3, [r7, #20]
 800710a:	687b      	ldr	r3, [r7, #4]
 800710c:	681b      	ldr	r3, [r3, #0]
 800710e:	695b      	ldr	r3, [r3, #20]
 8007110:	617b      	str	r3, [r7, #20]
 8007112:	687b      	ldr	r3, [r7, #4]
 8007114:	681b      	ldr	r3, [r3, #0]
 8007116:	699b      	ldr	r3, [r3, #24]
 8007118:	617b      	str	r3, [r7, #20]
 800711a:	697b      	ldr	r3, [r7, #20]
 800711c:	e032      	b.n	8007184 <I2C_Master_ADDR+0x2f6>
 800711e:	687b      	ldr	r3, [r7, #4]
 8007120:	681b      	ldr	r3, [r3, #0]
 8007122:	681a      	ldr	r2, [r3, #0]
 8007124:	687b      	ldr	r3, [r7, #4]
 8007126:	681b      	ldr	r3, [r3, #0]
 8007128:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800712c:	601a      	str	r2, [r3, #0]
 800712e:	687b      	ldr	r3, [r7, #4]
 8007130:	681b      	ldr	r3, [r3, #0]
 8007132:	685b      	ldr	r3, [r3, #4]
 8007134:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8007138:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800713c:	d117      	bne.n	800716e <I2C_Master_ADDR+0x2e0>
 800713e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007140:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8007144:	d00b      	beq.n	800715e <I2C_Master_ADDR+0x2d0>
 8007146:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007148:	2b01      	cmp	r3, #1
 800714a:	d008      	beq.n	800715e <I2C_Master_ADDR+0x2d0>
 800714c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800714e:	2b08      	cmp	r3, #8
 8007150:	d005      	beq.n	800715e <I2C_Master_ADDR+0x2d0>
 8007152:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007154:	2b10      	cmp	r3, #16
 8007156:	d002      	beq.n	800715e <I2C_Master_ADDR+0x2d0>
 8007158:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800715a:	2b20      	cmp	r3, #32
 800715c:	d107      	bne.n	800716e <I2C_Master_ADDR+0x2e0>
 800715e:	687b      	ldr	r3, [r7, #4]
 8007160:	681b      	ldr	r3, [r3, #0]
 8007162:	685a      	ldr	r2, [r3, #4]
 8007164:	687b      	ldr	r3, [r7, #4]
 8007166:	681b      	ldr	r3, [r3, #0]
 8007168:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800716c:	605a      	str	r2, [r3, #4]
 800716e:	2300      	movs	r3, #0
 8007170:	613b      	str	r3, [r7, #16]
 8007172:	687b      	ldr	r3, [r7, #4]
 8007174:	681b      	ldr	r3, [r3, #0]
 8007176:	695b      	ldr	r3, [r3, #20]
 8007178:	613b      	str	r3, [r7, #16]
 800717a:	687b      	ldr	r3, [r7, #4]
 800717c:	681b      	ldr	r3, [r3, #0]
 800717e:	699b      	ldr	r3, [r3, #24]
 8007180:	613b      	str	r3, [r7, #16]
 8007182:	693b      	ldr	r3, [r7, #16]
 8007184:	687b      	ldr	r3, [r7, #4]
 8007186:	2200      	movs	r2, #0
 8007188:	651a      	str	r2, [r3, #80]	; 0x50
 800718a:	e00b      	b.n	80071a4 <I2C_Master_ADDR+0x316>
 800718c:	2300      	movs	r3, #0
 800718e:	60fb      	str	r3, [r7, #12]
 8007190:	687b      	ldr	r3, [r7, #4]
 8007192:	681b      	ldr	r3, [r3, #0]
 8007194:	695b      	ldr	r3, [r3, #20]
 8007196:	60fb      	str	r3, [r7, #12]
 8007198:	687b      	ldr	r3, [r7, #4]
 800719a:	681b      	ldr	r3, [r3, #0]
 800719c:	699b      	ldr	r3, [r3, #24]
 800719e:	60fb      	str	r3, [r7, #12]
 80071a0:	68fb      	ldr	r3, [r7, #12]
 80071a2:	e7ff      	b.n	80071a4 <I2C_Master_ADDR+0x316>
 80071a4:	bf00      	nop
 80071a6:	3744      	adds	r7, #68	; 0x44
 80071a8:	46bd      	mov	sp, r7
 80071aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071ae:	4770      	bx	lr

080071b0 <I2C_SlaveTransmit_TXE>:
 80071b0:	b580      	push	{r7, lr}
 80071b2:	b084      	sub	sp, #16
 80071b4:	af00      	add	r7, sp, #0
 80071b6:	6078      	str	r0, [r7, #4]
 80071b8:	687b      	ldr	r3, [r7, #4]
 80071ba:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80071be:	73fb      	strb	r3, [r7, #15]
 80071c0:	687b      	ldr	r3, [r7, #4]
 80071c2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80071c4:	b29b      	uxth	r3, r3
 80071c6:	2b00      	cmp	r3, #0
 80071c8:	d02b      	beq.n	8007222 <I2C_SlaveTransmit_TXE+0x72>
 80071ca:	687b      	ldr	r3, [r7, #4]
 80071cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80071ce:	781a      	ldrb	r2, [r3, #0]
 80071d0:	687b      	ldr	r3, [r7, #4]
 80071d2:	681b      	ldr	r3, [r3, #0]
 80071d4:	611a      	str	r2, [r3, #16]
 80071d6:	687b      	ldr	r3, [r7, #4]
 80071d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80071da:	1c5a      	adds	r2, r3, #1
 80071dc:	687b      	ldr	r3, [r7, #4]
 80071de:	625a      	str	r2, [r3, #36]	; 0x24
 80071e0:	687b      	ldr	r3, [r7, #4]
 80071e2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80071e4:	b29b      	uxth	r3, r3
 80071e6:	3b01      	subs	r3, #1
 80071e8:	b29a      	uxth	r2, r3
 80071ea:	687b      	ldr	r3, [r7, #4]
 80071ec:	855a      	strh	r2, [r3, #42]	; 0x2a
 80071ee:	687b      	ldr	r3, [r7, #4]
 80071f0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80071f2:	b29b      	uxth	r3, r3
 80071f4:	2b00      	cmp	r3, #0
 80071f6:	d114      	bne.n	8007222 <I2C_SlaveTransmit_TXE+0x72>
 80071f8:	7bfb      	ldrb	r3, [r7, #15]
 80071fa:	2b29      	cmp	r3, #41	; 0x29
 80071fc:	d111      	bne.n	8007222 <I2C_SlaveTransmit_TXE+0x72>
 80071fe:	687b      	ldr	r3, [r7, #4]
 8007200:	681b      	ldr	r3, [r3, #0]
 8007202:	685a      	ldr	r2, [r3, #4]
 8007204:	687b      	ldr	r3, [r7, #4]
 8007206:	681b      	ldr	r3, [r3, #0]
 8007208:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800720c:	605a      	str	r2, [r3, #4]
 800720e:	687b      	ldr	r3, [r7, #4]
 8007210:	2221      	movs	r2, #33	; 0x21
 8007212:	631a      	str	r2, [r3, #48]	; 0x30
 8007214:	687b      	ldr	r3, [r7, #4]
 8007216:	2228      	movs	r2, #40	; 0x28
 8007218:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800721c:	6878      	ldr	r0, [r7, #4]
 800721e:	f7ff f9e7 	bl	80065f0 <HAL_I2C_SlaveTxCpltCallback>
 8007222:	bf00      	nop
 8007224:	3710      	adds	r7, #16
 8007226:	46bd      	mov	sp, r7
 8007228:	bd80      	pop	{r7, pc}

0800722a <I2C_SlaveTransmit_BTF>:
 800722a:	b480      	push	{r7}
 800722c:	b083      	sub	sp, #12
 800722e:	af00      	add	r7, sp, #0
 8007230:	6078      	str	r0, [r7, #4]
 8007232:	687b      	ldr	r3, [r7, #4]
 8007234:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007236:	b29b      	uxth	r3, r3
 8007238:	2b00      	cmp	r3, #0
 800723a:	d011      	beq.n	8007260 <I2C_SlaveTransmit_BTF+0x36>
 800723c:	687b      	ldr	r3, [r7, #4]
 800723e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007240:	781a      	ldrb	r2, [r3, #0]
 8007242:	687b      	ldr	r3, [r7, #4]
 8007244:	681b      	ldr	r3, [r3, #0]
 8007246:	611a      	str	r2, [r3, #16]
 8007248:	687b      	ldr	r3, [r7, #4]
 800724a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800724c:	1c5a      	adds	r2, r3, #1
 800724e:	687b      	ldr	r3, [r7, #4]
 8007250:	625a      	str	r2, [r3, #36]	; 0x24
 8007252:	687b      	ldr	r3, [r7, #4]
 8007254:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007256:	b29b      	uxth	r3, r3
 8007258:	3b01      	subs	r3, #1
 800725a:	b29a      	uxth	r2, r3
 800725c:	687b      	ldr	r3, [r7, #4]
 800725e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007260:	bf00      	nop
 8007262:	370c      	adds	r7, #12
 8007264:	46bd      	mov	sp, r7
 8007266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800726a:	4770      	bx	lr

0800726c <I2C_SlaveReceive_RXNE>:
 800726c:	b580      	push	{r7, lr}
 800726e:	b084      	sub	sp, #16
 8007270:	af00      	add	r7, sp, #0
 8007272:	6078      	str	r0, [r7, #4]
 8007274:	687b      	ldr	r3, [r7, #4]
 8007276:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800727a:	73fb      	strb	r3, [r7, #15]
 800727c:	687b      	ldr	r3, [r7, #4]
 800727e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007280:	b29b      	uxth	r3, r3
 8007282:	2b00      	cmp	r3, #0
 8007284:	d02c      	beq.n	80072e0 <I2C_SlaveReceive_RXNE+0x74>
 8007286:	687b      	ldr	r3, [r7, #4]
 8007288:	681b      	ldr	r3, [r3, #0]
 800728a:	691a      	ldr	r2, [r3, #16]
 800728c:	687b      	ldr	r3, [r7, #4]
 800728e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007290:	b2d2      	uxtb	r2, r2
 8007292:	701a      	strb	r2, [r3, #0]
 8007294:	687b      	ldr	r3, [r7, #4]
 8007296:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007298:	1c5a      	adds	r2, r3, #1
 800729a:	687b      	ldr	r3, [r7, #4]
 800729c:	625a      	str	r2, [r3, #36]	; 0x24
 800729e:	687b      	ldr	r3, [r7, #4]
 80072a0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80072a2:	b29b      	uxth	r3, r3
 80072a4:	3b01      	subs	r3, #1
 80072a6:	b29a      	uxth	r2, r3
 80072a8:	687b      	ldr	r3, [r7, #4]
 80072aa:	855a      	strh	r2, [r3, #42]	; 0x2a
 80072ac:	687b      	ldr	r3, [r7, #4]
 80072ae:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80072b0:	b29b      	uxth	r3, r3
 80072b2:	2b00      	cmp	r3, #0
 80072b4:	d114      	bne.n	80072e0 <I2C_SlaveReceive_RXNE+0x74>
 80072b6:	7bfb      	ldrb	r3, [r7, #15]
 80072b8:	2b2a      	cmp	r3, #42	; 0x2a
 80072ba:	d111      	bne.n	80072e0 <I2C_SlaveReceive_RXNE+0x74>
 80072bc:	687b      	ldr	r3, [r7, #4]
 80072be:	681b      	ldr	r3, [r3, #0]
 80072c0:	685a      	ldr	r2, [r3, #4]
 80072c2:	687b      	ldr	r3, [r7, #4]
 80072c4:	681b      	ldr	r3, [r3, #0]
 80072c6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80072ca:	605a      	str	r2, [r3, #4]
 80072cc:	687b      	ldr	r3, [r7, #4]
 80072ce:	2222      	movs	r2, #34	; 0x22
 80072d0:	631a      	str	r2, [r3, #48]	; 0x30
 80072d2:	687b      	ldr	r3, [r7, #4]
 80072d4:	2228      	movs	r2, #40	; 0x28
 80072d6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80072da:	6878      	ldr	r0, [r7, #4]
 80072dc:	f7ff f992 	bl	8006604 <HAL_I2C_SlaveRxCpltCallback>
 80072e0:	bf00      	nop
 80072e2:	3710      	adds	r7, #16
 80072e4:	46bd      	mov	sp, r7
 80072e6:	bd80      	pop	{r7, pc}

080072e8 <I2C_SlaveReceive_BTF>:
 80072e8:	b480      	push	{r7}
 80072ea:	b083      	sub	sp, #12
 80072ec:	af00      	add	r7, sp, #0
 80072ee:	6078      	str	r0, [r7, #4]
 80072f0:	687b      	ldr	r3, [r7, #4]
 80072f2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80072f4:	b29b      	uxth	r3, r3
 80072f6:	2b00      	cmp	r3, #0
 80072f8:	d012      	beq.n	8007320 <I2C_SlaveReceive_BTF+0x38>
 80072fa:	687b      	ldr	r3, [r7, #4]
 80072fc:	681b      	ldr	r3, [r3, #0]
 80072fe:	691a      	ldr	r2, [r3, #16]
 8007300:	687b      	ldr	r3, [r7, #4]
 8007302:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007304:	b2d2      	uxtb	r2, r2
 8007306:	701a      	strb	r2, [r3, #0]
 8007308:	687b      	ldr	r3, [r7, #4]
 800730a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800730c:	1c5a      	adds	r2, r3, #1
 800730e:	687b      	ldr	r3, [r7, #4]
 8007310:	625a      	str	r2, [r3, #36]	; 0x24
 8007312:	687b      	ldr	r3, [r7, #4]
 8007314:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007316:	b29b      	uxth	r3, r3
 8007318:	3b01      	subs	r3, #1
 800731a:	b29a      	uxth	r2, r3
 800731c:	687b      	ldr	r3, [r7, #4]
 800731e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007320:	bf00      	nop
 8007322:	370c      	adds	r7, #12
 8007324:	46bd      	mov	sp, r7
 8007326:	f85d 7b04 	ldr.w	r7, [sp], #4
 800732a:	4770      	bx	lr

0800732c <I2C_Slave_ADDR>:
 800732c:	b580      	push	{r7, lr}
 800732e:	b084      	sub	sp, #16
 8007330:	af00      	add	r7, sp, #0
 8007332:	6078      	str	r0, [r7, #4]
 8007334:	6039      	str	r1, [r7, #0]
 8007336:	2300      	movs	r3, #0
 8007338:	73fb      	strb	r3, [r7, #15]
 800733a:	687b      	ldr	r3, [r7, #4]
 800733c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007340:	b2db      	uxtb	r3, r3
 8007342:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8007346:	2b28      	cmp	r3, #40	; 0x28
 8007348:	d127      	bne.n	800739a <I2C_Slave_ADDR+0x6e>
 800734a:	687b      	ldr	r3, [r7, #4]
 800734c:	681b      	ldr	r3, [r3, #0]
 800734e:	685a      	ldr	r2, [r3, #4]
 8007350:	687b      	ldr	r3, [r7, #4]
 8007352:	681b      	ldr	r3, [r3, #0]
 8007354:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007358:	605a      	str	r2, [r3, #4]
 800735a:	683b      	ldr	r3, [r7, #0]
 800735c:	089b      	lsrs	r3, r3, #2
 800735e:	f003 0301 	and.w	r3, r3, #1
 8007362:	2b00      	cmp	r3, #0
 8007364:	d101      	bne.n	800736a <I2C_Slave_ADDR+0x3e>
 8007366:	2301      	movs	r3, #1
 8007368:	73fb      	strb	r3, [r7, #15]
 800736a:	683b      	ldr	r3, [r7, #0]
 800736c:	09db      	lsrs	r3, r3, #7
 800736e:	f003 0301 	and.w	r3, r3, #1
 8007372:	2b00      	cmp	r3, #0
 8007374:	d103      	bne.n	800737e <I2C_Slave_ADDR+0x52>
 8007376:	687b      	ldr	r3, [r7, #4]
 8007378:	68db      	ldr	r3, [r3, #12]
 800737a:	81bb      	strh	r3, [r7, #12]
 800737c:	e002      	b.n	8007384 <I2C_Slave_ADDR+0x58>
 800737e:	687b      	ldr	r3, [r7, #4]
 8007380:	699b      	ldr	r3, [r3, #24]
 8007382:	81bb      	strh	r3, [r7, #12]
 8007384:	687b      	ldr	r3, [r7, #4]
 8007386:	2200      	movs	r2, #0
 8007388:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800738c:	89ba      	ldrh	r2, [r7, #12]
 800738e:	7bfb      	ldrb	r3, [r7, #15]
 8007390:	4619      	mov	r1, r3
 8007392:	6878      	ldr	r0, [r7, #4]
 8007394:	f7ff f940 	bl	8006618 <HAL_I2C_AddrCallback>
 8007398:	e00e      	b.n	80073b8 <I2C_Slave_ADDR+0x8c>
 800739a:	2300      	movs	r3, #0
 800739c:	60bb      	str	r3, [r7, #8]
 800739e:	687b      	ldr	r3, [r7, #4]
 80073a0:	681b      	ldr	r3, [r3, #0]
 80073a2:	695b      	ldr	r3, [r3, #20]
 80073a4:	60bb      	str	r3, [r7, #8]
 80073a6:	687b      	ldr	r3, [r7, #4]
 80073a8:	681b      	ldr	r3, [r3, #0]
 80073aa:	699b      	ldr	r3, [r3, #24]
 80073ac:	60bb      	str	r3, [r7, #8]
 80073ae:	68bb      	ldr	r3, [r7, #8]
 80073b0:	687b      	ldr	r3, [r7, #4]
 80073b2:	2200      	movs	r2, #0
 80073b4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80073b8:	bf00      	nop
 80073ba:	3710      	adds	r7, #16
 80073bc:	46bd      	mov	sp, r7
 80073be:	bd80      	pop	{r7, pc}

080073c0 <I2C_Slave_STOPF>:
 80073c0:	b580      	push	{r7, lr}
 80073c2:	b084      	sub	sp, #16
 80073c4:	af00      	add	r7, sp, #0
 80073c6:	6078      	str	r0, [r7, #4]
 80073c8:	687b      	ldr	r3, [r7, #4]
 80073ca:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80073ce:	73fb      	strb	r3, [r7, #15]
 80073d0:	687b      	ldr	r3, [r7, #4]
 80073d2:	681b      	ldr	r3, [r3, #0]
 80073d4:	685a      	ldr	r2, [r3, #4]
 80073d6:	687b      	ldr	r3, [r7, #4]
 80073d8:	681b      	ldr	r3, [r3, #0]
 80073da:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80073de:	605a      	str	r2, [r3, #4]
 80073e0:	2300      	movs	r3, #0
 80073e2:	60bb      	str	r3, [r7, #8]
 80073e4:	687b      	ldr	r3, [r7, #4]
 80073e6:	681b      	ldr	r3, [r3, #0]
 80073e8:	695b      	ldr	r3, [r3, #20]
 80073ea:	60bb      	str	r3, [r7, #8]
 80073ec:	687b      	ldr	r3, [r7, #4]
 80073ee:	681b      	ldr	r3, [r3, #0]
 80073f0:	681a      	ldr	r2, [r3, #0]
 80073f2:	687b      	ldr	r3, [r7, #4]
 80073f4:	681b      	ldr	r3, [r3, #0]
 80073f6:	f042 0201 	orr.w	r2, r2, #1
 80073fa:	601a      	str	r2, [r3, #0]
 80073fc:	68bb      	ldr	r3, [r7, #8]
 80073fe:	687b      	ldr	r3, [r7, #4]
 8007400:	681b      	ldr	r3, [r3, #0]
 8007402:	681a      	ldr	r2, [r3, #0]
 8007404:	687b      	ldr	r3, [r7, #4]
 8007406:	681b      	ldr	r3, [r3, #0]
 8007408:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800740c:	601a      	str	r2, [r3, #0]
 800740e:	687b      	ldr	r3, [r7, #4]
 8007410:	681b      	ldr	r3, [r3, #0]
 8007412:	685b      	ldr	r3, [r3, #4]
 8007414:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8007418:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800741c:	d172      	bne.n	8007504 <I2C_Slave_STOPF+0x144>
 800741e:	7bfb      	ldrb	r3, [r7, #15]
 8007420:	2b22      	cmp	r3, #34	; 0x22
 8007422:	d002      	beq.n	800742a <I2C_Slave_STOPF+0x6a>
 8007424:	7bfb      	ldrb	r3, [r7, #15]
 8007426:	2b2a      	cmp	r3, #42	; 0x2a
 8007428:	d135      	bne.n	8007496 <I2C_Slave_STOPF+0xd6>
 800742a:	687b      	ldr	r3, [r7, #4]
 800742c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800742e:	681b      	ldr	r3, [r3, #0]
 8007430:	685b      	ldr	r3, [r3, #4]
 8007432:	b29a      	uxth	r2, r3
 8007434:	687b      	ldr	r3, [r7, #4]
 8007436:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007438:	687b      	ldr	r3, [r7, #4]
 800743a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800743c:	b29b      	uxth	r3, r3
 800743e:	2b00      	cmp	r3, #0
 8007440:	d005      	beq.n	800744e <I2C_Slave_STOPF+0x8e>
 8007442:	687b      	ldr	r3, [r7, #4]
 8007444:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007446:	f043 0204 	orr.w	r2, r3, #4
 800744a:	687b      	ldr	r3, [r7, #4]
 800744c:	641a      	str	r2, [r3, #64]	; 0x40
 800744e:	687b      	ldr	r3, [r7, #4]
 8007450:	681b      	ldr	r3, [r3, #0]
 8007452:	685a      	ldr	r2, [r3, #4]
 8007454:	687b      	ldr	r3, [r7, #4]
 8007456:	681b      	ldr	r3, [r3, #0]
 8007458:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800745c:	605a      	str	r2, [r3, #4]
 800745e:	687b      	ldr	r3, [r7, #4]
 8007460:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007462:	4618      	mov	r0, r3
 8007464:	f7fd ff74 	bl	8005350 <HAL_DMA_GetState>
 8007468:	4603      	mov	r3, r0
 800746a:	2b01      	cmp	r3, #1
 800746c:	d049      	beq.n	8007502 <I2C_Slave_STOPF+0x142>
 800746e:	687b      	ldr	r3, [r7, #4]
 8007470:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007472:	4a69      	ldr	r2, [pc, #420]	; (8007618 <I2C_Slave_STOPF+0x258>)
 8007474:	651a      	str	r2, [r3, #80]	; 0x50
 8007476:	687b      	ldr	r3, [r7, #4]
 8007478:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800747a:	4618      	mov	r0, r3
 800747c:	f7fd fdbc 	bl	8004ff8 <HAL_DMA_Abort_IT>
 8007480:	4603      	mov	r3, r0
 8007482:	2b00      	cmp	r3, #0
 8007484:	d03d      	beq.n	8007502 <I2C_Slave_STOPF+0x142>
 8007486:	687b      	ldr	r3, [r7, #4]
 8007488:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800748a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800748c:	687a      	ldr	r2, [r7, #4]
 800748e:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8007490:	4610      	mov	r0, r2
 8007492:	4798      	blx	r3
 8007494:	e035      	b.n	8007502 <I2C_Slave_STOPF+0x142>
 8007496:	687b      	ldr	r3, [r7, #4]
 8007498:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800749a:	681b      	ldr	r3, [r3, #0]
 800749c:	685b      	ldr	r3, [r3, #4]
 800749e:	b29a      	uxth	r2, r3
 80074a0:	687b      	ldr	r3, [r7, #4]
 80074a2:	855a      	strh	r2, [r3, #42]	; 0x2a
 80074a4:	687b      	ldr	r3, [r7, #4]
 80074a6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80074a8:	b29b      	uxth	r3, r3
 80074aa:	2b00      	cmp	r3, #0
 80074ac:	d005      	beq.n	80074ba <I2C_Slave_STOPF+0xfa>
 80074ae:	687b      	ldr	r3, [r7, #4]
 80074b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80074b2:	f043 0204 	orr.w	r2, r3, #4
 80074b6:	687b      	ldr	r3, [r7, #4]
 80074b8:	641a      	str	r2, [r3, #64]	; 0x40
 80074ba:	687b      	ldr	r3, [r7, #4]
 80074bc:	681b      	ldr	r3, [r3, #0]
 80074be:	685a      	ldr	r2, [r3, #4]
 80074c0:	687b      	ldr	r3, [r7, #4]
 80074c2:	681b      	ldr	r3, [r3, #0]
 80074c4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80074c8:	605a      	str	r2, [r3, #4]
 80074ca:	687b      	ldr	r3, [r7, #4]
 80074cc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80074ce:	4618      	mov	r0, r3
 80074d0:	f7fd ff3e 	bl	8005350 <HAL_DMA_GetState>
 80074d4:	4603      	mov	r3, r0
 80074d6:	2b01      	cmp	r3, #1
 80074d8:	d014      	beq.n	8007504 <I2C_Slave_STOPF+0x144>
 80074da:	687b      	ldr	r3, [r7, #4]
 80074dc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80074de:	4a4e      	ldr	r2, [pc, #312]	; (8007618 <I2C_Slave_STOPF+0x258>)
 80074e0:	651a      	str	r2, [r3, #80]	; 0x50
 80074e2:	687b      	ldr	r3, [r7, #4]
 80074e4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80074e6:	4618      	mov	r0, r3
 80074e8:	f7fd fd86 	bl	8004ff8 <HAL_DMA_Abort_IT>
 80074ec:	4603      	mov	r3, r0
 80074ee:	2b00      	cmp	r3, #0
 80074f0:	d008      	beq.n	8007504 <I2C_Slave_STOPF+0x144>
 80074f2:	687b      	ldr	r3, [r7, #4]
 80074f4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80074f6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80074f8:	687a      	ldr	r2, [r7, #4]
 80074fa:	6b52      	ldr	r2, [r2, #52]	; 0x34
 80074fc:	4610      	mov	r0, r2
 80074fe:	4798      	blx	r3
 8007500:	e000      	b.n	8007504 <I2C_Slave_STOPF+0x144>
 8007502:	bf00      	nop
 8007504:	687b      	ldr	r3, [r7, #4]
 8007506:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007508:	b29b      	uxth	r3, r3
 800750a:	2b00      	cmp	r3, #0
 800750c:	d03e      	beq.n	800758c <I2C_Slave_STOPF+0x1cc>
 800750e:	687b      	ldr	r3, [r7, #4]
 8007510:	681b      	ldr	r3, [r3, #0]
 8007512:	695b      	ldr	r3, [r3, #20]
 8007514:	f003 0304 	and.w	r3, r3, #4
 8007518:	2b04      	cmp	r3, #4
 800751a:	d112      	bne.n	8007542 <I2C_Slave_STOPF+0x182>
 800751c:	687b      	ldr	r3, [r7, #4]
 800751e:	681b      	ldr	r3, [r3, #0]
 8007520:	691a      	ldr	r2, [r3, #16]
 8007522:	687b      	ldr	r3, [r7, #4]
 8007524:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007526:	b2d2      	uxtb	r2, r2
 8007528:	701a      	strb	r2, [r3, #0]
 800752a:	687b      	ldr	r3, [r7, #4]
 800752c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800752e:	1c5a      	adds	r2, r3, #1
 8007530:	687b      	ldr	r3, [r7, #4]
 8007532:	625a      	str	r2, [r3, #36]	; 0x24
 8007534:	687b      	ldr	r3, [r7, #4]
 8007536:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007538:	b29b      	uxth	r3, r3
 800753a:	3b01      	subs	r3, #1
 800753c:	b29a      	uxth	r2, r3
 800753e:	687b      	ldr	r3, [r7, #4]
 8007540:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007542:	687b      	ldr	r3, [r7, #4]
 8007544:	681b      	ldr	r3, [r3, #0]
 8007546:	695b      	ldr	r3, [r3, #20]
 8007548:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800754c:	2b40      	cmp	r3, #64	; 0x40
 800754e:	d112      	bne.n	8007576 <I2C_Slave_STOPF+0x1b6>
 8007550:	687b      	ldr	r3, [r7, #4]
 8007552:	681b      	ldr	r3, [r3, #0]
 8007554:	691a      	ldr	r2, [r3, #16]
 8007556:	687b      	ldr	r3, [r7, #4]
 8007558:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800755a:	b2d2      	uxtb	r2, r2
 800755c:	701a      	strb	r2, [r3, #0]
 800755e:	687b      	ldr	r3, [r7, #4]
 8007560:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007562:	1c5a      	adds	r2, r3, #1
 8007564:	687b      	ldr	r3, [r7, #4]
 8007566:	625a      	str	r2, [r3, #36]	; 0x24
 8007568:	687b      	ldr	r3, [r7, #4]
 800756a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800756c:	b29b      	uxth	r3, r3
 800756e:	3b01      	subs	r3, #1
 8007570:	b29a      	uxth	r2, r3
 8007572:	687b      	ldr	r3, [r7, #4]
 8007574:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007576:	687b      	ldr	r3, [r7, #4]
 8007578:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800757a:	b29b      	uxth	r3, r3
 800757c:	2b00      	cmp	r3, #0
 800757e:	d005      	beq.n	800758c <I2C_Slave_STOPF+0x1cc>
 8007580:	687b      	ldr	r3, [r7, #4]
 8007582:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007584:	f043 0204 	orr.w	r2, r3, #4
 8007588:	687b      	ldr	r3, [r7, #4]
 800758a:	641a      	str	r2, [r3, #64]	; 0x40
 800758c:	687b      	ldr	r3, [r7, #4]
 800758e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007590:	2b00      	cmp	r3, #0
 8007592:	d003      	beq.n	800759c <I2C_Slave_STOPF+0x1dc>
 8007594:	6878      	ldr	r0, [r7, #4]
 8007596:	f000 f8b3 	bl	8007700 <I2C_ITError>
 800759a:	e039      	b.n	8007610 <I2C_Slave_STOPF+0x250>
 800759c:	7bfb      	ldrb	r3, [r7, #15]
 800759e:	2b2a      	cmp	r3, #42	; 0x2a
 80075a0:	d109      	bne.n	80075b6 <I2C_Slave_STOPF+0x1f6>
 80075a2:	687b      	ldr	r3, [r7, #4]
 80075a4:	2200      	movs	r2, #0
 80075a6:	631a      	str	r2, [r3, #48]	; 0x30
 80075a8:	687b      	ldr	r3, [r7, #4]
 80075aa:	2228      	movs	r2, #40	; 0x28
 80075ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80075b0:	6878      	ldr	r0, [r7, #4]
 80075b2:	f7ff f827 	bl	8006604 <HAL_I2C_SlaveRxCpltCallback>
 80075b6:	687b      	ldr	r3, [r7, #4]
 80075b8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80075bc:	b2db      	uxtb	r3, r3
 80075be:	2b28      	cmp	r3, #40	; 0x28
 80075c0:	d111      	bne.n	80075e6 <I2C_Slave_STOPF+0x226>
 80075c2:	687b      	ldr	r3, [r7, #4]
 80075c4:	4a15      	ldr	r2, [pc, #84]	; (800761c <I2C_Slave_STOPF+0x25c>)
 80075c6:	62da      	str	r2, [r3, #44]	; 0x2c
 80075c8:	687b      	ldr	r3, [r7, #4]
 80075ca:	2200      	movs	r2, #0
 80075cc:	631a      	str	r2, [r3, #48]	; 0x30
 80075ce:	687b      	ldr	r3, [r7, #4]
 80075d0:	2220      	movs	r2, #32
 80075d2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80075d6:	687b      	ldr	r3, [r7, #4]
 80075d8:	2200      	movs	r2, #0
 80075da:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80075de:	6878      	ldr	r0, [r7, #4]
 80075e0:	f7ff f828 	bl	8006634 <HAL_I2C_ListenCpltCallback>
 80075e4:	e014      	b.n	8007610 <I2C_Slave_STOPF+0x250>
 80075e6:	687b      	ldr	r3, [r7, #4]
 80075e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80075ea:	2b22      	cmp	r3, #34	; 0x22
 80075ec:	d002      	beq.n	80075f4 <I2C_Slave_STOPF+0x234>
 80075ee:	7bfb      	ldrb	r3, [r7, #15]
 80075f0:	2b22      	cmp	r3, #34	; 0x22
 80075f2:	d10d      	bne.n	8007610 <I2C_Slave_STOPF+0x250>
 80075f4:	687b      	ldr	r3, [r7, #4]
 80075f6:	2200      	movs	r2, #0
 80075f8:	631a      	str	r2, [r3, #48]	; 0x30
 80075fa:	687b      	ldr	r3, [r7, #4]
 80075fc:	2220      	movs	r2, #32
 80075fe:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007602:	687b      	ldr	r3, [r7, #4]
 8007604:	2200      	movs	r2, #0
 8007606:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800760a:	6878      	ldr	r0, [r7, #4]
 800760c:	f7fe fffa 	bl	8006604 <HAL_I2C_SlaveRxCpltCallback>
 8007610:	bf00      	nop
 8007612:	3710      	adds	r7, #16
 8007614:	46bd      	mov	sp, r7
 8007616:	bd80      	pop	{r7, pc}
 8007618:	08007c05 	.word	0x08007c05
 800761c:	ffff0000 	.word	0xffff0000

08007620 <I2C_Slave_AF>:
 8007620:	b580      	push	{r7, lr}
 8007622:	b084      	sub	sp, #16
 8007624:	af00      	add	r7, sp, #0
 8007626:	6078      	str	r0, [r7, #4]
 8007628:	687b      	ldr	r3, [r7, #4]
 800762a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800762e:	73fb      	strb	r3, [r7, #15]
 8007630:	687b      	ldr	r3, [r7, #4]
 8007632:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007634:	60bb      	str	r3, [r7, #8]
 8007636:	68bb      	ldr	r3, [r7, #8]
 8007638:	2b08      	cmp	r3, #8
 800763a:	d002      	beq.n	8007642 <I2C_Slave_AF+0x22>
 800763c:	68bb      	ldr	r3, [r7, #8]
 800763e:	2b20      	cmp	r3, #32
 8007640:	d129      	bne.n	8007696 <I2C_Slave_AF+0x76>
 8007642:	7bfb      	ldrb	r3, [r7, #15]
 8007644:	2b28      	cmp	r3, #40	; 0x28
 8007646:	d126      	bne.n	8007696 <I2C_Slave_AF+0x76>
 8007648:	687b      	ldr	r3, [r7, #4]
 800764a:	4a2c      	ldr	r2, [pc, #176]	; (80076fc <I2C_Slave_AF+0xdc>)
 800764c:	62da      	str	r2, [r3, #44]	; 0x2c
 800764e:	687b      	ldr	r3, [r7, #4]
 8007650:	681b      	ldr	r3, [r3, #0]
 8007652:	685a      	ldr	r2, [r3, #4]
 8007654:	687b      	ldr	r3, [r7, #4]
 8007656:	681b      	ldr	r3, [r3, #0]
 8007658:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800765c:	605a      	str	r2, [r3, #4]
 800765e:	687b      	ldr	r3, [r7, #4]
 8007660:	681b      	ldr	r3, [r3, #0]
 8007662:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8007666:	615a      	str	r2, [r3, #20]
 8007668:	687b      	ldr	r3, [r7, #4]
 800766a:	681b      	ldr	r3, [r3, #0]
 800766c:	681a      	ldr	r2, [r3, #0]
 800766e:	687b      	ldr	r3, [r7, #4]
 8007670:	681b      	ldr	r3, [r3, #0]
 8007672:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007676:	601a      	str	r2, [r3, #0]
 8007678:	687b      	ldr	r3, [r7, #4]
 800767a:	2200      	movs	r2, #0
 800767c:	631a      	str	r2, [r3, #48]	; 0x30
 800767e:	687b      	ldr	r3, [r7, #4]
 8007680:	2220      	movs	r2, #32
 8007682:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007686:	687b      	ldr	r3, [r7, #4]
 8007688:	2200      	movs	r2, #0
 800768a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800768e:	6878      	ldr	r0, [r7, #4]
 8007690:	f7fe ffd0 	bl	8006634 <HAL_I2C_ListenCpltCallback>
 8007694:	e02e      	b.n	80076f4 <I2C_Slave_AF+0xd4>
 8007696:	7bfb      	ldrb	r3, [r7, #15]
 8007698:	2b21      	cmp	r3, #33	; 0x21
 800769a:	d126      	bne.n	80076ea <I2C_Slave_AF+0xca>
 800769c:	687b      	ldr	r3, [r7, #4]
 800769e:	4a17      	ldr	r2, [pc, #92]	; (80076fc <I2C_Slave_AF+0xdc>)
 80076a0:	62da      	str	r2, [r3, #44]	; 0x2c
 80076a2:	687b      	ldr	r3, [r7, #4]
 80076a4:	2221      	movs	r2, #33	; 0x21
 80076a6:	631a      	str	r2, [r3, #48]	; 0x30
 80076a8:	687b      	ldr	r3, [r7, #4]
 80076aa:	2220      	movs	r2, #32
 80076ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80076b0:	687b      	ldr	r3, [r7, #4]
 80076b2:	2200      	movs	r2, #0
 80076b4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80076b8:	687b      	ldr	r3, [r7, #4]
 80076ba:	681b      	ldr	r3, [r3, #0]
 80076bc:	685a      	ldr	r2, [r3, #4]
 80076be:	687b      	ldr	r3, [r7, #4]
 80076c0:	681b      	ldr	r3, [r3, #0]
 80076c2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80076c6:	605a      	str	r2, [r3, #4]
 80076c8:	687b      	ldr	r3, [r7, #4]
 80076ca:	681b      	ldr	r3, [r3, #0]
 80076cc:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80076d0:	615a      	str	r2, [r3, #20]
 80076d2:	687b      	ldr	r3, [r7, #4]
 80076d4:	681b      	ldr	r3, [r3, #0]
 80076d6:	681a      	ldr	r2, [r3, #0]
 80076d8:	687b      	ldr	r3, [r7, #4]
 80076da:	681b      	ldr	r3, [r3, #0]
 80076dc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80076e0:	601a      	str	r2, [r3, #0]
 80076e2:	6878      	ldr	r0, [r7, #4]
 80076e4:	f7fe ff84 	bl	80065f0 <HAL_I2C_SlaveTxCpltCallback>
 80076e8:	e004      	b.n	80076f4 <I2C_Slave_AF+0xd4>
 80076ea:	687b      	ldr	r3, [r7, #4]
 80076ec:	681b      	ldr	r3, [r3, #0]
 80076ee:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80076f2:	615a      	str	r2, [r3, #20]
 80076f4:	bf00      	nop
 80076f6:	3710      	adds	r7, #16
 80076f8:	46bd      	mov	sp, r7
 80076fa:	bd80      	pop	{r7, pc}
 80076fc:	ffff0000 	.word	0xffff0000

08007700 <I2C_ITError>:
 8007700:	b580      	push	{r7, lr}
 8007702:	b084      	sub	sp, #16
 8007704:	af00      	add	r7, sp, #0
 8007706:	6078      	str	r0, [r7, #4]
 8007708:	687b      	ldr	r3, [r7, #4]
 800770a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800770e:	73fb      	strb	r3, [r7, #15]
 8007710:	687b      	ldr	r3, [r7, #4]
 8007712:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8007716:	73bb      	strb	r3, [r7, #14]
 8007718:	7bbb      	ldrb	r3, [r7, #14]
 800771a:	2b10      	cmp	r3, #16
 800771c:	d002      	beq.n	8007724 <I2C_ITError+0x24>
 800771e:	7bbb      	ldrb	r3, [r7, #14]
 8007720:	2b40      	cmp	r3, #64	; 0x40
 8007722:	d10a      	bne.n	800773a <I2C_ITError+0x3a>
 8007724:	7bfb      	ldrb	r3, [r7, #15]
 8007726:	2b22      	cmp	r3, #34	; 0x22
 8007728:	d107      	bne.n	800773a <I2C_ITError+0x3a>
 800772a:	687b      	ldr	r3, [r7, #4]
 800772c:	681b      	ldr	r3, [r3, #0]
 800772e:	681a      	ldr	r2, [r3, #0]
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	681b      	ldr	r3, [r3, #0]
 8007734:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007738:	601a      	str	r2, [r3, #0]
 800773a:	7bfb      	ldrb	r3, [r7, #15]
 800773c:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8007740:	2b28      	cmp	r3, #40	; 0x28
 8007742:	d107      	bne.n	8007754 <I2C_ITError+0x54>
 8007744:	687b      	ldr	r3, [r7, #4]
 8007746:	2200      	movs	r2, #0
 8007748:	631a      	str	r2, [r3, #48]	; 0x30
 800774a:	687b      	ldr	r3, [r7, #4]
 800774c:	2228      	movs	r2, #40	; 0x28
 800774e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007752:	e015      	b.n	8007780 <I2C_ITError+0x80>
 8007754:	687b      	ldr	r3, [r7, #4]
 8007756:	681b      	ldr	r3, [r3, #0]
 8007758:	685b      	ldr	r3, [r3, #4]
 800775a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800775e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007762:	d00a      	beq.n	800777a <I2C_ITError+0x7a>
 8007764:	7bfb      	ldrb	r3, [r7, #15]
 8007766:	2b60      	cmp	r3, #96	; 0x60
 8007768:	d007      	beq.n	800777a <I2C_ITError+0x7a>
 800776a:	687b      	ldr	r3, [r7, #4]
 800776c:	2220      	movs	r2, #32
 800776e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007772:	687b      	ldr	r3, [r7, #4]
 8007774:	2200      	movs	r2, #0
 8007776:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800777a:	687b      	ldr	r3, [r7, #4]
 800777c:	2200      	movs	r2, #0
 800777e:	631a      	str	r2, [r3, #48]	; 0x30
 8007780:	687b      	ldr	r3, [r7, #4]
 8007782:	681b      	ldr	r3, [r3, #0]
 8007784:	685b      	ldr	r3, [r3, #4]
 8007786:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800778a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800778e:	d162      	bne.n	8007856 <I2C_ITError+0x156>
 8007790:	687b      	ldr	r3, [r7, #4]
 8007792:	681b      	ldr	r3, [r3, #0]
 8007794:	685a      	ldr	r2, [r3, #4]
 8007796:	687b      	ldr	r3, [r7, #4]
 8007798:	681b      	ldr	r3, [r3, #0]
 800779a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800779e:	605a      	str	r2, [r3, #4]
 80077a0:	687b      	ldr	r3, [r7, #4]
 80077a2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80077a4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80077a8:	b2db      	uxtb	r3, r3
 80077aa:	2b01      	cmp	r3, #1
 80077ac:	d020      	beq.n	80077f0 <I2C_ITError+0xf0>
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80077b2:	4a6a      	ldr	r2, [pc, #424]	; (800795c <I2C_ITError+0x25c>)
 80077b4:	651a      	str	r2, [r3, #80]	; 0x50
 80077b6:	687b      	ldr	r3, [r7, #4]
 80077b8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80077ba:	4618      	mov	r0, r3
 80077bc:	f7fd fc1c 	bl	8004ff8 <HAL_DMA_Abort_IT>
 80077c0:	4603      	mov	r3, r0
 80077c2:	2b00      	cmp	r3, #0
 80077c4:	f000 8089 	beq.w	80078da <I2C_ITError+0x1da>
 80077c8:	687b      	ldr	r3, [r7, #4]
 80077ca:	681b      	ldr	r3, [r3, #0]
 80077cc:	681a      	ldr	r2, [r3, #0]
 80077ce:	687b      	ldr	r3, [r7, #4]
 80077d0:	681b      	ldr	r3, [r3, #0]
 80077d2:	f022 0201 	bic.w	r2, r2, #1
 80077d6:	601a      	str	r2, [r3, #0]
 80077d8:	687b      	ldr	r3, [r7, #4]
 80077da:	2220      	movs	r2, #32
 80077dc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80077e0:	687b      	ldr	r3, [r7, #4]
 80077e2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80077e4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80077e6:	687a      	ldr	r2, [r7, #4]
 80077e8:	6b52      	ldr	r2, [r2, #52]	; 0x34
 80077ea:	4610      	mov	r0, r2
 80077ec:	4798      	blx	r3
 80077ee:	e074      	b.n	80078da <I2C_ITError+0x1da>
 80077f0:	687b      	ldr	r3, [r7, #4]
 80077f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80077f4:	4a59      	ldr	r2, [pc, #356]	; (800795c <I2C_ITError+0x25c>)
 80077f6:	651a      	str	r2, [r3, #80]	; 0x50
 80077f8:	687b      	ldr	r3, [r7, #4]
 80077fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80077fc:	4618      	mov	r0, r3
 80077fe:	f7fd fbfb 	bl	8004ff8 <HAL_DMA_Abort_IT>
 8007802:	4603      	mov	r3, r0
 8007804:	2b00      	cmp	r3, #0
 8007806:	d068      	beq.n	80078da <I2C_ITError+0x1da>
 8007808:	687b      	ldr	r3, [r7, #4]
 800780a:	681b      	ldr	r3, [r3, #0]
 800780c:	695b      	ldr	r3, [r3, #20]
 800780e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007812:	2b40      	cmp	r3, #64	; 0x40
 8007814:	d10b      	bne.n	800782e <I2C_ITError+0x12e>
 8007816:	687b      	ldr	r3, [r7, #4]
 8007818:	681b      	ldr	r3, [r3, #0]
 800781a:	691a      	ldr	r2, [r3, #16]
 800781c:	687b      	ldr	r3, [r7, #4]
 800781e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007820:	b2d2      	uxtb	r2, r2
 8007822:	701a      	strb	r2, [r3, #0]
 8007824:	687b      	ldr	r3, [r7, #4]
 8007826:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007828:	1c5a      	adds	r2, r3, #1
 800782a:	687b      	ldr	r3, [r7, #4]
 800782c:	625a      	str	r2, [r3, #36]	; 0x24
 800782e:	687b      	ldr	r3, [r7, #4]
 8007830:	681b      	ldr	r3, [r3, #0]
 8007832:	681a      	ldr	r2, [r3, #0]
 8007834:	687b      	ldr	r3, [r7, #4]
 8007836:	681b      	ldr	r3, [r3, #0]
 8007838:	f022 0201 	bic.w	r2, r2, #1
 800783c:	601a      	str	r2, [r3, #0]
 800783e:	687b      	ldr	r3, [r7, #4]
 8007840:	2220      	movs	r2, #32
 8007842:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007846:	687b      	ldr	r3, [r7, #4]
 8007848:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800784a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800784c:	687a      	ldr	r2, [r7, #4]
 800784e:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8007850:	4610      	mov	r0, r2
 8007852:	4798      	blx	r3
 8007854:	e041      	b.n	80078da <I2C_ITError+0x1da>
 8007856:	687b      	ldr	r3, [r7, #4]
 8007858:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800785c:	b2db      	uxtb	r3, r3
 800785e:	2b60      	cmp	r3, #96	; 0x60
 8007860:	d125      	bne.n	80078ae <I2C_ITError+0x1ae>
 8007862:	687b      	ldr	r3, [r7, #4]
 8007864:	2220      	movs	r2, #32
 8007866:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800786a:	687b      	ldr	r3, [r7, #4]
 800786c:	2200      	movs	r2, #0
 800786e:	641a      	str	r2, [r3, #64]	; 0x40
 8007870:	687b      	ldr	r3, [r7, #4]
 8007872:	681b      	ldr	r3, [r3, #0]
 8007874:	695b      	ldr	r3, [r3, #20]
 8007876:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800787a:	2b40      	cmp	r3, #64	; 0x40
 800787c:	d10b      	bne.n	8007896 <I2C_ITError+0x196>
 800787e:	687b      	ldr	r3, [r7, #4]
 8007880:	681b      	ldr	r3, [r3, #0]
 8007882:	691a      	ldr	r2, [r3, #16]
 8007884:	687b      	ldr	r3, [r7, #4]
 8007886:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007888:	b2d2      	uxtb	r2, r2
 800788a:	701a      	strb	r2, [r3, #0]
 800788c:	687b      	ldr	r3, [r7, #4]
 800788e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007890:	1c5a      	adds	r2, r3, #1
 8007892:	687b      	ldr	r3, [r7, #4]
 8007894:	625a      	str	r2, [r3, #36]	; 0x24
 8007896:	687b      	ldr	r3, [r7, #4]
 8007898:	681b      	ldr	r3, [r3, #0]
 800789a:	681a      	ldr	r2, [r3, #0]
 800789c:	687b      	ldr	r3, [r7, #4]
 800789e:	681b      	ldr	r3, [r3, #0]
 80078a0:	f022 0201 	bic.w	r2, r2, #1
 80078a4:	601a      	str	r2, [r3, #0]
 80078a6:	6878      	ldr	r0, [r7, #4]
 80078a8:	f7fe feec 	bl	8006684 <HAL_I2C_AbortCpltCallback>
 80078ac:	e015      	b.n	80078da <I2C_ITError+0x1da>
 80078ae:	687b      	ldr	r3, [r7, #4]
 80078b0:	681b      	ldr	r3, [r3, #0]
 80078b2:	695b      	ldr	r3, [r3, #20]
 80078b4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80078b8:	2b40      	cmp	r3, #64	; 0x40
 80078ba:	d10b      	bne.n	80078d4 <I2C_ITError+0x1d4>
 80078bc:	687b      	ldr	r3, [r7, #4]
 80078be:	681b      	ldr	r3, [r3, #0]
 80078c0:	691a      	ldr	r2, [r3, #16]
 80078c2:	687b      	ldr	r3, [r7, #4]
 80078c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80078c6:	b2d2      	uxtb	r2, r2
 80078c8:	701a      	strb	r2, [r3, #0]
 80078ca:	687b      	ldr	r3, [r7, #4]
 80078cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80078ce:	1c5a      	adds	r2, r3, #1
 80078d0:	687b      	ldr	r3, [r7, #4]
 80078d2:	625a      	str	r2, [r3, #36]	; 0x24
 80078d4:	6878      	ldr	r0, [r7, #4]
 80078d6:	f7fe fecb 	bl	8006670 <HAL_I2C_ErrorCallback>
 80078da:	687b      	ldr	r3, [r7, #4]
 80078dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80078de:	60bb      	str	r3, [r7, #8]
 80078e0:	68bb      	ldr	r3, [r7, #8]
 80078e2:	f003 0301 	and.w	r3, r3, #1
 80078e6:	2b00      	cmp	r3, #0
 80078e8:	d10e      	bne.n	8007908 <I2C_ITError+0x208>
 80078ea:	68bb      	ldr	r3, [r7, #8]
 80078ec:	f003 0302 	and.w	r3, r3, #2
 80078f0:	2b00      	cmp	r3, #0
 80078f2:	d109      	bne.n	8007908 <I2C_ITError+0x208>
 80078f4:	68bb      	ldr	r3, [r7, #8]
 80078f6:	f003 0304 	and.w	r3, r3, #4
 80078fa:	2b00      	cmp	r3, #0
 80078fc:	d104      	bne.n	8007908 <I2C_ITError+0x208>
 80078fe:	68bb      	ldr	r3, [r7, #8]
 8007900:	f003 0308 	and.w	r3, r3, #8
 8007904:	2b00      	cmp	r3, #0
 8007906:	d007      	beq.n	8007918 <I2C_ITError+0x218>
 8007908:	687b      	ldr	r3, [r7, #4]
 800790a:	681b      	ldr	r3, [r3, #0]
 800790c:	685a      	ldr	r2, [r3, #4]
 800790e:	687b      	ldr	r3, [r7, #4]
 8007910:	681b      	ldr	r3, [r3, #0]
 8007912:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8007916:	605a      	str	r2, [r3, #4]
 8007918:	687b      	ldr	r3, [r7, #4]
 800791a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800791e:	73fb      	strb	r3, [r7, #15]
 8007920:	687b      	ldr	r3, [r7, #4]
 8007922:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007924:	f003 0304 	and.w	r3, r3, #4
 8007928:	2b04      	cmp	r3, #4
 800792a:	d113      	bne.n	8007954 <I2C_ITError+0x254>
 800792c:	7bfb      	ldrb	r3, [r7, #15]
 800792e:	2b28      	cmp	r3, #40	; 0x28
 8007930:	d110      	bne.n	8007954 <I2C_ITError+0x254>
 8007932:	687b      	ldr	r3, [r7, #4]
 8007934:	4a0a      	ldr	r2, [pc, #40]	; (8007960 <I2C_ITError+0x260>)
 8007936:	62da      	str	r2, [r3, #44]	; 0x2c
 8007938:	687b      	ldr	r3, [r7, #4]
 800793a:	2200      	movs	r2, #0
 800793c:	631a      	str	r2, [r3, #48]	; 0x30
 800793e:	687b      	ldr	r3, [r7, #4]
 8007940:	2220      	movs	r2, #32
 8007942:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007946:	687b      	ldr	r3, [r7, #4]
 8007948:	2200      	movs	r2, #0
 800794a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800794e:	6878      	ldr	r0, [r7, #4]
 8007950:	f7fe fe70 	bl	8006634 <HAL_I2C_ListenCpltCallback>
 8007954:	bf00      	nop
 8007956:	3710      	adds	r7, #16
 8007958:	46bd      	mov	sp, r7
 800795a:	bd80      	pop	{r7, pc}
 800795c:	08007c05 	.word	0x08007c05
 8007960:	ffff0000 	.word	0xffff0000

08007964 <I2C_MasterRequestWrite>:
 8007964:	b580      	push	{r7, lr}
 8007966:	b088      	sub	sp, #32
 8007968:	af02      	add	r7, sp, #8
 800796a:	60f8      	str	r0, [r7, #12]
 800796c:	607a      	str	r2, [r7, #4]
 800796e:	603b      	str	r3, [r7, #0]
 8007970:	460b      	mov	r3, r1
 8007972:	817b      	strh	r3, [r7, #10]
 8007974:	68fb      	ldr	r3, [r7, #12]
 8007976:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007978:	617b      	str	r3, [r7, #20]
 800797a:	697b      	ldr	r3, [r7, #20]
 800797c:	2b08      	cmp	r3, #8
 800797e:	d006      	beq.n	800798e <I2C_MasterRequestWrite+0x2a>
 8007980:	697b      	ldr	r3, [r7, #20]
 8007982:	2b01      	cmp	r3, #1
 8007984:	d003      	beq.n	800798e <I2C_MasterRequestWrite+0x2a>
 8007986:	697b      	ldr	r3, [r7, #20]
 8007988:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800798c:	d108      	bne.n	80079a0 <I2C_MasterRequestWrite+0x3c>
 800798e:	68fb      	ldr	r3, [r7, #12]
 8007990:	681b      	ldr	r3, [r3, #0]
 8007992:	681a      	ldr	r2, [r3, #0]
 8007994:	68fb      	ldr	r3, [r7, #12]
 8007996:	681b      	ldr	r3, [r3, #0]
 8007998:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800799c:	601a      	str	r2, [r3, #0]
 800799e:	e00b      	b.n	80079b8 <I2C_MasterRequestWrite+0x54>
 80079a0:	68fb      	ldr	r3, [r7, #12]
 80079a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80079a4:	2b12      	cmp	r3, #18
 80079a6:	d107      	bne.n	80079b8 <I2C_MasterRequestWrite+0x54>
 80079a8:	68fb      	ldr	r3, [r7, #12]
 80079aa:	681b      	ldr	r3, [r3, #0]
 80079ac:	681a      	ldr	r2, [r3, #0]
 80079ae:	68fb      	ldr	r3, [r7, #12]
 80079b0:	681b      	ldr	r3, [r3, #0]
 80079b2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80079b6:	601a      	str	r2, [r3, #0]
 80079b8:	683b      	ldr	r3, [r7, #0]
 80079ba:	9300      	str	r3, [sp, #0]
 80079bc:	687b      	ldr	r3, [r7, #4]
 80079be:	2200      	movs	r2, #0
 80079c0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80079c4:	68f8      	ldr	r0, [r7, #12]
 80079c6:	f000 f9c5 	bl	8007d54 <I2C_WaitOnFlagUntilTimeout>
 80079ca:	4603      	mov	r3, r0
 80079cc:	2b00      	cmp	r3, #0
 80079ce:	d00d      	beq.n	80079ec <I2C_MasterRequestWrite+0x88>
 80079d0:	68fb      	ldr	r3, [r7, #12]
 80079d2:	681b      	ldr	r3, [r3, #0]
 80079d4:	681b      	ldr	r3, [r3, #0]
 80079d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80079da:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80079de:	d103      	bne.n	80079e8 <I2C_MasterRequestWrite+0x84>
 80079e0:	68fb      	ldr	r3, [r7, #12]
 80079e2:	f44f 7200 	mov.w	r2, #512	; 0x200
 80079e6:	641a      	str	r2, [r3, #64]	; 0x40
 80079e8:	2303      	movs	r3, #3
 80079ea:	e035      	b.n	8007a58 <I2C_MasterRequestWrite+0xf4>
 80079ec:	68fb      	ldr	r3, [r7, #12]
 80079ee:	691b      	ldr	r3, [r3, #16]
 80079f0:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 80079f4:	d108      	bne.n	8007a08 <I2C_MasterRequestWrite+0xa4>
 80079f6:	897b      	ldrh	r3, [r7, #10]
 80079f8:	b2db      	uxtb	r3, r3
 80079fa:	461a      	mov	r2, r3
 80079fc:	68fb      	ldr	r3, [r7, #12]
 80079fe:	681b      	ldr	r3, [r3, #0]
 8007a00:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8007a04:	611a      	str	r2, [r3, #16]
 8007a06:	e01b      	b.n	8007a40 <I2C_MasterRequestWrite+0xdc>
 8007a08:	897b      	ldrh	r3, [r7, #10]
 8007a0a:	11db      	asrs	r3, r3, #7
 8007a0c:	b2db      	uxtb	r3, r3
 8007a0e:	f003 0306 	and.w	r3, r3, #6
 8007a12:	b2db      	uxtb	r3, r3
 8007a14:	f063 030f 	orn	r3, r3, #15
 8007a18:	b2da      	uxtb	r2, r3
 8007a1a:	68fb      	ldr	r3, [r7, #12]
 8007a1c:	681b      	ldr	r3, [r3, #0]
 8007a1e:	611a      	str	r2, [r3, #16]
 8007a20:	683b      	ldr	r3, [r7, #0]
 8007a22:	687a      	ldr	r2, [r7, #4]
 8007a24:	490e      	ldr	r1, [pc, #56]	; (8007a60 <I2C_MasterRequestWrite+0xfc>)
 8007a26:	68f8      	ldr	r0, [r7, #12]
 8007a28:	f000 f9eb 	bl	8007e02 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007a2c:	4603      	mov	r3, r0
 8007a2e:	2b00      	cmp	r3, #0
 8007a30:	d001      	beq.n	8007a36 <I2C_MasterRequestWrite+0xd2>
 8007a32:	2301      	movs	r3, #1
 8007a34:	e010      	b.n	8007a58 <I2C_MasterRequestWrite+0xf4>
 8007a36:	897b      	ldrh	r3, [r7, #10]
 8007a38:	b2da      	uxtb	r2, r3
 8007a3a:	68fb      	ldr	r3, [r7, #12]
 8007a3c:	681b      	ldr	r3, [r3, #0]
 8007a3e:	611a      	str	r2, [r3, #16]
 8007a40:	683b      	ldr	r3, [r7, #0]
 8007a42:	687a      	ldr	r2, [r7, #4]
 8007a44:	4907      	ldr	r1, [pc, #28]	; (8007a64 <I2C_MasterRequestWrite+0x100>)
 8007a46:	68f8      	ldr	r0, [r7, #12]
 8007a48:	f000 f9db 	bl	8007e02 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007a4c:	4603      	mov	r3, r0
 8007a4e:	2b00      	cmp	r3, #0
 8007a50:	d001      	beq.n	8007a56 <I2C_MasterRequestWrite+0xf2>
 8007a52:	2301      	movs	r3, #1
 8007a54:	e000      	b.n	8007a58 <I2C_MasterRequestWrite+0xf4>
 8007a56:	2300      	movs	r3, #0
 8007a58:	4618      	mov	r0, r3
 8007a5a:	3718      	adds	r7, #24
 8007a5c:	46bd      	mov	sp, r7
 8007a5e:	bd80      	pop	{r7, pc}
 8007a60:	00010008 	.word	0x00010008
 8007a64:	00010002 	.word	0x00010002

08007a68 <I2C_MasterRequestRead>:
 8007a68:	b580      	push	{r7, lr}
 8007a6a:	b088      	sub	sp, #32
 8007a6c:	af02      	add	r7, sp, #8
 8007a6e:	60f8      	str	r0, [r7, #12]
 8007a70:	607a      	str	r2, [r7, #4]
 8007a72:	603b      	str	r3, [r7, #0]
 8007a74:	460b      	mov	r3, r1
 8007a76:	817b      	strh	r3, [r7, #10]
 8007a78:	68fb      	ldr	r3, [r7, #12]
 8007a7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007a7c:	617b      	str	r3, [r7, #20]
 8007a7e:	68fb      	ldr	r3, [r7, #12]
 8007a80:	681b      	ldr	r3, [r3, #0]
 8007a82:	681a      	ldr	r2, [r3, #0]
 8007a84:	68fb      	ldr	r3, [r7, #12]
 8007a86:	681b      	ldr	r3, [r3, #0]
 8007a88:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007a8c:	601a      	str	r2, [r3, #0]
 8007a8e:	697b      	ldr	r3, [r7, #20]
 8007a90:	2b08      	cmp	r3, #8
 8007a92:	d006      	beq.n	8007aa2 <I2C_MasterRequestRead+0x3a>
 8007a94:	697b      	ldr	r3, [r7, #20]
 8007a96:	2b01      	cmp	r3, #1
 8007a98:	d003      	beq.n	8007aa2 <I2C_MasterRequestRead+0x3a>
 8007a9a:	697b      	ldr	r3, [r7, #20]
 8007a9c:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8007aa0:	d108      	bne.n	8007ab4 <I2C_MasterRequestRead+0x4c>
 8007aa2:	68fb      	ldr	r3, [r7, #12]
 8007aa4:	681b      	ldr	r3, [r3, #0]
 8007aa6:	681a      	ldr	r2, [r3, #0]
 8007aa8:	68fb      	ldr	r3, [r7, #12]
 8007aaa:	681b      	ldr	r3, [r3, #0]
 8007aac:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007ab0:	601a      	str	r2, [r3, #0]
 8007ab2:	e00b      	b.n	8007acc <I2C_MasterRequestRead+0x64>
 8007ab4:	68fb      	ldr	r3, [r7, #12]
 8007ab6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007ab8:	2b11      	cmp	r3, #17
 8007aba:	d107      	bne.n	8007acc <I2C_MasterRequestRead+0x64>
 8007abc:	68fb      	ldr	r3, [r7, #12]
 8007abe:	681b      	ldr	r3, [r3, #0]
 8007ac0:	681a      	ldr	r2, [r3, #0]
 8007ac2:	68fb      	ldr	r3, [r7, #12]
 8007ac4:	681b      	ldr	r3, [r3, #0]
 8007ac6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007aca:	601a      	str	r2, [r3, #0]
 8007acc:	683b      	ldr	r3, [r7, #0]
 8007ace:	9300      	str	r3, [sp, #0]
 8007ad0:	687b      	ldr	r3, [r7, #4]
 8007ad2:	2200      	movs	r2, #0
 8007ad4:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8007ad8:	68f8      	ldr	r0, [r7, #12]
 8007ada:	f000 f93b 	bl	8007d54 <I2C_WaitOnFlagUntilTimeout>
 8007ade:	4603      	mov	r3, r0
 8007ae0:	2b00      	cmp	r3, #0
 8007ae2:	d00d      	beq.n	8007b00 <I2C_MasterRequestRead+0x98>
 8007ae4:	68fb      	ldr	r3, [r7, #12]
 8007ae6:	681b      	ldr	r3, [r3, #0]
 8007ae8:	681b      	ldr	r3, [r3, #0]
 8007aea:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007aee:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007af2:	d103      	bne.n	8007afc <I2C_MasterRequestRead+0x94>
 8007af4:	68fb      	ldr	r3, [r7, #12]
 8007af6:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007afa:	641a      	str	r2, [r3, #64]	; 0x40
 8007afc:	2303      	movs	r3, #3
 8007afe:	e079      	b.n	8007bf4 <I2C_MasterRequestRead+0x18c>
 8007b00:	68fb      	ldr	r3, [r7, #12]
 8007b02:	691b      	ldr	r3, [r3, #16]
 8007b04:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007b08:	d108      	bne.n	8007b1c <I2C_MasterRequestRead+0xb4>
 8007b0a:	897b      	ldrh	r3, [r7, #10]
 8007b0c:	b2db      	uxtb	r3, r3
 8007b0e:	f043 0301 	orr.w	r3, r3, #1
 8007b12:	b2da      	uxtb	r2, r3
 8007b14:	68fb      	ldr	r3, [r7, #12]
 8007b16:	681b      	ldr	r3, [r3, #0]
 8007b18:	611a      	str	r2, [r3, #16]
 8007b1a:	e05f      	b.n	8007bdc <I2C_MasterRequestRead+0x174>
 8007b1c:	897b      	ldrh	r3, [r7, #10]
 8007b1e:	11db      	asrs	r3, r3, #7
 8007b20:	b2db      	uxtb	r3, r3
 8007b22:	f003 0306 	and.w	r3, r3, #6
 8007b26:	b2db      	uxtb	r3, r3
 8007b28:	f063 030f 	orn	r3, r3, #15
 8007b2c:	b2da      	uxtb	r2, r3
 8007b2e:	68fb      	ldr	r3, [r7, #12]
 8007b30:	681b      	ldr	r3, [r3, #0]
 8007b32:	611a      	str	r2, [r3, #16]
 8007b34:	683b      	ldr	r3, [r7, #0]
 8007b36:	687a      	ldr	r2, [r7, #4]
 8007b38:	4930      	ldr	r1, [pc, #192]	; (8007bfc <I2C_MasterRequestRead+0x194>)
 8007b3a:	68f8      	ldr	r0, [r7, #12]
 8007b3c:	f000 f961 	bl	8007e02 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007b40:	4603      	mov	r3, r0
 8007b42:	2b00      	cmp	r3, #0
 8007b44:	d001      	beq.n	8007b4a <I2C_MasterRequestRead+0xe2>
 8007b46:	2301      	movs	r3, #1
 8007b48:	e054      	b.n	8007bf4 <I2C_MasterRequestRead+0x18c>
 8007b4a:	897b      	ldrh	r3, [r7, #10]
 8007b4c:	b2da      	uxtb	r2, r3
 8007b4e:	68fb      	ldr	r3, [r7, #12]
 8007b50:	681b      	ldr	r3, [r3, #0]
 8007b52:	611a      	str	r2, [r3, #16]
 8007b54:	683b      	ldr	r3, [r7, #0]
 8007b56:	687a      	ldr	r2, [r7, #4]
 8007b58:	4929      	ldr	r1, [pc, #164]	; (8007c00 <I2C_MasterRequestRead+0x198>)
 8007b5a:	68f8      	ldr	r0, [r7, #12]
 8007b5c:	f000 f951 	bl	8007e02 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007b60:	4603      	mov	r3, r0
 8007b62:	2b00      	cmp	r3, #0
 8007b64:	d001      	beq.n	8007b6a <I2C_MasterRequestRead+0x102>
 8007b66:	2301      	movs	r3, #1
 8007b68:	e044      	b.n	8007bf4 <I2C_MasterRequestRead+0x18c>
 8007b6a:	2300      	movs	r3, #0
 8007b6c:	613b      	str	r3, [r7, #16]
 8007b6e:	68fb      	ldr	r3, [r7, #12]
 8007b70:	681b      	ldr	r3, [r3, #0]
 8007b72:	695b      	ldr	r3, [r3, #20]
 8007b74:	613b      	str	r3, [r7, #16]
 8007b76:	68fb      	ldr	r3, [r7, #12]
 8007b78:	681b      	ldr	r3, [r3, #0]
 8007b7a:	699b      	ldr	r3, [r3, #24]
 8007b7c:	613b      	str	r3, [r7, #16]
 8007b7e:	693b      	ldr	r3, [r7, #16]
 8007b80:	68fb      	ldr	r3, [r7, #12]
 8007b82:	681b      	ldr	r3, [r3, #0]
 8007b84:	681a      	ldr	r2, [r3, #0]
 8007b86:	68fb      	ldr	r3, [r7, #12]
 8007b88:	681b      	ldr	r3, [r3, #0]
 8007b8a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007b8e:	601a      	str	r2, [r3, #0]
 8007b90:	683b      	ldr	r3, [r7, #0]
 8007b92:	9300      	str	r3, [sp, #0]
 8007b94:	687b      	ldr	r3, [r7, #4]
 8007b96:	2200      	movs	r2, #0
 8007b98:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8007b9c:	68f8      	ldr	r0, [r7, #12]
 8007b9e:	f000 f8d9 	bl	8007d54 <I2C_WaitOnFlagUntilTimeout>
 8007ba2:	4603      	mov	r3, r0
 8007ba4:	2b00      	cmp	r3, #0
 8007ba6:	d00d      	beq.n	8007bc4 <I2C_MasterRequestRead+0x15c>
 8007ba8:	68fb      	ldr	r3, [r7, #12]
 8007baa:	681b      	ldr	r3, [r3, #0]
 8007bac:	681b      	ldr	r3, [r3, #0]
 8007bae:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007bb2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007bb6:	d103      	bne.n	8007bc0 <I2C_MasterRequestRead+0x158>
 8007bb8:	68fb      	ldr	r3, [r7, #12]
 8007bba:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007bbe:	641a      	str	r2, [r3, #64]	; 0x40
 8007bc0:	2303      	movs	r3, #3
 8007bc2:	e017      	b.n	8007bf4 <I2C_MasterRequestRead+0x18c>
 8007bc4:	897b      	ldrh	r3, [r7, #10]
 8007bc6:	11db      	asrs	r3, r3, #7
 8007bc8:	b2db      	uxtb	r3, r3
 8007bca:	f003 0306 	and.w	r3, r3, #6
 8007bce:	b2db      	uxtb	r3, r3
 8007bd0:	f063 030e 	orn	r3, r3, #14
 8007bd4:	b2da      	uxtb	r2, r3
 8007bd6:	68fb      	ldr	r3, [r7, #12]
 8007bd8:	681b      	ldr	r3, [r3, #0]
 8007bda:	611a      	str	r2, [r3, #16]
 8007bdc:	683b      	ldr	r3, [r7, #0]
 8007bde:	687a      	ldr	r2, [r7, #4]
 8007be0:	4907      	ldr	r1, [pc, #28]	; (8007c00 <I2C_MasterRequestRead+0x198>)
 8007be2:	68f8      	ldr	r0, [r7, #12]
 8007be4:	f000 f90d 	bl	8007e02 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007be8:	4603      	mov	r3, r0
 8007bea:	2b00      	cmp	r3, #0
 8007bec:	d001      	beq.n	8007bf2 <I2C_MasterRequestRead+0x18a>
 8007bee:	2301      	movs	r3, #1
 8007bf0:	e000      	b.n	8007bf4 <I2C_MasterRequestRead+0x18c>
 8007bf2:	2300      	movs	r3, #0
 8007bf4:	4618      	mov	r0, r3
 8007bf6:	3718      	adds	r7, #24
 8007bf8:	46bd      	mov	sp, r7
 8007bfa:	bd80      	pop	{r7, pc}
 8007bfc:	00010008 	.word	0x00010008
 8007c00:	00010002 	.word	0x00010002

08007c04 <I2C_DMAAbort>:
 8007c04:	b580      	push	{r7, lr}
 8007c06:	b086      	sub	sp, #24
 8007c08:	af00      	add	r7, sp, #0
 8007c0a:	6078      	str	r0, [r7, #4]
 8007c0c:	2300      	movs	r3, #0
 8007c0e:	60fb      	str	r3, [r7, #12]
 8007c10:	687b      	ldr	r3, [r7, #4]
 8007c12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c14:	617b      	str	r3, [r7, #20]
 8007c16:	697b      	ldr	r3, [r7, #20]
 8007c18:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007c1c:	74fb      	strb	r3, [r7, #19]
 8007c1e:	4b4b      	ldr	r3, [pc, #300]	; (8007d4c <I2C_DMAAbort+0x148>)
 8007c20:	681b      	ldr	r3, [r3, #0]
 8007c22:	08db      	lsrs	r3, r3, #3
 8007c24:	4a4a      	ldr	r2, [pc, #296]	; (8007d50 <I2C_DMAAbort+0x14c>)
 8007c26:	fba2 2303 	umull	r2, r3, r2, r3
 8007c2a:	0a1a      	lsrs	r2, r3, #8
 8007c2c:	4613      	mov	r3, r2
 8007c2e:	009b      	lsls	r3, r3, #2
 8007c30:	4413      	add	r3, r2
 8007c32:	00da      	lsls	r2, r3, #3
 8007c34:	1ad3      	subs	r3, r2, r3
 8007c36:	60fb      	str	r3, [r7, #12]
 8007c38:	68fb      	ldr	r3, [r7, #12]
 8007c3a:	2b00      	cmp	r3, #0
 8007c3c:	d106      	bne.n	8007c4c <I2C_DMAAbort+0x48>
 8007c3e:	697b      	ldr	r3, [r7, #20]
 8007c40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c42:	f043 0220 	orr.w	r2, r3, #32
 8007c46:	697b      	ldr	r3, [r7, #20]
 8007c48:	641a      	str	r2, [r3, #64]	; 0x40
 8007c4a:	e00a      	b.n	8007c62 <I2C_DMAAbort+0x5e>
 8007c4c:	68fb      	ldr	r3, [r7, #12]
 8007c4e:	3b01      	subs	r3, #1
 8007c50:	60fb      	str	r3, [r7, #12]
 8007c52:	697b      	ldr	r3, [r7, #20]
 8007c54:	681b      	ldr	r3, [r3, #0]
 8007c56:	681b      	ldr	r3, [r3, #0]
 8007c58:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8007c5c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007c60:	d0ea      	beq.n	8007c38 <I2C_DMAAbort+0x34>
 8007c62:	697b      	ldr	r3, [r7, #20]
 8007c64:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007c66:	2b00      	cmp	r3, #0
 8007c68:	d003      	beq.n	8007c72 <I2C_DMAAbort+0x6e>
 8007c6a:	697b      	ldr	r3, [r7, #20]
 8007c6c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007c6e:	2200      	movs	r2, #0
 8007c70:	63da      	str	r2, [r3, #60]	; 0x3c
 8007c72:	697b      	ldr	r3, [r7, #20]
 8007c74:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c76:	2b00      	cmp	r3, #0
 8007c78:	d003      	beq.n	8007c82 <I2C_DMAAbort+0x7e>
 8007c7a:	697b      	ldr	r3, [r7, #20]
 8007c7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c7e:	2200      	movs	r2, #0
 8007c80:	63da      	str	r2, [r3, #60]	; 0x3c
 8007c82:	697b      	ldr	r3, [r7, #20]
 8007c84:	681b      	ldr	r3, [r3, #0]
 8007c86:	681a      	ldr	r2, [r3, #0]
 8007c88:	697b      	ldr	r3, [r7, #20]
 8007c8a:	681b      	ldr	r3, [r3, #0]
 8007c8c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007c90:	601a      	str	r2, [r3, #0]
 8007c92:	697b      	ldr	r3, [r7, #20]
 8007c94:	2200      	movs	r2, #0
 8007c96:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007c98:	697b      	ldr	r3, [r7, #20]
 8007c9a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007c9c:	2b00      	cmp	r3, #0
 8007c9e:	d003      	beq.n	8007ca8 <I2C_DMAAbort+0xa4>
 8007ca0:	697b      	ldr	r3, [r7, #20]
 8007ca2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007ca4:	2200      	movs	r2, #0
 8007ca6:	651a      	str	r2, [r3, #80]	; 0x50
 8007ca8:	697b      	ldr	r3, [r7, #20]
 8007caa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007cac:	2b00      	cmp	r3, #0
 8007cae:	d003      	beq.n	8007cb8 <I2C_DMAAbort+0xb4>
 8007cb0:	697b      	ldr	r3, [r7, #20]
 8007cb2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007cb4:	2200      	movs	r2, #0
 8007cb6:	651a      	str	r2, [r3, #80]	; 0x50
 8007cb8:	697b      	ldr	r3, [r7, #20]
 8007cba:	681b      	ldr	r3, [r3, #0]
 8007cbc:	681a      	ldr	r2, [r3, #0]
 8007cbe:	697b      	ldr	r3, [r7, #20]
 8007cc0:	681b      	ldr	r3, [r3, #0]
 8007cc2:	f022 0201 	bic.w	r2, r2, #1
 8007cc6:	601a      	str	r2, [r3, #0]
 8007cc8:	697b      	ldr	r3, [r7, #20]
 8007cca:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007cce:	b2db      	uxtb	r3, r3
 8007cd0:	2b60      	cmp	r3, #96	; 0x60
 8007cd2:	d10e      	bne.n	8007cf2 <I2C_DMAAbort+0xee>
 8007cd4:	697b      	ldr	r3, [r7, #20]
 8007cd6:	2220      	movs	r2, #32
 8007cd8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007cdc:	697b      	ldr	r3, [r7, #20]
 8007cde:	2200      	movs	r2, #0
 8007ce0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007ce4:	697b      	ldr	r3, [r7, #20]
 8007ce6:	2200      	movs	r2, #0
 8007ce8:	641a      	str	r2, [r3, #64]	; 0x40
 8007cea:	6978      	ldr	r0, [r7, #20]
 8007cec:	f7fe fcca 	bl	8006684 <HAL_I2C_AbortCpltCallback>
 8007cf0:	e027      	b.n	8007d42 <I2C_DMAAbort+0x13e>
 8007cf2:	7cfb      	ldrb	r3, [r7, #19]
 8007cf4:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8007cf8:	2b28      	cmp	r3, #40	; 0x28
 8007cfa:	d117      	bne.n	8007d2c <I2C_DMAAbort+0x128>
 8007cfc:	697b      	ldr	r3, [r7, #20]
 8007cfe:	681b      	ldr	r3, [r3, #0]
 8007d00:	681a      	ldr	r2, [r3, #0]
 8007d02:	697b      	ldr	r3, [r7, #20]
 8007d04:	681b      	ldr	r3, [r3, #0]
 8007d06:	f042 0201 	orr.w	r2, r2, #1
 8007d0a:	601a      	str	r2, [r3, #0]
 8007d0c:	697b      	ldr	r3, [r7, #20]
 8007d0e:	681b      	ldr	r3, [r3, #0]
 8007d10:	681a      	ldr	r2, [r3, #0]
 8007d12:	697b      	ldr	r3, [r7, #20]
 8007d14:	681b      	ldr	r3, [r3, #0]
 8007d16:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007d1a:	601a      	str	r2, [r3, #0]
 8007d1c:	697b      	ldr	r3, [r7, #20]
 8007d1e:	2200      	movs	r2, #0
 8007d20:	631a      	str	r2, [r3, #48]	; 0x30
 8007d22:	697b      	ldr	r3, [r7, #20]
 8007d24:	2228      	movs	r2, #40	; 0x28
 8007d26:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007d2a:	e007      	b.n	8007d3c <I2C_DMAAbort+0x138>
 8007d2c:	697b      	ldr	r3, [r7, #20]
 8007d2e:	2220      	movs	r2, #32
 8007d30:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007d34:	697b      	ldr	r3, [r7, #20]
 8007d36:	2200      	movs	r2, #0
 8007d38:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007d3c:	6978      	ldr	r0, [r7, #20]
 8007d3e:	f7fe fc97 	bl	8006670 <HAL_I2C_ErrorCallback>
 8007d42:	bf00      	nop
 8007d44:	3718      	adds	r7, #24
 8007d46:	46bd      	mov	sp, r7
 8007d48:	bd80      	pop	{r7, pc}
 8007d4a:	bf00      	nop
 8007d4c:	20000134 	.word	0x20000134
 8007d50:	14f8b589 	.word	0x14f8b589

08007d54 <I2C_WaitOnFlagUntilTimeout>:
 8007d54:	b580      	push	{r7, lr}
 8007d56:	b084      	sub	sp, #16
 8007d58:	af00      	add	r7, sp, #0
 8007d5a:	60f8      	str	r0, [r7, #12]
 8007d5c:	60b9      	str	r1, [r7, #8]
 8007d5e:	603b      	str	r3, [r7, #0]
 8007d60:	4613      	mov	r3, r2
 8007d62:	71fb      	strb	r3, [r7, #7]
 8007d64:	e025      	b.n	8007db2 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8007d66:	683b      	ldr	r3, [r7, #0]
 8007d68:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007d6c:	d021      	beq.n	8007db2 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8007d6e:	f7fc feaf 	bl	8004ad0 <HAL_GetTick>
 8007d72:	4602      	mov	r2, r0
 8007d74:	69bb      	ldr	r3, [r7, #24]
 8007d76:	1ad3      	subs	r3, r2, r3
 8007d78:	683a      	ldr	r2, [r7, #0]
 8007d7a:	429a      	cmp	r2, r3
 8007d7c:	d302      	bcc.n	8007d84 <I2C_WaitOnFlagUntilTimeout+0x30>
 8007d7e:	683b      	ldr	r3, [r7, #0]
 8007d80:	2b00      	cmp	r3, #0
 8007d82:	d116      	bne.n	8007db2 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8007d84:	68fb      	ldr	r3, [r7, #12]
 8007d86:	2200      	movs	r2, #0
 8007d88:	631a      	str	r2, [r3, #48]	; 0x30
 8007d8a:	68fb      	ldr	r3, [r7, #12]
 8007d8c:	2220      	movs	r2, #32
 8007d8e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007d92:	68fb      	ldr	r3, [r7, #12]
 8007d94:	2200      	movs	r2, #0
 8007d96:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007d9a:	68fb      	ldr	r3, [r7, #12]
 8007d9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007d9e:	f043 0220 	orr.w	r2, r3, #32
 8007da2:	68fb      	ldr	r3, [r7, #12]
 8007da4:	641a      	str	r2, [r3, #64]	; 0x40
 8007da6:	68fb      	ldr	r3, [r7, #12]
 8007da8:	2200      	movs	r2, #0
 8007daa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007dae:	2301      	movs	r3, #1
 8007db0:	e023      	b.n	8007dfa <I2C_WaitOnFlagUntilTimeout+0xa6>
 8007db2:	68bb      	ldr	r3, [r7, #8]
 8007db4:	0c1b      	lsrs	r3, r3, #16
 8007db6:	b2db      	uxtb	r3, r3
 8007db8:	2b01      	cmp	r3, #1
 8007dba:	d10d      	bne.n	8007dd8 <I2C_WaitOnFlagUntilTimeout+0x84>
 8007dbc:	68fb      	ldr	r3, [r7, #12]
 8007dbe:	681b      	ldr	r3, [r3, #0]
 8007dc0:	695b      	ldr	r3, [r3, #20]
 8007dc2:	43da      	mvns	r2, r3
 8007dc4:	68bb      	ldr	r3, [r7, #8]
 8007dc6:	4013      	ands	r3, r2
 8007dc8:	b29b      	uxth	r3, r3
 8007dca:	2b00      	cmp	r3, #0
 8007dcc:	bf0c      	ite	eq
 8007dce:	2301      	moveq	r3, #1
 8007dd0:	2300      	movne	r3, #0
 8007dd2:	b2db      	uxtb	r3, r3
 8007dd4:	461a      	mov	r2, r3
 8007dd6:	e00c      	b.n	8007df2 <I2C_WaitOnFlagUntilTimeout+0x9e>
 8007dd8:	68fb      	ldr	r3, [r7, #12]
 8007dda:	681b      	ldr	r3, [r3, #0]
 8007ddc:	699b      	ldr	r3, [r3, #24]
 8007dde:	43da      	mvns	r2, r3
 8007de0:	68bb      	ldr	r3, [r7, #8]
 8007de2:	4013      	ands	r3, r2
 8007de4:	b29b      	uxth	r3, r3
 8007de6:	2b00      	cmp	r3, #0
 8007de8:	bf0c      	ite	eq
 8007dea:	2301      	moveq	r3, #1
 8007dec:	2300      	movne	r3, #0
 8007dee:	b2db      	uxtb	r3, r3
 8007df0:	461a      	mov	r2, r3
 8007df2:	79fb      	ldrb	r3, [r7, #7]
 8007df4:	429a      	cmp	r2, r3
 8007df6:	d0b6      	beq.n	8007d66 <I2C_WaitOnFlagUntilTimeout+0x12>
 8007df8:	2300      	movs	r3, #0
 8007dfa:	4618      	mov	r0, r3
 8007dfc:	3710      	adds	r7, #16
 8007dfe:	46bd      	mov	sp, r7
 8007e00:	bd80      	pop	{r7, pc}

08007e02 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8007e02:	b580      	push	{r7, lr}
 8007e04:	b084      	sub	sp, #16
 8007e06:	af00      	add	r7, sp, #0
 8007e08:	60f8      	str	r0, [r7, #12]
 8007e0a:	60b9      	str	r1, [r7, #8]
 8007e0c:	607a      	str	r2, [r7, #4]
 8007e0e:	603b      	str	r3, [r7, #0]
 8007e10:	e051      	b.n	8007eb6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8007e12:	68fb      	ldr	r3, [r7, #12]
 8007e14:	681b      	ldr	r3, [r3, #0]
 8007e16:	695b      	ldr	r3, [r3, #20]
 8007e18:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007e1c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007e20:	d123      	bne.n	8007e6a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8007e22:	68fb      	ldr	r3, [r7, #12]
 8007e24:	681b      	ldr	r3, [r3, #0]
 8007e26:	681a      	ldr	r2, [r3, #0]
 8007e28:	68fb      	ldr	r3, [r7, #12]
 8007e2a:	681b      	ldr	r3, [r3, #0]
 8007e2c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007e30:	601a      	str	r2, [r3, #0]
 8007e32:	68fb      	ldr	r3, [r7, #12]
 8007e34:	681b      	ldr	r3, [r3, #0]
 8007e36:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8007e3a:	615a      	str	r2, [r3, #20]
 8007e3c:	68fb      	ldr	r3, [r7, #12]
 8007e3e:	2200      	movs	r2, #0
 8007e40:	631a      	str	r2, [r3, #48]	; 0x30
 8007e42:	68fb      	ldr	r3, [r7, #12]
 8007e44:	2220      	movs	r2, #32
 8007e46:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007e4a:	68fb      	ldr	r3, [r7, #12]
 8007e4c:	2200      	movs	r2, #0
 8007e4e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007e52:	68fb      	ldr	r3, [r7, #12]
 8007e54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007e56:	f043 0204 	orr.w	r2, r3, #4
 8007e5a:	68fb      	ldr	r3, [r7, #12]
 8007e5c:	641a      	str	r2, [r3, #64]	; 0x40
 8007e5e:	68fb      	ldr	r3, [r7, #12]
 8007e60:	2200      	movs	r2, #0
 8007e62:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007e66:	2301      	movs	r3, #1
 8007e68:	e046      	b.n	8007ef8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8007e6a:	687b      	ldr	r3, [r7, #4]
 8007e6c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007e70:	d021      	beq.n	8007eb6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8007e72:	f7fc fe2d 	bl	8004ad0 <HAL_GetTick>
 8007e76:	4602      	mov	r2, r0
 8007e78:	683b      	ldr	r3, [r7, #0]
 8007e7a:	1ad3      	subs	r3, r2, r3
 8007e7c:	687a      	ldr	r2, [r7, #4]
 8007e7e:	429a      	cmp	r2, r3
 8007e80:	d302      	bcc.n	8007e88 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8007e82:	687b      	ldr	r3, [r7, #4]
 8007e84:	2b00      	cmp	r3, #0
 8007e86:	d116      	bne.n	8007eb6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8007e88:	68fb      	ldr	r3, [r7, #12]
 8007e8a:	2200      	movs	r2, #0
 8007e8c:	631a      	str	r2, [r3, #48]	; 0x30
 8007e8e:	68fb      	ldr	r3, [r7, #12]
 8007e90:	2220      	movs	r2, #32
 8007e92:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007e96:	68fb      	ldr	r3, [r7, #12]
 8007e98:	2200      	movs	r2, #0
 8007e9a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007e9e:	68fb      	ldr	r3, [r7, #12]
 8007ea0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007ea2:	f043 0220 	orr.w	r2, r3, #32
 8007ea6:	68fb      	ldr	r3, [r7, #12]
 8007ea8:	641a      	str	r2, [r3, #64]	; 0x40
 8007eaa:	68fb      	ldr	r3, [r7, #12]
 8007eac:	2200      	movs	r2, #0
 8007eae:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007eb2:	2301      	movs	r3, #1
 8007eb4:	e020      	b.n	8007ef8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8007eb6:	68bb      	ldr	r3, [r7, #8]
 8007eb8:	0c1b      	lsrs	r3, r3, #16
 8007eba:	b2db      	uxtb	r3, r3
 8007ebc:	2b01      	cmp	r3, #1
 8007ebe:	d10c      	bne.n	8007eda <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8007ec0:	68fb      	ldr	r3, [r7, #12]
 8007ec2:	681b      	ldr	r3, [r3, #0]
 8007ec4:	695b      	ldr	r3, [r3, #20]
 8007ec6:	43da      	mvns	r2, r3
 8007ec8:	68bb      	ldr	r3, [r7, #8]
 8007eca:	4013      	ands	r3, r2
 8007ecc:	b29b      	uxth	r3, r3
 8007ece:	2b00      	cmp	r3, #0
 8007ed0:	bf14      	ite	ne
 8007ed2:	2301      	movne	r3, #1
 8007ed4:	2300      	moveq	r3, #0
 8007ed6:	b2db      	uxtb	r3, r3
 8007ed8:	e00b      	b.n	8007ef2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8007eda:	68fb      	ldr	r3, [r7, #12]
 8007edc:	681b      	ldr	r3, [r3, #0]
 8007ede:	699b      	ldr	r3, [r3, #24]
 8007ee0:	43da      	mvns	r2, r3
 8007ee2:	68bb      	ldr	r3, [r7, #8]
 8007ee4:	4013      	ands	r3, r2
 8007ee6:	b29b      	uxth	r3, r3
 8007ee8:	2b00      	cmp	r3, #0
 8007eea:	bf14      	ite	ne
 8007eec:	2301      	movne	r3, #1
 8007eee:	2300      	moveq	r3, #0
 8007ef0:	b2db      	uxtb	r3, r3
 8007ef2:	2b00      	cmp	r3, #0
 8007ef4:	d18d      	bne.n	8007e12 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8007ef6:	2300      	movs	r3, #0
 8007ef8:	4618      	mov	r0, r3
 8007efa:	3710      	adds	r7, #16
 8007efc:	46bd      	mov	sp, r7
 8007efe:	bd80      	pop	{r7, pc}

08007f00 <I2C_WaitOnTXEFlagUntilTimeout>:
 8007f00:	b580      	push	{r7, lr}
 8007f02:	b084      	sub	sp, #16
 8007f04:	af00      	add	r7, sp, #0
 8007f06:	60f8      	str	r0, [r7, #12]
 8007f08:	60b9      	str	r1, [r7, #8]
 8007f0a:	607a      	str	r2, [r7, #4]
 8007f0c:	e02d      	b.n	8007f6a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8007f0e:	68f8      	ldr	r0, [r7, #12]
 8007f10:	f000 f900 	bl	8008114 <I2C_IsAcknowledgeFailed>
 8007f14:	4603      	mov	r3, r0
 8007f16:	2b00      	cmp	r3, #0
 8007f18:	d001      	beq.n	8007f1e <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8007f1a:	2301      	movs	r3, #1
 8007f1c:	e02d      	b.n	8007f7a <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8007f1e:	68bb      	ldr	r3, [r7, #8]
 8007f20:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007f24:	d021      	beq.n	8007f6a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8007f26:	f7fc fdd3 	bl	8004ad0 <HAL_GetTick>
 8007f2a:	4602      	mov	r2, r0
 8007f2c:	687b      	ldr	r3, [r7, #4]
 8007f2e:	1ad3      	subs	r3, r2, r3
 8007f30:	68ba      	ldr	r2, [r7, #8]
 8007f32:	429a      	cmp	r2, r3
 8007f34:	d302      	bcc.n	8007f3c <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8007f36:	68bb      	ldr	r3, [r7, #8]
 8007f38:	2b00      	cmp	r3, #0
 8007f3a:	d116      	bne.n	8007f6a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8007f3c:	68fb      	ldr	r3, [r7, #12]
 8007f3e:	2200      	movs	r2, #0
 8007f40:	631a      	str	r2, [r3, #48]	; 0x30
 8007f42:	68fb      	ldr	r3, [r7, #12]
 8007f44:	2220      	movs	r2, #32
 8007f46:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007f4a:	68fb      	ldr	r3, [r7, #12]
 8007f4c:	2200      	movs	r2, #0
 8007f4e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007f52:	68fb      	ldr	r3, [r7, #12]
 8007f54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007f56:	f043 0220 	orr.w	r2, r3, #32
 8007f5a:	68fb      	ldr	r3, [r7, #12]
 8007f5c:	641a      	str	r2, [r3, #64]	; 0x40
 8007f5e:	68fb      	ldr	r3, [r7, #12]
 8007f60:	2200      	movs	r2, #0
 8007f62:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007f66:	2301      	movs	r3, #1
 8007f68:	e007      	b.n	8007f7a <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8007f6a:	68fb      	ldr	r3, [r7, #12]
 8007f6c:	681b      	ldr	r3, [r3, #0]
 8007f6e:	695b      	ldr	r3, [r3, #20]
 8007f70:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007f74:	2b80      	cmp	r3, #128	; 0x80
 8007f76:	d1ca      	bne.n	8007f0e <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8007f78:	2300      	movs	r3, #0
 8007f7a:	4618      	mov	r0, r3
 8007f7c:	3710      	adds	r7, #16
 8007f7e:	46bd      	mov	sp, r7
 8007f80:	bd80      	pop	{r7, pc}

08007f82 <I2C_WaitOnBTFFlagUntilTimeout>:
 8007f82:	b580      	push	{r7, lr}
 8007f84:	b084      	sub	sp, #16
 8007f86:	af00      	add	r7, sp, #0
 8007f88:	60f8      	str	r0, [r7, #12]
 8007f8a:	60b9      	str	r1, [r7, #8]
 8007f8c:	607a      	str	r2, [r7, #4]
 8007f8e:	e02d      	b.n	8007fec <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8007f90:	68f8      	ldr	r0, [r7, #12]
 8007f92:	f000 f8bf 	bl	8008114 <I2C_IsAcknowledgeFailed>
 8007f96:	4603      	mov	r3, r0
 8007f98:	2b00      	cmp	r3, #0
 8007f9a:	d001      	beq.n	8007fa0 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8007f9c:	2301      	movs	r3, #1
 8007f9e:	e02d      	b.n	8007ffc <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8007fa0:	68bb      	ldr	r3, [r7, #8]
 8007fa2:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007fa6:	d021      	beq.n	8007fec <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8007fa8:	f7fc fd92 	bl	8004ad0 <HAL_GetTick>
 8007fac:	4602      	mov	r2, r0
 8007fae:	687b      	ldr	r3, [r7, #4]
 8007fb0:	1ad3      	subs	r3, r2, r3
 8007fb2:	68ba      	ldr	r2, [r7, #8]
 8007fb4:	429a      	cmp	r2, r3
 8007fb6:	d302      	bcc.n	8007fbe <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8007fb8:	68bb      	ldr	r3, [r7, #8]
 8007fba:	2b00      	cmp	r3, #0
 8007fbc:	d116      	bne.n	8007fec <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8007fbe:	68fb      	ldr	r3, [r7, #12]
 8007fc0:	2200      	movs	r2, #0
 8007fc2:	631a      	str	r2, [r3, #48]	; 0x30
 8007fc4:	68fb      	ldr	r3, [r7, #12]
 8007fc6:	2220      	movs	r2, #32
 8007fc8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007fcc:	68fb      	ldr	r3, [r7, #12]
 8007fce:	2200      	movs	r2, #0
 8007fd0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007fd4:	68fb      	ldr	r3, [r7, #12]
 8007fd6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007fd8:	f043 0220 	orr.w	r2, r3, #32
 8007fdc:	68fb      	ldr	r3, [r7, #12]
 8007fde:	641a      	str	r2, [r3, #64]	; 0x40
 8007fe0:	68fb      	ldr	r3, [r7, #12]
 8007fe2:	2200      	movs	r2, #0
 8007fe4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007fe8:	2301      	movs	r3, #1
 8007fea:	e007      	b.n	8007ffc <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8007fec:	68fb      	ldr	r3, [r7, #12]
 8007fee:	681b      	ldr	r3, [r3, #0]
 8007ff0:	695b      	ldr	r3, [r3, #20]
 8007ff2:	f003 0304 	and.w	r3, r3, #4
 8007ff6:	2b04      	cmp	r3, #4
 8007ff8:	d1ca      	bne.n	8007f90 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8007ffa:	2300      	movs	r3, #0
 8007ffc:	4618      	mov	r0, r3
 8007ffe:	3710      	adds	r7, #16
 8008000:	46bd      	mov	sp, r7
 8008002:	bd80      	pop	{r7, pc}

08008004 <I2C_WaitOnSTOPRequestThroughIT>:
 8008004:	b480      	push	{r7}
 8008006:	b085      	sub	sp, #20
 8008008:	af00      	add	r7, sp, #0
 800800a:	6078      	str	r0, [r7, #4]
 800800c:	2300      	movs	r3, #0
 800800e:	60fb      	str	r3, [r7, #12]
 8008010:	4b13      	ldr	r3, [pc, #76]	; (8008060 <I2C_WaitOnSTOPRequestThroughIT+0x5c>)
 8008012:	681b      	ldr	r3, [r3, #0]
 8008014:	08db      	lsrs	r3, r3, #3
 8008016:	4a13      	ldr	r2, [pc, #76]	; (8008064 <I2C_WaitOnSTOPRequestThroughIT+0x60>)
 8008018:	fba2 2303 	umull	r2, r3, r2, r3
 800801c:	0a1a      	lsrs	r2, r3, #8
 800801e:	4613      	mov	r3, r2
 8008020:	009b      	lsls	r3, r3, #2
 8008022:	4413      	add	r3, r2
 8008024:	60fb      	str	r3, [r7, #12]
 8008026:	68fb      	ldr	r3, [r7, #12]
 8008028:	3b01      	subs	r3, #1
 800802a:	60fb      	str	r3, [r7, #12]
 800802c:	68fb      	ldr	r3, [r7, #12]
 800802e:	2b00      	cmp	r3, #0
 8008030:	d107      	bne.n	8008042 <I2C_WaitOnSTOPRequestThroughIT+0x3e>
 8008032:	687b      	ldr	r3, [r7, #4]
 8008034:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008036:	f043 0220 	orr.w	r2, r3, #32
 800803a:	687b      	ldr	r3, [r7, #4]
 800803c:	641a      	str	r2, [r3, #64]	; 0x40
 800803e:	2301      	movs	r3, #1
 8008040:	e008      	b.n	8008054 <I2C_WaitOnSTOPRequestThroughIT+0x50>
 8008042:	687b      	ldr	r3, [r7, #4]
 8008044:	681b      	ldr	r3, [r3, #0]
 8008046:	681b      	ldr	r3, [r3, #0]
 8008048:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800804c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008050:	d0e9      	beq.n	8008026 <I2C_WaitOnSTOPRequestThroughIT+0x22>
 8008052:	2300      	movs	r3, #0
 8008054:	4618      	mov	r0, r3
 8008056:	3714      	adds	r7, #20
 8008058:	46bd      	mov	sp, r7
 800805a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800805e:	4770      	bx	lr
 8008060:	20000134 	.word	0x20000134
 8008064:	14f8b589 	.word	0x14f8b589

08008068 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8008068:	b580      	push	{r7, lr}
 800806a:	b084      	sub	sp, #16
 800806c:	af00      	add	r7, sp, #0
 800806e:	60f8      	str	r0, [r7, #12]
 8008070:	60b9      	str	r1, [r7, #8]
 8008072:	607a      	str	r2, [r7, #4]
 8008074:	e042      	b.n	80080fc <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 8008076:	68fb      	ldr	r3, [r7, #12]
 8008078:	681b      	ldr	r3, [r3, #0]
 800807a:	695b      	ldr	r3, [r3, #20]
 800807c:	f003 0310 	and.w	r3, r3, #16
 8008080:	2b10      	cmp	r3, #16
 8008082:	d119      	bne.n	80080b8 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8008084:	68fb      	ldr	r3, [r7, #12]
 8008086:	681b      	ldr	r3, [r3, #0]
 8008088:	f06f 0210 	mvn.w	r2, #16
 800808c:	615a      	str	r2, [r3, #20]
 800808e:	68fb      	ldr	r3, [r7, #12]
 8008090:	2200      	movs	r2, #0
 8008092:	631a      	str	r2, [r3, #48]	; 0x30
 8008094:	68fb      	ldr	r3, [r7, #12]
 8008096:	2220      	movs	r2, #32
 8008098:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800809c:	68fb      	ldr	r3, [r7, #12]
 800809e:	2200      	movs	r2, #0
 80080a0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80080a4:	68fb      	ldr	r3, [r7, #12]
 80080a6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80080a8:	68fb      	ldr	r3, [r7, #12]
 80080aa:	641a      	str	r2, [r3, #64]	; 0x40
 80080ac:	68fb      	ldr	r3, [r7, #12]
 80080ae:	2200      	movs	r2, #0
 80080b0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80080b4:	2301      	movs	r3, #1
 80080b6:	e029      	b.n	800810c <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 80080b8:	f7fc fd0a 	bl	8004ad0 <HAL_GetTick>
 80080bc:	4602      	mov	r2, r0
 80080be:	687b      	ldr	r3, [r7, #4]
 80080c0:	1ad3      	subs	r3, r2, r3
 80080c2:	68ba      	ldr	r2, [r7, #8]
 80080c4:	429a      	cmp	r2, r3
 80080c6:	d302      	bcc.n	80080ce <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 80080c8:	68bb      	ldr	r3, [r7, #8]
 80080ca:	2b00      	cmp	r3, #0
 80080cc:	d116      	bne.n	80080fc <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 80080ce:	68fb      	ldr	r3, [r7, #12]
 80080d0:	2200      	movs	r2, #0
 80080d2:	631a      	str	r2, [r3, #48]	; 0x30
 80080d4:	68fb      	ldr	r3, [r7, #12]
 80080d6:	2220      	movs	r2, #32
 80080d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80080dc:	68fb      	ldr	r3, [r7, #12]
 80080de:	2200      	movs	r2, #0
 80080e0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80080e4:	68fb      	ldr	r3, [r7, #12]
 80080e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80080e8:	f043 0220 	orr.w	r2, r3, #32
 80080ec:	68fb      	ldr	r3, [r7, #12]
 80080ee:	641a      	str	r2, [r3, #64]	; 0x40
 80080f0:	68fb      	ldr	r3, [r7, #12]
 80080f2:	2200      	movs	r2, #0
 80080f4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80080f8:	2301      	movs	r3, #1
 80080fa:	e007      	b.n	800810c <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 80080fc:	68fb      	ldr	r3, [r7, #12]
 80080fe:	681b      	ldr	r3, [r3, #0]
 8008100:	695b      	ldr	r3, [r3, #20]
 8008102:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008106:	2b40      	cmp	r3, #64	; 0x40
 8008108:	d1b5      	bne.n	8008076 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 800810a:	2300      	movs	r3, #0
 800810c:	4618      	mov	r0, r3
 800810e:	3710      	adds	r7, #16
 8008110:	46bd      	mov	sp, r7
 8008112:	bd80      	pop	{r7, pc}

08008114 <I2C_IsAcknowledgeFailed>:
 8008114:	b480      	push	{r7}
 8008116:	b083      	sub	sp, #12
 8008118:	af00      	add	r7, sp, #0
 800811a:	6078      	str	r0, [r7, #4]
 800811c:	687b      	ldr	r3, [r7, #4]
 800811e:	681b      	ldr	r3, [r3, #0]
 8008120:	695b      	ldr	r3, [r3, #20]
 8008122:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8008126:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800812a:	d11b      	bne.n	8008164 <I2C_IsAcknowledgeFailed+0x50>
 800812c:	687b      	ldr	r3, [r7, #4]
 800812e:	681b      	ldr	r3, [r3, #0]
 8008130:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8008134:	615a      	str	r2, [r3, #20]
 8008136:	687b      	ldr	r3, [r7, #4]
 8008138:	2200      	movs	r2, #0
 800813a:	631a      	str	r2, [r3, #48]	; 0x30
 800813c:	687b      	ldr	r3, [r7, #4]
 800813e:	2220      	movs	r2, #32
 8008140:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008144:	687b      	ldr	r3, [r7, #4]
 8008146:	2200      	movs	r2, #0
 8008148:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800814c:	687b      	ldr	r3, [r7, #4]
 800814e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008150:	f043 0204 	orr.w	r2, r3, #4
 8008154:	687b      	ldr	r3, [r7, #4]
 8008156:	641a      	str	r2, [r3, #64]	; 0x40
 8008158:	687b      	ldr	r3, [r7, #4]
 800815a:	2200      	movs	r2, #0
 800815c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008160:	2301      	movs	r3, #1
 8008162:	e000      	b.n	8008166 <I2C_IsAcknowledgeFailed+0x52>
 8008164:	2300      	movs	r3, #0
 8008166:	4618      	mov	r0, r3
 8008168:	370c      	adds	r7, #12
 800816a:	46bd      	mov	sp, r7
 800816c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008170:	4770      	bx	lr

08008172 <I2C_ConvertOtherXferOptions>:
 8008172:	b480      	push	{r7}
 8008174:	b083      	sub	sp, #12
 8008176:	af00      	add	r7, sp, #0
 8008178:	6078      	str	r0, [r7, #4]
 800817a:	687b      	ldr	r3, [r7, #4]
 800817c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800817e:	f5b3 0f2a 	cmp.w	r3, #11141120	; 0xaa0000
 8008182:	d103      	bne.n	800818c <I2C_ConvertOtherXferOptions+0x1a>
 8008184:	687b      	ldr	r3, [r7, #4]
 8008186:	2201      	movs	r2, #1
 8008188:	62da      	str	r2, [r3, #44]	; 0x2c
 800818a:	e007      	b.n	800819c <I2C_ConvertOtherXferOptions+0x2a>
 800818c:	687b      	ldr	r3, [r7, #4]
 800818e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008190:	f1b3 4f2a 	cmp.w	r3, #2852126720	; 0xaa000000
 8008194:	d102      	bne.n	800819c <I2C_ConvertOtherXferOptions+0x2a>
 8008196:	687b      	ldr	r3, [r7, #4]
 8008198:	2208      	movs	r2, #8
 800819a:	62da      	str	r2, [r3, #44]	; 0x2c
 800819c:	bf00      	nop
 800819e:	370c      	adds	r7, #12
 80081a0:	46bd      	mov	sp, r7
 80081a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081a6:	4770      	bx	lr

080081a8 <HAL_RCC_OscConfig>:
 80081a8:	b580      	push	{r7, lr}
 80081aa:	b086      	sub	sp, #24
 80081ac:	af00      	add	r7, sp, #0
 80081ae:	6078      	str	r0, [r7, #4]
 80081b0:	687b      	ldr	r3, [r7, #4]
 80081b2:	2b00      	cmp	r3, #0
 80081b4:	d101      	bne.n	80081ba <HAL_RCC_OscConfig+0x12>
 80081b6:	2301      	movs	r3, #1
 80081b8:	e267      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 80081ba:	687b      	ldr	r3, [r7, #4]
 80081bc:	681b      	ldr	r3, [r3, #0]
 80081be:	f003 0301 	and.w	r3, r3, #1
 80081c2:	2b00      	cmp	r3, #0
 80081c4:	d075      	beq.n	80082b2 <HAL_RCC_OscConfig+0x10a>
 80081c6:	4b88      	ldr	r3, [pc, #544]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 80081c8:	689b      	ldr	r3, [r3, #8]
 80081ca:	f003 030c 	and.w	r3, r3, #12
 80081ce:	2b04      	cmp	r3, #4
 80081d0:	d00c      	beq.n	80081ec <HAL_RCC_OscConfig+0x44>
 80081d2:	4b85      	ldr	r3, [pc, #532]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 80081d4:	689b      	ldr	r3, [r3, #8]
 80081d6:	f003 030c 	and.w	r3, r3, #12
 80081da:	2b08      	cmp	r3, #8
 80081dc:	d112      	bne.n	8008204 <HAL_RCC_OscConfig+0x5c>
 80081de:	4b82      	ldr	r3, [pc, #520]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 80081e0:	685b      	ldr	r3, [r3, #4]
 80081e2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80081e6:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80081ea:	d10b      	bne.n	8008204 <HAL_RCC_OscConfig+0x5c>
 80081ec:	4b7e      	ldr	r3, [pc, #504]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 80081ee:	681b      	ldr	r3, [r3, #0]
 80081f0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80081f4:	2b00      	cmp	r3, #0
 80081f6:	d05b      	beq.n	80082b0 <HAL_RCC_OscConfig+0x108>
 80081f8:	687b      	ldr	r3, [r7, #4]
 80081fa:	685b      	ldr	r3, [r3, #4]
 80081fc:	2b00      	cmp	r3, #0
 80081fe:	d157      	bne.n	80082b0 <HAL_RCC_OscConfig+0x108>
 8008200:	2301      	movs	r3, #1
 8008202:	e242      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 8008204:	687b      	ldr	r3, [r7, #4]
 8008206:	685b      	ldr	r3, [r3, #4]
 8008208:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800820c:	d106      	bne.n	800821c <HAL_RCC_OscConfig+0x74>
 800820e:	4b76      	ldr	r3, [pc, #472]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 8008210:	681b      	ldr	r3, [r3, #0]
 8008212:	4a75      	ldr	r2, [pc, #468]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 8008214:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008218:	6013      	str	r3, [r2, #0]
 800821a:	e01d      	b.n	8008258 <HAL_RCC_OscConfig+0xb0>
 800821c:	687b      	ldr	r3, [r7, #4]
 800821e:	685b      	ldr	r3, [r3, #4]
 8008220:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8008224:	d10c      	bne.n	8008240 <HAL_RCC_OscConfig+0x98>
 8008226:	4b70      	ldr	r3, [pc, #448]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 8008228:	681b      	ldr	r3, [r3, #0]
 800822a:	4a6f      	ldr	r2, [pc, #444]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 800822c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8008230:	6013      	str	r3, [r2, #0]
 8008232:	4b6d      	ldr	r3, [pc, #436]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 8008234:	681b      	ldr	r3, [r3, #0]
 8008236:	4a6c      	ldr	r2, [pc, #432]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 8008238:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800823c:	6013      	str	r3, [r2, #0]
 800823e:	e00b      	b.n	8008258 <HAL_RCC_OscConfig+0xb0>
 8008240:	4b69      	ldr	r3, [pc, #420]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 8008242:	681b      	ldr	r3, [r3, #0]
 8008244:	4a68      	ldr	r2, [pc, #416]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 8008246:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800824a:	6013      	str	r3, [r2, #0]
 800824c:	4b66      	ldr	r3, [pc, #408]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 800824e:	681b      	ldr	r3, [r3, #0]
 8008250:	4a65      	ldr	r2, [pc, #404]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 8008252:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8008256:	6013      	str	r3, [r2, #0]
 8008258:	687b      	ldr	r3, [r7, #4]
 800825a:	685b      	ldr	r3, [r3, #4]
 800825c:	2b00      	cmp	r3, #0
 800825e:	d013      	beq.n	8008288 <HAL_RCC_OscConfig+0xe0>
 8008260:	f7fc fc36 	bl	8004ad0 <HAL_GetTick>
 8008264:	6138      	str	r0, [r7, #16]
 8008266:	e008      	b.n	800827a <HAL_RCC_OscConfig+0xd2>
 8008268:	f7fc fc32 	bl	8004ad0 <HAL_GetTick>
 800826c:	4602      	mov	r2, r0
 800826e:	693b      	ldr	r3, [r7, #16]
 8008270:	1ad3      	subs	r3, r2, r3
 8008272:	2b64      	cmp	r3, #100	; 0x64
 8008274:	d901      	bls.n	800827a <HAL_RCC_OscConfig+0xd2>
 8008276:	2303      	movs	r3, #3
 8008278:	e207      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 800827a:	4b5b      	ldr	r3, [pc, #364]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 800827c:	681b      	ldr	r3, [r3, #0]
 800827e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008282:	2b00      	cmp	r3, #0
 8008284:	d0f0      	beq.n	8008268 <HAL_RCC_OscConfig+0xc0>
 8008286:	e014      	b.n	80082b2 <HAL_RCC_OscConfig+0x10a>
 8008288:	f7fc fc22 	bl	8004ad0 <HAL_GetTick>
 800828c:	6138      	str	r0, [r7, #16]
 800828e:	e008      	b.n	80082a2 <HAL_RCC_OscConfig+0xfa>
 8008290:	f7fc fc1e 	bl	8004ad0 <HAL_GetTick>
 8008294:	4602      	mov	r2, r0
 8008296:	693b      	ldr	r3, [r7, #16]
 8008298:	1ad3      	subs	r3, r2, r3
 800829a:	2b64      	cmp	r3, #100	; 0x64
 800829c:	d901      	bls.n	80082a2 <HAL_RCC_OscConfig+0xfa>
 800829e:	2303      	movs	r3, #3
 80082a0:	e1f3      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 80082a2:	4b51      	ldr	r3, [pc, #324]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 80082a4:	681b      	ldr	r3, [r3, #0]
 80082a6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80082aa:	2b00      	cmp	r3, #0
 80082ac:	d1f0      	bne.n	8008290 <HAL_RCC_OscConfig+0xe8>
 80082ae:	e000      	b.n	80082b2 <HAL_RCC_OscConfig+0x10a>
 80082b0:	bf00      	nop
 80082b2:	687b      	ldr	r3, [r7, #4]
 80082b4:	681b      	ldr	r3, [r3, #0]
 80082b6:	f003 0302 	and.w	r3, r3, #2
 80082ba:	2b00      	cmp	r3, #0
 80082bc:	d063      	beq.n	8008386 <HAL_RCC_OscConfig+0x1de>
 80082be:	4b4a      	ldr	r3, [pc, #296]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 80082c0:	689b      	ldr	r3, [r3, #8]
 80082c2:	f003 030c 	and.w	r3, r3, #12
 80082c6:	2b00      	cmp	r3, #0
 80082c8:	d00b      	beq.n	80082e2 <HAL_RCC_OscConfig+0x13a>
 80082ca:	4b47      	ldr	r3, [pc, #284]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 80082cc:	689b      	ldr	r3, [r3, #8]
 80082ce:	f003 030c 	and.w	r3, r3, #12
 80082d2:	2b08      	cmp	r3, #8
 80082d4:	d11c      	bne.n	8008310 <HAL_RCC_OscConfig+0x168>
 80082d6:	4b44      	ldr	r3, [pc, #272]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 80082d8:	685b      	ldr	r3, [r3, #4]
 80082da:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80082de:	2b00      	cmp	r3, #0
 80082e0:	d116      	bne.n	8008310 <HAL_RCC_OscConfig+0x168>
 80082e2:	4b41      	ldr	r3, [pc, #260]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 80082e4:	681b      	ldr	r3, [r3, #0]
 80082e6:	f003 0302 	and.w	r3, r3, #2
 80082ea:	2b00      	cmp	r3, #0
 80082ec:	d005      	beq.n	80082fa <HAL_RCC_OscConfig+0x152>
 80082ee:	687b      	ldr	r3, [r7, #4]
 80082f0:	68db      	ldr	r3, [r3, #12]
 80082f2:	2b01      	cmp	r3, #1
 80082f4:	d001      	beq.n	80082fa <HAL_RCC_OscConfig+0x152>
 80082f6:	2301      	movs	r3, #1
 80082f8:	e1c7      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 80082fa:	4b3b      	ldr	r3, [pc, #236]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 80082fc:	681b      	ldr	r3, [r3, #0]
 80082fe:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8008302:	687b      	ldr	r3, [r7, #4]
 8008304:	691b      	ldr	r3, [r3, #16]
 8008306:	00db      	lsls	r3, r3, #3
 8008308:	4937      	ldr	r1, [pc, #220]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 800830a:	4313      	orrs	r3, r2
 800830c:	600b      	str	r3, [r1, #0]
 800830e:	e03a      	b.n	8008386 <HAL_RCC_OscConfig+0x1de>
 8008310:	687b      	ldr	r3, [r7, #4]
 8008312:	68db      	ldr	r3, [r3, #12]
 8008314:	2b00      	cmp	r3, #0
 8008316:	d020      	beq.n	800835a <HAL_RCC_OscConfig+0x1b2>
 8008318:	4b34      	ldr	r3, [pc, #208]	; (80083ec <HAL_RCC_OscConfig+0x244>)
 800831a:	2201      	movs	r2, #1
 800831c:	601a      	str	r2, [r3, #0]
 800831e:	f7fc fbd7 	bl	8004ad0 <HAL_GetTick>
 8008322:	6138      	str	r0, [r7, #16]
 8008324:	e008      	b.n	8008338 <HAL_RCC_OscConfig+0x190>
 8008326:	f7fc fbd3 	bl	8004ad0 <HAL_GetTick>
 800832a:	4602      	mov	r2, r0
 800832c:	693b      	ldr	r3, [r7, #16]
 800832e:	1ad3      	subs	r3, r2, r3
 8008330:	2b02      	cmp	r3, #2
 8008332:	d901      	bls.n	8008338 <HAL_RCC_OscConfig+0x190>
 8008334:	2303      	movs	r3, #3
 8008336:	e1a8      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 8008338:	4b2b      	ldr	r3, [pc, #172]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 800833a:	681b      	ldr	r3, [r3, #0]
 800833c:	f003 0302 	and.w	r3, r3, #2
 8008340:	2b00      	cmp	r3, #0
 8008342:	d0f0      	beq.n	8008326 <HAL_RCC_OscConfig+0x17e>
 8008344:	4b28      	ldr	r3, [pc, #160]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 8008346:	681b      	ldr	r3, [r3, #0]
 8008348:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800834c:	687b      	ldr	r3, [r7, #4]
 800834e:	691b      	ldr	r3, [r3, #16]
 8008350:	00db      	lsls	r3, r3, #3
 8008352:	4925      	ldr	r1, [pc, #148]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 8008354:	4313      	orrs	r3, r2
 8008356:	600b      	str	r3, [r1, #0]
 8008358:	e015      	b.n	8008386 <HAL_RCC_OscConfig+0x1de>
 800835a:	4b24      	ldr	r3, [pc, #144]	; (80083ec <HAL_RCC_OscConfig+0x244>)
 800835c:	2200      	movs	r2, #0
 800835e:	601a      	str	r2, [r3, #0]
 8008360:	f7fc fbb6 	bl	8004ad0 <HAL_GetTick>
 8008364:	6138      	str	r0, [r7, #16]
 8008366:	e008      	b.n	800837a <HAL_RCC_OscConfig+0x1d2>
 8008368:	f7fc fbb2 	bl	8004ad0 <HAL_GetTick>
 800836c:	4602      	mov	r2, r0
 800836e:	693b      	ldr	r3, [r7, #16]
 8008370:	1ad3      	subs	r3, r2, r3
 8008372:	2b02      	cmp	r3, #2
 8008374:	d901      	bls.n	800837a <HAL_RCC_OscConfig+0x1d2>
 8008376:	2303      	movs	r3, #3
 8008378:	e187      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 800837a:	4b1b      	ldr	r3, [pc, #108]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 800837c:	681b      	ldr	r3, [r3, #0]
 800837e:	f003 0302 	and.w	r3, r3, #2
 8008382:	2b00      	cmp	r3, #0
 8008384:	d1f0      	bne.n	8008368 <HAL_RCC_OscConfig+0x1c0>
 8008386:	687b      	ldr	r3, [r7, #4]
 8008388:	681b      	ldr	r3, [r3, #0]
 800838a:	f003 0308 	and.w	r3, r3, #8
 800838e:	2b00      	cmp	r3, #0
 8008390:	d036      	beq.n	8008400 <HAL_RCC_OscConfig+0x258>
 8008392:	687b      	ldr	r3, [r7, #4]
 8008394:	695b      	ldr	r3, [r3, #20]
 8008396:	2b00      	cmp	r3, #0
 8008398:	d016      	beq.n	80083c8 <HAL_RCC_OscConfig+0x220>
 800839a:	4b15      	ldr	r3, [pc, #84]	; (80083f0 <HAL_RCC_OscConfig+0x248>)
 800839c:	2201      	movs	r2, #1
 800839e:	601a      	str	r2, [r3, #0]
 80083a0:	f7fc fb96 	bl	8004ad0 <HAL_GetTick>
 80083a4:	6138      	str	r0, [r7, #16]
 80083a6:	e008      	b.n	80083ba <HAL_RCC_OscConfig+0x212>
 80083a8:	f7fc fb92 	bl	8004ad0 <HAL_GetTick>
 80083ac:	4602      	mov	r2, r0
 80083ae:	693b      	ldr	r3, [r7, #16]
 80083b0:	1ad3      	subs	r3, r2, r3
 80083b2:	2b02      	cmp	r3, #2
 80083b4:	d901      	bls.n	80083ba <HAL_RCC_OscConfig+0x212>
 80083b6:	2303      	movs	r3, #3
 80083b8:	e167      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 80083ba:	4b0b      	ldr	r3, [pc, #44]	; (80083e8 <HAL_RCC_OscConfig+0x240>)
 80083bc:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80083be:	f003 0302 	and.w	r3, r3, #2
 80083c2:	2b00      	cmp	r3, #0
 80083c4:	d0f0      	beq.n	80083a8 <HAL_RCC_OscConfig+0x200>
 80083c6:	e01b      	b.n	8008400 <HAL_RCC_OscConfig+0x258>
 80083c8:	4b09      	ldr	r3, [pc, #36]	; (80083f0 <HAL_RCC_OscConfig+0x248>)
 80083ca:	2200      	movs	r2, #0
 80083cc:	601a      	str	r2, [r3, #0]
 80083ce:	f7fc fb7f 	bl	8004ad0 <HAL_GetTick>
 80083d2:	6138      	str	r0, [r7, #16]
 80083d4:	e00e      	b.n	80083f4 <HAL_RCC_OscConfig+0x24c>
 80083d6:	f7fc fb7b 	bl	8004ad0 <HAL_GetTick>
 80083da:	4602      	mov	r2, r0
 80083dc:	693b      	ldr	r3, [r7, #16]
 80083de:	1ad3      	subs	r3, r2, r3
 80083e0:	2b02      	cmp	r3, #2
 80083e2:	d907      	bls.n	80083f4 <HAL_RCC_OscConfig+0x24c>
 80083e4:	2303      	movs	r3, #3
 80083e6:	e150      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 80083e8:	40023800 	.word	0x40023800
 80083ec:	42470000 	.word	0x42470000
 80083f0:	42470e80 	.word	0x42470e80
 80083f4:	4b88      	ldr	r3, [pc, #544]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 80083f6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80083f8:	f003 0302 	and.w	r3, r3, #2
 80083fc:	2b00      	cmp	r3, #0
 80083fe:	d1ea      	bne.n	80083d6 <HAL_RCC_OscConfig+0x22e>
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	681b      	ldr	r3, [r3, #0]
 8008404:	f003 0304 	and.w	r3, r3, #4
 8008408:	2b00      	cmp	r3, #0
 800840a:	f000 8097 	beq.w	800853c <HAL_RCC_OscConfig+0x394>
 800840e:	2300      	movs	r3, #0
 8008410:	75fb      	strb	r3, [r7, #23]
 8008412:	4b81      	ldr	r3, [pc, #516]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 8008414:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008416:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800841a:	2b00      	cmp	r3, #0
 800841c:	d10f      	bne.n	800843e <HAL_RCC_OscConfig+0x296>
 800841e:	2300      	movs	r3, #0
 8008420:	60bb      	str	r3, [r7, #8]
 8008422:	4b7d      	ldr	r3, [pc, #500]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 8008424:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008426:	4a7c      	ldr	r2, [pc, #496]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 8008428:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800842c:	6413      	str	r3, [r2, #64]	; 0x40
 800842e:	4b7a      	ldr	r3, [pc, #488]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 8008430:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008432:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008436:	60bb      	str	r3, [r7, #8]
 8008438:	68bb      	ldr	r3, [r7, #8]
 800843a:	2301      	movs	r3, #1
 800843c:	75fb      	strb	r3, [r7, #23]
 800843e:	4b77      	ldr	r3, [pc, #476]	; (800861c <HAL_RCC_OscConfig+0x474>)
 8008440:	681b      	ldr	r3, [r3, #0]
 8008442:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008446:	2b00      	cmp	r3, #0
 8008448:	d118      	bne.n	800847c <HAL_RCC_OscConfig+0x2d4>
 800844a:	4b74      	ldr	r3, [pc, #464]	; (800861c <HAL_RCC_OscConfig+0x474>)
 800844c:	681b      	ldr	r3, [r3, #0]
 800844e:	4a73      	ldr	r2, [pc, #460]	; (800861c <HAL_RCC_OscConfig+0x474>)
 8008450:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008454:	6013      	str	r3, [r2, #0]
 8008456:	f7fc fb3b 	bl	8004ad0 <HAL_GetTick>
 800845a:	6138      	str	r0, [r7, #16]
 800845c:	e008      	b.n	8008470 <HAL_RCC_OscConfig+0x2c8>
 800845e:	f7fc fb37 	bl	8004ad0 <HAL_GetTick>
 8008462:	4602      	mov	r2, r0
 8008464:	693b      	ldr	r3, [r7, #16]
 8008466:	1ad3      	subs	r3, r2, r3
 8008468:	2b02      	cmp	r3, #2
 800846a:	d901      	bls.n	8008470 <HAL_RCC_OscConfig+0x2c8>
 800846c:	2303      	movs	r3, #3
 800846e:	e10c      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 8008470:	4b6a      	ldr	r3, [pc, #424]	; (800861c <HAL_RCC_OscConfig+0x474>)
 8008472:	681b      	ldr	r3, [r3, #0]
 8008474:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008478:	2b00      	cmp	r3, #0
 800847a:	d0f0      	beq.n	800845e <HAL_RCC_OscConfig+0x2b6>
 800847c:	687b      	ldr	r3, [r7, #4]
 800847e:	689b      	ldr	r3, [r3, #8]
 8008480:	2b01      	cmp	r3, #1
 8008482:	d106      	bne.n	8008492 <HAL_RCC_OscConfig+0x2ea>
 8008484:	4b64      	ldr	r3, [pc, #400]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 8008486:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008488:	4a63      	ldr	r2, [pc, #396]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 800848a:	f043 0301 	orr.w	r3, r3, #1
 800848e:	6713      	str	r3, [r2, #112]	; 0x70
 8008490:	e01c      	b.n	80084cc <HAL_RCC_OscConfig+0x324>
 8008492:	687b      	ldr	r3, [r7, #4]
 8008494:	689b      	ldr	r3, [r3, #8]
 8008496:	2b05      	cmp	r3, #5
 8008498:	d10c      	bne.n	80084b4 <HAL_RCC_OscConfig+0x30c>
 800849a:	4b5f      	ldr	r3, [pc, #380]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 800849c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800849e:	4a5e      	ldr	r2, [pc, #376]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 80084a0:	f043 0304 	orr.w	r3, r3, #4
 80084a4:	6713      	str	r3, [r2, #112]	; 0x70
 80084a6:	4b5c      	ldr	r3, [pc, #368]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 80084a8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80084aa:	4a5b      	ldr	r2, [pc, #364]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 80084ac:	f043 0301 	orr.w	r3, r3, #1
 80084b0:	6713      	str	r3, [r2, #112]	; 0x70
 80084b2:	e00b      	b.n	80084cc <HAL_RCC_OscConfig+0x324>
 80084b4:	4b58      	ldr	r3, [pc, #352]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 80084b6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80084b8:	4a57      	ldr	r2, [pc, #348]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 80084ba:	f023 0301 	bic.w	r3, r3, #1
 80084be:	6713      	str	r3, [r2, #112]	; 0x70
 80084c0:	4b55      	ldr	r3, [pc, #340]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 80084c2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80084c4:	4a54      	ldr	r2, [pc, #336]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 80084c6:	f023 0304 	bic.w	r3, r3, #4
 80084ca:	6713      	str	r3, [r2, #112]	; 0x70
 80084cc:	687b      	ldr	r3, [r7, #4]
 80084ce:	689b      	ldr	r3, [r3, #8]
 80084d0:	2b00      	cmp	r3, #0
 80084d2:	d015      	beq.n	8008500 <HAL_RCC_OscConfig+0x358>
 80084d4:	f7fc fafc 	bl	8004ad0 <HAL_GetTick>
 80084d8:	6138      	str	r0, [r7, #16]
 80084da:	e00a      	b.n	80084f2 <HAL_RCC_OscConfig+0x34a>
 80084dc:	f7fc faf8 	bl	8004ad0 <HAL_GetTick>
 80084e0:	4602      	mov	r2, r0
 80084e2:	693b      	ldr	r3, [r7, #16]
 80084e4:	1ad3      	subs	r3, r2, r3
 80084e6:	f241 3288 	movw	r2, #5000	; 0x1388
 80084ea:	4293      	cmp	r3, r2
 80084ec:	d901      	bls.n	80084f2 <HAL_RCC_OscConfig+0x34a>
 80084ee:	2303      	movs	r3, #3
 80084f0:	e0cb      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 80084f2:	4b49      	ldr	r3, [pc, #292]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 80084f4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80084f6:	f003 0302 	and.w	r3, r3, #2
 80084fa:	2b00      	cmp	r3, #0
 80084fc:	d0ee      	beq.n	80084dc <HAL_RCC_OscConfig+0x334>
 80084fe:	e014      	b.n	800852a <HAL_RCC_OscConfig+0x382>
 8008500:	f7fc fae6 	bl	8004ad0 <HAL_GetTick>
 8008504:	6138      	str	r0, [r7, #16]
 8008506:	e00a      	b.n	800851e <HAL_RCC_OscConfig+0x376>
 8008508:	f7fc fae2 	bl	8004ad0 <HAL_GetTick>
 800850c:	4602      	mov	r2, r0
 800850e:	693b      	ldr	r3, [r7, #16]
 8008510:	1ad3      	subs	r3, r2, r3
 8008512:	f241 3288 	movw	r2, #5000	; 0x1388
 8008516:	4293      	cmp	r3, r2
 8008518:	d901      	bls.n	800851e <HAL_RCC_OscConfig+0x376>
 800851a:	2303      	movs	r3, #3
 800851c:	e0b5      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 800851e:	4b3e      	ldr	r3, [pc, #248]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 8008520:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008522:	f003 0302 	and.w	r3, r3, #2
 8008526:	2b00      	cmp	r3, #0
 8008528:	d1ee      	bne.n	8008508 <HAL_RCC_OscConfig+0x360>
 800852a:	7dfb      	ldrb	r3, [r7, #23]
 800852c:	2b01      	cmp	r3, #1
 800852e:	d105      	bne.n	800853c <HAL_RCC_OscConfig+0x394>
 8008530:	4b39      	ldr	r3, [pc, #228]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 8008532:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008534:	4a38      	ldr	r2, [pc, #224]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 8008536:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800853a:	6413      	str	r3, [r2, #64]	; 0x40
 800853c:	687b      	ldr	r3, [r7, #4]
 800853e:	699b      	ldr	r3, [r3, #24]
 8008540:	2b00      	cmp	r3, #0
 8008542:	f000 80a1 	beq.w	8008688 <HAL_RCC_OscConfig+0x4e0>
 8008546:	4b34      	ldr	r3, [pc, #208]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 8008548:	689b      	ldr	r3, [r3, #8]
 800854a:	f003 030c 	and.w	r3, r3, #12
 800854e:	2b08      	cmp	r3, #8
 8008550:	d05c      	beq.n	800860c <HAL_RCC_OscConfig+0x464>
 8008552:	687b      	ldr	r3, [r7, #4]
 8008554:	699b      	ldr	r3, [r3, #24]
 8008556:	2b02      	cmp	r3, #2
 8008558:	d141      	bne.n	80085de <HAL_RCC_OscConfig+0x436>
 800855a:	4b31      	ldr	r3, [pc, #196]	; (8008620 <HAL_RCC_OscConfig+0x478>)
 800855c:	2200      	movs	r2, #0
 800855e:	601a      	str	r2, [r3, #0]
 8008560:	f7fc fab6 	bl	8004ad0 <HAL_GetTick>
 8008564:	6138      	str	r0, [r7, #16]
 8008566:	e008      	b.n	800857a <HAL_RCC_OscConfig+0x3d2>
 8008568:	f7fc fab2 	bl	8004ad0 <HAL_GetTick>
 800856c:	4602      	mov	r2, r0
 800856e:	693b      	ldr	r3, [r7, #16]
 8008570:	1ad3      	subs	r3, r2, r3
 8008572:	2b02      	cmp	r3, #2
 8008574:	d901      	bls.n	800857a <HAL_RCC_OscConfig+0x3d2>
 8008576:	2303      	movs	r3, #3
 8008578:	e087      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 800857a:	4b27      	ldr	r3, [pc, #156]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 800857c:	681b      	ldr	r3, [r3, #0]
 800857e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008582:	2b00      	cmp	r3, #0
 8008584:	d1f0      	bne.n	8008568 <HAL_RCC_OscConfig+0x3c0>
 8008586:	687b      	ldr	r3, [r7, #4]
 8008588:	69da      	ldr	r2, [r3, #28]
 800858a:	687b      	ldr	r3, [r7, #4]
 800858c:	6a1b      	ldr	r3, [r3, #32]
 800858e:	431a      	orrs	r2, r3
 8008590:	687b      	ldr	r3, [r7, #4]
 8008592:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008594:	019b      	lsls	r3, r3, #6
 8008596:	431a      	orrs	r2, r3
 8008598:	687b      	ldr	r3, [r7, #4]
 800859a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800859c:	085b      	lsrs	r3, r3, #1
 800859e:	3b01      	subs	r3, #1
 80085a0:	041b      	lsls	r3, r3, #16
 80085a2:	431a      	orrs	r2, r3
 80085a4:	687b      	ldr	r3, [r7, #4]
 80085a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80085a8:	061b      	lsls	r3, r3, #24
 80085aa:	491b      	ldr	r1, [pc, #108]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 80085ac:	4313      	orrs	r3, r2
 80085ae:	604b      	str	r3, [r1, #4]
 80085b0:	4b1b      	ldr	r3, [pc, #108]	; (8008620 <HAL_RCC_OscConfig+0x478>)
 80085b2:	2201      	movs	r2, #1
 80085b4:	601a      	str	r2, [r3, #0]
 80085b6:	f7fc fa8b 	bl	8004ad0 <HAL_GetTick>
 80085ba:	6138      	str	r0, [r7, #16]
 80085bc:	e008      	b.n	80085d0 <HAL_RCC_OscConfig+0x428>
 80085be:	f7fc fa87 	bl	8004ad0 <HAL_GetTick>
 80085c2:	4602      	mov	r2, r0
 80085c4:	693b      	ldr	r3, [r7, #16]
 80085c6:	1ad3      	subs	r3, r2, r3
 80085c8:	2b02      	cmp	r3, #2
 80085ca:	d901      	bls.n	80085d0 <HAL_RCC_OscConfig+0x428>
 80085cc:	2303      	movs	r3, #3
 80085ce:	e05c      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 80085d0:	4b11      	ldr	r3, [pc, #68]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 80085d2:	681b      	ldr	r3, [r3, #0]
 80085d4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80085d8:	2b00      	cmp	r3, #0
 80085da:	d0f0      	beq.n	80085be <HAL_RCC_OscConfig+0x416>
 80085dc:	e054      	b.n	8008688 <HAL_RCC_OscConfig+0x4e0>
 80085de:	4b10      	ldr	r3, [pc, #64]	; (8008620 <HAL_RCC_OscConfig+0x478>)
 80085e0:	2200      	movs	r2, #0
 80085e2:	601a      	str	r2, [r3, #0]
 80085e4:	f7fc fa74 	bl	8004ad0 <HAL_GetTick>
 80085e8:	6138      	str	r0, [r7, #16]
 80085ea:	e008      	b.n	80085fe <HAL_RCC_OscConfig+0x456>
 80085ec:	f7fc fa70 	bl	8004ad0 <HAL_GetTick>
 80085f0:	4602      	mov	r2, r0
 80085f2:	693b      	ldr	r3, [r7, #16]
 80085f4:	1ad3      	subs	r3, r2, r3
 80085f6:	2b02      	cmp	r3, #2
 80085f8:	d901      	bls.n	80085fe <HAL_RCC_OscConfig+0x456>
 80085fa:	2303      	movs	r3, #3
 80085fc:	e045      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 80085fe:	4b06      	ldr	r3, [pc, #24]	; (8008618 <HAL_RCC_OscConfig+0x470>)
 8008600:	681b      	ldr	r3, [r3, #0]
 8008602:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008606:	2b00      	cmp	r3, #0
 8008608:	d1f0      	bne.n	80085ec <HAL_RCC_OscConfig+0x444>
 800860a:	e03d      	b.n	8008688 <HAL_RCC_OscConfig+0x4e0>
 800860c:	687b      	ldr	r3, [r7, #4]
 800860e:	699b      	ldr	r3, [r3, #24]
 8008610:	2b01      	cmp	r3, #1
 8008612:	d107      	bne.n	8008624 <HAL_RCC_OscConfig+0x47c>
 8008614:	2301      	movs	r3, #1
 8008616:	e038      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 8008618:	40023800 	.word	0x40023800
 800861c:	40007000 	.word	0x40007000
 8008620:	42470060 	.word	0x42470060
 8008624:	4b1b      	ldr	r3, [pc, #108]	; (8008694 <HAL_RCC_OscConfig+0x4ec>)
 8008626:	685b      	ldr	r3, [r3, #4]
 8008628:	60fb      	str	r3, [r7, #12]
 800862a:	687b      	ldr	r3, [r7, #4]
 800862c:	699b      	ldr	r3, [r3, #24]
 800862e:	2b01      	cmp	r3, #1
 8008630:	d028      	beq.n	8008684 <HAL_RCC_OscConfig+0x4dc>
 8008632:	68fb      	ldr	r3, [r7, #12]
 8008634:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8008638:	687b      	ldr	r3, [r7, #4]
 800863a:	69db      	ldr	r3, [r3, #28]
 800863c:	429a      	cmp	r2, r3
 800863e:	d121      	bne.n	8008684 <HAL_RCC_OscConfig+0x4dc>
 8008640:	68fb      	ldr	r3, [r7, #12]
 8008642:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8008646:	687b      	ldr	r3, [r7, #4]
 8008648:	6a1b      	ldr	r3, [r3, #32]
 800864a:	429a      	cmp	r2, r3
 800864c:	d11a      	bne.n	8008684 <HAL_RCC_OscConfig+0x4dc>
 800864e:	68fa      	ldr	r2, [r7, #12]
 8008650:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8008654:	4013      	ands	r3, r2
 8008656:	687a      	ldr	r2, [r7, #4]
 8008658:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800865a:	0192      	lsls	r2, r2, #6
 800865c:	4293      	cmp	r3, r2
 800865e:	d111      	bne.n	8008684 <HAL_RCC_OscConfig+0x4dc>
 8008660:	68fb      	ldr	r3, [r7, #12]
 8008662:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8008666:	687b      	ldr	r3, [r7, #4]
 8008668:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800866a:	085b      	lsrs	r3, r3, #1
 800866c:	3b01      	subs	r3, #1
 800866e:	041b      	lsls	r3, r3, #16
 8008670:	429a      	cmp	r2, r3
 8008672:	d107      	bne.n	8008684 <HAL_RCC_OscConfig+0x4dc>
 8008674:	68fb      	ldr	r3, [r7, #12]
 8008676:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800867a:	687b      	ldr	r3, [r7, #4]
 800867c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800867e:	061b      	lsls	r3, r3, #24
 8008680:	429a      	cmp	r2, r3
 8008682:	d001      	beq.n	8008688 <HAL_RCC_OscConfig+0x4e0>
 8008684:	2301      	movs	r3, #1
 8008686:	e000      	b.n	800868a <HAL_RCC_OscConfig+0x4e2>
 8008688:	2300      	movs	r3, #0
 800868a:	4618      	mov	r0, r3
 800868c:	3718      	adds	r7, #24
 800868e:	46bd      	mov	sp, r7
 8008690:	bd80      	pop	{r7, pc}
 8008692:	bf00      	nop
 8008694:	40023800 	.word	0x40023800

08008698 <HAL_RCC_ClockConfig>:
 8008698:	b580      	push	{r7, lr}
 800869a:	b084      	sub	sp, #16
 800869c:	af00      	add	r7, sp, #0
 800869e:	6078      	str	r0, [r7, #4]
 80086a0:	6039      	str	r1, [r7, #0]
 80086a2:	687b      	ldr	r3, [r7, #4]
 80086a4:	2b00      	cmp	r3, #0
 80086a6:	d101      	bne.n	80086ac <HAL_RCC_ClockConfig+0x14>
 80086a8:	2301      	movs	r3, #1
 80086aa:	e0cc      	b.n	8008846 <HAL_RCC_ClockConfig+0x1ae>
 80086ac:	4b68      	ldr	r3, [pc, #416]	; (8008850 <HAL_RCC_ClockConfig+0x1b8>)
 80086ae:	681b      	ldr	r3, [r3, #0]
 80086b0:	f003 0307 	and.w	r3, r3, #7
 80086b4:	683a      	ldr	r2, [r7, #0]
 80086b6:	429a      	cmp	r2, r3
 80086b8:	d90c      	bls.n	80086d4 <HAL_RCC_ClockConfig+0x3c>
 80086ba:	4b65      	ldr	r3, [pc, #404]	; (8008850 <HAL_RCC_ClockConfig+0x1b8>)
 80086bc:	683a      	ldr	r2, [r7, #0]
 80086be:	b2d2      	uxtb	r2, r2
 80086c0:	701a      	strb	r2, [r3, #0]
 80086c2:	4b63      	ldr	r3, [pc, #396]	; (8008850 <HAL_RCC_ClockConfig+0x1b8>)
 80086c4:	681b      	ldr	r3, [r3, #0]
 80086c6:	f003 0307 	and.w	r3, r3, #7
 80086ca:	683a      	ldr	r2, [r7, #0]
 80086cc:	429a      	cmp	r2, r3
 80086ce:	d001      	beq.n	80086d4 <HAL_RCC_ClockConfig+0x3c>
 80086d0:	2301      	movs	r3, #1
 80086d2:	e0b8      	b.n	8008846 <HAL_RCC_ClockConfig+0x1ae>
 80086d4:	687b      	ldr	r3, [r7, #4]
 80086d6:	681b      	ldr	r3, [r3, #0]
 80086d8:	f003 0302 	and.w	r3, r3, #2
 80086dc:	2b00      	cmp	r3, #0
 80086de:	d020      	beq.n	8008722 <HAL_RCC_ClockConfig+0x8a>
 80086e0:	687b      	ldr	r3, [r7, #4]
 80086e2:	681b      	ldr	r3, [r3, #0]
 80086e4:	f003 0304 	and.w	r3, r3, #4
 80086e8:	2b00      	cmp	r3, #0
 80086ea:	d005      	beq.n	80086f8 <HAL_RCC_ClockConfig+0x60>
 80086ec:	4b59      	ldr	r3, [pc, #356]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 80086ee:	689b      	ldr	r3, [r3, #8]
 80086f0:	4a58      	ldr	r2, [pc, #352]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 80086f2:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80086f6:	6093      	str	r3, [r2, #8]
 80086f8:	687b      	ldr	r3, [r7, #4]
 80086fa:	681b      	ldr	r3, [r3, #0]
 80086fc:	f003 0308 	and.w	r3, r3, #8
 8008700:	2b00      	cmp	r3, #0
 8008702:	d005      	beq.n	8008710 <HAL_RCC_ClockConfig+0x78>
 8008704:	4b53      	ldr	r3, [pc, #332]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 8008706:	689b      	ldr	r3, [r3, #8]
 8008708:	4a52      	ldr	r2, [pc, #328]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 800870a:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800870e:	6093      	str	r3, [r2, #8]
 8008710:	4b50      	ldr	r3, [pc, #320]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 8008712:	689b      	ldr	r3, [r3, #8]
 8008714:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8008718:	687b      	ldr	r3, [r7, #4]
 800871a:	689b      	ldr	r3, [r3, #8]
 800871c:	494d      	ldr	r1, [pc, #308]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 800871e:	4313      	orrs	r3, r2
 8008720:	608b      	str	r3, [r1, #8]
 8008722:	687b      	ldr	r3, [r7, #4]
 8008724:	681b      	ldr	r3, [r3, #0]
 8008726:	f003 0301 	and.w	r3, r3, #1
 800872a:	2b00      	cmp	r3, #0
 800872c:	d044      	beq.n	80087b8 <HAL_RCC_ClockConfig+0x120>
 800872e:	687b      	ldr	r3, [r7, #4]
 8008730:	685b      	ldr	r3, [r3, #4]
 8008732:	2b01      	cmp	r3, #1
 8008734:	d107      	bne.n	8008746 <HAL_RCC_ClockConfig+0xae>
 8008736:	4b47      	ldr	r3, [pc, #284]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 8008738:	681b      	ldr	r3, [r3, #0]
 800873a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800873e:	2b00      	cmp	r3, #0
 8008740:	d119      	bne.n	8008776 <HAL_RCC_ClockConfig+0xde>
 8008742:	2301      	movs	r3, #1
 8008744:	e07f      	b.n	8008846 <HAL_RCC_ClockConfig+0x1ae>
 8008746:	687b      	ldr	r3, [r7, #4]
 8008748:	685b      	ldr	r3, [r3, #4]
 800874a:	2b02      	cmp	r3, #2
 800874c:	d003      	beq.n	8008756 <HAL_RCC_ClockConfig+0xbe>
 800874e:	687b      	ldr	r3, [r7, #4]
 8008750:	685b      	ldr	r3, [r3, #4]
 8008752:	2b03      	cmp	r3, #3
 8008754:	d107      	bne.n	8008766 <HAL_RCC_ClockConfig+0xce>
 8008756:	4b3f      	ldr	r3, [pc, #252]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 8008758:	681b      	ldr	r3, [r3, #0]
 800875a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800875e:	2b00      	cmp	r3, #0
 8008760:	d109      	bne.n	8008776 <HAL_RCC_ClockConfig+0xde>
 8008762:	2301      	movs	r3, #1
 8008764:	e06f      	b.n	8008846 <HAL_RCC_ClockConfig+0x1ae>
 8008766:	4b3b      	ldr	r3, [pc, #236]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 8008768:	681b      	ldr	r3, [r3, #0]
 800876a:	f003 0302 	and.w	r3, r3, #2
 800876e:	2b00      	cmp	r3, #0
 8008770:	d101      	bne.n	8008776 <HAL_RCC_ClockConfig+0xde>
 8008772:	2301      	movs	r3, #1
 8008774:	e067      	b.n	8008846 <HAL_RCC_ClockConfig+0x1ae>
 8008776:	4b37      	ldr	r3, [pc, #220]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 8008778:	689b      	ldr	r3, [r3, #8]
 800877a:	f023 0203 	bic.w	r2, r3, #3
 800877e:	687b      	ldr	r3, [r7, #4]
 8008780:	685b      	ldr	r3, [r3, #4]
 8008782:	4934      	ldr	r1, [pc, #208]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 8008784:	4313      	orrs	r3, r2
 8008786:	608b      	str	r3, [r1, #8]
 8008788:	f7fc f9a2 	bl	8004ad0 <HAL_GetTick>
 800878c:	60f8      	str	r0, [r7, #12]
 800878e:	e00a      	b.n	80087a6 <HAL_RCC_ClockConfig+0x10e>
 8008790:	f7fc f99e 	bl	8004ad0 <HAL_GetTick>
 8008794:	4602      	mov	r2, r0
 8008796:	68fb      	ldr	r3, [r7, #12]
 8008798:	1ad3      	subs	r3, r2, r3
 800879a:	f241 3288 	movw	r2, #5000	; 0x1388
 800879e:	4293      	cmp	r3, r2
 80087a0:	d901      	bls.n	80087a6 <HAL_RCC_ClockConfig+0x10e>
 80087a2:	2303      	movs	r3, #3
 80087a4:	e04f      	b.n	8008846 <HAL_RCC_ClockConfig+0x1ae>
 80087a6:	4b2b      	ldr	r3, [pc, #172]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 80087a8:	689b      	ldr	r3, [r3, #8]
 80087aa:	f003 020c 	and.w	r2, r3, #12
 80087ae:	687b      	ldr	r3, [r7, #4]
 80087b0:	685b      	ldr	r3, [r3, #4]
 80087b2:	009b      	lsls	r3, r3, #2
 80087b4:	429a      	cmp	r2, r3
 80087b6:	d1eb      	bne.n	8008790 <HAL_RCC_ClockConfig+0xf8>
 80087b8:	4b25      	ldr	r3, [pc, #148]	; (8008850 <HAL_RCC_ClockConfig+0x1b8>)
 80087ba:	681b      	ldr	r3, [r3, #0]
 80087bc:	f003 0307 	and.w	r3, r3, #7
 80087c0:	683a      	ldr	r2, [r7, #0]
 80087c2:	429a      	cmp	r2, r3
 80087c4:	d20c      	bcs.n	80087e0 <HAL_RCC_ClockConfig+0x148>
 80087c6:	4b22      	ldr	r3, [pc, #136]	; (8008850 <HAL_RCC_ClockConfig+0x1b8>)
 80087c8:	683a      	ldr	r2, [r7, #0]
 80087ca:	b2d2      	uxtb	r2, r2
 80087cc:	701a      	strb	r2, [r3, #0]
 80087ce:	4b20      	ldr	r3, [pc, #128]	; (8008850 <HAL_RCC_ClockConfig+0x1b8>)
 80087d0:	681b      	ldr	r3, [r3, #0]
 80087d2:	f003 0307 	and.w	r3, r3, #7
 80087d6:	683a      	ldr	r2, [r7, #0]
 80087d8:	429a      	cmp	r2, r3
 80087da:	d001      	beq.n	80087e0 <HAL_RCC_ClockConfig+0x148>
 80087dc:	2301      	movs	r3, #1
 80087de:	e032      	b.n	8008846 <HAL_RCC_ClockConfig+0x1ae>
 80087e0:	687b      	ldr	r3, [r7, #4]
 80087e2:	681b      	ldr	r3, [r3, #0]
 80087e4:	f003 0304 	and.w	r3, r3, #4
 80087e8:	2b00      	cmp	r3, #0
 80087ea:	d008      	beq.n	80087fe <HAL_RCC_ClockConfig+0x166>
 80087ec:	4b19      	ldr	r3, [pc, #100]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 80087ee:	689b      	ldr	r3, [r3, #8]
 80087f0:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80087f4:	687b      	ldr	r3, [r7, #4]
 80087f6:	68db      	ldr	r3, [r3, #12]
 80087f8:	4916      	ldr	r1, [pc, #88]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 80087fa:	4313      	orrs	r3, r2
 80087fc:	608b      	str	r3, [r1, #8]
 80087fe:	687b      	ldr	r3, [r7, #4]
 8008800:	681b      	ldr	r3, [r3, #0]
 8008802:	f003 0308 	and.w	r3, r3, #8
 8008806:	2b00      	cmp	r3, #0
 8008808:	d009      	beq.n	800881e <HAL_RCC_ClockConfig+0x186>
 800880a:	4b12      	ldr	r3, [pc, #72]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 800880c:	689b      	ldr	r3, [r3, #8]
 800880e:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8008812:	687b      	ldr	r3, [r7, #4]
 8008814:	691b      	ldr	r3, [r3, #16]
 8008816:	00db      	lsls	r3, r3, #3
 8008818:	490e      	ldr	r1, [pc, #56]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 800881a:	4313      	orrs	r3, r2
 800881c:	608b      	str	r3, [r1, #8]
 800881e:	f000 f821 	bl	8008864 <HAL_RCC_GetSysClockFreq>
 8008822:	4602      	mov	r2, r0
 8008824:	4b0b      	ldr	r3, [pc, #44]	; (8008854 <HAL_RCC_ClockConfig+0x1bc>)
 8008826:	689b      	ldr	r3, [r3, #8]
 8008828:	091b      	lsrs	r3, r3, #4
 800882a:	f003 030f 	and.w	r3, r3, #15
 800882e:	490a      	ldr	r1, [pc, #40]	; (8008858 <HAL_RCC_ClockConfig+0x1c0>)
 8008830:	5ccb      	ldrb	r3, [r1, r3]
 8008832:	fa22 f303 	lsr.w	r3, r2, r3
 8008836:	4a09      	ldr	r2, [pc, #36]	; (800885c <HAL_RCC_ClockConfig+0x1c4>)
 8008838:	6013      	str	r3, [r2, #0]
 800883a:	4b09      	ldr	r3, [pc, #36]	; (8008860 <HAL_RCC_ClockConfig+0x1c8>)
 800883c:	681b      	ldr	r3, [r3, #0]
 800883e:	4618      	mov	r0, r3
 8008840:	f7fc f902 	bl	8004a48 <HAL_InitTick>
 8008844:	2300      	movs	r3, #0
 8008846:	4618      	mov	r0, r3
 8008848:	3710      	adds	r7, #16
 800884a:	46bd      	mov	sp, r7
 800884c:	bd80      	pop	{r7, pc}
 800884e:	bf00      	nop
 8008850:	40023c00 	.word	0x40023c00
 8008854:	40023800 	.word	0x40023800
 8008858:	0800bc38 	.word	0x0800bc38
 800885c:	20000134 	.word	0x20000134
 8008860:	20000138 	.word	0x20000138

08008864 <HAL_RCC_GetSysClockFreq>:
 8008864:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8008868:	b094      	sub	sp, #80	; 0x50
 800886a:	af00      	add	r7, sp, #0
 800886c:	2300      	movs	r3, #0
 800886e:	647b      	str	r3, [r7, #68]	; 0x44
 8008870:	2300      	movs	r3, #0
 8008872:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008874:	2300      	movs	r3, #0
 8008876:	643b      	str	r3, [r7, #64]	; 0x40
 8008878:	2300      	movs	r3, #0
 800887a:	64bb      	str	r3, [r7, #72]	; 0x48
 800887c:	4b79      	ldr	r3, [pc, #484]	; (8008a64 <HAL_RCC_GetSysClockFreq+0x200>)
 800887e:	689b      	ldr	r3, [r3, #8]
 8008880:	f003 030c 	and.w	r3, r3, #12
 8008884:	2b08      	cmp	r3, #8
 8008886:	d00d      	beq.n	80088a4 <HAL_RCC_GetSysClockFreq+0x40>
 8008888:	2b08      	cmp	r3, #8
 800888a:	f200 80e1 	bhi.w	8008a50 <HAL_RCC_GetSysClockFreq+0x1ec>
 800888e:	2b00      	cmp	r3, #0
 8008890:	d002      	beq.n	8008898 <HAL_RCC_GetSysClockFreq+0x34>
 8008892:	2b04      	cmp	r3, #4
 8008894:	d003      	beq.n	800889e <HAL_RCC_GetSysClockFreq+0x3a>
 8008896:	e0db      	b.n	8008a50 <HAL_RCC_GetSysClockFreq+0x1ec>
 8008898:	4b73      	ldr	r3, [pc, #460]	; (8008a68 <HAL_RCC_GetSysClockFreq+0x204>)
 800889a:	64bb      	str	r3, [r7, #72]	; 0x48
 800889c:	e0db      	b.n	8008a56 <HAL_RCC_GetSysClockFreq+0x1f2>
 800889e:	4b73      	ldr	r3, [pc, #460]	; (8008a6c <HAL_RCC_GetSysClockFreq+0x208>)
 80088a0:	64bb      	str	r3, [r7, #72]	; 0x48
 80088a2:	e0d8      	b.n	8008a56 <HAL_RCC_GetSysClockFreq+0x1f2>
 80088a4:	4b6f      	ldr	r3, [pc, #444]	; (8008a64 <HAL_RCC_GetSysClockFreq+0x200>)
 80088a6:	685b      	ldr	r3, [r3, #4]
 80088a8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80088ac:	647b      	str	r3, [r7, #68]	; 0x44
 80088ae:	4b6d      	ldr	r3, [pc, #436]	; (8008a64 <HAL_RCC_GetSysClockFreq+0x200>)
 80088b0:	685b      	ldr	r3, [r3, #4]
 80088b2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80088b6:	2b00      	cmp	r3, #0
 80088b8:	d063      	beq.n	8008982 <HAL_RCC_GetSysClockFreq+0x11e>
 80088ba:	4b6a      	ldr	r3, [pc, #424]	; (8008a64 <HAL_RCC_GetSysClockFreq+0x200>)
 80088bc:	685b      	ldr	r3, [r3, #4]
 80088be:	099b      	lsrs	r3, r3, #6
 80088c0:	2200      	movs	r2, #0
 80088c2:	63bb      	str	r3, [r7, #56]	; 0x38
 80088c4:	63fa      	str	r2, [r7, #60]	; 0x3c
 80088c6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80088c8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80088cc:	633b      	str	r3, [r7, #48]	; 0x30
 80088ce:	2300      	movs	r3, #0
 80088d0:	637b      	str	r3, [r7, #52]	; 0x34
 80088d2:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 80088d6:	4622      	mov	r2, r4
 80088d8:	462b      	mov	r3, r5
 80088da:	f04f 0000 	mov.w	r0, #0
 80088de:	f04f 0100 	mov.w	r1, #0
 80088e2:	0159      	lsls	r1, r3, #5
 80088e4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80088e8:	0150      	lsls	r0, r2, #5
 80088ea:	4602      	mov	r2, r0
 80088ec:	460b      	mov	r3, r1
 80088ee:	4621      	mov	r1, r4
 80088f0:	1a51      	subs	r1, r2, r1
 80088f2:	6139      	str	r1, [r7, #16]
 80088f4:	4629      	mov	r1, r5
 80088f6:	eb63 0301 	sbc.w	r3, r3, r1
 80088fa:	617b      	str	r3, [r7, #20]
 80088fc:	f04f 0200 	mov.w	r2, #0
 8008900:	f04f 0300 	mov.w	r3, #0
 8008904:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8008908:	4659      	mov	r1, fp
 800890a:	018b      	lsls	r3, r1, #6
 800890c:	4651      	mov	r1, sl
 800890e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8008912:	4651      	mov	r1, sl
 8008914:	018a      	lsls	r2, r1, #6
 8008916:	4651      	mov	r1, sl
 8008918:	ebb2 0801 	subs.w	r8, r2, r1
 800891c:	4659      	mov	r1, fp
 800891e:	eb63 0901 	sbc.w	r9, r3, r1
 8008922:	f04f 0200 	mov.w	r2, #0
 8008926:	f04f 0300 	mov.w	r3, #0
 800892a:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800892e:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8008932:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8008936:	4690      	mov	r8, r2
 8008938:	4699      	mov	r9, r3
 800893a:	4623      	mov	r3, r4
 800893c:	eb18 0303 	adds.w	r3, r8, r3
 8008940:	60bb      	str	r3, [r7, #8]
 8008942:	462b      	mov	r3, r5
 8008944:	eb49 0303 	adc.w	r3, r9, r3
 8008948:	60fb      	str	r3, [r7, #12]
 800894a:	f04f 0200 	mov.w	r2, #0
 800894e:	f04f 0300 	mov.w	r3, #0
 8008952:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8008956:	4629      	mov	r1, r5
 8008958:	024b      	lsls	r3, r1, #9
 800895a:	4621      	mov	r1, r4
 800895c:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8008960:	4621      	mov	r1, r4
 8008962:	024a      	lsls	r2, r1, #9
 8008964:	4610      	mov	r0, r2
 8008966:	4619      	mov	r1, r3
 8008968:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800896a:	2200      	movs	r2, #0
 800896c:	62bb      	str	r3, [r7, #40]	; 0x28
 800896e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8008970:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8008974:	f7f8 f90c 	bl	8000b90 <__aeabi_uldivmod>
 8008978:	4602      	mov	r2, r0
 800897a:	460b      	mov	r3, r1
 800897c:	4613      	mov	r3, r2
 800897e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008980:	e058      	b.n	8008a34 <HAL_RCC_GetSysClockFreq+0x1d0>
 8008982:	4b38      	ldr	r3, [pc, #224]	; (8008a64 <HAL_RCC_GetSysClockFreq+0x200>)
 8008984:	685b      	ldr	r3, [r3, #4]
 8008986:	099b      	lsrs	r3, r3, #6
 8008988:	2200      	movs	r2, #0
 800898a:	4618      	mov	r0, r3
 800898c:	4611      	mov	r1, r2
 800898e:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8008992:	623b      	str	r3, [r7, #32]
 8008994:	2300      	movs	r3, #0
 8008996:	627b      	str	r3, [r7, #36]	; 0x24
 8008998:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 800899c:	4642      	mov	r2, r8
 800899e:	464b      	mov	r3, r9
 80089a0:	f04f 0000 	mov.w	r0, #0
 80089a4:	f04f 0100 	mov.w	r1, #0
 80089a8:	0159      	lsls	r1, r3, #5
 80089aa:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80089ae:	0150      	lsls	r0, r2, #5
 80089b0:	4602      	mov	r2, r0
 80089b2:	460b      	mov	r3, r1
 80089b4:	4641      	mov	r1, r8
 80089b6:	ebb2 0a01 	subs.w	sl, r2, r1
 80089ba:	4649      	mov	r1, r9
 80089bc:	eb63 0b01 	sbc.w	fp, r3, r1
 80089c0:	f04f 0200 	mov.w	r2, #0
 80089c4:	f04f 0300 	mov.w	r3, #0
 80089c8:	ea4f 138b 	mov.w	r3, fp, lsl #6
 80089cc:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 80089d0:	ea4f 128a 	mov.w	r2, sl, lsl #6
 80089d4:	ebb2 040a 	subs.w	r4, r2, sl
 80089d8:	eb63 050b 	sbc.w	r5, r3, fp
 80089dc:	f04f 0200 	mov.w	r2, #0
 80089e0:	f04f 0300 	mov.w	r3, #0
 80089e4:	00eb      	lsls	r3, r5, #3
 80089e6:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80089ea:	00e2      	lsls	r2, r4, #3
 80089ec:	4614      	mov	r4, r2
 80089ee:	461d      	mov	r5, r3
 80089f0:	4643      	mov	r3, r8
 80089f2:	18e3      	adds	r3, r4, r3
 80089f4:	603b      	str	r3, [r7, #0]
 80089f6:	464b      	mov	r3, r9
 80089f8:	eb45 0303 	adc.w	r3, r5, r3
 80089fc:	607b      	str	r3, [r7, #4]
 80089fe:	f04f 0200 	mov.w	r2, #0
 8008a02:	f04f 0300 	mov.w	r3, #0
 8008a06:	e9d7 4500 	ldrd	r4, r5, [r7]
 8008a0a:	4629      	mov	r1, r5
 8008a0c:	028b      	lsls	r3, r1, #10
 8008a0e:	4621      	mov	r1, r4
 8008a10:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8008a14:	4621      	mov	r1, r4
 8008a16:	028a      	lsls	r2, r1, #10
 8008a18:	4610      	mov	r0, r2
 8008a1a:	4619      	mov	r1, r3
 8008a1c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8008a1e:	2200      	movs	r2, #0
 8008a20:	61bb      	str	r3, [r7, #24]
 8008a22:	61fa      	str	r2, [r7, #28]
 8008a24:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8008a28:	f7f8 f8b2 	bl	8000b90 <__aeabi_uldivmod>
 8008a2c:	4602      	mov	r2, r0
 8008a2e:	460b      	mov	r3, r1
 8008a30:	4613      	mov	r3, r2
 8008a32:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008a34:	4b0b      	ldr	r3, [pc, #44]	; (8008a64 <HAL_RCC_GetSysClockFreq+0x200>)
 8008a36:	685b      	ldr	r3, [r3, #4]
 8008a38:	0c1b      	lsrs	r3, r3, #16
 8008a3a:	f003 0303 	and.w	r3, r3, #3
 8008a3e:	3301      	adds	r3, #1
 8008a40:	005b      	lsls	r3, r3, #1
 8008a42:	643b      	str	r3, [r7, #64]	; 0x40
 8008a44:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8008a46:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8008a48:	fbb2 f3f3 	udiv	r3, r2, r3
 8008a4c:	64bb      	str	r3, [r7, #72]	; 0x48
 8008a4e:	e002      	b.n	8008a56 <HAL_RCC_GetSysClockFreq+0x1f2>
 8008a50:	4b05      	ldr	r3, [pc, #20]	; (8008a68 <HAL_RCC_GetSysClockFreq+0x204>)
 8008a52:	64bb      	str	r3, [r7, #72]	; 0x48
 8008a54:	bf00      	nop
 8008a56:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8008a58:	4618      	mov	r0, r3
 8008a5a:	3750      	adds	r7, #80	; 0x50
 8008a5c:	46bd      	mov	sp, r7
 8008a5e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8008a62:	bf00      	nop
 8008a64:	40023800 	.word	0x40023800
 8008a68:	00f42400 	.word	0x00f42400
 8008a6c:	007a1200 	.word	0x007a1200

08008a70 <HAL_RCC_GetHCLKFreq>:
 8008a70:	b480      	push	{r7}
 8008a72:	af00      	add	r7, sp, #0
 8008a74:	4b03      	ldr	r3, [pc, #12]	; (8008a84 <HAL_RCC_GetHCLKFreq+0x14>)
 8008a76:	681b      	ldr	r3, [r3, #0]
 8008a78:	4618      	mov	r0, r3
 8008a7a:	46bd      	mov	sp, r7
 8008a7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a80:	4770      	bx	lr
 8008a82:	bf00      	nop
 8008a84:	20000134 	.word	0x20000134

08008a88 <HAL_RCC_GetPCLK1Freq>:
 8008a88:	b580      	push	{r7, lr}
 8008a8a:	af00      	add	r7, sp, #0
 8008a8c:	f7ff fff0 	bl	8008a70 <HAL_RCC_GetHCLKFreq>
 8008a90:	4602      	mov	r2, r0
 8008a92:	4b05      	ldr	r3, [pc, #20]	; (8008aa8 <HAL_RCC_GetPCLK1Freq+0x20>)
 8008a94:	689b      	ldr	r3, [r3, #8]
 8008a96:	0a9b      	lsrs	r3, r3, #10
 8008a98:	f003 0307 	and.w	r3, r3, #7
 8008a9c:	4903      	ldr	r1, [pc, #12]	; (8008aac <HAL_RCC_GetPCLK1Freq+0x24>)
 8008a9e:	5ccb      	ldrb	r3, [r1, r3]
 8008aa0:	fa22 f303 	lsr.w	r3, r2, r3
 8008aa4:	4618      	mov	r0, r3
 8008aa6:	bd80      	pop	{r7, pc}
 8008aa8:	40023800 	.word	0x40023800
 8008aac:	0800bc48 	.word	0x0800bc48

08008ab0 <HAL_RCC_GetPCLK2Freq>:
 8008ab0:	b580      	push	{r7, lr}
 8008ab2:	af00      	add	r7, sp, #0
 8008ab4:	f7ff ffdc 	bl	8008a70 <HAL_RCC_GetHCLKFreq>
 8008ab8:	4602      	mov	r2, r0
 8008aba:	4b05      	ldr	r3, [pc, #20]	; (8008ad0 <HAL_RCC_GetPCLK2Freq+0x20>)
 8008abc:	689b      	ldr	r3, [r3, #8]
 8008abe:	0b5b      	lsrs	r3, r3, #13
 8008ac0:	f003 0307 	and.w	r3, r3, #7
 8008ac4:	4903      	ldr	r1, [pc, #12]	; (8008ad4 <HAL_RCC_GetPCLK2Freq+0x24>)
 8008ac6:	5ccb      	ldrb	r3, [r1, r3]
 8008ac8:	fa22 f303 	lsr.w	r3, r2, r3
 8008acc:	4618      	mov	r0, r3
 8008ace:	bd80      	pop	{r7, pc}
 8008ad0:	40023800 	.word	0x40023800
 8008ad4:	0800bc48 	.word	0x0800bc48

08008ad8 <HAL_SPI_Init>:
 8008ad8:	b580      	push	{r7, lr}
 8008ada:	b082      	sub	sp, #8
 8008adc:	af00      	add	r7, sp, #0
 8008ade:	6078      	str	r0, [r7, #4]
 8008ae0:	687b      	ldr	r3, [r7, #4]
 8008ae2:	2b00      	cmp	r3, #0
 8008ae4:	d101      	bne.n	8008aea <HAL_SPI_Init+0x12>
 8008ae6:	2301      	movs	r3, #1
 8008ae8:	e07b      	b.n	8008be2 <HAL_SPI_Init+0x10a>
 8008aea:	687b      	ldr	r3, [r7, #4]
 8008aec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008aee:	2b00      	cmp	r3, #0
 8008af0:	d108      	bne.n	8008b04 <HAL_SPI_Init+0x2c>
 8008af2:	687b      	ldr	r3, [r7, #4]
 8008af4:	685b      	ldr	r3, [r3, #4]
 8008af6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8008afa:	d009      	beq.n	8008b10 <HAL_SPI_Init+0x38>
 8008afc:	687b      	ldr	r3, [r7, #4]
 8008afe:	2200      	movs	r2, #0
 8008b00:	61da      	str	r2, [r3, #28]
 8008b02:	e005      	b.n	8008b10 <HAL_SPI_Init+0x38>
 8008b04:	687b      	ldr	r3, [r7, #4]
 8008b06:	2200      	movs	r2, #0
 8008b08:	611a      	str	r2, [r3, #16]
 8008b0a:	687b      	ldr	r3, [r7, #4]
 8008b0c:	2200      	movs	r2, #0
 8008b0e:	615a      	str	r2, [r3, #20]
 8008b10:	687b      	ldr	r3, [r7, #4]
 8008b12:	2200      	movs	r2, #0
 8008b14:	629a      	str	r2, [r3, #40]	; 0x28
 8008b16:	687b      	ldr	r3, [r7, #4]
 8008b18:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008b1c:	b2db      	uxtb	r3, r3
 8008b1e:	2b00      	cmp	r3, #0
 8008b20:	d106      	bne.n	8008b30 <HAL_SPI_Init+0x58>
 8008b22:	687b      	ldr	r3, [r7, #4]
 8008b24:	2200      	movs	r2, #0
 8008b26:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8008b2a:	6878      	ldr	r0, [r7, #4]
 8008b2c:	f7fb fcaa 	bl	8004484 <HAL_SPI_MspInit>
 8008b30:	687b      	ldr	r3, [r7, #4]
 8008b32:	2202      	movs	r2, #2
 8008b34:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008b38:	687b      	ldr	r3, [r7, #4]
 8008b3a:	681b      	ldr	r3, [r3, #0]
 8008b3c:	681a      	ldr	r2, [r3, #0]
 8008b3e:	687b      	ldr	r3, [r7, #4]
 8008b40:	681b      	ldr	r3, [r3, #0]
 8008b42:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008b46:	601a      	str	r2, [r3, #0]
 8008b48:	687b      	ldr	r3, [r7, #4]
 8008b4a:	685b      	ldr	r3, [r3, #4]
 8008b4c:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8008b50:	687b      	ldr	r3, [r7, #4]
 8008b52:	689b      	ldr	r3, [r3, #8]
 8008b54:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8008b58:	431a      	orrs	r2, r3
 8008b5a:	687b      	ldr	r3, [r7, #4]
 8008b5c:	68db      	ldr	r3, [r3, #12]
 8008b5e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8008b62:	431a      	orrs	r2, r3
 8008b64:	687b      	ldr	r3, [r7, #4]
 8008b66:	691b      	ldr	r3, [r3, #16]
 8008b68:	f003 0302 	and.w	r3, r3, #2
 8008b6c:	431a      	orrs	r2, r3
 8008b6e:	687b      	ldr	r3, [r7, #4]
 8008b70:	695b      	ldr	r3, [r3, #20]
 8008b72:	f003 0301 	and.w	r3, r3, #1
 8008b76:	431a      	orrs	r2, r3
 8008b78:	687b      	ldr	r3, [r7, #4]
 8008b7a:	699b      	ldr	r3, [r3, #24]
 8008b7c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8008b80:	431a      	orrs	r2, r3
 8008b82:	687b      	ldr	r3, [r7, #4]
 8008b84:	69db      	ldr	r3, [r3, #28]
 8008b86:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8008b8a:	431a      	orrs	r2, r3
 8008b8c:	687b      	ldr	r3, [r7, #4]
 8008b8e:	6a1b      	ldr	r3, [r3, #32]
 8008b90:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008b94:	ea42 0103 	orr.w	r1, r2, r3
 8008b98:	687b      	ldr	r3, [r7, #4]
 8008b9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008b9c:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8008ba0:	687b      	ldr	r3, [r7, #4]
 8008ba2:	681b      	ldr	r3, [r3, #0]
 8008ba4:	430a      	orrs	r2, r1
 8008ba6:	601a      	str	r2, [r3, #0]
 8008ba8:	687b      	ldr	r3, [r7, #4]
 8008baa:	699b      	ldr	r3, [r3, #24]
 8008bac:	0c1b      	lsrs	r3, r3, #16
 8008bae:	f003 0104 	and.w	r1, r3, #4
 8008bb2:	687b      	ldr	r3, [r7, #4]
 8008bb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008bb6:	f003 0210 	and.w	r2, r3, #16
 8008bba:	687b      	ldr	r3, [r7, #4]
 8008bbc:	681b      	ldr	r3, [r3, #0]
 8008bbe:	430a      	orrs	r2, r1
 8008bc0:	605a      	str	r2, [r3, #4]
 8008bc2:	687b      	ldr	r3, [r7, #4]
 8008bc4:	681b      	ldr	r3, [r3, #0]
 8008bc6:	69da      	ldr	r2, [r3, #28]
 8008bc8:	687b      	ldr	r3, [r7, #4]
 8008bca:	681b      	ldr	r3, [r3, #0]
 8008bcc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8008bd0:	61da      	str	r2, [r3, #28]
 8008bd2:	687b      	ldr	r3, [r7, #4]
 8008bd4:	2200      	movs	r2, #0
 8008bd6:	655a      	str	r2, [r3, #84]	; 0x54
 8008bd8:	687b      	ldr	r3, [r7, #4]
 8008bda:	2201      	movs	r2, #1
 8008bdc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008be0:	2300      	movs	r3, #0
 8008be2:	4618      	mov	r0, r3
 8008be4:	3708      	adds	r7, #8
 8008be6:	46bd      	mov	sp, r7
 8008be8:	bd80      	pop	{r7, pc}
	...

08008bec <HAL_SPI_TransmitReceive_DMA>:
 8008bec:	b580      	push	{r7, lr}
 8008bee:	b086      	sub	sp, #24
 8008bf0:	af00      	add	r7, sp, #0
 8008bf2:	60f8      	str	r0, [r7, #12]
 8008bf4:	60b9      	str	r1, [r7, #8]
 8008bf6:	607a      	str	r2, [r7, #4]
 8008bf8:	807b      	strh	r3, [r7, #2]
 8008bfa:	2300      	movs	r3, #0
 8008bfc:	75fb      	strb	r3, [r7, #23]
 8008bfe:	68fb      	ldr	r3, [r7, #12]
 8008c00:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8008c04:	2b01      	cmp	r3, #1
 8008c06:	d101      	bne.n	8008c0c <HAL_SPI_TransmitReceive_DMA+0x20>
 8008c08:	2302      	movs	r3, #2
 8008c0a:	e0e3      	b.n	8008dd4 <HAL_SPI_TransmitReceive_DMA+0x1e8>
 8008c0c:	68fb      	ldr	r3, [r7, #12]
 8008c0e:	2201      	movs	r2, #1
 8008c10:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8008c14:	68fb      	ldr	r3, [r7, #12]
 8008c16:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008c1a:	75bb      	strb	r3, [r7, #22]
 8008c1c:	68fb      	ldr	r3, [r7, #12]
 8008c1e:	685b      	ldr	r3, [r3, #4]
 8008c20:	613b      	str	r3, [r7, #16]
 8008c22:	7dbb      	ldrb	r3, [r7, #22]
 8008c24:	2b01      	cmp	r3, #1
 8008c26:	d00d      	beq.n	8008c44 <HAL_SPI_TransmitReceive_DMA+0x58>
 8008c28:	693b      	ldr	r3, [r7, #16]
 8008c2a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8008c2e:	d106      	bne.n	8008c3e <HAL_SPI_TransmitReceive_DMA+0x52>
 8008c30:	68fb      	ldr	r3, [r7, #12]
 8008c32:	689b      	ldr	r3, [r3, #8]
 8008c34:	2b00      	cmp	r3, #0
 8008c36:	d102      	bne.n	8008c3e <HAL_SPI_TransmitReceive_DMA+0x52>
 8008c38:	7dbb      	ldrb	r3, [r7, #22]
 8008c3a:	2b04      	cmp	r3, #4
 8008c3c:	d002      	beq.n	8008c44 <HAL_SPI_TransmitReceive_DMA+0x58>
 8008c3e:	2302      	movs	r3, #2
 8008c40:	75fb      	strb	r3, [r7, #23]
 8008c42:	e0c2      	b.n	8008dca <HAL_SPI_TransmitReceive_DMA+0x1de>
 8008c44:	68bb      	ldr	r3, [r7, #8]
 8008c46:	2b00      	cmp	r3, #0
 8008c48:	d005      	beq.n	8008c56 <HAL_SPI_TransmitReceive_DMA+0x6a>
 8008c4a:	687b      	ldr	r3, [r7, #4]
 8008c4c:	2b00      	cmp	r3, #0
 8008c4e:	d002      	beq.n	8008c56 <HAL_SPI_TransmitReceive_DMA+0x6a>
 8008c50:	887b      	ldrh	r3, [r7, #2]
 8008c52:	2b00      	cmp	r3, #0
 8008c54:	d102      	bne.n	8008c5c <HAL_SPI_TransmitReceive_DMA+0x70>
 8008c56:	2301      	movs	r3, #1
 8008c58:	75fb      	strb	r3, [r7, #23]
 8008c5a:	e0b6      	b.n	8008dca <HAL_SPI_TransmitReceive_DMA+0x1de>
 8008c5c:	68fb      	ldr	r3, [r7, #12]
 8008c5e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008c62:	b2db      	uxtb	r3, r3
 8008c64:	2b04      	cmp	r3, #4
 8008c66:	d003      	beq.n	8008c70 <HAL_SPI_TransmitReceive_DMA+0x84>
 8008c68:	68fb      	ldr	r3, [r7, #12]
 8008c6a:	2205      	movs	r2, #5
 8008c6c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008c70:	68fb      	ldr	r3, [r7, #12]
 8008c72:	2200      	movs	r2, #0
 8008c74:	655a      	str	r2, [r3, #84]	; 0x54
 8008c76:	68fb      	ldr	r3, [r7, #12]
 8008c78:	68ba      	ldr	r2, [r7, #8]
 8008c7a:	631a      	str	r2, [r3, #48]	; 0x30
 8008c7c:	68fb      	ldr	r3, [r7, #12]
 8008c7e:	887a      	ldrh	r2, [r7, #2]
 8008c80:	869a      	strh	r2, [r3, #52]	; 0x34
 8008c82:	68fb      	ldr	r3, [r7, #12]
 8008c84:	887a      	ldrh	r2, [r7, #2]
 8008c86:	86da      	strh	r2, [r3, #54]	; 0x36
 8008c88:	68fb      	ldr	r3, [r7, #12]
 8008c8a:	687a      	ldr	r2, [r7, #4]
 8008c8c:	639a      	str	r2, [r3, #56]	; 0x38
 8008c8e:	68fb      	ldr	r3, [r7, #12]
 8008c90:	887a      	ldrh	r2, [r7, #2]
 8008c92:	879a      	strh	r2, [r3, #60]	; 0x3c
 8008c94:	68fb      	ldr	r3, [r7, #12]
 8008c96:	887a      	ldrh	r2, [r7, #2]
 8008c98:	87da      	strh	r2, [r3, #62]	; 0x3e
 8008c9a:	68fb      	ldr	r3, [r7, #12]
 8008c9c:	2200      	movs	r2, #0
 8008c9e:	641a      	str	r2, [r3, #64]	; 0x40
 8008ca0:	68fb      	ldr	r3, [r7, #12]
 8008ca2:	2200      	movs	r2, #0
 8008ca4:	645a      	str	r2, [r3, #68]	; 0x44
 8008ca6:	68fb      	ldr	r3, [r7, #12]
 8008ca8:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008cac:	b2db      	uxtb	r3, r3
 8008cae:	2b04      	cmp	r3, #4
 8008cb0:	d108      	bne.n	8008cc4 <HAL_SPI_TransmitReceive_DMA+0xd8>
 8008cb2:	68fb      	ldr	r3, [r7, #12]
 8008cb4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008cb6:	4a49      	ldr	r2, [pc, #292]	; (8008ddc <HAL_SPI_TransmitReceive_DMA+0x1f0>)
 8008cb8:	641a      	str	r2, [r3, #64]	; 0x40
 8008cba:	68fb      	ldr	r3, [r7, #12]
 8008cbc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008cbe:	4a48      	ldr	r2, [pc, #288]	; (8008de0 <HAL_SPI_TransmitReceive_DMA+0x1f4>)
 8008cc0:	63da      	str	r2, [r3, #60]	; 0x3c
 8008cc2:	e007      	b.n	8008cd4 <HAL_SPI_TransmitReceive_DMA+0xe8>
 8008cc4:	68fb      	ldr	r3, [r7, #12]
 8008cc6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008cc8:	4a46      	ldr	r2, [pc, #280]	; (8008de4 <HAL_SPI_TransmitReceive_DMA+0x1f8>)
 8008cca:	641a      	str	r2, [r3, #64]	; 0x40
 8008ccc:	68fb      	ldr	r3, [r7, #12]
 8008cce:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008cd0:	4a45      	ldr	r2, [pc, #276]	; (8008de8 <HAL_SPI_TransmitReceive_DMA+0x1fc>)
 8008cd2:	63da      	str	r2, [r3, #60]	; 0x3c
 8008cd4:	68fb      	ldr	r3, [r7, #12]
 8008cd6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008cd8:	4a44      	ldr	r2, [pc, #272]	; (8008dec <HAL_SPI_TransmitReceive_DMA+0x200>)
 8008cda:	64da      	str	r2, [r3, #76]	; 0x4c
 8008cdc:	68fb      	ldr	r3, [r7, #12]
 8008cde:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008ce0:	2200      	movs	r2, #0
 8008ce2:	651a      	str	r2, [r3, #80]	; 0x50
 8008ce4:	68fb      	ldr	r3, [r7, #12]
 8008ce6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8008ce8:	68fb      	ldr	r3, [r7, #12]
 8008cea:	681b      	ldr	r3, [r3, #0]
 8008cec:	330c      	adds	r3, #12
 8008cee:	4619      	mov	r1, r3
 8008cf0:	68fb      	ldr	r3, [r7, #12]
 8008cf2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008cf4:	461a      	mov	r2, r3
 8008cf6:	68fb      	ldr	r3, [r7, #12]
 8008cf8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8008cfa:	b29b      	uxth	r3, r3
 8008cfc:	f7fc f8b4 	bl	8004e68 <HAL_DMA_Start_IT>
 8008d00:	4603      	mov	r3, r0
 8008d02:	2b00      	cmp	r3, #0
 8008d04:	d00c      	beq.n	8008d20 <HAL_SPI_TransmitReceive_DMA+0x134>
 8008d06:	68fb      	ldr	r3, [r7, #12]
 8008d08:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008d0a:	f043 0210 	orr.w	r2, r3, #16
 8008d0e:	68fb      	ldr	r3, [r7, #12]
 8008d10:	655a      	str	r2, [r3, #84]	; 0x54
 8008d12:	2301      	movs	r3, #1
 8008d14:	75fb      	strb	r3, [r7, #23]
 8008d16:	68fb      	ldr	r3, [r7, #12]
 8008d18:	2201      	movs	r2, #1
 8008d1a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008d1e:	e054      	b.n	8008dca <HAL_SPI_TransmitReceive_DMA+0x1de>
 8008d20:	68fb      	ldr	r3, [r7, #12]
 8008d22:	681b      	ldr	r3, [r3, #0]
 8008d24:	685a      	ldr	r2, [r3, #4]
 8008d26:	68fb      	ldr	r3, [r7, #12]
 8008d28:	681b      	ldr	r3, [r3, #0]
 8008d2a:	f042 0201 	orr.w	r2, r2, #1
 8008d2e:	605a      	str	r2, [r3, #4]
 8008d30:	68fb      	ldr	r3, [r7, #12]
 8008d32:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008d34:	2200      	movs	r2, #0
 8008d36:	641a      	str	r2, [r3, #64]	; 0x40
 8008d38:	68fb      	ldr	r3, [r7, #12]
 8008d3a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008d3c:	2200      	movs	r2, #0
 8008d3e:	63da      	str	r2, [r3, #60]	; 0x3c
 8008d40:	68fb      	ldr	r3, [r7, #12]
 8008d42:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008d44:	2200      	movs	r2, #0
 8008d46:	64da      	str	r2, [r3, #76]	; 0x4c
 8008d48:	68fb      	ldr	r3, [r7, #12]
 8008d4a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008d4c:	2200      	movs	r2, #0
 8008d4e:	651a      	str	r2, [r3, #80]	; 0x50
 8008d50:	68fb      	ldr	r3, [r7, #12]
 8008d52:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8008d54:	68fb      	ldr	r3, [r7, #12]
 8008d56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008d58:	4619      	mov	r1, r3
 8008d5a:	68fb      	ldr	r3, [r7, #12]
 8008d5c:	681b      	ldr	r3, [r3, #0]
 8008d5e:	330c      	adds	r3, #12
 8008d60:	461a      	mov	r2, r3
 8008d62:	68fb      	ldr	r3, [r7, #12]
 8008d64:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8008d66:	b29b      	uxth	r3, r3
 8008d68:	f7fc f87e 	bl	8004e68 <HAL_DMA_Start_IT>
 8008d6c:	4603      	mov	r3, r0
 8008d6e:	2b00      	cmp	r3, #0
 8008d70:	d00c      	beq.n	8008d8c <HAL_SPI_TransmitReceive_DMA+0x1a0>
 8008d72:	68fb      	ldr	r3, [r7, #12]
 8008d74:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008d76:	f043 0210 	orr.w	r2, r3, #16
 8008d7a:	68fb      	ldr	r3, [r7, #12]
 8008d7c:	655a      	str	r2, [r3, #84]	; 0x54
 8008d7e:	2301      	movs	r3, #1
 8008d80:	75fb      	strb	r3, [r7, #23]
 8008d82:	68fb      	ldr	r3, [r7, #12]
 8008d84:	2201      	movs	r2, #1
 8008d86:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008d8a:	e01e      	b.n	8008dca <HAL_SPI_TransmitReceive_DMA+0x1de>
 8008d8c:	68fb      	ldr	r3, [r7, #12]
 8008d8e:	681b      	ldr	r3, [r3, #0]
 8008d90:	681b      	ldr	r3, [r3, #0]
 8008d92:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008d96:	2b40      	cmp	r3, #64	; 0x40
 8008d98:	d007      	beq.n	8008daa <HAL_SPI_TransmitReceive_DMA+0x1be>
 8008d9a:	68fb      	ldr	r3, [r7, #12]
 8008d9c:	681b      	ldr	r3, [r3, #0]
 8008d9e:	681a      	ldr	r2, [r3, #0]
 8008da0:	68fb      	ldr	r3, [r7, #12]
 8008da2:	681b      	ldr	r3, [r3, #0]
 8008da4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8008da8:	601a      	str	r2, [r3, #0]
 8008daa:	68fb      	ldr	r3, [r7, #12]
 8008dac:	681b      	ldr	r3, [r3, #0]
 8008dae:	685a      	ldr	r2, [r3, #4]
 8008db0:	68fb      	ldr	r3, [r7, #12]
 8008db2:	681b      	ldr	r3, [r3, #0]
 8008db4:	f042 0220 	orr.w	r2, r2, #32
 8008db8:	605a      	str	r2, [r3, #4]
 8008dba:	68fb      	ldr	r3, [r7, #12]
 8008dbc:	681b      	ldr	r3, [r3, #0]
 8008dbe:	685a      	ldr	r2, [r3, #4]
 8008dc0:	68fb      	ldr	r3, [r7, #12]
 8008dc2:	681b      	ldr	r3, [r3, #0]
 8008dc4:	f042 0202 	orr.w	r2, r2, #2
 8008dc8:	605a      	str	r2, [r3, #4]
 8008dca:	68fb      	ldr	r3, [r7, #12]
 8008dcc:	2200      	movs	r2, #0
 8008dce:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8008dd2:	7dfb      	ldrb	r3, [r7, #23]
 8008dd4:	4618      	mov	r0, r3
 8008dd6:	3718      	adds	r7, #24
 8008dd8:	46bd      	mov	sp, r7
 8008dda:	bd80      	pop	{r7, pc}
 8008ddc:	080091f9 	.word	0x080091f9
 8008de0:	080090c1 	.word	0x080090c1
 8008de4:	08009215 	.word	0x08009215
 8008de8:	08009169 	.word	0x08009169
 8008dec:	08009231 	.word	0x08009231

08008df0 <HAL_SPI_DMAStop>:
 8008df0:	b580      	push	{r7, lr}
 8008df2:	b084      	sub	sp, #16
 8008df4:	af00      	add	r7, sp, #0
 8008df6:	6078      	str	r0, [r7, #4]
 8008df8:	2300      	movs	r3, #0
 8008dfa:	73fb      	strb	r3, [r7, #15]
 8008dfc:	687b      	ldr	r3, [r7, #4]
 8008dfe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008e00:	2b00      	cmp	r3, #0
 8008e02:	d00f      	beq.n	8008e24 <HAL_SPI_DMAStop+0x34>
 8008e04:	687b      	ldr	r3, [r7, #4]
 8008e06:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008e08:	4618      	mov	r0, r3
 8008e0a:	f7fc f885 	bl	8004f18 <HAL_DMA_Abort>
 8008e0e:	4603      	mov	r3, r0
 8008e10:	2b00      	cmp	r3, #0
 8008e12:	d007      	beq.n	8008e24 <HAL_SPI_DMAStop+0x34>
 8008e14:	687b      	ldr	r3, [r7, #4]
 8008e16:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008e18:	f043 0210 	orr.w	r2, r3, #16
 8008e1c:	687b      	ldr	r3, [r7, #4]
 8008e1e:	655a      	str	r2, [r3, #84]	; 0x54
 8008e20:	2301      	movs	r3, #1
 8008e22:	73fb      	strb	r3, [r7, #15]
 8008e24:	687b      	ldr	r3, [r7, #4]
 8008e26:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008e28:	2b00      	cmp	r3, #0
 8008e2a:	d00f      	beq.n	8008e4c <HAL_SPI_DMAStop+0x5c>
 8008e2c:	687b      	ldr	r3, [r7, #4]
 8008e2e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008e30:	4618      	mov	r0, r3
 8008e32:	f7fc f871 	bl	8004f18 <HAL_DMA_Abort>
 8008e36:	4603      	mov	r3, r0
 8008e38:	2b00      	cmp	r3, #0
 8008e3a:	d007      	beq.n	8008e4c <HAL_SPI_DMAStop+0x5c>
 8008e3c:	687b      	ldr	r3, [r7, #4]
 8008e3e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008e40:	f043 0210 	orr.w	r2, r3, #16
 8008e44:	687b      	ldr	r3, [r7, #4]
 8008e46:	655a      	str	r2, [r3, #84]	; 0x54
 8008e48:	2301      	movs	r3, #1
 8008e4a:	73fb      	strb	r3, [r7, #15]
 8008e4c:	687b      	ldr	r3, [r7, #4]
 8008e4e:	681b      	ldr	r3, [r3, #0]
 8008e50:	685a      	ldr	r2, [r3, #4]
 8008e52:	687b      	ldr	r3, [r7, #4]
 8008e54:	681b      	ldr	r3, [r3, #0]
 8008e56:	f022 0203 	bic.w	r2, r2, #3
 8008e5a:	605a      	str	r2, [r3, #4]
 8008e5c:	687b      	ldr	r3, [r7, #4]
 8008e5e:	2201      	movs	r2, #1
 8008e60:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008e64:	7bfb      	ldrb	r3, [r7, #15]
 8008e66:	4618      	mov	r0, r3
 8008e68:	3710      	adds	r7, #16
 8008e6a:	46bd      	mov	sp, r7
 8008e6c:	bd80      	pop	{r7, pc}
	...

08008e70 <HAL_SPI_IRQHandler>:
 8008e70:	b580      	push	{r7, lr}
 8008e72:	b088      	sub	sp, #32
 8008e74:	af00      	add	r7, sp, #0
 8008e76:	6078      	str	r0, [r7, #4]
 8008e78:	687b      	ldr	r3, [r7, #4]
 8008e7a:	681b      	ldr	r3, [r3, #0]
 8008e7c:	685b      	ldr	r3, [r3, #4]
 8008e7e:	61fb      	str	r3, [r7, #28]
 8008e80:	687b      	ldr	r3, [r7, #4]
 8008e82:	681b      	ldr	r3, [r3, #0]
 8008e84:	689b      	ldr	r3, [r3, #8]
 8008e86:	61bb      	str	r3, [r7, #24]
 8008e88:	69bb      	ldr	r3, [r7, #24]
 8008e8a:	099b      	lsrs	r3, r3, #6
 8008e8c:	f003 0301 	and.w	r3, r3, #1
 8008e90:	2b00      	cmp	r3, #0
 8008e92:	d10f      	bne.n	8008eb4 <HAL_SPI_IRQHandler+0x44>
 8008e94:	69bb      	ldr	r3, [r7, #24]
 8008e96:	f003 0301 	and.w	r3, r3, #1
 8008e9a:	2b00      	cmp	r3, #0
 8008e9c:	d00a      	beq.n	8008eb4 <HAL_SPI_IRQHandler+0x44>
 8008e9e:	69fb      	ldr	r3, [r7, #28]
 8008ea0:	099b      	lsrs	r3, r3, #6
 8008ea2:	f003 0301 	and.w	r3, r3, #1
 8008ea6:	2b00      	cmp	r3, #0
 8008ea8:	d004      	beq.n	8008eb4 <HAL_SPI_IRQHandler+0x44>
 8008eaa:	687b      	ldr	r3, [r7, #4]
 8008eac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008eae:	6878      	ldr	r0, [r7, #4]
 8008eb0:	4798      	blx	r3
 8008eb2:	e0d7      	b.n	8009064 <HAL_SPI_IRQHandler+0x1f4>
 8008eb4:	69bb      	ldr	r3, [r7, #24]
 8008eb6:	085b      	lsrs	r3, r3, #1
 8008eb8:	f003 0301 	and.w	r3, r3, #1
 8008ebc:	2b00      	cmp	r3, #0
 8008ebe:	d00a      	beq.n	8008ed6 <HAL_SPI_IRQHandler+0x66>
 8008ec0:	69fb      	ldr	r3, [r7, #28]
 8008ec2:	09db      	lsrs	r3, r3, #7
 8008ec4:	f003 0301 	and.w	r3, r3, #1
 8008ec8:	2b00      	cmp	r3, #0
 8008eca:	d004      	beq.n	8008ed6 <HAL_SPI_IRQHandler+0x66>
 8008ecc:	687b      	ldr	r3, [r7, #4]
 8008ece:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008ed0:	6878      	ldr	r0, [r7, #4]
 8008ed2:	4798      	blx	r3
 8008ed4:	e0c6      	b.n	8009064 <HAL_SPI_IRQHandler+0x1f4>
 8008ed6:	69bb      	ldr	r3, [r7, #24]
 8008ed8:	095b      	lsrs	r3, r3, #5
 8008eda:	f003 0301 	and.w	r3, r3, #1
 8008ede:	2b00      	cmp	r3, #0
 8008ee0:	d10c      	bne.n	8008efc <HAL_SPI_IRQHandler+0x8c>
 8008ee2:	69bb      	ldr	r3, [r7, #24]
 8008ee4:	099b      	lsrs	r3, r3, #6
 8008ee6:	f003 0301 	and.w	r3, r3, #1
 8008eea:	2b00      	cmp	r3, #0
 8008eec:	d106      	bne.n	8008efc <HAL_SPI_IRQHandler+0x8c>
 8008eee:	69bb      	ldr	r3, [r7, #24]
 8008ef0:	0a1b      	lsrs	r3, r3, #8
 8008ef2:	f003 0301 	and.w	r3, r3, #1
 8008ef6:	2b00      	cmp	r3, #0
 8008ef8:	f000 80b4 	beq.w	8009064 <HAL_SPI_IRQHandler+0x1f4>
 8008efc:	69fb      	ldr	r3, [r7, #28]
 8008efe:	095b      	lsrs	r3, r3, #5
 8008f00:	f003 0301 	and.w	r3, r3, #1
 8008f04:	2b00      	cmp	r3, #0
 8008f06:	f000 80ad 	beq.w	8009064 <HAL_SPI_IRQHandler+0x1f4>
 8008f0a:	69bb      	ldr	r3, [r7, #24]
 8008f0c:	099b      	lsrs	r3, r3, #6
 8008f0e:	f003 0301 	and.w	r3, r3, #1
 8008f12:	2b00      	cmp	r3, #0
 8008f14:	d023      	beq.n	8008f5e <HAL_SPI_IRQHandler+0xee>
 8008f16:	687b      	ldr	r3, [r7, #4]
 8008f18:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008f1c:	b2db      	uxtb	r3, r3
 8008f1e:	2b03      	cmp	r3, #3
 8008f20:	d011      	beq.n	8008f46 <HAL_SPI_IRQHandler+0xd6>
 8008f22:	687b      	ldr	r3, [r7, #4]
 8008f24:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008f26:	f043 0204 	orr.w	r2, r3, #4
 8008f2a:	687b      	ldr	r3, [r7, #4]
 8008f2c:	655a      	str	r2, [r3, #84]	; 0x54
 8008f2e:	2300      	movs	r3, #0
 8008f30:	617b      	str	r3, [r7, #20]
 8008f32:	687b      	ldr	r3, [r7, #4]
 8008f34:	681b      	ldr	r3, [r3, #0]
 8008f36:	68db      	ldr	r3, [r3, #12]
 8008f38:	617b      	str	r3, [r7, #20]
 8008f3a:	687b      	ldr	r3, [r7, #4]
 8008f3c:	681b      	ldr	r3, [r3, #0]
 8008f3e:	689b      	ldr	r3, [r3, #8]
 8008f40:	617b      	str	r3, [r7, #20]
 8008f42:	697b      	ldr	r3, [r7, #20]
 8008f44:	e00b      	b.n	8008f5e <HAL_SPI_IRQHandler+0xee>
 8008f46:	2300      	movs	r3, #0
 8008f48:	613b      	str	r3, [r7, #16]
 8008f4a:	687b      	ldr	r3, [r7, #4]
 8008f4c:	681b      	ldr	r3, [r3, #0]
 8008f4e:	68db      	ldr	r3, [r3, #12]
 8008f50:	613b      	str	r3, [r7, #16]
 8008f52:	687b      	ldr	r3, [r7, #4]
 8008f54:	681b      	ldr	r3, [r3, #0]
 8008f56:	689b      	ldr	r3, [r3, #8]
 8008f58:	613b      	str	r3, [r7, #16]
 8008f5a:	693b      	ldr	r3, [r7, #16]
 8008f5c:	e082      	b.n	8009064 <HAL_SPI_IRQHandler+0x1f4>
 8008f5e:	69bb      	ldr	r3, [r7, #24]
 8008f60:	095b      	lsrs	r3, r3, #5
 8008f62:	f003 0301 	and.w	r3, r3, #1
 8008f66:	2b00      	cmp	r3, #0
 8008f68:	d014      	beq.n	8008f94 <HAL_SPI_IRQHandler+0x124>
 8008f6a:	687b      	ldr	r3, [r7, #4]
 8008f6c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008f6e:	f043 0201 	orr.w	r2, r3, #1
 8008f72:	687b      	ldr	r3, [r7, #4]
 8008f74:	655a      	str	r2, [r3, #84]	; 0x54
 8008f76:	2300      	movs	r3, #0
 8008f78:	60fb      	str	r3, [r7, #12]
 8008f7a:	687b      	ldr	r3, [r7, #4]
 8008f7c:	681b      	ldr	r3, [r3, #0]
 8008f7e:	689b      	ldr	r3, [r3, #8]
 8008f80:	60fb      	str	r3, [r7, #12]
 8008f82:	687b      	ldr	r3, [r7, #4]
 8008f84:	681b      	ldr	r3, [r3, #0]
 8008f86:	681a      	ldr	r2, [r3, #0]
 8008f88:	687b      	ldr	r3, [r7, #4]
 8008f8a:	681b      	ldr	r3, [r3, #0]
 8008f8c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008f90:	601a      	str	r2, [r3, #0]
 8008f92:	68fb      	ldr	r3, [r7, #12]
 8008f94:	69bb      	ldr	r3, [r7, #24]
 8008f96:	0a1b      	lsrs	r3, r3, #8
 8008f98:	f003 0301 	and.w	r3, r3, #1
 8008f9c:	2b00      	cmp	r3, #0
 8008f9e:	d00c      	beq.n	8008fba <HAL_SPI_IRQHandler+0x14a>
 8008fa0:	687b      	ldr	r3, [r7, #4]
 8008fa2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008fa4:	f043 0208 	orr.w	r2, r3, #8
 8008fa8:	687b      	ldr	r3, [r7, #4]
 8008faa:	655a      	str	r2, [r3, #84]	; 0x54
 8008fac:	2300      	movs	r3, #0
 8008fae:	60bb      	str	r3, [r7, #8]
 8008fb0:	687b      	ldr	r3, [r7, #4]
 8008fb2:	681b      	ldr	r3, [r3, #0]
 8008fb4:	689b      	ldr	r3, [r3, #8]
 8008fb6:	60bb      	str	r3, [r7, #8]
 8008fb8:	68bb      	ldr	r3, [r7, #8]
 8008fba:	687b      	ldr	r3, [r7, #4]
 8008fbc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008fbe:	2b00      	cmp	r3, #0
 8008fc0:	d04f      	beq.n	8009062 <HAL_SPI_IRQHandler+0x1f2>
 8008fc2:	687b      	ldr	r3, [r7, #4]
 8008fc4:	681b      	ldr	r3, [r3, #0]
 8008fc6:	685a      	ldr	r2, [r3, #4]
 8008fc8:	687b      	ldr	r3, [r7, #4]
 8008fca:	681b      	ldr	r3, [r3, #0]
 8008fcc:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8008fd0:	605a      	str	r2, [r3, #4]
 8008fd2:	687b      	ldr	r3, [r7, #4]
 8008fd4:	2201      	movs	r2, #1
 8008fd6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008fda:	69fb      	ldr	r3, [r7, #28]
 8008fdc:	f003 0302 	and.w	r3, r3, #2
 8008fe0:	2b00      	cmp	r3, #0
 8008fe2:	d104      	bne.n	8008fee <HAL_SPI_IRQHandler+0x17e>
 8008fe4:	69fb      	ldr	r3, [r7, #28]
 8008fe6:	f003 0301 	and.w	r3, r3, #1
 8008fea:	2b00      	cmp	r3, #0
 8008fec:	d034      	beq.n	8009058 <HAL_SPI_IRQHandler+0x1e8>
 8008fee:	687b      	ldr	r3, [r7, #4]
 8008ff0:	681b      	ldr	r3, [r3, #0]
 8008ff2:	685a      	ldr	r2, [r3, #4]
 8008ff4:	687b      	ldr	r3, [r7, #4]
 8008ff6:	681b      	ldr	r3, [r3, #0]
 8008ff8:	f022 0203 	bic.w	r2, r2, #3
 8008ffc:	605a      	str	r2, [r3, #4]
 8008ffe:	687b      	ldr	r3, [r7, #4]
 8009000:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009002:	2b00      	cmp	r3, #0
 8009004:	d011      	beq.n	800902a <HAL_SPI_IRQHandler+0x1ba>
 8009006:	687b      	ldr	r3, [r7, #4]
 8009008:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800900a:	4a18      	ldr	r2, [pc, #96]	; (800906c <HAL_SPI_IRQHandler+0x1fc>)
 800900c:	651a      	str	r2, [r3, #80]	; 0x50
 800900e:	687b      	ldr	r3, [r7, #4]
 8009010:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009012:	4618      	mov	r0, r3
 8009014:	f7fb fff0 	bl	8004ff8 <HAL_DMA_Abort_IT>
 8009018:	4603      	mov	r3, r0
 800901a:	2b00      	cmp	r3, #0
 800901c:	d005      	beq.n	800902a <HAL_SPI_IRQHandler+0x1ba>
 800901e:	687b      	ldr	r3, [r7, #4]
 8009020:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009022:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8009026:	687b      	ldr	r3, [r7, #4]
 8009028:	655a      	str	r2, [r3, #84]	; 0x54
 800902a:	687b      	ldr	r3, [r7, #4]
 800902c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800902e:	2b00      	cmp	r3, #0
 8009030:	d016      	beq.n	8009060 <HAL_SPI_IRQHandler+0x1f0>
 8009032:	687b      	ldr	r3, [r7, #4]
 8009034:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8009036:	4a0d      	ldr	r2, [pc, #52]	; (800906c <HAL_SPI_IRQHandler+0x1fc>)
 8009038:	651a      	str	r2, [r3, #80]	; 0x50
 800903a:	687b      	ldr	r3, [r7, #4]
 800903c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800903e:	4618      	mov	r0, r3
 8009040:	f7fb ffda 	bl	8004ff8 <HAL_DMA_Abort_IT>
 8009044:	4603      	mov	r3, r0
 8009046:	2b00      	cmp	r3, #0
 8009048:	d00a      	beq.n	8009060 <HAL_SPI_IRQHandler+0x1f0>
 800904a:	687b      	ldr	r3, [r7, #4]
 800904c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800904e:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8009052:	687b      	ldr	r3, [r7, #4]
 8009054:	655a      	str	r2, [r3, #84]	; 0x54
 8009056:	e003      	b.n	8009060 <HAL_SPI_IRQHandler+0x1f0>
 8009058:	6878      	ldr	r0, [r7, #4]
 800905a:	f000 f827 	bl	80090ac <HAL_SPI_ErrorCallback>
 800905e:	e000      	b.n	8009062 <HAL_SPI_IRQHandler+0x1f2>
 8009060:	bf00      	nop
 8009062:	bf00      	nop
 8009064:	3720      	adds	r7, #32
 8009066:	46bd      	mov	sp, r7
 8009068:	bd80      	pop	{r7, pc}
 800906a:	bf00      	nop
 800906c:	08009271 	.word	0x08009271

08009070 <HAL_SPI_RxCpltCallback>:
 8009070:	b480      	push	{r7}
 8009072:	b083      	sub	sp, #12
 8009074:	af00      	add	r7, sp, #0
 8009076:	6078      	str	r0, [r7, #4]
 8009078:	bf00      	nop
 800907a:	370c      	adds	r7, #12
 800907c:	46bd      	mov	sp, r7
 800907e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009082:	4770      	bx	lr

08009084 <HAL_SPI_RxHalfCpltCallback>:
 8009084:	b480      	push	{r7}
 8009086:	b083      	sub	sp, #12
 8009088:	af00      	add	r7, sp, #0
 800908a:	6078      	str	r0, [r7, #4]
 800908c:	bf00      	nop
 800908e:	370c      	adds	r7, #12
 8009090:	46bd      	mov	sp, r7
 8009092:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009096:	4770      	bx	lr

08009098 <HAL_SPI_TxRxHalfCpltCallback>:
 8009098:	b480      	push	{r7}
 800909a:	b083      	sub	sp, #12
 800909c:	af00      	add	r7, sp, #0
 800909e:	6078      	str	r0, [r7, #4]
 80090a0:	bf00      	nop
 80090a2:	370c      	adds	r7, #12
 80090a4:	46bd      	mov	sp, r7
 80090a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090aa:	4770      	bx	lr

080090ac <HAL_SPI_ErrorCallback>:
 80090ac:	b480      	push	{r7}
 80090ae:	b083      	sub	sp, #12
 80090b0:	af00      	add	r7, sp, #0
 80090b2:	6078      	str	r0, [r7, #4]
 80090b4:	bf00      	nop
 80090b6:	370c      	adds	r7, #12
 80090b8:	46bd      	mov	sp, r7
 80090ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090be:	4770      	bx	lr

080090c0 <SPI_DMAReceiveCplt>:
 80090c0:	b580      	push	{r7, lr}
 80090c2:	b084      	sub	sp, #16
 80090c4:	af00      	add	r7, sp, #0
 80090c6:	6078      	str	r0, [r7, #4]
 80090c8:	687b      	ldr	r3, [r7, #4]
 80090ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80090cc:	60fb      	str	r3, [r7, #12]
 80090ce:	f7fb fcff 	bl	8004ad0 <HAL_GetTick>
 80090d2:	60b8      	str	r0, [r7, #8]
 80090d4:	687b      	ldr	r3, [r7, #4]
 80090d6:	681b      	ldr	r3, [r3, #0]
 80090d8:	681b      	ldr	r3, [r3, #0]
 80090da:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80090de:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80090e2:	d03b      	beq.n	800915c <SPI_DMAReceiveCplt+0x9c>
 80090e4:	68fb      	ldr	r3, [r7, #12]
 80090e6:	681b      	ldr	r3, [r3, #0]
 80090e8:	685a      	ldr	r2, [r3, #4]
 80090ea:	68fb      	ldr	r3, [r7, #12]
 80090ec:	681b      	ldr	r3, [r3, #0]
 80090ee:	f022 0220 	bic.w	r2, r2, #32
 80090f2:	605a      	str	r2, [r3, #4]
 80090f4:	68fb      	ldr	r3, [r7, #12]
 80090f6:	689b      	ldr	r3, [r3, #8]
 80090f8:	2b00      	cmp	r3, #0
 80090fa:	d10d      	bne.n	8009118 <SPI_DMAReceiveCplt+0x58>
 80090fc:	68fb      	ldr	r3, [r7, #12]
 80090fe:	685b      	ldr	r3, [r3, #4]
 8009100:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8009104:	d108      	bne.n	8009118 <SPI_DMAReceiveCplt+0x58>
 8009106:	68fb      	ldr	r3, [r7, #12]
 8009108:	681b      	ldr	r3, [r3, #0]
 800910a:	685a      	ldr	r2, [r3, #4]
 800910c:	68fb      	ldr	r3, [r7, #12]
 800910e:	681b      	ldr	r3, [r3, #0]
 8009110:	f022 0203 	bic.w	r2, r2, #3
 8009114:	605a      	str	r2, [r3, #4]
 8009116:	e007      	b.n	8009128 <SPI_DMAReceiveCplt+0x68>
 8009118:	68fb      	ldr	r3, [r7, #12]
 800911a:	681b      	ldr	r3, [r3, #0]
 800911c:	685a      	ldr	r2, [r3, #4]
 800911e:	68fb      	ldr	r3, [r7, #12]
 8009120:	681b      	ldr	r3, [r3, #0]
 8009122:	f022 0201 	bic.w	r2, r2, #1
 8009126:	605a      	str	r2, [r3, #4]
 8009128:	68ba      	ldr	r2, [r7, #8]
 800912a:	2164      	movs	r1, #100	; 0x64
 800912c:	68f8      	ldr	r0, [r7, #12]
 800912e:	f000 f93b 	bl	80093a8 <SPI_EndRxTransaction>
 8009132:	4603      	mov	r3, r0
 8009134:	2b00      	cmp	r3, #0
 8009136:	d002      	beq.n	800913e <SPI_DMAReceiveCplt+0x7e>
 8009138:	68fb      	ldr	r3, [r7, #12]
 800913a:	2220      	movs	r2, #32
 800913c:	655a      	str	r2, [r3, #84]	; 0x54
 800913e:	68fb      	ldr	r3, [r7, #12]
 8009140:	2200      	movs	r2, #0
 8009142:	87da      	strh	r2, [r3, #62]	; 0x3e
 8009144:	68fb      	ldr	r3, [r7, #12]
 8009146:	2201      	movs	r2, #1
 8009148:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800914c:	68fb      	ldr	r3, [r7, #12]
 800914e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009150:	2b00      	cmp	r3, #0
 8009152:	d003      	beq.n	800915c <SPI_DMAReceiveCplt+0x9c>
 8009154:	68f8      	ldr	r0, [r7, #12]
 8009156:	f7ff ffa9 	bl	80090ac <HAL_SPI_ErrorCallback>
 800915a:	e002      	b.n	8009162 <SPI_DMAReceiveCplt+0xa2>
 800915c:	68f8      	ldr	r0, [r7, #12]
 800915e:	f7ff ff87 	bl	8009070 <HAL_SPI_RxCpltCallback>
 8009162:	3710      	adds	r7, #16
 8009164:	46bd      	mov	sp, r7
 8009166:	bd80      	pop	{r7, pc}

08009168 <SPI_DMATransmitReceiveCplt>:
 8009168:	b580      	push	{r7, lr}
 800916a:	b084      	sub	sp, #16
 800916c:	af00      	add	r7, sp, #0
 800916e:	6078      	str	r0, [r7, #4]
 8009170:	687b      	ldr	r3, [r7, #4]
 8009172:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009174:	60fb      	str	r3, [r7, #12]
 8009176:	f7fb fcab 	bl	8004ad0 <HAL_GetTick>
 800917a:	60b8      	str	r0, [r7, #8]
 800917c:	687b      	ldr	r3, [r7, #4]
 800917e:	681b      	ldr	r3, [r3, #0]
 8009180:	681b      	ldr	r3, [r3, #0]
 8009182:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009186:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800918a:	d02f      	beq.n	80091ec <SPI_DMATransmitReceiveCplt+0x84>
 800918c:	68fb      	ldr	r3, [r7, #12]
 800918e:	681b      	ldr	r3, [r3, #0]
 8009190:	685a      	ldr	r2, [r3, #4]
 8009192:	68fb      	ldr	r3, [r7, #12]
 8009194:	681b      	ldr	r3, [r3, #0]
 8009196:	f022 0220 	bic.w	r2, r2, #32
 800919a:	605a      	str	r2, [r3, #4]
 800919c:	68ba      	ldr	r2, [r7, #8]
 800919e:	2164      	movs	r1, #100	; 0x64
 80091a0:	68f8      	ldr	r0, [r7, #12]
 80091a2:	f000 f967 	bl	8009474 <SPI_EndRxTxTransaction>
 80091a6:	4603      	mov	r3, r0
 80091a8:	2b00      	cmp	r3, #0
 80091aa:	d005      	beq.n	80091b8 <SPI_DMATransmitReceiveCplt+0x50>
 80091ac:	68fb      	ldr	r3, [r7, #12]
 80091ae:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80091b0:	f043 0220 	orr.w	r2, r3, #32
 80091b4:	68fb      	ldr	r3, [r7, #12]
 80091b6:	655a      	str	r2, [r3, #84]	; 0x54
 80091b8:	68fb      	ldr	r3, [r7, #12]
 80091ba:	681b      	ldr	r3, [r3, #0]
 80091bc:	685a      	ldr	r2, [r3, #4]
 80091be:	68fb      	ldr	r3, [r7, #12]
 80091c0:	681b      	ldr	r3, [r3, #0]
 80091c2:	f022 0203 	bic.w	r2, r2, #3
 80091c6:	605a      	str	r2, [r3, #4]
 80091c8:	68fb      	ldr	r3, [r7, #12]
 80091ca:	2200      	movs	r2, #0
 80091cc:	86da      	strh	r2, [r3, #54]	; 0x36
 80091ce:	68fb      	ldr	r3, [r7, #12]
 80091d0:	2200      	movs	r2, #0
 80091d2:	87da      	strh	r2, [r3, #62]	; 0x3e
 80091d4:	68fb      	ldr	r3, [r7, #12]
 80091d6:	2201      	movs	r2, #1
 80091d8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80091dc:	68fb      	ldr	r3, [r7, #12]
 80091de:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80091e0:	2b00      	cmp	r3, #0
 80091e2:	d003      	beq.n	80091ec <SPI_DMATransmitReceiveCplt+0x84>
 80091e4:	68f8      	ldr	r0, [r7, #12]
 80091e6:	f7ff ff61 	bl	80090ac <HAL_SPI_ErrorCallback>
 80091ea:	e002      	b.n	80091f2 <SPI_DMATransmitReceiveCplt+0x8a>
 80091ec:	68f8      	ldr	r0, [r7, #12]
 80091ee:	f7fa f8f1 	bl	80033d4 <HAL_SPI_TxRxCpltCallback>
 80091f2:	3710      	adds	r7, #16
 80091f4:	46bd      	mov	sp, r7
 80091f6:	bd80      	pop	{r7, pc}

080091f8 <SPI_DMAHalfReceiveCplt>:
 80091f8:	b580      	push	{r7, lr}
 80091fa:	b084      	sub	sp, #16
 80091fc:	af00      	add	r7, sp, #0
 80091fe:	6078      	str	r0, [r7, #4]
 8009200:	687b      	ldr	r3, [r7, #4]
 8009202:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009204:	60fb      	str	r3, [r7, #12]
 8009206:	68f8      	ldr	r0, [r7, #12]
 8009208:	f7ff ff3c 	bl	8009084 <HAL_SPI_RxHalfCpltCallback>
 800920c:	bf00      	nop
 800920e:	3710      	adds	r7, #16
 8009210:	46bd      	mov	sp, r7
 8009212:	bd80      	pop	{r7, pc}

08009214 <SPI_DMAHalfTransmitReceiveCplt>:
 8009214:	b580      	push	{r7, lr}
 8009216:	b084      	sub	sp, #16
 8009218:	af00      	add	r7, sp, #0
 800921a:	6078      	str	r0, [r7, #4]
 800921c:	687b      	ldr	r3, [r7, #4]
 800921e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009220:	60fb      	str	r3, [r7, #12]
 8009222:	68f8      	ldr	r0, [r7, #12]
 8009224:	f7ff ff38 	bl	8009098 <HAL_SPI_TxRxHalfCpltCallback>
 8009228:	bf00      	nop
 800922a:	3710      	adds	r7, #16
 800922c:	46bd      	mov	sp, r7
 800922e:	bd80      	pop	{r7, pc}

08009230 <SPI_DMAError>:
 8009230:	b580      	push	{r7, lr}
 8009232:	b084      	sub	sp, #16
 8009234:	af00      	add	r7, sp, #0
 8009236:	6078      	str	r0, [r7, #4]
 8009238:	687b      	ldr	r3, [r7, #4]
 800923a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800923c:	60fb      	str	r3, [r7, #12]
 800923e:	68fb      	ldr	r3, [r7, #12]
 8009240:	681b      	ldr	r3, [r3, #0]
 8009242:	685a      	ldr	r2, [r3, #4]
 8009244:	68fb      	ldr	r3, [r7, #12]
 8009246:	681b      	ldr	r3, [r3, #0]
 8009248:	f022 0203 	bic.w	r2, r2, #3
 800924c:	605a      	str	r2, [r3, #4]
 800924e:	68fb      	ldr	r3, [r7, #12]
 8009250:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009252:	f043 0210 	orr.w	r2, r3, #16
 8009256:	68fb      	ldr	r3, [r7, #12]
 8009258:	655a      	str	r2, [r3, #84]	; 0x54
 800925a:	68fb      	ldr	r3, [r7, #12]
 800925c:	2201      	movs	r2, #1
 800925e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8009262:	68f8      	ldr	r0, [r7, #12]
 8009264:	f7ff ff22 	bl	80090ac <HAL_SPI_ErrorCallback>
 8009268:	bf00      	nop
 800926a:	3710      	adds	r7, #16
 800926c:	46bd      	mov	sp, r7
 800926e:	bd80      	pop	{r7, pc}

08009270 <SPI_DMAAbortOnError>:
 8009270:	b580      	push	{r7, lr}
 8009272:	b084      	sub	sp, #16
 8009274:	af00      	add	r7, sp, #0
 8009276:	6078      	str	r0, [r7, #4]
 8009278:	687b      	ldr	r3, [r7, #4]
 800927a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800927c:	60fb      	str	r3, [r7, #12]
 800927e:	68fb      	ldr	r3, [r7, #12]
 8009280:	2200      	movs	r2, #0
 8009282:	87da      	strh	r2, [r3, #62]	; 0x3e
 8009284:	68fb      	ldr	r3, [r7, #12]
 8009286:	2200      	movs	r2, #0
 8009288:	86da      	strh	r2, [r3, #54]	; 0x36
 800928a:	68f8      	ldr	r0, [r7, #12]
 800928c:	f7ff ff0e 	bl	80090ac <HAL_SPI_ErrorCallback>
 8009290:	bf00      	nop
 8009292:	3710      	adds	r7, #16
 8009294:	46bd      	mov	sp, r7
 8009296:	bd80      	pop	{r7, pc}

08009298 <SPI_WaitFlagStateUntilTimeout>:
 8009298:	b580      	push	{r7, lr}
 800929a:	b088      	sub	sp, #32
 800929c:	af00      	add	r7, sp, #0
 800929e:	60f8      	str	r0, [r7, #12]
 80092a0:	60b9      	str	r1, [r7, #8]
 80092a2:	603b      	str	r3, [r7, #0]
 80092a4:	4613      	mov	r3, r2
 80092a6:	71fb      	strb	r3, [r7, #7]
 80092a8:	f7fb fc12 	bl	8004ad0 <HAL_GetTick>
 80092ac:	4602      	mov	r2, r0
 80092ae:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80092b0:	1a9b      	subs	r3, r3, r2
 80092b2:	683a      	ldr	r2, [r7, #0]
 80092b4:	4413      	add	r3, r2
 80092b6:	61fb      	str	r3, [r7, #28]
 80092b8:	f7fb fc0a 	bl	8004ad0 <HAL_GetTick>
 80092bc:	61b8      	str	r0, [r7, #24]
 80092be:	4b39      	ldr	r3, [pc, #228]	; (80093a4 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 80092c0:	681b      	ldr	r3, [r3, #0]
 80092c2:	015b      	lsls	r3, r3, #5
 80092c4:	0d1b      	lsrs	r3, r3, #20
 80092c6:	69fa      	ldr	r2, [r7, #28]
 80092c8:	fb02 f303 	mul.w	r3, r2, r3
 80092cc:	617b      	str	r3, [r7, #20]
 80092ce:	e054      	b.n	800937a <SPI_WaitFlagStateUntilTimeout+0xe2>
 80092d0:	683b      	ldr	r3, [r7, #0]
 80092d2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80092d6:	d050      	beq.n	800937a <SPI_WaitFlagStateUntilTimeout+0xe2>
 80092d8:	f7fb fbfa 	bl	8004ad0 <HAL_GetTick>
 80092dc:	4602      	mov	r2, r0
 80092de:	69bb      	ldr	r3, [r7, #24]
 80092e0:	1ad3      	subs	r3, r2, r3
 80092e2:	69fa      	ldr	r2, [r7, #28]
 80092e4:	429a      	cmp	r2, r3
 80092e6:	d902      	bls.n	80092ee <SPI_WaitFlagStateUntilTimeout+0x56>
 80092e8:	69fb      	ldr	r3, [r7, #28]
 80092ea:	2b00      	cmp	r3, #0
 80092ec:	d13d      	bne.n	800936a <SPI_WaitFlagStateUntilTimeout+0xd2>
 80092ee:	68fb      	ldr	r3, [r7, #12]
 80092f0:	681b      	ldr	r3, [r3, #0]
 80092f2:	685a      	ldr	r2, [r3, #4]
 80092f4:	68fb      	ldr	r3, [r7, #12]
 80092f6:	681b      	ldr	r3, [r3, #0]
 80092f8:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80092fc:	605a      	str	r2, [r3, #4]
 80092fe:	68fb      	ldr	r3, [r7, #12]
 8009300:	685b      	ldr	r3, [r3, #4]
 8009302:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8009306:	d111      	bne.n	800932c <SPI_WaitFlagStateUntilTimeout+0x94>
 8009308:	68fb      	ldr	r3, [r7, #12]
 800930a:	689b      	ldr	r3, [r3, #8]
 800930c:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009310:	d004      	beq.n	800931c <SPI_WaitFlagStateUntilTimeout+0x84>
 8009312:	68fb      	ldr	r3, [r7, #12]
 8009314:	689b      	ldr	r3, [r3, #8]
 8009316:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800931a:	d107      	bne.n	800932c <SPI_WaitFlagStateUntilTimeout+0x94>
 800931c:	68fb      	ldr	r3, [r7, #12]
 800931e:	681b      	ldr	r3, [r3, #0]
 8009320:	681a      	ldr	r2, [r3, #0]
 8009322:	68fb      	ldr	r3, [r7, #12]
 8009324:	681b      	ldr	r3, [r3, #0]
 8009326:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800932a:	601a      	str	r2, [r3, #0]
 800932c:	68fb      	ldr	r3, [r7, #12]
 800932e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009330:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009334:	d10f      	bne.n	8009356 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8009336:	68fb      	ldr	r3, [r7, #12]
 8009338:	681b      	ldr	r3, [r3, #0]
 800933a:	681a      	ldr	r2, [r3, #0]
 800933c:	68fb      	ldr	r3, [r7, #12]
 800933e:	681b      	ldr	r3, [r3, #0]
 8009340:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8009344:	601a      	str	r2, [r3, #0]
 8009346:	68fb      	ldr	r3, [r7, #12]
 8009348:	681b      	ldr	r3, [r3, #0]
 800934a:	681a      	ldr	r2, [r3, #0]
 800934c:	68fb      	ldr	r3, [r7, #12]
 800934e:	681b      	ldr	r3, [r3, #0]
 8009350:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8009354:	601a      	str	r2, [r3, #0]
 8009356:	68fb      	ldr	r3, [r7, #12]
 8009358:	2201      	movs	r2, #1
 800935a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800935e:	68fb      	ldr	r3, [r7, #12]
 8009360:	2200      	movs	r2, #0
 8009362:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8009366:	2303      	movs	r3, #3
 8009368:	e017      	b.n	800939a <SPI_WaitFlagStateUntilTimeout+0x102>
 800936a:	697b      	ldr	r3, [r7, #20]
 800936c:	2b00      	cmp	r3, #0
 800936e:	d101      	bne.n	8009374 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8009370:	2300      	movs	r3, #0
 8009372:	61fb      	str	r3, [r7, #28]
 8009374:	697b      	ldr	r3, [r7, #20]
 8009376:	3b01      	subs	r3, #1
 8009378:	617b      	str	r3, [r7, #20]
 800937a:	68fb      	ldr	r3, [r7, #12]
 800937c:	681b      	ldr	r3, [r3, #0]
 800937e:	689a      	ldr	r2, [r3, #8]
 8009380:	68bb      	ldr	r3, [r7, #8]
 8009382:	4013      	ands	r3, r2
 8009384:	68ba      	ldr	r2, [r7, #8]
 8009386:	429a      	cmp	r2, r3
 8009388:	bf0c      	ite	eq
 800938a:	2301      	moveq	r3, #1
 800938c:	2300      	movne	r3, #0
 800938e:	b2db      	uxtb	r3, r3
 8009390:	461a      	mov	r2, r3
 8009392:	79fb      	ldrb	r3, [r7, #7]
 8009394:	429a      	cmp	r2, r3
 8009396:	d19b      	bne.n	80092d0 <SPI_WaitFlagStateUntilTimeout+0x38>
 8009398:	2300      	movs	r3, #0
 800939a:	4618      	mov	r0, r3
 800939c:	3720      	adds	r7, #32
 800939e:	46bd      	mov	sp, r7
 80093a0:	bd80      	pop	{r7, pc}
 80093a2:	bf00      	nop
 80093a4:	20000134 	.word	0x20000134

080093a8 <SPI_EndRxTransaction>:
 80093a8:	b580      	push	{r7, lr}
 80093aa:	b086      	sub	sp, #24
 80093ac:	af02      	add	r7, sp, #8
 80093ae:	60f8      	str	r0, [r7, #12]
 80093b0:	60b9      	str	r1, [r7, #8]
 80093b2:	607a      	str	r2, [r7, #4]
 80093b4:	68fb      	ldr	r3, [r7, #12]
 80093b6:	685b      	ldr	r3, [r3, #4]
 80093b8:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80093bc:	d111      	bne.n	80093e2 <SPI_EndRxTransaction+0x3a>
 80093be:	68fb      	ldr	r3, [r7, #12]
 80093c0:	689b      	ldr	r3, [r3, #8]
 80093c2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80093c6:	d004      	beq.n	80093d2 <SPI_EndRxTransaction+0x2a>
 80093c8:	68fb      	ldr	r3, [r7, #12]
 80093ca:	689b      	ldr	r3, [r3, #8]
 80093cc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80093d0:	d107      	bne.n	80093e2 <SPI_EndRxTransaction+0x3a>
 80093d2:	68fb      	ldr	r3, [r7, #12]
 80093d4:	681b      	ldr	r3, [r3, #0]
 80093d6:	681a      	ldr	r2, [r3, #0]
 80093d8:	68fb      	ldr	r3, [r7, #12]
 80093da:	681b      	ldr	r3, [r3, #0]
 80093dc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80093e0:	601a      	str	r2, [r3, #0]
 80093e2:	68fb      	ldr	r3, [r7, #12]
 80093e4:	685b      	ldr	r3, [r3, #4]
 80093e6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80093ea:	d12a      	bne.n	8009442 <SPI_EndRxTransaction+0x9a>
 80093ec:	68fb      	ldr	r3, [r7, #12]
 80093ee:	689b      	ldr	r3, [r3, #8]
 80093f0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80093f4:	d012      	beq.n	800941c <SPI_EndRxTransaction+0x74>
 80093f6:	687b      	ldr	r3, [r7, #4]
 80093f8:	9300      	str	r3, [sp, #0]
 80093fa:	68bb      	ldr	r3, [r7, #8]
 80093fc:	2200      	movs	r2, #0
 80093fe:	2180      	movs	r1, #128	; 0x80
 8009400:	68f8      	ldr	r0, [r7, #12]
 8009402:	f7ff ff49 	bl	8009298 <SPI_WaitFlagStateUntilTimeout>
 8009406:	4603      	mov	r3, r0
 8009408:	2b00      	cmp	r3, #0
 800940a:	d02d      	beq.n	8009468 <SPI_EndRxTransaction+0xc0>
 800940c:	68fb      	ldr	r3, [r7, #12]
 800940e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009410:	f043 0220 	orr.w	r2, r3, #32
 8009414:	68fb      	ldr	r3, [r7, #12]
 8009416:	655a      	str	r2, [r3, #84]	; 0x54
 8009418:	2303      	movs	r3, #3
 800941a:	e026      	b.n	800946a <SPI_EndRxTransaction+0xc2>
 800941c:	687b      	ldr	r3, [r7, #4]
 800941e:	9300      	str	r3, [sp, #0]
 8009420:	68bb      	ldr	r3, [r7, #8]
 8009422:	2200      	movs	r2, #0
 8009424:	2101      	movs	r1, #1
 8009426:	68f8      	ldr	r0, [r7, #12]
 8009428:	f7ff ff36 	bl	8009298 <SPI_WaitFlagStateUntilTimeout>
 800942c:	4603      	mov	r3, r0
 800942e:	2b00      	cmp	r3, #0
 8009430:	d01a      	beq.n	8009468 <SPI_EndRxTransaction+0xc0>
 8009432:	68fb      	ldr	r3, [r7, #12]
 8009434:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009436:	f043 0220 	orr.w	r2, r3, #32
 800943a:	68fb      	ldr	r3, [r7, #12]
 800943c:	655a      	str	r2, [r3, #84]	; 0x54
 800943e:	2303      	movs	r3, #3
 8009440:	e013      	b.n	800946a <SPI_EndRxTransaction+0xc2>
 8009442:	687b      	ldr	r3, [r7, #4]
 8009444:	9300      	str	r3, [sp, #0]
 8009446:	68bb      	ldr	r3, [r7, #8]
 8009448:	2200      	movs	r2, #0
 800944a:	2101      	movs	r1, #1
 800944c:	68f8      	ldr	r0, [r7, #12]
 800944e:	f7ff ff23 	bl	8009298 <SPI_WaitFlagStateUntilTimeout>
 8009452:	4603      	mov	r3, r0
 8009454:	2b00      	cmp	r3, #0
 8009456:	d007      	beq.n	8009468 <SPI_EndRxTransaction+0xc0>
 8009458:	68fb      	ldr	r3, [r7, #12]
 800945a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800945c:	f043 0220 	orr.w	r2, r3, #32
 8009460:	68fb      	ldr	r3, [r7, #12]
 8009462:	655a      	str	r2, [r3, #84]	; 0x54
 8009464:	2303      	movs	r3, #3
 8009466:	e000      	b.n	800946a <SPI_EndRxTransaction+0xc2>
 8009468:	2300      	movs	r3, #0
 800946a:	4618      	mov	r0, r3
 800946c:	3710      	adds	r7, #16
 800946e:	46bd      	mov	sp, r7
 8009470:	bd80      	pop	{r7, pc}
	...

08009474 <SPI_EndRxTxTransaction>:
 8009474:	b580      	push	{r7, lr}
 8009476:	b088      	sub	sp, #32
 8009478:	af02      	add	r7, sp, #8
 800947a:	60f8      	str	r0, [r7, #12]
 800947c:	60b9      	str	r1, [r7, #8]
 800947e:	607a      	str	r2, [r7, #4]
 8009480:	4b1b      	ldr	r3, [pc, #108]	; (80094f0 <SPI_EndRxTxTransaction+0x7c>)
 8009482:	681b      	ldr	r3, [r3, #0]
 8009484:	4a1b      	ldr	r2, [pc, #108]	; (80094f4 <SPI_EndRxTxTransaction+0x80>)
 8009486:	fba2 2303 	umull	r2, r3, r2, r3
 800948a:	0d5b      	lsrs	r3, r3, #21
 800948c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8009490:	fb02 f303 	mul.w	r3, r2, r3
 8009494:	617b      	str	r3, [r7, #20]
 8009496:	68fb      	ldr	r3, [r7, #12]
 8009498:	685b      	ldr	r3, [r3, #4]
 800949a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800949e:	d112      	bne.n	80094c6 <SPI_EndRxTxTransaction+0x52>
 80094a0:	687b      	ldr	r3, [r7, #4]
 80094a2:	9300      	str	r3, [sp, #0]
 80094a4:	68bb      	ldr	r3, [r7, #8]
 80094a6:	2200      	movs	r2, #0
 80094a8:	2180      	movs	r1, #128	; 0x80
 80094aa:	68f8      	ldr	r0, [r7, #12]
 80094ac:	f7ff fef4 	bl	8009298 <SPI_WaitFlagStateUntilTimeout>
 80094b0:	4603      	mov	r3, r0
 80094b2:	2b00      	cmp	r3, #0
 80094b4:	d016      	beq.n	80094e4 <SPI_EndRxTxTransaction+0x70>
 80094b6:	68fb      	ldr	r3, [r7, #12]
 80094b8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80094ba:	f043 0220 	orr.w	r2, r3, #32
 80094be:	68fb      	ldr	r3, [r7, #12]
 80094c0:	655a      	str	r2, [r3, #84]	; 0x54
 80094c2:	2303      	movs	r3, #3
 80094c4:	e00f      	b.n	80094e6 <SPI_EndRxTxTransaction+0x72>
 80094c6:	697b      	ldr	r3, [r7, #20]
 80094c8:	2b00      	cmp	r3, #0
 80094ca:	d00a      	beq.n	80094e2 <SPI_EndRxTxTransaction+0x6e>
 80094cc:	697b      	ldr	r3, [r7, #20]
 80094ce:	3b01      	subs	r3, #1
 80094d0:	617b      	str	r3, [r7, #20]
 80094d2:	68fb      	ldr	r3, [r7, #12]
 80094d4:	681b      	ldr	r3, [r3, #0]
 80094d6:	689b      	ldr	r3, [r3, #8]
 80094d8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80094dc:	2b80      	cmp	r3, #128	; 0x80
 80094de:	d0f2      	beq.n	80094c6 <SPI_EndRxTxTransaction+0x52>
 80094e0:	e000      	b.n	80094e4 <SPI_EndRxTxTransaction+0x70>
 80094e2:	bf00      	nop
 80094e4:	2300      	movs	r3, #0
 80094e6:	4618      	mov	r0, r3
 80094e8:	3718      	adds	r7, #24
 80094ea:	46bd      	mov	sp, r7
 80094ec:	bd80      	pop	{r7, pc}
 80094ee:	bf00      	nop
 80094f0:	20000134 	.word	0x20000134
 80094f4:	165e9f81 	.word	0x165e9f81

080094f8 <HAL_TIM_Base_Init>:
 80094f8:	b580      	push	{r7, lr}
 80094fa:	b082      	sub	sp, #8
 80094fc:	af00      	add	r7, sp, #0
 80094fe:	6078      	str	r0, [r7, #4]
 8009500:	687b      	ldr	r3, [r7, #4]
 8009502:	2b00      	cmp	r3, #0
 8009504:	d101      	bne.n	800950a <HAL_TIM_Base_Init+0x12>
 8009506:	2301      	movs	r3, #1
 8009508:	e041      	b.n	800958e <HAL_TIM_Base_Init+0x96>
 800950a:	687b      	ldr	r3, [r7, #4]
 800950c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009510:	b2db      	uxtb	r3, r3
 8009512:	2b00      	cmp	r3, #0
 8009514:	d106      	bne.n	8009524 <HAL_TIM_Base_Init+0x2c>
 8009516:	687b      	ldr	r3, [r7, #4]
 8009518:	2200      	movs	r2, #0
 800951a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800951e:	6878      	ldr	r0, [r7, #4]
 8009520:	f7fb f864 	bl	80045ec <HAL_TIM_Base_MspInit>
 8009524:	687b      	ldr	r3, [r7, #4]
 8009526:	2202      	movs	r2, #2
 8009528:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800952c:	687b      	ldr	r3, [r7, #4]
 800952e:	681a      	ldr	r2, [r3, #0]
 8009530:	687b      	ldr	r3, [r7, #4]
 8009532:	3304      	adds	r3, #4
 8009534:	4619      	mov	r1, r3
 8009536:	4610      	mov	r0, r2
 8009538:	f000 fcae 	bl	8009e98 <TIM_Base_SetConfig>
 800953c:	687b      	ldr	r3, [r7, #4]
 800953e:	2201      	movs	r2, #1
 8009540:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8009544:	687b      	ldr	r3, [r7, #4]
 8009546:	2201      	movs	r2, #1
 8009548:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800954c:	687b      	ldr	r3, [r7, #4]
 800954e:	2201      	movs	r2, #1
 8009550:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8009554:	687b      	ldr	r3, [r7, #4]
 8009556:	2201      	movs	r2, #1
 8009558:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800955c:	687b      	ldr	r3, [r7, #4]
 800955e:	2201      	movs	r2, #1
 8009560:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009564:	687b      	ldr	r3, [r7, #4]
 8009566:	2201      	movs	r2, #1
 8009568:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800956c:	687b      	ldr	r3, [r7, #4]
 800956e:	2201      	movs	r2, #1
 8009570:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8009574:	687b      	ldr	r3, [r7, #4]
 8009576:	2201      	movs	r2, #1
 8009578:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800957c:	687b      	ldr	r3, [r7, #4]
 800957e:	2201      	movs	r2, #1
 8009580:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8009584:	687b      	ldr	r3, [r7, #4]
 8009586:	2201      	movs	r2, #1
 8009588:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800958c:	2300      	movs	r3, #0
 800958e:	4618      	mov	r0, r3
 8009590:	3708      	adds	r7, #8
 8009592:	46bd      	mov	sp, r7
 8009594:	bd80      	pop	{r7, pc}
	...

08009598 <HAL_TIM_Base_Start>:
 8009598:	b480      	push	{r7}
 800959a:	b085      	sub	sp, #20
 800959c:	af00      	add	r7, sp, #0
 800959e:	6078      	str	r0, [r7, #4]
 80095a0:	687b      	ldr	r3, [r7, #4]
 80095a2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80095a6:	b2db      	uxtb	r3, r3
 80095a8:	2b01      	cmp	r3, #1
 80095aa:	d001      	beq.n	80095b0 <HAL_TIM_Base_Start+0x18>
 80095ac:	2301      	movs	r3, #1
 80095ae:	e03c      	b.n	800962a <HAL_TIM_Base_Start+0x92>
 80095b0:	687b      	ldr	r3, [r7, #4]
 80095b2:	2202      	movs	r2, #2
 80095b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80095b8:	687b      	ldr	r3, [r7, #4]
 80095ba:	681b      	ldr	r3, [r3, #0]
 80095bc:	4a1e      	ldr	r2, [pc, #120]	; (8009638 <HAL_TIM_Base_Start+0xa0>)
 80095be:	4293      	cmp	r3, r2
 80095c0:	d018      	beq.n	80095f4 <HAL_TIM_Base_Start+0x5c>
 80095c2:	687b      	ldr	r3, [r7, #4]
 80095c4:	681b      	ldr	r3, [r3, #0]
 80095c6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80095ca:	d013      	beq.n	80095f4 <HAL_TIM_Base_Start+0x5c>
 80095cc:	687b      	ldr	r3, [r7, #4]
 80095ce:	681b      	ldr	r3, [r3, #0]
 80095d0:	4a1a      	ldr	r2, [pc, #104]	; (800963c <HAL_TIM_Base_Start+0xa4>)
 80095d2:	4293      	cmp	r3, r2
 80095d4:	d00e      	beq.n	80095f4 <HAL_TIM_Base_Start+0x5c>
 80095d6:	687b      	ldr	r3, [r7, #4]
 80095d8:	681b      	ldr	r3, [r3, #0]
 80095da:	4a19      	ldr	r2, [pc, #100]	; (8009640 <HAL_TIM_Base_Start+0xa8>)
 80095dc:	4293      	cmp	r3, r2
 80095de:	d009      	beq.n	80095f4 <HAL_TIM_Base_Start+0x5c>
 80095e0:	687b      	ldr	r3, [r7, #4]
 80095e2:	681b      	ldr	r3, [r3, #0]
 80095e4:	4a17      	ldr	r2, [pc, #92]	; (8009644 <HAL_TIM_Base_Start+0xac>)
 80095e6:	4293      	cmp	r3, r2
 80095e8:	d004      	beq.n	80095f4 <HAL_TIM_Base_Start+0x5c>
 80095ea:	687b      	ldr	r3, [r7, #4]
 80095ec:	681b      	ldr	r3, [r3, #0]
 80095ee:	4a16      	ldr	r2, [pc, #88]	; (8009648 <HAL_TIM_Base_Start+0xb0>)
 80095f0:	4293      	cmp	r3, r2
 80095f2:	d111      	bne.n	8009618 <HAL_TIM_Base_Start+0x80>
 80095f4:	687b      	ldr	r3, [r7, #4]
 80095f6:	681b      	ldr	r3, [r3, #0]
 80095f8:	689b      	ldr	r3, [r3, #8]
 80095fa:	f003 0307 	and.w	r3, r3, #7
 80095fe:	60fb      	str	r3, [r7, #12]
 8009600:	68fb      	ldr	r3, [r7, #12]
 8009602:	2b06      	cmp	r3, #6
 8009604:	d010      	beq.n	8009628 <HAL_TIM_Base_Start+0x90>
 8009606:	687b      	ldr	r3, [r7, #4]
 8009608:	681b      	ldr	r3, [r3, #0]
 800960a:	681a      	ldr	r2, [r3, #0]
 800960c:	687b      	ldr	r3, [r7, #4]
 800960e:	681b      	ldr	r3, [r3, #0]
 8009610:	f042 0201 	orr.w	r2, r2, #1
 8009614:	601a      	str	r2, [r3, #0]
 8009616:	e007      	b.n	8009628 <HAL_TIM_Base_Start+0x90>
 8009618:	687b      	ldr	r3, [r7, #4]
 800961a:	681b      	ldr	r3, [r3, #0]
 800961c:	681a      	ldr	r2, [r3, #0]
 800961e:	687b      	ldr	r3, [r7, #4]
 8009620:	681b      	ldr	r3, [r3, #0]
 8009622:	f042 0201 	orr.w	r2, r2, #1
 8009626:	601a      	str	r2, [r3, #0]
 8009628:	2300      	movs	r3, #0
 800962a:	4618      	mov	r0, r3
 800962c:	3714      	adds	r7, #20
 800962e:	46bd      	mov	sp, r7
 8009630:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009634:	4770      	bx	lr
 8009636:	bf00      	nop
 8009638:	40010000 	.word	0x40010000
 800963c:	40000400 	.word	0x40000400
 8009640:	40000800 	.word	0x40000800
 8009644:	40000c00 	.word	0x40000c00
 8009648:	40014000 	.word	0x40014000

0800964c <HAL_TIM_Base_Start_IT>:
 800964c:	b480      	push	{r7}
 800964e:	b085      	sub	sp, #20
 8009650:	af00      	add	r7, sp, #0
 8009652:	6078      	str	r0, [r7, #4]
 8009654:	687b      	ldr	r3, [r7, #4]
 8009656:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800965a:	b2db      	uxtb	r3, r3
 800965c:	2b01      	cmp	r3, #1
 800965e:	d001      	beq.n	8009664 <HAL_TIM_Base_Start_IT+0x18>
 8009660:	2301      	movs	r3, #1
 8009662:	e044      	b.n	80096ee <HAL_TIM_Base_Start_IT+0xa2>
 8009664:	687b      	ldr	r3, [r7, #4]
 8009666:	2202      	movs	r2, #2
 8009668:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800966c:	687b      	ldr	r3, [r7, #4]
 800966e:	681b      	ldr	r3, [r3, #0]
 8009670:	68da      	ldr	r2, [r3, #12]
 8009672:	687b      	ldr	r3, [r7, #4]
 8009674:	681b      	ldr	r3, [r3, #0]
 8009676:	f042 0201 	orr.w	r2, r2, #1
 800967a:	60da      	str	r2, [r3, #12]
 800967c:	687b      	ldr	r3, [r7, #4]
 800967e:	681b      	ldr	r3, [r3, #0]
 8009680:	4a1e      	ldr	r2, [pc, #120]	; (80096fc <HAL_TIM_Base_Start_IT+0xb0>)
 8009682:	4293      	cmp	r3, r2
 8009684:	d018      	beq.n	80096b8 <HAL_TIM_Base_Start_IT+0x6c>
 8009686:	687b      	ldr	r3, [r7, #4]
 8009688:	681b      	ldr	r3, [r3, #0]
 800968a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800968e:	d013      	beq.n	80096b8 <HAL_TIM_Base_Start_IT+0x6c>
 8009690:	687b      	ldr	r3, [r7, #4]
 8009692:	681b      	ldr	r3, [r3, #0]
 8009694:	4a1a      	ldr	r2, [pc, #104]	; (8009700 <HAL_TIM_Base_Start_IT+0xb4>)
 8009696:	4293      	cmp	r3, r2
 8009698:	d00e      	beq.n	80096b8 <HAL_TIM_Base_Start_IT+0x6c>
 800969a:	687b      	ldr	r3, [r7, #4]
 800969c:	681b      	ldr	r3, [r3, #0]
 800969e:	4a19      	ldr	r2, [pc, #100]	; (8009704 <HAL_TIM_Base_Start_IT+0xb8>)
 80096a0:	4293      	cmp	r3, r2
 80096a2:	d009      	beq.n	80096b8 <HAL_TIM_Base_Start_IT+0x6c>
 80096a4:	687b      	ldr	r3, [r7, #4]
 80096a6:	681b      	ldr	r3, [r3, #0]
 80096a8:	4a17      	ldr	r2, [pc, #92]	; (8009708 <HAL_TIM_Base_Start_IT+0xbc>)
 80096aa:	4293      	cmp	r3, r2
 80096ac:	d004      	beq.n	80096b8 <HAL_TIM_Base_Start_IT+0x6c>
 80096ae:	687b      	ldr	r3, [r7, #4]
 80096b0:	681b      	ldr	r3, [r3, #0]
 80096b2:	4a16      	ldr	r2, [pc, #88]	; (800970c <HAL_TIM_Base_Start_IT+0xc0>)
 80096b4:	4293      	cmp	r3, r2
 80096b6:	d111      	bne.n	80096dc <HAL_TIM_Base_Start_IT+0x90>
 80096b8:	687b      	ldr	r3, [r7, #4]
 80096ba:	681b      	ldr	r3, [r3, #0]
 80096bc:	689b      	ldr	r3, [r3, #8]
 80096be:	f003 0307 	and.w	r3, r3, #7
 80096c2:	60fb      	str	r3, [r7, #12]
 80096c4:	68fb      	ldr	r3, [r7, #12]
 80096c6:	2b06      	cmp	r3, #6
 80096c8:	d010      	beq.n	80096ec <HAL_TIM_Base_Start_IT+0xa0>
 80096ca:	687b      	ldr	r3, [r7, #4]
 80096cc:	681b      	ldr	r3, [r3, #0]
 80096ce:	681a      	ldr	r2, [r3, #0]
 80096d0:	687b      	ldr	r3, [r7, #4]
 80096d2:	681b      	ldr	r3, [r3, #0]
 80096d4:	f042 0201 	orr.w	r2, r2, #1
 80096d8:	601a      	str	r2, [r3, #0]
 80096da:	e007      	b.n	80096ec <HAL_TIM_Base_Start_IT+0xa0>
 80096dc:	687b      	ldr	r3, [r7, #4]
 80096de:	681b      	ldr	r3, [r3, #0]
 80096e0:	681a      	ldr	r2, [r3, #0]
 80096e2:	687b      	ldr	r3, [r7, #4]
 80096e4:	681b      	ldr	r3, [r3, #0]
 80096e6:	f042 0201 	orr.w	r2, r2, #1
 80096ea:	601a      	str	r2, [r3, #0]
 80096ec:	2300      	movs	r3, #0
 80096ee:	4618      	mov	r0, r3
 80096f0:	3714      	adds	r7, #20
 80096f2:	46bd      	mov	sp, r7
 80096f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096f8:	4770      	bx	lr
 80096fa:	bf00      	nop
 80096fc:	40010000 	.word	0x40010000
 8009700:	40000400 	.word	0x40000400
 8009704:	40000800 	.word	0x40000800
 8009708:	40000c00 	.word	0x40000c00
 800970c:	40014000 	.word	0x40014000

08009710 <HAL_TIM_PWM_Init>:
 8009710:	b580      	push	{r7, lr}
 8009712:	b082      	sub	sp, #8
 8009714:	af00      	add	r7, sp, #0
 8009716:	6078      	str	r0, [r7, #4]
 8009718:	687b      	ldr	r3, [r7, #4]
 800971a:	2b00      	cmp	r3, #0
 800971c:	d101      	bne.n	8009722 <HAL_TIM_PWM_Init+0x12>
 800971e:	2301      	movs	r3, #1
 8009720:	e041      	b.n	80097a6 <HAL_TIM_PWM_Init+0x96>
 8009722:	687b      	ldr	r3, [r7, #4]
 8009724:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009728:	b2db      	uxtb	r3, r3
 800972a:	2b00      	cmp	r3, #0
 800972c:	d106      	bne.n	800973c <HAL_TIM_PWM_Init+0x2c>
 800972e:	687b      	ldr	r3, [r7, #4]
 8009730:	2200      	movs	r2, #0
 8009732:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009736:	6878      	ldr	r0, [r7, #4]
 8009738:	f000 f839 	bl	80097ae <HAL_TIM_PWM_MspInit>
 800973c:	687b      	ldr	r3, [r7, #4]
 800973e:	2202      	movs	r2, #2
 8009740:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009744:	687b      	ldr	r3, [r7, #4]
 8009746:	681a      	ldr	r2, [r3, #0]
 8009748:	687b      	ldr	r3, [r7, #4]
 800974a:	3304      	adds	r3, #4
 800974c:	4619      	mov	r1, r3
 800974e:	4610      	mov	r0, r2
 8009750:	f000 fba2 	bl	8009e98 <TIM_Base_SetConfig>
 8009754:	687b      	ldr	r3, [r7, #4]
 8009756:	2201      	movs	r2, #1
 8009758:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800975c:	687b      	ldr	r3, [r7, #4]
 800975e:	2201      	movs	r2, #1
 8009760:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009764:	687b      	ldr	r3, [r7, #4]
 8009766:	2201      	movs	r2, #1
 8009768:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800976c:	687b      	ldr	r3, [r7, #4]
 800976e:	2201      	movs	r2, #1
 8009770:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009774:	687b      	ldr	r3, [r7, #4]
 8009776:	2201      	movs	r2, #1
 8009778:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800977c:	687b      	ldr	r3, [r7, #4]
 800977e:	2201      	movs	r2, #1
 8009780:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009784:	687b      	ldr	r3, [r7, #4]
 8009786:	2201      	movs	r2, #1
 8009788:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800978c:	687b      	ldr	r3, [r7, #4]
 800978e:	2201      	movs	r2, #1
 8009790:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8009794:	687b      	ldr	r3, [r7, #4]
 8009796:	2201      	movs	r2, #1
 8009798:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800979c:	687b      	ldr	r3, [r7, #4]
 800979e:	2201      	movs	r2, #1
 80097a0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80097a4:	2300      	movs	r3, #0
 80097a6:	4618      	mov	r0, r3
 80097a8:	3708      	adds	r7, #8
 80097aa:	46bd      	mov	sp, r7
 80097ac:	bd80      	pop	{r7, pc}

080097ae <HAL_TIM_PWM_MspInit>:
 80097ae:	b480      	push	{r7}
 80097b0:	b083      	sub	sp, #12
 80097b2:	af00      	add	r7, sp, #0
 80097b4:	6078      	str	r0, [r7, #4]
 80097b6:	bf00      	nop
 80097b8:	370c      	adds	r7, #12
 80097ba:	46bd      	mov	sp, r7
 80097bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097c0:	4770      	bx	lr
	...

080097c4 <HAL_TIM_PWM_Start>:
 80097c4:	b580      	push	{r7, lr}
 80097c6:	b084      	sub	sp, #16
 80097c8:	af00      	add	r7, sp, #0
 80097ca:	6078      	str	r0, [r7, #4]
 80097cc:	6039      	str	r1, [r7, #0]
 80097ce:	683b      	ldr	r3, [r7, #0]
 80097d0:	2b00      	cmp	r3, #0
 80097d2:	d109      	bne.n	80097e8 <HAL_TIM_PWM_Start+0x24>
 80097d4:	687b      	ldr	r3, [r7, #4]
 80097d6:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80097da:	b2db      	uxtb	r3, r3
 80097dc:	2b01      	cmp	r3, #1
 80097de:	bf14      	ite	ne
 80097e0:	2301      	movne	r3, #1
 80097e2:	2300      	moveq	r3, #0
 80097e4:	b2db      	uxtb	r3, r3
 80097e6:	e022      	b.n	800982e <HAL_TIM_PWM_Start+0x6a>
 80097e8:	683b      	ldr	r3, [r7, #0]
 80097ea:	2b04      	cmp	r3, #4
 80097ec:	d109      	bne.n	8009802 <HAL_TIM_PWM_Start+0x3e>
 80097ee:	687b      	ldr	r3, [r7, #4]
 80097f0:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 80097f4:	b2db      	uxtb	r3, r3
 80097f6:	2b01      	cmp	r3, #1
 80097f8:	bf14      	ite	ne
 80097fa:	2301      	movne	r3, #1
 80097fc:	2300      	moveq	r3, #0
 80097fe:	b2db      	uxtb	r3, r3
 8009800:	e015      	b.n	800982e <HAL_TIM_PWM_Start+0x6a>
 8009802:	683b      	ldr	r3, [r7, #0]
 8009804:	2b08      	cmp	r3, #8
 8009806:	d109      	bne.n	800981c <HAL_TIM_PWM_Start+0x58>
 8009808:	687b      	ldr	r3, [r7, #4]
 800980a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800980e:	b2db      	uxtb	r3, r3
 8009810:	2b01      	cmp	r3, #1
 8009812:	bf14      	ite	ne
 8009814:	2301      	movne	r3, #1
 8009816:	2300      	moveq	r3, #0
 8009818:	b2db      	uxtb	r3, r3
 800981a:	e008      	b.n	800982e <HAL_TIM_PWM_Start+0x6a>
 800981c:	687b      	ldr	r3, [r7, #4]
 800981e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8009822:	b2db      	uxtb	r3, r3
 8009824:	2b01      	cmp	r3, #1
 8009826:	bf14      	ite	ne
 8009828:	2301      	movne	r3, #1
 800982a:	2300      	moveq	r3, #0
 800982c:	b2db      	uxtb	r3, r3
 800982e:	2b00      	cmp	r3, #0
 8009830:	d001      	beq.n	8009836 <HAL_TIM_PWM_Start+0x72>
 8009832:	2301      	movs	r3, #1
 8009834:	e068      	b.n	8009908 <HAL_TIM_PWM_Start+0x144>
 8009836:	683b      	ldr	r3, [r7, #0]
 8009838:	2b00      	cmp	r3, #0
 800983a:	d104      	bne.n	8009846 <HAL_TIM_PWM_Start+0x82>
 800983c:	687b      	ldr	r3, [r7, #4]
 800983e:	2202      	movs	r2, #2
 8009840:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009844:	e013      	b.n	800986e <HAL_TIM_PWM_Start+0xaa>
 8009846:	683b      	ldr	r3, [r7, #0]
 8009848:	2b04      	cmp	r3, #4
 800984a:	d104      	bne.n	8009856 <HAL_TIM_PWM_Start+0x92>
 800984c:	687b      	ldr	r3, [r7, #4]
 800984e:	2202      	movs	r2, #2
 8009850:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8009854:	e00b      	b.n	800986e <HAL_TIM_PWM_Start+0xaa>
 8009856:	683b      	ldr	r3, [r7, #0]
 8009858:	2b08      	cmp	r3, #8
 800985a:	d104      	bne.n	8009866 <HAL_TIM_PWM_Start+0xa2>
 800985c:	687b      	ldr	r3, [r7, #4]
 800985e:	2202      	movs	r2, #2
 8009860:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009864:	e003      	b.n	800986e <HAL_TIM_PWM_Start+0xaa>
 8009866:	687b      	ldr	r3, [r7, #4]
 8009868:	2202      	movs	r2, #2
 800986a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800986e:	687b      	ldr	r3, [r7, #4]
 8009870:	681b      	ldr	r3, [r3, #0]
 8009872:	2201      	movs	r2, #1
 8009874:	6839      	ldr	r1, [r7, #0]
 8009876:	4618      	mov	r0, r3
 8009878:	f000 fdb4 	bl	800a3e4 <TIM_CCxChannelCmd>
 800987c:	687b      	ldr	r3, [r7, #4]
 800987e:	681b      	ldr	r3, [r3, #0]
 8009880:	4a23      	ldr	r2, [pc, #140]	; (8009910 <HAL_TIM_PWM_Start+0x14c>)
 8009882:	4293      	cmp	r3, r2
 8009884:	d107      	bne.n	8009896 <HAL_TIM_PWM_Start+0xd2>
 8009886:	687b      	ldr	r3, [r7, #4]
 8009888:	681b      	ldr	r3, [r3, #0]
 800988a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800988c:	687b      	ldr	r3, [r7, #4]
 800988e:	681b      	ldr	r3, [r3, #0]
 8009890:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009894:	645a      	str	r2, [r3, #68]	; 0x44
 8009896:	687b      	ldr	r3, [r7, #4]
 8009898:	681b      	ldr	r3, [r3, #0]
 800989a:	4a1d      	ldr	r2, [pc, #116]	; (8009910 <HAL_TIM_PWM_Start+0x14c>)
 800989c:	4293      	cmp	r3, r2
 800989e:	d018      	beq.n	80098d2 <HAL_TIM_PWM_Start+0x10e>
 80098a0:	687b      	ldr	r3, [r7, #4]
 80098a2:	681b      	ldr	r3, [r3, #0]
 80098a4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80098a8:	d013      	beq.n	80098d2 <HAL_TIM_PWM_Start+0x10e>
 80098aa:	687b      	ldr	r3, [r7, #4]
 80098ac:	681b      	ldr	r3, [r3, #0]
 80098ae:	4a19      	ldr	r2, [pc, #100]	; (8009914 <HAL_TIM_PWM_Start+0x150>)
 80098b0:	4293      	cmp	r3, r2
 80098b2:	d00e      	beq.n	80098d2 <HAL_TIM_PWM_Start+0x10e>
 80098b4:	687b      	ldr	r3, [r7, #4]
 80098b6:	681b      	ldr	r3, [r3, #0]
 80098b8:	4a17      	ldr	r2, [pc, #92]	; (8009918 <HAL_TIM_PWM_Start+0x154>)
 80098ba:	4293      	cmp	r3, r2
 80098bc:	d009      	beq.n	80098d2 <HAL_TIM_PWM_Start+0x10e>
 80098be:	687b      	ldr	r3, [r7, #4]
 80098c0:	681b      	ldr	r3, [r3, #0]
 80098c2:	4a16      	ldr	r2, [pc, #88]	; (800991c <HAL_TIM_PWM_Start+0x158>)
 80098c4:	4293      	cmp	r3, r2
 80098c6:	d004      	beq.n	80098d2 <HAL_TIM_PWM_Start+0x10e>
 80098c8:	687b      	ldr	r3, [r7, #4]
 80098ca:	681b      	ldr	r3, [r3, #0]
 80098cc:	4a14      	ldr	r2, [pc, #80]	; (8009920 <HAL_TIM_PWM_Start+0x15c>)
 80098ce:	4293      	cmp	r3, r2
 80098d0:	d111      	bne.n	80098f6 <HAL_TIM_PWM_Start+0x132>
 80098d2:	687b      	ldr	r3, [r7, #4]
 80098d4:	681b      	ldr	r3, [r3, #0]
 80098d6:	689b      	ldr	r3, [r3, #8]
 80098d8:	f003 0307 	and.w	r3, r3, #7
 80098dc:	60fb      	str	r3, [r7, #12]
 80098de:	68fb      	ldr	r3, [r7, #12]
 80098e0:	2b06      	cmp	r3, #6
 80098e2:	d010      	beq.n	8009906 <HAL_TIM_PWM_Start+0x142>
 80098e4:	687b      	ldr	r3, [r7, #4]
 80098e6:	681b      	ldr	r3, [r3, #0]
 80098e8:	681a      	ldr	r2, [r3, #0]
 80098ea:	687b      	ldr	r3, [r7, #4]
 80098ec:	681b      	ldr	r3, [r3, #0]
 80098ee:	f042 0201 	orr.w	r2, r2, #1
 80098f2:	601a      	str	r2, [r3, #0]
 80098f4:	e007      	b.n	8009906 <HAL_TIM_PWM_Start+0x142>
 80098f6:	687b      	ldr	r3, [r7, #4]
 80098f8:	681b      	ldr	r3, [r3, #0]
 80098fa:	681a      	ldr	r2, [r3, #0]
 80098fc:	687b      	ldr	r3, [r7, #4]
 80098fe:	681b      	ldr	r3, [r3, #0]
 8009900:	f042 0201 	orr.w	r2, r2, #1
 8009904:	601a      	str	r2, [r3, #0]
 8009906:	2300      	movs	r3, #0
 8009908:	4618      	mov	r0, r3
 800990a:	3710      	adds	r7, #16
 800990c:	46bd      	mov	sp, r7
 800990e:	bd80      	pop	{r7, pc}
 8009910:	40010000 	.word	0x40010000
 8009914:	40000400 	.word	0x40000400
 8009918:	40000800 	.word	0x40000800
 800991c:	40000c00 	.word	0x40000c00
 8009920:	40014000 	.word	0x40014000

08009924 <HAL_TIM_IRQHandler>:
 8009924:	b580      	push	{r7, lr}
 8009926:	b082      	sub	sp, #8
 8009928:	af00      	add	r7, sp, #0
 800992a:	6078      	str	r0, [r7, #4]
 800992c:	687b      	ldr	r3, [r7, #4]
 800992e:	681b      	ldr	r3, [r3, #0]
 8009930:	691b      	ldr	r3, [r3, #16]
 8009932:	f003 0302 	and.w	r3, r3, #2
 8009936:	2b02      	cmp	r3, #2
 8009938:	d122      	bne.n	8009980 <HAL_TIM_IRQHandler+0x5c>
 800993a:	687b      	ldr	r3, [r7, #4]
 800993c:	681b      	ldr	r3, [r3, #0]
 800993e:	68db      	ldr	r3, [r3, #12]
 8009940:	f003 0302 	and.w	r3, r3, #2
 8009944:	2b02      	cmp	r3, #2
 8009946:	d11b      	bne.n	8009980 <HAL_TIM_IRQHandler+0x5c>
 8009948:	687b      	ldr	r3, [r7, #4]
 800994a:	681b      	ldr	r3, [r3, #0]
 800994c:	f06f 0202 	mvn.w	r2, #2
 8009950:	611a      	str	r2, [r3, #16]
 8009952:	687b      	ldr	r3, [r7, #4]
 8009954:	2201      	movs	r2, #1
 8009956:	771a      	strb	r2, [r3, #28]
 8009958:	687b      	ldr	r3, [r7, #4]
 800995a:	681b      	ldr	r3, [r3, #0]
 800995c:	699b      	ldr	r3, [r3, #24]
 800995e:	f003 0303 	and.w	r3, r3, #3
 8009962:	2b00      	cmp	r3, #0
 8009964:	d003      	beq.n	800996e <HAL_TIM_IRQHandler+0x4a>
 8009966:	6878      	ldr	r0, [r7, #4]
 8009968:	f000 fa77 	bl	8009e5a <HAL_TIM_IC_CaptureCallback>
 800996c:	e005      	b.n	800997a <HAL_TIM_IRQHandler+0x56>
 800996e:	6878      	ldr	r0, [r7, #4]
 8009970:	f000 fa69 	bl	8009e46 <HAL_TIM_OC_DelayElapsedCallback>
 8009974:	6878      	ldr	r0, [r7, #4]
 8009976:	f000 fa7a 	bl	8009e6e <HAL_TIM_PWM_PulseFinishedCallback>
 800997a:	687b      	ldr	r3, [r7, #4]
 800997c:	2200      	movs	r2, #0
 800997e:	771a      	strb	r2, [r3, #28]
 8009980:	687b      	ldr	r3, [r7, #4]
 8009982:	681b      	ldr	r3, [r3, #0]
 8009984:	691b      	ldr	r3, [r3, #16]
 8009986:	f003 0304 	and.w	r3, r3, #4
 800998a:	2b04      	cmp	r3, #4
 800998c:	d122      	bne.n	80099d4 <HAL_TIM_IRQHandler+0xb0>
 800998e:	687b      	ldr	r3, [r7, #4]
 8009990:	681b      	ldr	r3, [r3, #0]
 8009992:	68db      	ldr	r3, [r3, #12]
 8009994:	f003 0304 	and.w	r3, r3, #4
 8009998:	2b04      	cmp	r3, #4
 800999a:	d11b      	bne.n	80099d4 <HAL_TIM_IRQHandler+0xb0>
 800999c:	687b      	ldr	r3, [r7, #4]
 800999e:	681b      	ldr	r3, [r3, #0]
 80099a0:	f06f 0204 	mvn.w	r2, #4
 80099a4:	611a      	str	r2, [r3, #16]
 80099a6:	687b      	ldr	r3, [r7, #4]
 80099a8:	2202      	movs	r2, #2
 80099aa:	771a      	strb	r2, [r3, #28]
 80099ac:	687b      	ldr	r3, [r7, #4]
 80099ae:	681b      	ldr	r3, [r3, #0]
 80099b0:	699b      	ldr	r3, [r3, #24]
 80099b2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80099b6:	2b00      	cmp	r3, #0
 80099b8:	d003      	beq.n	80099c2 <HAL_TIM_IRQHandler+0x9e>
 80099ba:	6878      	ldr	r0, [r7, #4]
 80099bc:	f000 fa4d 	bl	8009e5a <HAL_TIM_IC_CaptureCallback>
 80099c0:	e005      	b.n	80099ce <HAL_TIM_IRQHandler+0xaa>
 80099c2:	6878      	ldr	r0, [r7, #4]
 80099c4:	f000 fa3f 	bl	8009e46 <HAL_TIM_OC_DelayElapsedCallback>
 80099c8:	6878      	ldr	r0, [r7, #4]
 80099ca:	f000 fa50 	bl	8009e6e <HAL_TIM_PWM_PulseFinishedCallback>
 80099ce:	687b      	ldr	r3, [r7, #4]
 80099d0:	2200      	movs	r2, #0
 80099d2:	771a      	strb	r2, [r3, #28]
 80099d4:	687b      	ldr	r3, [r7, #4]
 80099d6:	681b      	ldr	r3, [r3, #0]
 80099d8:	691b      	ldr	r3, [r3, #16]
 80099da:	f003 0308 	and.w	r3, r3, #8
 80099de:	2b08      	cmp	r3, #8
 80099e0:	d122      	bne.n	8009a28 <HAL_TIM_IRQHandler+0x104>
 80099e2:	687b      	ldr	r3, [r7, #4]
 80099e4:	681b      	ldr	r3, [r3, #0]
 80099e6:	68db      	ldr	r3, [r3, #12]
 80099e8:	f003 0308 	and.w	r3, r3, #8
 80099ec:	2b08      	cmp	r3, #8
 80099ee:	d11b      	bne.n	8009a28 <HAL_TIM_IRQHandler+0x104>
 80099f0:	687b      	ldr	r3, [r7, #4]
 80099f2:	681b      	ldr	r3, [r3, #0]
 80099f4:	f06f 0208 	mvn.w	r2, #8
 80099f8:	611a      	str	r2, [r3, #16]
 80099fa:	687b      	ldr	r3, [r7, #4]
 80099fc:	2204      	movs	r2, #4
 80099fe:	771a      	strb	r2, [r3, #28]
 8009a00:	687b      	ldr	r3, [r7, #4]
 8009a02:	681b      	ldr	r3, [r3, #0]
 8009a04:	69db      	ldr	r3, [r3, #28]
 8009a06:	f003 0303 	and.w	r3, r3, #3
 8009a0a:	2b00      	cmp	r3, #0
 8009a0c:	d003      	beq.n	8009a16 <HAL_TIM_IRQHandler+0xf2>
 8009a0e:	6878      	ldr	r0, [r7, #4]
 8009a10:	f000 fa23 	bl	8009e5a <HAL_TIM_IC_CaptureCallback>
 8009a14:	e005      	b.n	8009a22 <HAL_TIM_IRQHandler+0xfe>
 8009a16:	6878      	ldr	r0, [r7, #4]
 8009a18:	f000 fa15 	bl	8009e46 <HAL_TIM_OC_DelayElapsedCallback>
 8009a1c:	6878      	ldr	r0, [r7, #4]
 8009a1e:	f000 fa26 	bl	8009e6e <HAL_TIM_PWM_PulseFinishedCallback>
 8009a22:	687b      	ldr	r3, [r7, #4]
 8009a24:	2200      	movs	r2, #0
 8009a26:	771a      	strb	r2, [r3, #28]
 8009a28:	687b      	ldr	r3, [r7, #4]
 8009a2a:	681b      	ldr	r3, [r3, #0]
 8009a2c:	691b      	ldr	r3, [r3, #16]
 8009a2e:	f003 0310 	and.w	r3, r3, #16
 8009a32:	2b10      	cmp	r3, #16
 8009a34:	d122      	bne.n	8009a7c <HAL_TIM_IRQHandler+0x158>
 8009a36:	687b      	ldr	r3, [r7, #4]
 8009a38:	681b      	ldr	r3, [r3, #0]
 8009a3a:	68db      	ldr	r3, [r3, #12]
 8009a3c:	f003 0310 	and.w	r3, r3, #16
 8009a40:	2b10      	cmp	r3, #16
 8009a42:	d11b      	bne.n	8009a7c <HAL_TIM_IRQHandler+0x158>
 8009a44:	687b      	ldr	r3, [r7, #4]
 8009a46:	681b      	ldr	r3, [r3, #0]
 8009a48:	f06f 0210 	mvn.w	r2, #16
 8009a4c:	611a      	str	r2, [r3, #16]
 8009a4e:	687b      	ldr	r3, [r7, #4]
 8009a50:	2208      	movs	r2, #8
 8009a52:	771a      	strb	r2, [r3, #28]
 8009a54:	687b      	ldr	r3, [r7, #4]
 8009a56:	681b      	ldr	r3, [r3, #0]
 8009a58:	69db      	ldr	r3, [r3, #28]
 8009a5a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009a5e:	2b00      	cmp	r3, #0
 8009a60:	d003      	beq.n	8009a6a <HAL_TIM_IRQHandler+0x146>
 8009a62:	6878      	ldr	r0, [r7, #4]
 8009a64:	f000 f9f9 	bl	8009e5a <HAL_TIM_IC_CaptureCallback>
 8009a68:	e005      	b.n	8009a76 <HAL_TIM_IRQHandler+0x152>
 8009a6a:	6878      	ldr	r0, [r7, #4]
 8009a6c:	f000 f9eb 	bl	8009e46 <HAL_TIM_OC_DelayElapsedCallback>
 8009a70:	6878      	ldr	r0, [r7, #4]
 8009a72:	f000 f9fc 	bl	8009e6e <HAL_TIM_PWM_PulseFinishedCallback>
 8009a76:	687b      	ldr	r3, [r7, #4]
 8009a78:	2200      	movs	r2, #0
 8009a7a:	771a      	strb	r2, [r3, #28]
 8009a7c:	687b      	ldr	r3, [r7, #4]
 8009a7e:	681b      	ldr	r3, [r3, #0]
 8009a80:	691b      	ldr	r3, [r3, #16]
 8009a82:	f003 0301 	and.w	r3, r3, #1
 8009a86:	2b01      	cmp	r3, #1
 8009a88:	d10e      	bne.n	8009aa8 <HAL_TIM_IRQHandler+0x184>
 8009a8a:	687b      	ldr	r3, [r7, #4]
 8009a8c:	681b      	ldr	r3, [r3, #0]
 8009a8e:	68db      	ldr	r3, [r3, #12]
 8009a90:	f003 0301 	and.w	r3, r3, #1
 8009a94:	2b01      	cmp	r3, #1
 8009a96:	d107      	bne.n	8009aa8 <HAL_TIM_IRQHandler+0x184>
 8009a98:	687b      	ldr	r3, [r7, #4]
 8009a9a:	681b      	ldr	r3, [r3, #0]
 8009a9c:	f06f 0201 	mvn.w	r2, #1
 8009aa0:	611a      	str	r2, [r3, #16]
 8009aa2:	6878      	ldr	r0, [r7, #4]
 8009aa4:	f7f9 fe36 	bl	8003714 <HAL_TIM_PeriodElapsedCallback>
 8009aa8:	687b      	ldr	r3, [r7, #4]
 8009aaa:	681b      	ldr	r3, [r3, #0]
 8009aac:	691b      	ldr	r3, [r3, #16]
 8009aae:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009ab2:	2b80      	cmp	r3, #128	; 0x80
 8009ab4:	d10e      	bne.n	8009ad4 <HAL_TIM_IRQHandler+0x1b0>
 8009ab6:	687b      	ldr	r3, [r7, #4]
 8009ab8:	681b      	ldr	r3, [r3, #0]
 8009aba:	68db      	ldr	r3, [r3, #12]
 8009abc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009ac0:	2b80      	cmp	r3, #128	; 0x80
 8009ac2:	d107      	bne.n	8009ad4 <HAL_TIM_IRQHandler+0x1b0>
 8009ac4:	687b      	ldr	r3, [r7, #4]
 8009ac6:	681b      	ldr	r3, [r3, #0]
 8009ac8:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8009acc:	611a      	str	r2, [r3, #16]
 8009ace:	6878      	ldr	r0, [r7, #4]
 8009ad0:	f000 fd26 	bl	800a520 <HAL_TIMEx_BreakCallback>
 8009ad4:	687b      	ldr	r3, [r7, #4]
 8009ad6:	681b      	ldr	r3, [r3, #0]
 8009ad8:	691b      	ldr	r3, [r3, #16]
 8009ada:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009ade:	2b40      	cmp	r3, #64	; 0x40
 8009ae0:	d10e      	bne.n	8009b00 <HAL_TIM_IRQHandler+0x1dc>
 8009ae2:	687b      	ldr	r3, [r7, #4]
 8009ae4:	681b      	ldr	r3, [r3, #0]
 8009ae6:	68db      	ldr	r3, [r3, #12]
 8009ae8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009aec:	2b40      	cmp	r3, #64	; 0x40
 8009aee:	d107      	bne.n	8009b00 <HAL_TIM_IRQHandler+0x1dc>
 8009af0:	687b      	ldr	r3, [r7, #4]
 8009af2:	681b      	ldr	r3, [r3, #0]
 8009af4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8009af8:	611a      	str	r2, [r3, #16]
 8009afa:	6878      	ldr	r0, [r7, #4]
 8009afc:	f000 f9c1 	bl	8009e82 <HAL_TIM_TriggerCallback>
 8009b00:	687b      	ldr	r3, [r7, #4]
 8009b02:	681b      	ldr	r3, [r3, #0]
 8009b04:	691b      	ldr	r3, [r3, #16]
 8009b06:	f003 0320 	and.w	r3, r3, #32
 8009b0a:	2b20      	cmp	r3, #32
 8009b0c:	d10e      	bne.n	8009b2c <HAL_TIM_IRQHandler+0x208>
 8009b0e:	687b      	ldr	r3, [r7, #4]
 8009b10:	681b      	ldr	r3, [r3, #0]
 8009b12:	68db      	ldr	r3, [r3, #12]
 8009b14:	f003 0320 	and.w	r3, r3, #32
 8009b18:	2b20      	cmp	r3, #32
 8009b1a:	d107      	bne.n	8009b2c <HAL_TIM_IRQHandler+0x208>
 8009b1c:	687b      	ldr	r3, [r7, #4]
 8009b1e:	681b      	ldr	r3, [r3, #0]
 8009b20:	f06f 0220 	mvn.w	r2, #32
 8009b24:	611a      	str	r2, [r3, #16]
 8009b26:	6878      	ldr	r0, [r7, #4]
 8009b28:	f000 fcf0 	bl	800a50c <HAL_TIMEx_CommutCallback>
 8009b2c:	bf00      	nop
 8009b2e:	3708      	adds	r7, #8
 8009b30:	46bd      	mov	sp, r7
 8009b32:	bd80      	pop	{r7, pc}

08009b34 <HAL_TIM_PWM_ConfigChannel>:
 8009b34:	b580      	push	{r7, lr}
 8009b36:	b086      	sub	sp, #24
 8009b38:	af00      	add	r7, sp, #0
 8009b3a:	60f8      	str	r0, [r7, #12]
 8009b3c:	60b9      	str	r1, [r7, #8]
 8009b3e:	607a      	str	r2, [r7, #4]
 8009b40:	2300      	movs	r3, #0
 8009b42:	75fb      	strb	r3, [r7, #23]
 8009b44:	68fb      	ldr	r3, [r7, #12]
 8009b46:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009b4a:	2b01      	cmp	r3, #1
 8009b4c:	d101      	bne.n	8009b52 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8009b4e:	2302      	movs	r3, #2
 8009b50:	e0ae      	b.n	8009cb0 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8009b52:	68fb      	ldr	r3, [r7, #12]
 8009b54:	2201      	movs	r2, #1
 8009b56:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009b5a:	687b      	ldr	r3, [r7, #4]
 8009b5c:	2b0c      	cmp	r3, #12
 8009b5e:	f200 809f 	bhi.w	8009ca0 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8009b62:	a201      	add	r2, pc, #4	; (adr r2, 8009b68 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8009b64:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009b68:	08009b9d 	.word	0x08009b9d
 8009b6c:	08009ca1 	.word	0x08009ca1
 8009b70:	08009ca1 	.word	0x08009ca1
 8009b74:	08009ca1 	.word	0x08009ca1
 8009b78:	08009bdd 	.word	0x08009bdd
 8009b7c:	08009ca1 	.word	0x08009ca1
 8009b80:	08009ca1 	.word	0x08009ca1
 8009b84:	08009ca1 	.word	0x08009ca1
 8009b88:	08009c1f 	.word	0x08009c1f
 8009b8c:	08009ca1 	.word	0x08009ca1
 8009b90:	08009ca1 	.word	0x08009ca1
 8009b94:	08009ca1 	.word	0x08009ca1
 8009b98:	08009c5f 	.word	0x08009c5f
 8009b9c:	68fb      	ldr	r3, [r7, #12]
 8009b9e:	681b      	ldr	r3, [r3, #0]
 8009ba0:	68b9      	ldr	r1, [r7, #8]
 8009ba2:	4618      	mov	r0, r3
 8009ba4:	f000 f9f8 	bl	8009f98 <TIM_OC1_SetConfig>
 8009ba8:	68fb      	ldr	r3, [r7, #12]
 8009baa:	681b      	ldr	r3, [r3, #0]
 8009bac:	699a      	ldr	r2, [r3, #24]
 8009bae:	68fb      	ldr	r3, [r7, #12]
 8009bb0:	681b      	ldr	r3, [r3, #0]
 8009bb2:	f042 0208 	orr.w	r2, r2, #8
 8009bb6:	619a      	str	r2, [r3, #24]
 8009bb8:	68fb      	ldr	r3, [r7, #12]
 8009bba:	681b      	ldr	r3, [r3, #0]
 8009bbc:	699a      	ldr	r2, [r3, #24]
 8009bbe:	68fb      	ldr	r3, [r7, #12]
 8009bc0:	681b      	ldr	r3, [r3, #0]
 8009bc2:	f022 0204 	bic.w	r2, r2, #4
 8009bc6:	619a      	str	r2, [r3, #24]
 8009bc8:	68fb      	ldr	r3, [r7, #12]
 8009bca:	681b      	ldr	r3, [r3, #0]
 8009bcc:	6999      	ldr	r1, [r3, #24]
 8009bce:	68bb      	ldr	r3, [r7, #8]
 8009bd0:	691a      	ldr	r2, [r3, #16]
 8009bd2:	68fb      	ldr	r3, [r7, #12]
 8009bd4:	681b      	ldr	r3, [r3, #0]
 8009bd6:	430a      	orrs	r2, r1
 8009bd8:	619a      	str	r2, [r3, #24]
 8009bda:	e064      	b.n	8009ca6 <HAL_TIM_PWM_ConfigChannel+0x172>
 8009bdc:	68fb      	ldr	r3, [r7, #12]
 8009bde:	681b      	ldr	r3, [r3, #0]
 8009be0:	68b9      	ldr	r1, [r7, #8]
 8009be2:	4618      	mov	r0, r3
 8009be4:	f000 fa3e 	bl	800a064 <TIM_OC2_SetConfig>
 8009be8:	68fb      	ldr	r3, [r7, #12]
 8009bea:	681b      	ldr	r3, [r3, #0]
 8009bec:	699a      	ldr	r2, [r3, #24]
 8009bee:	68fb      	ldr	r3, [r7, #12]
 8009bf0:	681b      	ldr	r3, [r3, #0]
 8009bf2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009bf6:	619a      	str	r2, [r3, #24]
 8009bf8:	68fb      	ldr	r3, [r7, #12]
 8009bfa:	681b      	ldr	r3, [r3, #0]
 8009bfc:	699a      	ldr	r2, [r3, #24]
 8009bfe:	68fb      	ldr	r3, [r7, #12]
 8009c00:	681b      	ldr	r3, [r3, #0]
 8009c02:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009c06:	619a      	str	r2, [r3, #24]
 8009c08:	68fb      	ldr	r3, [r7, #12]
 8009c0a:	681b      	ldr	r3, [r3, #0]
 8009c0c:	6999      	ldr	r1, [r3, #24]
 8009c0e:	68bb      	ldr	r3, [r7, #8]
 8009c10:	691b      	ldr	r3, [r3, #16]
 8009c12:	021a      	lsls	r2, r3, #8
 8009c14:	68fb      	ldr	r3, [r7, #12]
 8009c16:	681b      	ldr	r3, [r3, #0]
 8009c18:	430a      	orrs	r2, r1
 8009c1a:	619a      	str	r2, [r3, #24]
 8009c1c:	e043      	b.n	8009ca6 <HAL_TIM_PWM_ConfigChannel+0x172>
 8009c1e:	68fb      	ldr	r3, [r7, #12]
 8009c20:	681b      	ldr	r3, [r3, #0]
 8009c22:	68b9      	ldr	r1, [r7, #8]
 8009c24:	4618      	mov	r0, r3
 8009c26:	f000 fa89 	bl	800a13c <TIM_OC3_SetConfig>
 8009c2a:	68fb      	ldr	r3, [r7, #12]
 8009c2c:	681b      	ldr	r3, [r3, #0]
 8009c2e:	69da      	ldr	r2, [r3, #28]
 8009c30:	68fb      	ldr	r3, [r7, #12]
 8009c32:	681b      	ldr	r3, [r3, #0]
 8009c34:	f042 0208 	orr.w	r2, r2, #8
 8009c38:	61da      	str	r2, [r3, #28]
 8009c3a:	68fb      	ldr	r3, [r7, #12]
 8009c3c:	681b      	ldr	r3, [r3, #0]
 8009c3e:	69da      	ldr	r2, [r3, #28]
 8009c40:	68fb      	ldr	r3, [r7, #12]
 8009c42:	681b      	ldr	r3, [r3, #0]
 8009c44:	f022 0204 	bic.w	r2, r2, #4
 8009c48:	61da      	str	r2, [r3, #28]
 8009c4a:	68fb      	ldr	r3, [r7, #12]
 8009c4c:	681b      	ldr	r3, [r3, #0]
 8009c4e:	69d9      	ldr	r1, [r3, #28]
 8009c50:	68bb      	ldr	r3, [r7, #8]
 8009c52:	691a      	ldr	r2, [r3, #16]
 8009c54:	68fb      	ldr	r3, [r7, #12]
 8009c56:	681b      	ldr	r3, [r3, #0]
 8009c58:	430a      	orrs	r2, r1
 8009c5a:	61da      	str	r2, [r3, #28]
 8009c5c:	e023      	b.n	8009ca6 <HAL_TIM_PWM_ConfigChannel+0x172>
 8009c5e:	68fb      	ldr	r3, [r7, #12]
 8009c60:	681b      	ldr	r3, [r3, #0]
 8009c62:	68b9      	ldr	r1, [r7, #8]
 8009c64:	4618      	mov	r0, r3
 8009c66:	f000 fad3 	bl	800a210 <TIM_OC4_SetConfig>
 8009c6a:	68fb      	ldr	r3, [r7, #12]
 8009c6c:	681b      	ldr	r3, [r3, #0]
 8009c6e:	69da      	ldr	r2, [r3, #28]
 8009c70:	68fb      	ldr	r3, [r7, #12]
 8009c72:	681b      	ldr	r3, [r3, #0]
 8009c74:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009c78:	61da      	str	r2, [r3, #28]
 8009c7a:	68fb      	ldr	r3, [r7, #12]
 8009c7c:	681b      	ldr	r3, [r3, #0]
 8009c7e:	69da      	ldr	r2, [r3, #28]
 8009c80:	68fb      	ldr	r3, [r7, #12]
 8009c82:	681b      	ldr	r3, [r3, #0]
 8009c84:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009c88:	61da      	str	r2, [r3, #28]
 8009c8a:	68fb      	ldr	r3, [r7, #12]
 8009c8c:	681b      	ldr	r3, [r3, #0]
 8009c8e:	69d9      	ldr	r1, [r3, #28]
 8009c90:	68bb      	ldr	r3, [r7, #8]
 8009c92:	691b      	ldr	r3, [r3, #16]
 8009c94:	021a      	lsls	r2, r3, #8
 8009c96:	68fb      	ldr	r3, [r7, #12]
 8009c98:	681b      	ldr	r3, [r3, #0]
 8009c9a:	430a      	orrs	r2, r1
 8009c9c:	61da      	str	r2, [r3, #28]
 8009c9e:	e002      	b.n	8009ca6 <HAL_TIM_PWM_ConfigChannel+0x172>
 8009ca0:	2301      	movs	r3, #1
 8009ca2:	75fb      	strb	r3, [r7, #23]
 8009ca4:	bf00      	nop
 8009ca6:	68fb      	ldr	r3, [r7, #12]
 8009ca8:	2200      	movs	r2, #0
 8009caa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009cae:	7dfb      	ldrb	r3, [r7, #23]
 8009cb0:	4618      	mov	r0, r3
 8009cb2:	3718      	adds	r7, #24
 8009cb4:	46bd      	mov	sp, r7
 8009cb6:	bd80      	pop	{r7, pc}

08009cb8 <HAL_TIM_ConfigClockSource>:
 8009cb8:	b580      	push	{r7, lr}
 8009cba:	b084      	sub	sp, #16
 8009cbc:	af00      	add	r7, sp, #0
 8009cbe:	6078      	str	r0, [r7, #4]
 8009cc0:	6039      	str	r1, [r7, #0]
 8009cc2:	2300      	movs	r3, #0
 8009cc4:	73fb      	strb	r3, [r7, #15]
 8009cc6:	687b      	ldr	r3, [r7, #4]
 8009cc8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009ccc:	2b01      	cmp	r3, #1
 8009cce:	d101      	bne.n	8009cd4 <HAL_TIM_ConfigClockSource+0x1c>
 8009cd0:	2302      	movs	r3, #2
 8009cd2:	e0b4      	b.n	8009e3e <HAL_TIM_ConfigClockSource+0x186>
 8009cd4:	687b      	ldr	r3, [r7, #4]
 8009cd6:	2201      	movs	r2, #1
 8009cd8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009cdc:	687b      	ldr	r3, [r7, #4]
 8009cde:	2202      	movs	r2, #2
 8009ce0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009ce4:	687b      	ldr	r3, [r7, #4]
 8009ce6:	681b      	ldr	r3, [r3, #0]
 8009ce8:	689b      	ldr	r3, [r3, #8]
 8009cea:	60bb      	str	r3, [r7, #8]
 8009cec:	68bb      	ldr	r3, [r7, #8]
 8009cee:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8009cf2:	60bb      	str	r3, [r7, #8]
 8009cf4:	68bb      	ldr	r3, [r7, #8]
 8009cf6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8009cfa:	60bb      	str	r3, [r7, #8]
 8009cfc:	687b      	ldr	r3, [r7, #4]
 8009cfe:	681b      	ldr	r3, [r3, #0]
 8009d00:	68ba      	ldr	r2, [r7, #8]
 8009d02:	609a      	str	r2, [r3, #8]
 8009d04:	683b      	ldr	r3, [r7, #0]
 8009d06:	681b      	ldr	r3, [r3, #0]
 8009d08:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009d0c:	d03e      	beq.n	8009d8c <HAL_TIM_ConfigClockSource+0xd4>
 8009d0e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009d12:	f200 8087 	bhi.w	8009e24 <HAL_TIM_ConfigClockSource+0x16c>
 8009d16:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009d1a:	f000 8086 	beq.w	8009e2a <HAL_TIM_ConfigClockSource+0x172>
 8009d1e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009d22:	d87f      	bhi.n	8009e24 <HAL_TIM_ConfigClockSource+0x16c>
 8009d24:	2b70      	cmp	r3, #112	; 0x70
 8009d26:	d01a      	beq.n	8009d5e <HAL_TIM_ConfigClockSource+0xa6>
 8009d28:	2b70      	cmp	r3, #112	; 0x70
 8009d2a:	d87b      	bhi.n	8009e24 <HAL_TIM_ConfigClockSource+0x16c>
 8009d2c:	2b60      	cmp	r3, #96	; 0x60
 8009d2e:	d050      	beq.n	8009dd2 <HAL_TIM_ConfigClockSource+0x11a>
 8009d30:	2b60      	cmp	r3, #96	; 0x60
 8009d32:	d877      	bhi.n	8009e24 <HAL_TIM_ConfigClockSource+0x16c>
 8009d34:	2b50      	cmp	r3, #80	; 0x50
 8009d36:	d03c      	beq.n	8009db2 <HAL_TIM_ConfigClockSource+0xfa>
 8009d38:	2b50      	cmp	r3, #80	; 0x50
 8009d3a:	d873      	bhi.n	8009e24 <HAL_TIM_ConfigClockSource+0x16c>
 8009d3c:	2b40      	cmp	r3, #64	; 0x40
 8009d3e:	d058      	beq.n	8009df2 <HAL_TIM_ConfigClockSource+0x13a>
 8009d40:	2b40      	cmp	r3, #64	; 0x40
 8009d42:	d86f      	bhi.n	8009e24 <HAL_TIM_ConfigClockSource+0x16c>
 8009d44:	2b30      	cmp	r3, #48	; 0x30
 8009d46:	d064      	beq.n	8009e12 <HAL_TIM_ConfigClockSource+0x15a>
 8009d48:	2b30      	cmp	r3, #48	; 0x30
 8009d4a:	d86b      	bhi.n	8009e24 <HAL_TIM_ConfigClockSource+0x16c>
 8009d4c:	2b20      	cmp	r3, #32
 8009d4e:	d060      	beq.n	8009e12 <HAL_TIM_ConfigClockSource+0x15a>
 8009d50:	2b20      	cmp	r3, #32
 8009d52:	d867      	bhi.n	8009e24 <HAL_TIM_ConfigClockSource+0x16c>
 8009d54:	2b00      	cmp	r3, #0
 8009d56:	d05c      	beq.n	8009e12 <HAL_TIM_ConfigClockSource+0x15a>
 8009d58:	2b10      	cmp	r3, #16
 8009d5a:	d05a      	beq.n	8009e12 <HAL_TIM_ConfigClockSource+0x15a>
 8009d5c:	e062      	b.n	8009e24 <HAL_TIM_ConfigClockSource+0x16c>
 8009d5e:	687b      	ldr	r3, [r7, #4]
 8009d60:	6818      	ldr	r0, [r3, #0]
 8009d62:	683b      	ldr	r3, [r7, #0]
 8009d64:	6899      	ldr	r1, [r3, #8]
 8009d66:	683b      	ldr	r3, [r7, #0]
 8009d68:	685a      	ldr	r2, [r3, #4]
 8009d6a:	683b      	ldr	r3, [r7, #0]
 8009d6c:	68db      	ldr	r3, [r3, #12]
 8009d6e:	f000 fb19 	bl	800a3a4 <TIM_ETR_SetConfig>
 8009d72:	687b      	ldr	r3, [r7, #4]
 8009d74:	681b      	ldr	r3, [r3, #0]
 8009d76:	689b      	ldr	r3, [r3, #8]
 8009d78:	60bb      	str	r3, [r7, #8]
 8009d7a:	68bb      	ldr	r3, [r7, #8]
 8009d7c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8009d80:	60bb      	str	r3, [r7, #8]
 8009d82:	687b      	ldr	r3, [r7, #4]
 8009d84:	681b      	ldr	r3, [r3, #0]
 8009d86:	68ba      	ldr	r2, [r7, #8]
 8009d88:	609a      	str	r2, [r3, #8]
 8009d8a:	e04f      	b.n	8009e2c <HAL_TIM_ConfigClockSource+0x174>
 8009d8c:	687b      	ldr	r3, [r7, #4]
 8009d8e:	6818      	ldr	r0, [r3, #0]
 8009d90:	683b      	ldr	r3, [r7, #0]
 8009d92:	6899      	ldr	r1, [r3, #8]
 8009d94:	683b      	ldr	r3, [r7, #0]
 8009d96:	685a      	ldr	r2, [r3, #4]
 8009d98:	683b      	ldr	r3, [r7, #0]
 8009d9a:	68db      	ldr	r3, [r3, #12]
 8009d9c:	f000 fb02 	bl	800a3a4 <TIM_ETR_SetConfig>
 8009da0:	687b      	ldr	r3, [r7, #4]
 8009da2:	681b      	ldr	r3, [r3, #0]
 8009da4:	689a      	ldr	r2, [r3, #8]
 8009da6:	687b      	ldr	r3, [r7, #4]
 8009da8:	681b      	ldr	r3, [r3, #0]
 8009daa:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8009dae:	609a      	str	r2, [r3, #8]
 8009db0:	e03c      	b.n	8009e2c <HAL_TIM_ConfigClockSource+0x174>
 8009db2:	687b      	ldr	r3, [r7, #4]
 8009db4:	6818      	ldr	r0, [r3, #0]
 8009db6:	683b      	ldr	r3, [r7, #0]
 8009db8:	6859      	ldr	r1, [r3, #4]
 8009dba:	683b      	ldr	r3, [r7, #0]
 8009dbc:	68db      	ldr	r3, [r3, #12]
 8009dbe:	461a      	mov	r2, r3
 8009dc0:	f000 fa76 	bl	800a2b0 <TIM_TI1_ConfigInputStage>
 8009dc4:	687b      	ldr	r3, [r7, #4]
 8009dc6:	681b      	ldr	r3, [r3, #0]
 8009dc8:	2150      	movs	r1, #80	; 0x50
 8009dca:	4618      	mov	r0, r3
 8009dcc:	f000 facf 	bl	800a36e <TIM_ITRx_SetConfig>
 8009dd0:	e02c      	b.n	8009e2c <HAL_TIM_ConfigClockSource+0x174>
 8009dd2:	687b      	ldr	r3, [r7, #4]
 8009dd4:	6818      	ldr	r0, [r3, #0]
 8009dd6:	683b      	ldr	r3, [r7, #0]
 8009dd8:	6859      	ldr	r1, [r3, #4]
 8009dda:	683b      	ldr	r3, [r7, #0]
 8009ddc:	68db      	ldr	r3, [r3, #12]
 8009dde:	461a      	mov	r2, r3
 8009de0:	f000 fa95 	bl	800a30e <TIM_TI2_ConfigInputStage>
 8009de4:	687b      	ldr	r3, [r7, #4]
 8009de6:	681b      	ldr	r3, [r3, #0]
 8009de8:	2160      	movs	r1, #96	; 0x60
 8009dea:	4618      	mov	r0, r3
 8009dec:	f000 fabf 	bl	800a36e <TIM_ITRx_SetConfig>
 8009df0:	e01c      	b.n	8009e2c <HAL_TIM_ConfigClockSource+0x174>
 8009df2:	687b      	ldr	r3, [r7, #4]
 8009df4:	6818      	ldr	r0, [r3, #0]
 8009df6:	683b      	ldr	r3, [r7, #0]
 8009df8:	6859      	ldr	r1, [r3, #4]
 8009dfa:	683b      	ldr	r3, [r7, #0]
 8009dfc:	68db      	ldr	r3, [r3, #12]
 8009dfe:	461a      	mov	r2, r3
 8009e00:	f000 fa56 	bl	800a2b0 <TIM_TI1_ConfigInputStage>
 8009e04:	687b      	ldr	r3, [r7, #4]
 8009e06:	681b      	ldr	r3, [r3, #0]
 8009e08:	2140      	movs	r1, #64	; 0x40
 8009e0a:	4618      	mov	r0, r3
 8009e0c:	f000 faaf 	bl	800a36e <TIM_ITRx_SetConfig>
 8009e10:	e00c      	b.n	8009e2c <HAL_TIM_ConfigClockSource+0x174>
 8009e12:	687b      	ldr	r3, [r7, #4]
 8009e14:	681a      	ldr	r2, [r3, #0]
 8009e16:	683b      	ldr	r3, [r7, #0]
 8009e18:	681b      	ldr	r3, [r3, #0]
 8009e1a:	4619      	mov	r1, r3
 8009e1c:	4610      	mov	r0, r2
 8009e1e:	f000 faa6 	bl	800a36e <TIM_ITRx_SetConfig>
 8009e22:	e003      	b.n	8009e2c <HAL_TIM_ConfigClockSource+0x174>
 8009e24:	2301      	movs	r3, #1
 8009e26:	73fb      	strb	r3, [r7, #15]
 8009e28:	e000      	b.n	8009e2c <HAL_TIM_ConfigClockSource+0x174>
 8009e2a:	bf00      	nop
 8009e2c:	687b      	ldr	r3, [r7, #4]
 8009e2e:	2201      	movs	r2, #1
 8009e30:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009e34:	687b      	ldr	r3, [r7, #4]
 8009e36:	2200      	movs	r2, #0
 8009e38:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009e3c:	7bfb      	ldrb	r3, [r7, #15]
 8009e3e:	4618      	mov	r0, r3
 8009e40:	3710      	adds	r7, #16
 8009e42:	46bd      	mov	sp, r7
 8009e44:	bd80      	pop	{r7, pc}

08009e46 <HAL_TIM_OC_DelayElapsedCallback>:
 8009e46:	b480      	push	{r7}
 8009e48:	b083      	sub	sp, #12
 8009e4a:	af00      	add	r7, sp, #0
 8009e4c:	6078      	str	r0, [r7, #4]
 8009e4e:	bf00      	nop
 8009e50:	370c      	adds	r7, #12
 8009e52:	46bd      	mov	sp, r7
 8009e54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e58:	4770      	bx	lr

08009e5a <HAL_TIM_IC_CaptureCallback>:
 8009e5a:	b480      	push	{r7}
 8009e5c:	b083      	sub	sp, #12
 8009e5e:	af00      	add	r7, sp, #0
 8009e60:	6078      	str	r0, [r7, #4]
 8009e62:	bf00      	nop
 8009e64:	370c      	adds	r7, #12
 8009e66:	46bd      	mov	sp, r7
 8009e68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e6c:	4770      	bx	lr

08009e6e <HAL_TIM_PWM_PulseFinishedCallback>:
 8009e6e:	b480      	push	{r7}
 8009e70:	b083      	sub	sp, #12
 8009e72:	af00      	add	r7, sp, #0
 8009e74:	6078      	str	r0, [r7, #4]
 8009e76:	bf00      	nop
 8009e78:	370c      	adds	r7, #12
 8009e7a:	46bd      	mov	sp, r7
 8009e7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e80:	4770      	bx	lr

08009e82 <HAL_TIM_TriggerCallback>:
 8009e82:	b480      	push	{r7}
 8009e84:	b083      	sub	sp, #12
 8009e86:	af00      	add	r7, sp, #0
 8009e88:	6078      	str	r0, [r7, #4]
 8009e8a:	bf00      	nop
 8009e8c:	370c      	adds	r7, #12
 8009e8e:	46bd      	mov	sp, r7
 8009e90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e94:	4770      	bx	lr
	...

08009e98 <TIM_Base_SetConfig>:
 8009e98:	b480      	push	{r7}
 8009e9a:	b085      	sub	sp, #20
 8009e9c:	af00      	add	r7, sp, #0
 8009e9e:	6078      	str	r0, [r7, #4]
 8009ea0:	6039      	str	r1, [r7, #0]
 8009ea2:	687b      	ldr	r3, [r7, #4]
 8009ea4:	681b      	ldr	r3, [r3, #0]
 8009ea6:	60fb      	str	r3, [r7, #12]
 8009ea8:	687b      	ldr	r3, [r7, #4]
 8009eaa:	4a34      	ldr	r2, [pc, #208]	; (8009f7c <TIM_Base_SetConfig+0xe4>)
 8009eac:	4293      	cmp	r3, r2
 8009eae:	d00f      	beq.n	8009ed0 <TIM_Base_SetConfig+0x38>
 8009eb0:	687b      	ldr	r3, [r7, #4]
 8009eb2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009eb6:	d00b      	beq.n	8009ed0 <TIM_Base_SetConfig+0x38>
 8009eb8:	687b      	ldr	r3, [r7, #4]
 8009eba:	4a31      	ldr	r2, [pc, #196]	; (8009f80 <TIM_Base_SetConfig+0xe8>)
 8009ebc:	4293      	cmp	r3, r2
 8009ebe:	d007      	beq.n	8009ed0 <TIM_Base_SetConfig+0x38>
 8009ec0:	687b      	ldr	r3, [r7, #4]
 8009ec2:	4a30      	ldr	r2, [pc, #192]	; (8009f84 <TIM_Base_SetConfig+0xec>)
 8009ec4:	4293      	cmp	r3, r2
 8009ec6:	d003      	beq.n	8009ed0 <TIM_Base_SetConfig+0x38>
 8009ec8:	687b      	ldr	r3, [r7, #4]
 8009eca:	4a2f      	ldr	r2, [pc, #188]	; (8009f88 <TIM_Base_SetConfig+0xf0>)
 8009ecc:	4293      	cmp	r3, r2
 8009ece:	d108      	bne.n	8009ee2 <TIM_Base_SetConfig+0x4a>
 8009ed0:	68fb      	ldr	r3, [r7, #12]
 8009ed2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009ed6:	60fb      	str	r3, [r7, #12]
 8009ed8:	683b      	ldr	r3, [r7, #0]
 8009eda:	685b      	ldr	r3, [r3, #4]
 8009edc:	68fa      	ldr	r2, [r7, #12]
 8009ede:	4313      	orrs	r3, r2
 8009ee0:	60fb      	str	r3, [r7, #12]
 8009ee2:	687b      	ldr	r3, [r7, #4]
 8009ee4:	4a25      	ldr	r2, [pc, #148]	; (8009f7c <TIM_Base_SetConfig+0xe4>)
 8009ee6:	4293      	cmp	r3, r2
 8009ee8:	d01b      	beq.n	8009f22 <TIM_Base_SetConfig+0x8a>
 8009eea:	687b      	ldr	r3, [r7, #4]
 8009eec:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009ef0:	d017      	beq.n	8009f22 <TIM_Base_SetConfig+0x8a>
 8009ef2:	687b      	ldr	r3, [r7, #4]
 8009ef4:	4a22      	ldr	r2, [pc, #136]	; (8009f80 <TIM_Base_SetConfig+0xe8>)
 8009ef6:	4293      	cmp	r3, r2
 8009ef8:	d013      	beq.n	8009f22 <TIM_Base_SetConfig+0x8a>
 8009efa:	687b      	ldr	r3, [r7, #4]
 8009efc:	4a21      	ldr	r2, [pc, #132]	; (8009f84 <TIM_Base_SetConfig+0xec>)
 8009efe:	4293      	cmp	r3, r2
 8009f00:	d00f      	beq.n	8009f22 <TIM_Base_SetConfig+0x8a>
 8009f02:	687b      	ldr	r3, [r7, #4]
 8009f04:	4a20      	ldr	r2, [pc, #128]	; (8009f88 <TIM_Base_SetConfig+0xf0>)
 8009f06:	4293      	cmp	r3, r2
 8009f08:	d00b      	beq.n	8009f22 <TIM_Base_SetConfig+0x8a>
 8009f0a:	687b      	ldr	r3, [r7, #4]
 8009f0c:	4a1f      	ldr	r2, [pc, #124]	; (8009f8c <TIM_Base_SetConfig+0xf4>)
 8009f0e:	4293      	cmp	r3, r2
 8009f10:	d007      	beq.n	8009f22 <TIM_Base_SetConfig+0x8a>
 8009f12:	687b      	ldr	r3, [r7, #4]
 8009f14:	4a1e      	ldr	r2, [pc, #120]	; (8009f90 <TIM_Base_SetConfig+0xf8>)
 8009f16:	4293      	cmp	r3, r2
 8009f18:	d003      	beq.n	8009f22 <TIM_Base_SetConfig+0x8a>
 8009f1a:	687b      	ldr	r3, [r7, #4]
 8009f1c:	4a1d      	ldr	r2, [pc, #116]	; (8009f94 <TIM_Base_SetConfig+0xfc>)
 8009f1e:	4293      	cmp	r3, r2
 8009f20:	d108      	bne.n	8009f34 <TIM_Base_SetConfig+0x9c>
 8009f22:	68fb      	ldr	r3, [r7, #12]
 8009f24:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009f28:	60fb      	str	r3, [r7, #12]
 8009f2a:	683b      	ldr	r3, [r7, #0]
 8009f2c:	68db      	ldr	r3, [r3, #12]
 8009f2e:	68fa      	ldr	r2, [r7, #12]
 8009f30:	4313      	orrs	r3, r2
 8009f32:	60fb      	str	r3, [r7, #12]
 8009f34:	68fb      	ldr	r3, [r7, #12]
 8009f36:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8009f3a:	683b      	ldr	r3, [r7, #0]
 8009f3c:	695b      	ldr	r3, [r3, #20]
 8009f3e:	4313      	orrs	r3, r2
 8009f40:	60fb      	str	r3, [r7, #12]
 8009f42:	687b      	ldr	r3, [r7, #4]
 8009f44:	68fa      	ldr	r2, [r7, #12]
 8009f46:	601a      	str	r2, [r3, #0]
 8009f48:	683b      	ldr	r3, [r7, #0]
 8009f4a:	689a      	ldr	r2, [r3, #8]
 8009f4c:	687b      	ldr	r3, [r7, #4]
 8009f4e:	62da      	str	r2, [r3, #44]	; 0x2c
 8009f50:	683b      	ldr	r3, [r7, #0]
 8009f52:	681a      	ldr	r2, [r3, #0]
 8009f54:	687b      	ldr	r3, [r7, #4]
 8009f56:	629a      	str	r2, [r3, #40]	; 0x28
 8009f58:	687b      	ldr	r3, [r7, #4]
 8009f5a:	4a08      	ldr	r2, [pc, #32]	; (8009f7c <TIM_Base_SetConfig+0xe4>)
 8009f5c:	4293      	cmp	r3, r2
 8009f5e:	d103      	bne.n	8009f68 <TIM_Base_SetConfig+0xd0>
 8009f60:	683b      	ldr	r3, [r7, #0]
 8009f62:	691a      	ldr	r2, [r3, #16]
 8009f64:	687b      	ldr	r3, [r7, #4]
 8009f66:	631a      	str	r2, [r3, #48]	; 0x30
 8009f68:	687b      	ldr	r3, [r7, #4]
 8009f6a:	2201      	movs	r2, #1
 8009f6c:	615a      	str	r2, [r3, #20]
 8009f6e:	bf00      	nop
 8009f70:	3714      	adds	r7, #20
 8009f72:	46bd      	mov	sp, r7
 8009f74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f78:	4770      	bx	lr
 8009f7a:	bf00      	nop
 8009f7c:	40010000 	.word	0x40010000
 8009f80:	40000400 	.word	0x40000400
 8009f84:	40000800 	.word	0x40000800
 8009f88:	40000c00 	.word	0x40000c00
 8009f8c:	40014000 	.word	0x40014000
 8009f90:	40014400 	.word	0x40014400
 8009f94:	40014800 	.word	0x40014800

08009f98 <TIM_OC1_SetConfig>:
 8009f98:	b480      	push	{r7}
 8009f9a:	b087      	sub	sp, #28
 8009f9c:	af00      	add	r7, sp, #0
 8009f9e:	6078      	str	r0, [r7, #4]
 8009fa0:	6039      	str	r1, [r7, #0]
 8009fa2:	687b      	ldr	r3, [r7, #4]
 8009fa4:	6a1b      	ldr	r3, [r3, #32]
 8009fa6:	f023 0201 	bic.w	r2, r3, #1
 8009faa:	687b      	ldr	r3, [r7, #4]
 8009fac:	621a      	str	r2, [r3, #32]
 8009fae:	687b      	ldr	r3, [r7, #4]
 8009fb0:	6a1b      	ldr	r3, [r3, #32]
 8009fb2:	617b      	str	r3, [r7, #20]
 8009fb4:	687b      	ldr	r3, [r7, #4]
 8009fb6:	685b      	ldr	r3, [r3, #4]
 8009fb8:	613b      	str	r3, [r7, #16]
 8009fba:	687b      	ldr	r3, [r7, #4]
 8009fbc:	699b      	ldr	r3, [r3, #24]
 8009fbe:	60fb      	str	r3, [r7, #12]
 8009fc0:	68fb      	ldr	r3, [r7, #12]
 8009fc2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009fc6:	60fb      	str	r3, [r7, #12]
 8009fc8:	68fb      	ldr	r3, [r7, #12]
 8009fca:	f023 0303 	bic.w	r3, r3, #3
 8009fce:	60fb      	str	r3, [r7, #12]
 8009fd0:	683b      	ldr	r3, [r7, #0]
 8009fd2:	681b      	ldr	r3, [r3, #0]
 8009fd4:	68fa      	ldr	r2, [r7, #12]
 8009fd6:	4313      	orrs	r3, r2
 8009fd8:	60fb      	str	r3, [r7, #12]
 8009fda:	697b      	ldr	r3, [r7, #20]
 8009fdc:	f023 0302 	bic.w	r3, r3, #2
 8009fe0:	617b      	str	r3, [r7, #20]
 8009fe2:	683b      	ldr	r3, [r7, #0]
 8009fe4:	689b      	ldr	r3, [r3, #8]
 8009fe6:	697a      	ldr	r2, [r7, #20]
 8009fe8:	4313      	orrs	r3, r2
 8009fea:	617b      	str	r3, [r7, #20]
 8009fec:	687b      	ldr	r3, [r7, #4]
 8009fee:	4a1c      	ldr	r2, [pc, #112]	; (800a060 <TIM_OC1_SetConfig+0xc8>)
 8009ff0:	4293      	cmp	r3, r2
 8009ff2:	d10c      	bne.n	800a00e <TIM_OC1_SetConfig+0x76>
 8009ff4:	697b      	ldr	r3, [r7, #20]
 8009ff6:	f023 0308 	bic.w	r3, r3, #8
 8009ffa:	617b      	str	r3, [r7, #20]
 8009ffc:	683b      	ldr	r3, [r7, #0]
 8009ffe:	68db      	ldr	r3, [r3, #12]
 800a000:	697a      	ldr	r2, [r7, #20]
 800a002:	4313      	orrs	r3, r2
 800a004:	617b      	str	r3, [r7, #20]
 800a006:	697b      	ldr	r3, [r7, #20]
 800a008:	f023 0304 	bic.w	r3, r3, #4
 800a00c:	617b      	str	r3, [r7, #20]
 800a00e:	687b      	ldr	r3, [r7, #4]
 800a010:	4a13      	ldr	r2, [pc, #76]	; (800a060 <TIM_OC1_SetConfig+0xc8>)
 800a012:	4293      	cmp	r3, r2
 800a014:	d111      	bne.n	800a03a <TIM_OC1_SetConfig+0xa2>
 800a016:	693b      	ldr	r3, [r7, #16]
 800a018:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800a01c:	613b      	str	r3, [r7, #16]
 800a01e:	693b      	ldr	r3, [r7, #16]
 800a020:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800a024:	613b      	str	r3, [r7, #16]
 800a026:	683b      	ldr	r3, [r7, #0]
 800a028:	695b      	ldr	r3, [r3, #20]
 800a02a:	693a      	ldr	r2, [r7, #16]
 800a02c:	4313      	orrs	r3, r2
 800a02e:	613b      	str	r3, [r7, #16]
 800a030:	683b      	ldr	r3, [r7, #0]
 800a032:	699b      	ldr	r3, [r3, #24]
 800a034:	693a      	ldr	r2, [r7, #16]
 800a036:	4313      	orrs	r3, r2
 800a038:	613b      	str	r3, [r7, #16]
 800a03a:	687b      	ldr	r3, [r7, #4]
 800a03c:	693a      	ldr	r2, [r7, #16]
 800a03e:	605a      	str	r2, [r3, #4]
 800a040:	687b      	ldr	r3, [r7, #4]
 800a042:	68fa      	ldr	r2, [r7, #12]
 800a044:	619a      	str	r2, [r3, #24]
 800a046:	683b      	ldr	r3, [r7, #0]
 800a048:	685a      	ldr	r2, [r3, #4]
 800a04a:	687b      	ldr	r3, [r7, #4]
 800a04c:	635a      	str	r2, [r3, #52]	; 0x34
 800a04e:	687b      	ldr	r3, [r7, #4]
 800a050:	697a      	ldr	r2, [r7, #20]
 800a052:	621a      	str	r2, [r3, #32]
 800a054:	bf00      	nop
 800a056:	371c      	adds	r7, #28
 800a058:	46bd      	mov	sp, r7
 800a05a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a05e:	4770      	bx	lr
 800a060:	40010000 	.word	0x40010000

0800a064 <TIM_OC2_SetConfig>:
 800a064:	b480      	push	{r7}
 800a066:	b087      	sub	sp, #28
 800a068:	af00      	add	r7, sp, #0
 800a06a:	6078      	str	r0, [r7, #4]
 800a06c:	6039      	str	r1, [r7, #0]
 800a06e:	687b      	ldr	r3, [r7, #4]
 800a070:	6a1b      	ldr	r3, [r3, #32]
 800a072:	f023 0210 	bic.w	r2, r3, #16
 800a076:	687b      	ldr	r3, [r7, #4]
 800a078:	621a      	str	r2, [r3, #32]
 800a07a:	687b      	ldr	r3, [r7, #4]
 800a07c:	6a1b      	ldr	r3, [r3, #32]
 800a07e:	617b      	str	r3, [r7, #20]
 800a080:	687b      	ldr	r3, [r7, #4]
 800a082:	685b      	ldr	r3, [r3, #4]
 800a084:	613b      	str	r3, [r7, #16]
 800a086:	687b      	ldr	r3, [r7, #4]
 800a088:	699b      	ldr	r3, [r3, #24]
 800a08a:	60fb      	str	r3, [r7, #12]
 800a08c:	68fb      	ldr	r3, [r7, #12]
 800a08e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800a092:	60fb      	str	r3, [r7, #12]
 800a094:	68fb      	ldr	r3, [r7, #12]
 800a096:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800a09a:	60fb      	str	r3, [r7, #12]
 800a09c:	683b      	ldr	r3, [r7, #0]
 800a09e:	681b      	ldr	r3, [r3, #0]
 800a0a0:	021b      	lsls	r3, r3, #8
 800a0a2:	68fa      	ldr	r2, [r7, #12]
 800a0a4:	4313      	orrs	r3, r2
 800a0a6:	60fb      	str	r3, [r7, #12]
 800a0a8:	697b      	ldr	r3, [r7, #20]
 800a0aa:	f023 0320 	bic.w	r3, r3, #32
 800a0ae:	617b      	str	r3, [r7, #20]
 800a0b0:	683b      	ldr	r3, [r7, #0]
 800a0b2:	689b      	ldr	r3, [r3, #8]
 800a0b4:	011b      	lsls	r3, r3, #4
 800a0b6:	697a      	ldr	r2, [r7, #20]
 800a0b8:	4313      	orrs	r3, r2
 800a0ba:	617b      	str	r3, [r7, #20]
 800a0bc:	687b      	ldr	r3, [r7, #4]
 800a0be:	4a1e      	ldr	r2, [pc, #120]	; (800a138 <TIM_OC2_SetConfig+0xd4>)
 800a0c0:	4293      	cmp	r3, r2
 800a0c2:	d10d      	bne.n	800a0e0 <TIM_OC2_SetConfig+0x7c>
 800a0c4:	697b      	ldr	r3, [r7, #20]
 800a0c6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800a0ca:	617b      	str	r3, [r7, #20]
 800a0cc:	683b      	ldr	r3, [r7, #0]
 800a0ce:	68db      	ldr	r3, [r3, #12]
 800a0d0:	011b      	lsls	r3, r3, #4
 800a0d2:	697a      	ldr	r2, [r7, #20]
 800a0d4:	4313      	orrs	r3, r2
 800a0d6:	617b      	str	r3, [r7, #20]
 800a0d8:	697b      	ldr	r3, [r7, #20]
 800a0da:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a0de:	617b      	str	r3, [r7, #20]
 800a0e0:	687b      	ldr	r3, [r7, #4]
 800a0e2:	4a15      	ldr	r2, [pc, #84]	; (800a138 <TIM_OC2_SetConfig+0xd4>)
 800a0e4:	4293      	cmp	r3, r2
 800a0e6:	d113      	bne.n	800a110 <TIM_OC2_SetConfig+0xac>
 800a0e8:	693b      	ldr	r3, [r7, #16]
 800a0ea:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a0ee:	613b      	str	r3, [r7, #16]
 800a0f0:	693b      	ldr	r3, [r7, #16]
 800a0f2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800a0f6:	613b      	str	r3, [r7, #16]
 800a0f8:	683b      	ldr	r3, [r7, #0]
 800a0fa:	695b      	ldr	r3, [r3, #20]
 800a0fc:	009b      	lsls	r3, r3, #2
 800a0fe:	693a      	ldr	r2, [r7, #16]
 800a100:	4313      	orrs	r3, r2
 800a102:	613b      	str	r3, [r7, #16]
 800a104:	683b      	ldr	r3, [r7, #0]
 800a106:	699b      	ldr	r3, [r3, #24]
 800a108:	009b      	lsls	r3, r3, #2
 800a10a:	693a      	ldr	r2, [r7, #16]
 800a10c:	4313      	orrs	r3, r2
 800a10e:	613b      	str	r3, [r7, #16]
 800a110:	687b      	ldr	r3, [r7, #4]
 800a112:	693a      	ldr	r2, [r7, #16]
 800a114:	605a      	str	r2, [r3, #4]
 800a116:	687b      	ldr	r3, [r7, #4]
 800a118:	68fa      	ldr	r2, [r7, #12]
 800a11a:	619a      	str	r2, [r3, #24]
 800a11c:	683b      	ldr	r3, [r7, #0]
 800a11e:	685a      	ldr	r2, [r3, #4]
 800a120:	687b      	ldr	r3, [r7, #4]
 800a122:	639a      	str	r2, [r3, #56]	; 0x38
 800a124:	687b      	ldr	r3, [r7, #4]
 800a126:	697a      	ldr	r2, [r7, #20]
 800a128:	621a      	str	r2, [r3, #32]
 800a12a:	bf00      	nop
 800a12c:	371c      	adds	r7, #28
 800a12e:	46bd      	mov	sp, r7
 800a130:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a134:	4770      	bx	lr
 800a136:	bf00      	nop
 800a138:	40010000 	.word	0x40010000

0800a13c <TIM_OC3_SetConfig>:
 800a13c:	b480      	push	{r7}
 800a13e:	b087      	sub	sp, #28
 800a140:	af00      	add	r7, sp, #0
 800a142:	6078      	str	r0, [r7, #4]
 800a144:	6039      	str	r1, [r7, #0]
 800a146:	687b      	ldr	r3, [r7, #4]
 800a148:	6a1b      	ldr	r3, [r3, #32]
 800a14a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800a14e:	687b      	ldr	r3, [r7, #4]
 800a150:	621a      	str	r2, [r3, #32]
 800a152:	687b      	ldr	r3, [r7, #4]
 800a154:	6a1b      	ldr	r3, [r3, #32]
 800a156:	617b      	str	r3, [r7, #20]
 800a158:	687b      	ldr	r3, [r7, #4]
 800a15a:	685b      	ldr	r3, [r3, #4]
 800a15c:	613b      	str	r3, [r7, #16]
 800a15e:	687b      	ldr	r3, [r7, #4]
 800a160:	69db      	ldr	r3, [r3, #28]
 800a162:	60fb      	str	r3, [r7, #12]
 800a164:	68fb      	ldr	r3, [r7, #12]
 800a166:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a16a:	60fb      	str	r3, [r7, #12]
 800a16c:	68fb      	ldr	r3, [r7, #12]
 800a16e:	f023 0303 	bic.w	r3, r3, #3
 800a172:	60fb      	str	r3, [r7, #12]
 800a174:	683b      	ldr	r3, [r7, #0]
 800a176:	681b      	ldr	r3, [r3, #0]
 800a178:	68fa      	ldr	r2, [r7, #12]
 800a17a:	4313      	orrs	r3, r2
 800a17c:	60fb      	str	r3, [r7, #12]
 800a17e:	697b      	ldr	r3, [r7, #20]
 800a180:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800a184:	617b      	str	r3, [r7, #20]
 800a186:	683b      	ldr	r3, [r7, #0]
 800a188:	689b      	ldr	r3, [r3, #8]
 800a18a:	021b      	lsls	r3, r3, #8
 800a18c:	697a      	ldr	r2, [r7, #20]
 800a18e:	4313      	orrs	r3, r2
 800a190:	617b      	str	r3, [r7, #20]
 800a192:	687b      	ldr	r3, [r7, #4]
 800a194:	4a1d      	ldr	r2, [pc, #116]	; (800a20c <TIM_OC3_SetConfig+0xd0>)
 800a196:	4293      	cmp	r3, r2
 800a198:	d10d      	bne.n	800a1b6 <TIM_OC3_SetConfig+0x7a>
 800a19a:	697b      	ldr	r3, [r7, #20]
 800a19c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800a1a0:	617b      	str	r3, [r7, #20]
 800a1a2:	683b      	ldr	r3, [r7, #0]
 800a1a4:	68db      	ldr	r3, [r3, #12]
 800a1a6:	021b      	lsls	r3, r3, #8
 800a1a8:	697a      	ldr	r2, [r7, #20]
 800a1aa:	4313      	orrs	r3, r2
 800a1ac:	617b      	str	r3, [r7, #20]
 800a1ae:	697b      	ldr	r3, [r7, #20]
 800a1b0:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a1b4:	617b      	str	r3, [r7, #20]
 800a1b6:	687b      	ldr	r3, [r7, #4]
 800a1b8:	4a14      	ldr	r2, [pc, #80]	; (800a20c <TIM_OC3_SetConfig+0xd0>)
 800a1ba:	4293      	cmp	r3, r2
 800a1bc:	d113      	bne.n	800a1e6 <TIM_OC3_SetConfig+0xaa>
 800a1be:	693b      	ldr	r3, [r7, #16]
 800a1c0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800a1c4:	613b      	str	r3, [r7, #16]
 800a1c6:	693b      	ldr	r3, [r7, #16]
 800a1c8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800a1cc:	613b      	str	r3, [r7, #16]
 800a1ce:	683b      	ldr	r3, [r7, #0]
 800a1d0:	695b      	ldr	r3, [r3, #20]
 800a1d2:	011b      	lsls	r3, r3, #4
 800a1d4:	693a      	ldr	r2, [r7, #16]
 800a1d6:	4313      	orrs	r3, r2
 800a1d8:	613b      	str	r3, [r7, #16]
 800a1da:	683b      	ldr	r3, [r7, #0]
 800a1dc:	699b      	ldr	r3, [r3, #24]
 800a1de:	011b      	lsls	r3, r3, #4
 800a1e0:	693a      	ldr	r2, [r7, #16]
 800a1e2:	4313      	orrs	r3, r2
 800a1e4:	613b      	str	r3, [r7, #16]
 800a1e6:	687b      	ldr	r3, [r7, #4]
 800a1e8:	693a      	ldr	r2, [r7, #16]
 800a1ea:	605a      	str	r2, [r3, #4]
 800a1ec:	687b      	ldr	r3, [r7, #4]
 800a1ee:	68fa      	ldr	r2, [r7, #12]
 800a1f0:	61da      	str	r2, [r3, #28]
 800a1f2:	683b      	ldr	r3, [r7, #0]
 800a1f4:	685a      	ldr	r2, [r3, #4]
 800a1f6:	687b      	ldr	r3, [r7, #4]
 800a1f8:	63da      	str	r2, [r3, #60]	; 0x3c
 800a1fa:	687b      	ldr	r3, [r7, #4]
 800a1fc:	697a      	ldr	r2, [r7, #20]
 800a1fe:	621a      	str	r2, [r3, #32]
 800a200:	bf00      	nop
 800a202:	371c      	adds	r7, #28
 800a204:	46bd      	mov	sp, r7
 800a206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a20a:	4770      	bx	lr
 800a20c:	40010000 	.word	0x40010000

0800a210 <TIM_OC4_SetConfig>:
 800a210:	b480      	push	{r7}
 800a212:	b087      	sub	sp, #28
 800a214:	af00      	add	r7, sp, #0
 800a216:	6078      	str	r0, [r7, #4]
 800a218:	6039      	str	r1, [r7, #0]
 800a21a:	687b      	ldr	r3, [r7, #4]
 800a21c:	6a1b      	ldr	r3, [r3, #32]
 800a21e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800a222:	687b      	ldr	r3, [r7, #4]
 800a224:	621a      	str	r2, [r3, #32]
 800a226:	687b      	ldr	r3, [r7, #4]
 800a228:	6a1b      	ldr	r3, [r3, #32]
 800a22a:	613b      	str	r3, [r7, #16]
 800a22c:	687b      	ldr	r3, [r7, #4]
 800a22e:	685b      	ldr	r3, [r3, #4]
 800a230:	617b      	str	r3, [r7, #20]
 800a232:	687b      	ldr	r3, [r7, #4]
 800a234:	69db      	ldr	r3, [r3, #28]
 800a236:	60fb      	str	r3, [r7, #12]
 800a238:	68fb      	ldr	r3, [r7, #12]
 800a23a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800a23e:	60fb      	str	r3, [r7, #12]
 800a240:	68fb      	ldr	r3, [r7, #12]
 800a242:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800a246:	60fb      	str	r3, [r7, #12]
 800a248:	683b      	ldr	r3, [r7, #0]
 800a24a:	681b      	ldr	r3, [r3, #0]
 800a24c:	021b      	lsls	r3, r3, #8
 800a24e:	68fa      	ldr	r2, [r7, #12]
 800a250:	4313      	orrs	r3, r2
 800a252:	60fb      	str	r3, [r7, #12]
 800a254:	693b      	ldr	r3, [r7, #16]
 800a256:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800a25a:	613b      	str	r3, [r7, #16]
 800a25c:	683b      	ldr	r3, [r7, #0]
 800a25e:	689b      	ldr	r3, [r3, #8]
 800a260:	031b      	lsls	r3, r3, #12
 800a262:	693a      	ldr	r2, [r7, #16]
 800a264:	4313      	orrs	r3, r2
 800a266:	613b      	str	r3, [r7, #16]
 800a268:	687b      	ldr	r3, [r7, #4]
 800a26a:	4a10      	ldr	r2, [pc, #64]	; (800a2ac <TIM_OC4_SetConfig+0x9c>)
 800a26c:	4293      	cmp	r3, r2
 800a26e:	d109      	bne.n	800a284 <TIM_OC4_SetConfig+0x74>
 800a270:	697b      	ldr	r3, [r7, #20]
 800a272:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800a276:	617b      	str	r3, [r7, #20]
 800a278:	683b      	ldr	r3, [r7, #0]
 800a27a:	695b      	ldr	r3, [r3, #20]
 800a27c:	019b      	lsls	r3, r3, #6
 800a27e:	697a      	ldr	r2, [r7, #20]
 800a280:	4313      	orrs	r3, r2
 800a282:	617b      	str	r3, [r7, #20]
 800a284:	687b      	ldr	r3, [r7, #4]
 800a286:	697a      	ldr	r2, [r7, #20]
 800a288:	605a      	str	r2, [r3, #4]
 800a28a:	687b      	ldr	r3, [r7, #4]
 800a28c:	68fa      	ldr	r2, [r7, #12]
 800a28e:	61da      	str	r2, [r3, #28]
 800a290:	683b      	ldr	r3, [r7, #0]
 800a292:	685a      	ldr	r2, [r3, #4]
 800a294:	687b      	ldr	r3, [r7, #4]
 800a296:	641a      	str	r2, [r3, #64]	; 0x40
 800a298:	687b      	ldr	r3, [r7, #4]
 800a29a:	693a      	ldr	r2, [r7, #16]
 800a29c:	621a      	str	r2, [r3, #32]
 800a29e:	bf00      	nop
 800a2a0:	371c      	adds	r7, #28
 800a2a2:	46bd      	mov	sp, r7
 800a2a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2a8:	4770      	bx	lr
 800a2aa:	bf00      	nop
 800a2ac:	40010000 	.word	0x40010000

0800a2b0 <TIM_TI1_ConfigInputStage>:
 800a2b0:	b480      	push	{r7}
 800a2b2:	b087      	sub	sp, #28
 800a2b4:	af00      	add	r7, sp, #0
 800a2b6:	60f8      	str	r0, [r7, #12]
 800a2b8:	60b9      	str	r1, [r7, #8]
 800a2ba:	607a      	str	r2, [r7, #4]
 800a2bc:	68fb      	ldr	r3, [r7, #12]
 800a2be:	6a1b      	ldr	r3, [r3, #32]
 800a2c0:	617b      	str	r3, [r7, #20]
 800a2c2:	68fb      	ldr	r3, [r7, #12]
 800a2c4:	6a1b      	ldr	r3, [r3, #32]
 800a2c6:	f023 0201 	bic.w	r2, r3, #1
 800a2ca:	68fb      	ldr	r3, [r7, #12]
 800a2cc:	621a      	str	r2, [r3, #32]
 800a2ce:	68fb      	ldr	r3, [r7, #12]
 800a2d0:	699b      	ldr	r3, [r3, #24]
 800a2d2:	613b      	str	r3, [r7, #16]
 800a2d4:	693b      	ldr	r3, [r7, #16]
 800a2d6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800a2da:	613b      	str	r3, [r7, #16]
 800a2dc:	687b      	ldr	r3, [r7, #4]
 800a2de:	011b      	lsls	r3, r3, #4
 800a2e0:	693a      	ldr	r2, [r7, #16]
 800a2e2:	4313      	orrs	r3, r2
 800a2e4:	613b      	str	r3, [r7, #16]
 800a2e6:	697b      	ldr	r3, [r7, #20]
 800a2e8:	f023 030a 	bic.w	r3, r3, #10
 800a2ec:	617b      	str	r3, [r7, #20]
 800a2ee:	697a      	ldr	r2, [r7, #20]
 800a2f0:	68bb      	ldr	r3, [r7, #8]
 800a2f2:	4313      	orrs	r3, r2
 800a2f4:	617b      	str	r3, [r7, #20]
 800a2f6:	68fb      	ldr	r3, [r7, #12]
 800a2f8:	693a      	ldr	r2, [r7, #16]
 800a2fa:	619a      	str	r2, [r3, #24]
 800a2fc:	68fb      	ldr	r3, [r7, #12]
 800a2fe:	697a      	ldr	r2, [r7, #20]
 800a300:	621a      	str	r2, [r3, #32]
 800a302:	bf00      	nop
 800a304:	371c      	adds	r7, #28
 800a306:	46bd      	mov	sp, r7
 800a308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a30c:	4770      	bx	lr

0800a30e <TIM_TI2_ConfigInputStage>:
 800a30e:	b480      	push	{r7}
 800a310:	b087      	sub	sp, #28
 800a312:	af00      	add	r7, sp, #0
 800a314:	60f8      	str	r0, [r7, #12]
 800a316:	60b9      	str	r1, [r7, #8]
 800a318:	607a      	str	r2, [r7, #4]
 800a31a:	68fb      	ldr	r3, [r7, #12]
 800a31c:	6a1b      	ldr	r3, [r3, #32]
 800a31e:	f023 0210 	bic.w	r2, r3, #16
 800a322:	68fb      	ldr	r3, [r7, #12]
 800a324:	621a      	str	r2, [r3, #32]
 800a326:	68fb      	ldr	r3, [r7, #12]
 800a328:	699b      	ldr	r3, [r3, #24]
 800a32a:	617b      	str	r3, [r7, #20]
 800a32c:	68fb      	ldr	r3, [r7, #12]
 800a32e:	6a1b      	ldr	r3, [r3, #32]
 800a330:	613b      	str	r3, [r7, #16]
 800a332:	697b      	ldr	r3, [r7, #20]
 800a334:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800a338:	617b      	str	r3, [r7, #20]
 800a33a:	687b      	ldr	r3, [r7, #4]
 800a33c:	031b      	lsls	r3, r3, #12
 800a33e:	697a      	ldr	r2, [r7, #20]
 800a340:	4313      	orrs	r3, r2
 800a342:	617b      	str	r3, [r7, #20]
 800a344:	693b      	ldr	r3, [r7, #16]
 800a346:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800a34a:	613b      	str	r3, [r7, #16]
 800a34c:	68bb      	ldr	r3, [r7, #8]
 800a34e:	011b      	lsls	r3, r3, #4
 800a350:	693a      	ldr	r2, [r7, #16]
 800a352:	4313      	orrs	r3, r2
 800a354:	613b      	str	r3, [r7, #16]
 800a356:	68fb      	ldr	r3, [r7, #12]
 800a358:	697a      	ldr	r2, [r7, #20]
 800a35a:	619a      	str	r2, [r3, #24]
 800a35c:	68fb      	ldr	r3, [r7, #12]
 800a35e:	693a      	ldr	r2, [r7, #16]
 800a360:	621a      	str	r2, [r3, #32]
 800a362:	bf00      	nop
 800a364:	371c      	adds	r7, #28
 800a366:	46bd      	mov	sp, r7
 800a368:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a36c:	4770      	bx	lr

0800a36e <TIM_ITRx_SetConfig>:
 800a36e:	b480      	push	{r7}
 800a370:	b085      	sub	sp, #20
 800a372:	af00      	add	r7, sp, #0
 800a374:	6078      	str	r0, [r7, #4]
 800a376:	6039      	str	r1, [r7, #0]
 800a378:	687b      	ldr	r3, [r7, #4]
 800a37a:	689b      	ldr	r3, [r3, #8]
 800a37c:	60fb      	str	r3, [r7, #12]
 800a37e:	68fb      	ldr	r3, [r7, #12]
 800a380:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a384:	60fb      	str	r3, [r7, #12]
 800a386:	683a      	ldr	r2, [r7, #0]
 800a388:	68fb      	ldr	r3, [r7, #12]
 800a38a:	4313      	orrs	r3, r2
 800a38c:	f043 0307 	orr.w	r3, r3, #7
 800a390:	60fb      	str	r3, [r7, #12]
 800a392:	687b      	ldr	r3, [r7, #4]
 800a394:	68fa      	ldr	r2, [r7, #12]
 800a396:	609a      	str	r2, [r3, #8]
 800a398:	bf00      	nop
 800a39a:	3714      	adds	r7, #20
 800a39c:	46bd      	mov	sp, r7
 800a39e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3a2:	4770      	bx	lr

0800a3a4 <TIM_ETR_SetConfig>:
 800a3a4:	b480      	push	{r7}
 800a3a6:	b087      	sub	sp, #28
 800a3a8:	af00      	add	r7, sp, #0
 800a3aa:	60f8      	str	r0, [r7, #12]
 800a3ac:	60b9      	str	r1, [r7, #8]
 800a3ae:	607a      	str	r2, [r7, #4]
 800a3b0:	603b      	str	r3, [r7, #0]
 800a3b2:	68fb      	ldr	r3, [r7, #12]
 800a3b4:	689b      	ldr	r3, [r3, #8]
 800a3b6:	617b      	str	r3, [r7, #20]
 800a3b8:	697b      	ldr	r3, [r7, #20]
 800a3ba:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800a3be:	617b      	str	r3, [r7, #20]
 800a3c0:	683b      	ldr	r3, [r7, #0]
 800a3c2:	021a      	lsls	r2, r3, #8
 800a3c4:	687b      	ldr	r3, [r7, #4]
 800a3c6:	431a      	orrs	r2, r3
 800a3c8:	68bb      	ldr	r3, [r7, #8]
 800a3ca:	4313      	orrs	r3, r2
 800a3cc:	697a      	ldr	r2, [r7, #20]
 800a3ce:	4313      	orrs	r3, r2
 800a3d0:	617b      	str	r3, [r7, #20]
 800a3d2:	68fb      	ldr	r3, [r7, #12]
 800a3d4:	697a      	ldr	r2, [r7, #20]
 800a3d6:	609a      	str	r2, [r3, #8]
 800a3d8:	bf00      	nop
 800a3da:	371c      	adds	r7, #28
 800a3dc:	46bd      	mov	sp, r7
 800a3de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3e2:	4770      	bx	lr

0800a3e4 <TIM_CCxChannelCmd>:
 800a3e4:	b480      	push	{r7}
 800a3e6:	b087      	sub	sp, #28
 800a3e8:	af00      	add	r7, sp, #0
 800a3ea:	60f8      	str	r0, [r7, #12]
 800a3ec:	60b9      	str	r1, [r7, #8]
 800a3ee:	607a      	str	r2, [r7, #4]
 800a3f0:	68bb      	ldr	r3, [r7, #8]
 800a3f2:	f003 031f 	and.w	r3, r3, #31
 800a3f6:	2201      	movs	r2, #1
 800a3f8:	fa02 f303 	lsl.w	r3, r2, r3
 800a3fc:	617b      	str	r3, [r7, #20]
 800a3fe:	68fb      	ldr	r3, [r7, #12]
 800a400:	6a1a      	ldr	r2, [r3, #32]
 800a402:	697b      	ldr	r3, [r7, #20]
 800a404:	43db      	mvns	r3, r3
 800a406:	401a      	ands	r2, r3
 800a408:	68fb      	ldr	r3, [r7, #12]
 800a40a:	621a      	str	r2, [r3, #32]
 800a40c:	68fb      	ldr	r3, [r7, #12]
 800a40e:	6a1a      	ldr	r2, [r3, #32]
 800a410:	68bb      	ldr	r3, [r7, #8]
 800a412:	f003 031f 	and.w	r3, r3, #31
 800a416:	6879      	ldr	r1, [r7, #4]
 800a418:	fa01 f303 	lsl.w	r3, r1, r3
 800a41c:	431a      	orrs	r2, r3
 800a41e:	68fb      	ldr	r3, [r7, #12]
 800a420:	621a      	str	r2, [r3, #32]
 800a422:	bf00      	nop
 800a424:	371c      	adds	r7, #28
 800a426:	46bd      	mov	sp, r7
 800a428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a42c:	4770      	bx	lr
	...

0800a430 <HAL_TIMEx_MasterConfigSynchronization>:
 800a430:	b480      	push	{r7}
 800a432:	b085      	sub	sp, #20
 800a434:	af00      	add	r7, sp, #0
 800a436:	6078      	str	r0, [r7, #4]
 800a438:	6039      	str	r1, [r7, #0]
 800a43a:	687b      	ldr	r3, [r7, #4]
 800a43c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800a440:	2b01      	cmp	r3, #1
 800a442:	d101      	bne.n	800a448 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800a444:	2302      	movs	r3, #2
 800a446:	e050      	b.n	800a4ea <HAL_TIMEx_MasterConfigSynchronization+0xba>
 800a448:	687b      	ldr	r3, [r7, #4]
 800a44a:	2201      	movs	r2, #1
 800a44c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a450:	687b      	ldr	r3, [r7, #4]
 800a452:	2202      	movs	r2, #2
 800a454:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a458:	687b      	ldr	r3, [r7, #4]
 800a45a:	681b      	ldr	r3, [r3, #0]
 800a45c:	685b      	ldr	r3, [r3, #4]
 800a45e:	60fb      	str	r3, [r7, #12]
 800a460:	687b      	ldr	r3, [r7, #4]
 800a462:	681b      	ldr	r3, [r3, #0]
 800a464:	689b      	ldr	r3, [r3, #8]
 800a466:	60bb      	str	r3, [r7, #8]
 800a468:	68fb      	ldr	r3, [r7, #12]
 800a46a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a46e:	60fb      	str	r3, [r7, #12]
 800a470:	683b      	ldr	r3, [r7, #0]
 800a472:	681b      	ldr	r3, [r3, #0]
 800a474:	68fa      	ldr	r2, [r7, #12]
 800a476:	4313      	orrs	r3, r2
 800a478:	60fb      	str	r3, [r7, #12]
 800a47a:	687b      	ldr	r3, [r7, #4]
 800a47c:	681b      	ldr	r3, [r3, #0]
 800a47e:	68fa      	ldr	r2, [r7, #12]
 800a480:	605a      	str	r2, [r3, #4]
 800a482:	687b      	ldr	r3, [r7, #4]
 800a484:	681b      	ldr	r3, [r3, #0]
 800a486:	4a1c      	ldr	r2, [pc, #112]	; (800a4f8 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 800a488:	4293      	cmp	r3, r2
 800a48a:	d018      	beq.n	800a4be <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a48c:	687b      	ldr	r3, [r7, #4]
 800a48e:	681b      	ldr	r3, [r3, #0]
 800a490:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a494:	d013      	beq.n	800a4be <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a496:	687b      	ldr	r3, [r7, #4]
 800a498:	681b      	ldr	r3, [r3, #0]
 800a49a:	4a18      	ldr	r2, [pc, #96]	; (800a4fc <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 800a49c:	4293      	cmp	r3, r2
 800a49e:	d00e      	beq.n	800a4be <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a4a0:	687b      	ldr	r3, [r7, #4]
 800a4a2:	681b      	ldr	r3, [r3, #0]
 800a4a4:	4a16      	ldr	r2, [pc, #88]	; (800a500 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 800a4a6:	4293      	cmp	r3, r2
 800a4a8:	d009      	beq.n	800a4be <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a4aa:	687b      	ldr	r3, [r7, #4]
 800a4ac:	681b      	ldr	r3, [r3, #0]
 800a4ae:	4a15      	ldr	r2, [pc, #84]	; (800a504 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 800a4b0:	4293      	cmp	r3, r2
 800a4b2:	d004      	beq.n	800a4be <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a4b4:	687b      	ldr	r3, [r7, #4]
 800a4b6:	681b      	ldr	r3, [r3, #0]
 800a4b8:	4a13      	ldr	r2, [pc, #76]	; (800a508 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 800a4ba:	4293      	cmp	r3, r2
 800a4bc:	d10c      	bne.n	800a4d8 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 800a4be:	68bb      	ldr	r3, [r7, #8]
 800a4c0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800a4c4:	60bb      	str	r3, [r7, #8]
 800a4c6:	683b      	ldr	r3, [r7, #0]
 800a4c8:	685b      	ldr	r3, [r3, #4]
 800a4ca:	68ba      	ldr	r2, [r7, #8]
 800a4cc:	4313      	orrs	r3, r2
 800a4ce:	60bb      	str	r3, [r7, #8]
 800a4d0:	687b      	ldr	r3, [r7, #4]
 800a4d2:	681b      	ldr	r3, [r3, #0]
 800a4d4:	68ba      	ldr	r2, [r7, #8]
 800a4d6:	609a      	str	r2, [r3, #8]
 800a4d8:	687b      	ldr	r3, [r7, #4]
 800a4da:	2201      	movs	r2, #1
 800a4dc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a4e0:	687b      	ldr	r3, [r7, #4]
 800a4e2:	2200      	movs	r2, #0
 800a4e4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a4e8:	2300      	movs	r3, #0
 800a4ea:	4618      	mov	r0, r3
 800a4ec:	3714      	adds	r7, #20
 800a4ee:	46bd      	mov	sp, r7
 800a4f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4f4:	4770      	bx	lr
 800a4f6:	bf00      	nop
 800a4f8:	40010000 	.word	0x40010000
 800a4fc:	40000400 	.word	0x40000400
 800a500:	40000800 	.word	0x40000800
 800a504:	40000c00 	.word	0x40000c00
 800a508:	40014000 	.word	0x40014000

0800a50c <HAL_TIMEx_CommutCallback>:
 800a50c:	b480      	push	{r7}
 800a50e:	b083      	sub	sp, #12
 800a510:	af00      	add	r7, sp, #0
 800a512:	6078      	str	r0, [r7, #4]
 800a514:	bf00      	nop
 800a516:	370c      	adds	r7, #12
 800a518:	46bd      	mov	sp, r7
 800a51a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a51e:	4770      	bx	lr

0800a520 <HAL_TIMEx_BreakCallback>:
 800a520:	b480      	push	{r7}
 800a522:	b083      	sub	sp, #12
 800a524:	af00      	add	r7, sp, #0
 800a526:	6078      	str	r0, [r7, #4]
 800a528:	bf00      	nop
 800a52a:	370c      	adds	r7, #12
 800a52c:	46bd      	mov	sp, r7
 800a52e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a532:	4770      	bx	lr

0800a534 <HAL_UART_Init>:
 800a534:	b580      	push	{r7, lr}
 800a536:	b082      	sub	sp, #8
 800a538:	af00      	add	r7, sp, #0
 800a53a:	6078      	str	r0, [r7, #4]
 800a53c:	687b      	ldr	r3, [r7, #4]
 800a53e:	2b00      	cmp	r3, #0
 800a540:	d101      	bne.n	800a546 <HAL_UART_Init+0x12>
 800a542:	2301      	movs	r3, #1
 800a544:	e03f      	b.n	800a5c6 <HAL_UART_Init+0x92>
 800a546:	687b      	ldr	r3, [r7, #4]
 800a548:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a54c:	b2db      	uxtb	r3, r3
 800a54e:	2b00      	cmp	r3, #0
 800a550:	d106      	bne.n	800a560 <HAL_UART_Init+0x2c>
 800a552:	687b      	ldr	r3, [r7, #4]
 800a554:	2200      	movs	r2, #0
 800a556:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a55a:	6878      	ldr	r0, [r7, #4]
 800a55c:	f7fa f8c2 	bl	80046e4 <HAL_UART_MspInit>
 800a560:	687b      	ldr	r3, [r7, #4]
 800a562:	2224      	movs	r2, #36	; 0x24
 800a564:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a568:	687b      	ldr	r3, [r7, #4]
 800a56a:	681b      	ldr	r3, [r3, #0]
 800a56c:	68da      	ldr	r2, [r3, #12]
 800a56e:	687b      	ldr	r3, [r7, #4]
 800a570:	681b      	ldr	r3, [r3, #0]
 800a572:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a576:	60da      	str	r2, [r3, #12]
 800a578:	6878      	ldr	r0, [r7, #4]
 800a57a:	f000 ffcd 	bl	800b518 <UART_SetConfig>
 800a57e:	687b      	ldr	r3, [r7, #4]
 800a580:	681b      	ldr	r3, [r3, #0]
 800a582:	691a      	ldr	r2, [r3, #16]
 800a584:	687b      	ldr	r3, [r7, #4]
 800a586:	681b      	ldr	r3, [r3, #0]
 800a588:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800a58c:	611a      	str	r2, [r3, #16]
 800a58e:	687b      	ldr	r3, [r7, #4]
 800a590:	681b      	ldr	r3, [r3, #0]
 800a592:	695a      	ldr	r2, [r3, #20]
 800a594:	687b      	ldr	r3, [r7, #4]
 800a596:	681b      	ldr	r3, [r3, #0]
 800a598:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800a59c:	615a      	str	r2, [r3, #20]
 800a59e:	687b      	ldr	r3, [r7, #4]
 800a5a0:	681b      	ldr	r3, [r3, #0]
 800a5a2:	68da      	ldr	r2, [r3, #12]
 800a5a4:	687b      	ldr	r3, [r7, #4]
 800a5a6:	681b      	ldr	r3, [r3, #0]
 800a5a8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800a5ac:	60da      	str	r2, [r3, #12]
 800a5ae:	687b      	ldr	r3, [r7, #4]
 800a5b0:	2200      	movs	r2, #0
 800a5b2:	641a      	str	r2, [r3, #64]	; 0x40
 800a5b4:	687b      	ldr	r3, [r7, #4]
 800a5b6:	2220      	movs	r2, #32
 800a5b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a5bc:	687b      	ldr	r3, [r7, #4]
 800a5be:	2220      	movs	r2, #32
 800a5c0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a5c4:	2300      	movs	r3, #0
 800a5c6:	4618      	mov	r0, r3
 800a5c8:	3708      	adds	r7, #8
 800a5ca:	46bd      	mov	sp, r7
 800a5cc:	bd80      	pop	{r7, pc}
	...

0800a5d0 <HAL_UART_Transmit_DMA>:
 800a5d0:	b580      	push	{r7, lr}
 800a5d2:	b08c      	sub	sp, #48	; 0x30
 800a5d4:	af00      	add	r7, sp, #0
 800a5d6:	60f8      	str	r0, [r7, #12]
 800a5d8:	60b9      	str	r1, [r7, #8]
 800a5da:	4613      	mov	r3, r2
 800a5dc:	80fb      	strh	r3, [r7, #6]
 800a5de:	68fb      	ldr	r3, [r7, #12]
 800a5e0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a5e4:	b2db      	uxtb	r3, r3
 800a5e6:	2b20      	cmp	r3, #32
 800a5e8:	d165      	bne.n	800a6b6 <HAL_UART_Transmit_DMA+0xe6>
 800a5ea:	68bb      	ldr	r3, [r7, #8]
 800a5ec:	2b00      	cmp	r3, #0
 800a5ee:	d002      	beq.n	800a5f6 <HAL_UART_Transmit_DMA+0x26>
 800a5f0:	88fb      	ldrh	r3, [r7, #6]
 800a5f2:	2b00      	cmp	r3, #0
 800a5f4:	d101      	bne.n	800a5fa <HAL_UART_Transmit_DMA+0x2a>
 800a5f6:	2301      	movs	r3, #1
 800a5f8:	e05e      	b.n	800a6b8 <HAL_UART_Transmit_DMA+0xe8>
 800a5fa:	68fb      	ldr	r3, [r7, #12]
 800a5fc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800a600:	2b01      	cmp	r3, #1
 800a602:	d101      	bne.n	800a608 <HAL_UART_Transmit_DMA+0x38>
 800a604:	2302      	movs	r3, #2
 800a606:	e057      	b.n	800a6b8 <HAL_UART_Transmit_DMA+0xe8>
 800a608:	68fb      	ldr	r3, [r7, #12]
 800a60a:	2201      	movs	r2, #1
 800a60c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a610:	68ba      	ldr	r2, [r7, #8]
 800a612:	68fb      	ldr	r3, [r7, #12]
 800a614:	621a      	str	r2, [r3, #32]
 800a616:	68fb      	ldr	r3, [r7, #12]
 800a618:	88fa      	ldrh	r2, [r7, #6]
 800a61a:	849a      	strh	r2, [r3, #36]	; 0x24
 800a61c:	68fb      	ldr	r3, [r7, #12]
 800a61e:	88fa      	ldrh	r2, [r7, #6]
 800a620:	84da      	strh	r2, [r3, #38]	; 0x26
 800a622:	68fb      	ldr	r3, [r7, #12]
 800a624:	2200      	movs	r2, #0
 800a626:	641a      	str	r2, [r3, #64]	; 0x40
 800a628:	68fb      	ldr	r3, [r7, #12]
 800a62a:	2221      	movs	r2, #33	; 0x21
 800a62c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a630:	68fb      	ldr	r3, [r7, #12]
 800a632:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a634:	4a22      	ldr	r2, [pc, #136]	; (800a6c0 <HAL_UART_Transmit_DMA+0xf0>)
 800a636:	63da      	str	r2, [r3, #60]	; 0x3c
 800a638:	68fb      	ldr	r3, [r7, #12]
 800a63a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a63c:	4a21      	ldr	r2, [pc, #132]	; (800a6c4 <HAL_UART_Transmit_DMA+0xf4>)
 800a63e:	641a      	str	r2, [r3, #64]	; 0x40
 800a640:	68fb      	ldr	r3, [r7, #12]
 800a642:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a644:	4a20      	ldr	r2, [pc, #128]	; (800a6c8 <HAL_UART_Transmit_DMA+0xf8>)
 800a646:	64da      	str	r2, [r3, #76]	; 0x4c
 800a648:	68fb      	ldr	r3, [r7, #12]
 800a64a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a64c:	2200      	movs	r2, #0
 800a64e:	651a      	str	r2, [r3, #80]	; 0x50
 800a650:	f107 0308 	add.w	r3, r7, #8
 800a654:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a656:	68fb      	ldr	r3, [r7, #12]
 800a658:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800a65a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a65c:	6819      	ldr	r1, [r3, #0]
 800a65e:	68fb      	ldr	r3, [r7, #12]
 800a660:	681b      	ldr	r3, [r3, #0]
 800a662:	3304      	adds	r3, #4
 800a664:	461a      	mov	r2, r3
 800a666:	88fb      	ldrh	r3, [r7, #6]
 800a668:	f7fa fbfe 	bl	8004e68 <HAL_DMA_Start_IT>
 800a66c:	68fb      	ldr	r3, [r7, #12]
 800a66e:	681b      	ldr	r3, [r3, #0]
 800a670:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800a674:	601a      	str	r2, [r3, #0]
 800a676:	68fb      	ldr	r3, [r7, #12]
 800a678:	2200      	movs	r2, #0
 800a67a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a67e:	68fb      	ldr	r3, [r7, #12]
 800a680:	681b      	ldr	r3, [r3, #0]
 800a682:	3314      	adds	r3, #20
 800a684:	61bb      	str	r3, [r7, #24]
 800a686:	69bb      	ldr	r3, [r7, #24]
 800a688:	e853 3f00 	ldrex	r3, [r3]
 800a68c:	617b      	str	r3, [r7, #20]
 800a68e:	697b      	ldr	r3, [r7, #20]
 800a690:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800a694:	62bb      	str	r3, [r7, #40]	; 0x28
 800a696:	68fb      	ldr	r3, [r7, #12]
 800a698:	681b      	ldr	r3, [r3, #0]
 800a69a:	3314      	adds	r3, #20
 800a69c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a69e:	627a      	str	r2, [r7, #36]	; 0x24
 800a6a0:	623b      	str	r3, [r7, #32]
 800a6a2:	6a39      	ldr	r1, [r7, #32]
 800a6a4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a6a6:	e841 2300 	strex	r3, r2, [r1]
 800a6aa:	61fb      	str	r3, [r7, #28]
 800a6ac:	69fb      	ldr	r3, [r7, #28]
 800a6ae:	2b00      	cmp	r3, #0
 800a6b0:	d1e5      	bne.n	800a67e <HAL_UART_Transmit_DMA+0xae>
 800a6b2:	2300      	movs	r3, #0
 800a6b4:	e000      	b.n	800a6b8 <HAL_UART_Transmit_DMA+0xe8>
 800a6b6:	2302      	movs	r3, #2
 800a6b8:	4618      	mov	r0, r3
 800a6ba:	3730      	adds	r7, #48	; 0x30
 800a6bc:	46bd      	mov	sp, r7
 800a6be:	bd80      	pop	{r7, pc}
 800a6c0:	0800adb1 	.word	0x0800adb1
 800a6c4:	0800ae4b 	.word	0x0800ae4b
 800a6c8:	0800afc3 	.word	0x0800afc3

0800a6cc <HAL_UART_Receive_DMA>:
 800a6cc:	b580      	push	{r7, lr}
 800a6ce:	b084      	sub	sp, #16
 800a6d0:	af00      	add	r7, sp, #0
 800a6d2:	60f8      	str	r0, [r7, #12]
 800a6d4:	60b9      	str	r1, [r7, #8]
 800a6d6:	4613      	mov	r3, r2
 800a6d8:	80fb      	strh	r3, [r7, #6]
 800a6da:	68fb      	ldr	r3, [r7, #12]
 800a6dc:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a6e0:	b2db      	uxtb	r3, r3
 800a6e2:	2b20      	cmp	r3, #32
 800a6e4:	d11d      	bne.n	800a722 <HAL_UART_Receive_DMA+0x56>
 800a6e6:	68bb      	ldr	r3, [r7, #8]
 800a6e8:	2b00      	cmp	r3, #0
 800a6ea:	d002      	beq.n	800a6f2 <HAL_UART_Receive_DMA+0x26>
 800a6ec:	88fb      	ldrh	r3, [r7, #6]
 800a6ee:	2b00      	cmp	r3, #0
 800a6f0:	d101      	bne.n	800a6f6 <HAL_UART_Receive_DMA+0x2a>
 800a6f2:	2301      	movs	r3, #1
 800a6f4:	e016      	b.n	800a724 <HAL_UART_Receive_DMA+0x58>
 800a6f6:	68fb      	ldr	r3, [r7, #12]
 800a6f8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800a6fc:	2b01      	cmp	r3, #1
 800a6fe:	d101      	bne.n	800a704 <HAL_UART_Receive_DMA+0x38>
 800a700:	2302      	movs	r3, #2
 800a702:	e00f      	b.n	800a724 <HAL_UART_Receive_DMA+0x58>
 800a704:	68fb      	ldr	r3, [r7, #12]
 800a706:	2201      	movs	r2, #1
 800a708:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a70c:	68fb      	ldr	r3, [r7, #12]
 800a70e:	2200      	movs	r2, #0
 800a710:	631a      	str	r2, [r3, #48]	; 0x30
 800a712:	88fb      	ldrh	r3, [r7, #6]
 800a714:	461a      	mov	r2, r3
 800a716:	68b9      	ldr	r1, [r7, #8]
 800a718:	68f8      	ldr	r0, [r7, #12]
 800a71a:	f000 fc9d 	bl	800b058 <UART_Start_Receive_DMA>
 800a71e:	4603      	mov	r3, r0
 800a720:	e000      	b.n	800a724 <HAL_UART_Receive_DMA+0x58>
 800a722:	2302      	movs	r3, #2
 800a724:	4618      	mov	r0, r3
 800a726:	3710      	adds	r7, #16
 800a728:	46bd      	mov	sp, r7
 800a72a:	bd80      	pop	{r7, pc}

0800a72c <HAL_UART_DMAStop>:
 800a72c:	b580      	push	{r7, lr}
 800a72e:	b090      	sub	sp, #64	; 0x40
 800a730:	af00      	add	r7, sp, #0
 800a732:	6078      	str	r0, [r7, #4]
 800a734:	2300      	movs	r3, #0
 800a736:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a738:	687b      	ldr	r3, [r7, #4]
 800a73a:	681b      	ldr	r3, [r3, #0]
 800a73c:	695b      	ldr	r3, [r3, #20]
 800a73e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800a742:	2b80      	cmp	r3, #128	; 0x80
 800a744:	bf0c      	ite	eq
 800a746:	2301      	moveq	r3, #1
 800a748:	2300      	movne	r3, #0
 800a74a:	b2db      	uxtb	r3, r3
 800a74c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a74e:	687b      	ldr	r3, [r7, #4]
 800a750:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a754:	b2db      	uxtb	r3, r3
 800a756:	2b21      	cmp	r3, #33	; 0x21
 800a758:	d128      	bne.n	800a7ac <HAL_UART_DMAStop+0x80>
 800a75a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a75c:	2b00      	cmp	r3, #0
 800a75e:	d025      	beq.n	800a7ac <HAL_UART_DMAStop+0x80>
 800a760:	687b      	ldr	r3, [r7, #4]
 800a762:	681b      	ldr	r3, [r3, #0]
 800a764:	3314      	adds	r3, #20
 800a766:	627b      	str	r3, [r7, #36]	; 0x24
 800a768:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a76a:	e853 3f00 	ldrex	r3, [r3]
 800a76e:	623b      	str	r3, [r7, #32]
 800a770:	6a3b      	ldr	r3, [r7, #32]
 800a772:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800a776:	63bb      	str	r3, [r7, #56]	; 0x38
 800a778:	687b      	ldr	r3, [r7, #4]
 800a77a:	681b      	ldr	r3, [r3, #0]
 800a77c:	3314      	adds	r3, #20
 800a77e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800a780:	633a      	str	r2, [r7, #48]	; 0x30
 800a782:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a784:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800a786:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a788:	e841 2300 	strex	r3, r2, [r1]
 800a78c:	62bb      	str	r3, [r7, #40]	; 0x28
 800a78e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a790:	2b00      	cmp	r3, #0
 800a792:	d1e5      	bne.n	800a760 <HAL_UART_DMAStop+0x34>
 800a794:	687b      	ldr	r3, [r7, #4]
 800a796:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a798:	2b00      	cmp	r3, #0
 800a79a:	d004      	beq.n	800a7a6 <HAL_UART_DMAStop+0x7a>
 800a79c:	687b      	ldr	r3, [r7, #4]
 800a79e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a7a0:	4618      	mov	r0, r3
 800a7a2:	f7fa fbb9 	bl	8004f18 <HAL_DMA_Abort>
 800a7a6:	6878      	ldr	r0, [r7, #4]
 800a7a8:	f000 fcf4 	bl	800b194 <UART_EndTxTransfer>
 800a7ac:	687b      	ldr	r3, [r7, #4]
 800a7ae:	681b      	ldr	r3, [r3, #0]
 800a7b0:	695b      	ldr	r3, [r3, #20]
 800a7b2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a7b6:	2b40      	cmp	r3, #64	; 0x40
 800a7b8:	bf0c      	ite	eq
 800a7ba:	2301      	moveq	r3, #1
 800a7bc:	2300      	movne	r3, #0
 800a7be:	b2db      	uxtb	r3, r3
 800a7c0:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a7c2:	687b      	ldr	r3, [r7, #4]
 800a7c4:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a7c8:	b2db      	uxtb	r3, r3
 800a7ca:	2b22      	cmp	r3, #34	; 0x22
 800a7cc:	d128      	bne.n	800a820 <HAL_UART_DMAStop+0xf4>
 800a7ce:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a7d0:	2b00      	cmp	r3, #0
 800a7d2:	d025      	beq.n	800a820 <HAL_UART_DMAStop+0xf4>
 800a7d4:	687b      	ldr	r3, [r7, #4]
 800a7d6:	681b      	ldr	r3, [r3, #0]
 800a7d8:	3314      	adds	r3, #20
 800a7da:	613b      	str	r3, [r7, #16]
 800a7dc:	693b      	ldr	r3, [r7, #16]
 800a7de:	e853 3f00 	ldrex	r3, [r3]
 800a7e2:	60fb      	str	r3, [r7, #12]
 800a7e4:	68fb      	ldr	r3, [r7, #12]
 800a7e6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a7ea:	637b      	str	r3, [r7, #52]	; 0x34
 800a7ec:	687b      	ldr	r3, [r7, #4]
 800a7ee:	681b      	ldr	r3, [r3, #0]
 800a7f0:	3314      	adds	r3, #20
 800a7f2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800a7f4:	61fa      	str	r2, [r7, #28]
 800a7f6:	61bb      	str	r3, [r7, #24]
 800a7f8:	69b9      	ldr	r1, [r7, #24]
 800a7fa:	69fa      	ldr	r2, [r7, #28]
 800a7fc:	e841 2300 	strex	r3, r2, [r1]
 800a800:	617b      	str	r3, [r7, #20]
 800a802:	697b      	ldr	r3, [r7, #20]
 800a804:	2b00      	cmp	r3, #0
 800a806:	d1e5      	bne.n	800a7d4 <HAL_UART_DMAStop+0xa8>
 800a808:	687b      	ldr	r3, [r7, #4]
 800a80a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a80c:	2b00      	cmp	r3, #0
 800a80e:	d004      	beq.n	800a81a <HAL_UART_DMAStop+0xee>
 800a810:	687b      	ldr	r3, [r7, #4]
 800a812:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a814:	4618      	mov	r0, r3
 800a816:	f7fa fb7f 	bl	8004f18 <HAL_DMA_Abort>
 800a81a:	6878      	ldr	r0, [r7, #4]
 800a81c:	f000 fce2 	bl	800b1e4 <UART_EndRxTransfer>
 800a820:	2300      	movs	r3, #0
 800a822:	4618      	mov	r0, r3
 800a824:	3740      	adds	r7, #64	; 0x40
 800a826:	46bd      	mov	sp, r7
 800a828:	bd80      	pop	{r7, pc}
	...

0800a82c <HAL_UART_IRQHandler>:
 800a82c:	b580      	push	{r7, lr}
 800a82e:	b0ba      	sub	sp, #232	; 0xe8
 800a830:	af00      	add	r7, sp, #0
 800a832:	6078      	str	r0, [r7, #4]
 800a834:	687b      	ldr	r3, [r7, #4]
 800a836:	681b      	ldr	r3, [r3, #0]
 800a838:	681b      	ldr	r3, [r3, #0]
 800a83a:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800a83e:	687b      	ldr	r3, [r7, #4]
 800a840:	681b      	ldr	r3, [r3, #0]
 800a842:	68db      	ldr	r3, [r3, #12]
 800a844:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800a848:	687b      	ldr	r3, [r7, #4]
 800a84a:	681b      	ldr	r3, [r3, #0]
 800a84c:	695b      	ldr	r3, [r3, #20]
 800a84e:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800a852:	2300      	movs	r3, #0
 800a854:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800a858:	2300      	movs	r3, #0
 800a85a:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800a85e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a862:	f003 030f 	and.w	r3, r3, #15
 800a866:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800a86a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800a86e:	2b00      	cmp	r3, #0
 800a870:	d10f      	bne.n	800a892 <HAL_UART_IRQHandler+0x66>
 800a872:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a876:	f003 0320 	and.w	r3, r3, #32
 800a87a:	2b00      	cmp	r3, #0
 800a87c:	d009      	beq.n	800a892 <HAL_UART_IRQHandler+0x66>
 800a87e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a882:	f003 0320 	and.w	r3, r3, #32
 800a886:	2b00      	cmp	r3, #0
 800a888:	d003      	beq.n	800a892 <HAL_UART_IRQHandler+0x66>
 800a88a:	6878      	ldr	r0, [r7, #4]
 800a88c:	f000 fd89 	bl	800b3a2 <UART_Receive_IT>
 800a890:	e256      	b.n	800ad40 <HAL_UART_IRQHandler+0x514>
 800a892:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800a896:	2b00      	cmp	r3, #0
 800a898:	f000 80de 	beq.w	800aa58 <HAL_UART_IRQHandler+0x22c>
 800a89c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a8a0:	f003 0301 	and.w	r3, r3, #1
 800a8a4:	2b00      	cmp	r3, #0
 800a8a6:	d106      	bne.n	800a8b6 <HAL_UART_IRQHandler+0x8a>
 800a8a8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a8ac:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800a8b0:	2b00      	cmp	r3, #0
 800a8b2:	f000 80d1 	beq.w	800aa58 <HAL_UART_IRQHandler+0x22c>
 800a8b6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a8ba:	f003 0301 	and.w	r3, r3, #1
 800a8be:	2b00      	cmp	r3, #0
 800a8c0:	d00b      	beq.n	800a8da <HAL_UART_IRQHandler+0xae>
 800a8c2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a8c6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a8ca:	2b00      	cmp	r3, #0
 800a8cc:	d005      	beq.n	800a8da <HAL_UART_IRQHandler+0xae>
 800a8ce:	687b      	ldr	r3, [r7, #4]
 800a8d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a8d2:	f043 0201 	orr.w	r2, r3, #1
 800a8d6:	687b      	ldr	r3, [r7, #4]
 800a8d8:	641a      	str	r2, [r3, #64]	; 0x40
 800a8da:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a8de:	f003 0304 	and.w	r3, r3, #4
 800a8e2:	2b00      	cmp	r3, #0
 800a8e4:	d00b      	beq.n	800a8fe <HAL_UART_IRQHandler+0xd2>
 800a8e6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a8ea:	f003 0301 	and.w	r3, r3, #1
 800a8ee:	2b00      	cmp	r3, #0
 800a8f0:	d005      	beq.n	800a8fe <HAL_UART_IRQHandler+0xd2>
 800a8f2:	687b      	ldr	r3, [r7, #4]
 800a8f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a8f6:	f043 0202 	orr.w	r2, r3, #2
 800a8fa:	687b      	ldr	r3, [r7, #4]
 800a8fc:	641a      	str	r2, [r3, #64]	; 0x40
 800a8fe:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a902:	f003 0302 	and.w	r3, r3, #2
 800a906:	2b00      	cmp	r3, #0
 800a908:	d00b      	beq.n	800a922 <HAL_UART_IRQHandler+0xf6>
 800a90a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a90e:	f003 0301 	and.w	r3, r3, #1
 800a912:	2b00      	cmp	r3, #0
 800a914:	d005      	beq.n	800a922 <HAL_UART_IRQHandler+0xf6>
 800a916:	687b      	ldr	r3, [r7, #4]
 800a918:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a91a:	f043 0204 	orr.w	r2, r3, #4
 800a91e:	687b      	ldr	r3, [r7, #4]
 800a920:	641a      	str	r2, [r3, #64]	; 0x40
 800a922:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a926:	f003 0308 	and.w	r3, r3, #8
 800a92a:	2b00      	cmp	r3, #0
 800a92c:	d011      	beq.n	800a952 <HAL_UART_IRQHandler+0x126>
 800a92e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a932:	f003 0320 	and.w	r3, r3, #32
 800a936:	2b00      	cmp	r3, #0
 800a938:	d105      	bne.n	800a946 <HAL_UART_IRQHandler+0x11a>
 800a93a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a93e:	f003 0301 	and.w	r3, r3, #1
 800a942:	2b00      	cmp	r3, #0
 800a944:	d005      	beq.n	800a952 <HAL_UART_IRQHandler+0x126>
 800a946:	687b      	ldr	r3, [r7, #4]
 800a948:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a94a:	f043 0208 	orr.w	r2, r3, #8
 800a94e:	687b      	ldr	r3, [r7, #4]
 800a950:	641a      	str	r2, [r3, #64]	; 0x40
 800a952:	687b      	ldr	r3, [r7, #4]
 800a954:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a956:	2b00      	cmp	r3, #0
 800a958:	f000 81ed 	beq.w	800ad36 <HAL_UART_IRQHandler+0x50a>
 800a95c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a960:	f003 0320 	and.w	r3, r3, #32
 800a964:	2b00      	cmp	r3, #0
 800a966:	d008      	beq.n	800a97a <HAL_UART_IRQHandler+0x14e>
 800a968:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a96c:	f003 0320 	and.w	r3, r3, #32
 800a970:	2b00      	cmp	r3, #0
 800a972:	d002      	beq.n	800a97a <HAL_UART_IRQHandler+0x14e>
 800a974:	6878      	ldr	r0, [r7, #4]
 800a976:	f000 fd14 	bl	800b3a2 <UART_Receive_IT>
 800a97a:	687b      	ldr	r3, [r7, #4]
 800a97c:	681b      	ldr	r3, [r3, #0]
 800a97e:	695b      	ldr	r3, [r3, #20]
 800a980:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a984:	2b40      	cmp	r3, #64	; 0x40
 800a986:	bf0c      	ite	eq
 800a988:	2301      	moveq	r3, #1
 800a98a:	2300      	movne	r3, #0
 800a98c:	b2db      	uxtb	r3, r3
 800a98e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800a992:	687b      	ldr	r3, [r7, #4]
 800a994:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a996:	f003 0308 	and.w	r3, r3, #8
 800a99a:	2b00      	cmp	r3, #0
 800a99c:	d103      	bne.n	800a9a6 <HAL_UART_IRQHandler+0x17a>
 800a99e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800a9a2:	2b00      	cmp	r3, #0
 800a9a4:	d04f      	beq.n	800aa46 <HAL_UART_IRQHandler+0x21a>
 800a9a6:	6878      	ldr	r0, [r7, #4]
 800a9a8:	f000 fc1c 	bl	800b1e4 <UART_EndRxTransfer>
 800a9ac:	687b      	ldr	r3, [r7, #4]
 800a9ae:	681b      	ldr	r3, [r3, #0]
 800a9b0:	695b      	ldr	r3, [r3, #20]
 800a9b2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a9b6:	2b40      	cmp	r3, #64	; 0x40
 800a9b8:	d141      	bne.n	800aa3e <HAL_UART_IRQHandler+0x212>
 800a9ba:	687b      	ldr	r3, [r7, #4]
 800a9bc:	681b      	ldr	r3, [r3, #0]
 800a9be:	3314      	adds	r3, #20
 800a9c0:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800a9c4:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800a9c8:	e853 3f00 	ldrex	r3, [r3]
 800a9cc:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800a9d0:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800a9d4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a9d8:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800a9dc:	687b      	ldr	r3, [r7, #4]
 800a9de:	681b      	ldr	r3, [r3, #0]
 800a9e0:	3314      	adds	r3, #20
 800a9e2:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800a9e6:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800a9ea:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800a9ee:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800a9f2:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800a9f6:	e841 2300 	strex	r3, r2, [r1]
 800a9fa:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800a9fe:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800aa02:	2b00      	cmp	r3, #0
 800aa04:	d1d9      	bne.n	800a9ba <HAL_UART_IRQHandler+0x18e>
 800aa06:	687b      	ldr	r3, [r7, #4]
 800aa08:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aa0a:	2b00      	cmp	r3, #0
 800aa0c:	d013      	beq.n	800aa36 <HAL_UART_IRQHandler+0x20a>
 800aa0e:	687b      	ldr	r3, [r7, #4]
 800aa10:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aa12:	4a7d      	ldr	r2, [pc, #500]	; (800ac08 <HAL_UART_IRQHandler+0x3dc>)
 800aa14:	651a      	str	r2, [r3, #80]	; 0x50
 800aa16:	687b      	ldr	r3, [r7, #4]
 800aa18:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aa1a:	4618      	mov	r0, r3
 800aa1c:	f7fa faec 	bl	8004ff8 <HAL_DMA_Abort_IT>
 800aa20:	4603      	mov	r3, r0
 800aa22:	2b00      	cmp	r3, #0
 800aa24:	d016      	beq.n	800aa54 <HAL_UART_IRQHandler+0x228>
 800aa26:	687b      	ldr	r3, [r7, #4]
 800aa28:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aa2a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800aa2c:	687a      	ldr	r2, [r7, #4]
 800aa2e:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800aa30:	4610      	mov	r0, r2
 800aa32:	4798      	blx	r3
 800aa34:	e00e      	b.n	800aa54 <HAL_UART_IRQHandler+0x228>
 800aa36:	6878      	ldr	r0, [r7, #4]
 800aa38:	f000 f9a4 	bl	800ad84 <HAL_UART_ErrorCallback>
 800aa3c:	e00a      	b.n	800aa54 <HAL_UART_IRQHandler+0x228>
 800aa3e:	6878      	ldr	r0, [r7, #4]
 800aa40:	f000 f9a0 	bl	800ad84 <HAL_UART_ErrorCallback>
 800aa44:	e006      	b.n	800aa54 <HAL_UART_IRQHandler+0x228>
 800aa46:	6878      	ldr	r0, [r7, #4]
 800aa48:	f000 f99c 	bl	800ad84 <HAL_UART_ErrorCallback>
 800aa4c:	687b      	ldr	r3, [r7, #4]
 800aa4e:	2200      	movs	r2, #0
 800aa50:	641a      	str	r2, [r3, #64]	; 0x40
 800aa52:	e170      	b.n	800ad36 <HAL_UART_IRQHandler+0x50a>
 800aa54:	bf00      	nop
 800aa56:	e16e      	b.n	800ad36 <HAL_UART_IRQHandler+0x50a>
 800aa58:	687b      	ldr	r3, [r7, #4]
 800aa5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800aa5c:	2b01      	cmp	r3, #1
 800aa5e:	f040 814a 	bne.w	800acf6 <HAL_UART_IRQHandler+0x4ca>
 800aa62:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800aa66:	f003 0310 	and.w	r3, r3, #16
 800aa6a:	2b00      	cmp	r3, #0
 800aa6c:	f000 8143 	beq.w	800acf6 <HAL_UART_IRQHandler+0x4ca>
 800aa70:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800aa74:	f003 0310 	and.w	r3, r3, #16
 800aa78:	2b00      	cmp	r3, #0
 800aa7a:	f000 813c 	beq.w	800acf6 <HAL_UART_IRQHandler+0x4ca>
 800aa7e:	2300      	movs	r3, #0
 800aa80:	60bb      	str	r3, [r7, #8]
 800aa82:	687b      	ldr	r3, [r7, #4]
 800aa84:	681b      	ldr	r3, [r3, #0]
 800aa86:	681b      	ldr	r3, [r3, #0]
 800aa88:	60bb      	str	r3, [r7, #8]
 800aa8a:	687b      	ldr	r3, [r7, #4]
 800aa8c:	681b      	ldr	r3, [r3, #0]
 800aa8e:	685b      	ldr	r3, [r3, #4]
 800aa90:	60bb      	str	r3, [r7, #8]
 800aa92:	68bb      	ldr	r3, [r7, #8]
 800aa94:	687b      	ldr	r3, [r7, #4]
 800aa96:	681b      	ldr	r3, [r3, #0]
 800aa98:	695b      	ldr	r3, [r3, #20]
 800aa9a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800aa9e:	2b40      	cmp	r3, #64	; 0x40
 800aaa0:	f040 80b4 	bne.w	800ac0c <HAL_UART_IRQHandler+0x3e0>
 800aaa4:	687b      	ldr	r3, [r7, #4]
 800aaa6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aaa8:	681b      	ldr	r3, [r3, #0]
 800aaaa:	685b      	ldr	r3, [r3, #4]
 800aaac:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 800aab0:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800aab4:	2b00      	cmp	r3, #0
 800aab6:	f000 8140 	beq.w	800ad3a <HAL_UART_IRQHandler+0x50e>
 800aaba:	687b      	ldr	r3, [r7, #4]
 800aabc:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800aabe:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800aac2:	429a      	cmp	r2, r3
 800aac4:	f080 8139 	bcs.w	800ad3a <HAL_UART_IRQHandler+0x50e>
 800aac8:	687b      	ldr	r3, [r7, #4]
 800aaca:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800aace:	85da      	strh	r2, [r3, #46]	; 0x2e
 800aad0:	687b      	ldr	r3, [r7, #4]
 800aad2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aad4:	69db      	ldr	r3, [r3, #28]
 800aad6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800aada:	f000 8088 	beq.w	800abee <HAL_UART_IRQHandler+0x3c2>
 800aade:	687b      	ldr	r3, [r7, #4]
 800aae0:	681b      	ldr	r3, [r3, #0]
 800aae2:	330c      	adds	r3, #12
 800aae4:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800aae8:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800aaec:	e853 3f00 	ldrex	r3, [r3]
 800aaf0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800aaf4:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800aaf8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800aafc:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800ab00:	687b      	ldr	r3, [r7, #4]
 800ab02:	681b      	ldr	r3, [r3, #0]
 800ab04:	330c      	adds	r3, #12
 800ab06:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800ab0a:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800ab0e:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800ab12:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800ab16:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800ab1a:	e841 2300 	strex	r3, r2, [r1]
 800ab1e:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800ab22:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800ab26:	2b00      	cmp	r3, #0
 800ab28:	d1d9      	bne.n	800aade <HAL_UART_IRQHandler+0x2b2>
 800ab2a:	687b      	ldr	r3, [r7, #4]
 800ab2c:	681b      	ldr	r3, [r3, #0]
 800ab2e:	3314      	adds	r3, #20
 800ab30:	677b      	str	r3, [r7, #116]	; 0x74
 800ab32:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800ab34:	e853 3f00 	ldrex	r3, [r3]
 800ab38:	673b      	str	r3, [r7, #112]	; 0x70
 800ab3a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800ab3c:	f023 0301 	bic.w	r3, r3, #1
 800ab40:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800ab44:	687b      	ldr	r3, [r7, #4]
 800ab46:	681b      	ldr	r3, [r3, #0]
 800ab48:	3314      	adds	r3, #20
 800ab4a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800ab4e:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800ab52:	67fb      	str	r3, [r7, #124]	; 0x7c
 800ab54:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800ab56:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800ab5a:	e841 2300 	strex	r3, r2, [r1]
 800ab5e:	67bb      	str	r3, [r7, #120]	; 0x78
 800ab60:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800ab62:	2b00      	cmp	r3, #0
 800ab64:	d1e1      	bne.n	800ab2a <HAL_UART_IRQHandler+0x2fe>
 800ab66:	687b      	ldr	r3, [r7, #4]
 800ab68:	681b      	ldr	r3, [r3, #0]
 800ab6a:	3314      	adds	r3, #20
 800ab6c:	663b      	str	r3, [r7, #96]	; 0x60
 800ab6e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800ab70:	e853 3f00 	ldrex	r3, [r3]
 800ab74:	65fb      	str	r3, [r7, #92]	; 0x5c
 800ab76:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800ab78:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ab7c:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800ab80:	687b      	ldr	r3, [r7, #4]
 800ab82:	681b      	ldr	r3, [r3, #0]
 800ab84:	3314      	adds	r3, #20
 800ab86:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800ab8a:	66fa      	str	r2, [r7, #108]	; 0x6c
 800ab8c:	66bb      	str	r3, [r7, #104]	; 0x68
 800ab8e:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800ab90:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800ab92:	e841 2300 	strex	r3, r2, [r1]
 800ab96:	667b      	str	r3, [r7, #100]	; 0x64
 800ab98:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800ab9a:	2b00      	cmp	r3, #0
 800ab9c:	d1e3      	bne.n	800ab66 <HAL_UART_IRQHandler+0x33a>
 800ab9e:	687b      	ldr	r3, [r7, #4]
 800aba0:	2220      	movs	r2, #32
 800aba2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800aba6:	687b      	ldr	r3, [r7, #4]
 800aba8:	2200      	movs	r2, #0
 800abaa:	631a      	str	r2, [r3, #48]	; 0x30
 800abac:	687b      	ldr	r3, [r7, #4]
 800abae:	681b      	ldr	r3, [r3, #0]
 800abb0:	330c      	adds	r3, #12
 800abb2:	64fb      	str	r3, [r7, #76]	; 0x4c
 800abb4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800abb6:	e853 3f00 	ldrex	r3, [r3]
 800abba:	64bb      	str	r3, [r7, #72]	; 0x48
 800abbc:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800abbe:	f023 0310 	bic.w	r3, r3, #16
 800abc2:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800abc6:	687b      	ldr	r3, [r7, #4]
 800abc8:	681b      	ldr	r3, [r3, #0]
 800abca:	330c      	adds	r3, #12
 800abcc:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 800abd0:	65ba      	str	r2, [r7, #88]	; 0x58
 800abd2:	657b      	str	r3, [r7, #84]	; 0x54
 800abd4:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800abd6:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800abd8:	e841 2300 	strex	r3, r2, [r1]
 800abdc:	653b      	str	r3, [r7, #80]	; 0x50
 800abde:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800abe0:	2b00      	cmp	r3, #0
 800abe2:	d1e3      	bne.n	800abac <HAL_UART_IRQHandler+0x380>
 800abe4:	687b      	ldr	r3, [r7, #4]
 800abe6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800abe8:	4618      	mov	r0, r3
 800abea:	f7fa f995 	bl	8004f18 <HAL_DMA_Abort>
 800abee:	687b      	ldr	r3, [r7, #4]
 800abf0:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800abf2:	687b      	ldr	r3, [r7, #4]
 800abf4:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800abf6:	b29b      	uxth	r3, r3
 800abf8:	1ad3      	subs	r3, r2, r3
 800abfa:	b29b      	uxth	r3, r3
 800abfc:	4619      	mov	r1, r3
 800abfe:	6878      	ldr	r0, [r7, #4]
 800ac00:	f000 f8ca 	bl	800ad98 <HAL_UARTEx_RxEventCallback>
 800ac04:	e099      	b.n	800ad3a <HAL_UART_IRQHandler+0x50e>
 800ac06:	bf00      	nop
 800ac08:	0800b2ab 	.word	0x0800b2ab
 800ac0c:	687b      	ldr	r3, [r7, #4]
 800ac0e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800ac10:	687b      	ldr	r3, [r7, #4]
 800ac12:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800ac14:	b29b      	uxth	r3, r3
 800ac16:	1ad3      	subs	r3, r2, r3
 800ac18:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 800ac1c:	687b      	ldr	r3, [r7, #4]
 800ac1e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800ac20:	b29b      	uxth	r3, r3
 800ac22:	2b00      	cmp	r3, #0
 800ac24:	f000 808b 	beq.w	800ad3e <HAL_UART_IRQHandler+0x512>
 800ac28:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800ac2c:	2b00      	cmp	r3, #0
 800ac2e:	f000 8086 	beq.w	800ad3e <HAL_UART_IRQHandler+0x512>
 800ac32:	687b      	ldr	r3, [r7, #4]
 800ac34:	681b      	ldr	r3, [r3, #0]
 800ac36:	330c      	adds	r3, #12
 800ac38:	63bb      	str	r3, [r7, #56]	; 0x38
 800ac3a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800ac3c:	e853 3f00 	ldrex	r3, [r3]
 800ac40:	637b      	str	r3, [r7, #52]	; 0x34
 800ac42:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ac44:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800ac48:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800ac4c:	687b      	ldr	r3, [r7, #4]
 800ac4e:	681b      	ldr	r3, [r3, #0]
 800ac50:	330c      	adds	r3, #12
 800ac52:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800ac56:	647a      	str	r2, [r7, #68]	; 0x44
 800ac58:	643b      	str	r3, [r7, #64]	; 0x40
 800ac5a:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800ac5c:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800ac5e:	e841 2300 	strex	r3, r2, [r1]
 800ac62:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ac64:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ac66:	2b00      	cmp	r3, #0
 800ac68:	d1e3      	bne.n	800ac32 <HAL_UART_IRQHandler+0x406>
 800ac6a:	687b      	ldr	r3, [r7, #4]
 800ac6c:	681b      	ldr	r3, [r3, #0]
 800ac6e:	3314      	adds	r3, #20
 800ac70:	627b      	str	r3, [r7, #36]	; 0x24
 800ac72:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ac74:	e853 3f00 	ldrex	r3, [r3]
 800ac78:	623b      	str	r3, [r7, #32]
 800ac7a:	6a3b      	ldr	r3, [r7, #32]
 800ac7c:	f023 0301 	bic.w	r3, r3, #1
 800ac80:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800ac84:	687b      	ldr	r3, [r7, #4]
 800ac86:	681b      	ldr	r3, [r3, #0]
 800ac88:	3314      	adds	r3, #20
 800ac8a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800ac8e:	633a      	str	r2, [r7, #48]	; 0x30
 800ac90:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ac92:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800ac94:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800ac96:	e841 2300 	strex	r3, r2, [r1]
 800ac9a:	62bb      	str	r3, [r7, #40]	; 0x28
 800ac9c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ac9e:	2b00      	cmp	r3, #0
 800aca0:	d1e3      	bne.n	800ac6a <HAL_UART_IRQHandler+0x43e>
 800aca2:	687b      	ldr	r3, [r7, #4]
 800aca4:	2220      	movs	r2, #32
 800aca6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800acaa:	687b      	ldr	r3, [r7, #4]
 800acac:	2200      	movs	r2, #0
 800acae:	631a      	str	r2, [r3, #48]	; 0x30
 800acb0:	687b      	ldr	r3, [r7, #4]
 800acb2:	681b      	ldr	r3, [r3, #0]
 800acb4:	330c      	adds	r3, #12
 800acb6:	613b      	str	r3, [r7, #16]
 800acb8:	693b      	ldr	r3, [r7, #16]
 800acba:	e853 3f00 	ldrex	r3, [r3]
 800acbe:	60fb      	str	r3, [r7, #12]
 800acc0:	68fb      	ldr	r3, [r7, #12]
 800acc2:	f023 0310 	bic.w	r3, r3, #16
 800acc6:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800acca:	687b      	ldr	r3, [r7, #4]
 800accc:	681b      	ldr	r3, [r3, #0]
 800acce:	330c      	adds	r3, #12
 800acd0:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 800acd4:	61fa      	str	r2, [r7, #28]
 800acd6:	61bb      	str	r3, [r7, #24]
 800acd8:	69b9      	ldr	r1, [r7, #24]
 800acda:	69fa      	ldr	r2, [r7, #28]
 800acdc:	e841 2300 	strex	r3, r2, [r1]
 800ace0:	617b      	str	r3, [r7, #20]
 800ace2:	697b      	ldr	r3, [r7, #20]
 800ace4:	2b00      	cmp	r3, #0
 800ace6:	d1e3      	bne.n	800acb0 <HAL_UART_IRQHandler+0x484>
 800ace8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800acec:	4619      	mov	r1, r3
 800acee:	6878      	ldr	r0, [r7, #4]
 800acf0:	f000 f852 	bl	800ad98 <HAL_UARTEx_RxEventCallback>
 800acf4:	e023      	b.n	800ad3e <HAL_UART_IRQHandler+0x512>
 800acf6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800acfa:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800acfe:	2b00      	cmp	r3, #0
 800ad00:	d009      	beq.n	800ad16 <HAL_UART_IRQHandler+0x4ea>
 800ad02:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ad06:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ad0a:	2b00      	cmp	r3, #0
 800ad0c:	d003      	beq.n	800ad16 <HAL_UART_IRQHandler+0x4ea>
 800ad0e:	6878      	ldr	r0, [r7, #4]
 800ad10:	f000 fadf 	bl	800b2d2 <UART_Transmit_IT>
 800ad14:	e014      	b.n	800ad40 <HAL_UART_IRQHandler+0x514>
 800ad16:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ad1a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ad1e:	2b00      	cmp	r3, #0
 800ad20:	d00e      	beq.n	800ad40 <HAL_UART_IRQHandler+0x514>
 800ad22:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ad26:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ad2a:	2b00      	cmp	r3, #0
 800ad2c:	d008      	beq.n	800ad40 <HAL_UART_IRQHandler+0x514>
 800ad2e:	6878      	ldr	r0, [r7, #4]
 800ad30:	f000 fb1f 	bl	800b372 <UART_EndTransmit_IT>
 800ad34:	e004      	b.n	800ad40 <HAL_UART_IRQHandler+0x514>
 800ad36:	bf00      	nop
 800ad38:	e002      	b.n	800ad40 <HAL_UART_IRQHandler+0x514>
 800ad3a:	bf00      	nop
 800ad3c:	e000      	b.n	800ad40 <HAL_UART_IRQHandler+0x514>
 800ad3e:	bf00      	nop
 800ad40:	37e8      	adds	r7, #232	; 0xe8
 800ad42:	46bd      	mov	sp, r7
 800ad44:	bd80      	pop	{r7, pc}
 800ad46:	bf00      	nop

0800ad48 <HAL_UART_TxCpltCallback>:
 800ad48:	b480      	push	{r7}
 800ad4a:	b083      	sub	sp, #12
 800ad4c:	af00      	add	r7, sp, #0
 800ad4e:	6078      	str	r0, [r7, #4]
 800ad50:	bf00      	nop
 800ad52:	370c      	adds	r7, #12
 800ad54:	46bd      	mov	sp, r7
 800ad56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad5a:	4770      	bx	lr

0800ad5c <HAL_UART_TxHalfCpltCallback>:
 800ad5c:	b480      	push	{r7}
 800ad5e:	b083      	sub	sp, #12
 800ad60:	af00      	add	r7, sp, #0
 800ad62:	6078      	str	r0, [r7, #4]
 800ad64:	bf00      	nop
 800ad66:	370c      	adds	r7, #12
 800ad68:	46bd      	mov	sp, r7
 800ad6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad6e:	4770      	bx	lr

0800ad70 <HAL_UART_RxHalfCpltCallback>:
 800ad70:	b480      	push	{r7}
 800ad72:	b083      	sub	sp, #12
 800ad74:	af00      	add	r7, sp, #0
 800ad76:	6078      	str	r0, [r7, #4]
 800ad78:	bf00      	nop
 800ad7a:	370c      	adds	r7, #12
 800ad7c:	46bd      	mov	sp, r7
 800ad7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad82:	4770      	bx	lr

0800ad84 <HAL_UART_ErrorCallback>:
 800ad84:	b480      	push	{r7}
 800ad86:	b083      	sub	sp, #12
 800ad88:	af00      	add	r7, sp, #0
 800ad8a:	6078      	str	r0, [r7, #4]
 800ad8c:	bf00      	nop
 800ad8e:	370c      	adds	r7, #12
 800ad90:	46bd      	mov	sp, r7
 800ad92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad96:	4770      	bx	lr

0800ad98 <HAL_UARTEx_RxEventCallback>:
 800ad98:	b480      	push	{r7}
 800ad9a:	b083      	sub	sp, #12
 800ad9c:	af00      	add	r7, sp, #0
 800ad9e:	6078      	str	r0, [r7, #4]
 800ada0:	460b      	mov	r3, r1
 800ada2:	807b      	strh	r3, [r7, #2]
 800ada4:	bf00      	nop
 800ada6:	370c      	adds	r7, #12
 800ada8:	46bd      	mov	sp, r7
 800adaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adae:	4770      	bx	lr

0800adb0 <UART_DMATransmitCplt>:
 800adb0:	b580      	push	{r7, lr}
 800adb2:	b090      	sub	sp, #64	; 0x40
 800adb4:	af00      	add	r7, sp, #0
 800adb6:	6078      	str	r0, [r7, #4]
 800adb8:	687b      	ldr	r3, [r7, #4]
 800adba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800adbc:	63fb      	str	r3, [r7, #60]	; 0x3c
 800adbe:	687b      	ldr	r3, [r7, #4]
 800adc0:	681b      	ldr	r3, [r3, #0]
 800adc2:	681b      	ldr	r3, [r3, #0]
 800adc4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800adc8:	2b00      	cmp	r3, #0
 800adca:	d137      	bne.n	800ae3c <UART_DMATransmitCplt+0x8c>
 800adcc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800adce:	2200      	movs	r2, #0
 800add0:	84da      	strh	r2, [r3, #38]	; 0x26
 800add2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800add4:	681b      	ldr	r3, [r3, #0]
 800add6:	3314      	adds	r3, #20
 800add8:	627b      	str	r3, [r7, #36]	; 0x24
 800adda:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800addc:	e853 3f00 	ldrex	r3, [r3]
 800ade0:	623b      	str	r3, [r7, #32]
 800ade2:	6a3b      	ldr	r3, [r7, #32]
 800ade4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ade8:	63bb      	str	r3, [r7, #56]	; 0x38
 800adea:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800adec:	681b      	ldr	r3, [r3, #0]
 800adee:	3314      	adds	r3, #20
 800adf0:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800adf2:	633a      	str	r2, [r7, #48]	; 0x30
 800adf4:	62fb      	str	r3, [r7, #44]	; 0x2c
 800adf6:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800adf8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800adfa:	e841 2300 	strex	r3, r2, [r1]
 800adfe:	62bb      	str	r3, [r7, #40]	; 0x28
 800ae00:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ae02:	2b00      	cmp	r3, #0
 800ae04:	d1e5      	bne.n	800add2 <UART_DMATransmitCplt+0x22>
 800ae06:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ae08:	681b      	ldr	r3, [r3, #0]
 800ae0a:	330c      	adds	r3, #12
 800ae0c:	613b      	str	r3, [r7, #16]
 800ae0e:	693b      	ldr	r3, [r7, #16]
 800ae10:	e853 3f00 	ldrex	r3, [r3]
 800ae14:	60fb      	str	r3, [r7, #12]
 800ae16:	68fb      	ldr	r3, [r7, #12]
 800ae18:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ae1c:	637b      	str	r3, [r7, #52]	; 0x34
 800ae1e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ae20:	681b      	ldr	r3, [r3, #0]
 800ae22:	330c      	adds	r3, #12
 800ae24:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800ae26:	61fa      	str	r2, [r7, #28]
 800ae28:	61bb      	str	r3, [r7, #24]
 800ae2a:	69b9      	ldr	r1, [r7, #24]
 800ae2c:	69fa      	ldr	r2, [r7, #28]
 800ae2e:	e841 2300 	strex	r3, r2, [r1]
 800ae32:	617b      	str	r3, [r7, #20]
 800ae34:	697b      	ldr	r3, [r7, #20]
 800ae36:	2b00      	cmp	r3, #0
 800ae38:	d1e5      	bne.n	800ae06 <UART_DMATransmitCplt+0x56>
 800ae3a:	e002      	b.n	800ae42 <UART_DMATransmitCplt+0x92>
 800ae3c:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 800ae3e:	f7ff ff83 	bl	800ad48 <HAL_UART_TxCpltCallback>
 800ae42:	bf00      	nop
 800ae44:	3740      	adds	r7, #64	; 0x40
 800ae46:	46bd      	mov	sp, r7
 800ae48:	bd80      	pop	{r7, pc}

0800ae4a <UART_DMATxHalfCplt>:
 800ae4a:	b580      	push	{r7, lr}
 800ae4c:	b084      	sub	sp, #16
 800ae4e:	af00      	add	r7, sp, #0
 800ae50:	6078      	str	r0, [r7, #4]
 800ae52:	687b      	ldr	r3, [r7, #4]
 800ae54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ae56:	60fb      	str	r3, [r7, #12]
 800ae58:	68f8      	ldr	r0, [r7, #12]
 800ae5a:	f7ff ff7f 	bl	800ad5c <HAL_UART_TxHalfCpltCallback>
 800ae5e:	bf00      	nop
 800ae60:	3710      	adds	r7, #16
 800ae62:	46bd      	mov	sp, r7
 800ae64:	bd80      	pop	{r7, pc}

0800ae66 <UART_DMAReceiveCplt>:
 800ae66:	b580      	push	{r7, lr}
 800ae68:	b09c      	sub	sp, #112	; 0x70
 800ae6a:	af00      	add	r7, sp, #0
 800ae6c:	6078      	str	r0, [r7, #4]
 800ae6e:	687b      	ldr	r3, [r7, #4]
 800ae70:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ae72:	66fb      	str	r3, [r7, #108]	; 0x6c
 800ae74:	687b      	ldr	r3, [r7, #4]
 800ae76:	681b      	ldr	r3, [r3, #0]
 800ae78:	681b      	ldr	r3, [r3, #0]
 800ae7a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ae7e:	2b00      	cmp	r3, #0
 800ae80:	d172      	bne.n	800af68 <UART_DMAReceiveCplt+0x102>
 800ae82:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ae84:	2200      	movs	r2, #0
 800ae86:	85da      	strh	r2, [r3, #46]	; 0x2e
 800ae88:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ae8a:	681b      	ldr	r3, [r3, #0]
 800ae8c:	330c      	adds	r3, #12
 800ae8e:	64fb      	str	r3, [r7, #76]	; 0x4c
 800ae90:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800ae92:	e853 3f00 	ldrex	r3, [r3]
 800ae96:	64bb      	str	r3, [r7, #72]	; 0x48
 800ae98:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800ae9a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800ae9e:	66bb      	str	r3, [r7, #104]	; 0x68
 800aea0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800aea2:	681b      	ldr	r3, [r3, #0]
 800aea4:	330c      	adds	r3, #12
 800aea6:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800aea8:	65ba      	str	r2, [r7, #88]	; 0x58
 800aeaa:	657b      	str	r3, [r7, #84]	; 0x54
 800aeac:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800aeae:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800aeb0:	e841 2300 	strex	r3, r2, [r1]
 800aeb4:	653b      	str	r3, [r7, #80]	; 0x50
 800aeb6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800aeb8:	2b00      	cmp	r3, #0
 800aeba:	d1e5      	bne.n	800ae88 <UART_DMAReceiveCplt+0x22>
 800aebc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800aebe:	681b      	ldr	r3, [r3, #0]
 800aec0:	3314      	adds	r3, #20
 800aec2:	63bb      	str	r3, [r7, #56]	; 0x38
 800aec4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800aec6:	e853 3f00 	ldrex	r3, [r3]
 800aeca:	637b      	str	r3, [r7, #52]	; 0x34
 800aecc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800aece:	f023 0301 	bic.w	r3, r3, #1
 800aed2:	667b      	str	r3, [r7, #100]	; 0x64
 800aed4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800aed6:	681b      	ldr	r3, [r3, #0]
 800aed8:	3314      	adds	r3, #20
 800aeda:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800aedc:	647a      	str	r2, [r7, #68]	; 0x44
 800aede:	643b      	str	r3, [r7, #64]	; 0x40
 800aee0:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800aee2:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800aee4:	e841 2300 	strex	r3, r2, [r1]
 800aee8:	63fb      	str	r3, [r7, #60]	; 0x3c
 800aeea:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800aeec:	2b00      	cmp	r3, #0
 800aeee:	d1e5      	bne.n	800aebc <UART_DMAReceiveCplt+0x56>
 800aef0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800aef2:	681b      	ldr	r3, [r3, #0]
 800aef4:	3314      	adds	r3, #20
 800aef6:	627b      	str	r3, [r7, #36]	; 0x24
 800aef8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800aefa:	e853 3f00 	ldrex	r3, [r3]
 800aefe:	623b      	str	r3, [r7, #32]
 800af00:	6a3b      	ldr	r3, [r7, #32]
 800af02:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800af06:	663b      	str	r3, [r7, #96]	; 0x60
 800af08:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af0a:	681b      	ldr	r3, [r3, #0]
 800af0c:	3314      	adds	r3, #20
 800af0e:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800af10:	633a      	str	r2, [r7, #48]	; 0x30
 800af12:	62fb      	str	r3, [r7, #44]	; 0x2c
 800af14:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800af16:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800af18:	e841 2300 	strex	r3, r2, [r1]
 800af1c:	62bb      	str	r3, [r7, #40]	; 0x28
 800af1e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800af20:	2b00      	cmp	r3, #0
 800af22:	d1e5      	bne.n	800aef0 <UART_DMAReceiveCplt+0x8a>
 800af24:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af26:	2220      	movs	r2, #32
 800af28:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800af2c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800af30:	2b01      	cmp	r3, #1
 800af32:	d119      	bne.n	800af68 <UART_DMAReceiveCplt+0x102>
 800af34:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af36:	681b      	ldr	r3, [r3, #0]
 800af38:	330c      	adds	r3, #12
 800af3a:	613b      	str	r3, [r7, #16]
 800af3c:	693b      	ldr	r3, [r7, #16]
 800af3e:	e853 3f00 	ldrex	r3, [r3]
 800af42:	60fb      	str	r3, [r7, #12]
 800af44:	68fb      	ldr	r3, [r7, #12]
 800af46:	f023 0310 	bic.w	r3, r3, #16
 800af4a:	65fb      	str	r3, [r7, #92]	; 0x5c
 800af4c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af4e:	681b      	ldr	r3, [r3, #0]
 800af50:	330c      	adds	r3, #12
 800af52:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800af54:	61fa      	str	r2, [r7, #28]
 800af56:	61bb      	str	r3, [r7, #24]
 800af58:	69b9      	ldr	r1, [r7, #24]
 800af5a:	69fa      	ldr	r2, [r7, #28]
 800af5c:	e841 2300 	strex	r3, r2, [r1]
 800af60:	617b      	str	r3, [r7, #20]
 800af62:	697b      	ldr	r3, [r7, #20]
 800af64:	2b00      	cmp	r3, #0
 800af66:	d1e5      	bne.n	800af34 <UART_DMAReceiveCplt+0xce>
 800af68:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800af6c:	2b01      	cmp	r3, #1
 800af6e:	d106      	bne.n	800af7e <UART_DMAReceiveCplt+0x118>
 800af70:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af72:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800af74:	4619      	mov	r1, r3
 800af76:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 800af78:	f7ff ff0e 	bl	800ad98 <HAL_UARTEx_RxEventCallback>
 800af7c:	e002      	b.n	800af84 <UART_DMAReceiveCplt+0x11e>
 800af7e:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 800af80:	f7f9 f9e2 	bl	8004348 <HAL_UART_RxCpltCallback>
 800af84:	bf00      	nop
 800af86:	3770      	adds	r7, #112	; 0x70
 800af88:	46bd      	mov	sp, r7
 800af8a:	bd80      	pop	{r7, pc}

0800af8c <UART_DMARxHalfCplt>:
 800af8c:	b580      	push	{r7, lr}
 800af8e:	b084      	sub	sp, #16
 800af90:	af00      	add	r7, sp, #0
 800af92:	6078      	str	r0, [r7, #4]
 800af94:	687b      	ldr	r3, [r7, #4]
 800af96:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800af98:	60fb      	str	r3, [r7, #12]
 800af9a:	68fb      	ldr	r3, [r7, #12]
 800af9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800af9e:	2b01      	cmp	r3, #1
 800afa0:	d108      	bne.n	800afb4 <UART_DMARxHalfCplt+0x28>
 800afa2:	68fb      	ldr	r3, [r7, #12]
 800afa4:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800afa6:	085b      	lsrs	r3, r3, #1
 800afa8:	b29b      	uxth	r3, r3
 800afaa:	4619      	mov	r1, r3
 800afac:	68f8      	ldr	r0, [r7, #12]
 800afae:	f7ff fef3 	bl	800ad98 <HAL_UARTEx_RxEventCallback>
 800afb2:	e002      	b.n	800afba <UART_DMARxHalfCplt+0x2e>
 800afb4:	68f8      	ldr	r0, [r7, #12]
 800afb6:	f7ff fedb 	bl	800ad70 <HAL_UART_RxHalfCpltCallback>
 800afba:	bf00      	nop
 800afbc:	3710      	adds	r7, #16
 800afbe:	46bd      	mov	sp, r7
 800afc0:	bd80      	pop	{r7, pc}

0800afc2 <UART_DMAError>:
 800afc2:	b580      	push	{r7, lr}
 800afc4:	b084      	sub	sp, #16
 800afc6:	af00      	add	r7, sp, #0
 800afc8:	6078      	str	r0, [r7, #4]
 800afca:	2300      	movs	r3, #0
 800afcc:	60fb      	str	r3, [r7, #12]
 800afce:	687b      	ldr	r3, [r7, #4]
 800afd0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800afd2:	60bb      	str	r3, [r7, #8]
 800afd4:	68bb      	ldr	r3, [r7, #8]
 800afd6:	681b      	ldr	r3, [r3, #0]
 800afd8:	695b      	ldr	r3, [r3, #20]
 800afda:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800afde:	2b80      	cmp	r3, #128	; 0x80
 800afe0:	bf0c      	ite	eq
 800afe2:	2301      	moveq	r3, #1
 800afe4:	2300      	movne	r3, #0
 800afe6:	b2db      	uxtb	r3, r3
 800afe8:	60fb      	str	r3, [r7, #12]
 800afea:	68bb      	ldr	r3, [r7, #8]
 800afec:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800aff0:	b2db      	uxtb	r3, r3
 800aff2:	2b21      	cmp	r3, #33	; 0x21
 800aff4:	d108      	bne.n	800b008 <UART_DMAError+0x46>
 800aff6:	68fb      	ldr	r3, [r7, #12]
 800aff8:	2b00      	cmp	r3, #0
 800affa:	d005      	beq.n	800b008 <UART_DMAError+0x46>
 800affc:	68bb      	ldr	r3, [r7, #8]
 800affe:	2200      	movs	r2, #0
 800b000:	84da      	strh	r2, [r3, #38]	; 0x26
 800b002:	68b8      	ldr	r0, [r7, #8]
 800b004:	f000 f8c6 	bl	800b194 <UART_EndTxTransfer>
 800b008:	68bb      	ldr	r3, [r7, #8]
 800b00a:	681b      	ldr	r3, [r3, #0]
 800b00c:	695b      	ldr	r3, [r3, #20]
 800b00e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b012:	2b40      	cmp	r3, #64	; 0x40
 800b014:	bf0c      	ite	eq
 800b016:	2301      	moveq	r3, #1
 800b018:	2300      	movne	r3, #0
 800b01a:	b2db      	uxtb	r3, r3
 800b01c:	60fb      	str	r3, [r7, #12]
 800b01e:	68bb      	ldr	r3, [r7, #8]
 800b020:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800b024:	b2db      	uxtb	r3, r3
 800b026:	2b22      	cmp	r3, #34	; 0x22
 800b028:	d108      	bne.n	800b03c <UART_DMAError+0x7a>
 800b02a:	68fb      	ldr	r3, [r7, #12]
 800b02c:	2b00      	cmp	r3, #0
 800b02e:	d005      	beq.n	800b03c <UART_DMAError+0x7a>
 800b030:	68bb      	ldr	r3, [r7, #8]
 800b032:	2200      	movs	r2, #0
 800b034:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b036:	68b8      	ldr	r0, [r7, #8]
 800b038:	f000 f8d4 	bl	800b1e4 <UART_EndRxTransfer>
 800b03c:	68bb      	ldr	r3, [r7, #8]
 800b03e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b040:	f043 0210 	orr.w	r2, r3, #16
 800b044:	68bb      	ldr	r3, [r7, #8]
 800b046:	641a      	str	r2, [r3, #64]	; 0x40
 800b048:	68b8      	ldr	r0, [r7, #8]
 800b04a:	f7ff fe9b 	bl	800ad84 <HAL_UART_ErrorCallback>
 800b04e:	bf00      	nop
 800b050:	3710      	adds	r7, #16
 800b052:	46bd      	mov	sp, r7
 800b054:	bd80      	pop	{r7, pc}
	...

0800b058 <UART_Start_Receive_DMA>:
 800b058:	b580      	push	{r7, lr}
 800b05a:	b098      	sub	sp, #96	; 0x60
 800b05c:	af00      	add	r7, sp, #0
 800b05e:	60f8      	str	r0, [r7, #12]
 800b060:	60b9      	str	r1, [r7, #8]
 800b062:	4613      	mov	r3, r2
 800b064:	80fb      	strh	r3, [r7, #6]
 800b066:	68ba      	ldr	r2, [r7, #8]
 800b068:	68fb      	ldr	r3, [r7, #12]
 800b06a:	629a      	str	r2, [r3, #40]	; 0x28
 800b06c:	68fb      	ldr	r3, [r7, #12]
 800b06e:	88fa      	ldrh	r2, [r7, #6]
 800b070:	859a      	strh	r2, [r3, #44]	; 0x2c
 800b072:	68fb      	ldr	r3, [r7, #12]
 800b074:	2200      	movs	r2, #0
 800b076:	641a      	str	r2, [r3, #64]	; 0x40
 800b078:	68fb      	ldr	r3, [r7, #12]
 800b07a:	2222      	movs	r2, #34	; 0x22
 800b07c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b080:	68fb      	ldr	r3, [r7, #12]
 800b082:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b084:	4a40      	ldr	r2, [pc, #256]	; (800b188 <UART_Start_Receive_DMA+0x130>)
 800b086:	63da      	str	r2, [r3, #60]	; 0x3c
 800b088:	68fb      	ldr	r3, [r7, #12]
 800b08a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b08c:	4a3f      	ldr	r2, [pc, #252]	; (800b18c <UART_Start_Receive_DMA+0x134>)
 800b08e:	641a      	str	r2, [r3, #64]	; 0x40
 800b090:	68fb      	ldr	r3, [r7, #12]
 800b092:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b094:	4a3e      	ldr	r2, [pc, #248]	; (800b190 <UART_Start_Receive_DMA+0x138>)
 800b096:	64da      	str	r2, [r3, #76]	; 0x4c
 800b098:	68fb      	ldr	r3, [r7, #12]
 800b09a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b09c:	2200      	movs	r2, #0
 800b09e:	651a      	str	r2, [r3, #80]	; 0x50
 800b0a0:	f107 0308 	add.w	r3, r7, #8
 800b0a4:	65fb      	str	r3, [r7, #92]	; 0x5c
 800b0a6:	68fb      	ldr	r3, [r7, #12]
 800b0a8:	6b98      	ldr	r0, [r3, #56]	; 0x38
 800b0aa:	68fb      	ldr	r3, [r7, #12]
 800b0ac:	681b      	ldr	r3, [r3, #0]
 800b0ae:	3304      	adds	r3, #4
 800b0b0:	4619      	mov	r1, r3
 800b0b2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800b0b4:	681a      	ldr	r2, [r3, #0]
 800b0b6:	88fb      	ldrh	r3, [r7, #6]
 800b0b8:	f7f9 fed6 	bl	8004e68 <HAL_DMA_Start_IT>
 800b0bc:	2300      	movs	r3, #0
 800b0be:	613b      	str	r3, [r7, #16]
 800b0c0:	68fb      	ldr	r3, [r7, #12]
 800b0c2:	681b      	ldr	r3, [r3, #0]
 800b0c4:	681b      	ldr	r3, [r3, #0]
 800b0c6:	613b      	str	r3, [r7, #16]
 800b0c8:	68fb      	ldr	r3, [r7, #12]
 800b0ca:	681b      	ldr	r3, [r3, #0]
 800b0cc:	685b      	ldr	r3, [r3, #4]
 800b0ce:	613b      	str	r3, [r7, #16]
 800b0d0:	693b      	ldr	r3, [r7, #16]
 800b0d2:	68fb      	ldr	r3, [r7, #12]
 800b0d4:	2200      	movs	r2, #0
 800b0d6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b0da:	68fb      	ldr	r3, [r7, #12]
 800b0dc:	691b      	ldr	r3, [r3, #16]
 800b0de:	2b00      	cmp	r3, #0
 800b0e0:	d019      	beq.n	800b116 <UART_Start_Receive_DMA+0xbe>
 800b0e2:	68fb      	ldr	r3, [r7, #12]
 800b0e4:	681b      	ldr	r3, [r3, #0]
 800b0e6:	330c      	adds	r3, #12
 800b0e8:	643b      	str	r3, [r7, #64]	; 0x40
 800b0ea:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800b0ec:	e853 3f00 	ldrex	r3, [r3]
 800b0f0:	63fb      	str	r3, [r7, #60]	; 0x3c
 800b0f2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800b0f4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b0f8:	65bb      	str	r3, [r7, #88]	; 0x58
 800b0fa:	68fb      	ldr	r3, [r7, #12]
 800b0fc:	681b      	ldr	r3, [r3, #0]
 800b0fe:	330c      	adds	r3, #12
 800b100:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800b102:	64fa      	str	r2, [r7, #76]	; 0x4c
 800b104:	64bb      	str	r3, [r7, #72]	; 0x48
 800b106:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800b108:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800b10a:	e841 2300 	strex	r3, r2, [r1]
 800b10e:	647b      	str	r3, [r7, #68]	; 0x44
 800b110:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800b112:	2b00      	cmp	r3, #0
 800b114:	d1e5      	bne.n	800b0e2 <UART_Start_Receive_DMA+0x8a>
 800b116:	68fb      	ldr	r3, [r7, #12]
 800b118:	681b      	ldr	r3, [r3, #0]
 800b11a:	3314      	adds	r3, #20
 800b11c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b11e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b120:	e853 3f00 	ldrex	r3, [r3]
 800b124:	62bb      	str	r3, [r7, #40]	; 0x28
 800b126:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b128:	f043 0301 	orr.w	r3, r3, #1
 800b12c:	657b      	str	r3, [r7, #84]	; 0x54
 800b12e:	68fb      	ldr	r3, [r7, #12]
 800b130:	681b      	ldr	r3, [r3, #0]
 800b132:	3314      	adds	r3, #20
 800b134:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800b136:	63ba      	str	r2, [r7, #56]	; 0x38
 800b138:	637b      	str	r3, [r7, #52]	; 0x34
 800b13a:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800b13c:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800b13e:	e841 2300 	strex	r3, r2, [r1]
 800b142:	633b      	str	r3, [r7, #48]	; 0x30
 800b144:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b146:	2b00      	cmp	r3, #0
 800b148:	d1e5      	bne.n	800b116 <UART_Start_Receive_DMA+0xbe>
 800b14a:	68fb      	ldr	r3, [r7, #12]
 800b14c:	681b      	ldr	r3, [r3, #0]
 800b14e:	3314      	adds	r3, #20
 800b150:	61bb      	str	r3, [r7, #24]
 800b152:	69bb      	ldr	r3, [r7, #24]
 800b154:	e853 3f00 	ldrex	r3, [r3]
 800b158:	617b      	str	r3, [r7, #20]
 800b15a:	697b      	ldr	r3, [r7, #20]
 800b15c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b160:	653b      	str	r3, [r7, #80]	; 0x50
 800b162:	68fb      	ldr	r3, [r7, #12]
 800b164:	681b      	ldr	r3, [r3, #0]
 800b166:	3314      	adds	r3, #20
 800b168:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800b16a:	627a      	str	r2, [r7, #36]	; 0x24
 800b16c:	623b      	str	r3, [r7, #32]
 800b16e:	6a39      	ldr	r1, [r7, #32]
 800b170:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800b172:	e841 2300 	strex	r3, r2, [r1]
 800b176:	61fb      	str	r3, [r7, #28]
 800b178:	69fb      	ldr	r3, [r7, #28]
 800b17a:	2b00      	cmp	r3, #0
 800b17c:	d1e5      	bne.n	800b14a <UART_Start_Receive_DMA+0xf2>
 800b17e:	2300      	movs	r3, #0
 800b180:	4618      	mov	r0, r3
 800b182:	3760      	adds	r7, #96	; 0x60
 800b184:	46bd      	mov	sp, r7
 800b186:	bd80      	pop	{r7, pc}
 800b188:	0800ae67 	.word	0x0800ae67
 800b18c:	0800af8d 	.word	0x0800af8d
 800b190:	0800afc3 	.word	0x0800afc3

0800b194 <UART_EndTxTransfer>:
 800b194:	b480      	push	{r7}
 800b196:	b089      	sub	sp, #36	; 0x24
 800b198:	af00      	add	r7, sp, #0
 800b19a:	6078      	str	r0, [r7, #4]
 800b19c:	687b      	ldr	r3, [r7, #4]
 800b19e:	681b      	ldr	r3, [r3, #0]
 800b1a0:	330c      	adds	r3, #12
 800b1a2:	60fb      	str	r3, [r7, #12]
 800b1a4:	68fb      	ldr	r3, [r7, #12]
 800b1a6:	e853 3f00 	ldrex	r3, [r3]
 800b1aa:	60bb      	str	r3, [r7, #8]
 800b1ac:	68bb      	ldr	r3, [r7, #8]
 800b1ae:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800b1b2:	61fb      	str	r3, [r7, #28]
 800b1b4:	687b      	ldr	r3, [r7, #4]
 800b1b6:	681b      	ldr	r3, [r3, #0]
 800b1b8:	330c      	adds	r3, #12
 800b1ba:	69fa      	ldr	r2, [r7, #28]
 800b1bc:	61ba      	str	r2, [r7, #24]
 800b1be:	617b      	str	r3, [r7, #20]
 800b1c0:	6979      	ldr	r1, [r7, #20]
 800b1c2:	69ba      	ldr	r2, [r7, #24]
 800b1c4:	e841 2300 	strex	r3, r2, [r1]
 800b1c8:	613b      	str	r3, [r7, #16]
 800b1ca:	693b      	ldr	r3, [r7, #16]
 800b1cc:	2b00      	cmp	r3, #0
 800b1ce:	d1e5      	bne.n	800b19c <UART_EndTxTransfer+0x8>
 800b1d0:	687b      	ldr	r3, [r7, #4]
 800b1d2:	2220      	movs	r2, #32
 800b1d4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b1d8:	bf00      	nop
 800b1da:	3724      	adds	r7, #36	; 0x24
 800b1dc:	46bd      	mov	sp, r7
 800b1de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1e2:	4770      	bx	lr

0800b1e4 <UART_EndRxTransfer>:
 800b1e4:	b480      	push	{r7}
 800b1e6:	b095      	sub	sp, #84	; 0x54
 800b1e8:	af00      	add	r7, sp, #0
 800b1ea:	6078      	str	r0, [r7, #4]
 800b1ec:	687b      	ldr	r3, [r7, #4]
 800b1ee:	681b      	ldr	r3, [r3, #0]
 800b1f0:	330c      	adds	r3, #12
 800b1f2:	637b      	str	r3, [r7, #52]	; 0x34
 800b1f4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b1f6:	e853 3f00 	ldrex	r3, [r3]
 800b1fa:	633b      	str	r3, [r7, #48]	; 0x30
 800b1fc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b1fe:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800b202:	64fb      	str	r3, [r7, #76]	; 0x4c
 800b204:	687b      	ldr	r3, [r7, #4]
 800b206:	681b      	ldr	r3, [r3, #0]
 800b208:	330c      	adds	r3, #12
 800b20a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800b20c:	643a      	str	r2, [r7, #64]	; 0x40
 800b20e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800b210:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800b212:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800b214:	e841 2300 	strex	r3, r2, [r1]
 800b218:	63bb      	str	r3, [r7, #56]	; 0x38
 800b21a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800b21c:	2b00      	cmp	r3, #0
 800b21e:	d1e5      	bne.n	800b1ec <UART_EndRxTransfer+0x8>
 800b220:	687b      	ldr	r3, [r7, #4]
 800b222:	681b      	ldr	r3, [r3, #0]
 800b224:	3314      	adds	r3, #20
 800b226:	623b      	str	r3, [r7, #32]
 800b228:	6a3b      	ldr	r3, [r7, #32]
 800b22a:	e853 3f00 	ldrex	r3, [r3]
 800b22e:	61fb      	str	r3, [r7, #28]
 800b230:	69fb      	ldr	r3, [r7, #28]
 800b232:	f023 0301 	bic.w	r3, r3, #1
 800b236:	64bb      	str	r3, [r7, #72]	; 0x48
 800b238:	687b      	ldr	r3, [r7, #4]
 800b23a:	681b      	ldr	r3, [r3, #0]
 800b23c:	3314      	adds	r3, #20
 800b23e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800b240:	62fa      	str	r2, [r7, #44]	; 0x2c
 800b242:	62bb      	str	r3, [r7, #40]	; 0x28
 800b244:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800b246:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800b248:	e841 2300 	strex	r3, r2, [r1]
 800b24c:	627b      	str	r3, [r7, #36]	; 0x24
 800b24e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b250:	2b00      	cmp	r3, #0
 800b252:	d1e5      	bne.n	800b220 <UART_EndRxTransfer+0x3c>
 800b254:	687b      	ldr	r3, [r7, #4]
 800b256:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b258:	2b01      	cmp	r3, #1
 800b25a:	d119      	bne.n	800b290 <UART_EndRxTransfer+0xac>
 800b25c:	687b      	ldr	r3, [r7, #4]
 800b25e:	681b      	ldr	r3, [r3, #0]
 800b260:	330c      	adds	r3, #12
 800b262:	60fb      	str	r3, [r7, #12]
 800b264:	68fb      	ldr	r3, [r7, #12]
 800b266:	e853 3f00 	ldrex	r3, [r3]
 800b26a:	60bb      	str	r3, [r7, #8]
 800b26c:	68bb      	ldr	r3, [r7, #8]
 800b26e:	f023 0310 	bic.w	r3, r3, #16
 800b272:	647b      	str	r3, [r7, #68]	; 0x44
 800b274:	687b      	ldr	r3, [r7, #4]
 800b276:	681b      	ldr	r3, [r3, #0]
 800b278:	330c      	adds	r3, #12
 800b27a:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800b27c:	61ba      	str	r2, [r7, #24]
 800b27e:	617b      	str	r3, [r7, #20]
 800b280:	6979      	ldr	r1, [r7, #20]
 800b282:	69ba      	ldr	r2, [r7, #24]
 800b284:	e841 2300 	strex	r3, r2, [r1]
 800b288:	613b      	str	r3, [r7, #16]
 800b28a:	693b      	ldr	r3, [r7, #16]
 800b28c:	2b00      	cmp	r3, #0
 800b28e:	d1e5      	bne.n	800b25c <UART_EndRxTransfer+0x78>
 800b290:	687b      	ldr	r3, [r7, #4]
 800b292:	2220      	movs	r2, #32
 800b294:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b298:	687b      	ldr	r3, [r7, #4]
 800b29a:	2200      	movs	r2, #0
 800b29c:	631a      	str	r2, [r3, #48]	; 0x30
 800b29e:	bf00      	nop
 800b2a0:	3754      	adds	r7, #84	; 0x54
 800b2a2:	46bd      	mov	sp, r7
 800b2a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2a8:	4770      	bx	lr

0800b2aa <UART_DMAAbortOnError>:
 800b2aa:	b580      	push	{r7, lr}
 800b2ac:	b084      	sub	sp, #16
 800b2ae:	af00      	add	r7, sp, #0
 800b2b0:	6078      	str	r0, [r7, #4]
 800b2b2:	687b      	ldr	r3, [r7, #4]
 800b2b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b2b6:	60fb      	str	r3, [r7, #12]
 800b2b8:	68fb      	ldr	r3, [r7, #12]
 800b2ba:	2200      	movs	r2, #0
 800b2bc:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b2be:	68fb      	ldr	r3, [r7, #12]
 800b2c0:	2200      	movs	r2, #0
 800b2c2:	84da      	strh	r2, [r3, #38]	; 0x26
 800b2c4:	68f8      	ldr	r0, [r7, #12]
 800b2c6:	f7ff fd5d 	bl	800ad84 <HAL_UART_ErrorCallback>
 800b2ca:	bf00      	nop
 800b2cc:	3710      	adds	r7, #16
 800b2ce:	46bd      	mov	sp, r7
 800b2d0:	bd80      	pop	{r7, pc}

0800b2d2 <UART_Transmit_IT>:
 800b2d2:	b480      	push	{r7}
 800b2d4:	b085      	sub	sp, #20
 800b2d6:	af00      	add	r7, sp, #0
 800b2d8:	6078      	str	r0, [r7, #4]
 800b2da:	687b      	ldr	r3, [r7, #4]
 800b2dc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b2e0:	b2db      	uxtb	r3, r3
 800b2e2:	2b21      	cmp	r3, #33	; 0x21
 800b2e4:	d13e      	bne.n	800b364 <UART_Transmit_IT+0x92>
 800b2e6:	687b      	ldr	r3, [r7, #4]
 800b2e8:	689b      	ldr	r3, [r3, #8]
 800b2ea:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b2ee:	d114      	bne.n	800b31a <UART_Transmit_IT+0x48>
 800b2f0:	687b      	ldr	r3, [r7, #4]
 800b2f2:	691b      	ldr	r3, [r3, #16]
 800b2f4:	2b00      	cmp	r3, #0
 800b2f6:	d110      	bne.n	800b31a <UART_Transmit_IT+0x48>
 800b2f8:	687b      	ldr	r3, [r7, #4]
 800b2fa:	6a1b      	ldr	r3, [r3, #32]
 800b2fc:	60fb      	str	r3, [r7, #12]
 800b2fe:	68fb      	ldr	r3, [r7, #12]
 800b300:	881b      	ldrh	r3, [r3, #0]
 800b302:	461a      	mov	r2, r3
 800b304:	687b      	ldr	r3, [r7, #4]
 800b306:	681b      	ldr	r3, [r3, #0]
 800b308:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800b30c:	605a      	str	r2, [r3, #4]
 800b30e:	687b      	ldr	r3, [r7, #4]
 800b310:	6a1b      	ldr	r3, [r3, #32]
 800b312:	1c9a      	adds	r2, r3, #2
 800b314:	687b      	ldr	r3, [r7, #4]
 800b316:	621a      	str	r2, [r3, #32]
 800b318:	e008      	b.n	800b32c <UART_Transmit_IT+0x5a>
 800b31a:	687b      	ldr	r3, [r7, #4]
 800b31c:	6a1b      	ldr	r3, [r3, #32]
 800b31e:	1c59      	adds	r1, r3, #1
 800b320:	687a      	ldr	r2, [r7, #4]
 800b322:	6211      	str	r1, [r2, #32]
 800b324:	781a      	ldrb	r2, [r3, #0]
 800b326:	687b      	ldr	r3, [r7, #4]
 800b328:	681b      	ldr	r3, [r3, #0]
 800b32a:	605a      	str	r2, [r3, #4]
 800b32c:	687b      	ldr	r3, [r7, #4]
 800b32e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800b330:	b29b      	uxth	r3, r3
 800b332:	3b01      	subs	r3, #1
 800b334:	b29b      	uxth	r3, r3
 800b336:	687a      	ldr	r2, [r7, #4]
 800b338:	4619      	mov	r1, r3
 800b33a:	84d1      	strh	r1, [r2, #38]	; 0x26
 800b33c:	2b00      	cmp	r3, #0
 800b33e:	d10f      	bne.n	800b360 <UART_Transmit_IT+0x8e>
 800b340:	687b      	ldr	r3, [r7, #4]
 800b342:	681b      	ldr	r3, [r3, #0]
 800b344:	68da      	ldr	r2, [r3, #12]
 800b346:	687b      	ldr	r3, [r7, #4]
 800b348:	681b      	ldr	r3, [r3, #0]
 800b34a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800b34e:	60da      	str	r2, [r3, #12]
 800b350:	687b      	ldr	r3, [r7, #4]
 800b352:	681b      	ldr	r3, [r3, #0]
 800b354:	68da      	ldr	r2, [r3, #12]
 800b356:	687b      	ldr	r3, [r7, #4]
 800b358:	681b      	ldr	r3, [r3, #0]
 800b35a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800b35e:	60da      	str	r2, [r3, #12]
 800b360:	2300      	movs	r3, #0
 800b362:	e000      	b.n	800b366 <UART_Transmit_IT+0x94>
 800b364:	2302      	movs	r3, #2
 800b366:	4618      	mov	r0, r3
 800b368:	3714      	adds	r7, #20
 800b36a:	46bd      	mov	sp, r7
 800b36c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b370:	4770      	bx	lr

0800b372 <UART_EndTransmit_IT>:
 800b372:	b580      	push	{r7, lr}
 800b374:	b082      	sub	sp, #8
 800b376:	af00      	add	r7, sp, #0
 800b378:	6078      	str	r0, [r7, #4]
 800b37a:	687b      	ldr	r3, [r7, #4]
 800b37c:	681b      	ldr	r3, [r3, #0]
 800b37e:	68da      	ldr	r2, [r3, #12]
 800b380:	687b      	ldr	r3, [r7, #4]
 800b382:	681b      	ldr	r3, [r3, #0]
 800b384:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b388:	60da      	str	r2, [r3, #12]
 800b38a:	687b      	ldr	r3, [r7, #4]
 800b38c:	2220      	movs	r2, #32
 800b38e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b392:	6878      	ldr	r0, [r7, #4]
 800b394:	f7ff fcd8 	bl	800ad48 <HAL_UART_TxCpltCallback>
 800b398:	2300      	movs	r3, #0
 800b39a:	4618      	mov	r0, r3
 800b39c:	3708      	adds	r7, #8
 800b39e:	46bd      	mov	sp, r7
 800b3a0:	bd80      	pop	{r7, pc}

0800b3a2 <UART_Receive_IT>:
 800b3a2:	b580      	push	{r7, lr}
 800b3a4:	b08c      	sub	sp, #48	; 0x30
 800b3a6:	af00      	add	r7, sp, #0
 800b3a8:	6078      	str	r0, [r7, #4]
 800b3aa:	687b      	ldr	r3, [r7, #4]
 800b3ac:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800b3b0:	b2db      	uxtb	r3, r3
 800b3b2:	2b22      	cmp	r3, #34	; 0x22
 800b3b4:	f040 80ab 	bne.w	800b50e <UART_Receive_IT+0x16c>
 800b3b8:	687b      	ldr	r3, [r7, #4]
 800b3ba:	689b      	ldr	r3, [r3, #8]
 800b3bc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b3c0:	d117      	bne.n	800b3f2 <UART_Receive_IT+0x50>
 800b3c2:	687b      	ldr	r3, [r7, #4]
 800b3c4:	691b      	ldr	r3, [r3, #16]
 800b3c6:	2b00      	cmp	r3, #0
 800b3c8:	d113      	bne.n	800b3f2 <UART_Receive_IT+0x50>
 800b3ca:	2300      	movs	r3, #0
 800b3cc:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b3ce:	687b      	ldr	r3, [r7, #4]
 800b3d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b3d2:	62bb      	str	r3, [r7, #40]	; 0x28
 800b3d4:	687b      	ldr	r3, [r7, #4]
 800b3d6:	681b      	ldr	r3, [r3, #0]
 800b3d8:	685b      	ldr	r3, [r3, #4]
 800b3da:	b29b      	uxth	r3, r3
 800b3dc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800b3e0:	b29a      	uxth	r2, r3
 800b3e2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b3e4:	801a      	strh	r2, [r3, #0]
 800b3e6:	687b      	ldr	r3, [r7, #4]
 800b3e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b3ea:	1c9a      	adds	r2, r3, #2
 800b3ec:	687b      	ldr	r3, [r7, #4]
 800b3ee:	629a      	str	r2, [r3, #40]	; 0x28
 800b3f0:	e026      	b.n	800b440 <UART_Receive_IT+0x9e>
 800b3f2:	687b      	ldr	r3, [r7, #4]
 800b3f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b3f6:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b3f8:	2300      	movs	r3, #0
 800b3fa:	62bb      	str	r3, [r7, #40]	; 0x28
 800b3fc:	687b      	ldr	r3, [r7, #4]
 800b3fe:	689b      	ldr	r3, [r3, #8]
 800b400:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b404:	d007      	beq.n	800b416 <UART_Receive_IT+0x74>
 800b406:	687b      	ldr	r3, [r7, #4]
 800b408:	689b      	ldr	r3, [r3, #8]
 800b40a:	2b00      	cmp	r3, #0
 800b40c:	d10a      	bne.n	800b424 <UART_Receive_IT+0x82>
 800b40e:	687b      	ldr	r3, [r7, #4]
 800b410:	691b      	ldr	r3, [r3, #16]
 800b412:	2b00      	cmp	r3, #0
 800b414:	d106      	bne.n	800b424 <UART_Receive_IT+0x82>
 800b416:	687b      	ldr	r3, [r7, #4]
 800b418:	681b      	ldr	r3, [r3, #0]
 800b41a:	685b      	ldr	r3, [r3, #4]
 800b41c:	b2da      	uxtb	r2, r3
 800b41e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b420:	701a      	strb	r2, [r3, #0]
 800b422:	e008      	b.n	800b436 <UART_Receive_IT+0x94>
 800b424:	687b      	ldr	r3, [r7, #4]
 800b426:	681b      	ldr	r3, [r3, #0]
 800b428:	685b      	ldr	r3, [r3, #4]
 800b42a:	b2db      	uxtb	r3, r3
 800b42c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800b430:	b2da      	uxtb	r2, r3
 800b432:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b434:	701a      	strb	r2, [r3, #0]
 800b436:	687b      	ldr	r3, [r7, #4]
 800b438:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b43a:	1c5a      	adds	r2, r3, #1
 800b43c:	687b      	ldr	r3, [r7, #4]
 800b43e:	629a      	str	r2, [r3, #40]	; 0x28
 800b440:	687b      	ldr	r3, [r7, #4]
 800b442:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b444:	b29b      	uxth	r3, r3
 800b446:	3b01      	subs	r3, #1
 800b448:	b29b      	uxth	r3, r3
 800b44a:	687a      	ldr	r2, [r7, #4]
 800b44c:	4619      	mov	r1, r3
 800b44e:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800b450:	2b00      	cmp	r3, #0
 800b452:	d15a      	bne.n	800b50a <UART_Receive_IT+0x168>
 800b454:	687b      	ldr	r3, [r7, #4]
 800b456:	681b      	ldr	r3, [r3, #0]
 800b458:	68da      	ldr	r2, [r3, #12]
 800b45a:	687b      	ldr	r3, [r7, #4]
 800b45c:	681b      	ldr	r3, [r3, #0]
 800b45e:	f022 0220 	bic.w	r2, r2, #32
 800b462:	60da      	str	r2, [r3, #12]
 800b464:	687b      	ldr	r3, [r7, #4]
 800b466:	681b      	ldr	r3, [r3, #0]
 800b468:	68da      	ldr	r2, [r3, #12]
 800b46a:	687b      	ldr	r3, [r7, #4]
 800b46c:	681b      	ldr	r3, [r3, #0]
 800b46e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800b472:	60da      	str	r2, [r3, #12]
 800b474:	687b      	ldr	r3, [r7, #4]
 800b476:	681b      	ldr	r3, [r3, #0]
 800b478:	695a      	ldr	r2, [r3, #20]
 800b47a:	687b      	ldr	r3, [r7, #4]
 800b47c:	681b      	ldr	r3, [r3, #0]
 800b47e:	f022 0201 	bic.w	r2, r2, #1
 800b482:	615a      	str	r2, [r3, #20]
 800b484:	687b      	ldr	r3, [r7, #4]
 800b486:	2220      	movs	r2, #32
 800b488:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b48c:	687b      	ldr	r3, [r7, #4]
 800b48e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b490:	2b01      	cmp	r3, #1
 800b492:	d135      	bne.n	800b500 <UART_Receive_IT+0x15e>
 800b494:	687b      	ldr	r3, [r7, #4]
 800b496:	2200      	movs	r2, #0
 800b498:	631a      	str	r2, [r3, #48]	; 0x30
 800b49a:	687b      	ldr	r3, [r7, #4]
 800b49c:	681b      	ldr	r3, [r3, #0]
 800b49e:	330c      	adds	r3, #12
 800b4a0:	617b      	str	r3, [r7, #20]
 800b4a2:	697b      	ldr	r3, [r7, #20]
 800b4a4:	e853 3f00 	ldrex	r3, [r3]
 800b4a8:	613b      	str	r3, [r7, #16]
 800b4aa:	693b      	ldr	r3, [r7, #16]
 800b4ac:	f023 0310 	bic.w	r3, r3, #16
 800b4b0:	627b      	str	r3, [r7, #36]	; 0x24
 800b4b2:	687b      	ldr	r3, [r7, #4]
 800b4b4:	681b      	ldr	r3, [r3, #0]
 800b4b6:	330c      	adds	r3, #12
 800b4b8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800b4ba:	623a      	str	r2, [r7, #32]
 800b4bc:	61fb      	str	r3, [r7, #28]
 800b4be:	69f9      	ldr	r1, [r7, #28]
 800b4c0:	6a3a      	ldr	r2, [r7, #32]
 800b4c2:	e841 2300 	strex	r3, r2, [r1]
 800b4c6:	61bb      	str	r3, [r7, #24]
 800b4c8:	69bb      	ldr	r3, [r7, #24]
 800b4ca:	2b00      	cmp	r3, #0
 800b4cc:	d1e5      	bne.n	800b49a <UART_Receive_IT+0xf8>
 800b4ce:	687b      	ldr	r3, [r7, #4]
 800b4d0:	681b      	ldr	r3, [r3, #0]
 800b4d2:	681b      	ldr	r3, [r3, #0]
 800b4d4:	f003 0310 	and.w	r3, r3, #16
 800b4d8:	2b10      	cmp	r3, #16
 800b4da:	d10a      	bne.n	800b4f2 <UART_Receive_IT+0x150>
 800b4dc:	2300      	movs	r3, #0
 800b4de:	60fb      	str	r3, [r7, #12]
 800b4e0:	687b      	ldr	r3, [r7, #4]
 800b4e2:	681b      	ldr	r3, [r3, #0]
 800b4e4:	681b      	ldr	r3, [r3, #0]
 800b4e6:	60fb      	str	r3, [r7, #12]
 800b4e8:	687b      	ldr	r3, [r7, #4]
 800b4ea:	681b      	ldr	r3, [r3, #0]
 800b4ec:	685b      	ldr	r3, [r3, #4]
 800b4ee:	60fb      	str	r3, [r7, #12]
 800b4f0:	68fb      	ldr	r3, [r7, #12]
 800b4f2:	687b      	ldr	r3, [r7, #4]
 800b4f4:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800b4f6:	4619      	mov	r1, r3
 800b4f8:	6878      	ldr	r0, [r7, #4]
 800b4fa:	f7ff fc4d 	bl	800ad98 <HAL_UARTEx_RxEventCallback>
 800b4fe:	e002      	b.n	800b506 <UART_Receive_IT+0x164>
 800b500:	6878      	ldr	r0, [r7, #4]
 800b502:	f7f8 ff21 	bl	8004348 <HAL_UART_RxCpltCallback>
 800b506:	2300      	movs	r3, #0
 800b508:	e002      	b.n	800b510 <UART_Receive_IT+0x16e>
 800b50a:	2300      	movs	r3, #0
 800b50c:	e000      	b.n	800b510 <UART_Receive_IT+0x16e>
 800b50e:	2302      	movs	r3, #2
 800b510:	4618      	mov	r0, r3
 800b512:	3730      	adds	r7, #48	; 0x30
 800b514:	46bd      	mov	sp, r7
 800b516:	bd80      	pop	{r7, pc}

0800b518 <UART_SetConfig>:
 800b518:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800b51c:	b0c0      	sub	sp, #256	; 0x100
 800b51e:	af00      	add	r7, sp, #0
 800b520:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 800b524:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b528:	681b      	ldr	r3, [r3, #0]
 800b52a:	691b      	ldr	r3, [r3, #16]
 800b52c:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 800b530:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b534:	68d9      	ldr	r1, [r3, #12]
 800b536:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b53a:	681a      	ldr	r2, [r3, #0]
 800b53c:	ea40 0301 	orr.w	r3, r0, r1
 800b540:	6113      	str	r3, [r2, #16]
 800b542:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b546:	689a      	ldr	r2, [r3, #8]
 800b548:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b54c:	691b      	ldr	r3, [r3, #16]
 800b54e:	431a      	orrs	r2, r3
 800b550:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b554:	695b      	ldr	r3, [r3, #20]
 800b556:	431a      	orrs	r2, r3
 800b558:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b55c:	69db      	ldr	r3, [r3, #28]
 800b55e:	4313      	orrs	r3, r2
 800b560:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800b564:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b568:	681b      	ldr	r3, [r3, #0]
 800b56a:	68db      	ldr	r3, [r3, #12]
 800b56c:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 800b570:	f021 010c 	bic.w	r1, r1, #12
 800b574:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b578:	681a      	ldr	r2, [r3, #0]
 800b57a:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800b57e:	430b      	orrs	r3, r1
 800b580:	60d3      	str	r3, [r2, #12]
 800b582:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b586:	681b      	ldr	r3, [r3, #0]
 800b588:	695b      	ldr	r3, [r3, #20]
 800b58a:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800b58e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b592:	6999      	ldr	r1, [r3, #24]
 800b594:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b598:	681a      	ldr	r2, [r3, #0]
 800b59a:	ea40 0301 	orr.w	r3, r0, r1
 800b59e:	6153      	str	r3, [r2, #20]
 800b5a0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b5a4:	681a      	ldr	r2, [r3, #0]
 800b5a6:	4b8f      	ldr	r3, [pc, #572]	; (800b7e4 <UART_SetConfig+0x2cc>)
 800b5a8:	429a      	cmp	r2, r3
 800b5aa:	d005      	beq.n	800b5b8 <UART_SetConfig+0xa0>
 800b5ac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b5b0:	681a      	ldr	r2, [r3, #0]
 800b5b2:	4b8d      	ldr	r3, [pc, #564]	; (800b7e8 <UART_SetConfig+0x2d0>)
 800b5b4:	429a      	cmp	r2, r3
 800b5b6:	d104      	bne.n	800b5c2 <UART_SetConfig+0xaa>
 800b5b8:	f7fd fa7a 	bl	8008ab0 <HAL_RCC_GetPCLK2Freq>
 800b5bc:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800b5c0:	e003      	b.n	800b5ca <UART_SetConfig+0xb2>
 800b5c2:	f7fd fa61 	bl	8008a88 <HAL_RCC_GetPCLK1Freq>
 800b5c6:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800b5ca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b5ce:	69db      	ldr	r3, [r3, #28]
 800b5d0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800b5d4:	f040 810c 	bne.w	800b7f0 <UART_SetConfig+0x2d8>
 800b5d8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b5dc:	2200      	movs	r2, #0
 800b5de:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800b5e2:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 800b5e6:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 800b5ea:	4622      	mov	r2, r4
 800b5ec:	462b      	mov	r3, r5
 800b5ee:	1891      	adds	r1, r2, r2
 800b5f0:	65b9      	str	r1, [r7, #88]	; 0x58
 800b5f2:	415b      	adcs	r3, r3
 800b5f4:	65fb      	str	r3, [r7, #92]	; 0x5c
 800b5f6:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800b5fa:	4621      	mov	r1, r4
 800b5fc:	eb12 0801 	adds.w	r8, r2, r1
 800b600:	4629      	mov	r1, r5
 800b602:	eb43 0901 	adc.w	r9, r3, r1
 800b606:	f04f 0200 	mov.w	r2, #0
 800b60a:	f04f 0300 	mov.w	r3, #0
 800b60e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800b612:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800b616:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800b61a:	4690      	mov	r8, r2
 800b61c:	4699      	mov	r9, r3
 800b61e:	4623      	mov	r3, r4
 800b620:	eb18 0303 	adds.w	r3, r8, r3
 800b624:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800b628:	462b      	mov	r3, r5
 800b62a:	eb49 0303 	adc.w	r3, r9, r3
 800b62e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800b632:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b636:	685b      	ldr	r3, [r3, #4]
 800b638:	2200      	movs	r2, #0
 800b63a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800b63e:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 800b642:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800b646:	460b      	mov	r3, r1
 800b648:	18db      	adds	r3, r3, r3
 800b64a:	653b      	str	r3, [r7, #80]	; 0x50
 800b64c:	4613      	mov	r3, r2
 800b64e:	eb42 0303 	adc.w	r3, r2, r3
 800b652:	657b      	str	r3, [r7, #84]	; 0x54
 800b654:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800b658:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800b65c:	f7f5 fa98 	bl	8000b90 <__aeabi_uldivmod>
 800b660:	4602      	mov	r2, r0
 800b662:	460b      	mov	r3, r1
 800b664:	4b61      	ldr	r3, [pc, #388]	; (800b7ec <UART_SetConfig+0x2d4>)
 800b666:	fba3 2302 	umull	r2, r3, r3, r2
 800b66a:	095b      	lsrs	r3, r3, #5
 800b66c:	011c      	lsls	r4, r3, #4
 800b66e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b672:	2200      	movs	r2, #0
 800b674:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800b678:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 800b67c:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 800b680:	4642      	mov	r2, r8
 800b682:	464b      	mov	r3, r9
 800b684:	1891      	adds	r1, r2, r2
 800b686:	64b9      	str	r1, [r7, #72]	; 0x48
 800b688:	415b      	adcs	r3, r3
 800b68a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800b68c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800b690:	4641      	mov	r1, r8
 800b692:	eb12 0a01 	adds.w	sl, r2, r1
 800b696:	4649      	mov	r1, r9
 800b698:	eb43 0b01 	adc.w	fp, r3, r1
 800b69c:	f04f 0200 	mov.w	r2, #0
 800b6a0:	f04f 0300 	mov.w	r3, #0
 800b6a4:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800b6a8:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800b6ac:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800b6b0:	4692      	mov	sl, r2
 800b6b2:	469b      	mov	fp, r3
 800b6b4:	4643      	mov	r3, r8
 800b6b6:	eb1a 0303 	adds.w	r3, sl, r3
 800b6ba:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800b6be:	464b      	mov	r3, r9
 800b6c0:	eb4b 0303 	adc.w	r3, fp, r3
 800b6c4:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 800b6c8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b6cc:	685b      	ldr	r3, [r3, #4]
 800b6ce:	2200      	movs	r2, #0
 800b6d0:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800b6d4:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 800b6d8:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800b6dc:	460b      	mov	r3, r1
 800b6de:	18db      	adds	r3, r3, r3
 800b6e0:	643b      	str	r3, [r7, #64]	; 0x40
 800b6e2:	4613      	mov	r3, r2
 800b6e4:	eb42 0303 	adc.w	r3, r2, r3
 800b6e8:	647b      	str	r3, [r7, #68]	; 0x44
 800b6ea:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800b6ee:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800b6f2:	f7f5 fa4d 	bl	8000b90 <__aeabi_uldivmod>
 800b6f6:	4602      	mov	r2, r0
 800b6f8:	460b      	mov	r3, r1
 800b6fa:	4611      	mov	r1, r2
 800b6fc:	4b3b      	ldr	r3, [pc, #236]	; (800b7ec <UART_SetConfig+0x2d4>)
 800b6fe:	fba3 2301 	umull	r2, r3, r3, r1
 800b702:	095b      	lsrs	r3, r3, #5
 800b704:	2264      	movs	r2, #100	; 0x64
 800b706:	fb02 f303 	mul.w	r3, r2, r3
 800b70a:	1acb      	subs	r3, r1, r3
 800b70c:	00db      	lsls	r3, r3, #3
 800b70e:	f103 0232 	add.w	r2, r3, #50	; 0x32
 800b712:	4b36      	ldr	r3, [pc, #216]	; (800b7ec <UART_SetConfig+0x2d4>)
 800b714:	fba3 2302 	umull	r2, r3, r3, r2
 800b718:	095b      	lsrs	r3, r3, #5
 800b71a:	005b      	lsls	r3, r3, #1
 800b71c:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800b720:	441c      	add	r4, r3
 800b722:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b726:	2200      	movs	r2, #0
 800b728:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800b72c:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 800b730:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 800b734:	4642      	mov	r2, r8
 800b736:	464b      	mov	r3, r9
 800b738:	1891      	adds	r1, r2, r2
 800b73a:	63b9      	str	r1, [r7, #56]	; 0x38
 800b73c:	415b      	adcs	r3, r3
 800b73e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800b740:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800b744:	4641      	mov	r1, r8
 800b746:	1851      	adds	r1, r2, r1
 800b748:	6339      	str	r1, [r7, #48]	; 0x30
 800b74a:	4649      	mov	r1, r9
 800b74c:	414b      	adcs	r3, r1
 800b74e:	637b      	str	r3, [r7, #52]	; 0x34
 800b750:	f04f 0200 	mov.w	r2, #0
 800b754:	f04f 0300 	mov.w	r3, #0
 800b758:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 800b75c:	4659      	mov	r1, fp
 800b75e:	00cb      	lsls	r3, r1, #3
 800b760:	4651      	mov	r1, sl
 800b762:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800b766:	4651      	mov	r1, sl
 800b768:	00ca      	lsls	r2, r1, #3
 800b76a:	4610      	mov	r0, r2
 800b76c:	4619      	mov	r1, r3
 800b76e:	4603      	mov	r3, r0
 800b770:	4642      	mov	r2, r8
 800b772:	189b      	adds	r3, r3, r2
 800b774:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800b778:	464b      	mov	r3, r9
 800b77a:	460a      	mov	r2, r1
 800b77c:	eb42 0303 	adc.w	r3, r2, r3
 800b780:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800b784:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b788:	685b      	ldr	r3, [r3, #4]
 800b78a:	2200      	movs	r2, #0
 800b78c:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800b790:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800b794:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 800b798:	460b      	mov	r3, r1
 800b79a:	18db      	adds	r3, r3, r3
 800b79c:	62bb      	str	r3, [r7, #40]	; 0x28
 800b79e:	4613      	mov	r3, r2
 800b7a0:	eb42 0303 	adc.w	r3, r2, r3
 800b7a4:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b7a6:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800b7aa:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800b7ae:	f7f5 f9ef 	bl	8000b90 <__aeabi_uldivmod>
 800b7b2:	4602      	mov	r2, r0
 800b7b4:	460b      	mov	r3, r1
 800b7b6:	4b0d      	ldr	r3, [pc, #52]	; (800b7ec <UART_SetConfig+0x2d4>)
 800b7b8:	fba3 1302 	umull	r1, r3, r3, r2
 800b7bc:	095b      	lsrs	r3, r3, #5
 800b7be:	2164      	movs	r1, #100	; 0x64
 800b7c0:	fb01 f303 	mul.w	r3, r1, r3
 800b7c4:	1ad3      	subs	r3, r2, r3
 800b7c6:	00db      	lsls	r3, r3, #3
 800b7c8:	3332      	adds	r3, #50	; 0x32
 800b7ca:	4a08      	ldr	r2, [pc, #32]	; (800b7ec <UART_SetConfig+0x2d4>)
 800b7cc:	fba2 2303 	umull	r2, r3, r2, r3
 800b7d0:	095b      	lsrs	r3, r3, #5
 800b7d2:	f003 0207 	and.w	r2, r3, #7
 800b7d6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b7da:	681b      	ldr	r3, [r3, #0]
 800b7dc:	4422      	add	r2, r4
 800b7de:	609a      	str	r2, [r3, #8]
 800b7e0:	e105      	b.n	800b9ee <UART_SetConfig+0x4d6>
 800b7e2:	bf00      	nop
 800b7e4:	40011000 	.word	0x40011000
 800b7e8:	40011400 	.word	0x40011400
 800b7ec:	51eb851f 	.word	0x51eb851f
 800b7f0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b7f4:	2200      	movs	r2, #0
 800b7f6:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800b7fa:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800b7fe:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 800b802:	4642      	mov	r2, r8
 800b804:	464b      	mov	r3, r9
 800b806:	1891      	adds	r1, r2, r2
 800b808:	6239      	str	r1, [r7, #32]
 800b80a:	415b      	adcs	r3, r3
 800b80c:	627b      	str	r3, [r7, #36]	; 0x24
 800b80e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800b812:	4641      	mov	r1, r8
 800b814:	1854      	adds	r4, r2, r1
 800b816:	4649      	mov	r1, r9
 800b818:	eb43 0501 	adc.w	r5, r3, r1
 800b81c:	f04f 0200 	mov.w	r2, #0
 800b820:	f04f 0300 	mov.w	r3, #0
 800b824:	00eb      	lsls	r3, r5, #3
 800b826:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800b82a:	00e2      	lsls	r2, r4, #3
 800b82c:	4614      	mov	r4, r2
 800b82e:	461d      	mov	r5, r3
 800b830:	4643      	mov	r3, r8
 800b832:	18e3      	adds	r3, r4, r3
 800b834:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800b838:	464b      	mov	r3, r9
 800b83a:	eb45 0303 	adc.w	r3, r5, r3
 800b83e:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800b842:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b846:	685b      	ldr	r3, [r3, #4]
 800b848:	2200      	movs	r2, #0
 800b84a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800b84e:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800b852:	f04f 0200 	mov.w	r2, #0
 800b856:	f04f 0300 	mov.w	r3, #0
 800b85a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800b85e:	4629      	mov	r1, r5
 800b860:	008b      	lsls	r3, r1, #2
 800b862:	4621      	mov	r1, r4
 800b864:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800b868:	4621      	mov	r1, r4
 800b86a:	008a      	lsls	r2, r1, #2
 800b86c:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 800b870:	f7f5 f98e 	bl	8000b90 <__aeabi_uldivmod>
 800b874:	4602      	mov	r2, r0
 800b876:	460b      	mov	r3, r1
 800b878:	4b60      	ldr	r3, [pc, #384]	; (800b9fc <UART_SetConfig+0x4e4>)
 800b87a:	fba3 2302 	umull	r2, r3, r3, r2
 800b87e:	095b      	lsrs	r3, r3, #5
 800b880:	011c      	lsls	r4, r3, #4
 800b882:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b886:	2200      	movs	r2, #0
 800b888:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800b88c:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800b890:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 800b894:	4642      	mov	r2, r8
 800b896:	464b      	mov	r3, r9
 800b898:	1891      	adds	r1, r2, r2
 800b89a:	61b9      	str	r1, [r7, #24]
 800b89c:	415b      	adcs	r3, r3
 800b89e:	61fb      	str	r3, [r7, #28]
 800b8a0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800b8a4:	4641      	mov	r1, r8
 800b8a6:	1851      	adds	r1, r2, r1
 800b8a8:	6139      	str	r1, [r7, #16]
 800b8aa:	4649      	mov	r1, r9
 800b8ac:	414b      	adcs	r3, r1
 800b8ae:	617b      	str	r3, [r7, #20]
 800b8b0:	f04f 0200 	mov.w	r2, #0
 800b8b4:	f04f 0300 	mov.w	r3, #0
 800b8b8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800b8bc:	4659      	mov	r1, fp
 800b8be:	00cb      	lsls	r3, r1, #3
 800b8c0:	4651      	mov	r1, sl
 800b8c2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800b8c6:	4651      	mov	r1, sl
 800b8c8:	00ca      	lsls	r2, r1, #3
 800b8ca:	4610      	mov	r0, r2
 800b8cc:	4619      	mov	r1, r3
 800b8ce:	4603      	mov	r3, r0
 800b8d0:	4642      	mov	r2, r8
 800b8d2:	189b      	adds	r3, r3, r2
 800b8d4:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800b8d8:	464b      	mov	r3, r9
 800b8da:	460a      	mov	r2, r1
 800b8dc:	eb42 0303 	adc.w	r3, r2, r3
 800b8e0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800b8e4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b8e8:	685b      	ldr	r3, [r3, #4]
 800b8ea:	2200      	movs	r2, #0
 800b8ec:	67bb      	str	r3, [r7, #120]	; 0x78
 800b8ee:	67fa      	str	r2, [r7, #124]	; 0x7c
 800b8f0:	f04f 0200 	mov.w	r2, #0
 800b8f4:	f04f 0300 	mov.w	r3, #0
 800b8f8:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 800b8fc:	4649      	mov	r1, r9
 800b8fe:	008b      	lsls	r3, r1, #2
 800b900:	4641      	mov	r1, r8
 800b902:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800b906:	4641      	mov	r1, r8
 800b908:	008a      	lsls	r2, r1, #2
 800b90a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800b90e:	f7f5 f93f 	bl	8000b90 <__aeabi_uldivmod>
 800b912:	4602      	mov	r2, r0
 800b914:	460b      	mov	r3, r1
 800b916:	4b39      	ldr	r3, [pc, #228]	; (800b9fc <UART_SetConfig+0x4e4>)
 800b918:	fba3 1302 	umull	r1, r3, r3, r2
 800b91c:	095b      	lsrs	r3, r3, #5
 800b91e:	2164      	movs	r1, #100	; 0x64
 800b920:	fb01 f303 	mul.w	r3, r1, r3
 800b924:	1ad3      	subs	r3, r2, r3
 800b926:	011b      	lsls	r3, r3, #4
 800b928:	3332      	adds	r3, #50	; 0x32
 800b92a:	4a34      	ldr	r2, [pc, #208]	; (800b9fc <UART_SetConfig+0x4e4>)
 800b92c:	fba2 2303 	umull	r2, r3, r2, r3
 800b930:	095b      	lsrs	r3, r3, #5
 800b932:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800b936:	441c      	add	r4, r3
 800b938:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b93c:	2200      	movs	r2, #0
 800b93e:	673b      	str	r3, [r7, #112]	; 0x70
 800b940:	677a      	str	r2, [r7, #116]	; 0x74
 800b942:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 800b946:	4642      	mov	r2, r8
 800b948:	464b      	mov	r3, r9
 800b94a:	1891      	adds	r1, r2, r2
 800b94c:	60b9      	str	r1, [r7, #8]
 800b94e:	415b      	adcs	r3, r3
 800b950:	60fb      	str	r3, [r7, #12]
 800b952:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800b956:	4641      	mov	r1, r8
 800b958:	1851      	adds	r1, r2, r1
 800b95a:	6039      	str	r1, [r7, #0]
 800b95c:	4649      	mov	r1, r9
 800b95e:	414b      	adcs	r3, r1
 800b960:	607b      	str	r3, [r7, #4]
 800b962:	f04f 0200 	mov.w	r2, #0
 800b966:	f04f 0300 	mov.w	r3, #0
 800b96a:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800b96e:	4659      	mov	r1, fp
 800b970:	00cb      	lsls	r3, r1, #3
 800b972:	4651      	mov	r1, sl
 800b974:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800b978:	4651      	mov	r1, sl
 800b97a:	00ca      	lsls	r2, r1, #3
 800b97c:	4610      	mov	r0, r2
 800b97e:	4619      	mov	r1, r3
 800b980:	4603      	mov	r3, r0
 800b982:	4642      	mov	r2, r8
 800b984:	189b      	adds	r3, r3, r2
 800b986:	66bb      	str	r3, [r7, #104]	; 0x68
 800b988:	464b      	mov	r3, r9
 800b98a:	460a      	mov	r2, r1
 800b98c:	eb42 0303 	adc.w	r3, r2, r3
 800b990:	66fb      	str	r3, [r7, #108]	; 0x6c
 800b992:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b996:	685b      	ldr	r3, [r3, #4]
 800b998:	2200      	movs	r2, #0
 800b99a:	663b      	str	r3, [r7, #96]	; 0x60
 800b99c:	667a      	str	r2, [r7, #100]	; 0x64
 800b99e:	f04f 0200 	mov.w	r2, #0
 800b9a2:	f04f 0300 	mov.w	r3, #0
 800b9a6:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 800b9aa:	4649      	mov	r1, r9
 800b9ac:	008b      	lsls	r3, r1, #2
 800b9ae:	4641      	mov	r1, r8
 800b9b0:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800b9b4:	4641      	mov	r1, r8
 800b9b6:	008a      	lsls	r2, r1, #2
 800b9b8:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800b9bc:	f7f5 f8e8 	bl	8000b90 <__aeabi_uldivmod>
 800b9c0:	4602      	mov	r2, r0
 800b9c2:	460b      	mov	r3, r1
 800b9c4:	4b0d      	ldr	r3, [pc, #52]	; (800b9fc <UART_SetConfig+0x4e4>)
 800b9c6:	fba3 1302 	umull	r1, r3, r3, r2
 800b9ca:	095b      	lsrs	r3, r3, #5
 800b9cc:	2164      	movs	r1, #100	; 0x64
 800b9ce:	fb01 f303 	mul.w	r3, r1, r3
 800b9d2:	1ad3      	subs	r3, r2, r3
 800b9d4:	011b      	lsls	r3, r3, #4
 800b9d6:	3332      	adds	r3, #50	; 0x32
 800b9d8:	4a08      	ldr	r2, [pc, #32]	; (800b9fc <UART_SetConfig+0x4e4>)
 800b9da:	fba2 2303 	umull	r2, r3, r2, r3
 800b9de:	095b      	lsrs	r3, r3, #5
 800b9e0:	f003 020f 	and.w	r2, r3, #15
 800b9e4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b9e8:	681b      	ldr	r3, [r3, #0]
 800b9ea:	4422      	add	r2, r4
 800b9ec:	609a      	str	r2, [r3, #8]
 800b9ee:	bf00      	nop
 800b9f0:	f507 7780 	add.w	r7, r7, #256	; 0x100
 800b9f4:	46bd      	mov	sp, r7
 800b9f6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800b9fa:	bf00      	nop
 800b9fc:	51eb851f 	.word	0x51eb851f

0800ba00 <__errno>:
 800ba00:	4b01      	ldr	r3, [pc, #4]	; (800ba08 <__errno+0x8>)
 800ba02:	6818      	ldr	r0, [r3, #0]
 800ba04:	4770      	bx	lr
 800ba06:	bf00      	nop
 800ba08:	20000140 	.word	0x20000140

0800ba0c <__libc_init_array>:
 800ba0c:	b570      	push	{r4, r5, r6, lr}
 800ba0e:	4d0d      	ldr	r5, [pc, #52]	; (800ba44 <__libc_init_array+0x38>)
 800ba10:	4c0d      	ldr	r4, [pc, #52]	; (800ba48 <__libc_init_array+0x3c>)
 800ba12:	1b64      	subs	r4, r4, r5
 800ba14:	10a4      	asrs	r4, r4, #2
 800ba16:	2600      	movs	r6, #0
 800ba18:	42a6      	cmp	r6, r4
 800ba1a:	d109      	bne.n	800ba30 <__libc_init_array+0x24>
 800ba1c:	4d0b      	ldr	r5, [pc, #44]	; (800ba4c <__libc_init_array+0x40>)
 800ba1e:	4c0c      	ldr	r4, [pc, #48]	; (800ba50 <__libc_init_array+0x44>)
 800ba20:	f000 f8fe 	bl	800bc20 <_init>
 800ba24:	1b64      	subs	r4, r4, r5
 800ba26:	10a4      	asrs	r4, r4, #2
 800ba28:	2600      	movs	r6, #0
 800ba2a:	42a6      	cmp	r6, r4
 800ba2c:	d105      	bne.n	800ba3a <__libc_init_array+0x2e>
 800ba2e:	bd70      	pop	{r4, r5, r6, pc}
 800ba30:	f855 3b04 	ldr.w	r3, [r5], #4
 800ba34:	4798      	blx	r3
 800ba36:	3601      	adds	r6, #1
 800ba38:	e7ee      	b.n	800ba18 <__libc_init_array+0xc>
 800ba3a:	f855 3b04 	ldr.w	r3, [r5], #4
 800ba3e:	4798      	blx	r3
 800ba40:	3601      	adds	r6, #1
 800ba42:	e7f2      	b.n	800ba2a <__libc_init_array+0x1e>
 800ba44:	0800bc60 	.word	0x0800bc60
 800ba48:	0800bc60 	.word	0x0800bc60
 800ba4c:	0800bc60 	.word	0x0800bc60
 800ba50:	0800bc64 	.word	0x0800bc64

0800ba54 <memset>:
 800ba54:	4402      	add	r2, r0
 800ba56:	4603      	mov	r3, r0
 800ba58:	4293      	cmp	r3, r2
 800ba5a:	d100      	bne.n	800ba5e <memset+0xa>
 800ba5c:	4770      	bx	lr
 800ba5e:	f803 1b01 	strb.w	r1, [r3], #1
 800ba62:	e7f9      	b.n	800ba58 <memset+0x4>

0800ba64 <sqrt>:
 800ba64:	b538      	push	{r3, r4, r5, lr}
 800ba66:	ed2d 8b02 	vpush	{d8}
 800ba6a:	ec55 4b10 	vmov	r4, r5, d0
 800ba6e:	f000 f825 	bl	800babc <__ieee754_sqrt>
 800ba72:	4622      	mov	r2, r4
 800ba74:	462b      	mov	r3, r5
 800ba76:	4620      	mov	r0, r4
 800ba78:	4629      	mov	r1, r5
 800ba7a:	eeb0 8a40 	vmov.f32	s16, s0
 800ba7e:	eef0 8a60 	vmov.f32	s17, s1
 800ba82:	f7f4 ffff 	bl	8000a84 <__aeabi_dcmpun>
 800ba86:	b990      	cbnz	r0, 800baae <sqrt+0x4a>
 800ba88:	2200      	movs	r2, #0
 800ba8a:	2300      	movs	r3, #0
 800ba8c:	4620      	mov	r0, r4
 800ba8e:	4629      	mov	r1, r5
 800ba90:	f7f4 ffd0 	bl	8000a34 <__aeabi_dcmplt>
 800ba94:	b158      	cbz	r0, 800baae <sqrt+0x4a>
 800ba96:	f7ff ffb3 	bl	800ba00 <__errno>
 800ba9a:	2321      	movs	r3, #33	; 0x21
 800ba9c:	6003      	str	r3, [r0, #0]
 800ba9e:	2200      	movs	r2, #0
 800baa0:	2300      	movs	r3, #0
 800baa2:	4610      	mov	r0, r2
 800baa4:	4619      	mov	r1, r3
 800baa6:	f7f4 fe7d 	bl	80007a4 <__aeabi_ddiv>
 800baaa:	ec41 0b18 	vmov	d8, r0, r1
 800baae:	eeb0 0a48 	vmov.f32	s0, s16
 800bab2:	eef0 0a68 	vmov.f32	s1, s17
 800bab6:	ecbd 8b02 	vpop	{d8}
 800baba:	bd38      	pop	{r3, r4, r5, pc}

0800babc <__ieee754_sqrt>:
 800babc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bac0:	ec55 4b10 	vmov	r4, r5, d0
 800bac4:	4e55      	ldr	r6, [pc, #340]	; (800bc1c <__ieee754_sqrt+0x160>)
 800bac6:	43ae      	bics	r6, r5
 800bac8:	ee10 0a10 	vmov	r0, s0
 800bacc:	ee10 3a10 	vmov	r3, s0
 800bad0:	462a      	mov	r2, r5
 800bad2:	4629      	mov	r1, r5
 800bad4:	d110      	bne.n	800baf8 <__ieee754_sqrt+0x3c>
 800bad6:	ee10 2a10 	vmov	r2, s0
 800bada:	462b      	mov	r3, r5
 800badc:	f7f4 fd38 	bl	8000550 <__aeabi_dmul>
 800bae0:	4602      	mov	r2, r0
 800bae2:	460b      	mov	r3, r1
 800bae4:	4620      	mov	r0, r4
 800bae6:	4629      	mov	r1, r5
 800bae8:	f7f4 fb7c 	bl	80001e4 <__adddf3>
 800baec:	4604      	mov	r4, r0
 800baee:	460d      	mov	r5, r1
 800baf0:	ec45 4b10 	vmov	d0, r4, r5
 800baf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800baf8:	2d00      	cmp	r5, #0
 800bafa:	dc10      	bgt.n	800bb1e <__ieee754_sqrt+0x62>
 800bafc:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800bb00:	4330      	orrs	r0, r6
 800bb02:	d0f5      	beq.n	800baf0 <__ieee754_sqrt+0x34>
 800bb04:	b15d      	cbz	r5, 800bb1e <__ieee754_sqrt+0x62>
 800bb06:	ee10 2a10 	vmov	r2, s0
 800bb0a:	462b      	mov	r3, r5
 800bb0c:	ee10 0a10 	vmov	r0, s0
 800bb10:	f7f4 fb66 	bl	80001e0 <__aeabi_dsub>
 800bb14:	4602      	mov	r2, r0
 800bb16:	460b      	mov	r3, r1
 800bb18:	f7f4 fe44 	bl	80007a4 <__aeabi_ddiv>
 800bb1c:	e7e6      	b.n	800baec <__ieee754_sqrt+0x30>
 800bb1e:	1512      	asrs	r2, r2, #20
 800bb20:	d074      	beq.n	800bc0c <__ieee754_sqrt+0x150>
 800bb22:	07d4      	lsls	r4, r2, #31
 800bb24:	f3c1 0113 	ubfx	r1, r1, #0, #20
 800bb28:	f2a2 37ff 	subw	r7, r2, #1023	; 0x3ff
 800bb2c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800bb30:	bf5e      	ittt	pl
 800bb32:	0fda      	lsrpl	r2, r3, #31
 800bb34:	005b      	lslpl	r3, r3, #1
 800bb36:	eb02 0141 	addpl.w	r1, r2, r1, lsl #1
 800bb3a:	2400      	movs	r4, #0
 800bb3c:	0fda      	lsrs	r2, r3, #31
 800bb3e:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 800bb42:	107f      	asrs	r7, r7, #1
 800bb44:	005b      	lsls	r3, r3, #1
 800bb46:	2516      	movs	r5, #22
 800bb48:	4620      	mov	r0, r4
 800bb4a:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 800bb4e:	1886      	adds	r6, r0, r2
 800bb50:	428e      	cmp	r6, r1
 800bb52:	bfde      	ittt	le
 800bb54:	1b89      	suble	r1, r1, r6
 800bb56:	18b0      	addle	r0, r6, r2
 800bb58:	18a4      	addle	r4, r4, r2
 800bb5a:	0049      	lsls	r1, r1, #1
 800bb5c:	3d01      	subs	r5, #1
 800bb5e:	eb01 71d3 	add.w	r1, r1, r3, lsr #31
 800bb62:	ea4f 0252 	mov.w	r2, r2, lsr #1
 800bb66:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800bb6a:	d1f0      	bne.n	800bb4e <__ieee754_sqrt+0x92>
 800bb6c:	462a      	mov	r2, r5
 800bb6e:	f04f 0e20 	mov.w	lr, #32
 800bb72:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 800bb76:	4281      	cmp	r1, r0
 800bb78:	eb06 0c05 	add.w	ip, r6, r5
 800bb7c:	dc02      	bgt.n	800bb84 <__ieee754_sqrt+0xc8>
 800bb7e:	d113      	bne.n	800bba8 <__ieee754_sqrt+0xec>
 800bb80:	459c      	cmp	ip, r3
 800bb82:	d811      	bhi.n	800bba8 <__ieee754_sqrt+0xec>
 800bb84:	f1bc 0f00 	cmp.w	ip, #0
 800bb88:	eb0c 0506 	add.w	r5, ip, r6
 800bb8c:	da43      	bge.n	800bc16 <__ieee754_sqrt+0x15a>
 800bb8e:	2d00      	cmp	r5, #0
 800bb90:	db41      	blt.n	800bc16 <__ieee754_sqrt+0x15a>
 800bb92:	f100 0801 	add.w	r8, r0, #1
 800bb96:	1a09      	subs	r1, r1, r0
 800bb98:	459c      	cmp	ip, r3
 800bb9a:	bf88      	it	hi
 800bb9c:	f101 31ff 	addhi.w	r1, r1, #4294967295
 800bba0:	eba3 030c 	sub.w	r3, r3, ip
 800bba4:	4432      	add	r2, r6
 800bba6:	4640      	mov	r0, r8
 800bba8:	ea4f 7cd3 	mov.w	ip, r3, lsr #31
 800bbac:	f1be 0e01 	subs.w	lr, lr, #1
 800bbb0:	eb0c 0141 	add.w	r1, ip, r1, lsl #1
 800bbb4:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800bbb8:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800bbbc:	d1db      	bne.n	800bb76 <__ieee754_sqrt+0xba>
 800bbbe:	430b      	orrs	r3, r1
 800bbc0:	d006      	beq.n	800bbd0 <__ieee754_sqrt+0x114>
 800bbc2:	1c50      	adds	r0, r2, #1
 800bbc4:	bf13      	iteet	ne
 800bbc6:	3201      	addne	r2, #1
 800bbc8:	3401      	addeq	r4, #1
 800bbca:	4672      	moveq	r2, lr
 800bbcc:	f022 0201 	bicne.w	r2, r2, #1
 800bbd0:	1063      	asrs	r3, r4, #1
 800bbd2:	0852      	lsrs	r2, r2, #1
 800bbd4:	07e1      	lsls	r1, r4, #31
 800bbd6:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 800bbda:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 800bbde:	bf48      	it	mi
 800bbe0:	f042 4200 	orrmi.w	r2, r2, #2147483648	; 0x80000000
 800bbe4:	eb03 5507 	add.w	r5, r3, r7, lsl #20
 800bbe8:	4614      	mov	r4, r2
 800bbea:	e781      	b.n	800baf0 <__ieee754_sqrt+0x34>
 800bbec:	0ad9      	lsrs	r1, r3, #11
 800bbee:	3815      	subs	r0, #21
 800bbf0:	055b      	lsls	r3, r3, #21
 800bbf2:	2900      	cmp	r1, #0
 800bbf4:	d0fa      	beq.n	800bbec <__ieee754_sqrt+0x130>
 800bbf6:	02cd      	lsls	r5, r1, #11
 800bbf8:	d50a      	bpl.n	800bc10 <__ieee754_sqrt+0x154>
 800bbfa:	f1c2 0420 	rsb	r4, r2, #32
 800bbfe:	fa23 f404 	lsr.w	r4, r3, r4
 800bc02:	1e55      	subs	r5, r2, #1
 800bc04:	4093      	lsls	r3, r2
 800bc06:	4321      	orrs	r1, r4
 800bc08:	1b42      	subs	r2, r0, r5
 800bc0a:	e78a      	b.n	800bb22 <__ieee754_sqrt+0x66>
 800bc0c:	4610      	mov	r0, r2
 800bc0e:	e7f0      	b.n	800bbf2 <__ieee754_sqrt+0x136>
 800bc10:	0049      	lsls	r1, r1, #1
 800bc12:	3201      	adds	r2, #1
 800bc14:	e7ef      	b.n	800bbf6 <__ieee754_sqrt+0x13a>
 800bc16:	4680      	mov	r8, r0
 800bc18:	e7bd      	b.n	800bb96 <__ieee754_sqrt+0xda>
 800bc1a:	bf00      	nop
 800bc1c:	7ff00000 	.word	0x7ff00000

0800bc20 <_init>:
 800bc20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bc22:	bf00      	nop
 800bc24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800bc26:	bc08      	pop	{r3}
 800bc28:	469e      	mov	lr, r3
 800bc2a:	4770      	bx	lr

0800bc2c <_fini>:
 800bc2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bc2e:	bf00      	nop
 800bc30:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800bc32:	bc08      	pop	{r3}
 800bc34:	469e      	mov	lr, r3
 800bc36:	4770      	bx	lr
