
UARTs.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000ba24  08000198  08000198  00010198  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000020  0800bbbc  0800bbbc  0001bbbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800bbdc  0800bbdc  000201a4  2**0
                  CONTENTS
  4 .ARM          00000008  0800bbdc  0800bbdc  0001bbdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800bbe4  0800bbe4  000201a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800bbe4  0800bbe4  0001bbe4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800bbe8  0800bbe8  0001bbe8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001a4  20000000  0800bbec  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000668  200001a8  0800bd90  000201a8  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20000810  0800bd90  00020810  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201a4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00013bbf  00000000  00000000  000201d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002185  00000000  00000000  00033d93  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001218  00000000  00000000  00035f18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001178  00000000  00000000  00037130  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000170e6  00000000  00000000  000382a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00014533  00000000  00000000  0004f38e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000932ab  00000000  00000000  000638c1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000f6b6c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00005118  00000000  00000000  000f6bbc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	200001a8 	.word	0x200001a8
 80001b4:	00000000 	.word	0x00000000
 80001b8:	0800bba4 	.word	0x0800bba4

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	200001ac 	.word	0x200001ac
 80001d4:	0800bba4 	.word	0x0800bba4

080001d8 <__aeabi_drsub>:
 80001d8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001dc:	e002      	b.n	80001e4 <__adddf3>
 80001de:	bf00      	nop

080001e0 <__aeabi_dsub>:
 80001e0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001e4 <__adddf3>:
 80001e4:	b530      	push	{r4, r5, lr}
 80001e6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001ea:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001ee:	ea94 0f05 	teq	r4, r5
 80001f2:	bf08      	it	eq
 80001f4:	ea90 0f02 	teqeq	r0, r2
 80001f8:	bf1f      	itttt	ne
 80001fa:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001fe:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000202:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000206:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800020a:	f000 80e2 	beq.w	80003d2 <__adddf3+0x1ee>
 800020e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000212:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000216:	bfb8      	it	lt
 8000218:	426d      	neglt	r5, r5
 800021a:	dd0c      	ble.n	8000236 <__adddf3+0x52>
 800021c:	442c      	add	r4, r5
 800021e:	ea80 0202 	eor.w	r2, r0, r2
 8000222:	ea81 0303 	eor.w	r3, r1, r3
 8000226:	ea82 0000 	eor.w	r0, r2, r0
 800022a:	ea83 0101 	eor.w	r1, r3, r1
 800022e:	ea80 0202 	eor.w	r2, r0, r2
 8000232:	ea81 0303 	eor.w	r3, r1, r3
 8000236:	2d36      	cmp	r5, #54	; 0x36
 8000238:	bf88      	it	hi
 800023a:	bd30      	pophi	{r4, r5, pc}
 800023c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000240:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000244:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000248:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800024c:	d002      	beq.n	8000254 <__adddf3+0x70>
 800024e:	4240      	negs	r0, r0
 8000250:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000254:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000258:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800025c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000260:	d002      	beq.n	8000268 <__adddf3+0x84>
 8000262:	4252      	negs	r2, r2
 8000264:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000268:	ea94 0f05 	teq	r4, r5
 800026c:	f000 80a7 	beq.w	80003be <__adddf3+0x1da>
 8000270:	f1a4 0401 	sub.w	r4, r4, #1
 8000274:	f1d5 0e20 	rsbs	lr, r5, #32
 8000278:	db0d      	blt.n	8000296 <__adddf3+0xb2>
 800027a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800027e:	fa22 f205 	lsr.w	r2, r2, r5
 8000282:	1880      	adds	r0, r0, r2
 8000284:	f141 0100 	adc.w	r1, r1, #0
 8000288:	fa03 f20e 	lsl.w	r2, r3, lr
 800028c:	1880      	adds	r0, r0, r2
 800028e:	fa43 f305 	asr.w	r3, r3, r5
 8000292:	4159      	adcs	r1, r3
 8000294:	e00e      	b.n	80002b4 <__adddf3+0xd0>
 8000296:	f1a5 0520 	sub.w	r5, r5, #32
 800029a:	f10e 0e20 	add.w	lr, lr, #32
 800029e:	2a01      	cmp	r2, #1
 80002a0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002a4:	bf28      	it	cs
 80002a6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002aa:	fa43 f305 	asr.w	r3, r3, r5
 80002ae:	18c0      	adds	r0, r0, r3
 80002b0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002b8:	d507      	bpl.n	80002ca <__adddf3+0xe6>
 80002ba:	f04f 0e00 	mov.w	lr, #0
 80002be:	f1dc 0c00 	rsbs	ip, ip, #0
 80002c2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002c6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002ca:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80002ce:	d31b      	bcc.n	8000308 <__adddf3+0x124>
 80002d0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002d4:	d30c      	bcc.n	80002f0 <__adddf3+0x10c>
 80002d6:	0849      	lsrs	r1, r1, #1
 80002d8:	ea5f 0030 	movs.w	r0, r0, rrx
 80002dc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002e0:	f104 0401 	add.w	r4, r4, #1
 80002e4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002e8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002ec:	f080 809a 	bcs.w	8000424 <__adddf3+0x240>
 80002f0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002f4:	bf08      	it	eq
 80002f6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002fa:	f150 0000 	adcs.w	r0, r0, #0
 80002fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000302:	ea41 0105 	orr.w	r1, r1, r5
 8000306:	bd30      	pop	{r4, r5, pc}
 8000308:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800030c:	4140      	adcs	r0, r0
 800030e:	eb41 0101 	adc.w	r1, r1, r1
 8000312:	3c01      	subs	r4, #1
 8000314:	bf28      	it	cs
 8000316:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800031a:	d2e9      	bcs.n	80002f0 <__adddf3+0x10c>
 800031c:	f091 0f00 	teq	r1, #0
 8000320:	bf04      	itt	eq
 8000322:	4601      	moveq	r1, r0
 8000324:	2000      	moveq	r0, #0
 8000326:	fab1 f381 	clz	r3, r1
 800032a:	bf08      	it	eq
 800032c:	3320      	addeq	r3, #32
 800032e:	f1a3 030b 	sub.w	r3, r3, #11
 8000332:	f1b3 0220 	subs.w	r2, r3, #32
 8000336:	da0c      	bge.n	8000352 <__adddf3+0x16e>
 8000338:	320c      	adds	r2, #12
 800033a:	dd08      	ble.n	800034e <__adddf3+0x16a>
 800033c:	f102 0c14 	add.w	ip, r2, #20
 8000340:	f1c2 020c 	rsb	r2, r2, #12
 8000344:	fa01 f00c 	lsl.w	r0, r1, ip
 8000348:	fa21 f102 	lsr.w	r1, r1, r2
 800034c:	e00c      	b.n	8000368 <__adddf3+0x184>
 800034e:	f102 0214 	add.w	r2, r2, #20
 8000352:	bfd8      	it	le
 8000354:	f1c2 0c20 	rsble	ip, r2, #32
 8000358:	fa01 f102 	lsl.w	r1, r1, r2
 800035c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000360:	bfdc      	itt	le
 8000362:	ea41 010c 	orrle.w	r1, r1, ip
 8000366:	4090      	lslle	r0, r2
 8000368:	1ae4      	subs	r4, r4, r3
 800036a:	bfa2      	ittt	ge
 800036c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000370:	4329      	orrge	r1, r5
 8000372:	bd30      	popge	{r4, r5, pc}
 8000374:	ea6f 0404 	mvn.w	r4, r4
 8000378:	3c1f      	subs	r4, #31
 800037a:	da1c      	bge.n	80003b6 <__adddf3+0x1d2>
 800037c:	340c      	adds	r4, #12
 800037e:	dc0e      	bgt.n	800039e <__adddf3+0x1ba>
 8000380:	f104 0414 	add.w	r4, r4, #20
 8000384:	f1c4 0220 	rsb	r2, r4, #32
 8000388:	fa20 f004 	lsr.w	r0, r0, r4
 800038c:	fa01 f302 	lsl.w	r3, r1, r2
 8000390:	ea40 0003 	orr.w	r0, r0, r3
 8000394:	fa21 f304 	lsr.w	r3, r1, r4
 8000398:	ea45 0103 	orr.w	r1, r5, r3
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	f1c4 040c 	rsb	r4, r4, #12
 80003a2:	f1c4 0220 	rsb	r2, r4, #32
 80003a6:	fa20 f002 	lsr.w	r0, r0, r2
 80003aa:	fa01 f304 	lsl.w	r3, r1, r4
 80003ae:	ea40 0003 	orr.w	r0, r0, r3
 80003b2:	4629      	mov	r1, r5
 80003b4:	bd30      	pop	{r4, r5, pc}
 80003b6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ba:	4629      	mov	r1, r5
 80003bc:	bd30      	pop	{r4, r5, pc}
 80003be:	f094 0f00 	teq	r4, #0
 80003c2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80003c6:	bf06      	itte	eq
 80003c8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80003cc:	3401      	addeq	r4, #1
 80003ce:	3d01      	subne	r5, #1
 80003d0:	e74e      	b.n	8000270 <__adddf3+0x8c>
 80003d2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003d6:	bf18      	it	ne
 80003d8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003dc:	d029      	beq.n	8000432 <__adddf3+0x24e>
 80003de:	ea94 0f05 	teq	r4, r5
 80003e2:	bf08      	it	eq
 80003e4:	ea90 0f02 	teqeq	r0, r2
 80003e8:	d005      	beq.n	80003f6 <__adddf3+0x212>
 80003ea:	ea54 0c00 	orrs.w	ip, r4, r0
 80003ee:	bf04      	itt	eq
 80003f0:	4619      	moveq	r1, r3
 80003f2:	4610      	moveq	r0, r2
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	ea91 0f03 	teq	r1, r3
 80003fa:	bf1e      	ittt	ne
 80003fc:	2100      	movne	r1, #0
 80003fe:	2000      	movne	r0, #0
 8000400:	bd30      	popne	{r4, r5, pc}
 8000402:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000406:	d105      	bne.n	8000414 <__adddf3+0x230>
 8000408:	0040      	lsls	r0, r0, #1
 800040a:	4149      	adcs	r1, r1
 800040c:	bf28      	it	cs
 800040e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000412:	bd30      	pop	{r4, r5, pc}
 8000414:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000418:	bf3c      	itt	cc
 800041a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800041e:	bd30      	popcc	{r4, r5, pc}
 8000420:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000424:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000428:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800042c:	f04f 0000 	mov.w	r0, #0
 8000430:	bd30      	pop	{r4, r5, pc}
 8000432:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000436:	bf1a      	itte	ne
 8000438:	4619      	movne	r1, r3
 800043a:	4610      	movne	r0, r2
 800043c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000440:	bf1c      	itt	ne
 8000442:	460b      	movne	r3, r1
 8000444:	4602      	movne	r2, r0
 8000446:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800044a:	bf06      	itte	eq
 800044c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000450:	ea91 0f03 	teqeq	r1, r3
 8000454:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000458:	bd30      	pop	{r4, r5, pc}
 800045a:	bf00      	nop

0800045c <__aeabi_ui2d>:
 800045c:	f090 0f00 	teq	r0, #0
 8000460:	bf04      	itt	eq
 8000462:	2100      	moveq	r1, #0
 8000464:	4770      	bxeq	lr
 8000466:	b530      	push	{r4, r5, lr}
 8000468:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800046c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000470:	f04f 0500 	mov.w	r5, #0
 8000474:	f04f 0100 	mov.w	r1, #0
 8000478:	e750      	b.n	800031c <__adddf3+0x138>
 800047a:	bf00      	nop

0800047c <__aeabi_i2d>:
 800047c:	f090 0f00 	teq	r0, #0
 8000480:	bf04      	itt	eq
 8000482:	2100      	moveq	r1, #0
 8000484:	4770      	bxeq	lr
 8000486:	b530      	push	{r4, r5, lr}
 8000488:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800048c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000490:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000494:	bf48      	it	mi
 8000496:	4240      	negmi	r0, r0
 8000498:	f04f 0100 	mov.w	r1, #0
 800049c:	e73e      	b.n	800031c <__adddf3+0x138>
 800049e:	bf00      	nop

080004a0 <__aeabi_f2d>:
 80004a0:	0042      	lsls	r2, r0, #1
 80004a2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004a6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004aa:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004ae:	bf1f      	itttt	ne
 80004b0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004b4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004b8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004bc:	4770      	bxne	lr
 80004be:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80004c2:	bf08      	it	eq
 80004c4:	4770      	bxeq	lr
 80004c6:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80004ca:	bf04      	itt	eq
 80004cc:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80004d0:	4770      	bxeq	lr
 80004d2:	b530      	push	{r4, r5, lr}
 80004d4:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004e0:	e71c      	b.n	800031c <__adddf3+0x138>
 80004e2:	bf00      	nop

080004e4 <__aeabi_ul2d>:
 80004e4:	ea50 0201 	orrs.w	r2, r0, r1
 80004e8:	bf08      	it	eq
 80004ea:	4770      	bxeq	lr
 80004ec:	b530      	push	{r4, r5, lr}
 80004ee:	f04f 0500 	mov.w	r5, #0
 80004f2:	e00a      	b.n	800050a <__aeabi_l2d+0x16>

080004f4 <__aeabi_l2d>:
 80004f4:	ea50 0201 	orrs.w	r2, r0, r1
 80004f8:	bf08      	it	eq
 80004fa:	4770      	bxeq	lr
 80004fc:	b530      	push	{r4, r5, lr}
 80004fe:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000502:	d502      	bpl.n	800050a <__aeabi_l2d+0x16>
 8000504:	4240      	negs	r0, r0
 8000506:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800050a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800050e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000512:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000516:	f43f aed8 	beq.w	80002ca <__adddf3+0xe6>
 800051a:	f04f 0203 	mov.w	r2, #3
 800051e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000522:	bf18      	it	ne
 8000524:	3203      	addne	r2, #3
 8000526:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800052a:	bf18      	it	ne
 800052c:	3203      	addne	r2, #3
 800052e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000532:	f1c2 0320 	rsb	r3, r2, #32
 8000536:	fa00 fc03 	lsl.w	ip, r0, r3
 800053a:	fa20 f002 	lsr.w	r0, r0, r2
 800053e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000542:	ea40 000e 	orr.w	r0, r0, lr
 8000546:	fa21 f102 	lsr.w	r1, r1, r2
 800054a:	4414      	add	r4, r2
 800054c:	e6bd      	b.n	80002ca <__adddf3+0xe6>
 800054e:	bf00      	nop

08000550 <__aeabi_dmul>:
 8000550:	b570      	push	{r4, r5, r6, lr}
 8000552:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000556:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800055a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800055e:	bf1d      	ittte	ne
 8000560:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000564:	ea94 0f0c 	teqne	r4, ip
 8000568:	ea95 0f0c 	teqne	r5, ip
 800056c:	f000 f8de 	bleq	800072c <__aeabi_dmul+0x1dc>
 8000570:	442c      	add	r4, r5
 8000572:	ea81 0603 	eor.w	r6, r1, r3
 8000576:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800057a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800057e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000582:	bf18      	it	ne
 8000584:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000588:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800058c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000590:	d038      	beq.n	8000604 <__aeabi_dmul+0xb4>
 8000592:	fba0 ce02 	umull	ip, lr, r0, r2
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800059e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005a6:	f04f 0600 	mov.w	r6, #0
 80005aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005ae:	f09c 0f00 	teq	ip, #0
 80005b2:	bf18      	it	ne
 80005b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80005c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80005c4:	d204      	bcs.n	80005d0 <__aeabi_dmul+0x80>
 80005c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005ca:	416d      	adcs	r5, r5
 80005cc:	eb46 0606 	adc.w	r6, r6, r6
 80005d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80005e8:	bf88      	it	hi
 80005ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80005ee:	d81e      	bhi.n	800062e <__aeabi_dmul+0xde>
 80005f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80005f4:	bf08      	it	eq
 80005f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005fa:	f150 0000 	adcs.w	r0, r0, #0
 80005fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000602:	bd70      	pop	{r4, r5, r6, pc}
 8000604:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000608:	ea46 0101 	orr.w	r1, r6, r1
 800060c:	ea40 0002 	orr.w	r0, r0, r2
 8000610:	ea81 0103 	eor.w	r1, r1, r3
 8000614:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000618:	bfc2      	ittt	gt
 800061a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800061e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000622:	bd70      	popgt	{r4, r5, r6, pc}
 8000624:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000628:	f04f 0e00 	mov.w	lr, #0
 800062c:	3c01      	subs	r4, #1
 800062e:	f300 80ab 	bgt.w	8000788 <__aeabi_dmul+0x238>
 8000632:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000636:	bfde      	ittt	le
 8000638:	2000      	movle	r0, #0
 800063a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800063e:	bd70      	pople	{r4, r5, r6, pc}
 8000640:	f1c4 0400 	rsb	r4, r4, #0
 8000644:	3c20      	subs	r4, #32
 8000646:	da35      	bge.n	80006b4 <__aeabi_dmul+0x164>
 8000648:	340c      	adds	r4, #12
 800064a:	dc1b      	bgt.n	8000684 <__aeabi_dmul+0x134>
 800064c:	f104 0414 	add.w	r4, r4, #20
 8000650:	f1c4 0520 	rsb	r5, r4, #32
 8000654:	fa00 f305 	lsl.w	r3, r0, r5
 8000658:	fa20 f004 	lsr.w	r0, r0, r4
 800065c:	fa01 f205 	lsl.w	r2, r1, r5
 8000660:	ea40 0002 	orr.w	r0, r0, r2
 8000664:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000668:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800066c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000670:	fa21 f604 	lsr.w	r6, r1, r4
 8000674:	eb42 0106 	adc.w	r1, r2, r6
 8000678:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800067c:	bf08      	it	eq
 800067e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000682:	bd70      	pop	{r4, r5, r6, pc}
 8000684:	f1c4 040c 	rsb	r4, r4, #12
 8000688:	f1c4 0520 	rsb	r5, r4, #32
 800068c:	fa00 f304 	lsl.w	r3, r0, r4
 8000690:	fa20 f005 	lsr.w	r0, r0, r5
 8000694:	fa01 f204 	lsl.w	r2, r1, r4
 8000698:	ea40 0002 	orr.w	r0, r0, r2
 800069c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006a4:	f141 0100 	adc.w	r1, r1, #0
 80006a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ac:	bf08      	it	eq
 80006ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f1c4 0520 	rsb	r5, r4, #32
 80006b8:	fa00 f205 	lsl.w	r2, r0, r5
 80006bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80006c0:	fa20 f304 	lsr.w	r3, r0, r4
 80006c4:	fa01 f205 	lsl.w	r2, r1, r5
 80006c8:	ea43 0302 	orr.w	r3, r3, r2
 80006cc:	fa21 f004 	lsr.w	r0, r1, r4
 80006d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d4:	fa21 f204 	lsr.w	r2, r1, r4
 80006d8:	ea20 0002 	bic.w	r0, r0, r2
 80006dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006e4:	bf08      	it	eq
 80006e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f094 0f00 	teq	r4, #0
 80006f0:	d10f      	bne.n	8000712 <__aeabi_dmul+0x1c2>
 80006f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80006f6:	0040      	lsls	r0, r0, #1
 80006f8:	eb41 0101 	adc.w	r1, r1, r1
 80006fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000700:	bf08      	it	eq
 8000702:	3c01      	subeq	r4, #1
 8000704:	d0f7      	beq.n	80006f6 <__aeabi_dmul+0x1a6>
 8000706:	ea41 0106 	orr.w	r1, r1, r6
 800070a:	f095 0f00 	teq	r5, #0
 800070e:	bf18      	it	ne
 8000710:	4770      	bxne	lr
 8000712:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000716:	0052      	lsls	r2, r2, #1
 8000718:	eb43 0303 	adc.w	r3, r3, r3
 800071c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000720:	bf08      	it	eq
 8000722:	3d01      	subeq	r5, #1
 8000724:	d0f7      	beq.n	8000716 <__aeabi_dmul+0x1c6>
 8000726:	ea43 0306 	orr.w	r3, r3, r6
 800072a:	4770      	bx	lr
 800072c:	ea94 0f0c 	teq	r4, ip
 8000730:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000734:	bf18      	it	ne
 8000736:	ea95 0f0c 	teqne	r5, ip
 800073a:	d00c      	beq.n	8000756 <__aeabi_dmul+0x206>
 800073c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000740:	bf18      	it	ne
 8000742:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000746:	d1d1      	bne.n	80006ec <__aeabi_dmul+0x19c>
 8000748:	ea81 0103 	eor.w	r1, r1, r3
 800074c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000750:	f04f 0000 	mov.w	r0, #0
 8000754:	bd70      	pop	{r4, r5, r6, pc}
 8000756:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800075a:	bf06      	itte	eq
 800075c:	4610      	moveq	r0, r2
 800075e:	4619      	moveq	r1, r3
 8000760:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000764:	d019      	beq.n	800079a <__aeabi_dmul+0x24a>
 8000766:	ea94 0f0c 	teq	r4, ip
 800076a:	d102      	bne.n	8000772 <__aeabi_dmul+0x222>
 800076c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000770:	d113      	bne.n	800079a <__aeabi_dmul+0x24a>
 8000772:	ea95 0f0c 	teq	r5, ip
 8000776:	d105      	bne.n	8000784 <__aeabi_dmul+0x234>
 8000778:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800077c:	bf1c      	itt	ne
 800077e:	4610      	movne	r0, r2
 8000780:	4619      	movne	r1, r3
 8000782:	d10a      	bne.n	800079a <__aeabi_dmul+0x24a>
 8000784:	ea81 0103 	eor.w	r1, r1, r3
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000790:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000794:	f04f 0000 	mov.w	r0, #0
 8000798:	bd70      	pop	{r4, r5, r6, pc}
 800079a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800079e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007a2:	bd70      	pop	{r4, r5, r6, pc}

080007a4 <__aeabi_ddiv>:
 80007a4:	b570      	push	{r4, r5, r6, lr}
 80007a6:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007aa:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007ae:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007b2:	bf1d      	ittte	ne
 80007b4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007b8:	ea94 0f0c 	teqne	r4, ip
 80007bc:	ea95 0f0c 	teqne	r5, ip
 80007c0:	f000 f8a7 	bleq	8000912 <__aeabi_ddiv+0x16e>
 80007c4:	eba4 0405 	sub.w	r4, r4, r5
 80007c8:	ea81 0e03 	eor.w	lr, r1, r3
 80007cc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80007d0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007d4:	f000 8088 	beq.w	80008e8 <__aeabi_ddiv+0x144>
 80007d8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007dc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80007e0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007e4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007e8:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007ec:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007f0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007f4:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007f8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007fc:	429d      	cmp	r5, r3
 80007fe:	bf08      	it	eq
 8000800:	4296      	cmpeq	r6, r2
 8000802:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000806:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800080a:	d202      	bcs.n	8000812 <__aeabi_ddiv+0x6e>
 800080c:	085b      	lsrs	r3, r3, #1
 800080e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000812:	1ab6      	subs	r6, r6, r2
 8000814:	eb65 0503 	sbc.w	r5, r5, r3
 8000818:	085b      	lsrs	r3, r3, #1
 800081a:	ea4f 0232 	mov.w	r2, r2, rrx
 800081e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000822:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000826:	ebb6 0e02 	subs.w	lr, r6, r2
 800082a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800082e:	bf22      	ittt	cs
 8000830:	1ab6      	subcs	r6, r6, r2
 8000832:	4675      	movcs	r5, lr
 8000834:	ea40 000c 	orrcs.w	r0, r0, ip
 8000838:	085b      	lsrs	r3, r3, #1
 800083a:	ea4f 0232 	mov.w	r2, r2, rrx
 800083e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000842:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000846:	bf22      	ittt	cs
 8000848:	1ab6      	subcs	r6, r6, r2
 800084a:	4675      	movcs	r5, lr
 800084c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000850:	085b      	lsrs	r3, r3, #1
 8000852:	ea4f 0232 	mov.w	r2, r2, rrx
 8000856:	ebb6 0e02 	subs.w	lr, r6, r2
 800085a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800085e:	bf22      	ittt	cs
 8000860:	1ab6      	subcs	r6, r6, r2
 8000862:	4675      	movcs	r5, lr
 8000864:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000880:	ea55 0e06 	orrs.w	lr, r5, r6
 8000884:	d018      	beq.n	80008b8 <__aeabi_ddiv+0x114>
 8000886:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800088a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800088e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000892:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000896:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800089a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800089e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008a2:	d1c0      	bne.n	8000826 <__aeabi_ddiv+0x82>
 80008a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008a8:	d10b      	bne.n	80008c2 <__aeabi_ddiv+0x11e>
 80008aa:	ea41 0100 	orr.w	r1, r1, r0
 80008ae:	f04f 0000 	mov.w	r0, #0
 80008b2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008b6:	e7b6      	b.n	8000826 <__aeabi_ddiv+0x82>
 80008b8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008bc:	bf04      	itt	eq
 80008be:	4301      	orreq	r1, r0
 80008c0:	2000      	moveq	r0, #0
 80008c2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80008c6:	bf88      	it	hi
 80008c8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80008cc:	f63f aeaf 	bhi.w	800062e <__aeabi_dmul+0xde>
 80008d0:	ebb5 0c03 	subs.w	ip, r5, r3
 80008d4:	bf04      	itt	eq
 80008d6:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008da:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008de:	f150 0000 	adcs.w	r0, r0, #0
 80008e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008e6:	bd70      	pop	{r4, r5, r6, pc}
 80008e8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80008ec:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008f0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008f4:	bfc2      	ittt	gt
 80008f6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008fa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008fe:	bd70      	popgt	{r4, r5, r6, pc}
 8000900:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000904:	f04f 0e00 	mov.w	lr, #0
 8000908:	3c01      	subs	r4, #1
 800090a:	e690      	b.n	800062e <__aeabi_dmul+0xde>
 800090c:	ea45 0e06 	orr.w	lr, r5, r6
 8000910:	e68d      	b.n	800062e <__aeabi_dmul+0xde>
 8000912:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000916:	ea94 0f0c 	teq	r4, ip
 800091a:	bf08      	it	eq
 800091c:	ea95 0f0c 	teqeq	r5, ip
 8000920:	f43f af3b 	beq.w	800079a <__aeabi_dmul+0x24a>
 8000924:	ea94 0f0c 	teq	r4, ip
 8000928:	d10a      	bne.n	8000940 <__aeabi_ddiv+0x19c>
 800092a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800092e:	f47f af34 	bne.w	800079a <__aeabi_dmul+0x24a>
 8000932:	ea95 0f0c 	teq	r5, ip
 8000936:	f47f af25 	bne.w	8000784 <__aeabi_dmul+0x234>
 800093a:	4610      	mov	r0, r2
 800093c:	4619      	mov	r1, r3
 800093e:	e72c      	b.n	800079a <__aeabi_dmul+0x24a>
 8000940:	ea95 0f0c 	teq	r5, ip
 8000944:	d106      	bne.n	8000954 <__aeabi_ddiv+0x1b0>
 8000946:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800094a:	f43f aefd 	beq.w	8000748 <__aeabi_dmul+0x1f8>
 800094e:	4610      	mov	r0, r2
 8000950:	4619      	mov	r1, r3
 8000952:	e722      	b.n	800079a <__aeabi_dmul+0x24a>
 8000954:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000958:	bf18      	it	ne
 800095a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800095e:	f47f aec5 	bne.w	80006ec <__aeabi_dmul+0x19c>
 8000962:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000966:	f47f af0d 	bne.w	8000784 <__aeabi_dmul+0x234>
 800096a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800096e:	f47f aeeb 	bne.w	8000748 <__aeabi_dmul+0x1f8>
 8000972:	e712      	b.n	800079a <__aeabi_dmul+0x24a>

08000974 <__gedf2>:
 8000974:	f04f 3cff 	mov.w	ip, #4294967295
 8000978:	e006      	b.n	8000988 <__cmpdf2+0x4>
 800097a:	bf00      	nop

0800097c <__ledf2>:
 800097c:	f04f 0c01 	mov.w	ip, #1
 8000980:	e002      	b.n	8000988 <__cmpdf2+0x4>
 8000982:	bf00      	nop

08000984 <__cmpdf2>:
 8000984:	f04f 0c01 	mov.w	ip, #1
 8000988:	f84d cd04 	str.w	ip, [sp, #-4]!
 800098c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000990:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000994:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000998:	bf18      	it	ne
 800099a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800099e:	d01b      	beq.n	80009d8 <__cmpdf2+0x54>
 80009a0:	b001      	add	sp, #4
 80009a2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009a6:	bf0c      	ite	eq
 80009a8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009ac:	ea91 0f03 	teqne	r1, r3
 80009b0:	bf02      	ittt	eq
 80009b2:	ea90 0f02 	teqeq	r0, r2
 80009b6:	2000      	moveq	r0, #0
 80009b8:	4770      	bxeq	lr
 80009ba:	f110 0f00 	cmn.w	r0, #0
 80009be:	ea91 0f03 	teq	r1, r3
 80009c2:	bf58      	it	pl
 80009c4:	4299      	cmppl	r1, r3
 80009c6:	bf08      	it	eq
 80009c8:	4290      	cmpeq	r0, r2
 80009ca:	bf2c      	ite	cs
 80009cc:	17d8      	asrcs	r0, r3, #31
 80009ce:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80009d2:	f040 0001 	orr.w	r0, r0, #1
 80009d6:	4770      	bx	lr
 80009d8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009e0:	d102      	bne.n	80009e8 <__cmpdf2+0x64>
 80009e2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009e6:	d107      	bne.n	80009f8 <__cmpdf2+0x74>
 80009e8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009ec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009f0:	d1d6      	bne.n	80009a0 <__cmpdf2+0x1c>
 80009f2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009f6:	d0d3      	beq.n	80009a0 <__cmpdf2+0x1c>
 80009f8:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009fc:	4770      	bx	lr
 80009fe:	bf00      	nop

08000a00 <__aeabi_cdrcmple>:
 8000a00:	4684      	mov	ip, r0
 8000a02:	4610      	mov	r0, r2
 8000a04:	4662      	mov	r2, ip
 8000a06:	468c      	mov	ip, r1
 8000a08:	4619      	mov	r1, r3
 8000a0a:	4663      	mov	r3, ip
 8000a0c:	e000      	b.n	8000a10 <__aeabi_cdcmpeq>
 8000a0e:	bf00      	nop

08000a10 <__aeabi_cdcmpeq>:
 8000a10:	b501      	push	{r0, lr}
 8000a12:	f7ff ffb7 	bl	8000984 <__cmpdf2>
 8000a16:	2800      	cmp	r0, #0
 8000a18:	bf48      	it	mi
 8000a1a:	f110 0f00 	cmnmi.w	r0, #0
 8000a1e:	bd01      	pop	{r0, pc}

08000a20 <__aeabi_dcmpeq>:
 8000a20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a24:	f7ff fff4 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a28:	bf0c      	ite	eq
 8000a2a:	2001      	moveq	r0, #1
 8000a2c:	2000      	movne	r0, #0
 8000a2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a32:	bf00      	nop

08000a34 <__aeabi_dcmplt>:
 8000a34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a38:	f7ff ffea 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a3c:	bf34      	ite	cc
 8000a3e:	2001      	movcc	r0, #1
 8000a40:	2000      	movcs	r0, #0
 8000a42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a46:	bf00      	nop

08000a48 <__aeabi_dcmple>:
 8000a48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a4c:	f7ff ffe0 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a50:	bf94      	ite	ls
 8000a52:	2001      	movls	r0, #1
 8000a54:	2000      	movhi	r0, #0
 8000a56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a5a:	bf00      	nop

08000a5c <__aeabi_dcmpge>:
 8000a5c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a60:	f7ff ffce 	bl	8000a00 <__aeabi_cdrcmple>
 8000a64:	bf94      	ite	ls
 8000a66:	2001      	movls	r0, #1
 8000a68:	2000      	movhi	r0, #0
 8000a6a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a6e:	bf00      	nop

08000a70 <__aeabi_dcmpgt>:
 8000a70:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a74:	f7ff ffc4 	bl	8000a00 <__aeabi_cdrcmple>
 8000a78:	bf34      	ite	cc
 8000a7a:	2001      	movcc	r0, #1
 8000a7c:	2000      	movcs	r0, #0
 8000a7e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a82:	bf00      	nop

08000a84 <__aeabi_dcmpun>:
 8000a84:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a8c:	d102      	bne.n	8000a94 <__aeabi_dcmpun+0x10>
 8000a8e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a92:	d10a      	bne.n	8000aaa <__aeabi_dcmpun+0x26>
 8000a94:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a9c:	d102      	bne.n	8000aa4 <__aeabi_dcmpun+0x20>
 8000a9e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aa2:	d102      	bne.n	8000aaa <__aeabi_dcmpun+0x26>
 8000aa4:	f04f 0000 	mov.w	r0, #0
 8000aa8:	4770      	bx	lr
 8000aaa:	f04f 0001 	mov.w	r0, #1
 8000aae:	4770      	bx	lr

08000ab0 <__aeabi_d2uiz>:
 8000ab0:	004a      	lsls	r2, r1, #1
 8000ab2:	d211      	bcs.n	8000ad8 <__aeabi_d2uiz+0x28>
 8000ab4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ab8:	d211      	bcs.n	8000ade <__aeabi_d2uiz+0x2e>
 8000aba:	d50d      	bpl.n	8000ad8 <__aeabi_d2uiz+0x28>
 8000abc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ac0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ac4:	d40e      	bmi.n	8000ae4 <__aeabi_d2uiz+0x34>
 8000ac6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aca:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ace:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000ad2:	fa23 f002 	lsr.w	r0, r3, r2
 8000ad6:	4770      	bx	lr
 8000ad8:	f04f 0000 	mov.w	r0, #0
 8000adc:	4770      	bx	lr
 8000ade:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ae2:	d102      	bne.n	8000aea <__aeabi_d2uiz+0x3a>
 8000ae4:	f04f 30ff 	mov.w	r0, #4294967295
 8000ae8:	4770      	bx	lr
 8000aea:	f04f 0000 	mov.w	r0, #0
 8000aee:	4770      	bx	lr

08000af0 <__aeabi_d2f>:
 8000af0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000af4:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000af8:	bf24      	itt	cs
 8000afa:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000afe:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b02:	d90d      	bls.n	8000b20 <__aeabi_d2f+0x30>
 8000b04:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b08:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b0c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b10:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b14:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b18:	bf08      	it	eq
 8000b1a:	f020 0001 	biceq.w	r0, r0, #1
 8000b1e:	4770      	bx	lr
 8000b20:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b24:	d121      	bne.n	8000b6a <__aeabi_d2f+0x7a>
 8000b26:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b2a:	bfbc      	itt	lt
 8000b2c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b30:	4770      	bxlt	lr
 8000b32:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b36:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b3a:	f1c2 0218 	rsb	r2, r2, #24
 8000b3e:	f1c2 0c20 	rsb	ip, r2, #32
 8000b42:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b46:	fa20 f002 	lsr.w	r0, r0, r2
 8000b4a:	bf18      	it	ne
 8000b4c:	f040 0001 	orrne.w	r0, r0, #1
 8000b50:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b54:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b58:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b5c:	ea40 000c 	orr.w	r0, r0, ip
 8000b60:	fa23 f302 	lsr.w	r3, r3, r2
 8000b64:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b68:	e7cc      	b.n	8000b04 <__aeabi_d2f+0x14>
 8000b6a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b6e:	d107      	bne.n	8000b80 <__aeabi_d2f+0x90>
 8000b70:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b74:	bf1e      	ittt	ne
 8000b76:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b7a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b7e:	4770      	bxne	lr
 8000b80:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b84:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b88:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b8c:	4770      	bx	lr
 8000b8e:	bf00      	nop

08000b90 <__aeabi_uldivmod>:
 8000b90:	b953      	cbnz	r3, 8000ba8 <__aeabi_uldivmod+0x18>
 8000b92:	b94a      	cbnz	r2, 8000ba8 <__aeabi_uldivmod+0x18>
 8000b94:	2900      	cmp	r1, #0
 8000b96:	bf08      	it	eq
 8000b98:	2800      	cmpeq	r0, #0
 8000b9a:	bf1c      	itt	ne
 8000b9c:	f04f 31ff 	movne.w	r1, #4294967295
 8000ba0:	f04f 30ff 	movne.w	r0, #4294967295
 8000ba4:	f000 b974 	b.w	8000e90 <__aeabi_idiv0>
 8000ba8:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bb0:	f000 f806 	bl	8000bc0 <__udivmoddi4>
 8000bb4:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bb8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bbc:	b004      	add	sp, #16
 8000bbe:	4770      	bx	lr

08000bc0 <__udivmoddi4>:
 8000bc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bc4:	9d08      	ldr	r5, [sp, #32]
 8000bc6:	4604      	mov	r4, r0
 8000bc8:	468e      	mov	lr, r1
 8000bca:	2b00      	cmp	r3, #0
 8000bcc:	d14d      	bne.n	8000c6a <__udivmoddi4+0xaa>
 8000bce:	428a      	cmp	r2, r1
 8000bd0:	4694      	mov	ip, r2
 8000bd2:	d969      	bls.n	8000ca8 <__udivmoddi4+0xe8>
 8000bd4:	fab2 f282 	clz	r2, r2
 8000bd8:	b152      	cbz	r2, 8000bf0 <__udivmoddi4+0x30>
 8000bda:	fa01 f302 	lsl.w	r3, r1, r2
 8000bde:	f1c2 0120 	rsb	r1, r2, #32
 8000be2:	fa20 f101 	lsr.w	r1, r0, r1
 8000be6:	fa0c fc02 	lsl.w	ip, ip, r2
 8000bea:	ea41 0e03 	orr.w	lr, r1, r3
 8000bee:	4094      	lsls	r4, r2
 8000bf0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000bf4:	0c21      	lsrs	r1, r4, #16
 8000bf6:	fbbe f6f8 	udiv	r6, lr, r8
 8000bfa:	fa1f f78c 	uxth.w	r7, ip
 8000bfe:	fb08 e316 	mls	r3, r8, r6, lr
 8000c02:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000c06:	fb06 f107 	mul.w	r1, r6, r7
 8000c0a:	4299      	cmp	r1, r3
 8000c0c:	d90a      	bls.n	8000c24 <__udivmoddi4+0x64>
 8000c0e:	eb1c 0303 	adds.w	r3, ip, r3
 8000c12:	f106 30ff 	add.w	r0, r6, #4294967295
 8000c16:	f080 811f 	bcs.w	8000e58 <__udivmoddi4+0x298>
 8000c1a:	4299      	cmp	r1, r3
 8000c1c:	f240 811c 	bls.w	8000e58 <__udivmoddi4+0x298>
 8000c20:	3e02      	subs	r6, #2
 8000c22:	4463      	add	r3, ip
 8000c24:	1a5b      	subs	r3, r3, r1
 8000c26:	b2a4      	uxth	r4, r4
 8000c28:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c2c:	fb08 3310 	mls	r3, r8, r0, r3
 8000c30:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c34:	fb00 f707 	mul.w	r7, r0, r7
 8000c38:	42a7      	cmp	r7, r4
 8000c3a:	d90a      	bls.n	8000c52 <__udivmoddi4+0x92>
 8000c3c:	eb1c 0404 	adds.w	r4, ip, r4
 8000c40:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c44:	f080 810a 	bcs.w	8000e5c <__udivmoddi4+0x29c>
 8000c48:	42a7      	cmp	r7, r4
 8000c4a:	f240 8107 	bls.w	8000e5c <__udivmoddi4+0x29c>
 8000c4e:	4464      	add	r4, ip
 8000c50:	3802      	subs	r0, #2
 8000c52:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000c56:	1be4      	subs	r4, r4, r7
 8000c58:	2600      	movs	r6, #0
 8000c5a:	b11d      	cbz	r5, 8000c64 <__udivmoddi4+0xa4>
 8000c5c:	40d4      	lsrs	r4, r2
 8000c5e:	2300      	movs	r3, #0
 8000c60:	e9c5 4300 	strd	r4, r3, [r5]
 8000c64:	4631      	mov	r1, r6
 8000c66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c6a:	428b      	cmp	r3, r1
 8000c6c:	d909      	bls.n	8000c82 <__udivmoddi4+0xc2>
 8000c6e:	2d00      	cmp	r5, #0
 8000c70:	f000 80ef 	beq.w	8000e52 <__udivmoddi4+0x292>
 8000c74:	2600      	movs	r6, #0
 8000c76:	e9c5 0100 	strd	r0, r1, [r5]
 8000c7a:	4630      	mov	r0, r6
 8000c7c:	4631      	mov	r1, r6
 8000c7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c82:	fab3 f683 	clz	r6, r3
 8000c86:	2e00      	cmp	r6, #0
 8000c88:	d14a      	bne.n	8000d20 <__udivmoddi4+0x160>
 8000c8a:	428b      	cmp	r3, r1
 8000c8c:	d302      	bcc.n	8000c94 <__udivmoddi4+0xd4>
 8000c8e:	4282      	cmp	r2, r0
 8000c90:	f200 80f9 	bhi.w	8000e86 <__udivmoddi4+0x2c6>
 8000c94:	1a84      	subs	r4, r0, r2
 8000c96:	eb61 0303 	sbc.w	r3, r1, r3
 8000c9a:	2001      	movs	r0, #1
 8000c9c:	469e      	mov	lr, r3
 8000c9e:	2d00      	cmp	r5, #0
 8000ca0:	d0e0      	beq.n	8000c64 <__udivmoddi4+0xa4>
 8000ca2:	e9c5 4e00 	strd	r4, lr, [r5]
 8000ca6:	e7dd      	b.n	8000c64 <__udivmoddi4+0xa4>
 8000ca8:	b902      	cbnz	r2, 8000cac <__udivmoddi4+0xec>
 8000caa:	deff      	udf	#255	; 0xff
 8000cac:	fab2 f282 	clz	r2, r2
 8000cb0:	2a00      	cmp	r2, #0
 8000cb2:	f040 8092 	bne.w	8000dda <__udivmoddi4+0x21a>
 8000cb6:	eba1 010c 	sub.w	r1, r1, ip
 8000cba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cbe:	fa1f fe8c 	uxth.w	lr, ip
 8000cc2:	2601      	movs	r6, #1
 8000cc4:	0c20      	lsrs	r0, r4, #16
 8000cc6:	fbb1 f3f7 	udiv	r3, r1, r7
 8000cca:	fb07 1113 	mls	r1, r7, r3, r1
 8000cce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000cd2:	fb0e f003 	mul.w	r0, lr, r3
 8000cd6:	4288      	cmp	r0, r1
 8000cd8:	d908      	bls.n	8000cec <__udivmoddi4+0x12c>
 8000cda:	eb1c 0101 	adds.w	r1, ip, r1
 8000cde:	f103 38ff 	add.w	r8, r3, #4294967295
 8000ce2:	d202      	bcs.n	8000cea <__udivmoddi4+0x12a>
 8000ce4:	4288      	cmp	r0, r1
 8000ce6:	f200 80cb 	bhi.w	8000e80 <__udivmoddi4+0x2c0>
 8000cea:	4643      	mov	r3, r8
 8000cec:	1a09      	subs	r1, r1, r0
 8000cee:	b2a4      	uxth	r4, r4
 8000cf0:	fbb1 f0f7 	udiv	r0, r1, r7
 8000cf4:	fb07 1110 	mls	r1, r7, r0, r1
 8000cf8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000cfc:	fb0e fe00 	mul.w	lr, lr, r0
 8000d00:	45a6      	cmp	lr, r4
 8000d02:	d908      	bls.n	8000d16 <__udivmoddi4+0x156>
 8000d04:	eb1c 0404 	adds.w	r4, ip, r4
 8000d08:	f100 31ff 	add.w	r1, r0, #4294967295
 8000d0c:	d202      	bcs.n	8000d14 <__udivmoddi4+0x154>
 8000d0e:	45a6      	cmp	lr, r4
 8000d10:	f200 80bb 	bhi.w	8000e8a <__udivmoddi4+0x2ca>
 8000d14:	4608      	mov	r0, r1
 8000d16:	eba4 040e 	sub.w	r4, r4, lr
 8000d1a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000d1e:	e79c      	b.n	8000c5a <__udivmoddi4+0x9a>
 8000d20:	f1c6 0720 	rsb	r7, r6, #32
 8000d24:	40b3      	lsls	r3, r6
 8000d26:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d2a:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d2e:	fa20 f407 	lsr.w	r4, r0, r7
 8000d32:	fa01 f306 	lsl.w	r3, r1, r6
 8000d36:	431c      	orrs	r4, r3
 8000d38:	40f9      	lsrs	r1, r7
 8000d3a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d3e:	fa00 f306 	lsl.w	r3, r0, r6
 8000d42:	fbb1 f8f9 	udiv	r8, r1, r9
 8000d46:	0c20      	lsrs	r0, r4, #16
 8000d48:	fa1f fe8c 	uxth.w	lr, ip
 8000d4c:	fb09 1118 	mls	r1, r9, r8, r1
 8000d50:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000d54:	fb08 f00e 	mul.w	r0, r8, lr
 8000d58:	4288      	cmp	r0, r1
 8000d5a:	fa02 f206 	lsl.w	r2, r2, r6
 8000d5e:	d90b      	bls.n	8000d78 <__udivmoddi4+0x1b8>
 8000d60:	eb1c 0101 	adds.w	r1, ip, r1
 8000d64:	f108 3aff 	add.w	sl, r8, #4294967295
 8000d68:	f080 8088 	bcs.w	8000e7c <__udivmoddi4+0x2bc>
 8000d6c:	4288      	cmp	r0, r1
 8000d6e:	f240 8085 	bls.w	8000e7c <__udivmoddi4+0x2bc>
 8000d72:	f1a8 0802 	sub.w	r8, r8, #2
 8000d76:	4461      	add	r1, ip
 8000d78:	1a09      	subs	r1, r1, r0
 8000d7a:	b2a4      	uxth	r4, r4
 8000d7c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000d80:	fb09 1110 	mls	r1, r9, r0, r1
 8000d84:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000d88:	fb00 fe0e 	mul.w	lr, r0, lr
 8000d8c:	458e      	cmp	lr, r1
 8000d8e:	d908      	bls.n	8000da2 <__udivmoddi4+0x1e2>
 8000d90:	eb1c 0101 	adds.w	r1, ip, r1
 8000d94:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d98:	d26c      	bcs.n	8000e74 <__udivmoddi4+0x2b4>
 8000d9a:	458e      	cmp	lr, r1
 8000d9c:	d96a      	bls.n	8000e74 <__udivmoddi4+0x2b4>
 8000d9e:	3802      	subs	r0, #2
 8000da0:	4461      	add	r1, ip
 8000da2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000da6:	fba0 9402 	umull	r9, r4, r0, r2
 8000daa:	eba1 010e 	sub.w	r1, r1, lr
 8000dae:	42a1      	cmp	r1, r4
 8000db0:	46c8      	mov	r8, r9
 8000db2:	46a6      	mov	lr, r4
 8000db4:	d356      	bcc.n	8000e64 <__udivmoddi4+0x2a4>
 8000db6:	d053      	beq.n	8000e60 <__udivmoddi4+0x2a0>
 8000db8:	b15d      	cbz	r5, 8000dd2 <__udivmoddi4+0x212>
 8000dba:	ebb3 0208 	subs.w	r2, r3, r8
 8000dbe:	eb61 010e 	sbc.w	r1, r1, lr
 8000dc2:	fa01 f707 	lsl.w	r7, r1, r7
 8000dc6:	fa22 f306 	lsr.w	r3, r2, r6
 8000dca:	40f1      	lsrs	r1, r6
 8000dcc:	431f      	orrs	r7, r3
 8000dce:	e9c5 7100 	strd	r7, r1, [r5]
 8000dd2:	2600      	movs	r6, #0
 8000dd4:	4631      	mov	r1, r6
 8000dd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dda:	f1c2 0320 	rsb	r3, r2, #32
 8000dde:	40d8      	lsrs	r0, r3
 8000de0:	fa0c fc02 	lsl.w	ip, ip, r2
 8000de4:	fa21 f303 	lsr.w	r3, r1, r3
 8000de8:	4091      	lsls	r1, r2
 8000dea:	4301      	orrs	r1, r0
 8000dec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000df0:	fa1f fe8c 	uxth.w	lr, ip
 8000df4:	fbb3 f0f7 	udiv	r0, r3, r7
 8000df8:	fb07 3610 	mls	r6, r7, r0, r3
 8000dfc:	0c0b      	lsrs	r3, r1, #16
 8000dfe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000e02:	fb00 f60e 	mul.w	r6, r0, lr
 8000e06:	429e      	cmp	r6, r3
 8000e08:	fa04 f402 	lsl.w	r4, r4, r2
 8000e0c:	d908      	bls.n	8000e20 <__udivmoddi4+0x260>
 8000e0e:	eb1c 0303 	adds.w	r3, ip, r3
 8000e12:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e16:	d22f      	bcs.n	8000e78 <__udivmoddi4+0x2b8>
 8000e18:	429e      	cmp	r6, r3
 8000e1a:	d92d      	bls.n	8000e78 <__udivmoddi4+0x2b8>
 8000e1c:	3802      	subs	r0, #2
 8000e1e:	4463      	add	r3, ip
 8000e20:	1b9b      	subs	r3, r3, r6
 8000e22:	b289      	uxth	r1, r1
 8000e24:	fbb3 f6f7 	udiv	r6, r3, r7
 8000e28:	fb07 3316 	mls	r3, r7, r6, r3
 8000e2c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e30:	fb06 f30e 	mul.w	r3, r6, lr
 8000e34:	428b      	cmp	r3, r1
 8000e36:	d908      	bls.n	8000e4a <__udivmoddi4+0x28a>
 8000e38:	eb1c 0101 	adds.w	r1, ip, r1
 8000e3c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000e40:	d216      	bcs.n	8000e70 <__udivmoddi4+0x2b0>
 8000e42:	428b      	cmp	r3, r1
 8000e44:	d914      	bls.n	8000e70 <__udivmoddi4+0x2b0>
 8000e46:	3e02      	subs	r6, #2
 8000e48:	4461      	add	r1, ip
 8000e4a:	1ac9      	subs	r1, r1, r3
 8000e4c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000e50:	e738      	b.n	8000cc4 <__udivmoddi4+0x104>
 8000e52:	462e      	mov	r6, r5
 8000e54:	4628      	mov	r0, r5
 8000e56:	e705      	b.n	8000c64 <__udivmoddi4+0xa4>
 8000e58:	4606      	mov	r6, r0
 8000e5a:	e6e3      	b.n	8000c24 <__udivmoddi4+0x64>
 8000e5c:	4618      	mov	r0, r3
 8000e5e:	e6f8      	b.n	8000c52 <__udivmoddi4+0x92>
 8000e60:	454b      	cmp	r3, r9
 8000e62:	d2a9      	bcs.n	8000db8 <__udivmoddi4+0x1f8>
 8000e64:	ebb9 0802 	subs.w	r8, r9, r2
 8000e68:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000e6c:	3801      	subs	r0, #1
 8000e6e:	e7a3      	b.n	8000db8 <__udivmoddi4+0x1f8>
 8000e70:	4646      	mov	r6, r8
 8000e72:	e7ea      	b.n	8000e4a <__udivmoddi4+0x28a>
 8000e74:	4620      	mov	r0, r4
 8000e76:	e794      	b.n	8000da2 <__udivmoddi4+0x1e2>
 8000e78:	4640      	mov	r0, r8
 8000e7a:	e7d1      	b.n	8000e20 <__udivmoddi4+0x260>
 8000e7c:	46d0      	mov	r8, sl
 8000e7e:	e77b      	b.n	8000d78 <__udivmoddi4+0x1b8>
 8000e80:	3b02      	subs	r3, #2
 8000e82:	4461      	add	r1, ip
 8000e84:	e732      	b.n	8000cec <__udivmoddi4+0x12c>
 8000e86:	4630      	mov	r0, r6
 8000e88:	e709      	b.n	8000c9e <__udivmoddi4+0xde>
 8000e8a:	4464      	add	r4, ip
 8000e8c:	3802      	subs	r0, #2
 8000e8e:	e742      	b.n	8000d16 <__udivmoddi4+0x156>

08000e90 <__aeabi_idiv0>:
 8000e90:	4770      	bx	lr
 8000e92:	bf00      	nop
 8000e94:	0000      	movs	r0, r0
	...

08000e98 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000e98:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8000e9c:	b082      	sub	sp, #8
 8000e9e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
   HAL_Init();
 8000ea0:	f003 fd72 	bl	8004988 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ea4:	f000 fb5e 	bl	8001564 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000ea8:	f000 fd30 	bl	800190c <MX_GPIO_Init>
  MX_DMA_Init();
 8000eac:	f000 fcf6 	bl	800189c <MX_DMA_Init>
  MX_USART2_UART_Init();
 8000eb0:	f000 fcc8 	bl	8001844 <MX_USART2_UART_Init>
  MX_TIM11_Init();
 8000eb4:	f000 fca2 	bl	80017fc <MX_TIM11_Init>
  MX_SPI3_Init();
 8000eb8:	f000 fbea 	bl	8001690 <MX_SPI3_Init>
  MX_TIM2_Init();
 8000ebc:	f000 fc1e 	bl	80016fc <MX_TIM2_Init>
  MX_I2C1_Init();
 8000ec0:	f000 fbb8 	bl	8001634 <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */

  HAL_TIM_Base_Start_IT(&htim11);
 8000ec4:	4892      	ldr	r0, [pc, #584]	; (8001110 <main+0x278>)
 8000ec6:	f008 fb83 	bl	80095d0 <HAL_TIM_Base_Start_IT>
  HAL_UART_Receive_DMA(&huart2, Receive, nbyte);
 8000eca:	4b92      	ldr	r3, [pc, #584]	; (8001114 <main+0x27c>)
 8000ecc:	781b      	ldrb	r3, [r3, #0]
 8000ece:	b29b      	uxth	r3, r3
 8000ed0:	461a      	mov	r2, r3
 8000ed2:	4991      	ldr	r1, [pc, #580]	; (8001118 <main+0x280>)
 8000ed4:	4891      	ldr	r0, [pc, #580]	; (800111c <main+0x284>)
 8000ed6:	f009 fbbb 	bl	800a650 <HAL_UART_Receive_DMA>
  NFgetstate();
 8000eda:	f002 f933 	bl	8003144 <NFgetstate>
  NFstate = 0x78;
 8000ede:	4b90      	ldr	r3, [pc, #576]	; (8001120 <main+0x288>)
 8000ee0:	2278      	movs	r2, #120	; 0x78
 8000ee2:	701a      	strb	r2, [r3, #0]
  //PWM Generator set
  HAL_TIM_Base_Start(&htim2);
 8000ee4:	488f      	ldr	r0, [pc, #572]	; (8001124 <main+0x28c>)
 8000ee6:	f008 fb19 	bl	800951c <HAL_TIM_Base_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8000eea:	2100      	movs	r1, #0
 8000eec:	488d      	ldr	r0, [pc, #564]	; (8001124 <main+0x28c>)
 8000eee:	f008 fc2b 	bl	8009748 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8000ef2:	2104      	movs	r1, #4
 8000ef4:	488b      	ldr	r0, [pc, #556]	; (8001124 <main+0x28c>)
 8000ef6:	f008 fc27 	bl	8009748 <HAL_TIM_PWM_Start>

  //Encoder set
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 8000efa:	2201      	movs	r2, #1
 8000efc:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000f00:	4889      	ldr	r0, [pc, #548]	; (8001128 <main+0x290>)
 8000f02:	f004 fc71 	bl	80057e8 <HAL_GPIO_WritePin>

  movingFlag = 14;
 8000f06:	4b89      	ldr	r3, [pc, #548]	; (800112c <main+0x294>)
 8000f08:	220e      	movs	r2, #14
 8000f0a:	701a      	strb	r2, [r3, #0]
  {
	  static uint64_t timeset = 0;
	  static uint64_t timeset3 = 0;
	  static uint64_t timeStamp = 0;
	  static GPIO_PinState B1State2[2] = {0};
	  B1State2[0]= HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8);
 8000f0c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000f10:	4887      	ldr	r0, [pc, #540]	; (8001130 <main+0x298>)
 8000f12:	f004 fc51 	bl	80057b8 <HAL_GPIO_ReadPin>
 8000f16:	4603      	mov	r3, r0
 8000f18:	461a      	mov	r2, r3
 8000f1a:	4b86      	ldr	r3, [pc, #536]	; (8001134 <main+0x29c>)
 8000f1c:	701a      	strb	r2, [r3, #0]

	  if(AMTcomplete || micros()-timeStamp>dt*1000){
 8000f1e:	4b86      	ldr	r3, [pc, #536]	; (8001138 <main+0x2a0>)
 8000f20:	781b      	ldrb	r3, [r3, #0]
 8000f22:	2b00      	cmp	r3, #0
 8000f24:	d114      	bne.n	8000f50 <main+0xb8>
 8000f26:	f002 fbed 	bl	8003704 <micros>
 8000f2a:	4b84      	ldr	r3, [pc, #528]	; (800113c <main+0x2a4>)
 8000f2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f30:	ebb0 0802 	subs.w	r8, r0, r2
 8000f34:	eb61 0903 	sbc.w	r9, r1, r3
 8000f38:	4640      	mov	r0, r8
 8000f3a:	4649      	mov	r1, r9
 8000f3c:	f7ff fad2 	bl	80004e4 <__aeabi_ul2d>
 8000f40:	f04f 0200 	mov.w	r2, #0
 8000f44:	4b7e      	ldr	r3, [pc, #504]	; (8001140 <main+0x2a8>)
 8000f46:	f7ff fd93 	bl	8000a70 <__aeabi_dcmpgt>
 8000f4a:	4603      	mov	r3, r0
 8000f4c:	2b00      	cmp	r3, #0
 8000f4e:	d002      	beq.n	8000f56 <main+0xbe>
	  		 AMT222getpos(&rawPos);
 8000f50:	487c      	ldr	r0, [pc, #496]	; (8001144 <main+0x2ac>)
 8000f52:	f002 f931 	bl	80031b8 <AMT222getpos>
	  	  }

	  switch(State){
 8000f56:	4b7c      	ldr	r3, [pc, #496]	; (8001148 <main+0x2b0>)
 8000f58:	781b      	ldrb	r3, [r3, #0]
 8000f5a:	2b03      	cmp	r3, #3
 8000f5c:	f000 8229 	beq.w	80013b2 <main+0x51a>
 8000f60:	2b03      	cmp	r3, #3
 8000f62:	dc04      	bgt.n	8000f6e <main+0xd6>
 8000f64:	2b01      	cmp	r3, #1
 8000f66:	d05a      	beq.n	800101e <main+0x186>
 8000f68:	2b02      	cmp	r3, #2
 8000f6a:	f000 8248 	beq.w	80013fe <main+0x566>
	  default:
		  case Idle:
			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_RESET);
 8000f6e:	2200      	movs	r2, #0
 8000f70:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000f74:	486e      	ldr	r0, [pc, #440]	; (8001130 <main+0x298>)
 8000f76:	f004 fc37 	bl	80057e8 <HAL_GPIO_WritePin>
			  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_SET);
 8000f7a:	2201      	movs	r2, #1
 8000f7c:	2180      	movs	r1, #128	; 0x80
 8000f7e:	4873      	ldr	r0, [pc, #460]	; (800114c <main+0x2b4>)
 8000f80:	f004 fc32 	bl	80057e8 <HAL_GPIO_WritePin>
			  stop = 0;
 8000f84:	4b72      	ldr	r3, [pc, #456]	; (8001150 <main+0x2b8>)
 8000f86:	2200      	movs	r2, #0
 8000f88:	701a      	strb	r2, [r3, #0]
			  if (micros() - timeset3 > dt*1000000){ //Read Value while Idle
 8000f8a:	f002 fbbb 	bl	8003704 <micros>
 8000f8e:	4b71      	ldr	r3, [pc, #452]	; (8001154 <main+0x2bc>)
 8000f90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f94:	ebb0 0a02 	subs.w	sl, r0, r2
 8000f98:	eb61 0b03 	sbc.w	fp, r1, r3
 8000f9c:	4650      	mov	r0, sl
 8000f9e:	4659      	mov	r1, fp
 8000fa0:	f7ff faa0 	bl	80004e4 <__aeabi_ul2d>
 8000fa4:	a354      	add	r3, pc, #336	; (adr r3, 80010f8 <main+0x260>)
 8000fa6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000faa:	f7ff fd61 	bl	8000a70 <__aeabi_dcmpgt>
 8000fae:	4603      	mov	r3, r0
 8000fb0:	2b00      	cmp	r3, #0
 8000fb2:	d00c      	beq.n	8000fce <main+0x136>
				  lowpass();
 8000fb4:	f001 f9d0 	bl	8002358 <lowpass>
				  Diff_velo();
 8000fb8:	f001 fa6e 	bl	8002498 <Diff_velo>
				  Kalman_filter();
 8000fbc:	f001 faa0 	bl	8002500 <Kalman_filter>
				  timeset3 = micros();
 8000fc0:	f002 fba0 	bl	8003704 <micros>
 8000fc4:	4602      	mov	r2, r0
 8000fc6:	460b      	mov	r3, r1
 8000fc8:	4962      	ldr	r1, [pc, #392]	; (8001154 <main+0x2bc>)
 8000fca:	e9c1 2300 	strd	r2, r3, [r1]
			  }

			  if(setinitial == 1){ // Condition for first start
 8000fce:	4b62      	ldr	r3, [pc, #392]	; (8001158 <main+0x2c0>)
 8000fd0:	781b      	ldrb	r3, [r3, #0]
 8000fd2:	2b01      	cmp	r3, #1
 8000fd4:	d101      	bne.n	8000fda <main+0x142>
				  set_initial();
 8000fd6:	f001 f843 	bl	8002060 <set_initial>
			  }

			  if(setzero == 1){ // Condition for Set home
 8000fda:	4b60      	ldr	r3, [pc, #384]	; (800115c <main+0x2c4>)
 8000fdc:	781b      	ldrb	r3, [r3, #0]
 8000fde:	2b01      	cmp	r3, #1
 8000fe0:	d101      	bne.n	8000fe6 <main+0x14e>
				  set_home();
 8000fe2:	f001 f8a5 	bl	8002130 <set_home>
			  }

			  if(update == 1){ //UART Update
 8000fe6:	4b5e      	ldr	r3, [pc, #376]	; (8001160 <main+0x2c8>)
 8000fe8:	781b      	ldrb	r3, [r3, #0]
 8000fea:	2b01      	cmp	r3, #1
 8000fec:	d101      	bne.n	8000ff2 <main+0x15a>
				  MoveToStation();
 8000fee:	f001 f8cb 	bl	8002188 <MoveToStation>
			  }

			  if(blue == 1){ // Blue Button Switch
 8000ff2:	4b5c      	ldr	r3, [pc, #368]	; (8001164 <main+0x2cc>)
 8000ff4:	781b      	ldrb	r3, [r3, #0]
 8000ff6:	2b01      	cmp	r3, #1
 8000ff8:	f040 8293 	bne.w	8001522 <main+0x68a>
				  postotra = 3.14;
 8000ffc:	4b5a      	ldr	r3, [pc, #360]	; (8001168 <main+0x2d0>)
 8000ffe:	4a5b      	ldr	r2, [pc, #364]	; (800116c <main+0x2d4>)
 8001000:	601a      	str	r2, [r3, #0]
				  limitOmega = 5;
 8001002:	4b5b      	ldr	r3, [pc, #364]	; (8001170 <main+0x2d8>)
 8001004:	4a5b      	ldr	r2, [pc, #364]	; (8001174 <main+0x2dc>)
 8001006:	601a      	str	r2, [r3, #0]
				  direct = 1;
 8001008:	4b5b      	ldr	r3, [pc, #364]	; (8001178 <main+0x2e0>)
 800100a:	2201      	movs	r2, #1
 800100c:	701a      	strb	r2, [r3, #0]
				  rad_before = current_rad;
 800100e:	4b5b      	ldr	r3, [pc, #364]	; (800117c <main+0x2e4>)
 8001010:	681b      	ldr	r3, [r3, #0]
 8001012:	4a5b      	ldr	r2, [pc, #364]	; (8001180 <main+0x2e8>)
 8001014:	6013      	str	r3, [r2, #0]
				  State = Working;
 8001016:	4b4c      	ldr	r3, [pc, #304]	; (8001148 <main+0x2b0>)
 8001018:	2201      	movs	r2, #1
 800101a:	701a      	strb	r2, [r3, #0]
			  }
			  break;
 800101c:	e281      	b.n	8001522 <main+0x68a>

		  case Working:
			blue = 0;
 800101e:	4b51      	ldr	r3, [pc, #324]	; (8001164 <main+0x2cc>)
 8001020:	2200      	movs	r2, #0
 8001022:	701a      	strb	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_SET);
 8001024:	2201      	movs	r2, #1
 8001026:	f44f 7100 	mov.w	r1, #512	; 0x200
 800102a:	4841      	ldr	r0, [pc, #260]	; (8001130 <main+0x298>)
 800102c:	f004 fbdc 	bl	80057e8 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 8001030:	2200      	movs	r2, #0
 8001032:	2180      	movs	r1, #128	; 0x80
 8001034:	4845      	ldr	r0, [pc, #276]	; (800114c <main+0x2b4>)
 8001036:	f004 fbd7 	bl	80057e8 <HAL_GPIO_WritePin>
			if (micros() - timeset > dt*1000000) { //1000 Hz
 800103a:	f002 fb63 	bl	8003704 <micros>
 800103e:	4b51      	ldr	r3, [pc, #324]	; (8001184 <main+0x2ec>)
 8001040:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001044:	1a84      	subs	r4, r0, r2
 8001046:	603c      	str	r4, [r7, #0]
 8001048:	eb61 0303 	sbc.w	r3, r1, r3
 800104c:	607b      	str	r3, [r7, #4]
 800104e:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001052:	f7ff fa47 	bl	80004e4 <__aeabi_ul2d>
 8001056:	a328      	add	r3, pc, #160	; (adr r3, 80010f8 <main+0x260>)
 8001058:	e9d3 2300 	ldrd	r2, r3, [r3]
 800105c:	f7ff fd08 	bl	8000a70 <__aeabi_dcmpgt>
 8001060:	4603      	mov	r3, r0
 8001062:	2b00      	cmp	r3, #0
 8001064:	f000 80c4 	beq.w	80011f0 <main+0x358>
				lowpass();
 8001068:	f001 f976 	bl	8002358 <lowpass>
				Diff_velo();
 800106c:	f001 fa14 	bl	8002498 <Diff_velo>
				Kalman_filter();
 8001070:	f001 fa46 	bl	8002500 <Kalman_filter>
				if(postotra > 0.2){
 8001074:	4b3c      	ldr	r3, [pc, #240]	; (8001168 <main+0x2d0>)
 8001076:	681b      	ldr	r3, [r3, #0]
 8001078:	4618      	mov	r0, r3
 800107a:	f7ff fa11 	bl	80004a0 <__aeabi_f2d>
 800107e:	a320      	add	r3, pc, #128	; (adr r3, 8001100 <main+0x268>)
 8001080:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001084:	f7ff fcf4 	bl	8000a70 <__aeabi_dcmpgt>
 8001088:	4603      	mov	r3, r0
 800108a:	2b00      	cmp	r3, #0
 800108c:	d010      	beq.n	80010b0 <main+0x218>
					Trajectory(postotra,limitOmega);
 800108e:	4b36      	ldr	r3, [pc, #216]	; (8001168 <main+0x2d0>)
 8001090:	edd3 7a00 	vldr	s15, [r3]
 8001094:	4b36      	ldr	r3, [pc, #216]	; (8001170 <main+0x2d8>)
 8001096:	ed93 7a00 	vldr	s14, [r3]
 800109a:	eef0 0a47 	vmov.f32	s1, s14
 800109e:	eeb0 0a67 	vmov.f32	s0, s15
 80010a2:	f001 fd05 	bl	8002ab0 <Trajectory>
					inverse_tran();
 80010a6:	f001 f8d3 	bl	8002250 <inverse_tran>
					CascadeController();
 80010aa:	f000 fce9 	bl	8001a80 <CascadeController>
 80010ae:	e07c      	b.n	80011aa <main+0x312>
						error = tra_velo - velo_diff;
						prevError = error;
					}*/
				}
				else{
					if(tuaall < 0.1){ //short distant 5,10 degree
 80010b0:	4b35      	ldr	r3, [pc, #212]	; (8001188 <main+0x2f0>)
 80010b2:	681b      	ldr	r3, [r3, #0]
 80010b4:	4618      	mov	r0, r3
 80010b6:	f7ff f9f3 	bl	80004a0 <__aeabi_f2d>
 80010ba:	a313      	add	r3, pc, #76	; (adr r3, 8001108 <main+0x270>)
 80010bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010c0:	f7ff fcb8 	bl	8000a34 <__aeabi_dcmplt>
 80010c4:	4603      	mov	r3, r0
 80010c6:	2b00      	cmp	r3, #0
 80010c8:	d00b      	beq.n	80010e2 <main+0x24a>
						if(direct == 1){
 80010ca:	4b2b      	ldr	r3, [pc, #172]	; (8001178 <main+0x2e0>)
 80010cc:	781b      	ldrb	r3, [r3, #0]
 80010ce:	2b01      	cmp	r3, #1
 80010d0:	d103      	bne.n	80010da <main+0x242>
							PIDout = 2100;}
 80010d2:	4b2e      	ldr	r3, [pc, #184]	; (800118c <main+0x2f4>)
 80010d4:	4a2e      	ldr	r2, [pc, #184]	; (8001190 <main+0x2f8>)
 80010d6:	601a      	str	r2, [r3, #0]
 80010d8:	e063      	b.n	80011a2 <main+0x30a>
						else{
							PIDout = -2100;}
 80010da:	4b2c      	ldr	r3, [pc, #176]	; (800118c <main+0x2f4>)
 80010dc:	4a2d      	ldr	r2, [pc, #180]	; (8001194 <main+0x2fc>)
 80010de:	601a      	str	r2, [r3, #0]
 80010e0:	e05f      	b.n	80011a2 <main+0x30a>
					}
					else{
						if(direct == 1){
 80010e2:	4b25      	ldr	r3, [pc, #148]	; (8001178 <main+0x2e0>)
 80010e4:	781b      	ldrb	r3, [r3, #0]
 80010e6:	2b01      	cmp	r3, #1
 80010e8:	d158      	bne.n	800119c <main+0x304>
							PIDout = 1300;}
 80010ea:	4b28      	ldr	r3, [pc, #160]	; (800118c <main+0x2f4>)
 80010ec:	4a2a      	ldr	r2, [pc, #168]	; (8001198 <main+0x300>)
 80010ee:	601a      	str	r2, [r3, #0]
 80010f0:	e057      	b.n	80011a2 <main+0x30a>
 80010f2:	bf00      	nop
 80010f4:	f3af 8000 	nop.w
 80010f8:	00000000 	.word	0x00000000
 80010fc:	40c38800 	.word	0x40c38800
 8001100:	9999999a 	.word	0x9999999a
 8001104:	3fc99999 	.word	0x3fc99999
 8001108:	9999999a 	.word	0x9999999a
 800110c:	3fb99999 	.word	0x3fb99999
 8001110:	20000378 	.word	0x20000378
 8001114:	2000001e 	.word	0x2000001e
 8001118:	20000554 	.word	0x20000554
 800111c:	200003c0 	.word	0x200003c0
 8001120:	2000056e 	.word	0x2000056e
 8001124:	20000330 	.word	0x20000330
 8001128:	40020400 	.word	0x40020400
 800112c:	2000053c 	.word	0x2000053c
 8001130:	40020000 	.word	0x40020000
 8001134:	200007e0 	.word	0x200007e0
 8001138:	20000023 	.word	0x20000023
 800113c:	200007e8 	.word	0x200007e8
 8001140:	40240000 	.word	0x40240000
 8001144:	2000057a 	.word	0x2000057a
 8001148:	200005e7 	.word	0x200005e7
 800114c:	40020800 	.word	0x40020800
 8001150:	200005a8 	.word	0x200005a8
 8001154:	200007f0 	.word	0x200007f0
 8001158:	2000000c 	.word	0x2000000c
 800115c:	2000059c 	.word	0x2000059c
 8001160:	200005e4 	.word	0x200005e4
 8001164:	200005e5 	.word	0x200005e5
 8001168:	200005dc 	.word	0x200005dc
 800116c:	4048f5c3 	.word	0x4048f5c3
 8001170:	20000014 	.word	0x20000014
 8001174:	40a00000 	.word	0x40a00000
 8001178:	2000002c 	.word	0x2000002c
 800117c:	2000057c 	.word	0x2000057c
 8001180:	200005e0 	.word	0x200005e0
 8001184:	200007f8 	.word	0x200007f8
 8001188:	200005d4 	.word	0x200005d4
 800118c:	20000614 	.word	0x20000614
 8001190:	45034000 	.word	0x45034000
 8001194:	c5034000 	.word	0xc5034000
 8001198:	44a28000 	.word	0x44a28000
						else{
							PIDout = -1300;}
 800119c:	4ba8      	ldr	r3, [pc, #672]	; (8001440 <main+0x5a8>)
 800119e:	4aa9      	ldr	r2, [pc, #676]	; (8001444 <main+0x5ac>)
 80011a0:	601a      	str	r2, [r3, #0]
					}
					tf = 0;
 80011a2:	4ba9      	ldr	r3, [pc, #676]	; (8001448 <main+0x5b0>)
 80011a4:	f04f 0200 	mov.w	r2, #0
 80011a8:	601a      	str	r2, [r3, #0]
				}
				Drivemotor(PIDout);
 80011aa:	4ba5      	ldr	r3, [pc, #660]	; (8001440 <main+0x5a8>)
 80011ac:	edd3 7a00 	vldr	s15, [r3]
 80011b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80011b4:	ee17 0a90 	vmov	r0, s15
 80011b8:	f001 ff4e 	bl	8003058 <Drivemotor>
				tuaall += dt;
 80011bc:	4ba3      	ldr	r3, [pc, #652]	; (800144c <main+0x5b4>)
 80011be:	681b      	ldr	r3, [r3, #0]
 80011c0:	4618      	mov	r0, r3
 80011c2:	f7ff f96d 	bl	80004a0 <__aeabi_f2d>
 80011c6:	a398      	add	r3, pc, #608	; (adr r3, 8001428 <main+0x590>)
 80011c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011cc:	f7ff f80a 	bl	80001e4 <__adddf3>
 80011d0:	4602      	mov	r2, r0
 80011d2:	460b      	mov	r3, r1
 80011d4:	4610      	mov	r0, r2
 80011d6:	4619      	mov	r1, r3
 80011d8:	f7ff fc8a 	bl	8000af0 <__aeabi_d2f>
 80011dc:	4603      	mov	r3, r0
 80011de:	4a9b      	ldr	r2, [pc, #620]	; (800144c <main+0x5b4>)
 80011e0:	6013      	str	r3, [r2, #0]
				timeset = micros();
 80011e2:	f002 fa8f 	bl	8003704 <micros>
 80011e6:	4602      	mov	r2, r0
 80011e8:	460b      	mov	r3, r1
 80011ea:	4999      	ldr	r1, [pc, #612]	; (8001450 <main+0x5b8>)
 80011ec:	e9c1 2300 	strd	r2, r3, [r1]
			}

			if(tuaall > tf && setzero == 0){ //End of working should do this condition
 80011f0:	4b96      	ldr	r3, [pc, #600]	; (800144c <main+0x5b4>)
 80011f2:	ed93 7a00 	vldr	s14, [r3]
 80011f6:	4b94      	ldr	r3, [pc, #592]	; (8001448 <main+0x5b0>)
 80011f8:	edd3 7a00 	vldr	s15, [r3]
 80011fc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001200:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001204:	f340 8086 	ble.w	8001314 <main+0x47c>
 8001208:	4b92      	ldr	r3, [pc, #584]	; (8001454 <main+0x5bc>)
 800120a:	781b      	ldrb	r3, [r3, #0]
 800120c:	2b00      	cmp	r3, #0
 800120e:	f040 8081 	bne.w	8001314 <main+0x47c>
				if(direct == 1){
 8001212:	4b91      	ldr	r3, [pc, #580]	; (8001458 <main+0x5c0>)
 8001214:	781b      	ldrb	r3, [r3, #0]
 8001216:	2b01      	cmp	r3, #1
 8001218:	d122      	bne.n	8001260 <main+0x3c8>
					if(deg > Destination[n]-0.1){
 800121a:	4b90      	ldr	r3, [pc, #576]	; (800145c <main+0x5c4>)
 800121c:	681b      	ldr	r3, [r3, #0]
 800121e:	4618      	mov	r0, r3
 8001220:	f7ff f93e 	bl	80004a0 <__aeabi_f2d>
 8001224:	4604      	mov	r4, r0
 8001226:	460d      	mov	r5, r1
 8001228:	4b8d      	ldr	r3, [pc, #564]	; (8001460 <main+0x5c8>)
 800122a:	781b      	ldrb	r3, [r3, #0]
 800122c:	461a      	mov	r2, r3
 800122e:	4b8d      	ldr	r3, [pc, #564]	; (8001464 <main+0x5cc>)
 8001230:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8001234:	4618      	mov	r0, r3
 8001236:	f7ff f921 	bl	800047c <__aeabi_i2d>
 800123a:	a37d      	add	r3, pc, #500	; (adr r3, 8001430 <main+0x598>)
 800123c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001240:	f7fe ffce 	bl	80001e0 <__aeabi_dsub>
 8001244:	4602      	mov	r2, r0
 8001246:	460b      	mov	r3, r1
 8001248:	4620      	mov	r0, r4
 800124a:	4629      	mov	r1, r5
 800124c:	f7ff fc10 	bl	8000a70 <__aeabi_dcmpgt>
 8001250:	4603      	mov	r3, r0
 8001252:	2b00      	cmp	r3, #0
 8001254:	d026      	beq.n	80012a4 <main+0x40c>
						finish = 1;
 8001256:	4b84      	ldr	r3, [pc, #528]	; (8001468 <main+0x5d0>)
 8001258:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800125c:	601a      	str	r2, [r3, #0]
 800125e:	e021      	b.n	80012a4 <main+0x40c>
					}
				}
				else
				{
					if(deg < Destination[n]+0.7){
 8001260:	4b7e      	ldr	r3, [pc, #504]	; (800145c <main+0x5c4>)
 8001262:	681b      	ldr	r3, [r3, #0]
 8001264:	4618      	mov	r0, r3
 8001266:	f7ff f91b 	bl	80004a0 <__aeabi_f2d>
 800126a:	4604      	mov	r4, r0
 800126c:	460d      	mov	r5, r1
 800126e:	4b7c      	ldr	r3, [pc, #496]	; (8001460 <main+0x5c8>)
 8001270:	781b      	ldrb	r3, [r3, #0]
 8001272:	461a      	mov	r2, r3
 8001274:	4b7b      	ldr	r3, [pc, #492]	; (8001464 <main+0x5cc>)
 8001276:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800127a:	4618      	mov	r0, r3
 800127c:	f7ff f8fe 	bl	800047c <__aeabi_i2d>
 8001280:	a36d      	add	r3, pc, #436	; (adr r3, 8001438 <main+0x5a0>)
 8001282:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001286:	f7fe ffad 	bl	80001e4 <__adddf3>
 800128a:	4602      	mov	r2, r0
 800128c:	460b      	mov	r3, r1
 800128e:	4620      	mov	r0, r4
 8001290:	4629      	mov	r1, r5
 8001292:	f7ff fbcf 	bl	8000a34 <__aeabi_dcmplt>
 8001296:	4603      	mov	r3, r0
 8001298:	2b00      	cmp	r3, #0
 800129a:	d003      	beq.n	80012a4 <main+0x40c>
						finish = 1;
 800129c:	4b72      	ldr	r3, [pc, #456]	; (8001468 <main+0x5d0>)
 800129e:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 80012a2:	601a      	str	r2, [r3, #0]
					}
				}
				if(finish == 1){
 80012a4:	4b70      	ldr	r3, [pc, #448]	; (8001468 <main+0x5d0>)
 80012a6:	edd3 7a00 	vldr	s15, [r3]
 80012aa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80012ae:	eef4 7a47 	vcmp.f32	s15, s14
 80012b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012b6:	d12d      	bne.n	8001314 <main+0x47c>
					n++;
 80012b8:	4b69      	ldr	r3, [pc, #420]	; (8001460 <main+0x5c8>)
 80012ba:	781b      	ldrb	r3, [r3, #0]
 80012bc:	3301      	adds	r3, #1
 80012be:	b2da      	uxtb	r2, r3
 80012c0:	4b67      	ldr	r3, [pc, #412]	; (8001460 <main+0x5c8>)
 80012c2:	701a      	strb	r2, [r3, #0]
					if(n < nDestination){
 80012c4:	4b66      	ldr	r3, [pc, #408]	; (8001460 <main+0x5c8>)
 80012c6:	781a      	ldrb	r2, [r3, #0]
 80012c8:	4b68      	ldr	r3, [pc, #416]	; (800146c <main+0x5d4>)
 80012ca:	781b      	ldrb	r3, [r3, #0]
 80012cc:	429a      	cmp	r2, r3
 80012ce:	d203      	bcs.n	80012d8 <main+0x440>
						update = 1;}
 80012d0:	4b67      	ldr	r3, [pc, #412]	; (8001470 <main+0x5d8>)
 80012d2:	2201      	movs	r2, #1
 80012d4:	701a      	strb	r2, [r3, #0]
 80012d6:	e017      	b.n	8001308 <main+0x470>
					else{
						update = 0;
 80012d8:	4b65      	ldr	r3, [pc, #404]	; (8001470 <main+0x5d8>)
 80012da:	2200      	movs	r2, #0
 80012dc:	701a      	strb	r2, [r3, #0]
						if(n == nStation || n == nDestination){
 80012de:	4b60      	ldr	r3, [pc, #384]	; (8001460 <main+0x5c8>)
 80012e0:	781a      	ldrb	r2, [r3, #0]
 80012e2:	4b64      	ldr	r3, [pc, #400]	; (8001474 <main+0x5dc>)
 80012e4:	781b      	ldrb	r3, [r3, #0]
 80012e6:	429a      	cmp	r2, r3
 80012e8:	d005      	beq.n	80012f6 <main+0x45e>
 80012ea:	4b5d      	ldr	r3, [pc, #372]	; (8001460 <main+0x5c8>)
 80012ec:	781a      	ldrb	r2, [r3, #0]
 80012ee:	4b5f      	ldr	r3, [pc, #380]	; (800146c <main+0x5d4>)
 80012f0:	781b      	ldrb	r3, [r3, #0]
 80012f2:	429a      	cmp	r2, r3
 80012f4:	d102      	bne.n	80012fc <main+0x464>
							Reached = 1;
 80012f6:	4b60      	ldr	r3, [pc, #384]	; (8001478 <main+0x5e0>)
 80012f8:	2201      	movs	r2, #1
 80012fa:	701a      	strb	r2, [r3, #0]
						}
						nDestination = 0;
 80012fc:	4b5b      	ldr	r3, [pc, #364]	; (800146c <main+0x5d4>)
 80012fe:	2200      	movs	r2, #0
 8001300:	701a      	strb	r2, [r3, #0]
						n = 0;
 8001302:	4b57      	ldr	r3, [pc, #348]	; (8001460 <main+0x5c8>)
 8001304:	2200      	movs	r2, #0
 8001306:	701a      	strb	r2, [r3, #0]
					}
					State = Laser;
 8001308:	4b5c      	ldr	r3, [pc, #368]	; (800147c <main+0x5e4>)
 800130a:	2202      	movs	r2, #2
 800130c:	701a      	strb	r2, [r3, #0]
					NFwriteFlag = 1;
 800130e:	4b5c      	ldr	r3, [pc, #368]	; (8001480 <main+0x5e8>)
 8001310:	2201      	movs	r2, #1
 8001312:	701a      	strb	r2, [r3, #0]
				}
			}

			if(tuaall > 15 && tuaall > tf){ //Condition when moving error
 8001314:	4b4d      	ldr	r3, [pc, #308]	; (800144c <main+0x5b4>)
 8001316:	edd3 7a00 	vldr	s15, [r3]
 800131a:	eeb2 7a0e 	vmov.f32	s14, #46	; 0x41700000  15.0
 800131e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001322:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001326:	dd38      	ble.n	800139a <main+0x502>
 8001328:	4b48      	ldr	r3, [pc, #288]	; (800144c <main+0x5b4>)
 800132a:	ed93 7a00 	vldr	s14, [r3]
 800132e:	4b46      	ldr	r3, [pc, #280]	; (8001448 <main+0x5b0>)
 8001330:	edd3 7a00 	vldr	s15, [r3]
 8001334:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001338:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800133c:	dd2d      	ble.n	800139a <main+0x502>
				n++;
 800133e:	4b48      	ldr	r3, [pc, #288]	; (8001460 <main+0x5c8>)
 8001340:	781b      	ldrb	r3, [r3, #0]
 8001342:	3301      	adds	r3, #1
 8001344:	b2da      	uxtb	r2, r3
 8001346:	4b46      	ldr	r3, [pc, #280]	; (8001460 <main+0x5c8>)
 8001348:	701a      	strb	r2, [r3, #0]
				if(n < nDestination){
 800134a:	4b45      	ldr	r3, [pc, #276]	; (8001460 <main+0x5c8>)
 800134c:	781a      	ldrb	r2, [r3, #0]
 800134e:	4b47      	ldr	r3, [pc, #284]	; (800146c <main+0x5d4>)
 8001350:	781b      	ldrb	r3, [r3, #0]
 8001352:	429a      	cmp	r2, r3
 8001354:	d203      	bcs.n	800135e <main+0x4c6>
					update = 1;}
 8001356:	4b46      	ldr	r3, [pc, #280]	; (8001470 <main+0x5d8>)
 8001358:	2201      	movs	r2, #1
 800135a:	701a      	strb	r2, [r3, #0]
 800135c:	e017      	b.n	800138e <main+0x4f6>
				else{
					update = 0;
 800135e:	4b44      	ldr	r3, [pc, #272]	; (8001470 <main+0x5d8>)
 8001360:	2200      	movs	r2, #0
 8001362:	701a      	strb	r2, [r3, #0]
					if(n == nStation || n == nDestination){
 8001364:	4b3e      	ldr	r3, [pc, #248]	; (8001460 <main+0x5c8>)
 8001366:	781a      	ldrb	r2, [r3, #0]
 8001368:	4b42      	ldr	r3, [pc, #264]	; (8001474 <main+0x5dc>)
 800136a:	781b      	ldrb	r3, [r3, #0]
 800136c:	429a      	cmp	r2, r3
 800136e:	d005      	beq.n	800137c <main+0x4e4>
 8001370:	4b3b      	ldr	r3, [pc, #236]	; (8001460 <main+0x5c8>)
 8001372:	781a      	ldrb	r2, [r3, #0]
 8001374:	4b3d      	ldr	r3, [pc, #244]	; (800146c <main+0x5d4>)
 8001376:	781b      	ldrb	r3, [r3, #0]
 8001378:	429a      	cmp	r2, r3
 800137a:	d102      	bne.n	8001382 <main+0x4ea>
						Reached = 1;
 800137c:	4b3e      	ldr	r3, [pc, #248]	; (8001478 <main+0x5e0>)
 800137e:	2201      	movs	r2, #1
 8001380:	701a      	strb	r2, [r3, #0]
					}
					nDestination = 0;
 8001382:	4b3a      	ldr	r3, [pc, #232]	; (800146c <main+0x5d4>)
 8001384:	2200      	movs	r2, #0
 8001386:	701a      	strb	r2, [r3, #0]
					n = 0;
 8001388:	4b35      	ldr	r3, [pc, #212]	; (8001460 <main+0x5c8>)
 800138a:	2200      	movs	r2, #0
 800138c:	701a      	strb	r2, [r3, #0]
				}
				State = Laser;
 800138e:	4b3b      	ldr	r3, [pc, #236]	; (800147c <main+0x5e4>)
 8001390:	2202      	movs	r2, #2
 8001392:	701a      	strb	r2, [r3, #0]
				NFwriteFlag = 1;
 8001394:	4b3a      	ldr	r3, [pc, #232]	; (8001480 <main+0x5e8>)
 8001396:	2201      	movs	r2, #1
 8001398:	701a      	strb	r2, [r3, #0]
			}

			if(stop == 1){
 800139a:	4b3a      	ldr	r3, [pc, #232]	; (8001484 <main+0x5ec>)
 800139c:	781b      	ldrb	r3, [r3, #0]
 800139e:	2b01      	cmp	r3, #1
 80013a0:	f040 80c1 	bne.w	8001526 <main+0x68e>
				State = Emerstop;
 80013a4:	4b35      	ldr	r3, [pc, #212]	; (800147c <main+0x5e4>)
 80013a6:	2203      	movs	r2, #3
 80013a8:	701a      	strb	r2, [r3, #0]
				Drivemotor(0);
 80013aa:	2000      	movs	r0, #0
 80013ac:	f001 fe54 	bl	8003058 <Drivemotor>
			}
			break;
 80013b0:	e0b9      	b.n	8001526 <main+0x68e>

		  case Emerstop:
			HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_RESET);
 80013b2:	2200      	movs	r2, #0
 80013b4:	f44f 7100 	mov.w	r1, #512	; 0x200
 80013b8:	4833      	ldr	r0, [pc, #204]	; (8001488 <main+0x5f0>)
 80013ba:	f004 fa15 	bl	80057e8 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 80013be:	2200      	movs	r2, #0
 80013c0:	2180      	movs	r1, #128	; 0x80
 80013c2:	4832      	ldr	r0, [pc, #200]	; (800148c <main+0x5f4>)
 80013c4:	f004 fa10 	bl	80057e8 <HAL_GPIO_WritePin>
			if(B1State2[1] == GPIO_PIN_SET && B1State2[0] == GPIO_PIN_RESET){
 80013c8:	4b31      	ldr	r3, [pc, #196]	; (8001490 <main+0x5f8>)
 80013ca:	785b      	ldrb	r3, [r3, #1]
 80013cc:	2b01      	cmp	r3, #1
 80013ce:	d111      	bne.n	80013f4 <main+0x55c>
 80013d0:	4b2f      	ldr	r3, [pc, #188]	; (8001490 <main+0x5f8>)
 80013d2:	781b      	ldrb	r3, [r3, #0]
 80013d4:	2b00      	cmp	r3, #0
 80013d6:	d10d      	bne.n	80013f4 <main+0x55c>
				reset();
 80013d8:	f000 fe24 	bl	8002024 <reset>
				nDestination = 0;
 80013dc:	4b23      	ldr	r3, [pc, #140]	; (800146c <main+0x5d4>)
 80013de:	2200      	movs	r2, #0
 80013e0:	701a      	strb	r2, [r3, #0]
				n = 0;
 80013e2:	4b1f      	ldr	r3, [pc, #124]	; (8001460 <main+0x5c8>)
 80013e4:	2200      	movs	r2, #0
 80013e6:	701a      	strb	r2, [r3, #0]
				State = Idle;
 80013e8:	4b24      	ldr	r3, [pc, #144]	; (800147c <main+0x5e4>)
 80013ea:	2200      	movs	r2, #0
 80013ec:	701a      	strb	r2, [r3, #0]
				setzero = 1;
 80013ee:	4b19      	ldr	r3, [pc, #100]	; (8001454 <main+0x5bc>)
 80013f0:	2201      	movs	r2, #1
 80013f2:	701a      	strb	r2, [r3, #0]
			}
			B1State2[1] = B1State2[0];
 80013f4:	4b26      	ldr	r3, [pc, #152]	; (8001490 <main+0x5f8>)
 80013f6:	781a      	ldrb	r2, [r3, #0]
 80013f8:	4b25      	ldr	r3, [pc, #148]	; (8001490 <main+0x5f8>)
 80013fa:	705a      	strb	r2, [r3, #1]
			break;
 80013fc:	e098      	b.n	8001530 <main+0x698>

		  case Laser:
			  if(setzero == 1){
 80013fe:	4b15      	ldr	r3, [pc, #84]	; (8001454 <main+0x5bc>)
 8001400:	781b      	ldrb	r3, [r3, #0]
 8001402:	2b01      	cmp	r3, #1
 8001404:	d105      	bne.n	8001412 <main+0x57a>
				  State= Idle;
 8001406:	4b1d      	ldr	r3, [pc, #116]	; (800147c <main+0x5e4>)
 8001408:	2200      	movs	r2, #0
 800140a:	701a      	strb	r2, [r3, #0]
				  reset();
 800140c:	f000 fe0a 	bl	8002024 <reset>
				  break;
 8001410:	e08e      	b.n	8001530 <main+0x698>
			  }
			  reset();
 8001412:	f000 fe07 	bl	8002024 <reset>
			  //State= Idle;
			  switch(stateI2C){
 8001416:	4b1f      	ldr	r3, [pc, #124]	; (8001494 <main+0x5fc>)
 8001418:	781b      	ldrb	r3, [r3, #0]
 800141a:	2b00      	cmp	r3, #0
 800141c:	d03c      	beq.n	8001498 <main+0x600>
 800141e:	2b01      	cmp	r3, #1
 8001420:	d072      	beq.n	8001508 <main+0x670>
 8001422:	e085      	b.n	8001530 <main+0x698>
 8001424:	f3af 8000 	nop.w
 8001428:	47ae147b 	.word	0x47ae147b
 800142c:	3f847ae1 	.word	0x3f847ae1
 8001430:	9999999a 	.word	0x9999999a
 8001434:	3fb99999 	.word	0x3fb99999
 8001438:	66666666 	.word	0x66666666
 800143c:	3fe66666 	.word	0x3fe66666
 8001440:	20000614 	.word	0x20000614
 8001444:	c4a28000 	.word	0xc4a28000
 8001448:	200005cc 	.word	0x200005cc
 800144c:	200005d4 	.word	0x200005d4
 8001450:	200007f8 	.word	0x200007f8
 8001454:	2000059c 	.word	0x2000059c
 8001458:	2000002c 	.word	0x2000002c
 800145c:	20000584 	.word	0x20000584
 8001460:	20000548 	.word	0x20000548
 8001464:	200004d4 	.word	0x200004d4
 8001468:	200005f0 	.word	0x200005f0
 800146c:	200004d0 	.word	0x200004d0
 8001470:	200005e4 	.word	0x200005e4
 8001474:	20000538 	.word	0x20000538
 8001478:	2000053b 	.word	0x2000053b
 800147c:	200005e7 	.word	0x200005e7
 8001480:	20000022 	.word	0x20000022
 8001484:	200005a8 	.word	0x200005a8
 8001488:	40020000 	.word	0x40020000
 800148c:	40020800 	.word	0x40020800
 8001490:	200007e0 	.word	0x200007e0
 8001494:	20000572 	.word	0x20000572
			  // Reached state
			  case 0:
				  switch(NFenable){
 8001498:	4b2a      	ldr	r3, [pc, #168]	; (8001544 <main+0x6ac>)
 800149a:	781b      	ldrb	r3, [r3, #0]
 800149c:	2b00      	cmp	r3, #0
 800149e:	d02a      	beq.n	80014f6 <main+0x65e>
 80014a0:	2b01      	cmp	r3, #1
 80014a2:	d142      	bne.n	800152a <main+0x692>
				  case 1:
					  NFgetstate();
 80014a4:	f001 fe4e 	bl	8003144 <NFgetstate>
					  if( NFwriteFlag && NFstate == 0x78 && (hi2c1.State == HAL_I2C_STATE_READY) ){
 80014a8:	4b27      	ldr	r3, [pc, #156]	; (8001548 <main+0x6b0>)
 80014aa:	781b      	ldrb	r3, [r3, #0]
 80014ac:	2b00      	cmp	r3, #0
 80014ae:	d00f      	beq.n	80014d0 <main+0x638>
 80014b0:	4b26      	ldr	r3, [pc, #152]	; (800154c <main+0x6b4>)
 80014b2:	781b      	ldrb	r3, [r3, #0]
 80014b4:	2b78      	cmp	r3, #120	; 0x78
 80014b6:	d10b      	bne.n	80014d0 <main+0x638>
 80014b8:	4b25      	ldr	r3, [pc, #148]	; (8001550 <main+0x6b8>)
 80014ba:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80014be:	b2db      	uxtb	r3, r3
 80014c0:	2b20      	cmp	r3, #32
 80014c2:	d105      	bne.n	80014d0 <main+0x638>
						  NFcontacton();
 80014c4:	f001 fe28 	bl	8003118 <NFcontacton>
						  NFwriteFlag = 0;		// Reached var
 80014c8:	4b1f      	ldr	r3, [pc, #124]	; (8001548 <main+0x6b0>)
 80014ca:	2200      	movs	r2, #0
 80014cc:	701a      	strb	r2, [r3, #0]
					  }else if(NFstate == 0x12 || NFstate == 0x34 || NFstate == 0x56){
						  stateI2C = 1;
						  NFstate = 0;
					  }
					  break;
 80014ce:	e019      	b.n	8001504 <main+0x66c>
					  }else if(NFstate == 0x12 || NFstate == 0x34 || NFstate == 0x56){
 80014d0:	4b1e      	ldr	r3, [pc, #120]	; (800154c <main+0x6b4>)
 80014d2:	781b      	ldrb	r3, [r3, #0]
 80014d4:	2b12      	cmp	r3, #18
 80014d6:	d007      	beq.n	80014e8 <main+0x650>
 80014d8:	4b1c      	ldr	r3, [pc, #112]	; (800154c <main+0x6b4>)
 80014da:	781b      	ldrb	r3, [r3, #0]
 80014dc:	2b34      	cmp	r3, #52	; 0x34
 80014de:	d003      	beq.n	80014e8 <main+0x650>
 80014e0:	4b1a      	ldr	r3, [pc, #104]	; (800154c <main+0x6b4>)
 80014e2:	781b      	ldrb	r3, [r3, #0]
 80014e4:	2b56      	cmp	r3, #86	; 0x56
 80014e6:	d10d      	bne.n	8001504 <main+0x66c>
						  stateI2C = 1;
 80014e8:	4b1a      	ldr	r3, [pc, #104]	; (8001554 <main+0x6bc>)
 80014ea:	2201      	movs	r2, #1
 80014ec:	701a      	strb	r2, [r3, #0]
						  NFstate = 0;
 80014ee:	4b17      	ldr	r3, [pc, #92]	; (800154c <main+0x6b4>)
 80014f0:	2200      	movs	r2, #0
 80014f2:	701a      	strb	r2, [r3, #0]
					  break;
 80014f4:	e006      	b.n	8001504 <main+0x66c>
				  case 0:
					  NFwriteFlag = 0;
 80014f6:	4b14      	ldr	r3, [pc, #80]	; (8001548 <main+0x6b0>)
 80014f8:	2200      	movs	r2, #0
 80014fa:	701a      	strb	r2, [r3, #0]
					  State = Idle;
 80014fc:	4b16      	ldr	r3, [pc, #88]	; (8001558 <main+0x6c0>)
 80014fe:	2200      	movs	r2, #0
 8001500:	701a      	strb	r2, [r3, #0]
					  // state = start;
					  break;
 8001502:	e000      	b.n	8001506 <main+0x66e>
					  break;
 8001504:	bf00      	nop
				  }
				  break;
 8001506:	e010      	b.n	800152a <main+0x692>
			  case 1:
				  NFgetstate();
 8001508:	f001 fe1c 	bl	8003144 <NFgetstate>
				  if(NFstate == 0x78){
 800150c:	4b0f      	ldr	r3, [pc, #60]	; (800154c <main+0x6b4>)
 800150e:	781b      	ldrb	r3, [r3, #0]
 8001510:	2b78      	cmp	r3, #120	; 0x78
 8001512:	d10c      	bne.n	800152e <main+0x696>
					  stateI2C = 0;
 8001514:	4b0f      	ldr	r3, [pc, #60]	; (8001554 <main+0x6bc>)
 8001516:	2200      	movs	r2, #0
 8001518:	701a      	strb	r2, [r3, #0]
					  State = Idle;
 800151a:	4b0f      	ldr	r3, [pc, #60]	; (8001558 <main+0x6c0>)
 800151c:	2200      	movs	r2, #0
 800151e:	701a      	strb	r2, [r3, #0]
				  }
				  break;
 8001520:	e005      	b.n	800152e <main+0x696>
			  break;
 8001522:	bf00      	nop
 8001524:	e004      	b.n	8001530 <main+0x698>
			break;
 8001526:	bf00      	nop
 8001528:	e002      	b.n	8001530 <main+0x698>
				  break;
 800152a:	bf00      	nop
 800152c:	e000      	b.n	8001530 <main+0x698>
				  break;
 800152e:	bf00      	nop
			  }
	  }

	  responseUART();
 8001530:	f002 fa4e 	bl	80039d0 <responseUART>
	  rad = current_rad_wrap;
 8001534:	4b09      	ldr	r3, [pc, #36]	; (800155c <main+0x6c4>)
 8001536:	681b      	ldr	r3, [r3, #0]
 8001538:	4a09      	ldr	r2, [pc, #36]	; (8001560 <main+0x6c8>)
 800153a:	6013      	str	r3, [r2, #0]

	  // Keep this work flow at the bottom of while loop. bo Reached will be reset here.
	  destinationACK();
 800153c:	f002 fe30 	bl	80041a0 <destinationACK>
  {
 8001540:	e4e4      	b.n	8000f0c <main+0x74>
 8001542:	bf00      	nop
 8001544:	20000021 	.word	0x20000021
 8001548:	20000022 	.word	0x20000022
 800154c:	2000056e 	.word	0x2000056e
 8001550:	200001c4 	.word	0x200001c4
 8001554:	20000572 	.word	0x20000572
 8001558:	200005e7 	.word	0x200005e7
 800155c:	20000580 	.word	0x20000580
 8001560:	20000540 	.word	0x20000540

08001564 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001564:	b580      	push	{r7, lr}
 8001566:	b094      	sub	sp, #80	; 0x50
 8001568:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800156a:	f107 0320 	add.w	r3, r7, #32
 800156e:	2230      	movs	r2, #48	; 0x30
 8001570:	2100      	movs	r1, #0
 8001572:	4618      	mov	r0, r3
 8001574:	f00a fa30 	bl	800b9d8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001578:	f107 030c 	add.w	r3, r7, #12
 800157c:	2200      	movs	r2, #0
 800157e:	601a      	str	r2, [r3, #0]
 8001580:	605a      	str	r2, [r3, #4]
 8001582:	609a      	str	r2, [r3, #8]
 8001584:	60da      	str	r2, [r3, #12]
 8001586:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001588:	2300      	movs	r3, #0
 800158a:	60bb      	str	r3, [r7, #8]
 800158c:	4b27      	ldr	r3, [pc, #156]	; (800162c <SystemClock_Config+0xc8>)
 800158e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001590:	4a26      	ldr	r2, [pc, #152]	; (800162c <SystemClock_Config+0xc8>)
 8001592:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001596:	6413      	str	r3, [r2, #64]	; 0x40
 8001598:	4b24      	ldr	r3, [pc, #144]	; (800162c <SystemClock_Config+0xc8>)
 800159a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800159c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80015a0:	60bb      	str	r3, [r7, #8]
 80015a2:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80015a4:	2300      	movs	r3, #0
 80015a6:	607b      	str	r3, [r7, #4]
 80015a8:	4b21      	ldr	r3, [pc, #132]	; (8001630 <SystemClock_Config+0xcc>)
 80015aa:	681b      	ldr	r3, [r3, #0]
 80015ac:	4a20      	ldr	r2, [pc, #128]	; (8001630 <SystemClock_Config+0xcc>)
 80015ae:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80015b2:	6013      	str	r3, [r2, #0]
 80015b4:	4b1e      	ldr	r3, [pc, #120]	; (8001630 <SystemClock_Config+0xcc>)
 80015b6:	681b      	ldr	r3, [r3, #0]
 80015b8:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80015bc:	607b      	str	r3, [r7, #4]
 80015be:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80015c0:	2302      	movs	r3, #2
 80015c2:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80015c4:	2301      	movs	r3, #1
 80015c6:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80015c8:	2310      	movs	r3, #16
 80015ca:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80015cc:	2302      	movs	r3, #2
 80015ce:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 80015d0:	2300      	movs	r3, #0
 80015d2:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 80015d4:	2308      	movs	r3, #8
 80015d6:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 100;
 80015d8:	2364      	movs	r3, #100	; 0x64
 80015da:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80015dc:	2302      	movs	r3, #2
 80015de:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80015e0:	2304      	movs	r3, #4
 80015e2:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80015e4:	f107 0320 	add.w	r3, r7, #32
 80015e8:	4618      	mov	r0, r3
 80015ea:	f006 fd9f 	bl	800812c <HAL_RCC_OscConfig>
 80015ee:	4603      	mov	r3, r0
 80015f0:	2b00      	cmp	r3, #0
 80015f2:	d001      	beq.n	80015f8 <SystemClock_Config+0x94>
  {
    Error_Handler();
 80015f4:	f002 fe82 	bl	80042fc <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80015f8:	230f      	movs	r3, #15
 80015fa:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80015fc:	2302      	movs	r3, #2
 80015fe:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001600:	2300      	movs	r3, #0
 8001602:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001604:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001608:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800160a:	2300      	movs	r3, #0
 800160c:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 800160e:	f107 030c 	add.w	r3, r7, #12
 8001612:	2103      	movs	r1, #3
 8001614:	4618      	mov	r0, r3
 8001616:	f007 f801 	bl	800861c <HAL_RCC_ClockConfig>
 800161a:	4603      	mov	r3, r0
 800161c:	2b00      	cmp	r3, #0
 800161e:	d001      	beq.n	8001624 <SystemClock_Config+0xc0>
  {
    Error_Handler();
 8001620:	f002 fe6c 	bl	80042fc <Error_Handler>
  }
}
 8001624:	bf00      	nop
 8001626:	3750      	adds	r7, #80	; 0x50
 8001628:	46bd      	mov	sp, r7
 800162a:	bd80      	pop	{r7, pc}
 800162c:	40023800 	.word	0x40023800
 8001630:	40007000 	.word	0x40007000

08001634 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001634:	b580      	push	{r7, lr}
 8001636:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001638:	4b12      	ldr	r3, [pc, #72]	; (8001684 <MX_I2C1_Init+0x50>)
 800163a:	4a13      	ldr	r2, [pc, #76]	; (8001688 <MX_I2C1_Init+0x54>)
 800163c:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 800163e:	4b11      	ldr	r3, [pc, #68]	; (8001684 <MX_I2C1_Init+0x50>)
 8001640:	4a12      	ldr	r2, [pc, #72]	; (800168c <MX_I2C1_Init+0x58>)
 8001642:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001644:	4b0f      	ldr	r3, [pc, #60]	; (8001684 <MX_I2C1_Init+0x50>)
 8001646:	2200      	movs	r2, #0
 8001648:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 800164a:	4b0e      	ldr	r3, [pc, #56]	; (8001684 <MX_I2C1_Init+0x50>)
 800164c:	2200      	movs	r2, #0
 800164e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001650:	4b0c      	ldr	r3, [pc, #48]	; (8001684 <MX_I2C1_Init+0x50>)
 8001652:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001656:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001658:	4b0a      	ldr	r3, [pc, #40]	; (8001684 <MX_I2C1_Init+0x50>)
 800165a:	2200      	movs	r2, #0
 800165c:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 800165e:	4b09      	ldr	r3, [pc, #36]	; (8001684 <MX_I2C1_Init+0x50>)
 8001660:	2200      	movs	r2, #0
 8001662:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001664:	4b07      	ldr	r3, [pc, #28]	; (8001684 <MX_I2C1_Init+0x50>)
 8001666:	2200      	movs	r2, #0
 8001668:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800166a:	4b06      	ldr	r3, [pc, #24]	; (8001684 <MX_I2C1_Init+0x50>)
 800166c:	2200      	movs	r2, #0
 800166e:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001670:	4804      	ldr	r0, [pc, #16]	; (8001684 <MX_I2C1_Init+0x50>)
 8001672:	f004 f8eb 	bl	800584c <HAL_I2C_Init>
 8001676:	4603      	mov	r3, r0
 8001678:	2b00      	cmp	r3, #0
 800167a:	d001      	beq.n	8001680 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 800167c:	f002 fe3e 	bl	80042fc <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001680:	bf00      	nop
 8001682:	bd80      	pop	{r7, pc}
 8001684:	200001c4 	.word	0x200001c4
 8001688:	40005400 	.word	0x40005400
 800168c:	00061a80 	.word	0x00061a80

08001690 <MX_SPI3_Init>:
  * @brief SPI3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI3_Init(void)
{
 8001690:	b580      	push	{r7, lr}
 8001692:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  /* SPI3 parameter configuration*/
  hspi3.Instance = SPI3;
 8001694:	4b17      	ldr	r3, [pc, #92]	; (80016f4 <MX_SPI3_Init+0x64>)
 8001696:	4a18      	ldr	r2, [pc, #96]	; (80016f8 <MX_SPI3_Init+0x68>)
 8001698:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 800169a:	4b16      	ldr	r3, [pc, #88]	; (80016f4 <MX_SPI3_Init+0x64>)
 800169c:	f44f 7282 	mov.w	r2, #260	; 0x104
 80016a0:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 80016a2:	4b14      	ldr	r3, [pc, #80]	; (80016f4 <MX_SPI3_Init+0x64>)
 80016a4:	2200      	movs	r2, #0
 80016a6:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 80016a8:	4b12      	ldr	r3, [pc, #72]	; (80016f4 <MX_SPI3_Init+0x64>)
 80016aa:	2200      	movs	r2, #0
 80016ac:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 80016ae:	4b11      	ldr	r3, [pc, #68]	; (80016f4 <MX_SPI3_Init+0x64>)
 80016b0:	2200      	movs	r2, #0
 80016b2:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 80016b4:	4b0f      	ldr	r3, [pc, #60]	; (80016f4 <MX_SPI3_Init+0x64>)
 80016b6:	2200      	movs	r2, #0
 80016b8:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 80016ba:	4b0e      	ldr	r3, [pc, #56]	; (80016f4 <MX_SPI3_Init+0x64>)
 80016bc:	f44f 7200 	mov.w	r2, #512	; 0x200
 80016c0:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 80016c2:	4b0c      	ldr	r3, [pc, #48]	; (80016f4 <MX_SPI3_Init+0x64>)
 80016c4:	2220      	movs	r2, #32
 80016c6:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80016c8:	4b0a      	ldr	r3, [pc, #40]	; (80016f4 <MX_SPI3_Init+0x64>)
 80016ca:	2200      	movs	r2, #0
 80016cc:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 80016ce:	4b09      	ldr	r3, [pc, #36]	; (80016f4 <MX_SPI3_Init+0x64>)
 80016d0:	2200      	movs	r2, #0
 80016d2:	625a      	str	r2, [r3, #36]	; 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80016d4:	4b07      	ldr	r3, [pc, #28]	; (80016f4 <MX_SPI3_Init+0x64>)
 80016d6:	2200      	movs	r2, #0
 80016d8:	629a      	str	r2, [r3, #40]	; 0x28
  hspi3.Init.CRCPolynomial = 10;
 80016da:	4b06      	ldr	r3, [pc, #24]	; (80016f4 <MX_SPI3_Init+0x64>)
 80016dc:	220a      	movs	r2, #10
 80016de:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 80016e0:	4804      	ldr	r0, [pc, #16]	; (80016f4 <MX_SPI3_Init+0x64>)
 80016e2:	f007 f9bb 	bl	8008a5c <HAL_SPI_Init>
 80016e6:	4603      	mov	r3, r0
 80016e8:	2b00      	cmp	r3, #0
 80016ea:	d001      	beq.n	80016f0 <MX_SPI3_Init+0x60>
  {
    Error_Handler();
 80016ec:	f002 fe06 	bl	80042fc <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 80016f0:	bf00      	nop
 80016f2:	bd80      	pop	{r7, pc}
 80016f4:	20000218 	.word	0x20000218
 80016f8:	40003c00 	.word	0x40003c00

080016fc <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80016fc:	b580      	push	{r7, lr}
 80016fe:	b08e      	sub	sp, #56	; 0x38
 8001700:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001702:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001706:	2200      	movs	r2, #0
 8001708:	601a      	str	r2, [r3, #0]
 800170a:	605a      	str	r2, [r3, #4]
 800170c:	609a      	str	r2, [r3, #8]
 800170e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001710:	f107 0320 	add.w	r3, r7, #32
 8001714:	2200      	movs	r2, #0
 8001716:	601a      	str	r2, [r3, #0]
 8001718:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800171a:	1d3b      	adds	r3, r7, #4
 800171c:	2200      	movs	r2, #0
 800171e:	601a      	str	r2, [r3, #0]
 8001720:	605a      	str	r2, [r3, #4]
 8001722:	609a      	str	r2, [r3, #8]
 8001724:	60da      	str	r2, [r3, #12]
 8001726:	611a      	str	r2, [r3, #16]
 8001728:	615a      	str	r2, [r3, #20]
 800172a:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800172c:	4b32      	ldr	r3, [pc, #200]	; (80017f8 <MX_TIM2_Init+0xfc>)
 800172e:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001732:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 99;
 8001734:	4b30      	ldr	r3, [pc, #192]	; (80017f8 <MX_TIM2_Init+0xfc>)
 8001736:	2263      	movs	r2, #99	; 0x63
 8001738:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800173a:	4b2f      	ldr	r3, [pc, #188]	; (80017f8 <MX_TIM2_Init+0xfc>)
 800173c:	2200      	movs	r2, #0
 800173e:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9999;
 8001740:	4b2d      	ldr	r3, [pc, #180]	; (80017f8 <MX_TIM2_Init+0xfc>)
 8001742:	f242 720f 	movw	r2, #9999	; 0x270f
 8001746:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001748:	4b2b      	ldr	r3, [pc, #172]	; (80017f8 <MX_TIM2_Init+0xfc>)
 800174a:	2200      	movs	r2, #0
 800174c:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800174e:	4b2a      	ldr	r3, [pc, #168]	; (80017f8 <MX_TIM2_Init+0xfc>)
 8001750:	2200      	movs	r2, #0
 8001752:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001754:	4828      	ldr	r0, [pc, #160]	; (80017f8 <MX_TIM2_Init+0xfc>)
 8001756:	f007 fe91 	bl	800947c <HAL_TIM_Base_Init>
 800175a:	4603      	mov	r3, r0
 800175c:	2b00      	cmp	r3, #0
 800175e:	d001      	beq.n	8001764 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 8001760:	f002 fdcc 	bl	80042fc <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001764:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001768:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800176a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800176e:	4619      	mov	r1, r3
 8001770:	4821      	ldr	r0, [pc, #132]	; (80017f8 <MX_TIM2_Init+0xfc>)
 8001772:	f008 fa63 	bl	8009c3c <HAL_TIM_ConfigClockSource>
 8001776:	4603      	mov	r3, r0
 8001778:	2b00      	cmp	r3, #0
 800177a:	d001      	beq.n	8001780 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 800177c:	f002 fdbe 	bl	80042fc <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001780:	481d      	ldr	r0, [pc, #116]	; (80017f8 <MX_TIM2_Init+0xfc>)
 8001782:	f007 ff87 	bl	8009694 <HAL_TIM_PWM_Init>
 8001786:	4603      	mov	r3, r0
 8001788:	2b00      	cmp	r3, #0
 800178a:	d001      	beq.n	8001790 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 800178c:	f002 fdb6 	bl	80042fc <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001790:	2300      	movs	r3, #0
 8001792:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001794:	2300      	movs	r3, #0
 8001796:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001798:	f107 0320 	add.w	r3, r7, #32
 800179c:	4619      	mov	r1, r3
 800179e:	4816      	ldr	r0, [pc, #88]	; (80017f8 <MX_TIM2_Init+0xfc>)
 80017a0:	f008 fe08 	bl	800a3b4 <HAL_TIMEx_MasterConfigSynchronization>
 80017a4:	4603      	mov	r3, r0
 80017a6:	2b00      	cmp	r3, #0
 80017a8:	d001      	beq.n	80017ae <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 80017aa:	f002 fda7 	bl	80042fc <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80017ae:	2360      	movs	r3, #96	; 0x60
 80017b0:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80017b2:	2300      	movs	r3, #0
 80017b4:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80017b6:	2300      	movs	r3, #0
 80017b8:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80017ba:	2300      	movs	r3, #0
 80017bc:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80017be:	1d3b      	adds	r3, r7, #4
 80017c0:	2200      	movs	r2, #0
 80017c2:	4619      	mov	r1, r3
 80017c4:	480c      	ldr	r0, [pc, #48]	; (80017f8 <MX_TIM2_Init+0xfc>)
 80017c6:	f008 f977 	bl	8009ab8 <HAL_TIM_PWM_ConfigChannel>
 80017ca:	4603      	mov	r3, r0
 80017cc:	2b00      	cmp	r3, #0
 80017ce:	d001      	beq.n	80017d4 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 80017d0:	f002 fd94 	bl	80042fc <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80017d4:	1d3b      	adds	r3, r7, #4
 80017d6:	2204      	movs	r2, #4
 80017d8:	4619      	mov	r1, r3
 80017da:	4807      	ldr	r0, [pc, #28]	; (80017f8 <MX_TIM2_Init+0xfc>)
 80017dc:	f008 f96c 	bl	8009ab8 <HAL_TIM_PWM_ConfigChannel>
 80017e0:	4603      	mov	r3, r0
 80017e2:	2b00      	cmp	r3, #0
 80017e4:	d001      	beq.n	80017ea <MX_TIM2_Init+0xee>
  {
    Error_Handler();
 80017e6:	f002 fd89 	bl	80042fc <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 80017ea:	4803      	ldr	r0, [pc, #12]	; (80017f8 <MX_TIM2_Init+0xfc>)
 80017ec:	f002 ff04 	bl	80045f8 <HAL_TIM_MspPostInit>

}
 80017f0:	bf00      	nop
 80017f2:	3738      	adds	r7, #56	; 0x38
 80017f4:	46bd      	mov	sp, r7
 80017f6:	bd80      	pop	{r7, pc}
 80017f8:	20000330 	.word	0x20000330

080017fc <MX_TIM11_Init>:
  * @brief TIM11 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM11_Init(void)
{
 80017fc:	b580      	push	{r7, lr}
 80017fe:	af00      	add	r7, sp, #0
  /* USER CODE END TIM11_Init 0 */

  /* USER CODE BEGIN TIM11_Init 1 */

  /* USER CODE END TIM11_Init 1 */
  htim11.Instance = TIM11;
 8001800:	4b0e      	ldr	r3, [pc, #56]	; (800183c <MX_TIM11_Init+0x40>)
 8001802:	4a0f      	ldr	r2, [pc, #60]	; (8001840 <MX_TIM11_Init+0x44>)
 8001804:	601a      	str	r2, [r3, #0]
  htim11.Init.Prescaler = 99;
 8001806:	4b0d      	ldr	r3, [pc, #52]	; (800183c <MX_TIM11_Init+0x40>)
 8001808:	2263      	movs	r2, #99	; 0x63
 800180a:	605a      	str	r2, [r3, #4]
  htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 800180c:	4b0b      	ldr	r3, [pc, #44]	; (800183c <MX_TIM11_Init+0x40>)
 800180e:	2200      	movs	r2, #0
 8001810:	609a      	str	r2, [r3, #8]
  htim11.Init.Period = 65535;
 8001812:	4b0a      	ldr	r3, [pc, #40]	; (800183c <MX_TIM11_Init+0x40>)
 8001814:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001818:	60da      	str	r2, [r3, #12]
  htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800181a:	4b08      	ldr	r3, [pc, #32]	; (800183c <MX_TIM11_Init+0x40>)
 800181c:	2200      	movs	r2, #0
 800181e:	611a      	str	r2, [r3, #16]
  htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001820:	4b06      	ldr	r3, [pc, #24]	; (800183c <MX_TIM11_Init+0x40>)
 8001822:	2200      	movs	r2, #0
 8001824:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim11) != HAL_OK)
 8001826:	4805      	ldr	r0, [pc, #20]	; (800183c <MX_TIM11_Init+0x40>)
 8001828:	f007 fe28 	bl	800947c <HAL_TIM_Base_Init>
 800182c:	4603      	mov	r3, r0
 800182e:	2b00      	cmp	r3, #0
 8001830:	d001      	beq.n	8001836 <MX_TIM11_Init+0x3a>
  {
    Error_Handler();
 8001832:	f002 fd63 	bl	80042fc <Error_Handler>
  }
  /* USER CODE BEGIN TIM11_Init 2 */

  /* USER CODE END TIM11_Init 2 */

}
 8001836:	bf00      	nop
 8001838:	bd80      	pop	{r7, pc}
 800183a:	bf00      	nop
 800183c:	20000378 	.word	0x20000378
 8001840:	40014800 	.word	0x40014800

08001844 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001844:	b580      	push	{r7, lr}
 8001846:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001848:	4b12      	ldr	r3, [pc, #72]	; (8001894 <MX_USART2_UART_Init+0x50>)
 800184a:	4a13      	ldr	r2, [pc, #76]	; (8001898 <MX_USART2_UART_Init+0x54>)
 800184c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 512000;
 800184e:	4b11      	ldr	r3, [pc, #68]	; (8001894 <MX_USART2_UART_Init+0x50>)
 8001850:	f44f 22fa 	mov.w	r2, #512000	; 0x7d000
 8001854:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_9B;
 8001856:	4b0f      	ldr	r3, [pc, #60]	; (8001894 <MX_USART2_UART_Init+0x50>)
 8001858:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800185c:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800185e:	4b0d      	ldr	r3, [pc, #52]	; (8001894 <MX_USART2_UART_Init+0x50>)
 8001860:	2200      	movs	r2, #0
 8001862:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_EVEN;
 8001864:	4b0b      	ldr	r3, [pc, #44]	; (8001894 <MX_USART2_UART_Init+0x50>)
 8001866:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800186a:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800186c:	4b09      	ldr	r3, [pc, #36]	; (8001894 <MX_USART2_UART_Init+0x50>)
 800186e:	220c      	movs	r2, #12
 8001870:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001872:	4b08      	ldr	r3, [pc, #32]	; (8001894 <MX_USART2_UART_Init+0x50>)
 8001874:	2200      	movs	r2, #0
 8001876:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001878:	4b06      	ldr	r3, [pc, #24]	; (8001894 <MX_USART2_UART_Init+0x50>)
 800187a:	2200      	movs	r2, #0
 800187c:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800187e:	4805      	ldr	r0, [pc, #20]	; (8001894 <MX_USART2_UART_Init+0x50>)
 8001880:	f008 fe1a 	bl	800a4b8 <HAL_UART_Init>
 8001884:	4603      	mov	r3, r0
 8001886:	2b00      	cmp	r3, #0
 8001888:	d001      	beq.n	800188e <MX_USART2_UART_Init+0x4a>
  {
    Error_Handler();
 800188a:	f002 fd37 	bl	80042fc <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800188e:	bf00      	nop
 8001890:	bd80      	pop	{r7, pc}
 8001892:	bf00      	nop
 8001894:	200003c0 	.word	0x200003c0
 8001898:	40004400 	.word	0x40004400

0800189c <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 800189c:	b580      	push	{r7, lr}
 800189e:	b082      	sub	sp, #8
 80018a0:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80018a2:	2300      	movs	r3, #0
 80018a4:	607b      	str	r3, [r7, #4]
 80018a6:	4b18      	ldr	r3, [pc, #96]	; (8001908 <MX_DMA_Init+0x6c>)
 80018a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018aa:	4a17      	ldr	r2, [pc, #92]	; (8001908 <MX_DMA_Init+0x6c>)
 80018ac:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80018b0:	6313      	str	r3, [r2, #48]	; 0x30
 80018b2:	4b15      	ldr	r3, [pc, #84]	; (8001908 <MX_DMA_Init+0x6c>)
 80018b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018b6:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80018ba:	607b      	str	r3, [r7, #4]
 80018bc:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 80018be:	2200      	movs	r2, #0
 80018c0:	2100      	movs	r1, #0
 80018c2:	200b      	movs	r0, #11
 80018c4:	f003 f9ad 	bl	8004c22 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 80018c8:	200b      	movs	r0, #11
 80018ca:	f003 f9c6 	bl	8004c5a <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 80018ce:	2200      	movs	r2, #0
 80018d0:	2100      	movs	r1, #0
 80018d2:	2010      	movs	r0, #16
 80018d4:	f003 f9a5 	bl	8004c22 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 80018d8:	2010      	movs	r0, #16
 80018da:	f003 f9be 	bl	8004c5a <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream6_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 80018de:	2200      	movs	r2, #0
 80018e0:	2100      	movs	r1, #0
 80018e2:	2011      	movs	r0, #17
 80018e4:	f003 f99d 	bl	8004c22 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 80018e8:	2011      	movs	r0, #17
 80018ea:	f003 f9b6 	bl	8004c5a <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 0, 0);
 80018ee:	2200      	movs	r2, #0
 80018f0:	2100      	movs	r1, #0
 80018f2:	202f      	movs	r0, #47	; 0x2f
 80018f4:	f003 f995 	bl	8004c22 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 80018f8:	202f      	movs	r0, #47	; 0x2f
 80018fa:	f003 f9ae 	bl	8004c5a <HAL_NVIC_EnableIRQ>

}
 80018fe:	bf00      	nop
 8001900:	3708      	adds	r7, #8
 8001902:	46bd      	mov	sp, r7
 8001904:	bd80      	pop	{r7, pc}
 8001906:	bf00      	nop
 8001908:	40023800 	.word	0x40023800

0800190c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800190c:	b580      	push	{r7, lr}
 800190e:	b08a      	sub	sp, #40	; 0x28
 8001910:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001912:	f107 0314 	add.w	r3, r7, #20
 8001916:	2200      	movs	r2, #0
 8001918:	601a      	str	r2, [r3, #0]
 800191a:	605a      	str	r2, [r3, #4]
 800191c:	609a      	str	r2, [r3, #8]
 800191e:	60da      	str	r2, [r3, #12]
 8001920:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001922:	2300      	movs	r3, #0
 8001924:	613b      	str	r3, [r7, #16]
 8001926:	4b51      	ldr	r3, [pc, #324]	; (8001a6c <MX_GPIO_Init+0x160>)
 8001928:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800192a:	4a50      	ldr	r2, [pc, #320]	; (8001a6c <MX_GPIO_Init+0x160>)
 800192c:	f043 0304 	orr.w	r3, r3, #4
 8001930:	6313      	str	r3, [r2, #48]	; 0x30
 8001932:	4b4e      	ldr	r3, [pc, #312]	; (8001a6c <MX_GPIO_Init+0x160>)
 8001934:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001936:	f003 0304 	and.w	r3, r3, #4
 800193a:	613b      	str	r3, [r7, #16]
 800193c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800193e:	2300      	movs	r3, #0
 8001940:	60fb      	str	r3, [r7, #12]
 8001942:	4b4a      	ldr	r3, [pc, #296]	; (8001a6c <MX_GPIO_Init+0x160>)
 8001944:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001946:	4a49      	ldr	r2, [pc, #292]	; (8001a6c <MX_GPIO_Init+0x160>)
 8001948:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800194c:	6313      	str	r3, [r2, #48]	; 0x30
 800194e:	4b47      	ldr	r3, [pc, #284]	; (8001a6c <MX_GPIO_Init+0x160>)
 8001950:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001952:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001956:	60fb      	str	r3, [r7, #12]
 8001958:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800195a:	2300      	movs	r3, #0
 800195c:	60bb      	str	r3, [r7, #8]
 800195e:	4b43      	ldr	r3, [pc, #268]	; (8001a6c <MX_GPIO_Init+0x160>)
 8001960:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001962:	4a42      	ldr	r2, [pc, #264]	; (8001a6c <MX_GPIO_Init+0x160>)
 8001964:	f043 0301 	orr.w	r3, r3, #1
 8001968:	6313      	str	r3, [r2, #48]	; 0x30
 800196a:	4b40      	ldr	r3, [pc, #256]	; (8001a6c <MX_GPIO_Init+0x160>)
 800196c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800196e:	f003 0301 	and.w	r3, r3, #1
 8001972:	60bb      	str	r3, [r7, #8]
 8001974:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001976:	2300      	movs	r3, #0
 8001978:	607b      	str	r3, [r7, #4]
 800197a:	4b3c      	ldr	r3, [pc, #240]	; (8001a6c <MX_GPIO_Init+0x160>)
 800197c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800197e:	4a3b      	ldr	r2, [pc, #236]	; (8001a6c <MX_GPIO_Init+0x160>)
 8001980:	f043 0302 	orr.w	r3, r3, #2
 8001984:	6313      	str	r3, [r2, #48]	; 0x30
 8001986:	4b39      	ldr	r3, [pc, #228]	; (8001a6c <MX_GPIO_Init+0x160>)
 8001988:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800198a:	f003 0302 	and.w	r3, r3, #2
 800198e:	607b      	str	r3, [r7, #4]
 8001990:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|GPIO_PIN_9, GPIO_PIN_RESET);
 8001992:	2200      	movs	r2, #0
 8001994:	f44f 7108 	mov.w	r1, #544	; 0x220
 8001998:	4835      	ldr	r0, [pc, #212]	; (8001a70 <MX_GPIO_Init+0x164>)
 800199a:	f003 ff25 	bl	80057e8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SS_GPIO_Port, SS_Pin, GPIO_PIN_RESET);
 800199e:	2200      	movs	r2, #0
 80019a0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80019a4:	4833      	ldr	r0, [pc, #204]	; (8001a74 <MX_GPIO_Init+0x168>)
 80019a6:	f003 ff1f 	bl	80057e8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 80019aa:	2200      	movs	r2, #0
 80019ac:	2180      	movs	r1, #128	; 0x80
 80019ae:	4832      	ldr	r0, [pc, #200]	; (8001a78 <MX_GPIO_Init+0x16c>)
 80019b0:	f003 ff1a 	bl	80057e8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 80019b4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80019b8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80019ba:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 80019be:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019c0:	2300      	movs	r3, #0
 80019c2:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 80019c4:	f107 0314 	add.w	r3, r7, #20
 80019c8:	4619      	mov	r1, r3
 80019ca:	482b      	ldr	r0, [pc, #172]	; (8001a78 <MX_GPIO_Init+0x16c>)
 80019cc:	f003 fd70 	bl	80054b0 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin PA9 */
  GPIO_InitStruct.Pin = LD2_Pin|GPIO_PIN_9;
 80019d0:	f44f 7308 	mov.w	r3, #544	; 0x220
 80019d4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80019d6:	2301      	movs	r3, #1
 80019d8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019da:	2300      	movs	r3, #0
 80019dc:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019de:	2300      	movs	r3, #0
 80019e0:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019e2:	f107 0314 	add.w	r3, r7, #20
 80019e6:	4619      	mov	r1, r3
 80019e8:	4821      	ldr	r0, [pc, #132]	; (8001a70 <MX_GPIO_Init+0x164>)
 80019ea:	f003 fd61 	bl	80054b0 <HAL_GPIO_Init>

  /*Configure GPIO pin : SS_Pin */
  GPIO_InitStruct.Pin = SS_Pin;
 80019ee:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80019f2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80019f4:	2301      	movs	r3, #1
 80019f6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019f8:	2300      	movs	r3, #0
 80019fa:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019fc:	2300      	movs	r3, #0
 80019fe:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SS_GPIO_Port, &GPIO_InitStruct);
 8001a00:	f107 0314 	add.w	r3, r7, #20
 8001a04:	4619      	mov	r1, r3
 8001a06:	481b      	ldr	r0, [pc, #108]	; (8001a74 <MX_GPIO_Init+0x168>)
 8001a08:	f003 fd52 	bl	80054b0 <HAL_GPIO_Init>

  /*Configure GPIO pin : PC7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001a0c:	2380      	movs	r3, #128	; 0x80
 8001a0e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a10:	2301      	movs	r3, #1
 8001a12:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a14:	2300      	movs	r3, #0
 8001a16:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a18:	2300      	movs	r3, #0
 8001a1a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a1c:	f107 0314 	add.w	r3, r7, #20
 8001a20:	4619      	mov	r1, r3
 8001a22:	4815      	ldr	r0, [pc, #84]	; (8001a78 <MX_GPIO_Init+0x16c>)
 8001a24:	f003 fd44 	bl	80054b0 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001a28:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001a2c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001a2e:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8001a32:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a34:	2300      	movs	r3, #0
 8001a36:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a38:	f107 0314 	add.w	r3, r7, #20
 8001a3c:	4619      	mov	r1, r3
 8001a3e:	480c      	ldr	r0, [pc, #48]	; (8001a70 <MX_GPIO_Init+0x164>)
 8001a40:	f003 fd36 	bl	80054b0 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8001a44:	2200      	movs	r2, #0
 8001a46:	2100      	movs	r1, #0
 8001a48:	2017      	movs	r0, #23
 8001a4a:	f003 f8ea 	bl	8004c22 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001a4e:	2017      	movs	r0, #23
 8001a50:	f003 f903 	bl	8004c5a <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8001a54:	2200      	movs	r2, #0
 8001a56:	2100      	movs	r1, #0
 8001a58:	2028      	movs	r0, #40	; 0x28
 8001a5a:	f003 f8e2 	bl	8004c22 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001a5e:	2028      	movs	r0, #40	; 0x28
 8001a60:	f003 f8fb 	bl	8004c5a <HAL_NVIC_EnableIRQ>

}
 8001a64:	bf00      	nop
 8001a66:	3728      	adds	r7, #40	; 0x28
 8001a68:	46bd      	mov	sp, r7
 8001a6a:	bd80      	pop	{r7, pc}
 8001a6c:	40023800 	.word	0x40023800
 8001a70:	40020000 	.word	0x40020000
 8001a74:	40020400 	.word	0x40020400
 8001a78:	40020800 	.word	0x40020800
 8001a7c:	00000000 	.word	0x00000000

08001a80 <CascadeController>:

/* USER CODE BEGIN 4 */

//----------------------------------------------------------------< CONTROL >
void CascadeController()
{
 8001a80:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8001a84:	b088      	sub	sp, #32
 8001a86:	af00      	add	r7, sp, #0
			if(kal_velocity < tra_velo){
				kal_velocity = tra_velo;
			}
		}
	}*/
	if(start_tra == 2){
 8001a88:	4b93      	ldr	r3, [pc, #588]	; (8001cd8 <CascadeController+0x258>)
 8001a8a:	781b      	ldrb	r3, [r3, #0]
 8001a8c:	2b02      	cmp	r3, #2
 8001a8e:	d115      	bne.n	8001abc <CascadeController+0x3c>
		pos_Kp = 4.07697250571067;
 8001a90:	4b92      	ldr	r3, [pc, #584]	; (8001cdc <CascadeController+0x25c>)
 8001a92:	4a93      	ldr	r2, [pc, #588]	; (8001ce0 <CascadeController+0x260>)
 8001a94:	601a      	str	r2, [r3, #0]
		pos_Ki = 3.71617437483172;
 8001a96:	4b93      	ldr	r3, [pc, #588]	; (8001ce4 <CascadeController+0x264>)
 8001a98:	4a93      	ldr	r2, [pc, #588]	; (8001ce8 <CascadeController+0x268>)
 8001a9a:	601a      	str	r2, [r3, #0]
		pos_Kd = 0.75445435315971;
 8001a9c:	4b93      	ldr	r3, [pc, #588]	; (8001cec <CascadeController+0x26c>)
 8001a9e:	4a94      	ldr	r2, [pc, #592]	; (8001cf0 <CascadeController+0x270>)
 8001aa0:	601a      	str	r2, [r3, #0]
		velo_Kp = 1.5;
 8001aa2:	4b94      	ldr	r3, [pc, #592]	; (8001cf4 <CascadeController+0x274>)
 8001aa4:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 8001aa8:	601a      	str	r2, [r3, #0]
		velo_Ki = 0;
 8001aaa:	4b93      	ldr	r3, [pc, #588]	; (8001cf8 <CascadeController+0x278>)
 8001aac:	f04f 0200 	mov.w	r2, #0
 8001ab0:	601a      	str	r2, [r3, #0]
		velo_Kd = 0;
 8001ab2:	4b92      	ldr	r3, [pc, #584]	; (8001cfc <CascadeController+0x27c>)
 8001ab4:	f04f 0200 	mov.w	r2, #0
 8001ab8:	601a      	str	r2, [r3, #0]
 8001aba:	e014      	b.n	8001ae6 <CascadeController+0x66>
	}
	else{
		pos_Kp = 4.07697250571067;
 8001abc:	4b87      	ldr	r3, [pc, #540]	; (8001cdc <CascadeController+0x25c>)
 8001abe:	4a88      	ldr	r2, [pc, #544]	; (8001ce0 <CascadeController+0x260>)
 8001ac0:	601a      	str	r2, [r3, #0]
		pos_Ki = 3.71617437483172;
 8001ac2:	4b88      	ldr	r3, [pc, #544]	; (8001ce4 <CascadeController+0x264>)
 8001ac4:	4a88      	ldr	r2, [pc, #544]	; (8001ce8 <CascadeController+0x268>)
 8001ac6:	601a      	str	r2, [r3, #0]
		pos_Kd = 0.75445435315971;
 8001ac8:	4b88      	ldr	r3, [pc, #544]	; (8001cec <CascadeController+0x26c>)
 8001aca:	4a89      	ldr	r2, [pc, #548]	; (8001cf0 <CascadeController+0x270>)
 8001acc:	601a      	str	r2, [r3, #0]
		velo_Kp = 1.5;
 8001ace:	4b89      	ldr	r3, [pc, #548]	; (8001cf4 <CascadeController+0x274>)
 8001ad0:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 8001ad4:	601a      	str	r2, [r3, #0]
		velo_Ki = 0;
 8001ad6:	4b88      	ldr	r3, [pc, #544]	; (8001cf8 <CascadeController+0x278>)
 8001ad8:	f04f 0200 	mov.w	r2, #0
 8001adc:	601a      	str	r2, [r3, #0]
		velo_Kd = 0;
 8001ade:	4b87      	ldr	r3, [pc, #540]	; (8001cfc <CascadeController+0x27c>)
 8001ae0:	f04f 0200 	mov.w	r2, #0
 8001ae4:	601a      	str	r2, [r3, #0]
	}
	//position control******
	float error2 = tra_pos - current_rad_wrap; //setpoint - new_Data
 8001ae6:	4b86      	ldr	r3, [pc, #536]	; (8001d00 <CascadeController+0x280>)
 8001ae8:	ed93 7a00 	vldr	s14, [r3]
 8001aec:	4b85      	ldr	r3, [pc, #532]	; (8001d04 <CascadeController+0x284>)
 8001aee:	edd3 7a00 	vldr	s15, [r3]
 8001af2:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001af6:	edc7 7a03 	vstr	s15, [r7, #12]
	float proportional2 = pos_Kp * error2;
 8001afa:	4b78      	ldr	r3, [pc, #480]	; (8001cdc <CascadeController+0x25c>)
 8001afc:	edd3 7a00 	vldr	s15, [r3]
 8001b00:	ed97 7a03 	vldr	s14, [r7, #12]
 8001b04:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001b08:	edc7 7a02 	vstr	s15, [r7, #8]
	integrator2 = integrator2 + (0.5*pos_Ki*dt*(error2+prevError2));
 8001b0c:	4b7e      	ldr	r3, [pc, #504]	; (8001d08 <CascadeController+0x288>)
 8001b0e:	681b      	ldr	r3, [r3, #0]
 8001b10:	4618      	mov	r0, r3
 8001b12:	f7fe fcc5 	bl	80004a0 <__aeabi_f2d>
 8001b16:	4604      	mov	r4, r0
 8001b18:	460d      	mov	r5, r1
 8001b1a:	4b72      	ldr	r3, [pc, #456]	; (8001ce4 <CascadeController+0x264>)
 8001b1c:	681b      	ldr	r3, [r3, #0]
 8001b1e:	4618      	mov	r0, r3
 8001b20:	f7fe fcbe 	bl	80004a0 <__aeabi_f2d>
 8001b24:	f04f 0200 	mov.w	r2, #0
 8001b28:	4b78      	ldr	r3, [pc, #480]	; (8001d0c <CascadeController+0x28c>)
 8001b2a:	f7fe fd11 	bl	8000550 <__aeabi_dmul>
 8001b2e:	4602      	mov	r2, r0
 8001b30:	460b      	mov	r3, r1
 8001b32:	4610      	mov	r0, r2
 8001b34:	4619      	mov	r1, r3
 8001b36:	a364      	add	r3, pc, #400	; (adr r3, 8001cc8 <CascadeController+0x248>)
 8001b38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001b3c:	f7fe fd08 	bl	8000550 <__aeabi_dmul>
 8001b40:	4602      	mov	r2, r0
 8001b42:	460b      	mov	r3, r1
 8001b44:	4690      	mov	r8, r2
 8001b46:	4699      	mov	r9, r3
 8001b48:	4b71      	ldr	r3, [pc, #452]	; (8001d10 <CascadeController+0x290>)
 8001b4a:	ed93 7a00 	vldr	s14, [r3]
 8001b4e:	edd7 7a03 	vldr	s15, [r7, #12]
 8001b52:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b56:	ee17 0a90 	vmov	r0, s15
 8001b5a:	f7fe fca1 	bl	80004a0 <__aeabi_f2d>
 8001b5e:	4602      	mov	r2, r0
 8001b60:	460b      	mov	r3, r1
 8001b62:	4640      	mov	r0, r8
 8001b64:	4649      	mov	r1, r9
 8001b66:	f7fe fcf3 	bl	8000550 <__aeabi_dmul>
 8001b6a:	4602      	mov	r2, r0
 8001b6c:	460b      	mov	r3, r1
 8001b6e:	4620      	mov	r0, r4
 8001b70:	4629      	mov	r1, r5
 8001b72:	f7fe fb37 	bl	80001e4 <__adddf3>
 8001b76:	4602      	mov	r2, r0
 8001b78:	460b      	mov	r3, r1
 8001b7a:	4610      	mov	r0, r2
 8001b7c:	4619      	mov	r1, r3
 8001b7e:	f7fe ffb7 	bl	8000af0 <__aeabi_d2f>
 8001b82:	4603      	mov	r3, r0
 8001b84:	4a60      	ldr	r2, [pc, #384]	; (8001d08 <CascadeController+0x288>)
 8001b86:	6013      	str	r3, [r2, #0]
	float limMinInt2, limMaxInt2;
	if(limMax > proportional2){
 8001b88:	4b62      	ldr	r3, [pc, #392]	; (8001d14 <CascadeController+0x294>)
 8001b8a:	edd3 7a00 	vldr	s15, [r3]
 8001b8e:	ed97 7a02 	vldr	s14, [r7, #8]
 8001b92:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001b96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b9a:	d509      	bpl.n	8001bb0 <CascadeController+0x130>
		limMaxInt2 = limMax - proportional2;}
 8001b9c:	4b5d      	ldr	r3, [pc, #372]	; (8001d14 <CascadeController+0x294>)
 8001b9e:	ed93 7a00 	vldr	s14, [r3]
 8001ba2:	edd7 7a02 	vldr	s15, [r7, #8]
 8001ba6:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001baa:	edc7 7a06 	vstr	s15, [r7, #24]
 8001bae:	e002      	b.n	8001bb6 <CascadeController+0x136>
	else{
		limMaxInt2 = 0.0;}
 8001bb0:	f04f 0300 	mov.w	r3, #0
 8001bb4:	61bb      	str	r3, [r7, #24]
	if(limMin < proportional2){
 8001bb6:	4b58      	ldr	r3, [pc, #352]	; (8001d18 <CascadeController+0x298>)
 8001bb8:	edd3 7a00 	vldr	s15, [r3]
 8001bbc:	ed97 7a02 	vldr	s14, [r7, #8]
 8001bc0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001bc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001bc8:	dd09      	ble.n	8001bde <CascadeController+0x15e>
		limMinInt2 = limMin - proportional2;}
 8001bca:	4b53      	ldr	r3, [pc, #332]	; (8001d18 <CascadeController+0x298>)
 8001bcc:	ed93 7a00 	vldr	s14, [r3]
 8001bd0:	edd7 7a02 	vldr	s15, [r7, #8]
 8001bd4:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001bd8:	edc7 7a07 	vstr	s15, [r7, #28]
 8001bdc:	e002      	b.n	8001be4 <CascadeController+0x164>
	else{
		limMinInt2 = 0.0;}
 8001bde:	f04f 0300 	mov.w	r3, #0
 8001be2:	61fb      	str	r3, [r7, #28]
	//Clamp integrator
	if(integrator2 > limMaxInt2){
 8001be4:	4b48      	ldr	r3, [pc, #288]	; (8001d08 <CascadeController+0x288>)
 8001be6:	edd3 7a00 	vldr	s15, [r3]
 8001bea:	ed97 7a06 	vldr	s14, [r7, #24]
 8001bee:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001bf2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001bf6:	d503      	bpl.n	8001c00 <CascadeController+0x180>
		integrator2 = limMaxInt2;}
 8001bf8:	4a43      	ldr	r2, [pc, #268]	; (8001d08 <CascadeController+0x288>)
 8001bfa:	69bb      	ldr	r3, [r7, #24]
 8001bfc:	6013      	str	r3, [r2, #0]
 8001bfe:	e00c      	b.n	8001c1a <CascadeController+0x19a>
	else if(integrator2 < limMinInt2){
 8001c00:	4b41      	ldr	r3, [pc, #260]	; (8001d08 <CascadeController+0x288>)
 8001c02:	edd3 7a00 	vldr	s15, [r3]
 8001c06:	ed97 7a07 	vldr	s14, [r7, #28]
 8001c0a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001c0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001c12:	dd02      	ble.n	8001c1a <CascadeController+0x19a>
		integrator2 = limMinInt2;}
 8001c14:	4a3c      	ldr	r2, [pc, #240]	; (8001d08 <CascadeController+0x288>)
 8001c16:	69fb      	ldr	r3, [r7, #28]
 8001c18:	6013      	str	r3, [r2, #0]

	//differentiator2 = (2*pos_Kd*(kal_position-prevMeasurement2)+(2*tuaall-dt)*differentiator2)/(2*tuaall+dt);
	differentiator2 = error2 - prevError2;
 8001c1a:	4b3d      	ldr	r3, [pc, #244]	; (8001d10 <CascadeController+0x290>)
 8001c1c:	edd3 7a00 	vldr	s15, [r3]
 8001c20:	ed97 7a03 	vldr	s14, [r7, #12]
 8001c24:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001c28:	4b3c      	ldr	r3, [pc, #240]	; (8001d1c <CascadeController+0x29c>)
 8001c2a:	edc3 7a00 	vstr	s15, [r3]
	poscommand = proportional2 + integrator2 + (pos_Kd*differentiator2);
 8001c2e:	4b36      	ldr	r3, [pc, #216]	; (8001d08 <CascadeController+0x288>)
 8001c30:	ed93 7a00 	vldr	s14, [r3]
 8001c34:	edd7 7a02 	vldr	s15, [r7, #8]
 8001c38:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001c3c:	4b2b      	ldr	r3, [pc, #172]	; (8001cec <CascadeController+0x26c>)
 8001c3e:	edd3 6a00 	vldr	s13, [r3]
 8001c42:	4b36      	ldr	r3, [pc, #216]	; (8001d1c <CascadeController+0x29c>)
 8001c44:	edd3 7a00 	vldr	s15, [r3]
 8001c48:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001c4c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c50:	4b33      	ldr	r3, [pc, #204]	; (8001d20 <CascadeController+0x2a0>)
 8001c52:	edc3 7a00 	vstr	s15, [r3]

	//velocity control*******

	if(direct == 1){
 8001c56:	4b33      	ldr	r3, [pc, #204]	; (8001d24 <CascadeController+0x2a4>)
 8001c58:	781b      	ldrb	r3, [r3, #0]
 8001c5a:	2b01      	cmp	r3, #1
 8001c5c:	d16a      	bne.n	8001d34 <CascadeController+0x2b4>
		ch_velo = kal_velocity;
 8001c5e:	4b32      	ldr	r3, [pc, #200]	; (8001d28 <CascadeController+0x2a8>)
 8001c60:	681b      	ldr	r3, [r3, #0]
 8001c62:	4a32      	ldr	r2, [pc, #200]	; (8001d2c <CascadeController+0x2ac>)
 8001c64:	6013      	str	r3, [r2, #0]
		if(ch_velo > limitOmega/9.5493){
 8001c66:	4b31      	ldr	r3, [pc, #196]	; (8001d2c <CascadeController+0x2ac>)
 8001c68:	681b      	ldr	r3, [r3, #0]
 8001c6a:	4618      	mov	r0, r3
 8001c6c:	f7fe fc18 	bl	80004a0 <__aeabi_f2d>
 8001c70:	4604      	mov	r4, r0
 8001c72:	460d      	mov	r5, r1
 8001c74:	4b2e      	ldr	r3, [pc, #184]	; (8001d30 <CascadeController+0x2b0>)
 8001c76:	681b      	ldr	r3, [r3, #0]
 8001c78:	4618      	mov	r0, r3
 8001c7a:	f7fe fc11 	bl	80004a0 <__aeabi_f2d>
 8001c7e:	a314      	add	r3, pc, #80	; (adr r3, 8001cd0 <CascadeController+0x250>)
 8001c80:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c84:	f7fe fd8e 	bl	80007a4 <__aeabi_ddiv>
 8001c88:	4602      	mov	r2, r0
 8001c8a:	460b      	mov	r3, r1
 8001c8c:	4620      	mov	r0, r4
 8001c8e:	4629      	mov	r1, r5
 8001c90:	f7fe feee 	bl	8000a70 <__aeabi_dcmpgt>
 8001c94:	4603      	mov	r3, r0
 8001c96:	2b00      	cmp	r3, #0
 8001c98:	f000 8086 	beq.w	8001da8 <CascadeController+0x328>
			kal_velocity = limitOmega/9.5493;
 8001c9c:	4b24      	ldr	r3, [pc, #144]	; (8001d30 <CascadeController+0x2b0>)
 8001c9e:	681b      	ldr	r3, [r3, #0]
 8001ca0:	4618      	mov	r0, r3
 8001ca2:	f7fe fbfd 	bl	80004a0 <__aeabi_f2d>
 8001ca6:	a30a      	add	r3, pc, #40	; (adr r3, 8001cd0 <CascadeController+0x250>)
 8001ca8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001cac:	f7fe fd7a 	bl	80007a4 <__aeabi_ddiv>
 8001cb0:	4602      	mov	r2, r0
 8001cb2:	460b      	mov	r3, r1
 8001cb4:	4610      	mov	r0, r2
 8001cb6:	4619      	mov	r1, r3
 8001cb8:	f7fe ff1a 	bl	8000af0 <__aeabi_d2f>
 8001cbc:	4603      	mov	r3, r0
 8001cbe:	4a1a      	ldr	r2, [pc, #104]	; (8001d28 <CascadeController+0x2a8>)
 8001cc0:	6013      	str	r3, [r2, #0]
 8001cc2:	e071      	b.n	8001da8 <CascadeController+0x328>
 8001cc4:	f3af 8000 	nop.w
 8001cc8:	47ae147b 	.word	0x47ae147b
 8001ccc:	3f847ae1 	.word	0x3f847ae1
 8001cd0:	d97f62b7 	.word	0xd97f62b7
 8001cd4:	4023193d 	.word	0x4023193d
 8001cd8:	200005e6 	.word	0x200005e6
 8001cdc:	20000000 	.word	0x20000000
 8001ce0:	4082768f 	.word	0x4082768f
 8001ce4:	20000004 	.word	0x20000004
 8001ce8:	406dd5cd 	.word	0x406dd5cd
 8001cec:	20000008 	.word	0x20000008
 8001cf0:	3f4123ec 	.word	0x3f4123ec
 8001cf4:	200004c4 	.word	0x200004c4
 8001cf8:	200004c8 	.word	0x200004c8
 8001cfc:	200004cc 	.word	0x200004cc
 8001d00:	200005b8 	.word	0x200005b8
 8001d04:	20000580 	.word	0x20000580
 8001d08:	20000604 	.word	0x20000604
 8001d0c:	3fe00000 	.word	0x3fe00000
 8001d10:	20000608 	.word	0x20000608
 8001d14:	20000034 	.word	0x20000034
 8001d18:	20000030 	.word	0x20000030
 8001d1c:	2000060c 	.word	0x2000060c
 8001d20:	20000618 	.word	0x20000618
 8001d24:	2000002c 	.word	0x2000002c
 8001d28:	200005b0 	.word	0x200005b0
 8001d2c:	200005ec 	.word	0x200005ec
 8001d30:	20000014 	.word	0x20000014
		}
	}
	else{
		ch_velo = kal_velocity*-1;
 8001d34:	4ba2      	ldr	r3, [pc, #648]	; (8001fc0 <CascadeController+0x540>)
 8001d36:	edd3 7a00 	vldr	s15, [r3]
 8001d3a:	eef1 7a67 	vneg.f32	s15, s15
 8001d3e:	4ba1      	ldr	r3, [pc, #644]	; (8001fc4 <CascadeController+0x544>)
 8001d40:	edc3 7a00 	vstr	s15, [r3]
		if(ch_velo > limitOmega/9.5493){
 8001d44:	4b9f      	ldr	r3, [pc, #636]	; (8001fc4 <CascadeController+0x544>)
 8001d46:	681b      	ldr	r3, [r3, #0]
 8001d48:	4618      	mov	r0, r3
 8001d4a:	f7fe fba9 	bl	80004a0 <__aeabi_f2d>
 8001d4e:	4604      	mov	r4, r0
 8001d50:	460d      	mov	r5, r1
 8001d52:	4b9d      	ldr	r3, [pc, #628]	; (8001fc8 <CascadeController+0x548>)
 8001d54:	681b      	ldr	r3, [r3, #0]
 8001d56:	4618      	mov	r0, r3
 8001d58:	f7fe fba2 	bl	80004a0 <__aeabi_f2d>
 8001d5c:	a394      	add	r3, pc, #592	; (adr r3, 8001fb0 <CascadeController+0x530>)
 8001d5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d62:	f7fe fd1f 	bl	80007a4 <__aeabi_ddiv>
 8001d66:	4602      	mov	r2, r0
 8001d68:	460b      	mov	r3, r1
 8001d6a:	4620      	mov	r0, r4
 8001d6c:	4629      	mov	r1, r5
 8001d6e:	f7fe fe7f 	bl	8000a70 <__aeabi_dcmpgt>
 8001d72:	4603      	mov	r3, r0
 8001d74:	2b00      	cmp	r3, #0
 8001d76:	d017      	beq.n	8001da8 <CascadeController+0x328>
			kal_velocity = (limitOmega/9.5493)*-1;
 8001d78:	4b93      	ldr	r3, [pc, #588]	; (8001fc8 <CascadeController+0x548>)
 8001d7a:	681b      	ldr	r3, [r3, #0]
 8001d7c:	4618      	mov	r0, r3
 8001d7e:	f7fe fb8f 	bl	80004a0 <__aeabi_f2d>
 8001d82:	a38b      	add	r3, pc, #556	; (adr r3, 8001fb0 <CascadeController+0x530>)
 8001d84:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d88:	f7fe fd0c 	bl	80007a4 <__aeabi_ddiv>
 8001d8c:	4602      	mov	r2, r0
 8001d8e:	460b      	mov	r3, r1
 8001d90:	4610      	mov	r0, r2
 8001d92:	4619      	mov	r1, r3
 8001d94:	f7fe feac 	bl	8000af0 <__aeabi_d2f>
 8001d98:	4603      	mov	r3, r0
 8001d9a:	ee07 3a90 	vmov	s15, r3
 8001d9e:	eef1 7a67 	vneg.f32	s15, s15
 8001da2:	4b87      	ldr	r3, [pc, #540]	; (8001fc0 <CascadeController+0x540>)
 8001da4:	edc3 7a00 	vstr	s15, [r3]
		}
	}

	error = tra_velo+poscommand - kal_velocity; //setpoint+poscom - new_Data
 8001da8:	4b88      	ldr	r3, [pc, #544]	; (8001fcc <CascadeController+0x54c>)
 8001daa:	ed93 7a00 	vldr	s14, [r3]
 8001dae:	4b88      	ldr	r3, [pc, #544]	; (8001fd0 <CascadeController+0x550>)
 8001db0:	edd3 7a00 	vldr	s15, [r3]
 8001db4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001db8:	4b81      	ldr	r3, [pc, #516]	; (8001fc0 <CascadeController+0x540>)
 8001dba:	edd3 7a00 	vldr	s15, [r3]
 8001dbe:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001dc2:	4b84      	ldr	r3, [pc, #528]	; (8001fd4 <CascadeController+0x554>)
 8001dc4:	edc3 7a00 	vstr	s15, [r3]
	float proportional = velo_Kp * error;
 8001dc8:	4b83      	ldr	r3, [pc, #524]	; (8001fd8 <CascadeController+0x558>)
 8001dca:	ed93 7a00 	vldr	s14, [r3]
 8001dce:	4b81      	ldr	r3, [pc, #516]	; (8001fd4 <CascadeController+0x554>)
 8001dd0:	edd3 7a00 	vldr	s15, [r3]
 8001dd4:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001dd8:	edc7 7a01 	vstr	s15, [r7, #4]
	integrator = integrator + (0.5*velo_Ki*dt*(error+prevError));
 8001ddc:	4b7f      	ldr	r3, [pc, #508]	; (8001fdc <CascadeController+0x55c>)
 8001dde:	681b      	ldr	r3, [r3, #0]
 8001de0:	4618      	mov	r0, r3
 8001de2:	f7fe fb5d 	bl	80004a0 <__aeabi_f2d>
 8001de6:	4604      	mov	r4, r0
 8001de8:	460d      	mov	r5, r1
 8001dea:	4b7d      	ldr	r3, [pc, #500]	; (8001fe0 <CascadeController+0x560>)
 8001dec:	681b      	ldr	r3, [r3, #0]
 8001dee:	4618      	mov	r0, r3
 8001df0:	f7fe fb56 	bl	80004a0 <__aeabi_f2d>
 8001df4:	f04f 0200 	mov.w	r2, #0
 8001df8:	4b7a      	ldr	r3, [pc, #488]	; (8001fe4 <CascadeController+0x564>)
 8001dfa:	f7fe fba9 	bl	8000550 <__aeabi_dmul>
 8001dfe:	4602      	mov	r2, r0
 8001e00:	460b      	mov	r3, r1
 8001e02:	4610      	mov	r0, r2
 8001e04:	4619      	mov	r1, r3
 8001e06:	a36c      	add	r3, pc, #432	; (adr r3, 8001fb8 <CascadeController+0x538>)
 8001e08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e0c:	f7fe fba0 	bl	8000550 <__aeabi_dmul>
 8001e10:	4602      	mov	r2, r0
 8001e12:	460b      	mov	r3, r1
 8001e14:	4690      	mov	r8, r2
 8001e16:	4699      	mov	r9, r3
 8001e18:	4b6e      	ldr	r3, [pc, #440]	; (8001fd4 <CascadeController+0x554>)
 8001e1a:	ed93 7a00 	vldr	s14, [r3]
 8001e1e:	4b72      	ldr	r3, [pc, #456]	; (8001fe8 <CascadeController+0x568>)
 8001e20:	edd3 7a00 	vldr	s15, [r3]
 8001e24:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001e28:	ee17 0a90 	vmov	r0, s15
 8001e2c:	f7fe fb38 	bl	80004a0 <__aeabi_f2d>
 8001e30:	4602      	mov	r2, r0
 8001e32:	460b      	mov	r3, r1
 8001e34:	4640      	mov	r0, r8
 8001e36:	4649      	mov	r1, r9
 8001e38:	f7fe fb8a 	bl	8000550 <__aeabi_dmul>
 8001e3c:	4602      	mov	r2, r0
 8001e3e:	460b      	mov	r3, r1
 8001e40:	4620      	mov	r0, r4
 8001e42:	4629      	mov	r1, r5
 8001e44:	f7fe f9ce 	bl	80001e4 <__adddf3>
 8001e48:	4602      	mov	r2, r0
 8001e4a:	460b      	mov	r3, r1
 8001e4c:	4610      	mov	r0, r2
 8001e4e:	4619      	mov	r1, r3
 8001e50:	f7fe fe4e 	bl	8000af0 <__aeabi_d2f>
 8001e54:	4603      	mov	r3, r0
 8001e56:	4a61      	ldr	r2, [pc, #388]	; (8001fdc <CascadeController+0x55c>)
 8001e58:	6013      	str	r3, [r2, #0]
	float limMinInt, limMaxInt;
	if(limMax > proportional){
 8001e5a:	4b64      	ldr	r3, [pc, #400]	; (8001fec <CascadeController+0x56c>)
 8001e5c:	edd3 7a00 	vldr	s15, [r3]
 8001e60:	ed97 7a01 	vldr	s14, [r7, #4]
 8001e64:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001e68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001e6c:	d509      	bpl.n	8001e82 <CascadeController+0x402>
		limMaxInt = limMax - proportional;}
 8001e6e:	4b5f      	ldr	r3, [pc, #380]	; (8001fec <CascadeController+0x56c>)
 8001e70:	ed93 7a00 	vldr	s14, [r3]
 8001e74:	edd7 7a01 	vldr	s15, [r7, #4]
 8001e78:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001e7c:	edc7 7a04 	vstr	s15, [r7, #16]
 8001e80:	e002      	b.n	8001e88 <CascadeController+0x408>
	else{
		limMaxInt = 0.0;}
 8001e82:	f04f 0300 	mov.w	r3, #0
 8001e86:	613b      	str	r3, [r7, #16]
	if(limMin < proportional){
 8001e88:	4b59      	ldr	r3, [pc, #356]	; (8001ff0 <CascadeController+0x570>)
 8001e8a:	edd3 7a00 	vldr	s15, [r3]
 8001e8e:	ed97 7a01 	vldr	s14, [r7, #4]
 8001e92:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001e96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001e9a:	dd09      	ble.n	8001eb0 <CascadeController+0x430>
		limMinInt = limMin - proportional;}
 8001e9c:	4b54      	ldr	r3, [pc, #336]	; (8001ff0 <CascadeController+0x570>)
 8001e9e:	ed93 7a00 	vldr	s14, [r3]
 8001ea2:	edd7 7a01 	vldr	s15, [r7, #4]
 8001ea6:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001eaa:	edc7 7a05 	vstr	s15, [r7, #20]
 8001eae:	e002      	b.n	8001eb6 <CascadeController+0x436>
	else{
		limMinInt = 0.0;}
 8001eb0:	f04f 0300 	mov.w	r3, #0
 8001eb4:	617b      	str	r3, [r7, #20]
	//Clamp integrator
	if(integrator > limMaxInt){
 8001eb6:	4b49      	ldr	r3, [pc, #292]	; (8001fdc <CascadeController+0x55c>)
 8001eb8:	edd3 7a00 	vldr	s15, [r3]
 8001ebc:	ed97 7a04 	vldr	s14, [r7, #16]
 8001ec0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001ec4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001ec8:	d503      	bpl.n	8001ed2 <CascadeController+0x452>
		integrator = limMaxInt;}
 8001eca:	4a44      	ldr	r2, [pc, #272]	; (8001fdc <CascadeController+0x55c>)
 8001ecc:	693b      	ldr	r3, [r7, #16]
 8001ece:	6013      	str	r3, [r2, #0]
 8001ed0:	e00c      	b.n	8001eec <CascadeController+0x46c>
	else if(integrator < limMinInt){
 8001ed2:	4b42      	ldr	r3, [pc, #264]	; (8001fdc <CascadeController+0x55c>)
 8001ed4:	edd3 7a00 	vldr	s15, [r3]
 8001ed8:	ed97 7a05 	vldr	s14, [r7, #20]
 8001edc:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001ee0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001ee4:	dd02      	ble.n	8001eec <CascadeController+0x46c>
		integrator = limMinInt;}
 8001ee6:	4a3d      	ldr	r2, [pc, #244]	; (8001fdc <CascadeController+0x55c>)
 8001ee8:	697b      	ldr	r3, [r7, #20]
 8001eea:	6013      	str	r3, [r2, #0]

	//differentiator = (2*velo_Kd*(kal_velocity-prevMeasurement)+(2*tuaall-dt)*differentiator)/(2*tuaall+dt);
	differentiator = error - prevError;
 8001eec:	4b39      	ldr	r3, [pc, #228]	; (8001fd4 <CascadeController+0x554>)
 8001eee:	ed93 7a00 	vldr	s14, [r3]
 8001ef2:	4b3d      	ldr	r3, [pc, #244]	; (8001fe8 <CascadeController+0x568>)
 8001ef4:	edd3 7a00 	vldr	s15, [r3]
 8001ef8:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001efc:	4b3d      	ldr	r3, [pc, #244]	; (8001ff4 <CascadeController+0x574>)
 8001efe:	edc3 7a00 	vstr	s15, [r3]
	volt_controller = proportional + integrator + (velo_Kd*differentiator);
 8001f02:	4b36      	ldr	r3, [pc, #216]	; (8001fdc <CascadeController+0x55c>)
 8001f04:	ed93 7a00 	vldr	s14, [r3]
 8001f08:	edd7 7a01 	vldr	s15, [r7, #4]
 8001f0c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001f10:	4b39      	ldr	r3, [pc, #228]	; (8001ff8 <CascadeController+0x578>)
 8001f12:	edd3 6a00 	vldr	s13, [r3]
 8001f16:	4b37      	ldr	r3, [pc, #220]	; (8001ff4 <CascadeController+0x574>)
 8001f18:	edd3 7a00 	vldr	s15, [r3]
 8001f1c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001f20:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001f24:	4b35      	ldr	r3, [pc, #212]	; (8001ffc <CascadeController+0x57c>)
 8001f26:	edc3 7a00 	vstr	s15, [r3]
	if(volt_controller > 12.0){
 8001f2a:	4b34      	ldr	r3, [pc, #208]	; (8001ffc <CascadeController+0x57c>)
 8001f2c:	edd3 7a00 	vldr	s15, [r3]
 8001f30:	eeb2 7a08 	vmov.f32	s14, #40	; 0x41400000  12.0
 8001f34:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001f38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f3c:	dd03      	ble.n	8001f46 <CascadeController+0x4c6>
		volt_controller = 12.0;}
 8001f3e:	4b2f      	ldr	r3, [pc, #188]	; (8001ffc <CascadeController+0x57c>)
 8001f40:	4a2f      	ldr	r2, [pc, #188]	; (8002000 <CascadeController+0x580>)
 8001f42:	601a      	str	r2, [r3, #0]
 8001f44:	e00c      	b.n	8001f60 <CascadeController+0x4e0>
	else if(volt_controller < -12.0){
 8001f46:	4b2d      	ldr	r3, [pc, #180]	; (8001ffc <CascadeController+0x57c>)
 8001f48:	edd3 7a00 	vldr	s15, [r3]
 8001f4c:	eeba 7a08 	vmov.f32	s14, #168	; 0xc1400000 -12.0
 8001f50:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001f54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f58:	d502      	bpl.n	8001f60 <CascadeController+0x4e0>
		volt_controller = -12.0;}
 8001f5a:	4b28      	ldr	r3, [pc, #160]	; (8001ffc <CascadeController+0x57c>)
 8001f5c:	4a29      	ldr	r2, [pc, #164]	; (8002004 <CascadeController+0x584>)
 8001f5e:	601a      	str	r2, [r3, #0]

	//PIDout = PIDout*10000/12.0;
	PIDout = (volt_inverse+volt_controller)*10000/12.0;
 8001f60:	4b29      	ldr	r3, [pc, #164]	; (8002008 <CascadeController+0x588>)
 8001f62:	ed93 7a00 	vldr	s14, [r3]
 8001f66:	4b25      	ldr	r3, [pc, #148]	; (8001ffc <CascadeController+0x57c>)
 8001f68:	edd3 7a00 	vldr	s15, [r3]
 8001f6c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001f70:	ed9f 7a26 	vldr	s14, [pc, #152]	; 800200c <CascadeController+0x58c>
 8001f74:	ee27 7a87 	vmul.f32	s14, s15, s14
 8001f78:	eef2 6a08 	vmov.f32	s13, #40	; 0x41400000  12.0
 8001f7c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001f80:	4b23      	ldr	r3, [pc, #140]	; (8002010 <CascadeController+0x590>)
 8001f82:	edc3 7a00 	vstr	s15, [r3]
			if(PIDout < 0){
				PIDout = 0;
			}
		}
	}*/
	prevError2 = error2;
 8001f86:	4a23      	ldr	r2, [pc, #140]	; (8002014 <CascadeController+0x594>)
 8001f88:	68fb      	ldr	r3, [r7, #12]
 8001f8a:	6013      	str	r3, [r2, #0]
	prevMeasurement2 = current_rad_wrap;
 8001f8c:	4b22      	ldr	r3, [pc, #136]	; (8002018 <CascadeController+0x598>)
 8001f8e:	681b      	ldr	r3, [r3, #0]
 8001f90:	4a22      	ldr	r2, [pc, #136]	; (800201c <CascadeController+0x59c>)
 8001f92:	6013      	str	r3, [r2, #0]
	prevError = error;
 8001f94:	4b0f      	ldr	r3, [pc, #60]	; (8001fd4 <CascadeController+0x554>)
 8001f96:	681b      	ldr	r3, [r3, #0]
 8001f98:	4a13      	ldr	r2, [pc, #76]	; (8001fe8 <CascadeController+0x568>)
 8001f9a:	6013      	str	r3, [r2, #0]
	prevMeasurement = kal_velocity;
 8001f9c:	4b08      	ldr	r3, [pc, #32]	; (8001fc0 <CascadeController+0x540>)
 8001f9e:	681b      	ldr	r3, [r3, #0]
 8001fa0:	4a1f      	ldr	r2, [pc, #124]	; (8002020 <CascadeController+0x5a0>)
 8001fa2:	6013      	str	r3, [r2, #0]
}
 8001fa4:	bf00      	nop
 8001fa6:	3720      	adds	r7, #32
 8001fa8:	46bd      	mov	sp, r7
 8001faa:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8001fae:	bf00      	nop
 8001fb0:	d97f62b7 	.word	0xd97f62b7
 8001fb4:	4023193d 	.word	0x4023193d
 8001fb8:	47ae147b 	.word	0x47ae147b
 8001fbc:	3f847ae1 	.word	0x3f847ae1
 8001fc0:	200005b0 	.word	0x200005b0
 8001fc4:	200005ec 	.word	0x200005ec
 8001fc8:	20000014 	.word	0x20000014
 8001fcc:	200005bc 	.word	0x200005bc
 8001fd0:	20000618 	.word	0x20000618
 8001fd4:	2000061c 	.word	0x2000061c
 8001fd8:	200004c4 	.word	0x200004c4
 8001fdc:	200005f4 	.word	0x200005f4
 8001fe0:	200004c8 	.word	0x200004c8
 8001fe4:	3fe00000 	.word	0x3fe00000
 8001fe8:	200005f8 	.word	0x200005f8
 8001fec:	20000034 	.word	0x20000034
 8001ff0:	20000030 	.word	0x20000030
 8001ff4:	200005fc 	.word	0x200005fc
 8001ff8:	200004cc 	.word	0x200004cc
 8001ffc:	20000620 	.word	0x20000620
 8002000:	41400000 	.word	0x41400000
 8002004:	c1400000 	.word	0xc1400000
 8002008:	200007cc 	.word	0x200007cc
 800200c:	461c4000 	.word	0x461c4000
 8002010:	20000614 	.word	0x20000614
 8002014:	20000608 	.word	0x20000608
 8002018:	20000580 	.word	0x20000580
 800201c:	20000610 	.word	0x20000610
 8002020:	20000600 	.word	0x20000600

08002024 <reset>:

void reset()
{
 8002024:	b580      	push	{r7, lr}
 8002026:	af00      	add	r7, sp, #0
	tuaall = 0;
 8002028:	4b09      	ldr	r3, [pc, #36]	; (8002050 <reset+0x2c>)
 800202a:	f04f 0200 	mov.w	r2, #0
 800202e:	601a      	str	r2, [r3, #0]
	Drivemotor(0);
 8002030:	2000      	movs	r0, #0
 8002032:	f001 f811 	bl	8003058 <Drivemotor>
	PIDon = 0;
 8002036:	4b07      	ldr	r3, [pc, #28]	; (8002054 <reset+0x30>)
 8002038:	2200      	movs	r2, #0
 800203a:	701a      	strb	r2, [r3, #0]
	PIDout = 0;
 800203c:	4b06      	ldr	r3, [pc, #24]	; (8002058 <reset+0x34>)
 800203e:	f04f 0200 	mov.w	r2, #0
 8002042:	601a      	str	r2, [r3, #0]
	finish = 0;
 8002044:	4b05      	ldr	r3, [pc, #20]	; (800205c <reset+0x38>)
 8002046:	f04f 0200 	mov.w	r2, #0
 800204a:	601a      	str	r2, [r3, #0]
}
 800204c:	bf00      	nop
 800204e:	bd80      	pop	{r7, pc}
 8002050:	200005d4 	.word	0x200005d4
 8002054:	200005e8 	.word	0x200005e8
 8002058:	20000614 	.word	0x20000614
 800205c:	200005f0 	.word	0x200005f0

08002060 <set_initial>:

void set_initial()
{
 8002060:	b580      	push	{r7, lr}
 8002062:	af00      	add	r7, sp, #0
	  static uint64_t timeset2 = 0;
	  if (timeset2 < 500000) {
 8002064:	4b2a      	ldr	r3, [pc, #168]	; (8002110 <set_initial+0xb0>)
 8002066:	e9d3 2300 	ldrd	r2, r3, [r3]
 800206a:	492a      	ldr	r1, [pc, #168]	; (8002114 <set_initial+0xb4>)
 800206c:	428a      	cmp	r2, r1
 800206e:	f173 0300 	sbcs.w	r3, r3, #0
 8002072:	d203      	bcs.n	800207c <set_initial+0x1c>
		  Drivemotor(-2500);
 8002074:	4828      	ldr	r0, [pc, #160]	; (8002118 <set_initial+0xb8>)
 8002076:	f000 ffef 	bl	8003058 <Drivemotor>
 800207a:	e038      	b.n	80020ee <set_initial+0x8e>
		  ;}
	  else if (timeset2 < 1500000) {
 800207c:	4b24      	ldr	r3, [pc, #144]	; (8002110 <set_initial+0xb0>)
 800207e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002082:	4926      	ldr	r1, [pc, #152]	; (800211c <set_initial+0xbc>)
 8002084:	428a      	cmp	r2, r1
 8002086:	f173 0300 	sbcs.w	r3, r3, #0
 800208a:	d204      	bcs.n	8002096 <set_initial+0x36>
		  Drivemotor(2500);
 800208c:	f640 10c4 	movw	r0, #2500	; 0x9c4
 8002090:	f000 ffe2 	bl	8003058 <Drivemotor>
 8002094:	e02b      	b.n	80020ee <set_initial+0x8e>
		  ;}
	  else{
		  Drivemotor(-2500);
 8002096:	4820      	ldr	r0, [pc, #128]	; (8002118 <set_initial+0xb8>)
 8002098:	f000 ffde 	bl	8003058 <Drivemotor>
		  if(current_rad >= 1.55 && current_rad <= 1.6){
 800209c:	4b20      	ldr	r3, [pc, #128]	; (8002120 <set_initial+0xc0>)
 800209e:	681b      	ldr	r3, [r3, #0]
 80020a0:	4618      	mov	r0, r3
 80020a2:	f7fe f9fd 	bl	80004a0 <__aeabi_f2d>
 80020a6:	a316      	add	r3, pc, #88	; (adr r3, 8002100 <set_initial+0xa0>)
 80020a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020ac:	f7fe fcd6 	bl	8000a5c <__aeabi_dcmpge>
 80020b0:	4603      	mov	r3, r0
 80020b2:	2b00      	cmp	r3, #0
 80020b4:	d01b      	beq.n	80020ee <set_initial+0x8e>
 80020b6:	4b1a      	ldr	r3, [pc, #104]	; (8002120 <set_initial+0xc0>)
 80020b8:	681b      	ldr	r3, [r3, #0]
 80020ba:	4618      	mov	r0, r3
 80020bc:	f7fe f9f0 	bl	80004a0 <__aeabi_f2d>
 80020c0:	a311      	add	r3, pc, #68	; (adr r3, 8002108 <set_initial+0xa8>)
 80020c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020c6:	f7fe fcbf 	bl	8000a48 <__aeabi_dcmple>
 80020ca:	4603      	mov	r3, r0
 80020cc:	2b00      	cmp	r3, #0
 80020ce:	d00e      	beq.n	80020ee <set_initial+0x8e>
			  Reached = 1;
 80020d0:	4b14      	ldr	r3, [pc, #80]	; (8002124 <set_initial+0xc4>)
 80020d2:	2201      	movs	r2, #1
 80020d4:	701a      	strb	r2, [r3, #0]
			  HMEtimeStamp = HAL_GetTick();
 80020d6:	f002 fcbd 	bl	8004a54 <HAL_GetTick>
 80020da:	4603      	mov	r3, r0
 80020dc:	b29a      	uxth	r2, r3
 80020de:	4b12      	ldr	r3, [pc, #72]	; (8002128 <set_initial+0xc8>)
 80020e0:	801a      	strh	r2, [r3, #0]
			  setinitial = 0;
 80020e2:	4b12      	ldr	r3, [pc, #72]	; (800212c <set_initial+0xcc>)
 80020e4:	2200      	movs	r2, #0
 80020e6:	701a      	strb	r2, [r3, #0]
			  Drivemotor(0);
 80020e8:	2000      	movs	r0, #0
 80020ea:	f000 ffb5 	bl	8003058 <Drivemotor>
		  }
	  }
	  timeset2 = micros();
 80020ee:	f001 fb09 	bl	8003704 <micros>
 80020f2:	4602      	mov	r2, r0
 80020f4:	460b      	mov	r3, r1
 80020f6:	4906      	ldr	r1, [pc, #24]	; (8002110 <set_initial+0xb0>)
 80020f8:	e9c1 2300 	strd	r2, r3, [r1]
}
 80020fc:	bf00      	nop
 80020fe:	bd80      	pop	{r7, pc}
 8002100:	cccccccd 	.word	0xcccccccd
 8002104:	3ff8cccc 	.word	0x3ff8cccc
 8002108:	9999999a 	.word	0x9999999a
 800210c:	3ff99999 	.word	0x3ff99999
 8002110:	20000800 	.word	0x20000800
 8002114:	0007a120 	.word	0x0007a120
 8002118:	fffff63c 	.word	0xfffff63c
 800211c:	0016e360 	.word	0x0016e360
 8002120:	2000057c 	.word	0x2000057c
 8002124:	2000053b 	.word	0x2000053b
 8002128:	2000056c 	.word	0x2000056c
 800212c:	2000000c 	.word	0x2000000c

08002130 <set_home>:

void set_home()
{
 8002130:	b580      	push	{r7, lr}
 8002132:	af00      	add	r7, sp, #0
	  Drivemotor(-2500);
 8002134:	480e      	ldr	r0, [pc, #56]	; (8002170 <set_home+0x40>)
 8002136:	f000 ff8f 	bl	8003058 <Drivemotor>
	  if(current_rad_wrap <= 0){
 800213a:	4b0e      	ldr	r3, [pc, #56]	; (8002174 <set_home+0x44>)
 800213c:	edd3 7a00 	vldr	s15, [r3]
 8002140:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002144:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002148:	d900      	bls.n	800214c <set_home+0x1c>
		  Reached = 1;
		  HMEtimeStamp = HAL_GetTick();
		  setzero = 0;
		  Drivemotor(0);
	  }
}
 800214a:	e00e      	b.n	800216a <set_home+0x3a>
		  Reached = 1;
 800214c:	4b0a      	ldr	r3, [pc, #40]	; (8002178 <set_home+0x48>)
 800214e:	2201      	movs	r2, #1
 8002150:	701a      	strb	r2, [r3, #0]
		  HMEtimeStamp = HAL_GetTick();
 8002152:	f002 fc7f 	bl	8004a54 <HAL_GetTick>
 8002156:	4603      	mov	r3, r0
 8002158:	b29a      	uxth	r2, r3
 800215a:	4b08      	ldr	r3, [pc, #32]	; (800217c <set_home+0x4c>)
 800215c:	801a      	strh	r2, [r3, #0]
		  setzero = 0;
 800215e:	4b08      	ldr	r3, [pc, #32]	; (8002180 <set_home+0x50>)
 8002160:	2200      	movs	r2, #0
 8002162:	701a      	strb	r2, [r3, #0]
		  Drivemotor(0);
 8002164:	2000      	movs	r0, #0
 8002166:	f000 ff77 	bl	8003058 <Drivemotor>
}
 800216a:	bf00      	nop
 800216c:	bd80      	pop	{r7, pc}
 800216e:	bf00      	nop
 8002170:	fffff63c 	.word	0xfffff63c
 8002174:	20000580 	.word	0x20000580
 8002178:	2000053b 	.word	0x2000053b
 800217c:	2000056c 	.word	0x2000056c
 8002180:	2000059c 	.word	0x2000059c
 8002184:	00000000 	.word	0x00000000

08002188 <MoveToStation>:

void MoveToStation()
{
 8002188:	b580      	push	{r7, lr}
 800218a:	af00      	add	r7, sp, #0
	  topOmega = 0;
 800218c:	4b26      	ldr	r3, [pc, #152]	; (8002228 <MoveToStation+0xa0>)
 800218e:	f04f 0200 	mov.w	r2, #0
 8002192:	601a      	str	r2, [r3, #0]
//			  postotra = postotra*-1;
//			  direct = 0;}
//		  State = Working;
//		  update = 0;
//	  }
	  inputpos = Destination[n]/57.2957795;
 8002194:	4b25      	ldr	r3, [pc, #148]	; (800222c <MoveToStation+0xa4>)
 8002196:	781b      	ldrb	r3, [r3, #0]
 8002198:	461a      	mov	r2, r3
 800219a:	4b25      	ldr	r3, [pc, #148]	; (8002230 <MoveToStation+0xa8>)
 800219c:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80021a0:	4618      	mov	r0, r3
 80021a2:	f7fe f96b 	bl	800047c <__aeabi_i2d>
 80021a6:	a31e      	add	r3, pc, #120	; (adr r3, 8002220 <MoveToStation+0x98>)
 80021a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021ac:	f7fe fafa 	bl	80007a4 <__aeabi_ddiv>
 80021b0:	4602      	mov	r2, r0
 80021b2:	460b      	mov	r3, r1
 80021b4:	4610      	mov	r0, r2
 80021b6:	4619      	mov	r1, r3
 80021b8:	f7fe fc9a 	bl	8000af0 <__aeabi_d2f>
 80021bc:	4603      	mov	r3, r0
 80021be:	4a1d      	ldr	r2, [pc, #116]	; (8002234 <MoveToStation+0xac>)
 80021c0:	6013      	str	r3, [r2, #0]
	  postotra = inputpos-current_rad_wrap;
 80021c2:	4b1c      	ldr	r3, [pc, #112]	; (8002234 <MoveToStation+0xac>)
 80021c4:	ed93 7a00 	vldr	s14, [r3]
 80021c8:	4b1b      	ldr	r3, [pc, #108]	; (8002238 <MoveToStation+0xb0>)
 80021ca:	edd3 7a00 	vldr	s15, [r3]
 80021ce:	ee77 7a67 	vsub.f32	s15, s14, s15
 80021d2:	4b1a      	ldr	r3, [pc, #104]	; (800223c <MoveToStation+0xb4>)
 80021d4:	edc3 7a00 	vstr	s15, [r3]
	  rad_before = current_rad_wrap;
 80021d8:	4b17      	ldr	r3, [pc, #92]	; (8002238 <MoveToStation+0xb0>)
 80021da:	681b      	ldr	r3, [r3, #0]
 80021dc:	4a18      	ldr	r2, [pc, #96]	; (8002240 <MoveToStation+0xb8>)
 80021de:	6013      	str	r3, [r2, #0]
	  if(postotra >= 0){
 80021e0:	4b16      	ldr	r3, [pc, #88]	; (800223c <MoveToStation+0xb4>)
 80021e2:	edd3 7a00 	vldr	s15, [r3]
 80021e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80021ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80021ee:	db03      	blt.n	80021f8 <MoveToStation+0x70>
		  direct = 1;}
 80021f0:	4b14      	ldr	r3, [pc, #80]	; (8002244 <MoveToStation+0xbc>)
 80021f2:	2201      	movs	r2, #1
 80021f4:	701a      	strb	r2, [r3, #0]
 80021f6:	e00a      	b.n	800220e <MoveToStation+0x86>
	  else{
		  postotra = postotra*-1;
 80021f8:	4b10      	ldr	r3, [pc, #64]	; (800223c <MoveToStation+0xb4>)
 80021fa:	edd3 7a00 	vldr	s15, [r3]
 80021fe:	eef1 7a67 	vneg.f32	s15, s15
 8002202:	4b0e      	ldr	r3, [pc, #56]	; (800223c <MoveToStation+0xb4>)
 8002204:	edc3 7a00 	vstr	s15, [r3]
		  direct = 0;}
 8002208:	4b0e      	ldr	r3, [pc, #56]	; (8002244 <MoveToStation+0xbc>)
 800220a:	2200      	movs	r2, #0
 800220c:	701a      	strb	r2, [r3, #0]
	  State = Working;
 800220e:	4b0e      	ldr	r3, [pc, #56]	; (8002248 <MoveToStation+0xc0>)
 8002210:	2201      	movs	r2, #1
 8002212:	701a      	strb	r2, [r3, #0]
	  update = 0;
 8002214:	4b0d      	ldr	r3, [pc, #52]	; (800224c <MoveToStation+0xc4>)
 8002216:	2200      	movs	r2, #0
 8002218:	701a      	strb	r2, [r3, #0]
}
 800221a:	bf00      	nop
 800221c:	bd80      	pop	{r7, pc}
 800221e:	bf00      	nop
 8002220:	1a47a9e3 	.word	0x1a47a9e3
 8002224:	404ca5dc 	.word	0x404ca5dc
 8002228:	20000544 	.word	0x20000544
 800222c:	20000548 	.word	0x20000548
 8002230:	200004d4 	.word	0x200004d4
 8002234:	200005d8 	.word	0x200005d8
 8002238:	20000580 	.word	0x20000580
 800223c:	200005dc 	.word	0x200005dc
 8002240:	200005e0 	.word	0x200005e0
 8002244:	2000002c 	.word	0x2000002c
 8002248:	200005e7 	.word	0x200005e7
 800224c:	200005e4 	.word	0x200005e4

08002250 <inverse_tran>:

void inverse_tran(){
 8002250:	b5b0      	push	{r4, r5, r7, lr}
 8002252:	af00      	add	r7, sp, #0
	x_n = tra_velo;
 8002254:	4b3a      	ldr	r3, [pc, #232]	; (8002340 <inverse_tran+0xf0>)
 8002256:	681b      	ldr	r3, [r3, #0]
 8002258:	4a3a      	ldr	r2, [pc, #232]	; (8002344 <inverse_tran+0xf4>)
 800225a:	6013      	str	r3, [r2, #0]
	volt_inverse = (x_n - (0.9724*x_n_1) + (0.003346*x_n_2) - (0.0004612*y_n_1))/0.002803;
 800225c:	4b39      	ldr	r3, [pc, #228]	; (8002344 <inverse_tran+0xf4>)
 800225e:	681b      	ldr	r3, [r3, #0]
 8002260:	4618      	mov	r0, r3
 8002262:	f7fe f91d 	bl	80004a0 <__aeabi_f2d>
 8002266:	4604      	mov	r4, r0
 8002268:	460d      	mov	r5, r1
 800226a:	4b37      	ldr	r3, [pc, #220]	; (8002348 <inverse_tran+0xf8>)
 800226c:	681b      	ldr	r3, [r3, #0]
 800226e:	4618      	mov	r0, r3
 8002270:	f7fe f916 	bl	80004a0 <__aeabi_f2d>
 8002274:	a32a      	add	r3, pc, #168	; (adr r3, 8002320 <inverse_tran+0xd0>)
 8002276:	e9d3 2300 	ldrd	r2, r3, [r3]
 800227a:	f7fe f969 	bl	8000550 <__aeabi_dmul>
 800227e:	4602      	mov	r2, r0
 8002280:	460b      	mov	r3, r1
 8002282:	4620      	mov	r0, r4
 8002284:	4629      	mov	r1, r5
 8002286:	f7fd ffab 	bl	80001e0 <__aeabi_dsub>
 800228a:	4602      	mov	r2, r0
 800228c:	460b      	mov	r3, r1
 800228e:	4614      	mov	r4, r2
 8002290:	461d      	mov	r5, r3
 8002292:	4b2e      	ldr	r3, [pc, #184]	; (800234c <inverse_tran+0xfc>)
 8002294:	681b      	ldr	r3, [r3, #0]
 8002296:	4618      	mov	r0, r3
 8002298:	f7fe f902 	bl	80004a0 <__aeabi_f2d>
 800229c:	a322      	add	r3, pc, #136	; (adr r3, 8002328 <inverse_tran+0xd8>)
 800229e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022a2:	f7fe f955 	bl	8000550 <__aeabi_dmul>
 80022a6:	4602      	mov	r2, r0
 80022a8:	460b      	mov	r3, r1
 80022aa:	4620      	mov	r0, r4
 80022ac:	4629      	mov	r1, r5
 80022ae:	f7fd ff99 	bl	80001e4 <__adddf3>
 80022b2:	4602      	mov	r2, r0
 80022b4:	460b      	mov	r3, r1
 80022b6:	4614      	mov	r4, r2
 80022b8:	461d      	mov	r5, r3
 80022ba:	4b25      	ldr	r3, [pc, #148]	; (8002350 <inverse_tran+0x100>)
 80022bc:	681b      	ldr	r3, [r3, #0]
 80022be:	4618      	mov	r0, r3
 80022c0:	f7fe f8ee 	bl	80004a0 <__aeabi_f2d>
 80022c4:	a31a      	add	r3, pc, #104	; (adr r3, 8002330 <inverse_tran+0xe0>)
 80022c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022ca:	f7fe f941 	bl	8000550 <__aeabi_dmul>
 80022ce:	4602      	mov	r2, r0
 80022d0:	460b      	mov	r3, r1
 80022d2:	4620      	mov	r0, r4
 80022d4:	4629      	mov	r1, r5
 80022d6:	f7fd ff83 	bl	80001e0 <__aeabi_dsub>
 80022da:	4602      	mov	r2, r0
 80022dc:	460b      	mov	r3, r1
 80022de:	4610      	mov	r0, r2
 80022e0:	4619      	mov	r1, r3
 80022e2:	a315      	add	r3, pc, #84	; (adr r3, 8002338 <inverse_tran+0xe8>)
 80022e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022e8:	f7fe fa5c 	bl	80007a4 <__aeabi_ddiv>
 80022ec:	4602      	mov	r2, r0
 80022ee:	460b      	mov	r3, r1
 80022f0:	4610      	mov	r0, r2
 80022f2:	4619      	mov	r1, r3
 80022f4:	f7fe fbfc 	bl	8000af0 <__aeabi_d2f>
 80022f8:	4603      	mov	r3, r0
 80022fa:	4a16      	ldr	r2, [pc, #88]	; (8002354 <inverse_tran+0x104>)
 80022fc:	6013      	str	r3, [r2, #0]
	x_n_2 = x_n_1;
 80022fe:	4b12      	ldr	r3, [pc, #72]	; (8002348 <inverse_tran+0xf8>)
 8002300:	681b      	ldr	r3, [r3, #0]
 8002302:	4a12      	ldr	r2, [pc, #72]	; (800234c <inverse_tran+0xfc>)
 8002304:	6013      	str	r3, [r2, #0]
	x_n_1 = x_n;
 8002306:	4b0f      	ldr	r3, [pc, #60]	; (8002344 <inverse_tran+0xf4>)
 8002308:	681b      	ldr	r3, [r3, #0]
 800230a:	4a0f      	ldr	r2, [pc, #60]	; (8002348 <inverse_tran+0xf8>)
 800230c:	6013      	str	r3, [r2, #0]
	y_n_1 = volt_inverse;
 800230e:	4b11      	ldr	r3, [pc, #68]	; (8002354 <inverse_tran+0x104>)
 8002310:	681b      	ldr	r3, [r3, #0]
 8002312:	4a0f      	ldr	r2, [pc, #60]	; (8002350 <inverse_tran+0x100>)
 8002314:	6013      	str	r3, [r2, #0]
}
 8002316:	bf00      	nop
 8002318:	bdb0      	pop	{r4, r5, r7, pc}
 800231a:	bf00      	nop
 800231c:	f3af 8000 	nop.w
 8002320:	9ad42c3d 	.word	0x9ad42c3d
 8002324:	3fef1de6 	.word	0x3fef1de6
 8002328:	12513b5c 	.word	0x12513b5c
 800232c:	3f6b6912 	.word	0x3f6b6912
 8002330:	eabaf45d 	.word	0xeabaf45d
 8002334:	3f3e39a6 	.word	0x3f3e39a6
 8002338:	2a94ff00 	.word	0x2a94ff00
 800233c:	3f66f651 	.word	0x3f66f651
 8002340:	200005bc 	.word	0x200005bc
 8002344:	200007d0 	.word	0x200007d0
 8002348:	200007d4 	.word	0x200007d4
 800234c:	200007d8 	.word	0x200007d8
 8002350:	200007dc 	.word	0x200007dc
 8002354:	200007cc 	.word	0x200007cc

08002358 <lowpass>:
void lowpass()
{
 8002358:	b5b0      	push	{r4, r5, r7, lr}
 800235a:	af00      	add	r7, sp, #0
	velo_lowpass = 0.99529869*velo_lowpass + 0.00235066*kal_velocity + 0.00235066*prevlowpass;
 800235c:	4b48      	ldr	r3, [pc, #288]	; (8002480 <lowpass+0x128>)
 800235e:	681b      	ldr	r3, [r3, #0]
 8002360:	4618      	mov	r0, r3
 8002362:	f7fe f89d 	bl	80004a0 <__aeabi_f2d>
 8002366:	a33e      	add	r3, pc, #248	; (adr r3, 8002460 <lowpass+0x108>)
 8002368:	e9d3 2300 	ldrd	r2, r3, [r3]
 800236c:	f7fe f8f0 	bl	8000550 <__aeabi_dmul>
 8002370:	4602      	mov	r2, r0
 8002372:	460b      	mov	r3, r1
 8002374:	4614      	mov	r4, r2
 8002376:	461d      	mov	r5, r3
 8002378:	4b42      	ldr	r3, [pc, #264]	; (8002484 <lowpass+0x12c>)
 800237a:	681b      	ldr	r3, [r3, #0]
 800237c:	4618      	mov	r0, r3
 800237e:	f7fe f88f 	bl	80004a0 <__aeabi_f2d>
 8002382:	a339      	add	r3, pc, #228	; (adr r3, 8002468 <lowpass+0x110>)
 8002384:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002388:	f7fe f8e2 	bl	8000550 <__aeabi_dmul>
 800238c:	4602      	mov	r2, r0
 800238e:	460b      	mov	r3, r1
 8002390:	4620      	mov	r0, r4
 8002392:	4629      	mov	r1, r5
 8002394:	f7fd ff26 	bl	80001e4 <__adddf3>
 8002398:	4602      	mov	r2, r0
 800239a:	460b      	mov	r3, r1
 800239c:	4614      	mov	r4, r2
 800239e:	461d      	mov	r5, r3
 80023a0:	4b39      	ldr	r3, [pc, #228]	; (8002488 <lowpass+0x130>)
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	4618      	mov	r0, r3
 80023a6:	f7fe f87b 	bl	80004a0 <__aeabi_f2d>
 80023aa:	a32f      	add	r3, pc, #188	; (adr r3, 8002468 <lowpass+0x110>)
 80023ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023b0:	f7fe f8ce 	bl	8000550 <__aeabi_dmul>
 80023b4:	4602      	mov	r2, r0
 80023b6:	460b      	mov	r3, r1
 80023b8:	4620      	mov	r0, r4
 80023ba:	4629      	mov	r1, r5
 80023bc:	f7fd ff12 	bl	80001e4 <__adddf3>
 80023c0:	4602      	mov	r2, r0
 80023c2:	460b      	mov	r3, r1
 80023c4:	4610      	mov	r0, r2
 80023c6:	4619      	mov	r1, r3
 80023c8:	f7fe fb92 	bl	8000af0 <__aeabi_d2f>
 80023cc:	4603      	mov	r3, r0
 80023ce:	4a2c      	ldr	r2, [pc, #176]	; (8002480 <lowpass+0x128>)
 80023d0:	6013      	str	r3, [r2, #0]
	prevlowpass = kal_velocity;
 80023d2:	4b2c      	ldr	r3, [pc, #176]	; (8002484 <lowpass+0x12c>)
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	4a2c      	ldr	r2, [pc, #176]	; (8002488 <lowpass+0x130>)
 80023d8:	6013      	str	r3, [r2, #0]
	pos_lowpass = 0.96906992*pos_lowpass + 0.01546504*current_rad_wrap + 0.01546504*prevposlowpass;
 80023da:	4b2c      	ldr	r3, [pc, #176]	; (800248c <lowpass+0x134>)
 80023dc:	681b      	ldr	r3, [r3, #0]
 80023de:	4618      	mov	r0, r3
 80023e0:	f7fe f85e 	bl	80004a0 <__aeabi_f2d>
 80023e4:	a322      	add	r3, pc, #136	; (adr r3, 8002470 <lowpass+0x118>)
 80023e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023ea:	f7fe f8b1 	bl	8000550 <__aeabi_dmul>
 80023ee:	4602      	mov	r2, r0
 80023f0:	460b      	mov	r3, r1
 80023f2:	4614      	mov	r4, r2
 80023f4:	461d      	mov	r5, r3
 80023f6:	4b26      	ldr	r3, [pc, #152]	; (8002490 <lowpass+0x138>)
 80023f8:	681b      	ldr	r3, [r3, #0]
 80023fa:	4618      	mov	r0, r3
 80023fc:	f7fe f850 	bl	80004a0 <__aeabi_f2d>
 8002400:	a31d      	add	r3, pc, #116	; (adr r3, 8002478 <lowpass+0x120>)
 8002402:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002406:	f7fe f8a3 	bl	8000550 <__aeabi_dmul>
 800240a:	4602      	mov	r2, r0
 800240c:	460b      	mov	r3, r1
 800240e:	4620      	mov	r0, r4
 8002410:	4629      	mov	r1, r5
 8002412:	f7fd fee7 	bl	80001e4 <__adddf3>
 8002416:	4602      	mov	r2, r0
 8002418:	460b      	mov	r3, r1
 800241a:	4614      	mov	r4, r2
 800241c:	461d      	mov	r5, r3
 800241e:	4b1d      	ldr	r3, [pc, #116]	; (8002494 <lowpass+0x13c>)
 8002420:	681b      	ldr	r3, [r3, #0]
 8002422:	4618      	mov	r0, r3
 8002424:	f7fe f83c 	bl	80004a0 <__aeabi_f2d>
 8002428:	a313      	add	r3, pc, #76	; (adr r3, 8002478 <lowpass+0x120>)
 800242a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800242e:	f7fe f88f 	bl	8000550 <__aeabi_dmul>
 8002432:	4602      	mov	r2, r0
 8002434:	460b      	mov	r3, r1
 8002436:	4620      	mov	r0, r4
 8002438:	4629      	mov	r1, r5
 800243a:	f7fd fed3 	bl	80001e4 <__adddf3>
 800243e:	4602      	mov	r2, r0
 8002440:	460b      	mov	r3, r1
 8002442:	4610      	mov	r0, r2
 8002444:	4619      	mov	r1, r3
 8002446:	f7fe fb53 	bl	8000af0 <__aeabi_d2f>
 800244a:	4603      	mov	r3, r0
 800244c:	4a0f      	ldr	r2, [pc, #60]	; (800248c <lowpass+0x134>)
 800244e:	6013      	str	r3, [r2, #0]
	prevposlowpass = current_rad_wrap;
 8002450:	4b0f      	ldr	r3, [pc, #60]	; (8002490 <lowpass+0x138>)
 8002452:	681b      	ldr	r3, [r3, #0]
 8002454:	4a0f      	ldr	r2, [pc, #60]	; (8002494 <lowpass+0x13c>)
 8002456:	6013      	str	r3, [r2, #0]
}
 8002458:	bf00      	nop
 800245a:	bdb0      	pop	{r4, r5, r7, pc}
 800245c:	f3af 8000 	nop.w
 8002460:	a369a70e 	.word	0xa369a70e
 8002464:	3fefd97c 	.word	0x3fefd97c
 8002468:	fa5e5576 	.word	0xfa5e5576
 800246c:	3f6341b0 	.word	0x3f6341b0
 8002470:	ebbdfea9 	.word	0xebbdfea9
 8002474:	3fef029e 	.word	0x3fef029e
 8002478:	88402ae8 	.word	0x88402ae8
 800247c:	3f8fac22 	.word	0x3f8fac22
 8002480:	200007b0 	.word	0x200007b0
 8002484:	200005b0 	.word	0x200005b0
 8002488:	200007b4 	.word	0x200007b4
 800248c:	200007c0 	.word	0x200007c0
 8002490:	20000580 	.word	0x20000580
 8002494:	200007c4 	.word	0x200007c4

08002498 <Diff_velo>:
void Diff_velo(){
 8002498:	b580      	push	{r7, lr}
 800249a:	af00      	add	r7, sp, #0
	velo_diff =  (pos_lowpass - prevPos)/dt;
 800249c:	4b14      	ldr	r3, [pc, #80]	; (80024f0 <Diff_velo+0x58>)
 800249e:	ed93 7a00 	vldr	s14, [r3]
 80024a2:	4b14      	ldr	r3, [pc, #80]	; (80024f4 <Diff_velo+0x5c>)
 80024a4:	edd3 7a00 	vldr	s15, [r3]
 80024a8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80024ac:	ee17 0a90 	vmov	r0, s15
 80024b0:	f7fd fff6 	bl	80004a0 <__aeabi_f2d>
 80024b4:	a30c      	add	r3, pc, #48	; (adr r3, 80024e8 <Diff_velo+0x50>)
 80024b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024ba:	f7fe f973 	bl	80007a4 <__aeabi_ddiv>
 80024be:	4602      	mov	r2, r0
 80024c0:	460b      	mov	r3, r1
 80024c2:	4610      	mov	r0, r2
 80024c4:	4619      	mov	r1, r3
 80024c6:	f7fe fb13 	bl	8000af0 <__aeabi_d2f>
 80024ca:	4603      	mov	r3, r0
 80024cc:	4a0a      	ldr	r2, [pc, #40]	; (80024f8 <Diff_velo+0x60>)
 80024ce:	6013      	str	r3, [r2, #0]
	//velo_diff2 = (current_rad_wrap -  prevPos2)/dt;
	DegAbs[0][0] = velo_diff;
 80024d0:	4b09      	ldr	r3, [pc, #36]	; (80024f8 <Diff_velo+0x60>)
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	4a09      	ldr	r2, [pc, #36]	; (80024fc <Diff_velo+0x64>)
 80024d6:	6013      	str	r3, [r2, #0]
	prevPos = pos_lowpass;
 80024d8:	4b05      	ldr	r3, [pc, #20]	; (80024f0 <Diff_velo+0x58>)
 80024da:	681b      	ldr	r3, [r3, #0]
 80024dc:	4a05      	ldr	r2, [pc, #20]	; (80024f4 <Diff_velo+0x5c>)
 80024de:	6013      	str	r3, [r2, #0]
}
 80024e0:	bf00      	nop
 80024e2:	bd80      	pop	{r7, pc}
 80024e4:	f3af 8000 	nop.w
 80024e8:	47ae147b 	.word	0x47ae147b
 80024ec:	3f847ae1 	.word	0x3f847ae1
 80024f0:	200007c0 	.word	0x200007c0
 80024f4:	200007bc 	.word	0x200007bc
 80024f8:	200007b8 	.word	0x200007b8
 80024fc:	20000624 	.word	0x20000624

08002500 <Kalman_filter>:
void Kalman_filter()
{
 8002500:	b580      	push	{r7, lr}
 8002502:	b082      	sub	sp, #8
 8002504:	af02      	add	r7, sp, #8
	prediction(X_hat_t,P_t,F_t,Q_t);
 8002506:	4b14      	ldr	r3, [pc, #80]	; (8002558 <Kalman_filter+0x58>)
 8002508:	4a14      	ldr	r2, [pc, #80]	; (800255c <Kalman_filter+0x5c>)
 800250a:	4915      	ldr	r1, [pc, #84]	; (8002560 <Kalman_filter+0x60>)
 800250c:	4815      	ldr	r0, [pc, #84]	; (8002564 <Kalman_filter+0x64>)
 800250e:	f000 f83b 	bl	8002588 <prediction>
	Update(X_hat_t,P_hat_t,DegAbs,R_t,H_t);
 8002512:	4b15      	ldr	r3, [pc, #84]	; (8002568 <Kalman_filter+0x68>)
 8002514:	9300      	str	r3, [sp, #0]
 8002516:	4b15      	ldr	r3, [pc, #84]	; (800256c <Kalman_filter+0x6c>)
 8002518:	4a15      	ldr	r2, [pc, #84]	; (8002570 <Kalman_filter+0x70>)
 800251a:	4916      	ldr	r1, [pc, #88]	; (8002574 <Kalman_filter+0x74>)
 800251c:	4811      	ldr	r0, [pc, #68]	; (8002564 <Kalman_filter+0x64>)
 800251e:	f000 f889 	bl	8002634 <Update>
	kal_position = X_t[0][0];
 8002522:	4b15      	ldr	r3, [pc, #84]	; (8002578 <Kalman_filter+0x78>)
 8002524:	681b      	ldr	r3, [r3, #0]
 8002526:	4a15      	ldr	r2, [pc, #84]	; (800257c <Kalman_filter+0x7c>)
 8002528:	6013      	str	r3, [r2, #0]
	kal_velocity = X_t[1][0];
 800252a:	4b13      	ldr	r3, [pc, #76]	; (8002578 <Kalman_filter+0x78>)
 800252c:	68db      	ldr	r3, [r3, #12]
 800252e:	4a14      	ldr	r2, [pc, #80]	; (8002580 <Kalman_filter+0x80>)
 8002530:	6013      	str	r3, [r2, #0]
	kal_acceleration = X_t[2][0];
 8002532:	4b11      	ldr	r3, [pc, #68]	; (8002578 <Kalman_filter+0x78>)
 8002534:	699b      	ldr	r3, [r3, #24]
 8002536:	4a13      	ldr	r2, [pc, #76]	; (8002584 <Kalman_filter+0x84>)
 8002538:	6013      	str	r3, [r2, #0]
	equal(X_hat_t,X_t,3,3);  //X_hat_t = X_t
 800253a:	2303      	movs	r3, #3
 800253c:	2203      	movs	r2, #3
 800253e:	490e      	ldr	r1, [pc, #56]	; (8002578 <Kalman_filter+0x78>)
 8002540:	4808      	ldr	r0, [pc, #32]	; (8002564 <Kalman_filter+0x64>)
 8002542:	f000 fa79 	bl	8002a38 <equal>
	equal(P_hat_t,P_t,3,3); //P_hat_t = P_t
 8002546:	2303      	movs	r3, #3
 8002548:	2203      	movs	r2, #3
 800254a:	4905      	ldr	r1, [pc, #20]	; (8002560 <Kalman_filter+0x60>)
 800254c:	4809      	ldr	r0, [pc, #36]	; (8002574 <Kalman_filter+0x74>)
 800254e:	f000 fa73 	bl	8002a38 <equal>
}
 8002552:	bf00      	nop
 8002554:	46bd      	mov	sp, r7
 8002556:	bd80      	pop	{r7, pc}
 8002558:	20000110 	.word	0x20000110
 800255c:	2000005c 	.word	0x2000005c
 8002560:	20000768 	.word	0x20000768
 8002564:	20000744 	.word	0x20000744
 8002568:	200000a4 	.word	0x200000a4
 800256c:	200000ec 	.word	0x200000ec
 8002570:	20000624 	.word	0x20000624
 8002574:	2000078c 	.word	0x2000078c
 8002578:	20000720 	.word	0x20000720
 800257c:	200005ac 	.word	0x200005ac
 8002580:	200005b0 	.word	0x200005b0
 8002584:	200005b4 	.word	0x200005b4

08002588 <prediction>:
void prediction(X_hat_t_1, P_t_1, F_t, Q_t)
{
 8002588:	b580      	push	{r7, lr}
 800258a:	b088      	sub	sp, #32
 800258c:	af04      	add	r7, sp, #16
 800258e:	60f8      	str	r0, [r7, #12]
 8002590:	60b9      	str	r1, [r7, #8]
 8002592:	607a      	str	r2, [r7, #4]
 8002594:	603b      	str	r3, [r7, #0]
	Multiply_matrix(F_t,X_hat_t_1,multiply, 3,3,3,3);
 8002596:	6878      	ldr	r0, [r7, #4]
 8002598:	68f9      	ldr	r1, [r7, #12]
 800259a:	2303      	movs	r3, #3
 800259c:	9302      	str	r3, [sp, #8]
 800259e:	2303      	movs	r3, #3
 80025a0:	9301      	str	r3, [sp, #4]
 80025a2:	2303      	movs	r3, #3
 80025a4:	9300      	str	r3, [sp, #0]
 80025a6:	2303      	movs	r3, #3
 80025a8:	4a1c      	ldr	r2, [pc, #112]	; (800261c <prediction+0x94>)
 80025aa:	f000 f917 	bl	80027dc <Multiply_matrix>
	equal(X_hat_t,multiply,3,3);
 80025ae:	2303      	movs	r3, #3
 80025b0:	2203      	movs	r2, #3
 80025b2:	491a      	ldr	r1, [pc, #104]	; (800261c <prediction+0x94>)
 80025b4:	481a      	ldr	r0, [pc, #104]	; (8002620 <prediction+0x98>)
 80025b6:	f000 fa3f 	bl	8002a38 <equal>

	Multiply_matrix(F_t,P_t_1,multiply, 3,3,3,3);
 80025ba:	6878      	ldr	r0, [r7, #4]
 80025bc:	68b9      	ldr	r1, [r7, #8]
 80025be:	2303      	movs	r3, #3
 80025c0:	9302      	str	r3, [sp, #8]
 80025c2:	2303      	movs	r3, #3
 80025c4:	9301      	str	r3, [sp, #4]
 80025c6:	2303      	movs	r3, #3
 80025c8:	9300      	str	r3, [sp, #0]
 80025ca:	2303      	movs	r3, #3
 80025cc:	4a13      	ldr	r2, [pc, #76]	; (800261c <prediction+0x94>)
 80025ce:	f000 f905 	bl	80027dc <Multiply_matrix>
	equal(collect3_3,multiply,3,3);
 80025d2:	2303      	movs	r3, #3
 80025d4:	2203      	movs	r2, #3
 80025d6:	4911      	ldr	r1, [pc, #68]	; (800261c <prediction+0x94>)
 80025d8:	4812      	ldr	r0, [pc, #72]	; (8002624 <prediction+0x9c>)
 80025da:	f000 fa2d 	bl	8002a38 <equal>
	Multiply_matrix(collect3_3,F_t_tran,multiply, 3,3,3,3);
 80025de:	2303      	movs	r3, #3
 80025e0:	9302      	str	r3, [sp, #8]
 80025e2:	2303      	movs	r3, #3
 80025e4:	9301      	str	r3, [sp, #4]
 80025e6:	2303      	movs	r3, #3
 80025e8:	9300      	str	r3, [sp, #0]
 80025ea:	2303      	movs	r3, #3
 80025ec:	4a0b      	ldr	r2, [pc, #44]	; (800261c <prediction+0x94>)
 80025ee:	490e      	ldr	r1, [pc, #56]	; (8002628 <prediction+0xa0>)
 80025f0:	480c      	ldr	r0, [pc, #48]	; (8002624 <prediction+0x9c>)
 80025f2:	f000 f8f3 	bl	80027dc <Multiply_matrix>
	PlusOrMinus(multiply,Q_t,3,3,1);
 80025f6:	6839      	ldr	r1, [r7, #0]
 80025f8:	2301      	movs	r3, #1
 80025fa:	9300      	str	r3, [sp, #0]
 80025fc:	2303      	movs	r3, #3
 80025fe:	2203      	movs	r2, #3
 8002600:	4806      	ldr	r0, [pc, #24]	; (800261c <prediction+0x94>)
 8002602:	f000 f96f 	bl	80028e4 <PlusOrMinus>
	equal(P_hat_t,pm3_3,3,3);
 8002606:	2303      	movs	r3, #3
 8002608:	2203      	movs	r2, #3
 800260a:	4908      	ldr	r1, [pc, #32]	; (800262c <prediction+0xa4>)
 800260c:	4808      	ldr	r0, [pc, #32]	; (8002630 <prediction+0xa8>)
 800260e:	f000 fa13 	bl	8002a38 <equal>
}
 8002612:	bf00      	nop
 8002614:	3710      	adds	r7, #16
 8002616:	46bd      	mov	sp, r7
 8002618:	bd80      	pop	{r7, pc}
 800261a:	bf00      	nop
 800261c:	20000648 	.word	0x20000648
 8002620:	20000744 	.word	0x20000744
 8002624:	20000690 	.word	0x20000690
 8002628:	20000080 	.word	0x20000080
 800262c:	2000066c 	.word	0x2000066c
 8002630:	2000078c 	.word	0x2000078c

08002634 <Update>:

void Update(X_hat_t, P_hat_t, DegAbs, R_t, H_t)
{
 8002634:	b580      	push	{r7, lr}
 8002636:	b088      	sub	sp, #32
 8002638:	af04      	add	r7, sp, #16
 800263a:	60f8      	str	r0, [r7, #12]
 800263c:	60b9      	str	r1, [r7, #8]
 800263e:	607a      	str	r2, [r7, #4]
 8002640:	603b      	str	r3, [r7, #0]
	Multiply_matrix(H_t,X_hat_t,multiply,3,3,3,3);
 8002642:	69b8      	ldr	r0, [r7, #24]
 8002644:	68f9      	ldr	r1, [r7, #12]
 8002646:	2303      	movs	r3, #3
 8002648:	9302      	str	r3, [sp, #8]
 800264a:	2303      	movs	r3, #3
 800264c:	9301      	str	r3, [sp, #4]
 800264e:	2303      	movs	r3, #3
 8002650:	9300      	str	r3, [sp, #0]
 8002652:	2303      	movs	r3, #3
 8002654:	4a57      	ldr	r2, [pc, #348]	; (80027b4 <Update+0x180>)
 8002656:	f000 f8c1 	bl	80027dc <Multiply_matrix>
	PlusOrMinus(DegAbs,multiply,3,3,2);
 800265a:	6878      	ldr	r0, [r7, #4]
 800265c:	2302      	movs	r3, #2
 800265e:	9300      	str	r3, [sp, #0]
 8002660:	2303      	movs	r3, #3
 8002662:	2203      	movs	r2, #3
 8002664:	4953      	ldr	r1, [pc, #332]	; (80027b4 <Update+0x180>)
 8002666:	f000 f93d 	bl	80028e4 <PlusOrMinus>
	equal(y_k,pm3_3,3,3);
 800266a:	2303      	movs	r3, #3
 800266c:	2203      	movs	r2, #3
 800266e:	4952      	ldr	r1, [pc, #328]	; (80027b8 <Update+0x184>)
 8002670:	4852      	ldr	r0, [pc, #328]	; (80027bc <Update+0x188>)
 8002672:	f000 f9e1 	bl	8002a38 <equal>

	Multiply_matrix(H_t,P_hat_t,multiply,3,3,3,3);
 8002676:	69b8      	ldr	r0, [r7, #24]
 8002678:	68b9      	ldr	r1, [r7, #8]
 800267a:	2303      	movs	r3, #3
 800267c:	9302      	str	r3, [sp, #8]
 800267e:	2303      	movs	r3, #3
 8002680:	9301      	str	r3, [sp, #4]
 8002682:	2303      	movs	r3, #3
 8002684:	9300      	str	r3, [sp, #0]
 8002686:	2303      	movs	r3, #3
 8002688:	4a4a      	ldr	r2, [pc, #296]	; (80027b4 <Update+0x180>)
 800268a:	f000 f8a7 	bl	80027dc <Multiply_matrix>
	equal(collect3_3,multiply,3,3);
 800268e:	2303      	movs	r3, #3
 8002690:	2203      	movs	r2, #3
 8002692:	4948      	ldr	r1, [pc, #288]	; (80027b4 <Update+0x180>)
 8002694:	484a      	ldr	r0, [pc, #296]	; (80027c0 <Update+0x18c>)
 8002696:	f000 f9cf 	bl	8002a38 <equal>
	Multiply_matrix(collect3_3,H_t_tran,multiply, 3,3,3,3);
 800269a:	2303      	movs	r3, #3
 800269c:	9302      	str	r3, [sp, #8]
 800269e:	2303      	movs	r3, #3
 80026a0:	9301      	str	r3, [sp, #4]
 80026a2:	2303      	movs	r3, #3
 80026a4:	9300      	str	r3, [sp, #0]
 80026a6:	2303      	movs	r3, #3
 80026a8:	4a42      	ldr	r2, [pc, #264]	; (80027b4 <Update+0x180>)
 80026aa:	4946      	ldr	r1, [pc, #280]	; (80027c4 <Update+0x190>)
 80026ac:	4844      	ldr	r0, [pc, #272]	; (80027c0 <Update+0x18c>)
 80026ae:	f000 f895 	bl	80027dc <Multiply_matrix>
	PlusOrMinus(multiply,R_t,3,3,1);
 80026b2:	6839      	ldr	r1, [r7, #0]
 80026b4:	2301      	movs	r3, #1
 80026b6:	9300      	str	r3, [sp, #0]
 80026b8:	2303      	movs	r3, #3
 80026ba:	2203      	movs	r2, #3
 80026bc:	483d      	ldr	r0, [pc, #244]	; (80027b4 <Update+0x180>)
 80026be:	f000 f911 	bl	80028e4 <PlusOrMinus>
	equal(S_k,pm3_3,3,3);
 80026c2:	2303      	movs	r3, #3
 80026c4:	2203      	movs	r2, #3
 80026c6:	493c      	ldr	r1, [pc, #240]	; (80027b8 <Update+0x184>)
 80026c8:	483f      	ldr	r0, [pc, #252]	; (80027c8 <Update+0x194>)
 80026ca:	f000 f9b5 	bl	8002a38 <equal>

	S_k[0][0] = 1/S_k[0][0];
 80026ce:	4b3e      	ldr	r3, [pc, #248]	; (80027c8 <Update+0x194>)
 80026d0:	ed93 7a00 	vldr	s14, [r3]
 80026d4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80026d8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80026dc:	4b3a      	ldr	r3, [pc, #232]	; (80027c8 <Update+0x194>)
 80026de:	edc3 7a00 	vstr	s15, [r3]
	Multiply_matrix(P_hat_t,H_t_tran,multiply,3,3,3,3);
 80026e2:	68b8      	ldr	r0, [r7, #8]
 80026e4:	2303      	movs	r3, #3
 80026e6:	9302      	str	r3, [sp, #8]
 80026e8:	2303      	movs	r3, #3
 80026ea:	9301      	str	r3, [sp, #4]
 80026ec:	2303      	movs	r3, #3
 80026ee:	9300      	str	r3, [sp, #0]
 80026f0:	2303      	movs	r3, #3
 80026f2:	4a30      	ldr	r2, [pc, #192]	; (80027b4 <Update+0x180>)
 80026f4:	4933      	ldr	r1, [pc, #204]	; (80027c4 <Update+0x190>)
 80026f6:	f000 f871 	bl	80027dc <Multiply_matrix>
	equal(collect3_3,multiply,3,3);
 80026fa:	2303      	movs	r3, #3
 80026fc:	2203      	movs	r2, #3
 80026fe:	492d      	ldr	r1, [pc, #180]	; (80027b4 <Update+0x180>)
 8002700:	482f      	ldr	r0, [pc, #188]	; (80027c0 <Update+0x18c>)
 8002702:	f000 f999 	bl	8002a38 <equal>
	Multiply_matrix(collect3_3,S_k,multiply, 3,3,3,3);
 8002706:	2303      	movs	r3, #3
 8002708:	9302      	str	r3, [sp, #8]
 800270a:	2303      	movs	r3, #3
 800270c:	9301      	str	r3, [sp, #4]
 800270e:	2303      	movs	r3, #3
 8002710:	9300      	str	r3, [sp, #0]
 8002712:	2303      	movs	r3, #3
 8002714:	4a27      	ldr	r2, [pc, #156]	; (80027b4 <Update+0x180>)
 8002716:	492c      	ldr	r1, [pc, #176]	; (80027c8 <Update+0x194>)
 8002718:	4829      	ldr	r0, [pc, #164]	; (80027c0 <Update+0x18c>)
 800271a:	f000 f85f 	bl	80027dc <Multiply_matrix>
	equal(K_k,multiply,3,3);
 800271e:	2303      	movs	r3, #3
 8002720:	2203      	movs	r2, #3
 8002722:	4924      	ldr	r1, [pc, #144]	; (80027b4 <Update+0x180>)
 8002724:	4829      	ldr	r0, [pc, #164]	; (80027cc <Update+0x198>)
 8002726:	f000 f987 	bl	8002a38 <equal>

	Multiply_matrix(K_k,y_k,multiply,3,3,3,3);
 800272a:	2303      	movs	r3, #3
 800272c:	9302      	str	r3, [sp, #8]
 800272e:	2303      	movs	r3, #3
 8002730:	9301      	str	r3, [sp, #4]
 8002732:	2303      	movs	r3, #3
 8002734:	9300      	str	r3, [sp, #0]
 8002736:	2303      	movs	r3, #3
 8002738:	4a1e      	ldr	r2, [pc, #120]	; (80027b4 <Update+0x180>)
 800273a:	4920      	ldr	r1, [pc, #128]	; (80027bc <Update+0x188>)
 800273c:	4823      	ldr	r0, [pc, #140]	; (80027cc <Update+0x198>)
 800273e:	f000 f84d 	bl	80027dc <Multiply_matrix>
	PlusOrMinus(X_hat_t,multiply,3,3,1);
 8002742:	68f8      	ldr	r0, [r7, #12]
 8002744:	2301      	movs	r3, #1
 8002746:	9300      	str	r3, [sp, #0]
 8002748:	2303      	movs	r3, #3
 800274a:	2203      	movs	r2, #3
 800274c:	4919      	ldr	r1, [pc, #100]	; (80027b4 <Update+0x180>)
 800274e:	f000 f8c9 	bl	80028e4 <PlusOrMinus>
	equal(X_t,pm3_3,3,3);
 8002752:	2303      	movs	r3, #3
 8002754:	2203      	movs	r2, #3
 8002756:	4918      	ldr	r1, [pc, #96]	; (80027b8 <Update+0x184>)
 8002758:	481d      	ldr	r0, [pc, #116]	; (80027d0 <Update+0x19c>)
 800275a:	f000 f96d 	bl	8002a38 <equal>

	Multiply_matrix(K_k,H_t,multiply,3,3,3,3);
 800275e:	69b9      	ldr	r1, [r7, #24]
 8002760:	2303      	movs	r3, #3
 8002762:	9302      	str	r3, [sp, #8]
 8002764:	2303      	movs	r3, #3
 8002766:	9301      	str	r3, [sp, #4]
 8002768:	2303      	movs	r3, #3
 800276a:	9300      	str	r3, [sp, #0]
 800276c:	2303      	movs	r3, #3
 800276e:	4a11      	ldr	r2, [pc, #68]	; (80027b4 <Update+0x180>)
 8002770:	4816      	ldr	r0, [pc, #88]	; (80027cc <Update+0x198>)
 8002772:	f000 f833 	bl	80027dc <Multiply_matrix>
	PlusOrMinus(I,multiply,3,3,2);
 8002776:	2302      	movs	r3, #2
 8002778:	9300      	str	r3, [sp, #0]
 800277a:	2303      	movs	r3, #3
 800277c:	2203      	movs	r2, #3
 800277e:	490d      	ldr	r1, [pc, #52]	; (80027b4 <Update+0x180>)
 8002780:	4814      	ldr	r0, [pc, #80]	; (80027d4 <Update+0x1a0>)
 8002782:	f000 f8af 	bl	80028e4 <PlusOrMinus>
	Multiply_matrix(pm3_3,P_hat_t,multiply,3,3,3,3);
 8002786:	68b9      	ldr	r1, [r7, #8]
 8002788:	2303      	movs	r3, #3
 800278a:	9302      	str	r3, [sp, #8]
 800278c:	2303      	movs	r3, #3
 800278e:	9301      	str	r3, [sp, #4]
 8002790:	2303      	movs	r3, #3
 8002792:	9300      	str	r3, [sp, #0]
 8002794:	2303      	movs	r3, #3
 8002796:	4a07      	ldr	r2, [pc, #28]	; (80027b4 <Update+0x180>)
 8002798:	4807      	ldr	r0, [pc, #28]	; (80027b8 <Update+0x184>)
 800279a:	f000 f81f 	bl	80027dc <Multiply_matrix>
	equal(P_t,multiply,3,3);
 800279e:	2303      	movs	r3, #3
 80027a0:	2203      	movs	r2, #3
 80027a2:	4904      	ldr	r1, [pc, #16]	; (80027b4 <Update+0x180>)
 80027a4:	480c      	ldr	r0, [pc, #48]	; (80027d8 <Update+0x1a4>)
 80027a6:	f000 f947 	bl	8002a38 <equal>
}
 80027aa:	bf00      	nop
 80027ac:	3710      	adds	r7, #16
 80027ae:	46bd      	mov	sp, r7
 80027b0:	bd80      	pop	{r7, pc}
 80027b2:	bf00      	nop
 80027b4:	20000648 	.word	0x20000648
 80027b8:	2000066c 	.word	0x2000066c
 80027bc:	200006b4 	.word	0x200006b4
 80027c0:	20000690 	.word	0x20000690
 80027c4:	200000c8 	.word	0x200000c8
 80027c8:	200006d8 	.word	0x200006d8
 80027cc:	200006fc 	.word	0x200006fc
 80027d0:	20000720 	.word	0x20000720
 80027d4:	20000038 	.word	0x20000038
 80027d8:	20000768 	.word	0x20000768

080027dc <Multiply_matrix>:

void Multiply_matrix(float A[][3], float B[][3],float multiply[][3],int row1,int col1,int row2,int col2)
{
 80027dc:	b480      	push	{r7}
 80027de:	b087      	sub	sp, #28
 80027e0:	af00      	add	r7, sp, #0
 80027e2:	60f8      	str	r0, [r7, #12]
 80027e4:	60b9      	str	r1, [r7, #8]
 80027e6:	607a      	str	r2, [r7, #4]
 80027e8:	603b      	str	r3, [r7, #0]
	uint8_t i,j,k;
	//set zero
	for(i=0; i<3 ;i++){
 80027ea:	2300      	movs	r3, #0
 80027ec:	75fb      	strb	r3, [r7, #23]
 80027ee:	e019      	b.n	8002824 <Multiply_matrix+0x48>
		for(j=0; j<3;j++){
 80027f0:	2300      	movs	r3, #0
 80027f2:	75bb      	strb	r3, [r7, #22]
 80027f4:	e010      	b.n	8002818 <Multiply_matrix+0x3c>
			multiply[i][j] = 0;
 80027f6:	7dfa      	ldrb	r2, [r7, #23]
 80027f8:	4613      	mov	r3, r2
 80027fa:	005b      	lsls	r3, r3, #1
 80027fc:	4413      	add	r3, r2
 80027fe:	009b      	lsls	r3, r3, #2
 8002800:	461a      	mov	r2, r3
 8002802:	687b      	ldr	r3, [r7, #4]
 8002804:	441a      	add	r2, r3
 8002806:	7dbb      	ldrb	r3, [r7, #22]
 8002808:	009b      	lsls	r3, r3, #2
 800280a:	4413      	add	r3, r2
 800280c:	f04f 0200 	mov.w	r2, #0
 8002810:	601a      	str	r2, [r3, #0]
		for(j=0; j<3;j++){
 8002812:	7dbb      	ldrb	r3, [r7, #22]
 8002814:	3301      	adds	r3, #1
 8002816:	75bb      	strb	r3, [r7, #22]
 8002818:	7dbb      	ldrb	r3, [r7, #22]
 800281a:	2b02      	cmp	r3, #2
 800281c:	d9eb      	bls.n	80027f6 <Multiply_matrix+0x1a>
	for(i=0; i<3 ;i++){
 800281e:	7dfb      	ldrb	r3, [r7, #23]
 8002820:	3301      	adds	r3, #1
 8002822:	75fb      	strb	r3, [r7, #23]
 8002824:	7dfb      	ldrb	r3, [r7, #23]
 8002826:	2b02      	cmp	r3, #2
 8002828:	d9e2      	bls.n	80027f0 <Multiply_matrix+0x14>
		}
	}

	for(i=0;i<row1;i++){
 800282a:	2300      	movs	r3, #0
 800282c:	75fb      	strb	r3, [r7, #23]
 800282e:	e04e      	b.n	80028ce <Multiply_matrix+0xf2>
		for(j=0;j<col2;j++){
 8002830:	2300      	movs	r3, #0
 8002832:	75bb      	strb	r3, [r7, #22]
 8002834:	e044      	b.n	80028c0 <Multiply_matrix+0xe4>
			for(k=0;k<col1;k++){
 8002836:	2300      	movs	r3, #0
 8002838:	757b      	strb	r3, [r7, #21]
 800283a:	e03a      	b.n	80028b2 <Multiply_matrix+0xd6>
				multiply[i][j] += A[i][k]*B[k][j];
 800283c:	7dfa      	ldrb	r2, [r7, #23]
 800283e:	4613      	mov	r3, r2
 8002840:	005b      	lsls	r3, r3, #1
 8002842:	4413      	add	r3, r2
 8002844:	009b      	lsls	r3, r3, #2
 8002846:	461a      	mov	r2, r3
 8002848:	687b      	ldr	r3, [r7, #4]
 800284a:	441a      	add	r2, r3
 800284c:	7dbb      	ldrb	r3, [r7, #22]
 800284e:	009b      	lsls	r3, r3, #2
 8002850:	4413      	add	r3, r2
 8002852:	ed93 7a00 	vldr	s14, [r3]
 8002856:	7dfa      	ldrb	r2, [r7, #23]
 8002858:	4613      	mov	r3, r2
 800285a:	005b      	lsls	r3, r3, #1
 800285c:	4413      	add	r3, r2
 800285e:	009b      	lsls	r3, r3, #2
 8002860:	461a      	mov	r2, r3
 8002862:	68fb      	ldr	r3, [r7, #12]
 8002864:	441a      	add	r2, r3
 8002866:	7d7b      	ldrb	r3, [r7, #21]
 8002868:	009b      	lsls	r3, r3, #2
 800286a:	4413      	add	r3, r2
 800286c:	edd3 6a00 	vldr	s13, [r3]
 8002870:	7d7a      	ldrb	r2, [r7, #21]
 8002872:	4613      	mov	r3, r2
 8002874:	005b      	lsls	r3, r3, #1
 8002876:	4413      	add	r3, r2
 8002878:	009b      	lsls	r3, r3, #2
 800287a:	461a      	mov	r2, r3
 800287c:	68bb      	ldr	r3, [r7, #8]
 800287e:	441a      	add	r2, r3
 8002880:	7dbb      	ldrb	r3, [r7, #22]
 8002882:	009b      	lsls	r3, r3, #2
 8002884:	4413      	add	r3, r2
 8002886:	edd3 7a00 	vldr	s15, [r3]
 800288a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800288e:	7dfa      	ldrb	r2, [r7, #23]
 8002890:	4613      	mov	r3, r2
 8002892:	005b      	lsls	r3, r3, #1
 8002894:	4413      	add	r3, r2
 8002896:	009b      	lsls	r3, r3, #2
 8002898:	461a      	mov	r2, r3
 800289a:	687b      	ldr	r3, [r7, #4]
 800289c:	441a      	add	r2, r3
 800289e:	7dbb      	ldrb	r3, [r7, #22]
 80028a0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80028a4:	009b      	lsls	r3, r3, #2
 80028a6:	4413      	add	r3, r2
 80028a8:	edc3 7a00 	vstr	s15, [r3]
			for(k=0;k<col1;k++){
 80028ac:	7d7b      	ldrb	r3, [r7, #21]
 80028ae:	3301      	adds	r3, #1
 80028b0:	757b      	strb	r3, [r7, #21]
 80028b2:	7d7b      	ldrb	r3, [r7, #21]
 80028b4:	6a3a      	ldr	r2, [r7, #32]
 80028b6:	429a      	cmp	r2, r3
 80028b8:	dcc0      	bgt.n	800283c <Multiply_matrix+0x60>
		for(j=0;j<col2;j++){
 80028ba:	7dbb      	ldrb	r3, [r7, #22]
 80028bc:	3301      	adds	r3, #1
 80028be:	75bb      	strb	r3, [r7, #22]
 80028c0:	7dbb      	ldrb	r3, [r7, #22]
 80028c2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80028c4:	429a      	cmp	r2, r3
 80028c6:	dcb6      	bgt.n	8002836 <Multiply_matrix+0x5a>
	for(i=0;i<row1;i++){
 80028c8:	7dfb      	ldrb	r3, [r7, #23]
 80028ca:	3301      	adds	r3, #1
 80028cc:	75fb      	strb	r3, [r7, #23]
 80028ce:	7dfb      	ldrb	r3, [r7, #23]
 80028d0:	683a      	ldr	r2, [r7, #0]
 80028d2:	429a      	cmp	r2, r3
 80028d4:	dcac      	bgt.n	8002830 <Multiply_matrix+0x54>
			}
		}
	}
}
 80028d6:	bf00      	nop
 80028d8:	bf00      	nop
 80028da:	371c      	adds	r7, #28
 80028dc:	46bd      	mov	sp, r7
 80028de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028e2:	4770      	bx	lr

080028e4 <PlusOrMinus>:

void PlusOrMinus(float A[][3], float B[][3],int row,int col,int con)
{
 80028e4:	b480      	push	{r7}
 80028e6:	b087      	sub	sp, #28
 80028e8:	af00      	add	r7, sp, #0
 80028ea:	60f8      	str	r0, [r7, #12]
 80028ec:	60b9      	str	r1, [r7, #8]
 80028ee:	607a      	str	r2, [r7, #4]
 80028f0:	603b      	str	r3, [r7, #0]
	uint8_t i,j;
	//set zeros
	for(i=0; i<3 ;i++){
 80028f2:	2300      	movs	r3, #0
 80028f4:	75fb      	strb	r3, [r7, #23]
 80028f6:	e017      	b.n	8002928 <PlusOrMinus+0x44>
			for(j=0; j<3;j++){
 80028f8:	2300      	movs	r3, #0
 80028fa:	75bb      	strb	r3, [r7, #22]
 80028fc:	e00e      	b.n	800291c <PlusOrMinus+0x38>
				pm3_3[i][j] = 0;
 80028fe:	7dfa      	ldrb	r2, [r7, #23]
 8002900:	7db9      	ldrb	r1, [r7, #22]
 8002902:	484c      	ldr	r0, [pc, #304]	; (8002a34 <PlusOrMinus+0x150>)
 8002904:	4613      	mov	r3, r2
 8002906:	005b      	lsls	r3, r3, #1
 8002908:	4413      	add	r3, r2
 800290a:	440b      	add	r3, r1
 800290c:	009b      	lsls	r3, r3, #2
 800290e:	4403      	add	r3, r0
 8002910:	f04f 0200 	mov.w	r2, #0
 8002914:	601a      	str	r2, [r3, #0]
			for(j=0; j<3;j++){
 8002916:	7dbb      	ldrb	r3, [r7, #22]
 8002918:	3301      	adds	r3, #1
 800291a:	75bb      	strb	r3, [r7, #22]
 800291c:	7dbb      	ldrb	r3, [r7, #22]
 800291e:	2b02      	cmp	r3, #2
 8002920:	d9ed      	bls.n	80028fe <PlusOrMinus+0x1a>
	for(i=0; i<3 ;i++){
 8002922:	7dfb      	ldrb	r3, [r7, #23]
 8002924:	3301      	adds	r3, #1
 8002926:	75fb      	strb	r3, [r7, #23]
 8002928:	7dfb      	ldrb	r3, [r7, #23]
 800292a:	2b02      	cmp	r3, #2
 800292c:	d9e4      	bls.n	80028f8 <PlusOrMinus+0x14>
			}
		}
	//condition for plus
	if(con == 1){
 800292e:	6a3b      	ldr	r3, [r7, #32]
 8002930:	2b01      	cmp	r3, #1
 8002932:	d13b      	bne.n	80029ac <PlusOrMinus+0xc8>
		for(i = 0; i < row; ++i){
 8002934:	2300      	movs	r3, #0
 8002936:	75fb      	strb	r3, [r7, #23]
 8002938:	e033      	b.n	80029a2 <PlusOrMinus+0xbe>
			for (j = 0; j < col; ++j){
 800293a:	2300      	movs	r3, #0
 800293c:	75bb      	strb	r3, [r7, #22]
 800293e:	e029      	b.n	8002994 <PlusOrMinus+0xb0>
				pm3_3[i][j] = A[i][j] + B[i][j];
 8002940:	7dfa      	ldrb	r2, [r7, #23]
 8002942:	4613      	mov	r3, r2
 8002944:	005b      	lsls	r3, r3, #1
 8002946:	4413      	add	r3, r2
 8002948:	009b      	lsls	r3, r3, #2
 800294a:	461a      	mov	r2, r3
 800294c:	68fb      	ldr	r3, [r7, #12]
 800294e:	441a      	add	r2, r3
 8002950:	7dbb      	ldrb	r3, [r7, #22]
 8002952:	009b      	lsls	r3, r3, #2
 8002954:	4413      	add	r3, r2
 8002956:	ed93 7a00 	vldr	s14, [r3]
 800295a:	7dfa      	ldrb	r2, [r7, #23]
 800295c:	4613      	mov	r3, r2
 800295e:	005b      	lsls	r3, r3, #1
 8002960:	4413      	add	r3, r2
 8002962:	009b      	lsls	r3, r3, #2
 8002964:	461a      	mov	r2, r3
 8002966:	68bb      	ldr	r3, [r7, #8]
 8002968:	441a      	add	r2, r3
 800296a:	7dbb      	ldrb	r3, [r7, #22]
 800296c:	009b      	lsls	r3, r3, #2
 800296e:	4413      	add	r3, r2
 8002970:	edd3 7a00 	vldr	s15, [r3]
 8002974:	7dfa      	ldrb	r2, [r7, #23]
 8002976:	7db9      	ldrb	r1, [r7, #22]
 8002978:	ee77 7a27 	vadd.f32	s15, s14, s15
 800297c:	482d      	ldr	r0, [pc, #180]	; (8002a34 <PlusOrMinus+0x150>)
 800297e:	4613      	mov	r3, r2
 8002980:	005b      	lsls	r3, r3, #1
 8002982:	4413      	add	r3, r2
 8002984:	440b      	add	r3, r1
 8002986:	009b      	lsls	r3, r3, #2
 8002988:	4403      	add	r3, r0
 800298a:	edc3 7a00 	vstr	s15, [r3]
			for (j = 0; j < col; ++j){
 800298e:	7dbb      	ldrb	r3, [r7, #22]
 8002990:	3301      	adds	r3, #1
 8002992:	75bb      	strb	r3, [r7, #22]
 8002994:	7dbb      	ldrb	r3, [r7, #22]
 8002996:	683a      	ldr	r2, [r7, #0]
 8002998:	429a      	cmp	r2, r3
 800299a:	dcd1      	bgt.n	8002940 <PlusOrMinus+0x5c>
		for(i = 0; i < row; ++i){
 800299c:	7dfb      	ldrb	r3, [r7, #23]
 800299e:	3301      	adds	r3, #1
 80029a0:	75fb      	strb	r3, [r7, #23]
 80029a2:	7dfb      	ldrb	r3, [r7, #23]
 80029a4:	687a      	ldr	r2, [r7, #4]
 80029a6:	429a      	cmp	r2, r3
 80029a8:	dcc7      	bgt.n	800293a <PlusOrMinus+0x56>
			for (j = 0; j < col; ++j){
				pm3_3[i][j] = A[i][j] - B[i][j];
			}
		}
	}
}
 80029aa:	e03d      	b.n	8002a28 <PlusOrMinus+0x144>
	else if(con == 2){
 80029ac:	6a3b      	ldr	r3, [r7, #32]
 80029ae:	2b02      	cmp	r3, #2
 80029b0:	d13a      	bne.n	8002a28 <PlusOrMinus+0x144>
		for(i = 0; i < row; ++i){
 80029b2:	2300      	movs	r3, #0
 80029b4:	75fb      	strb	r3, [r7, #23]
 80029b6:	e033      	b.n	8002a20 <PlusOrMinus+0x13c>
			for (j = 0; j < col; ++j){
 80029b8:	2300      	movs	r3, #0
 80029ba:	75bb      	strb	r3, [r7, #22]
 80029bc:	e029      	b.n	8002a12 <PlusOrMinus+0x12e>
				pm3_3[i][j] = A[i][j] - B[i][j];
 80029be:	7dfa      	ldrb	r2, [r7, #23]
 80029c0:	4613      	mov	r3, r2
 80029c2:	005b      	lsls	r3, r3, #1
 80029c4:	4413      	add	r3, r2
 80029c6:	009b      	lsls	r3, r3, #2
 80029c8:	461a      	mov	r2, r3
 80029ca:	68fb      	ldr	r3, [r7, #12]
 80029cc:	441a      	add	r2, r3
 80029ce:	7dbb      	ldrb	r3, [r7, #22]
 80029d0:	009b      	lsls	r3, r3, #2
 80029d2:	4413      	add	r3, r2
 80029d4:	ed93 7a00 	vldr	s14, [r3]
 80029d8:	7dfa      	ldrb	r2, [r7, #23]
 80029da:	4613      	mov	r3, r2
 80029dc:	005b      	lsls	r3, r3, #1
 80029de:	4413      	add	r3, r2
 80029e0:	009b      	lsls	r3, r3, #2
 80029e2:	461a      	mov	r2, r3
 80029e4:	68bb      	ldr	r3, [r7, #8]
 80029e6:	441a      	add	r2, r3
 80029e8:	7dbb      	ldrb	r3, [r7, #22]
 80029ea:	009b      	lsls	r3, r3, #2
 80029ec:	4413      	add	r3, r2
 80029ee:	edd3 7a00 	vldr	s15, [r3]
 80029f2:	7dfa      	ldrb	r2, [r7, #23]
 80029f4:	7db9      	ldrb	r1, [r7, #22]
 80029f6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80029fa:	480e      	ldr	r0, [pc, #56]	; (8002a34 <PlusOrMinus+0x150>)
 80029fc:	4613      	mov	r3, r2
 80029fe:	005b      	lsls	r3, r3, #1
 8002a00:	4413      	add	r3, r2
 8002a02:	440b      	add	r3, r1
 8002a04:	009b      	lsls	r3, r3, #2
 8002a06:	4403      	add	r3, r0
 8002a08:	edc3 7a00 	vstr	s15, [r3]
			for (j = 0; j < col; ++j){
 8002a0c:	7dbb      	ldrb	r3, [r7, #22]
 8002a0e:	3301      	adds	r3, #1
 8002a10:	75bb      	strb	r3, [r7, #22]
 8002a12:	7dbb      	ldrb	r3, [r7, #22]
 8002a14:	683a      	ldr	r2, [r7, #0]
 8002a16:	429a      	cmp	r2, r3
 8002a18:	dcd1      	bgt.n	80029be <PlusOrMinus+0xda>
		for(i = 0; i < row; ++i){
 8002a1a:	7dfb      	ldrb	r3, [r7, #23]
 8002a1c:	3301      	adds	r3, #1
 8002a1e:	75fb      	strb	r3, [r7, #23]
 8002a20:	7dfb      	ldrb	r3, [r7, #23]
 8002a22:	687a      	ldr	r2, [r7, #4]
 8002a24:	429a      	cmp	r2, r3
 8002a26:	dcc7      	bgt.n	80029b8 <PlusOrMinus+0xd4>
}
 8002a28:	bf00      	nop
 8002a2a:	371c      	adds	r7, #28
 8002a2c:	46bd      	mov	sp, r7
 8002a2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a32:	4770      	bx	lr
 8002a34:	2000066c 	.word	0x2000066c

08002a38 <equal>:

void equal(float A[][3],float B[][3],int row,int col)
{
 8002a38:	b490      	push	{r4, r7}
 8002a3a:	b086      	sub	sp, #24
 8002a3c:	af00      	add	r7, sp, #0
 8002a3e:	60f8      	str	r0, [r7, #12]
 8002a40:	60b9      	str	r1, [r7, #8]
 8002a42:	607a      	str	r2, [r7, #4]
 8002a44:	603b      	str	r3, [r7, #0]
	uint8_t i,j;
	for(i = 0; i < row; ++i){
 8002a46:	2300      	movs	r3, #0
 8002a48:	75fb      	strb	r3, [r7, #23]
 8002a4a:	e024      	b.n	8002a96 <equal+0x5e>
		for (j = 0; j < col; ++j){
 8002a4c:	2300      	movs	r3, #0
 8002a4e:	75bb      	strb	r3, [r7, #22]
 8002a50:	e01a      	b.n	8002a88 <equal+0x50>
			A[i][j] = B[i][j];
 8002a52:	7dfa      	ldrb	r2, [r7, #23]
 8002a54:	4613      	mov	r3, r2
 8002a56:	005b      	lsls	r3, r3, #1
 8002a58:	4413      	add	r3, r2
 8002a5a:	009b      	lsls	r3, r3, #2
 8002a5c:	461a      	mov	r2, r3
 8002a5e:	68bb      	ldr	r3, [r7, #8]
 8002a60:	1898      	adds	r0, r3, r2
 8002a62:	7dbc      	ldrb	r4, [r7, #22]
 8002a64:	7dfa      	ldrb	r2, [r7, #23]
 8002a66:	4613      	mov	r3, r2
 8002a68:	005b      	lsls	r3, r3, #1
 8002a6a:	4413      	add	r3, r2
 8002a6c:	009b      	lsls	r3, r3, #2
 8002a6e:	461a      	mov	r2, r3
 8002a70:	68fb      	ldr	r3, [r7, #12]
 8002a72:	1899      	adds	r1, r3, r2
 8002a74:	7dbb      	ldrb	r3, [r7, #22]
 8002a76:	00a2      	lsls	r2, r4, #2
 8002a78:	4402      	add	r2, r0
 8002a7a:	6812      	ldr	r2, [r2, #0]
 8002a7c:	009b      	lsls	r3, r3, #2
 8002a7e:	440b      	add	r3, r1
 8002a80:	601a      	str	r2, [r3, #0]
		for (j = 0; j < col; ++j){
 8002a82:	7dbb      	ldrb	r3, [r7, #22]
 8002a84:	3301      	adds	r3, #1
 8002a86:	75bb      	strb	r3, [r7, #22]
 8002a88:	7dbb      	ldrb	r3, [r7, #22]
 8002a8a:	683a      	ldr	r2, [r7, #0]
 8002a8c:	429a      	cmp	r2, r3
 8002a8e:	dce0      	bgt.n	8002a52 <equal+0x1a>
	for(i = 0; i < row; ++i){
 8002a90:	7dfb      	ldrb	r3, [r7, #23]
 8002a92:	3301      	adds	r3, #1
 8002a94:	75fb      	strb	r3, [r7, #23]
 8002a96:	7dfb      	ldrb	r3, [r7, #23]
 8002a98:	687a      	ldr	r2, [r7, #4]
 8002a9a:	429a      	cmp	r2, r3
 8002a9c:	dcd6      	bgt.n	8002a4c <equal+0x14>
		}
	}
}
 8002a9e:	bf00      	nop
 8002aa0:	bf00      	nop
 8002aa2:	3718      	adds	r7, #24
 8002aa4:	46bd      	mov	sp, r7
 8002aa6:	bc90      	pop	{r4, r7}
 8002aa8:	4770      	bx	lr
 8002aaa:	0000      	movs	r0, r0
 8002aac:	0000      	movs	r0, r0
	...

08002ab0 <Trajectory>:


void Trajectory(float qf,float vb)
{
 8002ab0:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8002ab4:	b084      	sub	sp, #16
 8002ab6:	af00      	add	r7, sp, #0
 8002ab8:	ed87 0a01 	vstr	s0, [r7, #4]
 8002abc:	edc7 0a00 	vstr	s1, [r7]
	vb = vb/9.5493;
 8002ac0:	6838      	ldr	r0, [r7, #0]
 8002ac2:	f7fd fced 	bl	80004a0 <__aeabi_f2d>
 8002ac6:	a3b4      	add	r3, pc, #720	; (adr r3, 8002d98 <Trajectory+0x2e8>)
 8002ac8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002acc:	f7fd fe6a 	bl	80007a4 <__aeabi_ddiv>
 8002ad0:	4602      	mov	r2, r0
 8002ad2:	460b      	mov	r3, r1
 8002ad4:	4610      	mov	r0, r2
 8002ad6:	4619      	mov	r1, r3
 8002ad8:	f7fe f80a 	bl	8000af0 <__aeabi_d2f>
 8002adc:	4603      	mov	r3, r0
 8002ade:	603b      	str	r3, [r7, #0]
	float ab = 0.3;
 8002ae0:	4ba1      	ldr	r3, [pc, #644]	; (8002d68 <Trajectory+0x2b8>)
 8002ae2:	60fb      	str	r3, [r7, #12]
	if(qf < 0.1){
 8002ae4:	6878      	ldr	r0, [r7, #4]
 8002ae6:	f7fd fcdb 	bl	80004a0 <__aeabi_f2d>
 8002aea:	a39d      	add	r3, pc, #628	; (adr r3, 8002d60 <Trajectory+0x2b0>)
 8002aec:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002af0:	f7fd ffa0 	bl	8000a34 <__aeabi_dcmplt>
 8002af4:	4603      	mov	r3, r0
 8002af6:	2b00      	cmp	r3, #0
 8002af8:	d003      	beq.n	8002b02 <Trajectory+0x52>
		ab = 0.3;
 8002afa:	4b9b      	ldr	r3, [pc, #620]	; (8002d68 <Trajectory+0x2b8>)
 8002afc:	60fb      	str	r3, [r7, #12]
		vb = 1.5/9.5493;
 8002afe:	4b9b      	ldr	r3, [pc, #620]	; (8002d6c <Trajectory+0x2bc>)
 8002b00:	603b      	str	r3, [r7, #0]
	}
	if(tuaall >= 0){
 8002b02:	4b9b      	ldr	r3, [pc, #620]	; (8002d70 <Trajectory+0x2c0>)
 8002b04:	edd3 7a00 	vldr	s15, [r3]
 8002b08:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002b0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002b10:	f2c0 827a 	blt.w	8003008 <Trajectory+0x558>
		tua = tuaall - 0;
 8002b14:	4b96      	ldr	r3, [pc, #600]	; (8002d70 <Trajectory+0x2c0>)
 8002b16:	681b      	ldr	r3, [r3, #0]
 8002b18:	4a96      	ldr	r2, [pc, #600]	; (8002d74 <Trajectory+0x2c4>)
 8002b1a:	6013      	str	r3, [r2, #0]
		if(qf/vb > vb/ab){
 8002b1c:	edd7 6a01 	vldr	s13, [r7, #4]
 8002b20:	edd7 7a00 	vldr	s15, [r7]
 8002b24:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8002b28:	ed97 6a00 	vldr	s12, [r7]
 8002b2c:	edd7 6a03 	vldr	s13, [r7, #12]
 8002b30:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8002b34:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002b38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002b3c:	dd0c      	ble.n	8002b58 <Trajectory+0xa8>
			tb = vb/ab;
 8002b3e:	edd7 6a00 	vldr	s13, [r7]
 8002b42:	ed97 7a03 	vldr	s14, [r7, #12]
 8002b46:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8002b4a:	4b8b      	ldr	r3, [pc, #556]	; (8002d78 <Trajectory+0x2c8>)
 8002b4c:	edc3 7a00 	vstr	s15, [r3]
			vb_n = vb;
 8002b50:	4a8a      	ldr	r2, [pc, #552]	; (8002d7c <Trajectory+0x2cc>)
 8002b52:	683b      	ldr	r3, [r7, #0]
 8002b54:	6013      	str	r3, [r2, #0]
 8002b56:	e031      	b.n	8002bbc <Trajectory+0x10c>

		}
		else{
			tb = sqrt(qf/ab);
 8002b58:	ed97 7a01 	vldr	s14, [r7, #4]
 8002b5c:	edd7 7a03 	vldr	s15, [r7, #12]
 8002b60:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8002b64:	ee16 0a90 	vmov	r0, s13
 8002b68:	f7fd fc9a 	bl	80004a0 <__aeabi_f2d>
 8002b6c:	4602      	mov	r2, r0
 8002b6e:	460b      	mov	r3, r1
 8002b70:	ec43 2b10 	vmov	d0, r2, r3
 8002b74:	f008 ff38 	bl	800b9e8 <sqrt>
 8002b78:	ec53 2b10 	vmov	r2, r3, d0
 8002b7c:	4610      	mov	r0, r2
 8002b7e:	4619      	mov	r1, r3
 8002b80:	f7fd ffb6 	bl	8000af0 <__aeabi_d2f>
 8002b84:	4603      	mov	r3, r0
 8002b86:	4a7c      	ldr	r2, [pc, #496]	; (8002d78 <Trajectory+0x2c8>)
 8002b88:	6013      	str	r3, [r2, #0]
			vb_n = sqrt(qf*ab);
 8002b8a:	ed97 7a01 	vldr	s14, [r7, #4]
 8002b8e:	edd7 7a03 	vldr	s15, [r7, #12]
 8002b92:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002b96:	ee17 0a90 	vmov	r0, s15
 8002b9a:	f7fd fc81 	bl	80004a0 <__aeabi_f2d>
 8002b9e:	4602      	mov	r2, r0
 8002ba0:	460b      	mov	r3, r1
 8002ba2:	ec43 2b10 	vmov	d0, r2, r3
 8002ba6:	f008 ff1f 	bl	800b9e8 <sqrt>
 8002baa:	ec53 2b10 	vmov	r2, r3, d0
 8002bae:	4610      	mov	r0, r2
 8002bb0:	4619      	mov	r1, r3
 8002bb2:	f7fd ff9d 	bl	8000af0 <__aeabi_d2f>
 8002bb6:	4603      	mov	r3, r0
 8002bb8:	4a70      	ldr	r2, [pc, #448]	; (8002d7c <Trajectory+0x2cc>)
 8002bba:	6013      	str	r3, [r2, #0]
		}
		tf = (2*tb) + ((qf-(vb_n*vb_n/ab))/vb_n);
 8002bbc:	4b6e      	ldr	r3, [pc, #440]	; (8002d78 <Trajectory+0x2c8>)
 8002bbe:	edd3 7a00 	vldr	s15, [r3]
 8002bc2:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8002bc6:	4b6d      	ldr	r3, [pc, #436]	; (8002d7c <Trajectory+0x2cc>)
 8002bc8:	edd3 6a00 	vldr	s13, [r3]
 8002bcc:	4b6b      	ldr	r3, [pc, #428]	; (8002d7c <Trajectory+0x2cc>)
 8002bce:	edd3 7a00 	vldr	s15, [r3]
 8002bd2:	ee26 6aa7 	vmul.f32	s12, s13, s15
 8002bd6:	edd7 6a03 	vldr	s13, [r7, #12]
 8002bda:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8002bde:	edd7 6a01 	vldr	s13, [r7, #4]
 8002be2:	ee36 6ae7 	vsub.f32	s12, s13, s15
 8002be6:	4b65      	ldr	r3, [pc, #404]	; (8002d7c <Trajectory+0x2cc>)
 8002be8:	edd3 6a00 	vldr	s13, [r3]
 8002bec:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8002bf0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002bf4:	4b62      	ldr	r3, [pc, #392]	; (8002d80 <Trajectory+0x2d0>)
 8002bf6:	edc3 7a00 	vstr	s15, [r3]
		if(tua <= tb){
 8002bfa:	4b5e      	ldr	r3, [pc, #376]	; (8002d74 <Trajectory+0x2c4>)
 8002bfc:	ed93 7a00 	vldr	s14, [r3]
 8002c00:	4b5d      	ldr	r3, [pc, #372]	; (8002d78 <Trajectory+0x2c8>)
 8002c02:	edd3 7a00 	vldr	s15, [r3]
 8002c06:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002c0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c0e:	d83f      	bhi.n	8002c90 <Trajectory+0x1e0>
			tra_pos = 0.5*ab*tua*tua;
 8002c10:	68f8      	ldr	r0, [r7, #12]
 8002c12:	f7fd fc45 	bl	80004a0 <__aeabi_f2d>
 8002c16:	f04f 0200 	mov.w	r2, #0
 8002c1a:	4b5a      	ldr	r3, [pc, #360]	; (8002d84 <Trajectory+0x2d4>)
 8002c1c:	f7fd fc98 	bl	8000550 <__aeabi_dmul>
 8002c20:	4602      	mov	r2, r0
 8002c22:	460b      	mov	r3, r1
 8002c24:	4614      	mov	r4, r2
 8002c26:	461d      	mov	r5, r3
 8002c28:	4b52      	ldr	r3, [pc, #328]	; (8002d74 <Trajectory+0x2c4>)
 8002c2a:	681b      	ldr	r3, [r3, #0]
 8002c2c:	4618      	mov	r0, r3
 8002c2e:	f7fd fc37 	bl	80004a0 <__aeabi_f2d>
 8002c32:	4602      	mov	r2, r0
 8002c34:	460b      	mov	r3, r1
 8002c36:	4620      	mov	r0, r4
 8002c38:	4629      	mov	r1, r5
 8002c3a:	f7fd fc89 	bl	8000550 <__aeabi_dmul>
 8002c3e:	4602      	mov	r2, r0
 8002c40:	460b      	mov	r3, r1
 8002c42:	4614      	mov	r4, r2
 8002c44:	461d      	mov	r5, r3
 8002c46:	4b4b      	ldr	r3, [pc, #300]	; (8002d74 <Trajectory+0x2c4>)
 8002c48:	681b      	ldr	r3, [r3, #0]
 8002c4a:	4618      	mov	r0, r3
 8002c4c:	f7fd fc28 	bl	80004a0 <__aeabi_f2d>
 8002c50:	4602      	mov	r2, r0
 8002c52:	460b      	mov	r3, r1
 8002c54:	4620      	mov	r0, r4
 8002c56:	4629      	mov	r1, r5
 8002c58:	f7fd fc7a 	bl	8000550 <__aeabi_dmul>
 8002c5c:	4602      	mov	r2, r0
 8002c5e:	460b      	mov	r3, r1
 8002c60:	4610      	mov	r0, r2
 8002c62:	4619      	mov	r1, r3
 8002c64:	f7fd ff44 	bl	8000af0 <__aeabi_d2f>
 8002c68:	4603      	mov	r3, r0
 8002c6a:	4a47      	ldr	r2, [pc, #284]	; (8002d88 <Trajectory+0x2d8>)
 8002c6c:	6013      	str	r3, [r2, #0]
			tra_velo = ab*tua;
 8002c6e:	4b41      	ldr	r3, [pc, #260]	; (8002d74 <Trajectory+0x2c4>)
 8002c70:	ed93 7a00 	vldr	s14, [r3]
 8002c74:	edd7 7a03 	vldr	s15, [r7, #12]
 8002c78:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002c7c:	4b43      	ldr	r3, [pc, #268]	; (8002d8c <Trajectory+0x2dc>)
 8002c7e:	edc3 7a00 	vstr	s15, [r3]
			tra_acc = ab;
 8002c82:	4a43      	ldr	r2, [pc, #268]	; (8002d90 <Trajectory+0x2e0>)
 8002c84:	68fb      	ldr	r3, [r7, #12]
 8002c86:	6013      	str	r3, [r2, #0]
			/*if(tra_velo < velostart){
				tra_velo = velostart;
			}*/
			start_tra = 1;
 8002c88:	4b42      	ldr	r3, [pc, #264]	; (8002d94 <Trajectory+0x2e4>)
 8002c8a:	2201      	movs	r2, #1
 8002c8c:	701a      	strb	r2, [r3, #0]
 8002c8e:	e17b      	b.n	8002f88 <Trajectory+0x4d8>
		}
		else if(tua < (tf-tb)){
 8002c90:	4b3b      	ldr	r3, [pc, #236]	; (8002d80 <Trajectory+0x2d0>)
 8002c92:	ed93 7a00 	vldr	s14, [r3]
 8002c96:	4b38      	ldr	r3, [pc, #224]	; (8002d78 <Trajectory+0x2c8>)
 8002c98:	edd3 7a00 	vldr	s15, [r3]
 8002c9c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002ca0:	4b34      	ldr	r3, [pc, #208]	; (8002d74 <Trajectory+0x2c4>)
 8002ca2:	edd3 7a00 	vldr	s15, [r3]
 8002ca6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002caa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002cae:	dd77      	ble.n	8002da0 <Trajectory+0x2f0>
			tra_pos = (0.5*ab*tb*tb) + (vb_n*(tua-tb));
 8002cb0:	68f8      	ldr	r0, [r7, #12]
 8002cb2:	f7fd fbf5 	bl	80004a0 <__aeabi_f2d>
 8002cb6:	f04f 0200 	mov.w	r2, #0
 8002cba:	4b32      	ldr	r3, [pc, #200]	; (8002d84 <Trajectory+0x2d4>)
 8002cbc:	f7fd fc48 	bl	8000550 <__aeabi_dmul>
 8002cc0:	4602      	mov	r2, r0
 8002cc2:	460b      	mov	r3, r1
 8002cc4:	4614      	mov	r4, r2
 8002cc6:	461d      	mov	r5, r3
 8002cc8:	4b2b      	ldr	r3, [pc, #172]	; (8002d78 <Trajectory+0x2c8>)
 8002cca:	681b      	ldr	r3, [r3, #0]
 8002ccc:	4618      	mov	r0, r3
 8002cce:	f7fd fbe7 	bl	80004a0 <__aeabi_f2d>
 8002cd2:	4602      	mov	r2, r0
 8002cd4:	460b      	mov	r3, r1
 8002cd6:	4620      	mov	r0, r4
 8002cd8:	4629      	mov	r1, r5
 8002cda:	f7fd fc39 	bl	8000550 <__aeabi_dmul>
 8002cde:	4602      	mov	r2, r0
 8002ce0:	460b      	mov	r3, r1
 8002ce2:	4614      	mov	r4, r2
 8002ce4:	461d      	mov	r5, r3
 8002ce6:	4b24      	ldr	r3, [pc, #144]	; (8002d78 <Trajectory+0x2c8>)
 8002ce8:	681b      	ldr	r3, [r3, #0]
 8002cea:	4618      	mov	r0, r3
 8002cec:	f7fd fbd8 	bl	80004a0 <__aeabi_f2d>
 8002cf0:	4602      	mov	r2, r0
 8002cf2:	460b      	mov	r3, r1
 8002cf4:	4620      	mov	r0, r4
 8002cf6:	4629      	mov	r1, r5
 8002cf8:	f7fd fc2a 	bl	8000550 <__aeabi_dmul>
 8002cfc:	4602      	mov	r2, r0
 8002cfe:	460b      	mov	r3, r1
 8002d00:	4614      	mov	r4, r2
 8002d02:	461d      	mov	r5, r3
 8002d04:	4b1b      	ldr	r3, [pc, #108]	; (8002d74 <Trajectory+0x2c4>)
 8002d06:	ed93 7a00 	vldr	s14, [r3]
 8002d0a:	4b1b      	ldr	r3, [pc, #108]	; (8002d78 <Trajectory+0x2c8>)
 8002d0c:	edd3 7a00 	vldr	s15, [r3]
 8002d10:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002d14:	4b19      	ldr	r3, [pc, #100]	; (8002d7c <Trajectory+0x2cc>)
 8002d16:	edd3 7a00 	vldr	s15, [r3]
 8002d1a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002d1e:	ee17 0a90 	vmov	r0, s15
 8002d22:	f7fd fbbd 	bl	80004a0 <__aeabi_f2d>
 8002d26:	4602      	mov	r2, r0
 8002d28:	460b      	mov	r3, r1
 8002d2a:	4620      	mov	r0, r4
 8002d2c:	4629      	mov	r1, r5
 8002d2e:	f7fd fa59 	bl	80001e4 <__adddf3>
 8002d32:	4602      	mov	r2, r0
 8002d34:	460b      	mov	r3, r1
 8002d36:	4610      	mov	r0, r2
 8002d38:	4619      	mov	r1, r3
 8002d3a:	f7fd fed9 	bl	8000af0 <__aeabi_d2f>
 8002d3e:	4603      	mov	r3, r0
 8002d40:	4a11      	ldr	r2, [pc, #68]	; (8002d88 <Trajectory+0x2d8>)
 8002d42:	6013      	str	r3, [r2, #0]
			tra_velo = vb_n;
 8002d44:	4b0d      	ldr	r3, [pc, #52]	; (8002d7c <Trajectory+0x2cc>)
 8002d46:	681b      	ldr	r3, [r3, #0]
 8002d48:	4a10      	ldr	r2, [pc, #64]	; (8002d8c <Trajectory+0x2dc>)
 8002d4a:	6013      	str	r3, [r2, #0]
			tra_acc = 0;
 8002d4c:	4b10      	ldr	r3, [pc, #64]	; (8002d90 <Trajectory+0x2e0>)
 8002d4e:	f04f 0200 	mov.w	r2, #0
 8002d52:	601a      	str	r2, [r3, #0]
			start_tra = 0;
 8002d54:	4b0f      	ldr	r3, [pc, #60]	; (8002d94 <Trajectory+0x2e4>)
 8002d56:	2200      	movs	r2, #0
 8002d58:	701a      	strb	r2, [r3, #0]
 8002d5a:	e115      	b.n	8002f88 <Trajectory+0x4d8>
 8002d5c:	f3af 8000 	nop.w
 8002d60:	9999999a 	.word	0x9999999a
 8002d64:	3fb99999 	.word	0x3fb99999
 8002d68:	3e99999a 	.word	0x3e99999a
 8002d6c:	3e20d978 	.word	0x3e20d978
 8002d70:	200005d4 	.word	0x200005d4
 8002d74:	200005d0 	.word	0x200005d0
 8002d78:	200005c4 	.word	0x200005c4
 8002d7c:	200005c8 	.word	0x200005c8
 8002d80:	200005cc 	.word	0x200005cc
 8002d84:	3fe00000 	.word	0x3fe00000
 8002d88:	200005b8 	.word	0x200005b8
 8002d8c:	200005bc 	.word	0x200005bc
 8002d90:	200005c0 	.word	0x200005c0
 8002d94:	200005e6 	.word	0x200005e6
 8002d98:	d97f62b7 	.word	0xd97f62b7
 8002d9c:	4023193d 	.word	0x4023193d

		}
		else if(tua >= tf-tb && tua <= tf){
 8002da0:	4ba2      	ldr	r3, [pc, #648]	; (800302c <Trajectory+0x57c>)
 8002da2:	ed93 7a00 	vldr	s14, [r3]
 8002da6:	4ba2      	ldr	r3, [pc, #648]	; (8003030 <Trajectory+0x580>)
 8002da8:	edd3 7a00 	vldr	s15, [r3]
 8002dac:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002db0:	4ba0      	ldr	r3, [pc, #640]	; (8003034 <Trajectory+0x584>)
 8002db2:	edd3 7a00 	vldr	s15, [r3]
 8002db6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002dba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002dbe:	f200 80e3 	bhi.w	8002f88 <Trajectory+0x4d8>
 8002dc2:	4b9c      	ldr	r3, [pc, #624]	; (8003034 <Trajectory+0x584>)
 8002dc4:	ed93 7a00 	vldr	s14, [r3]
 8002dc8:	4b98      	ldr	r3, [pc, #608]	; (800302c <Trajectory+0x57c>)
 8002dca:	edd3 7a00 	vldr	s15, [r3]
 8002dce:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002dd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002dd6:	f200 80d7 	bhi.w	8002f88 <Trajectory+0x4d8>
			tra_pos = (0.5*ab*tb*tb) + (vb_n*(tua-(tf-tb))) + (vb_n*(tf-(2*tb))) - (0.5*ab*(tua-(tf-tb))*(tua-(tf-tb)));
 8002dda:	68f8      	ldr	r0, [r7, #12]
 8002ddc:	f7fd fb60 	bl	80004a0 <__aeabi_f2d>
 8002de0:	f04f 0200 	mov.w	r2, #0
 8002de4:	4b94      	ldr	r3, [pc, #592]	; (8003038 <Trajectory+0x588>)
 8002de6:	f7fd fbb3 	bl	8000550 <__aeabi_dmul>
 8002dea:	4602      	mov	r2, r0
 8002dec:	460b      	mov	r3, r1
 8002dee:	4614      	mov	r4, r2
 8002df0:	461d      	mov	r5, r3
 8002df2:	4b8f      	ldr	r3, [pc, #572]	; (8003030 <Trajectory+0x580>)
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	4618      	mov	r0, r3
 8002df8:	f7fd fb52 	bl	80004a0 <__aeabi_f2d>
 8002dfc:	4602      	mov	r2, r0
 8002dfe:	460b      	mov	r3, r1
 8002e00:	4620      	mov	r0, r4
 8002e02:	4629      	mov	r1, r5
 8002e04:	f7fd fba4 	bl	8000550 <__aeabi_dmul>
 8002e08:	4602      	mov	r2, r0
 8002e0a:	460b      	mov	r3, r1
 8002e0c:	4614      	mov	r4, r2
 8002e0e:	461d      	mov	r5, r3
 8002e10:	4b87      	ldr	r3, [pc, #540]	; (8003030 <Trajectory+0x580>)
 8002e12:	681b      	ldr	r3, [r3, #0]
 8002e14:	4618      	mov	r0, r3
 8002e16:	f7fd fb43 	bl	80004a0 <__aeabi_f2d>
 8002e1a:	4602      	mov	r2, r0
 8002e1c:	460b      	mov	r3, r1
 8002e1e:	4620      	mov	r0, r4
 8002e20:	4629      	mov	r1, r5
 8002e22:	f7fd fb95 	bl	8000550 <__aeabi_dmul>
 8002e26:	4602      	mov	r2, r0
 8002e28:	460b      	mov	r3, r1
 8002e2a:	4614      	mov	r4, r2
 8002e2c:	461d      	mov	r5, r3
 8002e2e:	4b81      	ldr	r3, [pc, #516]	; (8003034 <Trajectory+0x584>)
 8002e30:	ed93 7a00 	vldr	s14, [r3]
 8002e34:	4b7d      	ldr	r3, [pc, #500]	; (800302c <Trajectory+0x57c>)
 8002e36:	edd3 6a00 	vldr	s13, [r3]
 8002e3a:	4b7d      	ldr	r3, [pc, #500]	; (8003030 <Trajectory+0x580>)
 8002e3c:	edd3 7a00 	vldr	s15, [r3]
 8002e40:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8002e44:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002e48:	4b7c      	ldr	r3, [pc, #496]	; (800303c <Trajectory+0x58c>)
 8002e4a:	edd3 7a00 	vldr	s15, [r3]
 8002e4e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002e52:	ee17 0a90 	vmov	r0, s15
 8002e56:	f7fd fb23 	bl	80004a0 <__aeabi_f2d>
 8002e5a:	4602      	mov	r2, r0
 8002e5c:	460b      	mov	r3, r1
 8002e5e:	4620      	mov	r0, r4
 8002e60:	4629      	mov	r1, r5
 8002e62:	f7fd f9bf 	bl	80001e4 <__adddf3>
 8002e66:	4602      	mov	r2, r0
 8002e68:	460b      	mov	r3, r1
 8002e6a:	4614      	mov	r4, r2
 8002e6c:	461d      	mov	r5, r3
 8002e6e:	4b6f      	ldr	r3, [pc, #444]	; (800302c <Trajectory+0x57c>)
 8002e70:	ed93 7a00 	vldr	s14, [r3]
 8002e74:	4b6e      	ldr	r3, [pc, #440]	; (8003030 <Trajectory+0x580>)
 8002e76:	edd3 7a00 	vldr	s15, [r3]
 8002e7a:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8002e7e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002e82:	4b6e      	ldr	r3, [pc, #440]	; (800303c <Trajectory+0x58c>)
 8002e84:	edd3 7a00 	vldr	s15, [r3]
 8002e88:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002e8c:	ee17 0a90 	vmov	r0, s15
 8002e90:	f7fd fb06 	bl	80004a0 <__aeabi_f2d>
 8002e94:	4602      	mov	r2, r0
 8002e96:	460b      	mov	r3, r1
 8002e98:	4620      	mov	r0, r4
 8002e9a:	4629      	mov	r1, r5
 8002e9c:	f7fd f9a2 	bl	80001e4 <__adddf3>
 8002ea0:	4602      	mov	r2, r0
 8002ea2:	460b      	mov	r3, r1
 8002ea4:	4614      	mov	r4, r2
 8002ea6:	461d      	mov	r5, r3
 8002ea8:	68f8      	ldr	r0, [r7, #12]
 8002eaa:	f7fd faf9 	bl	80004a0 <__aeabi_f2d>
 8002eae:	f04f 0200 	mov.w	r2, #0
 8002eb2:	4b61      	ldr	r3, [pc, #388]	; (8003038 <Trajectory+0x588>)
 8002eb4:	f7fd fb4c 	bl	8000550 <__aeabi_dmul>
 8002eb8:	4602      	mov	r2, r0
 8002eba:	460b      	mov	r3, r1
 8002ebc:	4690      	mov	r8, r2
 8002ebe:	4699      	mov	r9, r3
 8002ec0:	4b5c      	ldr	r3, [pc, #368]	; (8003034 <Trajectory+0x584>)
 8002ec2:	ed93 7a00 	vldr	s14, [r3]
 8002ec6:	4b59      	ldr	r3, [pc, #356]	; (800302c <Trajectory+0x57c>)
 8002ec8:	edd3 6a00 	vldr	s13, [r3]
 8002ecc:	4b58      	ldr	r3, [pc, #352]	; (8003030 <Trajectory+0x580>)
 8002ece:	edd3 7a00 	vldr	s15, [r3]
 8002ed2:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8002ed6:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002eda:	ee17 0a90 	vmov	r0, s15
 8002ede:	f7fd fadf 	bl	80004a0 <__aeabi_f2d>
 8002ee2:	4602      	mov	r2, r0
 8002ee4:	460b      	mov	r3, r1
 8002ee6:	4640      	mov	r0, r8
 8002ee8:	4649      	mov	r1, r9
 8002eea:	f7fd fb31 	bl	8000550 <__aeabi_dmul>
 8002eee:	4602      	mov	r2, r0
 8002ef0:	460b      	mov	r3, r1
 8002ef2:	4690      	mov	r8, r2
 8002ef4:	4699      	mov	r9, r3
 8002ef6:	4b4f      	ldr	r3, [pc, #316]	; (8003034 <Trajectory+0x584>)
 8002ef8:	ed93 7a00 	vldr	s14, [r3]
 8002efc:	4b4b      	ldr	r3, [pc, #300]	; (800302c <Trajectory+0x57c>)
 8002efe:	edd3 6a00 	vldr	s13, [r3]
 8002f02:	4b4b      	ldr	r3, [pc, #300]	; (8003030 <Trajectory+0x580>)
 8002f04:	edd3 7a00 	vldr	s15, [r3]
 8002f08:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8002f0c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002f10:	ee17 0a90 	vmov	r0, s15
 8002f14:	f7fd fac4 	bl	80004a0 <__aeabi_f2d>
 8002f18:	4602      	mov	r2, r0
 8002f1a:	460b      	mov	r3, r1
 8002f1c:	4640      	mov	r0, r8
 8002f1e:	4649      	mov	r1, r9
 8002f20:	f7fd fb16 	bl	8000550 <__aeabi_dmul>
 8002f24:	4602      	mov	r2, r0
 8002f26:	460b      	mov	r3, r1
 8002f28:	4620      	mov	r0, r4
 8002f2a:	4629      	mov	r1, r5
 8002f2c:	f7fd f958 	bl	80001e0 <__aeabi_dsub>
 8002f30:	4602      	mov	r2, r0
 8002f32:	460b      	mov	r3, r1
 8002f34:	4610      	mov	r0, r2
 8002f36:	4619      	mov	r1, r3
 8002f38:	f7fd fdda 	bl	8000af0 <__aeabi_d2f>
 8002f3c:	4603      	mov	r3, r0
 8002f3e:	4a40      	ldr	r2, [pc, #256]	; (8003040 <Trajectory+0x590>)
 8002f40:	6013      	str	r3, [r2, #0]
			tra_velo = vb_n - (ab*(tua-(tf-tb)));
 8002f42:	4b3e      	ldr	r3, [pc, #248]	; (800303c <Trajectory+0x58c>)
 8002f44:	ed93 7a00 	vldr	s14, [r3]
 8002f48:	4b3a      	ldr	r3, [pc, #232]	; (8003034 <Trajectory+0x584>)
 8002f4a:	edd3 6a00 	vldr	s13, [r3]
 8002f4e:	4b37      	ldr	r3, [pc, #220]	; (800302c <Trajectory+0x57c>)
 8002f50:	ed93 6a00 	vldr	s12, [r3]
 8002f54:	4b36      	ldr	r3, [pc, #216]	; (8003030 <Trajectory+0x580>)
 8002f56:	edd3 7a00 	vldr	s15, [r3]
 8002f5a:	ee76 7a67 	vsub.f32	s15, s12, s15
 8002f5e:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8002f62:	edd7 7a03 	vldr	s15, [r7, #12]
 8002f66:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002f6a:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002f6e:	4b35      	ldr	r3, [pc, #212]	; (8003044 <Trajectory+0x594>)
 8002f70:	edc3 7a00 	vstr	s15, [r3]
			tra_acc = -ab;
 8002f74:	edd7 7a03 	vldr	s15, [r7, #12]
 8002f78:	eef1 7a67 	vneg.f32	s15, s15
 8002f7c:	4b32      	ldr	r3, [pc, #200]	; (8003048 <Trajectory+0x598>)
 8002f7e:	edc3 7a00 	vstr	s15, [r3]
			start_tra = 2;
 8002f82:	4b32      	ldr	r3, [pc, #200]	; (800304c <Trajectory+0x59c>)
 8002f84:	2202      	movs	r2, #2
 8002f86:	701a      	strb	r2, [r3, #0]
		}
		if(tua <= tf){
 8002f88:	4b2a      	ldr	r3, [pc, #168]	; (8003034 <Trajectory+0x584>)
 8002f8a:	ed93 7a00 	vldr	s14, [r3]
 8002f8e:	4b27      	ldr	r3, [pc, #156]	; (800302c <Trajectory+0x57c>)
 8002f90:	edd3 7a00 	vldr	s15, [r3]
 8002f94:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002f98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002f9c:	d900      	bls.n	8002fa0 <Trajectory+0x4f0>
		tra_velo = 0;
		tra_acc = 0;
	}


}
 8002f9e:	e03f      	b.n	8003020 <Trajectory+0x570>
			if(direct == 0){
 8002fa0:	4b2b      	ldr	r3, [pc, #172]	; (8003050 <Trajectory+0x5a0>)
 8002fa2:	781b      	ldrb	r3, [r3, #0]
 8002fa4:	2b00      	cmp	r3, #0
 8002fa6:	d123      	bne.n	8002ff0 <Trajectory+0x540>
				tra_pos = tra_pos*-1;
 8002fa8:	4b25      	ldr	r3, [pc, #148]	; (8003040 <Trajectory+0x590>)
 8002faa:	edd3 7a00 	vldr	s15, [r3]
 8002fae:	eef1 7a67 	vneg.f32	s15, s15
 8002fb2:	4b23      	ldr	r3, [pc, #140]	; (8003040 <Trajectory+0x590>)
 8002fb4:	edc3 7a00 	vstr	s15, [r3]
				tra_velo = tra_velo *-1;
 8002fb8:	4b22      	ldr	r3, [pc, #136]	; (8003044 <Trajectory+0x594>)
 8002fba:	edd3 7a00 	vldr	s15, [r3]
 8002fbe:	eef1 7a67 	vneg.f32	s15, s15
 8002fc2:	4b20      	ldr	r3, [pc, #128]	; (8003044 <Trajectory+0x594>)
 8002fc4:	edc3 7a00 	vstr	s15, [r3]
				tra_acc = tra_acc *-1;
 8002fc8:	4b1f      	ldr	r3, [pc, #124]	; (8003048 <Trajectory+0x598>)
 8002fca:	edd3 7a00 	vldr	s15, [r3]
 8002fce:	eef1 7a67 	vneg.f32	s15, s15
 8002fd2:	4b1d      	ldr	r3, [pc, #116]	; (8003048 <Trajectory+0x598>)
 8002fd4:	edc3 7a00 	vstr	s15, [r3]
				tra_pos += rad_before;
 8002fd8:	4b19      	ldr	r3, [pc, #100]	; (8003040 <Trajectory+0x590>)
 8002fda:	ed93 7a00 	vldr	s14, [r3]
 8002fde:	4b1d      	ldr	r3, [pc, #116]	; (8003054 <Trajectory+0x5a4>)
 8002fe0:	edd3 7a00 	vldr	s15, [r3]
 8002fe4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002fe8:	4b15      	ldr	r3, [pc, #84]	; (8003040 <Trajectory+0x590>)
 8002fea:	edc3 7a00 	vstr	s15, [r3]
}
 8002fee:	e017      	b.n	8003020 <Trajectory+0x570>
				tra_pos += rad_before;
 8002ff0:	4b13      	ldr	r3, [pc, #76]	; (8003040 <Trajectory+0x590>)
 8002ff2:	ed93 7a00 	vldr	s14, [r3]
 8002ff6:	4b17      	ldr	r3, [pc, #92]	; (8003054 <Trajectory+0x5a4>)
 8002ff8:	edd3 7a00 	vldr	s15, [r3]
 8002ffc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003000:	4b0f      	ldr	r3, [pc, #60]	; (8003040 <Trajectory+0x590>)
 8003002:	edc3 7a00 	vstr	s15, [r3]
}
 8003006:	e00b      	b.n	8003020 <Trajectory+0x570>
		tra_pos = 0;
 8003008:	4b0d      	ldr	r3, [pc, #52]	; (8003040 <Trajectory+0x590>)
 800300a:	f04f 0200 	mov.w	r2, #0
 800300e:	601a      	str	r2, [r3, #0]
		tra_velo = 0;
 8003010:	4b0c      	ldr	r3, [pc, #48]	; (8003044 <Trajectory+0x594>)
 8003012:	f04f 0200 	mov.w	r2, #0
 8003016:	601a      	str	r2, [r3, #0]
		tra_acc = 0;
 8003018:	4b0b      	ldr	r3, [pc, #44]	; (8003048 <Trajectory+0x598>)
 800301a:	f04f 0200 	mov.w	r2, #0
 800301e:	601a      	str	r2, [r3, #0]
}
 8003020:	bf00      	nop
 8003022:	3710      	adds	r7, #16
 8003024:	46bd      	mov	sp, r7
 8003026:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 800302a:	bf00      	nop
 800302c:	200005cc 	.word	0x200005cc
 8003030:	200005c4 	.word	0x200005c4
 8003034:	200005d0 	.word	0x200005d0
 8003038:	3fe00000 	.word	0x3fe00000
 800303c:	200005c8 	.word	0x200005c8
 8003040:	200005b8 	.word	0x200005b8
 8003044:	200005bc 	.word	0x200005bc
 8003048:	200005c0 	.word	0x200005c0
 800304c:	200005e6 	.word	0x200005e6
 8003050:	2000002c 	.word	0x2000002c
 8003054:	200005e0 	.word	0x200005e0

08003058 <Drivemotor>:
void Drivemotor(int PWM){
 8003058:	b590      	push	{r4, r7, lr}
 800305a:	b083      	sub	sp, #12
 800305c:	af00      	add	r7, sp, #0
 800305e:	6078      	str	r0, [r7, #4]
	if(PWM<=0 && PWM>=-10000){
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	2b00      	cmp	r3, #0
 8003064:	dc18      	bgt.n	8003098 <Drivemotor+0x40>
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	4a29      	ldr	r2, [pc, #164]	; (8003110 <Drivemotor+0xb8>)
 800306a:	4293      	cmp	r3, r2
 800306c:	db14      	blt.n	8003098 <Drivemotor+0x40>
		PWM = 10000-aaabs(PWM);
 800306e:	6878      	ldr	r0, [r7, #4]
 8003070:	f000 fae6 	bl	8003640 <aaabs>
 8003074:	4603      	mov	r3, r0
 8003076:	f5c3 531c 	rsb	r3, r3, #9984	; 0x2700
 800307a:	3310      	adds	r3, #16
 800307c:	607b      	str	r3, [r7, #4]
		htim2.Instance->CCR1=aaabs(PWM);
 800307e:	4b25      	ldr	r3, [pc, #148]	; (8003114 <Drivemotor+0xbc>)
 8003080:	681c      	ldr	r4, [r3, #0]
 8003082:	6878      	ldr	r0, [r7, #4]
 8003084:	f000 fadc 	bl	8003640 <aaabs>
 8003088:	4603      	mov	r3, r0
 800308a:	6363      	str	r3, [r4, #52]	; 0x34
		htim2.Instance->CCR2=10000;
 800308c:	4b21      	ldr	r3, [pc, #132]	; (8003114 <Drivemotor+0xbc>)
 800308e:	681b      	ldr	r3, [r3, #0]
 8003090:	f242 7210 	movw	r2, #10000	; 0x2710
 8003094:	639a      	str	r2, [r3, #56]	; 0x38
 8003096:	e036      	b.n	8003106 <Drivemotor+0xae>
		}
	else if (PWM<-10000){
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	4a1d      	ldr	r2, [pc, #116]	; (8003110 <Drivemotor+0xb8>)
 800309c:	4293      	cmp	r3, r2
 800309e:	da09      	bge.n	80030b4 <Drivemotor+0x5c>
		htim2.Instance->CCR1=0;
 80030a0:	4b1c      	ldr	r3, [pc, #112]	; (8003114 <Drivemotor+0xbc>)
 80030a2:	681b      	ldr	r3, [r3, #0]
 80030a4:	2200      	movs	r2, #0
 80030a6:	635a      	str	r2, [r3, #52]	; 0x34
		htim2.Instance->CCR2=10000;
 80030a8:	4b1a      	ldr	r3, [pc, #104]	; (8003114 <Drivemotor+0xbc>)
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	f242 7210 	movw	r2, #10000	; 0x2710
 80030b0:	639a      	str	r2, [r3, #56]	; 0x38
		htim2.Instance->CCR2=aaabs(PWM);
	}else if(PWM>10000){
		htim2.Instance->CCR1=10000;
		htim2.Instance->CCR2=0;
	}
}
 80030b2:	e028      	b.n	8003106 <Drivemotor+0xae>
	}else if(PWM>0 && PWM<=10000){
 80030b4:	687b      	ldr	r3, [r7, #4]
 80030b6:	2b00      	cmp	r3, #0
 80030b8:	dd16      	ble.n	80030e8 <Drivemotor+0x90>
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	f242 7210 	movw	r2, #10000	; 0x2710
 80030c0:	4293      	cmp	r3, r2
 80030c2:	dc11      	bgt.n	80030e8 <Drivemotor+0x90>
		PWM = 10000-PWM;
 80030c4:	687b      	ldr	r3, [r7, #4]
 80030c6:	f5c3 531c 	rsb	r3, r3, #9984	; 0x2700
 80030ca:	3310      	adds	r3, #16
 80030cc:	607b      	str	r3, [r7, #4]
		htim2.Instance->CCR1=10000;
 80030ce:	4b11      	ldr	r3, [pc, #68]	; (8003114 <Drivemotor+0xbc>)
 80030d0:	681b      	ldr	r3, [r3, #0]
 80030d2:	f242 7210 	movw	r2, #10000	; 0x2710
 80030d6:	635a      	str	r2, [r3, #52]	; 0x34
		htim2.Instance->CCR2=aaabs(PWM);
 80030d8:	4b0e      	ldr	r3, [pc, #56]	; (8003114 <Drivemotor+0xbc>)
 80030da:	681c      	ldr	r4, [r3, #0]
 80030dc:	6878      	ldr	r0, [r7, #4]
 80030de:	f000 faaf 	bl	8003640 <aaabs>
 80030e2:	4603      	mov	r3, r0
 80030e4:	63a3      	str	r3, [r4, #56]	; 0x38
 80030e6:	e00e      	b.n	8003106 <Drivemotor+0xae>
	}else if(PWM>10000){
 80030e8:	687b      	ldr	r3, [r7, #4]
 80030ea:	f242 7210 	movw	r2, #10000	; 0x2710
 80030ee:	4293      	cmp	r3, r2
 80030f0:	dd09      	ble.n	8003106 <Drivemotor+0xae>
		htim2.Instance->CCR1=10000;
 80030f2:	4b08      	ldr	r3, [pc, #32]	; (8003114 <Drivemotor+0xbc>)
 80030f4:	681b      	ldr	r3, [r3, #0]
 80030f6:	f242 7210 	movw	r2, #10000	; 0x2710
 80030fa:	635a      	str	r2, [r3, #52]	; 0x34
		htim2.Instance->CCR2=0;
 80030fc:	4b05      	ldr	r3, [pc, #20]	; (8003114 <Drivemotor+0xbc>)
 80030fe:	681b      	ldr	r3, [r3, #0]
 8003100:	2200      	movs	r2, #0
 8003102:	639a      	str	r2, [r3, #56]	; 0x38
}
 8003104:	e7ff      	b.n	8003106 <Drivemotor+0xae>
 8003106:	bf00      	nop
 8003108:	370c      	adds	r7, #12
 800310a:	46bd      	mov	sp, r7
 800310c:	bd90      	pop	{r4, r7, pc}
 800310e:	bf00      	nop
 8003110:	ffffd8f0 	.word	0xffffd8f0
 8003114:	20000330 	.word	0x20000330

08003118 <NFcontacton>:

void NFcontacton(){
 8003118:	b580      	push	{r7, lr}
 800311a:	b082      	sub	sp, #8
 800311c:	af02      	add	r7, sp, #8
	HAL_I2C_Master_Transmit(&hi2c1, NFW_ADDR, &NFREG_ON, 1, 10);
 800311e:	230a      	movs	r3, #10
 8003120:	9300      	str	r3, [sp, #0]
 8003122:	2301      	movs	r3, #1
 8003124:	4a05      	ldr	r2, [pc, #20]	; (800313c <NFcontacton+0x24>)
 8003126:	2146      	movs	r1, #70	; 0x46
 8003128:	4805      	ldr	r0, [pc, #20]	; (8003140 <NFcontacton+0x28>)
 800312a:	f002 fcd3 	bl	8005ad4 <HAL_I2C_Master_Transmit>
	microsecDelay(60);
 800312e:	203c      	movs	r0, #60	; 0x3c
 8003130:	f000 fa68 	bl	8003604 <microsecDelay>
	//NFwriteFlag = 0;
}
 8003134:	bf00      	nop
 8003136:	46bd      	mov	sp, r7
 8003138:	bd80      	pop	{r7, pc}
 800313a:	bf00      	nop
 800313c:	2000001f 	.word	0x2000001f
 8003140:	200001c4 	.word	0x200001c4

08003144 <NFgetstate>:

void NFgetstate(){
 8003144:	b580      	push	{r7, lr}
 8003146:	b082      	sub	sp, #8
 8003148:	af02      	add	r7, sp, #8
	if( (hi2c1.State == HAL_I2C_STATE_READY && (HAL_GetTick()-NFtimest>500))){
 800314a:	4b17      	ldr	r3, [pc, #92]	; (80031a8 <NFgetstate+0x64>)
 800314c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003150:	b2db      	uxtb	r3, r3
 8003152:	2b20      	cmp	r3, #32
 8003154:	d124      	bne.n	80031a0 <NFgetstate+0x5c>
 8003156:	f001 fc7d 	bl	8004a54 <HAL_GetTick>
 800315a:	4603      	mov	r3, r0
 800315c:	4a13      	ldr	r2, [pc, #76]	; (80031ac <NFgetstate+0x68>)
 800315e:	8812      	ldrh	r2, [r2, #0]
 8003160:	1a9b      	subs	r3, r3, r2
 8003162:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8003166:	d91b      	bls.n	80031a0 <NFgetstate+0x5c>
		NFtimest = HAL_GetTick();
 8003168:	f001 fc74 	bl	8004a54 <HAL_GetTick>
 800316c:	4603      	mov	r3, r0
 800316e:	b29a      	uxth	r2, r3
 8003170:	4b0e      	ldr	r3, [pc, #56]	; (80031ac <NFgetstate+0x68>)
 8003172:	801a      	strh	r2, [r3, #0]
		HAL_I2C_Master_Transmit(&hi2c1, NFW_ADDR, &NFREG_INIT, 1, 10);
 8003174:	230a      	movs	r3, #10
 8003176:	9300      	str	r3, [sp, #0]
 8003178:	2301      	movs	r3, #1
 800317a:	4a0d      	ldr	r2, [pc, #52]	; (80031b0 <NFgetstate+0x6c>)
 800317c:	2146      	movs	r1, #70	; 0x46
 800317e:	480a      	ldr	r0, [pc, #40]	; (80031a8 <NFgetstate+0x64>)
 8003180:	f002 fca8 	bl	8005ad4 <HAL_I2C_Master_Transmit>
		microsecDelay(100);
 8003184:	2064      	movs	r0, #100	; 0x64
 8003186:	f000 fa3d 	bl	8003604 <microsecDelay>
		HAL_I2C_Master_Receive(&hi2c1, NFR_ADDR, &NFstate, 1, 10);
 800318a:	230a      	movs	r3, #10
 800318c:	9300      	str	r3, [sp, #0]
 800318e:	2301      	movs	r3, #1
 8003190:	4a08      	ldr	r2, [pc, #32]	; (80031b4 <NFgetstate+0x70>)
 8003192:	2147      	movs	r1, #71	; 0x47
 8003194:	4804      	ldr	r0, [pc, #16]	; (80031a8 <NFgetstate+0x64>)
 8003196:	f002 fd9b 	bl	8005cd0 <HAL_I2C_Master_Receive>
		microsecDelay(100);
 800319a:	2064      	movs	r0, #100	; 0x64
 800319c:	f000 fa32 	bl	8003604 <microsecDelay>
		//NFreadFlag = 0;
	}
}
 80031a0:	bf00      	nop
 80031a2:	46bd      	mov	sp, r7
 80031a4:	bd80      	pop	{r7, pc}
 80031a6:	bf00      	nop
 80031a8:	200001c4 	.word	0x200001c4
 80031ac:	20000570 	.word	0x20000570
 80031b0:	20000020 	.word	0x20000020
 80031b4:	2000056e 	.word	0x2000056e

080031b8 <AMT222getpos>:

void AMT222getpos(uint16_t *data){
 80031b8:	b580      	push	{r7, lr}
 80031ba:	b082      	sub	sp, #8
 80031bc:	af00      	add	r7, sp, #0
 80031be:	6078      	str	r0, [r7, #4]

	switch(AMTstate){
 80031c0:	4b6d      	ldr	r3, [pc, #436]	; (8003378 <AMT222getpos+0x1c0>)
 80031c2:	781b      	ldrb	r3, [r3, #0]
 80031c4:	2b03      	cmp	r3, #3
 80031c6:	f200 80c6 	bhi.w	8003356 <AMT222getpos+0x19e>
 80031ca:	a201      	add	r2, pc, #4	; (adr r2, 80031d0 <AMT222getpos+0x18>)
 80031cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80031d0:	080031e1 	.word	0x080031e1
 80031d4:	0800320d 	.word	0x0800320d
 80031d8:	08003221 	.word	0x08003221
 80031dc:	08003235 	.word	0x08003235
	case 0:
		timeStamp = micros();
 80031e0:	f000 fa90 	bl	8003704 <micros>
 80031e4:	4602      	mov	r2, r0
 80031e6:	460b      	mov	r3, r1
 80031e8:	4b64      	ldr	r3, [pc, #400]	; (800337c <AMT222getpos+0x1c4>)
 80031ea:	601a      	str	r2, [r3, #0]
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 80031ec:	2200      	movs	r2, #0
 80031ee:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80031f2:	4863      	ldr	r0, [pc, #396]	; (8003380 <AMT222getpos+0x1c8>)
 80031f4:	f002 faf8 	bl	80057e8 <HAL_GPIO_WritePin>
	    HAL_SPI_TransmitReceive_DMA(&hspi3, &AMTGETPOS[0], &AMTHbyte, 1);
 80031f8:	2301      	movs	r3, #1
 80031fa:	4a62      	ldr	r2, [pc, #392]	; (8003384 <AMT222getpos+0x1cc>)
 80031fc:	4962      	ldr	r1, [pc, #392]	; (8003388 <AMT222getpos+0x1d0>)
 80031fe:	4863      	ldr	r0, [pc, #396]	; (800338c <AMT222getpos+0x1d4>)
 8003200:	f005 fcb6 	bl	8008b70 <HAL_SPI_TransmitReceive_DMA>
	    AMTcomplete = 0;
 8003204:	4b62      	ldr	r3, [pc, #392]	; (8003390 <AMT222getpos+0x1d8>)
 8003206:	2200      	movs	r2, #0
 8003208:	701a      	strb	r2, [r3, #0]
		break;
 800320a:	e0a4      	b.n	8003356 <AMT222getpos+0x19e>
	case 1:
		//microsecDelay(5);
		AMTstate+=1;
 800320c:	4b5a      	ldr	r3, [pc, #360]	; (8003378 <AMT222getpos+0x1c0>)
 800320e:	781b      	ldrb	r3, [r3, #0]
 8003210:	3301      	adds	r3, #1
 8003212:	b2da      	uxtb	r2, r3
 8003214:	4b58      	ldr	r3, [pc, #352]	; (8003378 <AMT222getpos+0x1c0>)
 8003216:	701a      	strb	r2, [r3, #0]
		AMTcomplete = 1;
 8003218:	4b5d      	ldr	r3, [pc, #372]	; (8003390 <AMT222getpos+0x1d8>)
 800321a:	2201      	movs	r2, #1
 800321c:	701a      	strb	r2, [r3, #0]
		break;
 800321e:	e09a      	b.n	8003356 <AMT222getpos+0x19e>
	case 2:
		HAL_SPI_TransmitReceive_DMA(&hspi3, &AMTGETPOS[1], &AMTLbyte, 1);
 8003220:	2301      	movs	r3, #1
 8003222:	4a5c      	ldr	r2, [pc, #368]	; (8003394 <AMT222getpos+0x1dc>)
 8003224:	495c      	ldr	r1, [pc, #368]	; (8003398 <AMT222getpos+0x1e0>)
 8003226:	4859      	ldr	r0, [pc, #356]	; (800338c <AMT222getpos+0x1d4>)
 8003228:	f005 fca2 	bl	8008b70 <HAL_SPI_TransmitReceive_DMA>
		AMTcomplete = 0;
 800322c:	4b58      	ldr	r3, [pc, #352]	; (8003390 <AMT222getpos+0x1d8>)
 800322e:	2200      	movs	r2, #0
 8003230:	701a      	strb	r2, [r3, #0]
		break;
 8003232:	e090      	b.n	8003356 <AMT222getpos+0x19e>
	case 3:
		AMTlogic_checkbit = AMT222checkbit( AMTHbyte, AMTLbyte);
 8003234:	4b53      	ldr	r3, [pc, #332]	; (8003384 <AMT222getpos+0x1cc>)
 8003236:	781b      	ldrb	r3, [r3, #0]
 8003238:	461a      	mov	r2, r3
 800323a:	4b56      	ldr	r3, [pc, #344]	; (8003394 <AMT222getpos+0x1dc>)
 800323c:	781b      	ldrb	r3, [r3, #0]
 800323e:	4619      	mov	r1, r3
 8003240:	4610      	mov	r0, r2
 8003242:	f000 f8f1 	bl	8003428 <AMT222checkbit>
 8003246:	4603      	mov	r3, r0
 8003248:	461a      	mov	r2, r3
 800324a:	4b54      	ldr	r3, [pc, #336]	; (800339c <AMT222getpos+0x1e4>)
 800324c:	701a      	strb	r2, [r3, #0]
	    if( AMTlogic_checkbit){
 800324e:	4b53      	ldr	r3, [pc, #332]	; (800339c <AMT222getpos+0x1e4>)
 8003250:	781b      	ldrb	r3, [r3, #0]
 8003252:	2b00      	cmp	r3, #0
 8003254:	d078      	beq.n	8003348 <AMT222getpos+0x190>
		    // Shift high bit to correct position and sum them.
		    rawPos = AMTLbyte + ((AMTHbyte & 0b00111111)<<8);
 8003256:	4b4f      	ldr	r3, [pc, #316]	; (8003394 <AMT222getpos+0x1dc>)
 8003258:	781b      	ldrb	r3, [r3, #0]
 800325a:	b29a      	uxth	r2, r3
 800325c:	4b49      	ldr	r3, [pc, #292]	; (8003384 <AMT222getpos+0x1cc>)
 800325e:	781b      	ldrb	r3, [r3, #0]
 8003260:	021b      	lsls	r3, r3, #8
 8003262:	b29b      	uxth	r3, r3
 8003264:	f403 537c 	and.w	r3, r3, #16128	; 0x3f00
 8003268:	b29b      	uxth	r3, r3
 800326a:	4413      	add	r3, r2
 800326c:	b29a      	uxth	r2, r3
 800326e:	4b4c      	ldr	r3, [pc, #304]	; (80033a0 <AMT222getpos+0x1e8>)
 8003270:	801a      	strh	r2, [r3, #0]
		     // Convert uint16 to angle variable.
		    current_rad = (((rawPos)*2*PI)/(16384));
 8003272:	4b4b      	ldr	r3, [pc, #300]	; (80033a0 <AMT222getpos+0x1e8>)
 8003274:	881b      	ldrh	r3, [r3, #0]
 8003276:	005b      	lsls	r3, r3, #1
 8003278:	ee07 3a90 	vmov	s15, r3
 800327c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003280:	ed9f 7a48 	vldr	s14, [pc, #288]	; 80033a4 <AMT222getpos+0x1ec>
 8003284:	ee27 7a87 	vmul.f32	s14, s15, s14
 8003288:	eddf 6a47 	vldr	s13, [pc, #284]	; 80033a8 <AMT222getpos+0x1f0>
 800328c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8003290:	4b46      	ldr	r3, [pc, #280]	; (80033ac <AMT222getpos+0x1f4>)
 8003292:	edc3 7a00 	vstr	s15, [r3]
		    if(setinitial == 0){
 8003296:	4b46      	ldr	r3, [pc, #280]	; (80033b0 <AMT222getpos+0x1f8>)
 8003298:	781b      	ldrb	r3, [r3, #0]
 800329a:	2b00      	cmp	r3, #0
 800329c:	d150      	bne.n	8003340 <AMT222getpos+0x188>
		    current_rad = offset - current_rad;
 800329e:	4b45      	ldr	r3, [pc, #276]	; (80033b4 <AMT222getpos+0x1fc>)
 80032a0:	ed93 7a00 	vldr	s14, [r3]
 80032a4:	4b41      	ldr	r3, [pc, #260]	; (80033ac <AMT222getpos+0x1f4>)
 80032a6:	edd3 7a00 	vldr	s15, [r3]
 80032aa:	ee77 7a67 	vsub.f32	s15, s14, s15
 80032ae:	4b3f      	ldr	r3, [pc, #252]	; (80033ac <AMT222getpos+0x1f4>)
 80032b0:	edc3 7a00 	vstr	s15, [r3]
		    unwrapping();
 80032b4:	f000 f93a 	bl	800352c <unwrapping>
			if(current_rad_wrap-prevPos2 > 0.1 || current_rad_wrap-prevPos2 < -0.1){
 80032b8:	4b3f      	ldr	r3, [pc, #252]	; (80033b8 <AMT222getpos+0x200>)
 80032ba:	ed93 7a00 	vldr	s14, [r3]
 80032be:	4b3f      	ldr	r3, [pc, #252]	; (80033bc <AMT222getpos+0x204>)
 80032c0:	edd3 7a00 	vldr	s15, [r3]
 80032c4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80032c8:	ee17 0a90 	vmov	r0, s15
 80032cc:	f7fd f8e8 	bl	80004a0 <__aeabi_f2d>
 80032d0:	a323      	add	r3, pc, #140	; (adr r3, 8003360 <AMT222getpos+0x1a8>)
 80032d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032d6:	f7fd fbcb 	bl	8000a70 <__aeabi_dcmpgt>
 80032da:	4603      	mov	r3, r0
 80032dc:	2b00      	cmp	r3, #0
 80032de:	d113      	bne.n	8003308 <AMT222getpos+0x150>
 80032e0:	4b35      	ldr	r3, [pc, #212]	; (80033b8 <AMT222getpos+0x200>)
 80032e2:	ed93 7a00 	vldr	s14, [r3]
 80032e6:	4b35      	ldr	r3, [pc, #212]	; (80033bc <AMT222getpos+0x204>)
 80032e8:	edd3 7a00 	vldr	s15, [r3]
 80032ec:	ee77 7a67 	vsub.f32	s15, s14, s15
 80032f0:	ee17 0a90 	vmov	r0, s15
 80032f4:	f7fd f8d4 	bl	80004a0 <__aeabi_f2d>
 80032f8:	a31b      	add	r3, pc, #108	; (adr r3, 8003368 <AMT222getpos+0x1b0>)
 80032fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032fe:	f7fd fb99 	bl	8000a34 <__aeabi_dcmplt>
 8003302:	4603      	mov	r3, r0
 8003304:	2b00      	cmp	r3, #0
 8003306:	d003      	beq.n	8003310 <AMT222getpos+0x158>
				current_rad_wrap = prevPos2;
 8003308:	4b2c      	ldr	r3, [pc, #176]	; (80033bc <AMT222getpos+0x204>)
 800330a:	681b      	ldr	r3, [r3, #0]
 800330c:	4a2a      	ldr	r2, [pc, #168]	; (80033b8 <AMT222getpos+0x200>)
 800330e:	6013      	str	r3, [r2, #0]
			}
		    prevPos2 = current_rad_wrap;
 8003310:	4b29      	ldr	r3, [pc, #164]	; (80033b8 <AMT222getpos+0x200>)
 8003312:	681b      	ldr	r3, [r3, #0]
 8003314:	4a29      	ldr	r2, [pc, #164]	; (80033bc <AMT222getpos+0x204>)
 8003316:	6013      	str	r3, [r2, #0]
		    deg = current_rad_wrap*57.2957795;
 8003318:	4b27      	ldr	r3, [pc, #156]	; (80033b8 <AMT222getpos+0x200>)
 800331a:	681b      	ldr	r3, [r3, #0]
 800331c:	4618      	mov	r0, r3
 800331e:	f7fd f8bf 	bl	80004a0 <__aeabi_f2d>
 8003322:	a313      	add	r3, pc, #76	; (adr r3, 8003370 <AMT222getpos+0x1b8>)
 8003324:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003328:	f7fd f912 	bl	8000550 <__aeabi_dmul>
 800332c:	4602      	mov	r2, r0
 800332e:	460b      	mov	r3, r1
 8003330:	4610      	mov	r0, r2
 8003332:	4619      	mov	r1, r3
 8003334:	f7fd fbdc 	bl	8000af0 <__aeabi_d2f>
 8003338:	4603      	mov	r3, r0
 800333a:	4a21      	ldr	r2, [pc, #132]	; (80033c0 <AMT222getpos+0x208>)
 800333c:	6013      	str	r3, [r2, #0]
 800333e:	e003      	b.n	8003348 <AMT222getpos+0x190>
		    }
		    else{
		    	prevPos2 = 0;
 8003340:	4b1e      	ldr	r3, [pc, #120]	; (80033bc <AMT222getpos+0x204>)
 8003342:	f04f 0200 	mov.w	r2, #0
 8003346:	601a      	str	r2, [r3, #0]
		    }
			  /*if(current_rad <= 0){
				  current_rad = 6.28-(current_rad*-1);
			  }*/
	    }
		AMTstate = 0;
 8003348:	4b0b      	ldr	r3, [pc, #44]	; (8003378 <AMT222getpos+0x1c0>)
 800334a:	2200      	movs	r2, #0
 800334c:	701a      	strb	r2, [r3, #0]
		AMTcomplete = 0;
 800334e:	4b10      	ldr	r3, [pc, #64]	; (8003390 <AMT222getpos+0x1d8>)
 8003350:	2200      	movs	r2, #0
 8003352:	701a      	strb	r2, [r3, #0]
		break;
 8003354:	bf00      	nop
	}
}
 8003356:	bf00      	nop
 8003358:	3708      	adds	r7, #8
 800335a:	46bd      	mov	sp, r7
 800335c:	bd80      	pop	{r7, pc}
 800335e:	bf00      	nop
 8003360:	9999999a 	.word	0x9999999a
 8003364:	3fb99999 	.word	0x3fb99999
 8003368:	9999999a 	.word	0x9999999a
 800336c:	bfb99999 	.word	0xbfb99999
 8003370:	1a47a9e3 	.word	0x1a47a9e3
 8003374:	404ca5dc 	.word	0x404ca5dc
 8003378:	20000588 	.word	0x20000588
 800337c:	20000568 	.word	0x20000568
 8003380:	40020400 	.word	0x40020400
 8003384:	20000576 	.word	0x20000576
 8003388:	20000574 	.word	0x20000574
 800338c:	20000218 	.word	0x20000218
 8003390:	20000023 	.word	0x20000023
 8003394:	20000577 	.word	0x20000577
 8003398:	20000575 	.word	0x20000575
 800339c:	20000578 	.word	0x20000578
 80033a0:	2000057a 	.word	0x2000057a
 80033a4:	40490fdb 	.word	0x40490fdb
 80033a8:	46800000 	.word	0x46800000
 80033ac:	2000057c 	.word	0x2000057c
 80033b0:	2000000c 	.word	0x2000000c
 80033b4:	20000010 	.word	0x20000010
 80033b8:	20000580 	.word	0x20000580
 80033bc:	200007c8 	.word	0x200007c8
 80033c0:	20000584 	.word	0x20000584

080033c4 <HAL_SPI_TxRxCpltCallback>:
void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi){
 80033c4:	b580      	push	{r7, lr}
 80033c6:	b082      	sub	sp, #8
 80033c8:	af00      	add	r7, sp, #0
 80033ca:	6078      	str	r0, [r7, #4]
	if(hspi == &hspi3){
 80033cc:	687b      	ldr	r3, [r7, #4]
 80033ce:	4a12      	ldr	r2, [pc, #72]	; (8003418 <HAL_SPI_TxRxCpltCallback+0x54>)
 80033d0:	4293      	cmp	r3, r2
 80033d2:	d11d      	bne.n	8003410 <HAL_SPI_TxRxCpltCallback+0x4c>
		AMTstate+=1;
 80033d4:	4b11      	ldr	r3, [pc, #68]	; (800341c <HAL_SPI_TxRxCpltCallback+0x58>)
 80033d6:	781b      	ldrb	r3, [r3, #0]
 80033d8:	3301      	adds	r3, #1
 80033da:	b2da      	uxtb	r2, r3
 80033dc:	4b0f      	ldr	r3, [pc, #60]	; (800341c <HAL_SPI_TxRxCpltCallback+0x58>)
 80033de:	701a      	strb	r2, [r3, #0]
		AMTcomplete = 1;
 80033e0:	4b0f      	ldr	r3, [pc, #60]	; (8003420 <HAL_SPI_TxRxCpltCallback+0x5c>)
 80033e2:	2201      	movs	r2, #1
 80033e4:	701a      	strb	r2, [r3, #0]
		if(AMTstate == 1){
 80033e6:	4b0d      	ldr	r3, [pc, #52]	; (800341c <HAL_SPI_TxRxCpltCallback+0x58>)
 80033e8:	781b      	ldrb	r3, [r3, #0]
 80033ea:	2b01      	cmp	r3, #1
 80033ec:	d103      	bne.n	80033f6 <HAL_SPI_TxRxCpltCallback+0x32>
			HAL_SPI_DMAStop(&hspi3);
 80033ee:	480a      	ldr	r0, [pc, #40]	; (8003418 <HAL_SPI_TxRxCpltCallback+0x54>)
 80033f0:	f005 fcc0 	bl	8008d74 <HAL_SPI_DMAStop>
			//microsecDelay(5);
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
			HAL_SPI_DMAStop(&hspi3);
		}
	}
}
 80033f4:	e00c      	b.n	8003410 <HAL_SPI_TxRxCpltCallback+0x4c>
		else if(AMTstate == 3){
 80033f6:	4b09      	ldr	r3, [pc, #36]	; (800341c <HAL_SPI_TxRxCpltCallback+0x58>)
 80033f8:	781b      	ldrb	r3, [r3, #0]
 80033fa:	2b03      	cmp	r3, #3
 80033fc:	d108      	bne.n	8003410 <HAL_SPI_TxRxCpltCallback+0x4c>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 80033fe:	2201      	movs	r2, #1
 8003400:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003404:	4807      	ldr	r0, [pc, #28]	; (8003424 <HAL_SPI_TxRxCpltCallback+0x60>)
 8003406:	f002 f9ef 	bl	80057e8 <HAL_GPIO_WritePin>
			HAL_SPI_DMAStop(&hspi3);
 800340a:	4803      	ldr	r0, [pc, #12]	; (8003418 <HAL_SPI_TxRxCpltCallback+0x54>)
 800340c:	f005 fcb2 	bl	8008d74 <HAL_SPI_DMAStop>
}
 8003410:	bf00      	nop
 8003412:	3708      	adds	r7, #8
 8003414:	46bd      	mov	sp, r7
 8003416:	bd80      	pop	{r7, pc}
 8003418:	20000218 	.word	0x20000218
 800341c:	20000588 	.word	0x20000588
 8003420:	20000023 	.word	0x20000023
 8003424:	40020400 	.word	0x40020400

08003428 <AMT222checkbit>:

uint8_t AMT222checkbit( uint8_t *H, uint8_t *L){
 8003428:	b480      	push	{r7}
 800342a:	b085      	sub	sp, #20
 800342c:	af00      	add	r7, sp, #0
 800342e:	6078      	str	r0, [r7, #4]
 8003430:	6039      	str	r1, [r7, #0]

	uint8_t K1 = 0;
 8003432:	2300      	movs	r3, #0
 8003434:	73fb      	strb	r3, [r7, #15]
	uint8_t K0 = 0;
 8003436:	2300      	movs	r3, #0
 8003438:	73bb      	strb	r3, [r7, #14]

	K1 = !( ((*H>>5) & 0x01) ^ ((*H>>3) & 0x01) ^ ((*H>>1) & 0x01) ^
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	781b      	ldrb	r3, [r3, #0]
 800343e:	095b      	lsrs	r3, r3, #5
 8003440:	b2da      	uxtb	r2, r3
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	781b      	ldrb	r3, [r3, #0]
 8003446:	08db      	lsrs	r3, r3, #3
 8003448:	b2db      	uxtb	r3, r3
 800344a:	4053      	eors	r3, r2
 800344c:	b2da      	uxtb	r2, r3
 800344e:	687b      	ldr	r3, [r7, #4]
 8003450:	781b      	ldrb	r3, [r3, #0]
 8003452:	085b      	lsrs	r3, r3, #1
 8003454:	b2db      	uxtb	r3, r3
 8003456:	4053      	eors	r3, r2
 8003458:	b2da      	uxtb	r2, r3
			((*L>>7) & 0x01) ^ ((*L>>5) & 0x01) ^ ((*L>>7) & 0x03) ^
 800345a:	683b      	ldr	r3, [r7, #0]
 800345c:	781b      	ldrb	r3, [r3, #0]
	K1 = !( ((*H>>5) & 0x01) ^ ((*H>>3) & 0x01) ^ ((*H>>1) & 0x01) ^
 800345e:	09db      	lsrs	r3, r3, #7
 8003460:	b2db      	uxtb	r3, r3
 8003462:	4053      	eors	r3, r2
 8003464:	b2da      	uxtb	r2, r3
			((*L>>7) & 0x01) ^ ((*L>>5) & 0x01) ^ ((*L>>7) & 0x03) ^
 8003466:	683b      	ldr	r3, [r7, #0]
 8003468:	781b      	ldrb	r3, [r3, #0]
 800346a:	095b      	lsrs	r3, r3, #5
 800346c:	b2db      	uxtb	r3, r3
 800346e:	4053      	eors	r3, r2
 8003470:	b2db      	uxtb	r3, r3
 8003472:	f003 0201 	and.w	r2, r3, #1
 8003476:	683b      	ldr	r3, [r7, #0]
 8003478:	781b      	ldrb	r3, [r3, #0]
 800347a:	09db      	lsrs	r3, r3, #7
 800347c:	b2db      	uxtb	r3, r3
 800347e:	f003 0303 	and.w	r3, r3, #3
 8003482:	405a      	eors	r2, r3
			((*L>>1) & 0x01) );
 8003484:	683b      	ldr	r3, [r7, #0]
 8003486:	781b      	ldrb	r3, [r3, #0]
 8003488:	085b      	lsrs	r3, r3, #1
 800348a:	b2db      	uxtb	r3, r3
 800348c:	f003 0301 	and.w	r3, r3, #1
	K1 = !( ((*H>>5) & 0x01) ^ ((*H>>3) & 0x01) ^ ((*H>>1) & 0x01) ^
 8003490:	429a      	cmp	r2, r3
 8003492:	bf0c      	ite	eq
 8003494:	2301      	moveq	r3, #1
 8003496:	2300      	movne	r3, #0
 8003498:	b2db      	uxtb	r3, r3
 800349a:	73fb      	strb	r3, [r7, #15]

	K0 = !( ((*H>>4) & 0x01) ^ ((*H>>2) & 0x01) ^ ((*H>>0) & 0x01) ^
 800349c:	687b      	ldr	r3, [r7, #4]
 800349e:	781b      	ldrb	r3, [r3, #0]
 80034a0:	091b      	lsrs	r3, r3, #4
 80034a2:	b2da      	uxtb	r2, r3
 80034a4:	687b      	ldr	r3, [r7, #4]
 80034a6:	781b      	ldrb	r3, [r3, #0]
 80034a8:	089b      	lsrs	r3, r3, #2
 80034aa:	b2db      	uxtb	r3, r3
 80034ac:	4053      	eors	r3, r2
 80034ae:	b2da      	uxtb	r2, r3
 80034b0:	687b      	ldr	r3, [r7, #4]
 80034b2:	781b      	ldrb	r3, [r3, #0]
 80034b4:	4053      	eors	r3, r2
 80034b6:	b2da      	uxtb	r2, r3
			((*L>>6) & 0x01) ^ ((*L>>4) & 0x01) ^ ((*L>>2) & 0x03) ^
 80034b8:	683b      	ldr	r3, [r7, #0]
 80034ba:	781b      	ldrb	r3, [r3, #0]
	K0 = !( ((*H>>4) & 0x01) ^ ((*H>>2) & 0x01) ^ ((*H>>0) & 0x01) ^
 80034bc:	099b      	lsrs	r3, r3, #6
 80034be:	b2db      	uxtb	r3, r3
 80034c0:	4053      	eors	r3, r2
 80034c2:	b2da      	uxtb	r2, r3
			((*L>>6) & 0x01) ^ ((*L>>4) & 0x01) ^ ((*L>>2) & 0x03) ^
 80034c4:	683b      	ldr	r3, [r7, #0]
 80034c6:	781b      	ldrb	r3, [r3, #0]
 80034c8:	091b      	lsrs	r3, r3, #4
 80034ca:	b2db      	uxtb	r3, r3
 80034cc:	4053      	eors	r3, r2
 80034ce:	b2db      	uxtb	r3, r3
 80034d0:	f003 0201 	and.w	r2, r3, #1
 80034d4:	683b      	ldr	r3, [r7, #0]
 80034d6:	781b      	ldrb	r3, [r3, #0]
 80034d8:	089b      	lsrs	r3, r3, #2
 80034da:	b2db      	uxtb	r3, r3
 80034dc:	f003 0303 	and.w	r3, r3, #3
 80034e0:	405a      	eors	r2, r3
			((*L>>0) & 0x01) );
 80034e2:	683b      	ldr	r3, [r7, #0]
 80034e4:	781b      	ldrb	r3, [r3, #0]
 80034e6:	f003 0301 	and.w	r3, r3, #1
	K0 = !( ((*H>>4) & 0x01) ^ ((*H>>2) & 0x01) ^ ((*H>>0) & 0x01) ^
 80034ea:	429a      	cmp	r2, r3
 80034ec:	bf0c      	ite	eq
 80034ee:	2301      	moveq	r3, #1
 80034f0:	2300      	movne	r3, #0
 80034f2:	b2db      	uxtb	r3, r3
 80034f4:	73bb      	strb	r3, [r7, #14]

	if( (K1 == ((*H>>7) & 0x01)) && (K0 == ((*H>>6) & 0x01)) ){
 80034f6:	7bfa      	ldrb	r2, [r7, #15]
 80034f8:	687b      	ldr	r3, [r7, #4]
 80034fa:	781b      	ldrb	r3, [r3, #0]
 80034fc:	09db      	lsrs	r3, r3, #7
 80034fe:	b2db      	uxtb	r3, r3
 8003500:	f003 0301 	and.w	r3, r3, #1
 8003504:	429a      	cmp	r2, r3
 8003506:	d10a      	bne.n	800351e <AMT222checkbit+0xf6>
 8003508:	7bba      	ldrb	r2, [r7, #14]
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	781b      	ldrb	r3, [r3, #0]
 800350e:	099b      	lsrs	r3, r3, #6
 8003510:	b2db      	uxtb	r3, r3
 8003512:	f003 0301 	and.w	r3, r3, #1
 8003516:	429a      	cmp	r2, r3
 8003518:	d101      	bne.n	800351e <AMT222checkbit+0xf6>
		return 1;
 800351a:	2301      	movs	r3, #1
 800351c:	e000      	b.n	8003520 <AMT222checkbit+0xf8>
	}
	else{
		return 0;
 800351e:	2300      	movs	r3, #0
	}
}
 8003520:	4618      	mov	r0, r3
 8003522:	3714      	adds	r7, #20
 8003524:	46bd      	mov	sp, r7
 8003526:	f85d 7b04 	ldr.w	r7, [sp], #4
 800352a:	4770      	bx	lr

0800352c <unwrapping>:
void unwrapping(){
 800352c:	b480      	push	{r7}
 800352e:	af00      	add	r7, sp, #0
	  p_n = current_rad;
 8003530:	4b2c      	ldr	r3, [pc, #176]	; (80035e4 <unwrapping+0xb8>)
 8003532:	681b      	ldr	r3, [r3, #0]
 8003534:	4a2c      	ldr	r2, [pc, #176]	; (80035e8 <unwrapping+0xbc>)
 8003536:	6013      	str	r3, [r2, #0]
		if (p_n - p_n_1 <= -1*e)
 8003538:	4b2b      	ldr	r3, [pc, #172]	; (80035e8 <unwrapping+0xbc>)
 800353a:	ed93 7a00 	vldr	s14, [r3]
 800353e:	4b2b      	ldr	r3, [pc, #172]	; (80035ec <unwrapping+0xc0>)
 8003540:	edd3 7a00 	vldr	s15, [r3]
 8003544:	ee37 7a67 	vsub.f32	s14, s14, s15
 8003548:	4b29      	ldr	r3, [pc, #164]	; (80035f0 <unwrapping+0xc4>)
 800354a:	edd3 7a00 	vldr	s15, [r3]
 800354e:	eef1 7a67 	vneg.f32	s15, s15
 8003552:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8003556:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800355a:	d80b      	bhi.n	8003574 <unwrapping+0x48>
		{
			p_0 = p_0_1 + p_max;
 800355c:	4b25      	ldr	r3, [pc, #148]	; (80035f4 <unwrapping+0xc8>)
 800355e:	ed93 7a00 	vldr	s14, [r3]
 8003562:	4b25      	ldr	r3, [pc, #148]	; (80035f8 <unwrapping+0xcc>)
 8003564:	edd3 7a00 	vldr	s15, [r3]
 8003568:	ee77 7a27 	vadd.f32	s15, s14, s15
 800356c:	4b23      	ldr	r3, [pc, #140]	; (80035fc <unwrapping+0xd0>)
 800356e:	edc3 7a00 	vstr	s15, [r3]
 8003572:	e01f      	b.n	80035b4 <unwrapping+0x88>
		}
		else if(p_n - p_n_1 >= e)
 8003574:	4b1c      	ldr	r3, [pc, #112]	; (80035e8 <unwrapping+0xbc>)
 8003576:	ed93 7a00 	vldr	s14, [r3]
 800357a:	4b1c      	ldr	r3, [pc, #112]	; (80035ec <unwrapping+0xc0>)
 800357c:	edd3 7a00 	vldr	s15, [r3]
 8003580:	ee37 7a67 	vsub.f32	s14, s14, s15
 8003584:	4b1a      	ldr	r3, [pc, #104]	; (80035f0 <unwrapping+0xc4>)
 8003586:	edd3 7a00 	vldr	s15, [r3]
 800358a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800358e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003592:	db0b      	blt.n	80035ac <unwrapping+0x80>
		{
			p_0 = p_0_1 - p_max;
 8003594:	4b17      	ldr	r3, [pc, #92]	; (80035f4 <unwrapping+0xc8>)
 8003596:	ed93 7a00 	vldr	s14, [r3]
 800359a:	4b17      	ldr	r3, [pc, #92]	; (80035f8 <unwrapping+0xcc>)
 800359c:	edd3 7a00 	vldr	s15, [r3]
 80035a0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80035a4:	4b15      	ldr	r3, [pc, #84]	; (80035fc <unwrapping+0xd0>)
 80035a6:	edc3 7a00 	vstr	s15, [r3]
 80035aa:	e003      	b.n	80035b4 <unwrapping+0x88>
		}
		else
		{
			p_0 = p_0_1;
 80035ac:	4b11      	ldr	r3, [pc, #68]	; (80035f4 <unwrapping+0xc8>)
 80035ae:	681b      	ldr	r3, [r3, #0]
 80035b0:	4a12      	ldr	r2, [pc, #72]	; (80035fc <unwrapping+0xd0>)
 80035b2:	6013      	str	r3, [r2, #0]
		}
		//DegAbs[0][0] = (p_n + p_0); //สั�?�?าณที่ผ่าน�?าร unwrap �?ล้ว
		current_rad_wrap = (p_n + p_0);
 80035b4:	4b0c      	ldr	r3, [pc, #48]	; (80035e8 <unwrapping+0xbc>)
 80035b6:	ed93 7a00 	vldr	s14, [r3]
 80035ba:	4b10      	ldr	r3, [pc, #64]	; (80035fc <unwrapping+0xd0>)
 80035bc:	edd3 7a00 	vldr	s15, [r3]
 80035c0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80035c4:	4b0e      	ldr	r3, [pc, #56]	; (8003600 <unwrapping+0xd4>)
 80035c6:	edc3 7a00 	vstr	s15, [r3]
		//Memory ให้�?ับตัว�?ปร p[n-1] �?ละ p0[n-1]
		p_n_1 = p_n;
 80035ca:	4b07      	ldr	r3, [pc, #28]	; (80035e8 <unwrapping+0xbc>)
 80035cc:	681b      	ldr	r3, [r3, #0]
 80035ce:	4a07      	ldr	r2, [pc, #28]	; (80035ec <unwrapping+0xc0>)
 80035d0:	6013      	str	r3, [r2, #0]
		p_0_1 = p_0;
 80035d2:	4b0a      	ldr	r3, [pc, #40]	; (80035fc <unwrapping+0xd0>)
 80035d4:	681b      	ldr	r3, [r3, #0]
 80035d6:	4a07      	ldr	r2, [pc, #28]	; (80035f4 <unwrapping+0xc8>)
 80035d8:	6013      	str	r3, [r2, #0]
}
 80035da:	bf00      	nop
 80035dc:	46bd      	mov	sp, r7
 80035de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035e2:	4770      	bx	lr
 80035e4:	2000057c 	.word	0x2000057c
 80035e8:	2000058c 	.word	0x2000058c
 80035ec:	20000590 	.word	0x20000590
 80035f0:	20000028 	.word	0x20000028
 80035f4:	20000598 	.word	0x20000598
 80035f8:	20000024 	.word	0x20000024
 80035fc:	20000594 	.word	0x20000594
 8003600:	20000580 	.word	0x20000580

08003604 <microsecDelay>:
void microsecDelay(uint8_t delayTime){
 8003604:	b580      	push	{r7, lr}
 8003606:	b084      	sub	sp, #16
 8003608:	af00      	add	r7, sp, #0
 800360a:	4603      	mov	r3, r0
 800360c:	71fb      	strb	r3, [r7, #7]
	uint32_t startTime = micros(); 	//reference point to count passed time
 800360e:	f000 f879 	bl	8003704 <micros>
 8003612:	4602      	mov	r2, r0
 8003614:	460b      	mov	r3, r1
 8003616:	4613      	mov	r3, r2
 8003618:	60bb      	str	r3, [r7, #8]
	uint32_t passedTime  = 0;
 800361a:	2300      	movs	r3, #0
 800361c:	60fb      	str	r3, [r7, #12]
	while (passedTime<delayTime){
 800361e:	e006      	b.n	800362e <microsecDelay+0x2a>
		passedTime = micros() - startTime;
 8003620:	f000 f870 	bl	8003704 <micros>
 8003624:	4602      	mov	r2, r0
 8003626:	460b      	mov	r3, r1
 8003628:	68bb      	ldr	r3, [r7, #8]
 800362a:	1ad3      	subs	r3, r2, r3
 800362c:	60fb      	str	r3, [r7, #12]
	while (passedTime<delayTime){
 800362e:	79fb      	ldrb	r3, [r7, #7]
 8003630:	68fa      	ldr	r2, [r7, #12]
 8003632:	429a      	cmp	r2, r3
 8003634:	d3f4      	bcc.n	8003620 <microsecDelay+0x1c>
	}
}
 8003636:	bf00      	nop
 8003638:	bf00      	nop
 800363a:	3710      	adds	r7, #16
 800363c:	46bd      	mov	sp, r7
 800363e:	bd80      	pop	{r7, pc}

08003640 <aaabs>:


uint32_t aaabs(int x){
 8003640:	b480      	push	{r7}
 8003642:	b083      	sub	sp, #12
 8003644:	af00      	add	r7, sp, #0
 8003646:	6078      	str	r0, [r7, #4]

	if(x<0){
 8003648:	687b      	ldr	r3, [r7, #4]
 800364a:	2b00      	cmp	r3, #0
 800364c:	da02      	bge.n	8003654 <aaabs+0x14>
		return x*-1;
 800364e:	687b      	ldr	r3, [r7, #4]
 8003650:	425b      	negs	r3, r3
 8003652:	e000      	b.n	8003656 <aaabs+0x16>
	}else{
		return x;
 8003654:	687b      	ldr	r3, [r7, #4]
	}
}
 8003656:	4618      	mov	r0, r3
 8003658:	370c      	adds	r7, #12
 800365a:	46bd      	mov	sp, r7
 800365c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003660:	4770      	bx	lr
	...

08003664 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8003664:	b580      	push	{r7, lr}
 8003666:	b082      	sub	sp, #8
 8003668:	af00      	add	r7, sp, #0
 800366a:	4603      	mov	r3, r0
 800366c:	80fb      	strh	r3, [r7, #6]
	if(GPIO_Pin == GPIO_PIN_13){
 800366e:	88fb      	ldrh	r3, [r7, #6]
 8003670:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003674:	d102      	bne.n	800367c <HAL_GPIO_EXTI_Callback+0x18>
		blue = 1; // 0% duty cycle
 8003676:	4b11      	ldr	r3, [pc, #68]	; (80036bc <HAL_GPIO_EXTI_Callback+0x58>)
 8003678:	2201      	movs	r2, #1
 800367a:	701a      	strb	r2, [r3, #0]
	}

	if(GPIO_Pin == GPIO_PIN_8){
 800367c:	88fb      	ldrh	r3, [r7, #6]
 800367e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003682:	d117      	bne.n	80036b4 <HAL_GPIO_EXTI_Callback+0x50>
		static GPIO_PinState B1State[2] = {0};
		B1State[0]= HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8);
 8003684:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003688:	480d      	ldr	r0, [pc, #52]	; (80036c0 <HAL_GPIO_EXTI_Callback+0x5c>)
 800368a:	f002 f895 	bl	80057b8 <HAL_GPIO_ReadPin>
 800368e:	4603      	mov	r3, r0
 8003690:	461a      	mov	r2, r3
 8003692:	4b0c      	ldr	r3, [pc, #48]	; (80036c4 <HAL_GPIO_EXTI_Callback+0x60>)
 8003694:	701a      	strb	r2, [r3, #0]
		if(B1State[1] == GPIO_PIN_RESET && B1State[0] == GPIO_PIN_SET){
 8003696:	4b0b      	ldr	r3, [pc, #44]	; (80036c4 <HAL_GPIO_EXTI_Callback+0x60>)
 8003698:	785b      	ldrb	r3, [r3, #1]
 800369a:	2b00      	cmp	r3, #0
 800369c:	d106      	bne.n	80036ac <HAL_GPIO_EXTI_Callback+0x48>
 800369e:	4b09      	ldr	r3, [pc, #36]	; (80036c4 <HAL_GPIO_EXTI_Callback+0x60>)
 80036a0:	781b      	ldrb	r3, [r3, #0]
 80036a2:	2b01      	cmp	r3, #1
 80036a4:	d102      	bne.n	80036ac <HAL_GPIO_EXTI_Callback+0x48>
			stop = 1;
 80036a6:	4b08      	ldr	r3, [pc, #32]	; (80036c8 <HAL_GPIO_EXTI_Callback+0x64>)
 80036a8:	2201      	movs	r2, #1
 80036aa:	701a      	strb	r2, [r3, #0]
		}
		B1State[1] = B1State[0];
 80036ac:	4b05      	ldr	r3, [pc, #20]	; (80036c4 <HAL_GPIO_EXTI_Callback+0x60>)
 80036ae:	781a      	ldrb	r2, [r3, #0]
 80036b0:	4b04      	ldr	r3, [pc, #16]	; (80036c4 <HAL_GPIO_EXTI_Callback+0x60>)
 80036b2:	705a      	strb	r2, [r3, #1]


	}
}
 80036b4:	bf00      	nop
 80036b6:	3708      	adds	r7, #8
 80036b8:	46bd      	mov	sp, r7
 80036ba:	bd80      	pop	{r7, pc}
 80036bc:	200005e5 	.word	0x200005e5
 80036c0:	40020000 	.word	0x40020000
 80036c4:	20000808 	.word	0x20000808
 80036c8:	200005a8 	.word	0x200005a8

080036cc <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 80036cc:	b4b0      	push	{r4, r5, r7}
 80036ce:	b083      	sub	sp, #12
 80036d0:	af00      	add	r7, sp, #0
 80036d2:	6078      	str	r0, [r7, #4]
	if (htim == &htim11) {
 80036d4:	687b      	ldr	r3, [r7, #4]
 80036d6:	4a09      	ldr	r2, [pc, #36]	; (80036fc <HAL_TIM_PeriodElapsedCallback+0x30>)
 80036d8:	4293      	cmp	r3, r2
 80036da:	d10a      	bne.n	80036f2 <HAL_TIM_PeriodElapsedCallback+0x26>
		_micro += 65535;
 80036dc:	4b08      	ldr	r3, [pc, #32]	; (8003700 <HAL_TIM_PeriodElapsedCallback+0x34>)
 80036de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80036e2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80036e6:	1854      	adds	r4, r2, r1
 80036e8:	f143 0500 	adc.w	r5, r3, #0
 80036ec:	4b04      	ldr	r3, [pc, #16]	; (8003700 <HAL_TIM_PeriodElapsedCallback+0x34>)
 80036ee:	e9c3 4500 	strd	r4, r5, [r3]
	}
}
 80036f2:	bf00      	nop
 80036f4:	370c      	adds	r7, #12
 80036f6:	46bd      	mov	sp, r7
 80036f8:	bcb0      	pop	{r4, r5, r7}
 80036fa:	4770      	bx	lr
 80036fc:	20000378 	.word	0x20000378
 8003700:	200005a0 	.word	0x200005a0

08003704 <micros>:

uint64_t micros()
{
 8003704:	b4b0      	push	{r4, r5, r7}
 8003706:	af00      	add	r7, sp, #0
	return _micro + htim11.Instance->CNT;
 8003708:	4b09      	ldr	r3, [pc, #36]	; (8003730 <micros+0x2c>)
 800370a:	681b      	ldr	r3, [r3, #0]
 800370c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800370e:	2200      	movs	r2, #0
 8003710:	4618      	mov	r0, r3
 8003712:	4611      	mov	r1, r2
 8003714:	4b07      	ldr	r3, [pc, #28]	; (8003734 <micros+0x30>)
 8003716:	e9d3 2300 	ldrd	r2, r3, [r3]
 800371a:	1884      	adds	r4, r0, r2
 800371c:	eb41 0503 	adc.w	r5, r1, r3
 8003720:	4622      	mov	r2, r4
 8003722:	462b      	mov	r3, r5
}
 8003724:	4610      	mov	r0, r2
 8003726:	4619      	mov	r1, r3
 8003728:	46bd      	mov	sp, r7
 800372a:	bcb0      	pop	{r4, r5, r7}
 800372c:	4770      	bx	lr
 800372e:	bf00      	nop
 8003730:	20000378 	.word	0x20000378
 8003734:	200005a0 	.word	0x200005a0

08003738 <callUART>:

//----------------------------------------------------------------< UART >

void callUART(){
 8003738:	b598      	push	{r3, r4, r7, lr}
 800373a:	af00      	add	r7, sp, #0
	HAL_UART_DMAStop(&huart2);
 800373c:	4896      	ldr	r0, [pc, #600]	; (8003998 <callUART+0x260>)
 800373e:	f006 ffb7 	bl	800a6b0 <HAL_UART_DMAStop>
	switch(RxState){
 8003742:	4b96      	ldr	r3, [pc, #600]	; (800399c <callUART+0x264>)
 8003744:	781b      	ldrb	r3, [r3, #0]
 8003746:	2b03      	cmp	r3, #3
 8003748:	f200 8113 	bhi.w	8003972 <callUART+0x23a>
 800374c:	a201      	add	r2, pc, #4	; (adr r2, 8003754 <callUART+0x1c>)
 800374e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003752:	bf00      	nop
 8003754:	08003765 	.word	0x08003765
 8003758:	080037c9 	.word	0x080037c9
 800375c:	0800383f 	.word	0x0800383f
 8003760:	0800389d 	.word	0x0800389d
	case 0:											// Receive 1 byte first by default.
		Start = (Receive[0] & 0xF0)>>4;
 8003764:	4b8e      	ldr	r3, [pc, #568]	; (80039a0 <callUART+0x268>)
 8003766:	781b      	ldrb	r3, [r3, #0]
 8003768:	091b      	lsrs	r3, r3, #4
 800376a:	b2da      	uxtb	r2, r3
 800376c:	4b8d      	ldr	r3, [pc, #564]	; (80039a4 <callUART+0x26c>)
 800376e:	701a      	strb	r2, [r3, #0]
		Mode = (Receive[0] & 0x0F);
 8003770:	4b8b      	ldr	r3, [pc, #556]	; (80039a0 <callUART+0x268>)
 8003772:	781b      	ldrb	r3, [r3, #0]
 8003774:	f003 030f 	and.w	r3, r3, #15
 8003778:	b2da      	uxtb	r2, r3
 800377a:	4b8b      	ldr	r3, [pc, #556]	; (80039a8 <callUART+0x270>)
 800377c:	701a      	strb	r2, [r3, #0]
		if(Start == 0b1001){
 800377e:	4b89      	ldr	r3, [pc, #548]	; (80039a4 <callUART+0x26c>)
 8003780:	781b      	ldrb	r3, [r3, #0]
 8003782:	2b09      	cmp	r3, #9
 8003784:	f040 80f2 	bne.w	800396c <callUART+0x234>
			// 0b1001, 0b0100]
			sum = 0;
 8003788:	4b88      	ldr	r3, [pc, #544]	; (80039ac <callUART+0x274>)
 800378a:	2200      	movs	r2, #0
 800378c:	701a      	strb	r2, [r3, #0]
			sum += (Receive[0]);					// Sum the START & MODE bit.
 800378e:	4b84      	ldr	r3, [pc, #528]	; (80039a0 <callUART+0x268>)
 8003790:	781a      	ldrb	r2, [r3, #0]
 8003792:	4b86      	ldr	r3, [pc, #536]	; (80039ac <callUART+0x274>)
 8003794:	781b      	ldrb	r3, [r3, #0]
 8003796:	4413      	add	r3, r2
 8003798:	b2da      	uxtb	r2, r3
 800379a:	4b84      	ldr	r3, [pc, #528]	; (80039ac <callUART+0x274>)
 800379c:	701a      	strb	r2, [r3, #0]
			if(Mode == 0b0111){						// Mode7
 800379e:	4b82      	ldr	r3, [pc, #520]	; (80039a8 <callUART+0x270>)
 80037a0:	781b      	ldrb	r3, [r3, #0]
 80037a2:	2b07      	cmp	r3, #7
 80037a4:	d103      	bne.n	80037ae <callUART+0x76>
				RxState = 2;
 80037a6:	4b7d      	ldr	r3, [pc, #500]	; (800399c <callUART+0x264>)
 80037a8:	2202      	movs	r2, #2
 80037aa:	701a      	strb	r2, [r3, #0]
 80037ac:	e002      	b.n	80037b4 <callUART+0x7c>
			}
			else{
				RxState = 1;						// Go to Interrupt Receive next round.
 80037ae:	4b7b      	ldr	r3, [pc, #492]	; (800399c <callUART+0x264>)
 80037b0:	2201      	movs	r2, #1
 80037b2:	701a      	strb	r2, [r3, #0]
			}
			nbyte = frameConfig(Mode);				// Set a new size of buffer.
 80037b4:	4b7c      	ldr	r3, [pc, #496]	; (80039a8 <callUART+0x270>)
 80037b6:	781b      	ldrb	r3, [r3, #0]
 80037b8:	4618      	mov	r0, r3
 80037ba:	f000 fd17 	bl	80041ec <frameConfig>
 80037be:	4603      	mov	r3, r0
 80037c0:	461a      	mov	r2, r3
 80037c2:	4b7b      	ldr	r3, [pc, #492]	; (80039b0 <callUART+0x278>)
 80037c4:	701a      	strb	r2, [r3, #0]
		}
		break;
 80037c6:	e0d1      	b.n	800396c <callUART+0x234>
	case 1:
		sum += frameSum( Receive, nbyte-1);			// (nbyte-1) Minus checksum out.
 80037c8:	4b79      	ldr	r3, [pc, #484]	; (80039b0 <callUART+0x278>)
 80037ca:	781b      	ldrb	r3, [r3, #0]
 80037cc:	3b01      	subs	r3, #1
 80037ce:	b2db      	uxtb	r3, r3
 80037d0:	4619      	mov	r1, r3
 80037d2:	4873      	ldr	r0, [pc, #460]	; (80039a0 <callUART+0x268>)
 80037d4:	f000 fd59 	bl	800428a <frameSum>
 80037d8:	4603      	mov	r3, r0
 80037da:	461a      	mov	r2, r3
 80037dc:	4b73      	ldr	r3, [pc, #460]	; (80039ac <callUART+0x274>)
 80037de:	781b      	ldrb	r3, [r3, #0]
 80037e0:	4413      	add	r3, r2
 80037e2:	b2da      	uxtb	r2, r3
 80037e4:	4b71      	ldr	r3, [pc, #452]	; (80039ac <callUART+0x274>)
 80037e6:	701a      	strb	r2, [r3, #0]
		if(Receive[nbyte-1] == checkSum(sum)){		// Corrected.
 80037e8:	4b71      	ldr	r3, [pc, #452]	; (80039b0 <callUART+0x278>)
 80037ea:	781b      	ldrb	r3, [r3, #0]
 80037ec:	3b01      	subs	r3, #1
 80037ee:	4a6c      	ldr	r2, [pc, #432]	; (80039a0 <callUART+0x268>)
 80037f0:	5cd4      	ldrb	r4, [r2, r3]
 80037f2:	4b6e      	ldr	r3, [pc, #440]	; (80039ac <callUART+0x274>)
 80037f4:	781b      	ldrb	r3, [r3, #0]
 80037f6:	4618      	mov	r0, r3
 80037f8:	f000 fd34 	bl	8004264 <checkSum>
 80037fc:	4603      	mov	r3, r0
 80037fe:	429c      	cmp	r4, r3
 8003800:	d102      	bne.n	8003808 <callUART+0xd0>
			// Receive[nbyte-1] == checkSum(sum)
			TxState = 1;
 8003802:	4b6c      	ldr	r3, [pc, #432]	; (80039b4 <callUART+0x27c>)
 8003804:	2201      	movs	r2, #1
 8003806:	701a      	strb	r2, [r3, #0]
		}
		if(Mode == 1 || Mode == 9 || Mode == 10 || Mode == 11){
 8003808:	4b67      	ldr	r3, [pc, #412]	; (80039a8 <callUART+0x270>)
 800380a:	781b      	ldrb	r3, [r3, #0]
 800380c:	2b01      	cmp	r3, #1
 800380e:	d00b      	beq.n	8003828 <callUART+0xf0>
 8003810:	4b65      	ldr	r3, [pc, #404]	; (80039a8 <callUART+0x270>)
 8003812:	781b      	ldrb	r3, [r3, #0]
 8003814:	2b09      	cmp	r3, #9
 8003816:	d007      	beq.n	8003828 <callUART+0xf0>
 8003818:	4b63      	ldr	r3, [pc, #396]	; (80039a8 <callUART+0x270>)
 800381a:	781b      	ldrb	r3, [r3, #0]
 800381c:	2b0a      	cmp	r3, #10
 800381e:	d003      	beq.n	8003828 <callUART+0xf0>
 8003820:	4b61      	ldr	r3, [pc, #388]	; (80039a8 <callUART+0x270>)
 8003822:	781b      	ldrb	r3, [r3, #0]
 8003824:	2b0b      	cmp	r3, #11
 8003826:	d106      	bne.n	8003836 <callUART+0xfe>
			nbyte = 1;								// For receive ACK
 8003828:	4b61      	ldr	r3, [pc, #388]	; (80039b0 <callUART+0x278>)
 800382a:	2201      	movs	r2, #1
 800382c:	701a      	strb	r2, [r3, #0]
			RxState = 3;
 800382e:	4b5b      	ldr	r3, [pc, #364]	; (800399c <callUART+0x264>)
 8003830:	2203      	movs	r2, #3
 8003832:	701a      	strb	r2, [r3, #0]
		}
		else{
			endReceive = 1;
		}

		break;
 8003834:	e09d      	b.n	8003972 <callUART+0x23a>
			endReceive = 1;
 8003836:	4b60      	ldr	r3, [pc, #384]	; (80039b8 <callUART+0x280>)
 8003838:	2201      	movs	r2, #1
 800383a:	701a      	strb	r2, [r3, #0]
		break;
 800383c:	e099      	b.n	8003972 <callUART+0x23a>
	case 2:
		sum += (Receive[0]);
 800383e:	4b58      	ldr	r3, [pc, #352]	; (80039a0 <callUART+0x268>)
 8003840:	781a      	ldrb	r2, [r3, #0]
 8003842:	4b5a      	ldr	r3, [pc, #360]	; (80039ac <callUART+0x274>)
 8003844:	781b      	ldrb	r3, [r3, #0]
 8003846:	4413      	add	r3, r2
 8003848:	b2da      	uxtb	r2, r3
 800384a:	4b58      	ldr	r3, [pc, #352]	; (80039ac <callUART+0x274>)
 800384c:	701a      	strb	r2, [r3, #0]
		nStation = Receive[0];					// Set received station.
 800384e:	4b54      	ldr	r3, [pc, #336]	; (80039a0 <callUART+0x268>)
 8003850:	781a      	ldrb	r2, [r3, #0]
 8003852:	4b5a      	ldr	r3, [pc, #360]	; (80039bc <callUART+0x284>)
 8003854:	701a      	strb	r2, [r3, #0]
		nDestination = Receive[0];				// Set received station.
 8003856:	4b52      	ldr	r3, [pc, #328]	; (80039a0 <callUART+0x268>)
 8003858:	781a      	ldrb	r2, [r3, #0]
 800385a:	4b59      	ldr	r3, [pc, #356]	; (80039c0 <callUART+0x288>)
 800385c:	701a      	strb	r2, [r3, #0]
		if(Receive[0] % 2 == 1){
 800385e:	4b50      	ldr	r3, [pc, #320]	; (80039a0 <callUART+0x268>)
 8003860:	781b      	ldrb	r3, [r3, #0]
 8003862:	f003 0301 	and.w	r3, r3, #1
 8003866:	b2db      	uxtb	r3, r3
 8003868:	2b00      	cmp	r3, #0
 800386a:	d00b      	beq.n	8003884 <callUART+0x14c>
			nbyte = ((Receive[0] + 1)/2)+1;
 800386c:	4b4c      	ldr	r3, [pc, #304]	; (80039a0 <callUART+0x268>)
 800386e:	781b      	ldrb	r3, [r3, #0]
 8003870:	3301      	adds	r3, #1
 8003872:	0fda      	lsrs	r2, r3, #31
 8003874:	4413      	add	r3, r2
 8003876:	105b      	asrs	r3, r3, #1
 8003878:	b2db      	uxtb	r3, r3
 800387a:	3301      	adds	r3, #1
 800387c:	b2da      	uxtb	r2, r3
 800387e:	4b4c      	ldr	r3, [pc, #304]	; (80039b0 <callUART+0x278>)
 8003880:	701a      	strb	r2, [r3, #0]
 8003882:	e007      	b.n	8003894 <callUART+0x15c>
		}
		else{
			nbyte = (Receive[0]/2)+1;
 8003884:	4b46      	ldr	r3, [pc, #280]	; (80039a0 <callUART+0x268>)
 8003886:	781b      	ldrb	r3, [r3, #0]
 8003888:	085b      	lsrs	r3, r3, #1
 800388a:	b2db      	uxtb	r3, r3
 800388c:	3301      	adds	r3, #1
 800388e:	b2da      	uxtb	r2, r3
 8003890:	4b47      	ldr	r3, [pc, #284]	; (80039b0 <callUART+0x278>)
 8003892:	701a      	strb	r2, [r3, #0]
		}
		RxState = 1;
 8003894:	4b41      	ldr	r3, [pc, #260]	; (800399c <callUART+0x264>)
 8003896:	2201      	movs	r2, #1
 8003898:	701a      	strb	r2, [r3, #0]
		break;
 800389a:	e06a      	b.n	8003972 <callUART+0x23a>
	case 3:						// For Receive ACK frame
		if(Receive[0] == ACK1[0]){
 800389c:	4b40      	ldr	r3, [pc, #256]	; (80039a0 <callUART+0x268>)
 800389e:	781a      	ldrb	r2, [r3, #0]
 80038a0:	4b48      	ldr	r3, [pc, #288]	; (80039c4 <callUART+0x28c>)
 80038a2:	781b      	ldrb	r3, [r3, #0]
 80038a4:	429a      	cmp	r2, r3
 80038a6:	d104      	bne.n	80038b2 <callUART+0x17a>
			keepACK[0] = Receive[0];
 80038a8:	4b3d      	ldr	r3, [pc, #244]	; (80039a0 <callUART+0x268>)
 80038aa:	781a      	ldrb	r2, [r3, #0]
 80038ac:	4b46      	ldr	r3, [pc, #280]	; (80039c8 <callUART+0x290>)
 80038ae:	701a      	strb	r2, [r3, #0]
 80038b0:	e040      	b.n	8003934 <callUART+0x1fc>
		}
		else if(Receive[0] == ACK1[1]){
 80038b2:	4b3b      	ldr	r3, [pc, #236]	; (80039a0 <callUART+0x268>)
 80038b4:	781a      	ldrb	r2, [r3, #0]
 80038b6:	4b43      	ldr	r3, [pc, #268]	; (80039c4 <callUART+0x28c>)
 80038b8:	785b      	ldrb	r3, [r3, #1]
 80038ba:	429a      	cmp	r2, r3
 80038bc:	d104      	bne.n	80038c8 <callUART+0x190>
			keepACK[1] = Receive[0];
 80038be:	4b38      	ldr	r3, [pc, #224]	; (80039a0 <callUART+0x268>)
 80038c0:	781a      	ldrb	r2, [r3, #0]
 80038c2:	4b41      	ldr	r3, [pc, #260]	; (80039c8 <callUART+0x290>)
 80038c4:	705a      	strb	r2, [r3, #1]
 80038c6:	e035      	b.n	8003934 <callUART+0x1fc>
		}
		else{
			Start = (Receive[0] & 0xF0)>>4;
 80038c8:	4b35      	ldr	r3, [pc, #212]	; (80039a0 <callUART+0x268>)
 80038ca:	781b      	ldrb	r3, [r3, #0]
 80038cc:	091b      	lsrs	r3, r3, #4
 80038ce:	b2da      	uxtb	r2, r3
 80038d0:	4b34      	ldr	r3, [pc, #208]	; (80039a4 <callUART+0x26c>)
 80038d2:	701a      	strb	r2, [r3, #0]
			Mode = (Receive[0] & 0x0F);
 80038d4:	4b32      	ldr	r3, [pc, #200]	; (80039a0 <callUART+0x268>)
 80038d6:	781b      	ldrb	r3, [r3, #0]
 80038d8:	f003 030f 	and.w	r3, r3, #15
 80038dc:	b2da      	uxtb	r2, r3
 80038de:	4b32      	ldr	r3, [pc, #200]	; (80039a8 <callUART+0x270>)
 80038e0:	701a      	strb	r2, [r3, #0]
			if(Start == 0b1001){
 80038e2:	4b30      	ldr	r3, [pc, #192]	; (80039a4 <callUART+0x26c>)
 80038e4:	781b      	ldrb	r3, [r3, #0]
 80038e6:	2b09      	cmp	r3, #9
 80038e8:	d11e      	bne.n	8003928 <callUART+0x1f0>
				// 0b1001, 0b0100
				sum = 0;
 80038ea:	4b30      	ldr	r3, [pc, #192]	; (80039ac <callUART+0x274>)
 80038ec:	2200      	movs	r2, #0
 80038ee:	701a      	strb	r2, [r3, #0]
				sum += (Receive[0]);				// Sum the START & MODE bit.
 80038f0:	4b2b      	ldr	r3, [pc, #172]	; (80039a0 <callUART+0x268>)
 80038f2:	781a      	ldrb	r2, [r3, #0]
 80038f4:	4b2d      	ldr	r3, [pc, #180]	; (80039ac <callUART+0x274>)
 80038f6:	781b      	ldrb	r3, [r3, #0]
 80038f8:	4413      	add	r3, r2
 80038fa:	b2da      	uxtb	r2, r3
 80038fc:	4b2b      	ldr	r3, [pc, #172]	; (80039ac <callUART+0x274>)
 80038fe:	701a      	strb	r2, [r3, #0]
				if(Mode == 0b0111){					// Mode7
 8003900:	4b29      	ldr	r3, [pc, #164]	; (80039a8 <callUART+0x270>)
 8003902:	781b      	ldrb	r3, [r3, #0]
 8003904:	2b07      	cmp	r3, #7
 8003906:	d103      	bne.n	8003910 <callUART+0x1d8>
					RxState = 2;
 8003908:	4b24      	ldr	r3, [pc, #144]	; (800399c <callUART+0x264>)
 800390a:	2202      	movs	r2, #2
 800390c:	701a      	strb	r2, [r3, #0]
 800390e:	e002      	b.n	8003916 <callUART+0x1de>
				}
				else{
					RxState = 1;					// Go to Interrupt Receive next round.
 8003910:	4b22      	ldr	r3, [pc, #136]	; (800399c <callUART+0x264>)
 8003912:	2201      	movs	r2, #1
 8003914:	701a      	strb	r2, [r3, #0]
				}
				nbyte = frameConfig(Mode);			// Set a new size of buffer.
 8003916:	4b24      	ldr	r3, [pc, #144]	; (80039a8 <callUART+0x270>)
 8003918:	781b      	ldrb	r3, [r3, #0]
 800391a:	4618      	mov	r0, r3
 800391c:	f000 fc66 	bl	80041ec <frameConfig>
 8003920:	4603      	mov	r3, r0
 8003922:	461a      	mov	r2, r3
 8003924:	4b22      	ldr	r3, [pc, #136]	; (80039b0 <callUART+0x278>)
 8003926:	701a      	strb	r2, [r3, #0]
			}
			TxState = 0;
 8003928:	4b22      	ldr	r3, [pc, #136]	; (80039b4 <callUART+0x27c>)
 800392a:	2200      	movs	r2, #0
 800392c:	701a      	strb	r2, [r3, #0]
			RxState = 1;
 800392e:	4b1b      	ldr	r3, [pc, #108]	; (800399c <callUART+0x264>)
 8003930:	2201      	movs	r2, #1
 8003932:	701a      	strb	r2, [r3, #0]
		}
		if(keepACK[0] == ACK1[0] && keepACK[1] == ACK1[1]){			// It's ACK
 8003934:	4b24      	ldr	r3, [pc, #144]	; (80039c8 <callUART+0x290>)
 8003936:	781a      	ldrb	r2, [r3, #0]
 8003938:	4b22      	ldr	r3, [pc, #136]	; (80039c4 <callUART+0x28c>)
 800393a:	781b      	ldrb	r3, [r3, #0]
 800393c:	429a      	cmp	r2, r3
 800393e:	d117      	bne.n	8003970 <callUART+0x238>
 8003940:	4b21      	ldr	r3, [pc, #132]	; (80039c8 <callUART+0x290>)
 8003942:	785a      	ldrb	r2, [r3, #1]
 8003944:	4b1f      	ldr	r3, [pc, #124]	; (80039c4 <callUART+0x28c>)
 8003946:	785b      	ldrb	r3, [r3, #1]
 8003948:	429a      	cmp	r2, r3
 800394a:	d111      	bne.n	8003970 <callUART+0x238>
			keepACK[0] = 0;
 800394c:	4b1e      	ldr	r3, [pc, #120]	; (80039c8 <callUART+0x290>)
 800394e:	2200      	movs	r2, #0
 8003950:	701a      	strb	r2, [r3, #0]
			keepACK[1] = 0;
 8003952:	4b1d      	ldr	r3, [pc, #116]	; (80039c8 <callUART+0x290>)
 8003954:	2200      	movs	r2, #0
 8003956:	705a      	strb	r2, [r3, #1]
			ACKFlag = 1;
 8003958:	4b1c      	ldr	r3, [pc, #112]	; (80039cc <callUART+0x294>)
 800395a:	2201      	movs	r2, #1
 800395c:	701a      	strb	r2, [r3, #0]
			RxState = 0;
 800395e:	4b0f      	ldr	r3, [pc, #60]	; (800399c <callUART+0x264>)
 8003960:	2200      	movs	r2, #0
 8003962:	701a      	strb	r2, [r3, #0]
			endReceive = 1;
 8003964:	4b14      	ldr	r3, [pc, #80]	; (80039b8 <callUART+0x280>)
 8003966:	2201      	movs	r2, #1
 8003968:	701a      	strb	r2, [r3, #0]
		}
		break;
 800396a:	e001      	b.n	8003970 <callUART+0x238>
		break;
 800396c:	bf00      	nop
 800396e:	e000      	b.n	8003972 <callUART+0x23a>
		break;
 8003970:	bf00      	nop
	}
	// if complete or fail -> reset communication rxstate=0, sum=0, mode=0, nbyte=1,
	if(endReceive){
 8003972:	4b11      	ldr	r3, [pc, #68]	; (80039b8 <callUART+0x280>)
 8003974:	781b      	ldrb	r3, [r3, #0]
 8003976:	2b00      	cmp	r3, #0
 8003978:	d00b      	beq.n	8003992 <callUART+0x25a>
		RxState = 0;
 800397a:	4b08      	ldr	r3, [pc, #32]	; (800399c <callUART+0x264>)
 800397c:	2200      	movs	r2, #0
 800397e:	701a      	strb	r2, [r3, #0]
		nbyte = 1;
 8003980:	4b0b      	ldr	r3, [pc, #44]	; (80039b0 <callUART+0x278>)
 8003982:	2201      	movs	r2, #1
 8003984:	701a      	strb	r2, [r3, #0]
		sum = 0;
 8003986:	4b09      	ldr	r3, [pc, #36]	; (80039ac <callUART+0x274>)
 8003988:	2200      	movs	r2, #0
 800398a:	701a      	strb	r2, [r3, #0]
		endReceive = 0;
 800398c:	4b0a      	ldr	r3, [pc, #40]	; (80039b8 <callUART+0x280>)
 800398e:	2200      	movs	r2, #0
 8003990:	701a      	strb	r2, [r3, #0]
	}

	//RxComplete = 0;
}
 8003992:	bf00      	nop
 8003994:	bd98      	pop	{r3, r4, r7, pc}
 8003996:	bf00      	nop
 8003998:	200003c0 	.word	0x200003c0
 800399c:	2000054a 	.word	0x2000054a
 80039a0:	20000554 	.word	0x20000554
 80039a4:	2000054b 	.word	0x2000054b
 80039a8:	2000054c 	.word	0x2000054c
 80039ac:	2000054d 	.word	0x2000054d
 80039b0:	2000001e 	.word	0x2000001e
 80039b4:	20000549 	.word	0x20000549
 80039b8:	20000566 	.word	0x20000566
 80039bc:	20000538 	.word	0x20000538
 80039c0:	200004d0 	.word	0x200004d0
 80039c4:	20000018 	.word	0x20000018
 80039c8:	20000564 	.word	0x20000564
 80039cc:	20000567 	.word	0x20000567

080039d0 <responseUART>:

void responseUART(){
 80039d0:	b590      	push	{r4, r7, lr}
 80039d2:	b083      	sub	sp, #12
 80039d4:	af00      	add	r7, sp, #0

	switch(Mode){
 80039d6:	4ba2      	ldr	r3, [pc, #648]	; (8003c60 <responseUART+0x290>)
 80039d8:	781b      	ldrb	r3, [r3, #0]
 80039da:	2b0e      	cmp	r3, #14
 80039dc:	f200 8384 	bhi.w	80040e8 <responseUART+0x718>
 80039e0:	a201      	add	r2, pc, #4	; (adr r2, 80039e8 <responseUART+0x18>)
 80039e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80039e6:	bf00      	nop
 80039e8:	080040b3 	.word	0x080040b3
 80039ec:	08003a25 	.word	0x08003a25
 80039f0:	08003ad7 	.word	0x08003ad7
 80039f4:	08003b07 	.word	0x08003b07
 80039f8:	08003b37 	.word	0x08003b37
 80039fc:	08003b93 	.word	0x08003b93
 8003a00:	08003bf3 	.word	0x08003bf3
 8003a04:	08003c35 	.word	0x08003c35
 8003a08:	08003d1b 	.word	0x08003d1b
 8003a0c:	08003d4b 	.word	0x08003d4b
 8003a10:	08003dfd 	.word	0x08003dfd
 8003a14:	08003efd 	.word	0x08003efd
 8003a18:	0800402d 	.word	0x0800402d
 8003a1c:	0800405d 	.word	0x0800405d
 8003a20:	08004085 	.word	0x08004085

	case 0:
		break;

	case 1:	// <<<< 95% COMPLETE >>>>
		switch(TxState){
 8003a24:	4b8f      	ldr	r3, [pc, #572]	; (8003c64 <responseUART+0x294>)
 8003a26:	781b      	ldrb	r3, [r3, #0]
 8003a28:	2b04      	cmp	r3, #4
 8003a2a:	f200 8344 	bhi.w	80040b6 <responseUART+0x6e6>
 8003a2e:	a201      	add	r2, pc, #4	; (adr r2, 8003a34 <responseUART+0x64>)
 8003a30:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003a34:	08003acb 	.word	0x08003acb
 8003a38:	08003a49 	.word	0x08003a49
 8003a3c:	08003a5b 	.word	0x08003a5b
 8003a40:	08003a97 	.word	0x08003a97
 8003a44:	08003ab5 	.word	0x08003ab5
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003a48:	2202      	movs	r2, #2
 8003a4a:	4987      	ldr	r1, [pc, #540]	; (8003c68 <responseUART+0x298>)
 8003a4c:	4887      	ldr	r0, [pc, #540]	; (8003c6c <responseUART+0x29c>)
 8003a4e:	f006 fd81 	bl	800a554 <HAL_UART_Transmit_DMA>
			TxState = 2;
 8003a52:	4b84      	ldr	r3, [pc, #528]	; (8003c64 <responseUART+0x294>)
 8003a54:	2202      	movs	r2, #2
 8003a56:	701a      	strb	r2, [r3, #0]
			break;
 8003a58:	e03c      	b.n	8003ad4 <responseUART+0x104>
		case 2:
			Transmit[0] = 0b10010001;								// Store byte to Transmit.
 8003a5a:	4b85      	ldr	r3, [pc, #532]	; (8003c70 <responseUART+0x2a0>)
 8003a5c:	2291      	movs	r2, #145	; 0x91
 8003a5e:	701a      	strb	r2, [r3, #0]
			Transmit[1] = Receive[0];
 8003a60:	4b84      	ldr	r3, [pc, #528]	; (8003c74 <responseUART+0x2a4>)
 8003a62:	781a      	ldrb	r2, [r3, #0]
 8003a64:	4b82      	ldr	r3, [pc, #520]	; (8003c70 <responseUART+0x2a0>)
 8003a66:	705a      	strb	r2, [r3, #1]
			Transmit[2] = Receive[1];
 8003a68:	4b82      	ldr	r3, [pc, #520]	; (8003c74 <responseUART+0x2a4>)
 8003a6a:	785a      	ldrb	r2, [r3, #1]
 8003a6c:	4b80      	ldr	r3, [pc, #512]	; (8003c70 <responseUART+0x2a0>)
 8003a6e:	709a      	strb	r2, [r3, #2]
			Transmit[3] = checkSum(frameSum(Transmit, 3));			// Let the last byte equal to checksum of 1st-3rd byte.
 8003a70:	2103      	movs	r1, #3
 8003a72:	487f      	ldr	r0, [pc, #508]	; (8003c70 <responseUART+0x2a0>)
 8003a74:	f000 fc09 	bl	800428a <frameSum>
 8003a78:	4603      	mov	r3, r0
 8003a7a:	4618      	mov	r0, r3
 8003a7c:	f000 fbf2 	bl	8004264 <checkSum>
 8003a80:	4603      	mov	r3, r0
 8003a82:	461a      	mov	r2, r3
 8003a84:	4b7a      	ldr	r3, [pc, #488]	; (8003c70 <responseUART+0x2a0>)
 8003a86:	70da      	strb	r2, [r3, #3]
			RxState = 3;
 8003a88:	4b7b      	ldr	r3, [pc, #492]	; (8003c78 <responseUART+0x2a8>)
 8003a8a:	2203      	movs	r2, #3
 8003a8c:	701a      	strb	r2, [r3, #0]
			TxState = 3;
 8003a8e:	4b75      	ldr	r3, [pc, #468]	; (8003c64 <responseUART+0x294>)
 8003a90:	2203      	movs	r2, #3
 8003a92:	701a      	strb	r2, [r3, #0]
			break;
 8003a94:	e01e      	b.n	8003ad4 <responseUART+0x104>
		case 3:
			if(huart2.gState == HAL_UART_STATE_READY){
 8003a96:	4b75      	ldr	r3, [pc, #468]	; (8003c6c <responseUART+0x29c>)
 8003a98:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003a9c:	b2db      	uxtb	r3, r3
 8003a9e:	2b20      	cmp	r3, #32
 8003aa0:	d115      	bne.n	8003ace <responseUART+0xfe>
				HAL_UART_Transmit_DMA(&huart2, Transmit, 4);		// Transmit command back.
 8003aa2:	2204      	movs	r2, #4
 8003aa4:	4972      	ldr	r1, [pc, #456]	; (8003c70 <responseUART+0x2a0>)
 8003aa6:	4871      	ldr	r0, [pc, #452]	; (8003c6c <responseUART+0x29c>)
 8003aa8:	f006 fd54 	bl	800a554 <HAL_UART_Transmit_DMA>
				TxState = 4;
 8003aac:	4b6d      	ldr	r3, [pc, #436]	; (8003c64 <responseUART+0x294>)
 8003aae:	2204      	movs	r2, #4
 8003ab0:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003ab2:	e00c      	b.n	8003ace <responseUART+0xfe>
		case 4:
			if(ACKFlag){
 8003ab4:	4b71      	ldr	r3, [pc, #452]	; (8003c7c <responseUART+0x2ac>)
 8003ab6:	781b      	ldrb	r3, [r3, #0]
 8003ab8:	2b00      	cmp	r3, #0
 8003aba:	d00a      	beq.n	8003ad2 <responseUART+0x102>
				ACKFlag = 0;
 8003abc:	4b6f      	ldr	r3, [pc, #444]	; (8003c7c <responseUART+0x2ac>)
 8003abe:	2200      	movs	r2, #0
 8003ac0:	701a      	strb	r2, [r3, #0]
				TxState = 0;
 8003ac2:	4b68      	ldr	r3, [pc, #416]	; (8003c64 <responseUART+0x294>)
 8003ac4:	2200      	movs	r2, #0
 8003ac6:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003ac8:	e003      	b.n	8003ad2 <responseUART+0x102>
			break;
 8003aca:	bf00      	nop
 8003acc:	e2f3      	b.n	80040b6 <responseUART+0x6e6>
			break;
 8003ace:	bf00      	nop
 8003ad0:	e2f1      	b.n	80040b6 <responseUART+0x6e6>
			break;
 8003ad2:	bf00      	nop
		}
		break;
 8003ad4:	e2ef      	b.n	80040b6 <responseUART+0x6e6>

	case 2:	// <<<< COMPLETE >>>>
		// Connect
		switch(TxState){
 8003ad6:	4b63      	ldr	r3, [pc, #396]	; (8003c64 <responseUART+0x294>)
 8003ad8:	781b      	ldrb	r3, [r3, #0]
 8003ada:	2b00      	cmp	r3, #0
 8003adc:	d011      	beq.n	8003b02 <responseUART+0x132>
 8003ade:	2b01      	cmp	r3, #1
 8003ae0:	f040 82eb 	bne.w	80040ba <responseUART+0x6ea>
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003ae4:	2202      	movs	r2, #2
 8003ae6:	4960      	ldr	r1, [pc, #384]	; (8003c68 <responseUART+0x298>)
 8003ae8:	4860      	ldr	r0, [pc, #384]	; (8003c6c <responseUART+0x29c>)
 8003aea:	f006 fd33 	bl	800a554 <HAL_UART_Transmit_DMA>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 8003aee:	2201      	movs	r2, #1
 8003af0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003af4:	4862      	ldr	r0, [pc, #392]	; (8003c80 <responseUART+0x2b0>)
 8003af6:	f001 fe77 	bl	80057e8 <HAL_GPIO_WritePin>
			TxState = 0;
 8003afa:	4b5a      	ldr	r3, [pc, #360]	; (8003c64 <responseUART+0x294>)
 8003afc:	2200      	movs	r2, #0
 8003afe:	701a      	strb	r2, [r3, #0]
			break;
 8003b00:	e000      	b.n	8003b04 <responseUART+0x134>
			break;
 8003b02:	bf00      	nop
		}
		break;
 8003b04:	e2d9      	b.n	80040ba <responseUART+0x6ea>

	case 3:	// <<<< COMPLETE >>>>
		// Disconnect
		switch(TxState){
 8003b06:	4b57      	ldr	r3, [pc, #348]	; (8003c64 <responseUART+0x294>)
 8003b08:	781b      	ldrb	r3, [r3, #0]
 8003b0a:	2b00      	cmp	r3, #0
 8003b0c:	d011      	beq.n	8003b32 <responseUART+0x162>
 8003b0e:	2b01      	cmp	r3, #1
 8003b10:	f040 82d5 	bne.w	80040be <responseUART+0x6ee>
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003b14:	2202      	movs	r2, #2
 8003b16:	4954      	ldr	r1, [pc, #336]	; (8003c68 <responseUART+0x298>)
 8003b18:	4854      	ldr	r0, [pc, #336]	; (8003c6c <responseUART+0x29c>)
 8003b1a:	f006 fd1b 	bl	800a554 <HAL_UART_Transmit_DMA>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 8003b1e:	2200      	movs	r2, #0
 8003b20:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003b24:	4856      	ldr	r0, [pc, #344]	; (8003c80 <responseUART+0x2b0>)
 8003b26:	f001 fe5f 	bl	80057e8 <HAL_GPIO_WritePin>
			TxState = 0;
 8003b2a:	4b4e      	ldr	r3, [pc, #312]	; (8003c64 <responseUART+0x294>)
 8003b2c:	2200      	movs	r2, #0
 8003b2e:	701a      	strb	r2, [r3, #0]
			break;
 8003b30:	e000      	b.n	8003b34 <responseUART+0x164>
			break;
 8003b32:	bf00      	nop
		}
		break;
 8003b34:	e2c3      	b.n	80040be <responseUART+0x6ee>

	case 4:	// <<<< COMPLETE >>>>
		// Set limit of omega
		switch(TxState){
 8003b36:	4b4b      	ldr	r3, [pc, #300]	; (8003c64 <responseUART+0x294>)
 8003b38:	781b      	ldrb	r3, [r3, #0]
 8003b3a:	2b00      	cmp	r3, #0
 8003b3c:	d027      	beq.n	8003b8e <responseUART+0x1be>
 8003b3e:	2b01      	cmp	r3, #1
 8003b40:	f040 82bf 	bne.w	80040c2 <responseUART+0x6f2>
		case 0:
			break;
		case 1:
			limitOmega = (Receive[1]*10.0)/(255.0);
 8003b44:	4b4b      	ldr	r3, [pc, #300]	; (8003c74 <responseUART+0x2a4>)
 8003b46:	785b      	ldrb	r3, [r3, #1]
 8003b48:	4618      	mov	r0, r3
 8003b4a:	f7fc fc97 	bl	800047c <__aeabi_i2d>
 8003b4e:	f04f 0200 	mov.w	r2, #0
 8003b52:	4b4c      	ldr	r3, [pc, #304]	; (8003c84 <responseUART+0x2b4>)
 8003b54:	f7fc fcfc 	bl	8000550 <__aeabi_dmul>
 8003b58:	4602      	mov	r2, r0
 8003b5a:	460b      	mov	r3, r1
 8003b5c:	4610      	mov	r0, r2
 8003b5e:	4619      	mov	r1, r3
 8003b60:	a33b      	add	r3, pc, #236	; (adr r3, 8003c50 <responseUART+0x280>)
 8003b62:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003b66:	f7fc fe1d 	bl	80007a4 <__aeabi_ddiv>
 8003b6a:	4602      	mov	r2, r0
 8003b6c:	460b      	mov	r3, r1
 8003b6e:	4610      	mov	r0, r2
 8003b70:	4619      	mov	r1, r3
 8003b72:	f7fc ffbd 	bl	8000af0 <__aeabi_d2f>
 8003b76:	4603      	mov	r3, r0
 8003b78:	4a43      	ldr	r2, [pc, #268]	; (8003c88 <responseUART+0x2b8>)
 8003b7a:	6013      	str	r3, [r2, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003b7c:	2202      	movs	r2, #2
 8003b7e:	493a      	ldr	r1, [pc, #232]	; (8003c68 <responseUART+0x298>)
 8003b80:	483a      	ldr	r0, [pc, #232]	; (8003c6c <responseUART+0x29c>)
 8003b82:	f006 fce7 	bl	800a554 <HAL_UART_Transmit_DMA>
			TxState = 0;
 8003b86:	4b37      	ldr	r3, [pc, #220]	; (8003c64 <responseUART+0x294>)
 8003b88:	2200      	movs	r2, #0
 8003b8a:	701a      	strb	r2, [r3, #0]
			break;
 8003b8c:	e000      	b.n	8003b90 <responseUART+0x1c0>
			break;
 8003b8e:	bf00      	nop
		}
		break;
 8003b90:	e297      	b.n	80040c2 <responseUART+0x6f2>

	case 5: // <<<< 95% COMPLETE >>>>
		// Set new position()
		switch(TxState){
 8003b92:	4b34      	ldr	r3, [pc, #208]	; (8003c64 <responseUART+0x294>)
 8003b94:	781b      	ldrb	r3, [r3, #0]
 8003b96:	2b00      	cmp	r3, #0
 8003b98:	d029      	beq.n	8003bee <responseUART+0x21e>
 8003b9a:	2b01      	cmp	r3, #1
 8003b9c:	f040 8293 	bne.w	80040c6 <responseUART+0x6f6>
		case 0:
			break;
		case 1:
			nDestination = 1;
 8003ba0:	4b3a      	ldr	r3, [pc, #232]	; (8003c8c <responseUART+0x2bc>)
 8003ba2:	2201      	movs	r2, #1
 8003ba4:	701a      	strb	r2, [r3, #0]
			Destination[0] = ( ( (Receive[0]*256)+(Receive[1]) )*(180) )/(10000*3.14);
 8003ba6:	4b33      	ldr	r3, [pc, #204]	; (8003c74 <responseUART+0x2a4>)
 8003ba8:	781b      	ldrb	r3, [r3, #0]
 8003baa:	021b      	lsls	r3, r3, #8
 8003bac:	4a31      	ldr	r2, [pc, #196]	; (8003c74 <responseUART+0x2a4>)
 8003bae:	7852      	ldrb	r2, [r2, #1]
 8003bb0:	4413      	add	r3, r2
 8003bb2:	22b4      	movs	r2, #180	; 0xb4
 8003bb4:	fb02 f303 	mul.w	r3, r2, r3
 8003bb8:	4618      	mov	r0, r3
 8003bba:	f7fc fc5f 	bl	800047c <__aeabi_i2d>
 8003bbe:	a326      	add	r3, pc, #152	; (adr r3, 8003c58 <responseUART+0x288>)
 8003bc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003bc4:	f7fc fdee 	bl	80007a4 <__aeabi_ddiv>
 8003bc8:	4602      	mov	r2, r0
 8003bca:	460b      	mov	r3, r1
 8003bcc:	4610      	mov	r0, r2
 8003bce:	4619      	mov	r1, r3
 8003bd0:	f7fc ff6e 	bl	8000ab0 <__aeabi_d2uiz>
 8003bd4:	4603      	mov	r3, r0
 8003bd6:	b29a      	uxth	r2, r3
 8003bd8:	4b2d      	ldr	r3, [pc, #180]	; (8003c90 <responseUART+0x2c0>)
 8003bda:	801a      	strh	r2, [r3, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003bdc:	2202      	movs	r2, #2
 8003bde:	4922      	ldr	r1, [pc, #136]	; (8003c68 <responseUART+0x298>)
 8003be0:	4822      	ldr	r0, [pc, #136]	; (8003c6c <responseUART+0x29c>)
 8003be2:	f006 fcb7 	bl	800a554 <HAL_UART_Transmit_DMA>
			TxState = 0;
 8003be6:	4b1f      	ldr	r3, [pc, #124]	; (8003c64 <responseUART+0x294>)
 8003be8:	2200      	movs	r2, #0
 8003bea:	701a      	strb	r2, [r3, #0]
			//timeStamp = HAL_GetTick();								// Optional
			break;
 8003bec:	e000      	b.n	8003bf0 <responseUART+0x220>
			break;
 8003bee:	bf00      	nop
		}
		break;
 8003bf0:	e269      	b.n	80040c6 <responseUART+0x6f6>

	case 6:	// <<<< 95% COMPLETE >>>>
		// Set 1 station
		switch(TxState){
 8003bf2:	4b1c      	ldr	r3, [pc, #112]	; (8003c64 <responseUART+0x294>)
 8003bf4:	781b      	ldrb	r3, [r3, #0]
 8003bf6:	2b00      	cmp	r3, #0
 8003bf8:	d01a      	beq.n	8003c30 <responseUART+0x260>
 8003bfa:	2b01      	cmp	r3, #1
 8003bfc:	f040 8265 	bne.w	80040ca <responseUART+0x6fa>
		case 0:
			break;
		case 1:
			nStation = 1;
 8003c00:	4b24      	ldr	r3, [pc, #144]	; (8003c94 <responseUART+0x2c4>)
 8003c02:	2201      	movs	r2, #1
 8003c04:	701a      	strb	r2, [r3, #0]
			nDestination = 1;
 8003c06:	4b21      	ldr	r3, [pc, #132]	; (8003c8c <responseUART+0x2bc>)
 8003c08:	2201      	movs	r2, #1
 8003c0a:	701a      	strb	r2, [r3, #0]
			Destination[0] = tranStation(Receive[1]);
 8003c0c:	4b19      	ldr	r3, [pc, #100]	; (8003c74 <responseUART+0x2a4>)
 8003c0e:	785b      	ldrb	r3, [r3, #1]
 8003c10:	4618      	mov	r0, r3
 8003c12:	f000 fa89 	bl	8004128 <tranStation>
 8003c16:	4603      	mov	r3, r0
 8003c18:	461a      	mov	r2, r3
 8003c1a:	4b1d      	ldr	r3, [pc, #116]	; (8003c90 <responseUART+0x2c0>)
 8003c1c:	801a      	strh	r2, [r3, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003c1e:	2202      	movs	r2, #2
 8003c20:	4911      	ldr	r1, [pc, #68]	; (8003c68 <responseUART+0x298>)
 8003c22:	4812      	ldr	r0, [pc, #72]	; (8003c6c <responseUART+0x29c>)
 8003c24:	f006 fc96 	bl	800a554 <HAL_UART_Transmit_DMA>
			TxState = 0;
 8003c28:	4b0e      	ldr	r3, [pc, #56]	; (8003c64 <responseUART+0x294>)
 8003c2a:	2200      	movs	r2, #0
 8003c2c:	701a      	strb	r2, [r3, #0]
			//timeStamp = HAL_GetTick();								// Optional
			break;
 8003c2e:	e000      	b.n	8003c32 <responseUART+0x262>
			break;
 8003c30:	bf00      	nop
		}
		break;
 8003c32:	e24a      	b.n	80040ca <responseUART+0x6fa>

	case 7:
		// set n station
		switch(TxState){
 8003c34:	4b0b      	ldr	r3, [pc, #44]	; (8003c64 <responseUART+0x294>)
 8003c36:	781b      	ldrb	r3, [r3, #0]
 8003c38:	2b00      	cmp	r3, #0
 8003c3a:	d06c      	beq.n	8003d16 <responseUART+0x346>
 8003c3c:	2b01      	cmp	r3, #1
 8003c3e:	f040 8246 	bne.w	80040ce <responseUART+0x6fe>
		case 0:
			break;
		case 1:
			nDestination = nStation;
 8003c42:	4b14      	ldr	r3, [pc, #80]	; (8003c94 <responseUART+0x2c4>)
 8003c44:	781a      	ldrb	r2, [r3, #0]
 8003c46:	4b11      	ldr	r3, [pc, #68]	; (8003c8c <responseUART+0x2bc>)
 8003c48:	701a      	strb	r2, [r3, #0]
			for(int i=0; i<(nStation+(nStation%2)); i+=2){
 8003c4a:	2300      	movs	r3, #0
 8003c4c:	607b      	str	r3, [r7, #4]
 8003c4e:	e04e      	b.n	8003cee <responseUART+0x31e>
 8003c50:	00000000 	.word	0x00000000
 8003c54:	406fe000 	.word	0x406fe000
 8003c58:	00000000 	.word	0x00000000
 8003c5c:	40deaa00 	.word	0x40deaa00
 8003c60:	2000054c 	.word	0x2000054c
 8003c64:	20000549 	.word	0x20000549
 8003c68:	20000018 	.word	0x20000018
 8003c6c:	200003c0 	.word	0x200003c0
 8003c70:	20000550 	.word	0x20000550
 8003c74:	20000554 	.word	0x20000554
 8003c78:	2000054a 	.word	0x2000054a
 8003c7c:	20000567 	.word	0x20000567
 8003c80:	40020400 	.word	0x40020400
 8003c84:	40240000 	.word	0x40240000
 8003c88:	20000014 	.word	0x20000014
 8003c8c:	200004d0 	.word	0x200004d0
 8003c90:	200004d4 	.word	0x200004d4
 8003c94:	20000538 	.word	0x20000538
				Destination[i] = tranStation(Receive[j] & 0x0F);
 8003c98:	4ba6      	ldr	r3, [pc, #664]	; (8003f34 <responseUART+0x564>)
 8003c9a:	781b      	ldrb	r3, [r3, #0]
 8003c9c:	461a      	mov	r2, r3
 8003c9e:	4ba6      	ldr	r3, [pc, #664]	; (8003f38 <responseUART+0x568>)
 8003ca0:	5c9b      	ldrb	r3, [r3, r2]
 8003ca2:	f003 030f 	and.w	r3, r3, #15
 8003ca6:	b2db      	uxtb	r3, r3
 8003ca8:	4618      	mov	r0, r3
 8003caa:	f000 fa3d 	bl	8004128 <tranStation>
 8003cae:	4603      	mov	r3, r0
 8003cb0:	4619      	mov	r1, r3
 8003cb2:	4aa2      	ldr	r2, [pc, #648]	; (8003f3c <responseUART+0x56c>)
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				Destination[i+1] = tranStation((Receive[j] & 0xF0)>>4);
 8003cba:	4b9e      	ldr	r3, [pc, #632]	; (8003f34 <responseUART+0x564>)
 8003cbc:	781b      	ldrb	r3, [r3, #0]
 8003cbe:	461a      	mov	r2, r3
 8003cc0:	4b9d      	ldr	r3, [pc, #628]	; (8003f38 <responseUART+0x568>)
 8003cc2:	5c9b      	ldrb	r3, [r3, r2]
 8003cc4:	091b      	lsrs	r3, r3, #4
 8003cc6:	b2da      	uxtb	r2, r3
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	1c5c      	adds	r4, r3, #1
 8003ccc:	4610      	mov	r0, r2
 8003cce:	f000 fa2b 	bl	8004128 <tranStation>
 8003cd2:	4603      	mov	r3, r0
 8003cd4:	461a      	mov	r2, r3
 8003cd6:	4b99      	ldr	r3, [pc, #612]	; (8003f3c <responseUART+0x56c>)
 8003cd8:	f823 2014 	strh.w	r2, [r3, r4, lsl #1]
				j+=1;
 8003cdc:	4b95      	ldr	r3, [pc, #596]	; (8003f34 <responseUART+0x564>)
 8003cde:	781b      	ldrb	r3, [r3, #0]
 8003ce0:	3301      	adds	r3, #1
 8003ce2:	b2da      	uxtb	r2, r3
 8003ce4:	4b93      	ldr	r3, [pc, #588]	; (8003f34 <responseUART+0x564>)
 8003ce6:	701a      	strb	r2, [r3, #0]
			for(int i=0; i<(nStation+(nStation%2)); i+=2){
 8003ce8:	687b      	ldr	r3, [r7, #4]
 8003cea:	3302      	adds	r3, #2
 8003cec:	607b      	str	r3, [r7, #4]
 8003cee:	4b94      	ldr	r3, [pc, #592]	; (8003f40 <responseUART+0x570>)
 8003cf0:	781b      	ldrb	r3, [r3, #0]
 8003cf2:	3301      	adds	r3, #1
 8003cf4:	f023 0301 	bic.w	r3, r3, #1
 8003cf8:	687a      	ldr	r2, [r7, #4]
 8003cfa:	429a      	cmp	r2, r3
 8003cfc:	dbcc      	blt.n	8003c98 <responseUART+0x2c8>
			}
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003cfe:	2202      	movs	r2, #2
 8003d00:	4990      	ldr	r1, [pc, #576]	; (8003f44 <responseUART+0x574>)
 8003d02:	4891      	ldr	r0, [pc, #580]	; (8003f48 <responseUART+0x578>)
 8003d04:	f006 fc26 	bl	800a554 <HAL_UART_Transmit_DMA>
			j = 0;
 8003d08:	4b8a      	ldr	r3, [pc, #552]	; (8003f34 <responseUART+0x564>)
 8003d0a:	2200      	movs	r2, #0
 8003d0c:	701a      	strb	r2, [r3, #0]
			TxState = 0;
 8003d0e:	4b8f      	ldr	r3, [pc, #572]	; (8003f4c <responseUART+0x57c>)
 8003d10:	2200      	movs	r2, #0
 8003d12:	701a      	strb	r2, [r3, #0]
			break;
 8003d14:	e000      	b.n	8003d18 <responseUART+0x348>
			break;
 8003d16:	bf00      	nop
		}
		break;
 8003d18:	e1d9      	b.n	80040ce <responseUART+0x6fe>

	case 8:	// <<<< 95% COMPLETE >>>>
		// Go!
		switch(TxState){
 8003d1a:	4b8c      	ldr	r3, [pc, #560]	; (8003f4c <responseUART+0x57c>)
 8003d1c:	781b      	ldrb	r3, [r3, #0]
 8003d1e:	2b00      	cmp	r3, #0
 8003d20:	d011      	beq.n	8003d46 <responseUART+0x376>
 8003d22:	2b01      	cmp	r3, #1
 8003d24:	f040 81d5 	bne.w	80040d2 <responseUART+0x702>
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003d28:	2202      	movs	r2, #2
 8003d2a:	4986      	ldr	r1, [pc, #536]	; (8003f44 <responseUART+0x574>)
 8003d2c:	4886      	ldr	r0, [pc, #536]	; (8003f48 <responseUART+0x578>)
 8003d2e:	f006 fc11 	bl	800a554 <HAL_UART_Transmit_DMA>
			update = 1;
 8003d32:	4b87      	ldr	r3, [pc, #540]	; (8003f50 <responseUART+0x580>)
 8003d34:	2201      	movs	r2, #1
 8003d36:	701a      	strb	r2, [r3, #0]
			movingFlag = 8;
 8003d38:	4b86      	ldr	r3, [pc, #536]	; (8003f54 <responseUART+0x584>)
 8003d3a:	2208      	movs	r2, #8
 8003d3c:	701a      	strb	r2, [r3, #0]
			TxState = 0;
 8003d3e:	4b83      	ldr	r3, [pc, #524]	; (8003f4c <responseUART+0x57c>)
 8003d40:	2200      	movs	r2, #0
 8003d42:	701a      	strb	r2, [r3, #0]
			//timeStamp = HAL_GetTick();								// Optional
			break;
 8003d44:	e000      	b.n	8003d48 <responseUART+0x378>
			break;
 8003d46:	bf00      	nop
		}
		break;
 8003d48:	e1c3      	b.n	80040d2 <responseUART+0x702>

	case 9:	// <<<< 95% COMPLETE >>>>
		// transmit station
		switch(TxState){
 8003d4a:	4b80      	ldr	r3, [pc, #512]	; (8003f4c <responseUART+0x57c>)
 8003d4c:	781b      	ldrb	r3, [r3, #0]
 8003d4e:	2b04      	cmp	r3, #4
 8003d50:	f200 81c1 	bhi.w	80040d6 <responseUART+0x706>
 8003d54:	a201      	add	r2, pc, #4	; (adr r2, 8003d5c <responseUART+0x38c>)
 8003d56:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003d5a:	bf00      	nop
 8003d5c:	08003df1 	.word	0x08003df1
 8003d60:	08003d71 	.word	0x08003d71
 8003d64:	08003d83 	.word	0x08003d83
 8003d68:	08003dbd 	.word	0x08003dbd
 8003d6c:	08003ddb 	.word	0x08003ddb
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003d70:	2202      	movs	r2, #2
 8003d72:	4974      	ldr	r1, [pc, #464]	; (8003f44 <responseUART+0x574>)
 8003d74:	4874      	ldr	r0, [pc, #464]	; (8003f48 <responseUART+0x578>)
 8003d76:	f006 fbed 	bl	800a554 <HAL_UART_Transmit_DMA>
			TxState = 2;
 8003d7a:	4b74      	ldr	r3, [pc, #464]	; (8003f4c <responseUART+0x57c>)
 8003d7c:	2202      	movs	r2, #2
 8003d7e:	701a      	strb	r2, [r3, #0]
			break;
 8003d80:	e03b      	b.n	8003dfa <responseUART+0x42a>
		case 2:
			Transmit[0] = 0b10011001;								// Store byte to Transmit.
 8003d82:	4b75      	ldr	r3, [pc, #468]	; (8003f58 <responseUART+0x588>)
 8003d84:	2299      	movs	r2, #153	; 0x99
 8003d86:	701a      	strb	r2, [r3, #0]
			Transmit[1] = 0;
 8003d88:	4b73      	ldr	r3, [pc, #460]	; (8003f58 <responseUART+0x588>)
 8003d8a:	2200      	movs	r2, #0
 8003d8c:	705a      	strb	r2, [r3, #1]
			Transmit[2] = nowStation;								// Value from state machine.
 8003d8e:	4b73      	ldr	r3, [pc, #460]	; (8003f5c <responseUART+0x58c>)
 8003d90:	781a      	ldrb	r2, [r3, #0]
 8003d92:	4b71      	ldr	r3, [pc, #452]	; (8003f58 <responseUART+0x588>)
 8003d94:	709a      	strb	r2, [r3, #2]
			Transmit[3] = checkSum(frameSum(Transmit, 3));			// Let the last byte equal to checksum of 1st-3rd byte.
 8003d96:	2103      	movs	r1, #3
 8003d98:	486f      	ldr	r0, [pc, #444]	; (8003f58 <responseUART+0x588>)
 8003d9a:	f000 fa76 	bl	800428a <frameSum>
 8003d9e:	4603      	mov	r3, r0
 8003da0:	4618      	mov	r0, r3
 8003da2:	f000 fa5f 	bl	8004264 <checkSum>
 8003da6:	4603      	mov	r3, r0
 8003da8:	461a      	mov	r2, r3
 8003daa:	4b6b      	ldr	r3, [pc, #428]	; (8003f58 <responseUART+0x588>)
 8003dac:	70da      	strb	r2, [r3, #3]
			RxState = 3;
 8003dae:	4b6c      	ldr	r3, [pc, #432]	; (8003f60 <responseUART+0x590>)
 8003db0:	2203      	movs	r2, #3
 8003db2:	701a      	strb	r2, [r3, #0]
			TxState = 3;
 8003db4:	4b65      	ldr	r3, [pc, #404]	; (8003f4c <responseUART+0x57c>)
 8003db6:	2203      	movs	r2, #3
 8003db8:	701a      	strb	r2, [r3, #0]
			break;
 8003dba:	e01e      	b.n	8003dfa <responseUART+0x42a>
		case 3:
			if(huart2.gState == HAL_UART_STATE_READY){
 8003dbc:	4b62      	ldr	r3, [pc, #392]	; (8003f48 <responseUART+0x578>)
 8003dbe:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003dc2:	b2db      	uxtb	r3, r3
 8003dc4:	2b20      	cmp	r3, #32
 8003dc6:	d115      	bne.n	8003df4 <responseUART+0x424>
				HAL_UART_Transmit_DMA(&huart2, Transmit, 4);		// Transmit command back.
 8003dc8:	2204      	movs	r2, #4
 8003dca:	4963      	ldr	r1, [pc, #396]	; (8003f58 <responseUART+0x588>)
 8003dcc:	485e      	ldr	r0, [pc, #376]	; (8003f48 <responseUART+0x578>)
 8003dce:	f006 fbc1 	bl	800a554 <HAL_UART_Transmit_DMA>
				TxState = 4;
 8003dd2:	4b5e      	ldr	r3, [pc, #376]	; (8003f4c <responseUART+0x57c>)
 8003dd4:	2204      	movs	r2, #4
 8003dd6:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003dd8:	e00c      	b.n	8003df4 <responseUART+0x424>
		case 4:
			if(ACKFlag){
 8003dda:	4b62      	ldr	r3, [pc, #392]	; (8003f64 <responseUART+0x594>)
 8003ddc:	781b      	ldrb	r3, [r3, #0]
 8003dde:	2b00      	cmp	r3, #0
 8003de0:	d00a      	beq.n	8003df8 <responseUART+0x428>
				ACKFlag = 0;
 8003de2:	4b60      	ldr	r3, [pc, #384]	; (8003f64 <responseUART+0x594>)
 8003de4:	2200      	movs	r2, #0
 8003de6:	701a      	strb	r2, [r3, #0]
				TxState = 0;
 8003de8:	4b58      	ldr	r3, [pc, #352]	; (8003f4c <responseUART+0x57c>)
 8003dea:	2200      	movs	r2, #0
 8003dec:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003dee:	e003      	b.n	8003df8 <responseUART+0x428>
			break;
 8003df0:	bf00      	nop
 8003df2:	e170      	b.n	80040d6 <responseUART+0x706>
			break;
 8003df4:	bf00      	nop
 8003df6:	e16e      	b.n	80040d6 <responseUART+0x706>
			break;
 8003df8:	bf00      	nop
		}
		break;
 8003dfa:	e16c      	b.n	80040d6 <responseUART+0x706>

	case 10:	// <<<< 95% COMPLETE >>>>
		// transmit theta (rad variable)
		switch(TxState){
 8003dfc:	4b53      	ldr	r3, [pc, #332]	; (8003f4c <responseUART+0x57c>)
 8003dfe:	781b      	ldrb	r3, [r3, #0]
 8003e00:	2b04      	cmp	r3, #4
 8003e02:	f200 816a 	bhi.w	80040da <responseUART+0x70a>
 8003e06:	a201      	add	r2, pc, #4	; (adr r2, 8003e0c <responseUART+0x43c>)
 8003e08:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003e0c:	08003ef1 	.word	0x08003ef1
 8003e10:	08003e21 	.word	0x08003e21
 8003e14:	08003e33 	.word	0x08003e33
 8003e18:	08003ebd 	.word	0x08003ebd
 8003e1c:	08003edb 	.word	0x08003edb
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003e20:	2202      	movs	r2, #2
 8003e22:	4948      	ldr	r1, [pc, #288]	; (8003f44 <responseUART+0x574>)
 8003e24:	4848      	ldr	r0, [pc, #288]	; (8003f48 <responseUART+0x578>)
 8003e26:	f006 fb95 	bl	800a554 <HAL_UART_Transmit_DMA>
			TxState = 2;
 8003e2a:	4b48      	ldr	r3, [pc, #288]	; (8003f4c <responseUART+0x57c>)
 8003e2c:	2202      	movs	r2, #2
 8003e2e:	701a      	strb	r2, [r3, #0]
			break;
 8003e30:	e063      	b.n	8003efa <responseUART+0x52a>
		case 2:
			Transmit[0] = 0b10011010;								// Store byte to Transmit.
 8003e32:	4b49      	ldr	r3, [pc, #292]	; (8003f58 <responseUART+0x588>)
 8003e34:	229a      	movs	r2, #154	; 0x9a
 8003e36:	701a      	strb	r2, [r3, #0]
			Transmit[1] = ( (uint16_t)(current_rad_wrap*10000)) >> 8;									// 16bit value from encoder.
 8003e38:	4b4b      	ldr	r3, [pc, #300]	; (8003f68 <responseUART+0x598>)
 8003e3a:	edd3 7a00 	vldr	s15, [r3]
 8003e3e:	ed9f 7a4b 	vldr	s14, [pc, #300]	; 8003f6c <responseUART+0x59c>
 8003e42:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003e46:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003e4a:	ee17 3a90 	vmov	r3, s15
 8003e4e:	b29b      	uxth	r3, r3
 8003e50:	0a1b      	lsrs	r3, r3, #8
 8003e52:	b29b      	uxth	r3, r3
 8003e54:	b2da      	uxtb	r2, r3
 8003e56:	4b40      	ldr	r3, [pc, #256]	; (8003f58 <responseUART+0x588>)
 8003e58:	705a      	strb	r2, [r3, #1]
			Transmit[2] = ( (uint16_t)(current_rad_wrap*10000)) & 0xFF;
 8003e5a:	4b43      	ldr	r3, [pc, #268]	; (8003f68 <responseUART+0x598>)
 8003e5c:	edd3 7a00 	vldr	s15, [r3]
 8003e60:	ed9f 7a42 	vldr	s14, [pc, #264]	; 8003f6c <responseUART+0x59c>
 8003e64:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003e68:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003e6c:	ee17 3a90 	vmov	r3, s15
 8003e70:	b29b      	uxth	r3, r3
 8003e72:	b2da      	uxtb	r2, r3
 8003e74:	4b38      	ldr	r3, [pc, #224]	; (8003f58 <responseUART+0x588>)
 8003e76:	709a      	strb	r2, [r3, #2]
			if(HAL_GetTick()-HMEtimeStamp < 1000){
 8003e78:	f000 fdec 	bl	8004a54 <HAL_GetTick>
 8003e7c:	4603      	mov	r3, r0
 8003e7e:	4a3c      	ldr	r2, [pc, #240]	; (8003f70 <responseUART+0x5a0>)
 8003e80:	8812      	ldrh	r2, [r2, #0]
 8003e82:	1a9b      	subs	r3, r3, r2
 8003e84:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003e88:	d205      	bcs.n	8003e96 <responseUART+0x4c6>
				Transmit[1] = 0;
 8003e8a:	4b33      	ldr	r3, [pc, #204]	; (8003f58 <responseUART+0x588>)
 8003e8c:	2200      	movs	r2, #0
 8003e8e:	705a      	strb	r2, [r3, #1]
				Transmit[2] = 0;
 8003e90:	4b31      	ldr	r3, [pc, #196]	; (8003f58 <responseUART+0x588>)
 8003e92:	2200      	movs	r2, #0
 8003e94:	709a      	strb	r2, [r3, #2]
			}
			Transmit[3] = checkSum(frameSum(Transmit, 3));			// Let the last byte equal to checksum of 1st-3rd byte.
 8003e96:	2103      	movs	r1, #3
 8003e98:	482f      	ldr	r0, [pc, #188]	; (8003f58 <responseUART+0x588>)
 8003e9a:	f000 f9f6 	bl	800428a <frameSum>
 8003e9e:	4603      	mov	r3, r0
 8003ea0:	4618      	mov	r0, r3
 8003ea2:	f000 f9df 	bl	8004264 <checkSum>
 8003ea6:	4603      	mov	r3, r0
 8003ea8:	461a      	mov	r2, r3
 8003eaa:	4b2b      	ldr	r3, [pc, #172]	; (8003f58 <responseUART+0x588>)
 8003eac:	70da      	strb	r2, [r3, #3]
			RxState = 3;
 8003eae:	4b2c      	ldr	r3, [pc, #176]	; (8003f60 <responseUART+0x590>)
 8003eb0:	2203      	movs	r2, #3
 8003eb2:	701a      	strb	r2, [r3, #0]
			TxState = 3;
 8003eb4:	4b25      	ldr	r3, [pc, #148]	; (8003f4c <responseUART+0x57c>)
 8003eb6:	2203      	movs	r2, #3
 8003eb8:	701a      	strb	r2, [r3, #0]
			break;
 8003eba:	e01e      	b.n	8003efa <responseUART+0x52a>
		case 3:
			if(huart2.gState == HAL_UART_STATE_READY){
 8003ebc:	4b22      	ldr	r3, [pc, #136]	; (8003f48 <responseUART+0x578>)
 8003ebe:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003ec2:	b2db      	uxtb	r3, r3
 8003ec4:	2b20      	cmp	r3, #32
 8003ec6:	d115      	bne.n	8003ef4 <responseUART+0x524>
				HAL_UART_Transmit_DMA(&huart2, Transmit, 4);		// Transmit command back.
 8003ec8:	2204      	movs	r2, #4
 8003eca:	4923      	ldr	r1, [pc, #140]	; (8003f58 <responseUART+0x588>)
 8003ecc:	481e      	ldr	r0, [pc, #120]	; (8003f48 <responseUART+0x578>)
 8003ece:	f006 fb41 	bl	800a554 <HAL_UART_Transmit_DMA>
				TxState = 4;
 8003ed2:	4b1e      	ldr	r3, [pc, #120]	; (8003f4c <responseUART+0x57c>)
 8003ed4:	2204      	movs	r2, #4
 8003ed6:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003ed8:	e00c      	b.n	8003ef4 <responseUART+0x524>
		case 4:
			if(ACKFlag){
 8003eda:	4b22      	ldr	r3, [pc, #136]	; (8003f64 <responseUART+0x594>)
 8003edc:	781b      	ldrb	r3, [r3, #0]
 8003ede:	2b00      	cmp	r3, #0
 8003ee0:	d00a      	beq.n	8003ef8 <responseUART+0x528>
				ACKFlag = 0;
 8003ee2:	4b20      	ldr	r3, [pc, #128]	; (8003f64 <responseUART+0x594>)
 8003ee4:	2200      	movs	r2, #0
 8003ee6:	701a      	strb	r2, [r3, #0]
				TxState = 0;
 8003ee8:	4b18      	ldr	r3, [pc, #96]	; (8003f4c <responseUART+0x57c>)
 8003eea:	2200      	movs	r2, #0
 8003eec:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003eee:	e003      	b.n	8003ef8 <responseUART+0x528>
			break;
 8003ef0:	bf00      	nop
 8003ef2:	e0f2      	b.n	80040da <responseUART+0x70a>
			break;
 8003ef4:	bf00      	nop
 8003ef6:	e0f0      	b.n	80040da <responseUART+0x70a>
			break;
 8003ef8:	bf00      	nop
		}
		break;
 8003efa:	e0ee      	b.n	80040da <responseUART+0x70a>

	case 11:	// <<<< 95% COMPLETE >>>>
		// transmit top omega (rad variable)
		switch(TxState){
 8003efc:	4b13      	ldr	r3, [pc, #76]	; (8003f4c <responseUART+0x57c>)
 8003efe:	781b      	ldrb	r3, [r3, #0]
 8003f00:	2b04      	cmp	r3, #4
 8003f02:	f200 80ec 	bhi.w	80040de <responseUART+0x70e>
 8003f06:	a201      	add	r2, pc, #4	; (adr r2, 8003f0c <responseUART+0x53c>)
 8003f08:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f0c:	08004021 	.word	0x08004021
 8003f10:	08003f21 	.word	0x08003f21
 8003f14:	08003f75 	.word	0x08003f75
 8003f18:	08003fed 	.word	0x08003fed
 8003f1c:	0800400b 	.word	0x0800400b
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003f20:	2202      	movs	r2, #2
 8003f22:	4908      	ldr	r1, [pc, #32]	; (8003f44 <responseUART+0x574>)
 8003f24:	4808      	ldr	r0, [pc, #32]	; (8003f48 <responseUART+0x578>)
 8003f26:	f006 fb15 	bl	800a554 <HAL_UART_Transmit_DMA>
			TxState = 2;
 8003f2a:	4b08      	ldr	r3, [pc, #32]	; (8003f4c <responseUART+0x57c>)
 8003f2c:	2202      	movs	r2, #2
 8003f2e:	701a      	strb	r2, [r3, #0]
			break;
 8003f30:	e07b      	b.n	800402a <responseUART+0x65a>
 8003f32:	bf00      	nop
 8003f34:	2000053a 	.word	0x2000053a
 8003f38:	20000554 	.word	0x20000554
 8003f3c:	200004d4 	.word	0x200004d4
 8003f40:	20000538 	.word	0x20000538
 8003f44:	20000018 	.word	0x20000018
 8003f48:	200003c0 	.word	0x200003c0
 8003f4c:	20000549 	.word	0x20000549
 8003f50:	200005e4 	.word	0x200005e4
 8003f54:	2000053c 	.word	0x2000053c
 8003f58:	20000550 	.word	0x20000550
 8003f5c:	20000539 	.word	0x20000539
 8003f60:	2000054a 	.word	0x2000054a
 8003f64:	20000567 	.word	0x20000567
 8003f68:	20000580 	.word	0x20000580
 8003f6c:	461c4000 	.word	0x461c4000
 8003f70:	2000056c 	.word	0x2000056c
		case 2:
			Transmit[0] = 0b10011011;								// Store byte to Transmit.
 8003f74:	4b60      	ldr	r3, [pc, #384]	; (80040f8 <responseUART+0x728>)
 8003f76:	229b      	movs	r2, #155	; 0x9b
 8003f78:	701a      	strb	r2, [r3, #0]
			Transmit[1] = 0;
 8003f7a:	4b5f      	ldr	r3, [pc, #380]	; (80040f8 <responseUART+0x728>)
 8003f7c:	2200      	movs	r2, #0
 8003f7e:	705a      	strb	r2, [r3, #1]
			Transmit[2] = (kal_velocity*255*9.5493)/(10);
 8003f80:	4b5e      	ldr	r3, [pc, #376]	; (80040fc <responseUART+0x72c>)
 8003f82:	edd3 7a00 	vldr	s15, [r3]
 8003f86:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 8004100 <responseUART+0x730>
 8003f8a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003f8e:	ee17 0a90 	vmov	r0, s15
 8003f92:	f7fc fa85 	bl	80004a0 <__aeabi_f2d>
 8003f96:	a356      	add	r3, pc, #344	; (adr r3, 80040f0 <responseUART+0x720>)
 8003f98:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003f9c:	f7fc fad8 	bl	8000550 <__aeabi_dmul>
 8003fa0:	4602      	mov	r2, r0
 8003fa2:	460b      	mov	r3, r1
 8003fa4:	4610      	mov	r0, r2
 8003fa6:	4619      	mov	r1, r3
 8003fa8:	f04f 0200 	mov.w	r2, #0
 8003fac:	4b55      	ldr	r3, [pc, #340]	; (8004104 <responseUART+0x734>)
 8003fae:	f7fc fbf9 	bl	80007a4 <__aeabi_ddiv>
 8003fb2:	4602      	mov	r2, r0
 8003fb4:	460b      	mov	r3, r1
 8003fb6:	4610      	mov	r0, r2
 8003fb8:	4619      	mov	r1, r3
 8003fba:	f7fc fd79 	bl	8000ab0 <__aeabi_d2uiz>
 8003fbe:	4603      	mov	r3, r0
 8003fc0:	b2da      	uxtb	r2, r3
 8003fc2:	4b4d      	ldr	r3, [pc, #308]	; (80040f8 <responseUART+0x728>)
 8003fc4:	709a      	strb	r2, [r3, #2]
			// Transmit[2] = ((topOmega*255)/(10))
			Transmit[3] = checkSum(frameSum(Transmit, 3));			// Let the last byte equal to checksum of 1st-3rd byte.
 8003fc6:	2103      	movs	r1, #3
 8003fc8:	484b      	ldr	r0, [pc, #300]	; (80040f8 <responseUART+0x728>)
 8003fca:	f000 f95e 	bl	800428a <frameSum>
 8003fce:	4603      	mov	r3, r0
 8003fd0:	4618      	mov	r0, r3
 8003fd2:	f000 f947 	bl	8004264 <checkSum>
 8003fd6:	4603      	mov	r3, r0
 8003fd8:	461a      	mov	r2, r3
 8003fda:	4b47      	ldr	r3, [pc, #284]	; (80040f8 <responseUART+0x728>)
 8003fdc:	70da      	strb	r2, [r3, #3]
			RxState = 3;
 8003fde:	4b4a      	ldr	r3, [pc, #296]	; (8004108 <responseUART+0x738>)
 8003fe0:	2203      	movs	r2, #3
 8003fe2:	701a      	strb	r2, [r3, #0]
			TxState = 3;
 8003fe4:	4b49      	ldr	r3, [pc, #292]	; (800410c <responseUART+0x73c>)
 8003fe6:	2203      	movs	r2, #3
 8003fe8:	701a      	strb	r2, [r3, #0]
			break;
 8003fea:	e01e      	b.n	800402a <responseUART+0x65a>
		case 3:
			if(huart2.gState == HAL_UART_STATE_READY){
 8003fec:	4b48      	ldr	r3, [pc, #288]	; (8004110 <responseUART+0x740>)
 8003fee:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003ff2:	b2db      	uxtb	r3, r3
 8003ff4:	2b20      	cmp	r3, #32
 8003ff6:	d115      	bne.n	8004024 <responseUART+0x654>
				HAL_UART_Transmit_DMA(&huart2, Transmit, 4);		// Transmit command back.
 8003ff8:	2204      	movs	r2, #4
 8003ffa:	493f      	ldr	r1, [pc, #252]	; (80040f8 <responseUART+0x728>)
 8003ffc:	4844      	ldr	r0, [pc, #272]	; (8004110 <responseUART+0x740>)
 8003ffe:	f006 faa9 	bl	800a554 <HAL_UART_Transmit_DMA>
				TxState = 4;
 8004002:	4b42      	ldr	r3, [pc, #264]	; (800410c <responseUART+0x73c>)
 8004004:	2204      	movs	r2, #4
 8004006:	701a      	strb	r2, [r3, #0]
			}
			break;
 8004008:	e00c      	b.n	8004024 <responseUART+0x654>
		case 4:
			if(ACKFlag){
 800400a:	4b42      	ldr	r3, [pc, #264]	; (8004114 <responseUART+0x744>)
 800400c:	781b      	ldrb	r3, [r3, #0]
 800400e:	2b00      	cmp	r3, #0
 8004010:	d00a      	beq.n	8004028 <responseUART+0x658>
				ACKFlag = 0;
 8004012:	4b40      	ldr	r3, [pc, #256]	; (8004114 <responseUART+0x744>)
 8004014:	2200      	movs	r2, #0
 8004016:	701a      	strb	r2, [r3, #0]
				TxState = 0;
 8004018:	4b3c      	ldr	r3, [pc, #240]	; (800410c <responseUART+0x73c>)
 800401a:	2200      	movs	r2, #0
 800401c:	701a      	strb	r2, [r3, #0]
			}
			break;
 800401e:	e003      	b.n	8004028 <responseUART+0x658>
			break;
 8004020:	bf00      	nop
 8004022:	e05c      	b.n	80040de <responseUART+0x70e>
			break;
 8004024:	bf00      	nop
 8004026:	e05a      	b.n	80040de <responseUART+0x70e>
			break;
 8004028:	bf00      	nop
		}
		break;
 800402a:	e058      	b.n	80040de <responseUART+0x70e>

	case 12:
		// Enable end-effector
		switch(TxState){
 800402c:	4b37      	ldr	r3, [pc, #220]	; (800410c <responseUART+0x73c>)
 800402e:	781b      	ldrb	r3, [r3, #0]
 8004030:	2b00      	cmp	r3, #0
 8004032:	d002      	beq.n	800403a <responseUART+0x66a>
 8004034:	2b01      	cmp	r3, #1
 8004036:	d004      	beq.n	8004042 <responseUART+0x672>
			NFenable = 1;
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
			TxState = 0;
			break;
		}
		break;
 8004038:	e056      	b.n	80040e8 <responseUART+0x718>
			if(huart2.gState == HAL_UART_STATE_READY){
 800403a:	4b35      	ldr	r3, [pc, #212]	; (8004110 <responseUART+0x740>)
 800403c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
			break;
 8004040:	e00b      	b.n	800405a <responseUART+0x68a>
			NFenable = 1;
 8004042:	4b35      	ldr	r3, [pc, #212]	; (8004118 <responseUART+0x748>)
 8004044:	2201      	movs	r2, #1
 8004046:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8004048:	2202      	movs	r2, #2
 800404a:	4934      	ldr	r1, [pc, #208]	; (800411c <responseUART+0x74c>)
 800404c:	4830      	ldr	r0, [pc, #192]	; (8004110 <responseUART+0x740>)
 800404e:	f006 fa81 	bl	800a554 <HAL_UART_Transmit_DMA>
			TxState = 0;
 8004052:	4b2e      	ldr	r3, [pc, #184]	; (800410c <responseUART+0x73c>)
 8004054:	2200      	movs	r2, #0
 8004056:	701a      	strb	r2, [r3, #0]
			break;
 8004058:	bf00      	nop
		break;
 800405a:	e045      	b.n	80040e8 <responseUART+0x718>

	case 13:
		// Disable end-effector
		switch(TxState){
 800405c:	4b2b      	ldr	r3, [pc, #172]	; (800410c <responseUART+0x73c>)
 800405e:	781b      	ldrb	r3, [r3, #0]
 8004060:	2b00      	cmp	r3, #0
 8004062:	d00d      	beq.n	8004080 <responseUART+0x6b0>
 8004064:	2b01      	cmp	r3, #1
 8004066:	d13c      	bne.n	80040e2 <responseUART+0x712>
		case 0:
			break;
		case 1:
			NFenable = 0;
 8004068:	4b2b      	ldr	r3, [pc, #172]	; (8004118 <responseUART+0x748>)
 800406a:	2200      	movs	r2, #0
 800406c:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 800406e:	2202      	movs	r2, #2
 8004070:	492a      	ldr	r1, [pc, #168]	; (800411c <responseUART+0x74c>)
 8004072:	4827      	ldr	r0, [pc, #156]	; (8004110 <responseUART+0x740>)
 8004074:	f006 fa6e 	bl	800a554 <HAL_UART_Transmit_DMA>
			TxState = 0;
 8004078:	4b24      	ldr	r3, [pc, #144]	; (800410c <responseUART+0x73c>)
 800407a:	2200      	movs	r2, #0
 800407c:	701a      	strb	r2, [r3, #0]
			break;
 800407e:	e000      	b.n	8004082 <responseUART+0x6b2>
			break;
 8004080:	bf00      	nop
		}
		break;
 8004082:	e02e      	b.n	80040e2 <responseUART+0x712>

	case 14:	// <<<< 95% COMPLETE >>>>
		// Set home
		switch(TxState){
 8004084:	4b21      	ldr	r3, [pc, #132]	; (800410c <responseUART+0x73c>)
 8004086:	781b      	ldrb	r3, [r3, #0]
 8004088:	2b00      	cmp	r3, #0
 800408a:	d010      	beq.n	80040ae <responseUART+0x6de>
 800408c:	2b01      	cmp	r3, #1
 800408e:	d12a      	bne.n	80040e6 <responseUART+0x716>
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8004090:	2202      	movs	r2, #2
 8004092:	4922      	ldr	r1, [pc, #136]	; (800411c <responseUART+0x74c>)
 8004094:	481e      	ldr	r0, [pc, #120]	; (8004110 <responseUART+0x740>)
 8004096:	f006 fa5d 	bl	800a554 <HAL_UART_Transmit_DMA>
			setzero = 1;
 800409a:	4b21      	ldr	r3, [pc, #132]	; (8004120 <responseUART+0x750>)
 800409c:	2201      	movs	r2, #1
 800409e:	701a      	strb	r2, [r3, #0]
			movingFlag = 14;
 80040a0:	4b20      	ldr	r3, [pc, #128]	; (8004124 <responseUART+0x754>)
 80040a2:	220e      	movs	r2, #14
 80040a4:	701a      	strb	r2, [r3, #0]
			TxState = 0;
 80040a6:	4b19      	ldr	r3, [pc, #100]	; (800410c <responseUART+0x73c>)
 80040a8:	2200      	movs	r2, #0
 80040aa:	701a      	strb	r2, [r3, #0]
			//timeStamp = HAL_GetTick();								// Optional
			break;
 80040ac:	e000      	b.n	80040b0 <responseUART+0x6e0>
			break;
 80040ae:	bf00      	nop
		}
		break;
 80040b0:	e019      	b.n	80040e6 <responseUART+0x716>
		break;
 80040b2:	bf00      	nop
 80040b4:	e018      	b.n	80040e8 <responseUART+0x718>
		break;
 80040b6:	bf00      	nop
 80040b8:	e016      	b.n	80040e8 <responseUART+0x718>
		break;
 80040ba:	bf00      	nop
 80040bc:	e014      	b.n	80040e8 <responseUART+0x718>
		break;
 80040be:	bf00      	nop
 80040c0:	e012      	b.n	80040e8 <responseUART+0x718>
		break;
 80040c2:	bf00      	nop
 80040c4:	e010      	b.n	80040e8 <responseUART+0x718>
		break;
 80040c6:	bf00      	nop
 80040c8:	e00e      	b.n	80040e8 <responseUART+0x718>
		break;
 80040ca:	bf00      	nop
 80040cc:	e00c      	b.n	80040e8 <responseUART+0x718>
		break;
 80040ce:	bf00      	nop
 80040d0:	e00a      	b.n	80040e8 <responseUART+0x718>
		break;
 80040d2:	bf00      	nop
 80040d4:	e008      	b.n	80040e8 <responseUART+0x718>
		break;
 80040d6:	bf00      	nop
 80040d8:	e006      	b.n	80040e8 <responseUART+0x718>
		break;
 80040da:	bf00      	nop
 80040dc:	e004      	b.n	80040e8 <responseUART+0x718>
		break;
 80040de:	bf00      	nop
 80040e0:	e002      	b.n	80040e8 <responseUART+0x718>
		break;
 80040e2:	bf00      	nop
 80040e4:	e000      	b.n	80040e8 <responseUART+0x718>
		break;
 80040e6:	bf00      	nop
	}
}
 80040e8:	bf00      	nop
 80040ea:	370c      	adds	r7, #12
 80040ec:	46bd      	mov	sp, r7
 80040ee:	bd90      	pop	{r4, r7, pc}
 80040f0:	d97f62b7 	.word	0xd97f62b7
 80040f4:	4023193d 	.word	0x4023193d
 80040f8:	20000550 	.word	0x20000550
 80040fc:	200005b0 	.word	0x200005b0
 8004100:	437f0000 	.word	0x437f0000
 8004104:	40240000 	.word	0x40240000
 8004108:	2000054a 	.word	0x2000054a
 800410c:	20000549 	.word	0x20000549
 8004110:	200003c0 	.word	0x200003c0
 8004114:	20000567 	.word	0x20000567
 8004118:	20000021 	.word	0x20000021
 800411c:	20000018 	.word	0x20000018
 8004120:	2000059c 	.word	0x2000059c
 8004124:	2000053c 	.word	0x2000053c

08004128 <tranStation>:

uint16_t tranStation(uint8_t num){
 8004128:	b480      	push	{r7}
 800412a:	b083      	sub	sp, #12
 800412c:	af00      	add	r7, sp, #0
 800412e:	4603      	mov	r3, r0
 8004130:	71fb      	strb	r3, [r7, #7]
	switch(num){
 8004132:	79fb      	ldrb	r3, [r7, #7]
 8004134:	3b01      	subs	r3, #1
 8004136:	2b09      	cmp	r3, #9
 8004138:	d82b      	bhi.n	8004192 <tranStation+0x6a>
 800413a:	a201      	add	r2, pc, #4	; (adr r2, 8004140 <tranStation+0x18>)
 800413c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004140:	08004169 	.word	0x08004169
 8004144:	0800416d 	.word	0x0800416d
 8004148:	08004171 	.word	0x08004171
 800414c:	08004177 	.word	0x08004177
 8004150:	0800417b 	.word	0x0800417b
 8004154:	0800417f 	.word	0x0800417f
 8004158:	08004183 	.word	0x08004183
 800415c:	08004187 	.word	0x08004187
 8004160:	0800418b 	.word	0x0800418b
 8004164:	0800418f 	.word	0x0800418f
	case 1:
		return 90;
 8004168:	235a      	movs	r3, #90	; 0x5a
 800416a:	e012      	b.n	8004192 <tranStation+0x6a>
		break;
	case 2:
		return 180;
 800416c:	23b4      	movs	r3, #180	; 0xb4
 800416e:	e010      	b.n	8004192 <tranStation+0x6a>
		break;
	case 3:
		return 270;
 8004170:	f44f 7387 	mov.w	r3, #270	; 0x10e
 8004174:	e00d      	b.n	8004192 <tranStation+0x6a>
		break;
	case 4:
		return 0;
 8004176:	2300      	movs	r3, #0
 8004178:	e00b      	b.n	8004192 <tranStation+0x6a>
		break;
	case 5:
		return 180;
 800417a:	23b4      	movs	r3, #180	; 0xb4
 800417c:	e009      	b.n	8004192 <tranStation+0x6a>
		break;
	case 6:
		return 210;
 800417e:	23d2      	movs	r3, #210	; 0xd2
 8004180:	e007      	b.n	8004192 <tranStation+0x6a>
		break;
	case 7:
		return 250;
 8004182:	23fa      	movs	r3, #250	; 0xfa
 8004184:	e005      	b.n	8004192 <tranStation+0x6a>
		break;
	case 8:
		return 180;
 8004186:	23b4      	movs	r3, #180	; 0xb4
 8004188:	e003      	b.n	8004192 <tranStation+0x6a>
		break;
	case 9:
		return 90;
 800418a:	235a      	movs	r3, #90	; 0x5a
 800418c:	e001      	b.n	8004192 <tranStation+0x6a>
		break;
	case 10:
		return 0;
 800418e:	2300      	movs	r3, #0
 8004190:	e7ff      	b.n	8004192 <tranStation+0x6a>
		break;
	}
}
 8004192:	4618      	mov	r0, r3
 8004194:	370c      	adds	r7, #12
 8004196:	46bd      	mov	sp, r7
 8004198:	f85d 7b04 	ldr.w	r7, [sp], #4
 800419c:	4770      	bx	lr
 800419e:	bf00      	nop

080041a0 <destinationACK>:

void destinationACK(){
 80041a0:	b580      	push	{r7, lr}
 80041a2:	af00      	add	r7, sp, #0
	if(movingFlag != 0 && Reached ){
 80041a4:	4b0d      	ldr	r3, [pc, #52]	; (80041dc <destinationACK+0x3c>)
 80041a6:	781b      	ldrb	r3, [r3, #0]
 80041a8:	2b00      	cmp	r3, #0
 80041aa:	d015      	beq.n	80041d8 <destinationACK+0x38>
 80041ac:	4b0c      	ldr	r3, [pc, #48]	; (80041e0 <destinationACK+0x40>)
 80041ae:	781b      	ldrb	r3, [r3, #0]
 80041b0:	2b00      	cmp	r3, #0
 80041b2:	d011      	beq.n	80041d8 <destinationACK+0x38>
		//((HAL_GetTick()-timeStamp > 10000) || Reached)
	    switch(movingFlag){
 80041b4:	4b09      	ldr	r3, [pc, #36]	; (80041dc <destinationACK+0x3c>)
 80041b6:	781b      	ldrb	r3, [r3, #0]
 80041b8:	2b08      	cmp	r3, #8
 80041ba:	d001      	beq.n	80041c0 <destinationACK+0x20>
 80041bc:	2b0e      	cmp	r3, #14
	    case 8:
		  HAL_UART_Transmit_DMA(&huart2, ACK2, 2);
		  break;
	    case 14:
//	    	HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
		  break;
 80041be:	e005      	b.n	80041cc <destinationACK+0x2c>
		  HAL_UART_Transmit_DMA(&huart2, ACK2, 2);
 80041c0:	2202      	movs	r2, #2
 80041c2:	4908      	ldr	r1, [pc, #32]	; (80041e4 <destinationACK+0x44>)
 80041c4:	4808      	ldr	r0, [pc, #32]	; (80041e8 <destinationACK+0x48>)
 80041c6:	f006 f9c5 	bl	800a554 <HAL_UART_Transmit_DMA>
		  break;
 80041ca:	bf00      	nop
	    }
	    movingFlag = 0;
 80041cc:	4b03      	ldr	r3, [pc, #12]	; (80041dc <destinationACK+0x3c>)
 80041ce:	2200      	movs	r2, #0
 80041d0:	701a      	strb	r2, [r3, #0]
	    Reached = 0;
 80041d2:	4b03      	ldr	r3, [pc, #12]	; (80041e0 <destinationACK+0x40>)
 80041d4:	2200      	movs	r2, #0
 80041d6:	701a      	strb	r2, [r3, #0]
  }
}
 80041d8:	bf00      	nop
 80041da:	bd80      	pop	{r7, pc}
 80041dc:	2000053c 	.word	0x2000053c
 80041e0:	2000053b 	.word	0x2000053b
 80041e4:	2000001c 	.word	0x2000001c
 80041e8:	200003c0 	.word	0x200003c0

080041ec <frameConfig>:

uint8_t frameConfig(uint8_t mode){
 80041ec:	b480      	push	{r7}
 80041ee:	b083      	sub	sp, #12
 80041f0:	af00      	add	r7, sp, #0
 80041f2:	4603      	mov	r3, r0
 80041f4:	71fb      	strb	r3, [r7, #7]
	if(mode == 2 || mode == 3 || mode == 8 || mode == 9 || mode == 10 || mode == 11 || mode == 12 || mode == 13 || mode == 14){
 80041f6:	79fb      	ldrb	r3, [r7, #7]
 80041f8:	2b02      	cmp	r3, #2
 80041fa:	d017      	beq.n	800422c <frameConfig+0x40>
 80041fc:	79fb      	ldrb	r3, [r7, #7]
 80041fe:	2b03      	cmp	r3, #3
 8004200:	d014      	beq.n	800422c <frameConfig+0x40>
 8004202:	79fb      	ldrb	r3, [r7, #7]
 8004204:	2b08      	cmp	r3, #8
 8004206:	d011      	beq.n	800422c <frameConfig+0x40>
 8004208:	79fb      	ldrb	r3, [r7, #7]
 800420a:	2b09      	cmp	r3, #9
 800420c:	d00e      	beq.n	800422c <frameConfig+0x40>
 800420e:	79fb      	ldrb	r3, [r7, #7]
 8004210:	2b0a      	cmp	r3, #10
 8004212:	d00b      	beq.n	800422c <frameConfig+0x40>
 8004214:	79fb      	ldrb	r3, [r7, #7]
 8004216:	2b0b      	cmp	r3, #11
 8004218:	d008      	beq.n	800422c <frameConfig+0x40>
 800421a:	79fb      	ldrb	r3, [r7, #7]
 800421c:	2b0c      	cmp	r3, #12
 800421e:	d005      	beq.n	800422c <frameConfig+0x40>
 8004220:	79fb      	ldrb	r3, [r7, #7]
 8004222:	2b0d      	cmp	r3, #13
 8004224:	d002      	beq.n	800422c <frameConfig+0x40>
 8004226:	79fb      	ldrb	r3, [r7, #7]
 8004228:	2b0e      	cmp	r3, #14
 800422a:	d101      	bne.n	8004230 <frameConfig+0x44>
		return 1;
 800422c:	2301      	movs	r3, #1
 800422e:	e013      	b.n	8004258 <frameConfig+0x6c>
	}
	else if(mode == 1 || mode == 4 || mode == 5 ||  mode == 6){
 8004230:	79fb      	ldrb	r3, [r7, #7]
 8004232:	2b01      	cmp	r3, #1
 8004234:	d008      	beq.n	8004248 <frameConfig+0x5c>
 8004236:	79fb      	ldrb	r3, [r7, #7]
 8004238:	2b04      	cmp	r3, #4
 800423a:	d005      	beq.n	8004248 <frameConfig+0x5c>
 800423c:	79fb      	ldrb	r3, [r7, #7]
 800423e:	2b05      	cmp	r3, #5
 8004240:	d002      	beq.n	8004248 <frameConfig+0x5c>
 8004242:	79fb      	ldrb	r3, [r7, #7]
 8004244:	2b06      	cmp	r3, #6
 8004246:	d101      	bne.n	800424c <frameConfig+0x60>
		return 3;
 8004248:	2303      	movs	r3, #3
 800424a:	e005      	b.n	8004258 <frameConfig+0x6c>
	}
	else if(mode == 7){
 800424c:	79fb      	ldrb	r3, [r7, #7]
 800424e:	2b07      	cmp	r3, #7
 8004250:	d101      	bne.n	8004256 <frameConfig+0x6a>
		return 1;									// Keep the number of byte first. (nStation)
 8004252:	2301      	movs	r3, #1
 8004254:	e000      	b.n	8004258 <frameConfig+0x6c>
	}
	return 0;
 8004256:	2300      	movs	r3, #0
}
 8004258:	4618      	mov	r0, r3
 800425a:	370c      	adds	r7, #12
 800425c:	46bd      	mov	sp, r7
 800425e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004262:	4770      	bx	lr

08004264 <checkSum>:

uint8_t checkSum(uint8_t var){
 8004264:	b480      	push	{r7}
 8004266:	b083      	sub	sp, #12
 8004268:	af00      	add	r7, sp, #0
 800426a:	4603      	mov	r3, r0
 800426c:	71fb      	strb	r3, [r7, #7]
	//cSum = (~(var%256))%256;						// Spectrator variable
	return (~(var%256))%256;
 800426e:	79fb      	ldrb	r3, [r7, #7]
 8004270:	43db      	mvns	r3, r3
 8004272:	425a      	negs	r2, r3
 8004274:	b2db      	uxtb	r3, r3
 8004276:	b2d2      	uxtb	r2, r2
 8004278:	bf58      	it	pl
 800427a:	4253      	negpl	r3, r2
 800427c:	b2db      	uxtb	r3, r3
}
 800427e:	4618      	mov	r0, r3
 8004280:	370c      	adds	r7, #12
 8004282:	46bd      	mov	sp, r7
 8004284:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004288:	4770      	bx	lr

0800428a <frameSum>:

uint8_t frameSum(uint8_t *frame, uint8_t num){
 800428a:	b480      	push	{r7}
 800428c:	b085      	sub	sp, #20
 800428e:	af00      	add	r7, sp, #0
 8004290:	6078      	str	r0, [r7, #4]
 8004292:	460b      	mov	r3, r1
 8004294:	70fb      	strb	r3, [r7, #3]
	uint8_t var = 0;
 8004296:	2300      	movs	r3, #0
 8004298:	73fb      	strb	r3, [r7, #15]
	for( int i=0; i<num; i+=1){
 800429a:	2300      	movs	r3, #0
 800429c:	60bb      	str	r3, [r7, #8]
 800429e:	e009      	b.n	80042b4 <frameSum+0x2a>
		var += frame[i];							// Sum all the bits in buffer.
 80042a0:	68bb      	ldr	r3, [r7, #8]
 80042a2:	687a      	ldr	r2, [r7, #4]
 80042a4:	4413      	add	r3, r2
 80042a6:	781a      	ldrb	r2, [r3, #0]
 80042a8:	7bfb      	ldrb	r3, [r7, #15]
 80042aa:	4413      	add	r3, r2
 80042ac:	73fb      	strb	r3, [r7, #15]
	for( int i=0; i<num; i+=1){
 80042ae:	68bb      	ldr	r3, [r7, #8]
 80042b0:	3301      	adds	r3, #1
 80042b2:	60bb      	str	r3, [r7, #8]
 80042b4:	78fb      	ldrb	r3, [r7, #3]
 80042b6:	68ba      	ldr	r2, [r7, #8]
 80042b8:	429a      	cmp	r2, r3
 80042ba:	dbf1      	blt.n	80042a0 <frameSum+0x16>
	}
	return var;
 80042bc:	7bfb      	ldrb	r3, [r7, #15]
}
 80042be:	4618      	mov	r0, r3
 80042c0:	3714      	adds	r7, #20
 80042c2:	46bd      	mov	sp, r7
 80042c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042c8:	4770      	bx	lr
	...

080042cc <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 80042cc:	b580      	push	{r7, lr}
 80042ce:	b082      	sub	sp, #8
 80042d0:	af00      	add	r7, sp, #0
 80042d2:	6078      	str	r0, [r7, #4]
	//RxComplete = 1;
	callUART();
 80042d4:	f7ff fa30 	bl	8003738 <callUART>
	HAL_UART_Receive_DMA(&huart2, Receive, nbyte);
 80042d8:	4b05      	ldr	r3, [pc, #20]	; (80042f0 <HAL_UART_RxCpltCallback+0x24>)
 80042da:	781b      	ldrb	r3, [r3, #0]
 80042dc:	b29b      	uxth	r3, r3
 80042de:	461a      	mov	r2, r3
 80042e0:	4904      	ldr	r1, [pc, #16]	; (80042f4 <HAL_UART_RxCpltCallback+0x28>)
 80042e2:	4805      	ldr	r0, [pc, #20]	; (80042f8 <HAL_UART_RxCpltCallback+0x2c>)
 80042e4:	f006 f9b4 	bl	800a650 <HAL_UART_Receive_DMA>
}
 80042e8:	bf00      	nop
 80042ea:	3708      	adds	r7, #8
 80042ec:	46bd      	mov	sp, r7
 80042ee:	bd80      	pop	{r7, pc}
 80042f0:	2000001e 	.word	0x2000001e
 80042f4:	20000554 	.word	0x20000554
 80042f8:	200003c0 	.word	0x200003c0

080042fc <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80042fc:	b480      	push	{r7}
 80042fe:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8004300:	b672      	cpsid	i
}
 8004302:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8004304:	e7fe      	b.n	8004304 <Error_Handler+0x8>
	...

08004308 <HAL_MspInit>:
 8004308:	b580      	push	{r7, lr}
 800430a:	b082      	sub	sp, #8
 800430c:	af00      	add	r7, sp, #0
 800430e:	2300      	movs	r3, #0
 8004310:	607b      	str	r3, [r7, #4]
 8004312:	4b10      	ldr	r3, [pc, #64]	; (8004354 <HAL_MspInit+0x4c>)
 8004314:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004316:	4a0f      	ldr	r2, [pc, #60]	; (8004354 <HAL_MspInit+0x4c>)
 8004318:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800431c:	6453      	str	r3, [r2, #68]	; 0x44
 800431e:	4b0d      	ldr	r3, [pc, #52]	; (8004354 <HAL_MspInit+0x4c>)
 8004320:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004322:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004326:	607b      	str	r3, [r7, #4]
 8004328:	687b      	ldr	r3, [r7, #4]
 800432a:	2300      	movs	r3, #0
 800432c:	603b      	str	r3, [r7, #0]
 800432e:	4b09      	ldr	r3, [pc, #36]	; (8004354 <HAL_MspInit+0x4c>)
 8004330:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004332:	4a08      	ldr	r2, [pc, #32]	; (8004354 <HAL_MspInit+0x4c>)
 8004334:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004338:	6413      	str	r3, [r2, #64]	; 0x40
 800433a:	4b06      	ldr	r3, [pc, #24]	; (8004354 <HAL_MspInit+0x4c>)
 800433c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800433e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8004342:	603b      	str	r3, [r7, #0]
 8004344:	683b      	ldr	r3, [r7, #0]
 8004346:	2007      	movs	r0, #7
 8004348:	f000 fc60 	bl	8004c0c <HAL_NVIC_SetPriorityGrouping>
 800434c:	bf00      	nop
 800434e:	3708      	adds	r7, #8
 8004350:	46bd      	mov	sp, r7
 8004352:	bd80      	pop	{r7, pc}
 8004354:	40023800 	.word	0x40023800

08004358 <HAL_I2C_MspInit>:
 8004358:	b580      	push	{r7, lr}
 800435a:	b08a      	sub	sp, #40	; 0x28
 800435c:	af00      	add	r7, sp, #0
 800435e:	6078      	str	r0, [r7, #4]
 8004360:	f107 0314 	add.w	r3, r7, #20
 8004364:	2200      	movs	r2, #0
 8004366:	601a      	str	r2, [r3, #0]
 8004368:	605a      	str	r2, [r3, #4]
 800436a:	609a      	str	r2, [r3, #8]
 800436c:	60da      	str	r2, [r3, #12]
 800436e:	611a      	str	r2, [r3, #16]
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	681b      	ldr	r3, [r3, #0]
 8004374:	4a21      	ldr	r2, [pc, #132]	; (80043fc <HAL_I2C_MspInit+0xa4>)
 8004376:	4293      	cmp	r3, r2
 8004378:	d13c      	bne.n	80043f4 <HAL_I2C_MspInit+0x9c>
 800437a:	2300      	movs	r3, #0
 800437c:	613b      	str	r3, [r7, #16]
 800437e:	4b20      	ldr	r3, [pc, #128]	; (8004400 <HAL_I2C_MspInit+0xa8>)
 8004380:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004382:	4a1f      	ldr	r2, [pc, #124]	; (8004400 <HAL_I2C_MspInit+0xa8>)
 8004384:	f043 0302 	orr.w	r3, r3, #2
 8004388:	6313      	str	r3, [r2, #48]	; 0x30
 800438a:	4b1d      	ldr	r3, [pc, #116]	; (8004400 <HAL_I2C_MspInit+0xa8>)
 800438c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800438e:	f003 0302 	and.w	r3, r3, #2
 8004392:	613b      	str	r3, [r7, #16]
 8004394:	693b      	ldr	r3, [r7, #16]
 8004396:	f44f 7340 	mov.w	r3, #768	; 0x300
 800439a:	617b      	str	r3, [r7, #20]
 800439c:	2312      	movs	r3, #18
 800439e:	61bb      	str	r3, [r7, #24]
 80043a0:	2300      	movs	r3, #0
 80043a2:	61fb      	str	r3, [r7, #28]
 80043a4:	2303      	movs	r3, #3
 80043a6:	623b      	str	r3, [r7, #32]
 80043a8:	2304      	movs	r3, #4
 80043aa:	627b      	str	r3, [r7, #36]	; 0x24
 80043ac:	f107 0314 	add.w	r3, r7, #20
 80043b0:	4619      	mov	r1, r3
 80043b2:	4814      	ldr	r0, [pc, #80]	; (8004404 <HAL_I2C_MspInit+0xac>)
 80043b4:	f001 f87c 	bl	80054b0 <HAL_GPIO_Init>
 80043b8:	2300      	movs	r3, #0
 80043ba:	60fb      	str	r3, [r7, #12]
 80043bc:	4b10      	ldr	r3, [pc, #64]	; (8004400 <HAL_I2C_MspInit+0xa8>)
 80043be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043c0:	4a0f      	ldr	r2, [pc, #60]	; (8004400 <HAL_I2C_MspInit+0xa8>)
 80043c2:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80043c6:	6413      	str	r3, [r2, #64]	; 0x40
 80043c8:	4b0d      	ldr	r3, [pc, #52]	; (8004400 <HAL_I2C_MspInit+0xa8>)
 80043ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043cc:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80043d0:	60fb      	str	r3, [r7, #12]
 80043d2:	68fb      	ldr	r3, [r7, #12]
 80043d4:	2200      	movs	r2, #0
 80043d6:	2100      	movs	r1, #0
 80043d8:	201f      	movs	r0, #31
 80043da:	f000 fc22 	bl	8004c22 <HAL_NVIC_SetPriority>
 80043de:	201f      	movs	r0, #31
 80043e0:	f000 fc3b 	bl	8004c5a <HAL_NVIC_EnableIRQ>
 80043e4:	2200      	movs	r2, #0
 80043e6:	2100      	movs	r1, #0
 80043e8:	2020      	movs	r0, #32
 80043ea:	f000 fc1a 	bl	8004c22 <HAL_NVIC_SetPriority>
 80043ee:	2020      	movs	r0, #32
 80043f0:	f000 fc33 	bl	8004c5a <HAL_NVIC_EnableIRQ>
 80043f4:	bf00      	nop
 80043f6:	3728      	adds	r7, #40	; 0x28
 80043f8:	46bd      	mov	sp, r7
 80043fa:	bd80      	pop	{r7, pc}
 80043fc:	40005400 	.word	0x40005400
 8004400:	40023800 	.word	0x40023800
 8004404:	40020400 	.word	0x40020400

08004408 <HAL_SPI_MspInit>:
 8004408:	b580      	push	{r7, lr}
 800440a:	b08a      	sub	sp, #40	; 0x28
 800440c:	af00      	add	r7, sp, #0
 800440e:	6078      	str	r0, [r7, #4]
 8004410:	f107 0314 	add.w	r3, r7, #20
 8004414:	2200      	movs	r2, #0
 8004416:	601a      	str	r2, [r3, #0]
 8004418:	605a      	str	r2, [r3, #4]
 800441a:	609a      	str	r2, [r3, #8]
 800441c:	60da      	str	r2, [r3, #12]
 800441e:	611a      	str	r2, [r3, #16]
 8004420:	687b      	ldr	r3, [r7, #4]
 8004422:	681b      	ldr	r3, [r3, #0]
 8004424:	4a4b      	ldr	r2, [pc, #300]	; (8004554 <HAL_SPI_MspInit+0x14c>)
 8004426:	4293      	cmp	r3, r2
 8004428:	f040 8090 	bne.w	800454c <HAL_SPI_MspInit+0x144>
 800442c:	2300      	movs	r3, #0
 800442e:	613b      	str	r3, [r7, #16]
 8004430:	4b49      	ldr	r3, [pc, #292]	; (8004558 <HAL_SPI_MspInit+0x150>)
 8004432:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004434:	4a48      	ldr	r2, [pc, #288]	; (8004558 <HAL_SPI_MspInit+0x150>)
 8004436:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800443a:	6413      	str	r3, [r2, #64]	; 0x40
 800443c:	4b46      	ldr	r3, [pc, #280]	; (8004558 <HAL_SPI_MspInit+0x150>)
 800443e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004440:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8004444:	613b      	str	r3, [r7, #16]
 8004446:	693b      	ldr	r3, [r7, #16]
 8004448:	2300      	movs	r3, #0
 800444a:	60fb      	str	r3, [r7, #12]
 800444c:	4b42      	ldr	r3, [pc, #264]	; (8004558 <HAL_SPI_MspInit+0x150>)
 800444e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004450:	4a41      	ldr	r2, [pc, #260]	; (8004558 <HAL_SPI_MspInit+0x150>)
 8004452:	f043 0302 	orr.w	r3, r3, #2
 8004456:	6313      	str	r3, [r2, #48]	; 0x30
 8004458:	4b3f      	ldr	r3, [pc, #252]	; (8004558 <HAL_SPI_MspInit+0x150>)
 800445a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800445c:	f003 0302 	and.w	r3, r3, #2
 8004460:	60fb      	str	r3, [r7, #12]
 8004462:	68fb      	ldr	r3, [r7, #12]
 8004464:	2338      	movs	r3, #56	; 0x38
 8004466:	617b      	str	r3, [r7, #20]
 8004468:	2302      	movs	r3, #2
 800446a:	61bb      	str	r3, [r7, #24]
 800446c:	2300      	movs	r3, #0
 800446e:	61fb      	str	r3, [r7, #28]
 8004470:	2303      	movs	r3, #3
 8004472:	623b      	str	r3, [r7, #32]
 8004474:	2306      	movs	r3, #6
 8004476:	627b      	str	r3, [r7, #36]	; 0x24
 8004478:	f107 0314 	add.w	r3, r7, #20
 800447c:	4619      	mov	r1, r3
 800447e:	4837      	ldr	r0, [pc, #220]	; (800455c <HAL_SPI_MspInit+0x154>)
 8004480:	f001 f816 	bl	80054b0 <HAL_GPIO_Init>
 8004484:	4b36      	ldr	r3, [pc, #216]	; (8004560 <HAL_SPI_MspInit+0x158>)
 8004486:	4a37      	ldr	r2, [pc, #220]	; (8004564 <HAL_SPI_MspInit+0x15c>)
 8004488:	601a      	str	r2, [r3, #0]
 800448a:	4b35      	ldr	r3, [pc, #212]	; (8004560 <HAL_SPI_MspInit+0x158>)
 800448c:	2200      	movs	r2, #0
 800448e:	605a      	str	r2, [r3, #4]
 8004490:	4b33      	ldr	r3, [pc, #204]	; (8004560 <HAL_SPI_MspInit+0x158>)
 8004492:	2200      	movs	r2, #0
 8004494:	609a      	str	r2, [r3, #8]
 8004496:	4b32      	ldr	r3, [pc, #200]	; (8004560 <HAL_SPI_MspInit+0x158>)
 8004498:	2200      	movs	r2, #0
 800449a:	60da      	str	r2, [r3, #12]
 800449c:	4b30      	ldr	r3, [pc, #192]	; (8004560 <HAL_SPI_MspInit+0x158>)
 800449e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80044a2:	611a      	str	r2, [r3, #16]
 80044a4:	4b2e      	ldr	r3, [pc, #184]	; (8004560 <HAL_SPI_MspInit+0x158>)
 80044a6:	2200      	movs	r2, #0
 80044a8:	615a      	str	r2, [r3, #20]
 80044aa:	4b2d      	ldr	r3, [pc, #180]	; (8004560 <HAL_SPI_MspInit+0x158>)
 80044ac:	2200      	movs	r2, #0
 80044ae:	619a      	str	r2, [r3, #24]
 80044b0:	4b2b      	ldr	r3, [pc, #172]	; (8004560 <HAL_SPI_MspInit+0x158>)
 80044b2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80044b6:	61da      	str	r2, [r3, #28]
 80044b8:	4b29      	ldr	r3, [pc, #164]	; (8004560 <HAL_SPI_MspInit+0x158>)
 80044ba:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80044be:	621a      	str	r2, [r3, #32]
 80044c0:	4b27      	ldr	r3, [pc, #156]	; (8004560 <HAL_SPI_MspInit+0x158>)
 80044c2:	2200      	movs	r2, #0
 80044c4:	625a      	str	r2, [r3, #36]	; 0x24
 80044c6:	4826      	ldr	r0, [pc, #152]	; (8004560 <HAL_SPI_MspInit+0x158>)
 80044c8:	f000 fbe2 	bl	8004c90 <HAL_DMA_Init>
 80044cc:	4603      	mov	r3, r0
 80044ce:	2b00      	cmp	r3, #0
 80044d0:	d001      	beq.n	80044d6 <HAL_SPI_MspInit+0xce>
 80044d2:	f7ff ff13 	bl	80042fc <Error_Handler>
 80044d6:	687b      	ldr	r3, [r7, #4]
 80044d8:	4a21      	ldr	r2, [pc, #132]	; (8004560 <HAL_SPI_MspInit+0x158>)
 80044da:	64da      	str	r2, [r3, #76]	; 0x4c
 80044dc:	4a20      	ldr	r2, [pc, #128]	; (8004560 <HAL_SPI_MspInit+0x158>)
 80044de:	687b      	ldr	r3, [r7, #4]
 80044e0:	6393      	str	r3, [r2, #56]	; 0x38
 80044e2:	4b21      	ldr	r3, [pc, #132]	; (8004568 <HAL_SPI_MspInit+0x160>)
 80044e4:	4a21      	ldr	r2, [pc, #132]	; (800456c <HAL_SPI_MspInit+0x164>)
 80044e6:	601a      	str	r2, [r3, #0]
 80044e8:	4b1f      	ldr	r3, [pc, #124]	; (8004568 <HAL_SPI_MspInit+0x160>)
 80044ea:	2200      	movs	r2, #0
 80044ec:	605a      	str	r2, [r3, #4]
 80044ee:	4b1e      	ldr	r3, [pc, #120]	; (8004568 <HAL_SPI_MspInit+0x160>)
 80044f0:	2240      	movs	r2, #64	; 0x40
 80044f2:	609a      	str	r2, [r3, #8]
 80044f4:	4b1c      	ldr	r3, [pc, #112]	; (8004568 <HAL_SPI_MspInit+0x160>)
 80044f6:	2200      	movs	r2, #0
 80044f8:	60da      	str	r2, [r3, #12]
 80044fa:	4b1b      	ldr	r3, [pc, #108]	; (8004568 <HAL_SPI_MspInit+0x160>)
 80044fc:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004500:	611a      	str	r2, [r3, #16]
 8004502:	4b19      	ldr	r3, [pc, #100]	; (8004568 <HAL_SPI_MspInit+0x160>)
 8004504:	2200      	movs	r2, #0
 8004506:	615a      	str	r2, [r3, #20]
 8004508:	4b17      	ldr	r3, [pc, #92]	; (8004568 <HAL_SPI_MspInit+0x160>)
 800450a:	2200      	movs	r2, #0
 800450c:	619a      	str	r2, [r3, #24]
 800450e:	4b16      	ldr	r3, [pc, #88]	; (8004568 <HAL_SPI_MspInit+0x160>)
 8004510:	2200      	movs	r2, #0
 8004512:	61da      	str	r2, [r3, #28]
 8004514:	4b14      	ldr	r3, [pc, #80]	; (8004568 <HAL_SPI_MspInit+0x160>)
 8004516:	2200      	movs	r2, #0
 8004518:	621a      	str	r2, [r3, #32]
 800451a:	4b13      	ldr	r3, [pc, #76]	; (8004568 <HAL_SPI_MspInit+0x160>)
 800451c:	2200      	movs	r2, #0
 800451e:	625a      	str	r2, [r3, #36]	; 0x24
 8004520:	4811      	ldr	r0, [pc, #68]	; (8004568 <HAL_SPI_MspInit+0x160>)
 8004522:	f000 fbb5 	bl	8004c90 <HAL_DMA_Init>
 8004526:	4603      	mov	r3, r0
 8004528:	2b00      	cmp	r3, #0
 800452a:	d001      	beq.n	8004530 <HAL_SPI_MspInit+0x128>
 800452c:	f7ff fee6 	bl	80042fc <Error_Handler>
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	4a0d      	ldr	r2, [pc, #52]	; (8004568 <HAL_SPI_MspInit+0x160>)
 8004534:	649a      	str	r2, [r3, #72]	; 0x48
 8004536:	4a0c      	ldr	r2, [pc, #48]	; (8004568 <HAL_SPI_MspInit+0x160>)
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	6393      	str	r3, [r2, #56]	; 0x38
 800453c:	2200      	movs	r2, #0
 800453e:	2100      	movs	r1, #0
 8004540:	2033      	movs	r0, #51	; 0x33
 8004542:	f000 fb6e 	bl	8004c22 <HAL_NVIC_SetPriority>
 8004546:	2033      	movs	r0, #51	; 0x33
 8004548:	f000 fb87 	bl	8004c5a <HAL_NVIC_EnableIRQ>
 800454c:	bf00      	nop
 800454e:	3728      	adds	r7, #40	; 0x28
 8004550:	46bd      	mov	sp, r7
 8004552:	bd80      	pop	{r7, pc}
 8004554:	40003c00 	.word	0x40003c00
 8004558:	40023800 	.word	0x40023800
 800455c:	40020400 	.word	0x40020400
 8004560:	20000270 	.word	0x20000270
 8004564:	40026010 	.word	0x40026010
 8004568:	200002d0 	.word	0x200002d0
 800456c:	400260b8 	.word	0x400260b8

08004570 <HAL_TIM_Base_MspInit>:
 8004570:	b580      	push	{r7, lr}
 8004572:	b084      	sub	sp, #16
 8004574:	af00      	add	r7, sp, #0
 8004576:	6078      	str	r0, [r7, #4]
 8004578:	687b      	ldr	r3, [r7, #4]
 800457a:	681b      	ldr	r3, [r3, #0]
 800457c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004580:	d116      	bne.n	80045b0 <HAL_TIM_Base_MspInit+0x40>
 8004582:	2300      	movs	r3, #0
 8004584:	60fb      	str	r3, [r7, #12]
 8004586:	4b1a      	ldr	r3, [pc, #104]	; (80045f0 <HAL_TIM_Base_MspInit+0x80>)
 8004588:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800458a:	4a19      	ldr	r2, [pc, #100]	; (80045f0 <HAL_TIM_Base_MspInit+0x80>)
 800458c:	f043 0301 	orr.w	r3, r3, #1
 8004590:	6413      	str	r3, [r2, #64]	; 0x40
 8004592:	4b17      	ldr	r3, [pc, #92]	; (80045f0 <HAL_TIM_Base_MspInit+0x80>)
 8004594:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004596:	f003 0301 	and.w	r3, r3, #1
 800459a:	60fb      	str	r3, [r7, #12]
 800459c:	68fb      	ldr	r3, [r7, #12]
 800459e:	2200      	movs	r2, #0
 80045a0:	2100      	movs	r1, #0
 80045a2:	201c      	movs	r0, #28
 80045a4:	f000 fb3d 	bl	8004c22 <HAL_NVIC_SetPriority>
 80045a8:	201c      	movs	r0, #28
 80045aa:	f000 fb56 	bl	8004c5a <HAL_NVIC_EnableIRQ>
 80045ae:	e01a      	b.n	80045e6 <HAL_TIM_Base_MspInit+0x76>
 80045b0:	687b      	ldr	r3, [r7, #4]
 80045b2:	681b      	ldr	r3, [r3, #0]
 80045b4:	4a0f      	ldr	r2, [pc, #60]	; (80045f4 <HAL_TIM_Base_MspInit+0x84>)
 80045b6:	4293      	cmp	r3, r2
 80045b8:	d115      	bne.n	80045e6 <HAL_TIM_Base_MspInit+0x76>
 80045ba:	2300      	movs	r3, #0
 80045bc:	60bb      	str	r3, [r7, #8]
 80045be:	4b0c      	ldr	r3, [pc, #48]	; (80045f0 <HAL_TIM_Base_MspInit+0x80>)
 80045c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80045c2:	4a0b      	ldr	r2, [pc, #44]	; (80045f0 <HAL_TIM_Base_MspInit+0x80>)
 80045c4:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80045c8:	6453      	str	r3, [r2, #68]	; 0x44
 80045ca:	4b09      	ldr	r3, [pc, #36]	; (80045f0 <HAL_TIM_Base_MspInit+0x80>)
 80045cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80045ce:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80045d2:	60bb      	str	r3, [r7, #8]
 80045d4:	68bb      	ldr	r3, [r7, #8]
 80045d6:	2200      	movs	r2, #0
 80045d8:	2100      	movs	r1, #0
 80045da:	201a      	movs	r0, #26
 80045dc:	f000 fb21 	bl	8004c22 <HAL_NVIC_SetPriority>
 80045e0:	201a      	movs	r0, #26
 80045e2:	f000 fb3a 	bl	8004c5a <HAL_NVIC_EnableIRQ>
 80045e6:	bf00      	nop
 80045e8:	3710      	adds	r7, #16
 80045ea:	46bd      	mov	sp, r7
 80045ec:	bd80      	pop	{r7, pc}
 80045ee:	bf00      	nop
 80045f0:	40023800 	.word	0x40023800
 80045f4:	40014800 	.word	0x40014800

080045f8 <HAL_TIM_MspPostInit>:
 80045f8:	b580      	push	{r7, lr}
 80045fa:	b088      	sub	sp, #32
 80045fc:	af00      	add	r7, sp, #0
 80045fe:	6078      	str	r0, [r7, #4]
 8004600:	f107 030c 	add.w	r3, r7, #12
 8004604:	2200      	movs	r2, #0
 8004606:	601a      	str	r2, [r3, #0]
 8004608:	605a      	str	r2, [r3, #4]
 800460a:	609a      	str	r2, [r3, #8]
 800460c:	60da      	str	r2, [r3, #12]
 800460e:	611a      	str	r2, [r3, #16]
 8004610:	687b      	ldr	r3, [r7, #4]
 8004612:	681b      	ldr	r3, [r3, #0]
 8004614:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004618:	d11d      	bne.n	8004656 <HAL_TIM_MspPostInit+0x5e>
 800461a:	2300      	movs	r3, #0
 800461c:	60bb      	str	r3, [r7, #8]
 800461e:	4b10      	ldr	r3, [pc, #64]	; (8004660 <HAL_TIM_MspPostInit+0x68>)
 8004620:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004622:	4a0f      	ldr	r2, [pc, #60]	; (8004660 <HAL_TIM_MspPostInit+0x68>)
 8004624:	f043 0301 	orr.w	r3, r3, #1
 8004628:	6313      	str	r3, [r2, #48]	; 0x30
 800462a:	4b0d      	ldr	r3, [pc, #52]	; (8004660 <HAL_TIM_MspPostInit+0x68>)
 800462c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800462e:	f003 0301 	and.w	r3, r3, #1
 8004632:	60bb      	str	r3, [r7, #8]
 8004634:	68bb      	ldr	r3, [r7, #8]
 8004636:	2303      	movs	r3, #3
 8004638:	60fb      	str	r3, [r7, #12]
 800463a:	2302      	movs	r3, #2
 800463c:	613b      	str	r3, [r7, #16]
 800463e:	2300      	movs	r3, #0
 8004640:	617b      	str	r3, [r7, #20]
 8004642:	2300      	movs	r3, #0
 8004644:	61bb      	str	r3, [r7, #24]
 8004646:	2301      	movs	r3, #1
 8004648:	61fb      	str	r3, [r7, #28]
 800464a:	f107 030c 	add.w	r3, r7, #12
 800464e:	4619      	mov	r1, r3
 8004650:	4804      	ldr	r0, [pc, #16]	; (8004664 <HAL_TIM_MspPostInit+0x6c>)
 8004652:	f000 ff2d 	bl	80054b0 <HAL_GPIO_Init>
 8004656:	bf00      	nop
 8004658:	3720      	adds	r7, #32
 800465a:	46bd      	mov	sp, r7
 800465c:	bd80      	pop	{r7, pc}
 800465e:	bf00      	nop
 8004660:	40023800 	.word	0x40023800
 8004664:	40020000 	.word	0x40020000

08004668 <HAL_UART_MspInit>:
 8004668:	b580      	push	{r7, lr}
 800466a:	b08a      	sub	sp, #40	; 0x28
 800466c:	af00      	add	r7, sp, #0
 800466e:	6078      	str	r0, [r7, #4]
 8004670:	f107 0314 	add.w	r3, r7, #20
 8004674:	2200      	movs	r2, #0
 8004676:	601a      	str	r2, [r3, #0]
 8004678:	605a      	str	r2, [r3, #4]
 800467a:	609a      	str	r2, [r3, #8]
 800467c:	60da      	str	r2, [r3, #12]
 800467e:	611a      	str	r2, [r3, #16]
 8004680:	687b      	ldr	r3, [r7, #4]
 8004682:	681b      	ldr	r3, [r3, #0]
 8004684:	4a4c      	ldr	r2, [pc, #304]	; (80047b8 <HAL_UART_MspInit+0x150>)
 8004686:	4293      	cmp	r3, r2
 8004688:	f040 8092 	bne.w	80047b0 <HAL_UART_MspInit+0x148>
 800468c:	2300      	movs	r3, #0
 800468e:	613b      	str	r3, [r7, #16]
 8004690:	4b4a      	ldr	r3, [pc, #296]	; (80047bc <HAL_UART_MspInit+0x154>)
 8004692:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004694:	4a49      	ldr	r2, [pc, #292]	; (80047bc <HAL_UART_MspInit+0x154>)
 8004696:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800469a:	6413      	str	r3, [r2, #64]	; 0x40
 800469c:	4b47      	ldr	r3, [pc, #284]	; (80047bc <HAL_UART_MspInit+0x154>)
 800469e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80046a0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80046a4:	613b      	str	r3, [r7, #16]
 80046a6:	693b      	ldr	r3, [r7, #16]
 80046a8:	2300      	movs	r3, #0
 80046aa:	60fb      	str	r3, [r7, #12]
 80046ac:	4b43      	ldr	r3, [pc, #268]	; (80047bc <HAL_UART_MspInit+0x154>)
 80046ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80046b0:	4a42      	ldr	r2, [pc, #264]	; (80047bc <HAL_UART_MspInit+0x154>)
 80046b2:	f043 0301 	orr.w	r3, r3, #1
 80046b6:	6313      	str	r3, [r2, #48]	; 0x30
 80046b8:	4b40      	ldr	r3, [pc, #256]	; (80047bc <HAL_UART_MspInit+0x154>)
 80046ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80046bc:	f003 0301 	and.w	r3, r3, #1
 80046c0:	60fb      	str	r3, [r7, #12]
 80046c2:	68fb      	ldr	r3, [r7, #12]
 80046c4:	230c      	movs	r3, #12
 80046c6:	617b      	str	r3, [r7, #20]
 80046c8:	2302      	movs	r3, #2
 80046ca:	61bb      	str	r3, [r7, #24]
 80046cc:	2300      	movs	r3, #0
 80046ce:	61fb      	str	r3, [r7, #28]
 80046d0:	2303      	movs	r3, #3
 80046d2:	623b      	str	r3, [r7, #32]
 80046d4:	2307      	movs	r3, #7
 80046d6:	627b      	str	r3, [r7, #36]	; 0x24
 80046d8:	f107 0314 	add.w	r3, r7, #20
 80046dc:	4619      	mov	r1, r3
 80046de:	4838      	ldr	r0, [pc, #224]	; (80047c0 <HAL_UART_MspInit+0x158>)
 80046e0:	f000 fee6 	bl	80054b0 <HAL_GPIO_Init>
 80046e4:	4b37      	ldr	r3, [pc, #220]	; (80047c4 <HAL_UART_MspInit+0x15c>)
 80046e6:	4a38      	ldr	r2, [pc, #224]	; (80047c8 <HAL_UART_MspInit+0x160>)
 80046e8:	601a      	str	r2, [r3, #0]
 80046ea:	4b36      	ldr	r3, [pc, #216]	; (80047c4 <HAL_UART_MspInit+0x15c>)
 80046ec:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80046f0:	605a      	str	r2, [r3, #4]
 80046f2:	4b34      	ldr	r3, [pc, #208]	; (80047c4 <HAL_UART_MspInit+0x15c>)
 80046f4:	2240      	movs	r2, #64	; 0x40
 80046f6:	609a      	str	r2, [r3, #8]
 80046f8:	4b32      	ldr	r3, [pc, #200]	; (80047c4 <HAL_UART_MspInit+0x15c>)
 80046fa:	2200      	movs	r2, #0
 80046fc:	60da      	str	r2, [r3, #12]
 80046fe:	4b31      	ldr	r3, [pc, #196]	; (80047c4 <HAL_UART_MspInit+0x15c>)
 8004700:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004704:	611a      	str	r2, [r3, #16]
 8004706:	4b2f      	ldr	r3, [pc, #188]	; (80047c4 <HAL_UART_MspInit+0x15c>)
 8004708:	2200      	movs	r2, #0
 800470a:	615a      	str	r2, [r3, #20]
 800470c:	4b2d      	ldr	r3, [pc, #180]	; (80047c4 <HAL_UART_MspInit+0x15c>)
 800470e:	2200      	movs	r2, #0
 8004710:	619a      	str	r2, [r3, #24]
 8004712:	4b2c      	ldr	r3, [pc, #176]	; (80047c4 <HAL_UART_MspInit+0x15c>)
 8004714:	2200      	movs	r2, #0
 8004716:	61da      	str	r2, [r3, #28]
 8004718:	4b2a      	ldr	r3, [pc, #168]	; (80047c4 <HAL_UART_MspInit+0x15c>)
 800471a:	2200      	movs	r2, #0
 800471c:	621a      	str	r2, [r3, #32]
 800471e:	4b29      	ldr	r3, [pc, #164]	; (80047c4 <HAL_UART_MspInit+0x15c>)
 8004720:	2200      	movs	r2, #0
 8004722:	625a      	str	r2, [r3, #36]	; 0x24
 8004724:	4827      	ldr	r0, [pc, #156]	; (80047c4 <HAL_UART_MspInit+0x15c>)
 8004726:	f000 fab3 	bl	8004c90 <HAL_DMA_Init>
 800472a:	4603      	mov	r3, r0
 800472c:	2b00      	cmp	r3, #0
 800472e:	d001      	beq.n	8004734 <HAL_UART_MspInit+0xcc>
 8004730:	f7ff fde4 	bl	80042fc <Error_Handler>
 8004734:	687b      	ldr	r3, [r7, #4]
 8004736:	4a23      	ldr	r2, [pc, #140]	; (80047c4 <HAL_UART_MspInit+0x15c>)
 8004738:	635a      	str	r2, [r3, #52]	; 0x34
 800473a:	4a22      	ldr	r2, [pc, #136]	; (80047c4 <HAL_UART_MspInit+0x15c>)
 800473c:	687b      	ldr	r3, [r7, #4]
 800473e:	6393      	str	r3, [r2, #56]	; 0x38
 8004740:	4b22      	ldr	r3, [pc, #136]	; (80047cc <HAL_UART_MspInit+0x164>)
 8004742:	4a23      	ldr	r2, [pc, #140]	; (80047d0 <HAL_UART_MspInit+0x168>)
 8004744:	601a      	str	r2, [r3, #0]
 8004746:	4b21      	ldr	r3, [pc, #132]	; (80047cc <HAL_UART_MspInit+0x164>)
 8004748:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800474c:	605a      	str	r2, [r3, #4]
 800474e:	4b1f      	ldr	r3, [pc, #124]	; (80047cc <HAL_UART_MspInit+0x164>)
 8004750:	2200      	movs	r2, #0
 8004752:	609a      	str	r2, [r3, #8]
 8004754:	4b1d      	ldr	r3, [pc, #116]	; (80047cc <HAL_UART_MspInit+0x164>)
 8004756:	2200      	movs	r2, #0
 8004758:	60da      	str	r2, [r3, #12]
 800475a:	4b1c      	ldr	r3, [pc, #112]	; (80047cc <HAL_UART_MspInit+0x164>)
 800475c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004760:	611a      	str	r2, [r3, #16]
 8004762:	4b1a      	ldr	r3, [pc, #104]	; (80047cc <HAL_UART_MspInit+0x164>)
 8004764:	2200      	movs	r2, #0
 8004766:	615a      	str	r2, [r3, #20]
 8004768:	4b18      	ldr	r3, [pc, #96]	; (80047cc <HAL_UART_MspInit+0x164>)
 800476a:	2200      	movs	r2, #0
 800476c:	619a      	str	r2, [r3, #24]
 800476e:	4b17      	ldr	r3, [pc, #92]	; (80047cc <HAL_UART_MspInit+0x164>)
 8004770:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004774:	61da      	str	r2, [r3, #28]
 8004776:	4b15      	ldr	r3, [pc, #84]	; (80047cc <HAL_UART_MspInit+0x164>)
 8004778:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 800477c:	621a      	str	r2, [r3, #32]
 800477e:	4b13      	ldr	r3, [pc, #76]	; (80047cc <HAL_UART_MspInit+0x164>)
 8004780:	2200      	movs	r2, #0
 8004782:	625a      	str	r2, [r3, #36]	; 0x24
 8004784:	4811      	ldr	r0, [pc, #68]	; (80047cc <HAL_UART_MspInit+0x164>)
 8004786:	f000 fa83 	bl	8004c90 <HAL_DMA_Init>
 800478a:	4603      	mov	r3, r0
 800478c:	2b00      	cmp	r3, #0
 800478e:	d001      	beq.n	8004794 <HAL_UART_MspInit+0x12c>
 8004790:	f7ff fdb4 	bl	80042fc <Error_Handler>
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	4a0d      	ldr	r2, [pc, #52]	; (80047cc <HAL_UART_MspInit+0x164>)
 8004798:	639a      	str	r2, [r3, #56]	; 0x38
 800479a:	4a0c      	ldr	r2, [pc, #48]	; (80047cc <HAL_UART_MspInit+0x164>)
 800479c:	687b      	ldr	r3, [r7, #4]
 800479e:	6393      	str	r3, [r2, #56]	; 0x38
 80047a0:	2200      	movs	r2, #0
 80047a2:	2100      	movs	r1, #0
 80047a4:	2026      	movs	r0, #38	; 0x26
 80047a6:	f000 fa3c 	bl	8004c22 <HAL_NVIC_SetPriority>
 80047aa:	2026      	movs	r0, #38	; 0x26
 80047ac:	f000 fa55 	bl	8004c5a <HAL_NVIC_EnableIRQ>
 80047b0:	bf00      	nop
 80047b2:	3728      	adds	r7, #40	; 0x28
 80047b4:	46bd      	mov	sp, r7
 80047b6:	bd80      	pop	{r7, pc}
 80047b8:	40004400 	.word	0x40004400
 80047bc:	40023800 	.word	0x40023800
 80047c0:	40020000 	.word	0x40020000
 80047c4:	20000404 	.word	0x20000404
 80047c8:	400260a0 	.word	0x400260a0
 80047cc:	20000464 	.word	0x20000464
 80047d0:	40026088 	.word	0x40026088

080047d4 <NMI_Handler>:
 80047d4:	b480      	push	{r7}
 80047d6:	af00      	add	r7, sp, #0
 80047d8:	e7fe      	b.n	80047d8 <NMI_Handler+0x4>

080047da <HardFault_Handler>:
 80047da:	b480      	push	{r7}
 80047dc:	af00      	add	r7, sp, #0
 80047de:	e7fe      	b.n	80047de <HardFault_Handler+0x4>

080047e0 <MemManage_Handler>:
 80047e0:	b480      	push	{r7}
 80047e2:	af00      	add	r7, sp, #0
 80047e4:	e7fe      	b.n	80047e4 <MemManage_Handler+0x4>

080047e6 <BusFault_Handler>:
 80047e6:	b480      	push	{r7}
 80047e8:	af00      	add	r7, sp, #0
 80047ea:	e7fe      	b.n	80047ea <BusFault_Handler+0x4>

080047ec <UsageFault_Handler>:
 80047ec:	b480      	push	{r7}
 80047ee:	af00      	add	r7, sp, #0
 80047f0:	e7fe      	b.n	80047f0 <UsageFault_Handler+0x4>

080047f2 <SVC_Handler>:
 80047f2:	b480      	push	{r7}
 80047f4:	af00      	add	r7, sp, #0
 80047f6:	bf00      	nop
 80047f8:	46bd      	mov	sp, r7
 80047fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047fe:	4770      	bx	lr

08004800 <DebugMon_Handler>:
 8004800:	b480      	push	{r7}
 8004802:	af00      	add	r7, sp, #0
 8004804:	bf00      	nop
 8004806:	46bd      	mov	sp, r7
 8004808:	f85d 7b04 	ldr.w	r7, [sp], #4
 800480c:	4770      	bx	lr

0800480e <PendSV_Handler>:
 800480e:	b480      	push	{r7}
 8004810:	af00      	add	r7, sp, #0
 8004812:	bf00      	nop
 8004814:	46bd      	mov	sp, r7
 8004816:	f85d 7b04 	ldr.w	r7, [sp], #4
 800481a:	4770      	bx	lr

0800481c <SysTick_Handler>:
 800481c:	b580      	push	{r7, lr}
 800481e:	af00      	add	r7, sp, #0
 8004820:	f000 f904 	bl	8004a2c <HAL_IncTick>
 8004824:	bf00      	nop
 8004826:	bd80      	pop	{r7, pc}

08004828 <DMA1_Stream0_IRQHandler>:
 8004828:	b580      	push	{r7, lr}
 800482a:	af00      	add	r7, sp, #0
 800482c:	4802      	ldr	r0, [pc, #8]	; (8004838 <DMA1_Stream0_IRQHandler+0x10>)
 800482e:	f000 fbc7 	bl	8004fc0 <HAL_DMA_IRQHandler>
 8004832:	bf00      	nop
 8004834:	bd80      	pop	{r7, pc}
 8004836:	bf00      	nop
 8004838:	20000270 	.word	0x20000270

0800483c <DMA1_Stream5_IRQHandler>:
 800483c:	b580      	push	{r7, lr}
 800483e:	af00      	add	r7, sp, #0
 8004840:	4802      	ldr	r0, [pc, #8]	; (800484c <DMA1_Stream5_IRQHandler+0x10>)
 8004842:	f000 fbbd 	bl	8004fc0 <HAL_DMA_IRQHandler>
 8004846:	bf00      	nop
 8004848:	bd80      	pop	{r7, pc}
 800484a:	bf00      	nop
 800484c:	20000464 	.word	0x20000464

08004850 <DMA1_Stream6_IRQHandler>:
 8004850:	b580      	push	{r7, lr}
 8004852:	af00      	add	r7, sp, #0
 8004854:	4802      	ldr	r0, [pc, #8]	; (8004860 <DMA1_Stream6_IRQHandler+0x10>)
 8004856:	f000 fbb3 	bl	8004fc0 <HAL_DMA_IRQHandler>
 800485a:	bf00      	nop
 800485c:	bd80      	pop	{r7, pc}
 800485e:	bf00      	nop
 8004860:	20000404 	.word	0x20000404

08004864 <EXTI9_5_IRQHandler>:
 8004864:	b580      	push	{r7, lr}
 8004866:	af00      	add	r7, sp, #0
 8004868:	f44f 7080 	mov.w	r0, #256	; 0x100
 800486c:	f000 ffd6 	bl	800581c <HAL_GPIO_EXTI_IRQHandler>
 8004870:	bf00      	nop
 8004872:	bd80      	pop	{r7, pc}

08004874 <TIM1_TRG_COM_TIM11_IRQHandler>:
 8004874:	b580      	push	{r7, lr}
 8004876:	af00      	add	r7, sp, #0
 8004878:	4802      	ldr	r0, [pc, #8]	; (8004884 <TIM1_TRG_COM_TIM11_IRQHandler+0x10>)
 800487a:	f005 f815 	bl	80098a8 <HAL_TIM_IRQHandler>
 800487e:	bf00      	nop
 8004880:	bd80      	pop	{r7, pc}
 8004882:	bf00      	nop
 8004884:	20000378 	.word	0x20000378

08004888 <TIM2_IRQHandler>:
 8004888:	b580      	push	{r7, lr}
 800488a:	af00      	add	r7, sp, #0
 800488c:	4802      	ldr	r0, [pc, #8]	; (8004898 <TIM2_IRQHandler+0x10>)
 800488e:	f005 f80b 	bl	80098a8 <HAL_TIM_IRQHandler>
 8004892:	bf00      	nop
 8004894:	bd80      	pop	{r7, pc}
 8004896:	bf00      	nop
 8004898:	20000330 	.word	0x20000330

0800489c <I2C1_EV_IRQHandler>:
 800489c:	b580      	push	{r7, lr}
 800489e:	af00      	add	r7, sp, #0
 80048a0:	4802      	ldr	r0, [pc, #8]	; (80048ac <I2C1_EV_IRQHandler+0x10>)
 80048a2:	f001 fc3b 	bl	800611c <HAL_I2C_EV_IRQHandler>
 80048a6:	bf00      	nop
 80048a8:	bd80      	pop	{r7, pc}
 80048aa:	bf00      	nop
 80048ac:	200001c4 	.word	0x200001c4

080048b0 <I2C1_ER_IRQHandler>:
 80048b0:	b580      	push	{r7, lr}
 80048b2:	af00      	add	r7, sp, #0
 80048b4:	4802      	ldr	r0, [pc, #8]	; (80048c0 <I2C1_ER_IRQHandler+0x10>)
 80048b6:	f001 fda2 	bl	80063fe <HAL_I2C_ER_IRQHandler>
 80048ba:	bf00      	nop
 80048bc:	bd80      	pop	{r7, pc}
 80048be:	bf00      	nop
 80048c0:	200001c4 	.word	0x200001c4

080048c4 <USART2_IRQHandler>:
 80048c4:	b580      	push	{r7, lr}
 80048c6:	af00      	add	r7, sp, #0
 80048c8:	4802      	ldr	r0, [pc, #8]	; (80048d4 <USART2_IRQHandler+0x10>)
 80048ca:	f005 ff71 	bl	800a7b0 <HAL_UART_IRQHandler>
 80048ce:	bf00      	nop
 80048d0:	bd80      	pop	{r7, pc}
 80048d2:	bf00      	nop
 80048d4:	200003c0 	.word	0x200003c0

080048d8 <EXTI15_10_IRQHandler>:
 80048d8:	b580      	push	{r7, lr}
 80048da:	af00      	add	r7, sp, #0
 80048dc:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 80048e0:	f000 ff9c 	bl	800581c <HAL_GPIO_EXTI_IRQHandler>
 80048e4:	bf00      	nop
 80048e6:	bd80      	pop	{r7, pc}

080048e8 <DMA1_Stream7_IRQHandler>:
 80048e8:	b580      	push	{r7, lr}
 80048ea:	af00      	add	r7, sp, #0
 80048ec:	4802      	ldr	r0, [pc, #8]	; (80048f8 <DMA1_Stream7_IRQHandler+0x10>)
 80048ee:	f000 fb67 	bl	8004fc0 <HAL_DMA_IRQHandler>
 80048f2:	bf00      	nop
 80048f4:	bd80      	pop	{r7, pc}
 80048f6:	bf00      	nop
 80048f8:	200002d0 	.word	0x200002d0

080048fc <SPI3_IRQHandler>:
 80048fc:	b580      	push	{r7, lr}
 80048fe:	af00      	add	r7, sp, #0
 8004900:	4802      	ldr	r0, [pc, #8]	; (800490c <SPI3_IRQHandler+0x10>)
 8004902:	f004 fa77 	bl	8008df4 <HAL_SPI_IRQHandler>
 8004906:	bf00      	nop
 8004908:	bd80      	pop	{r7, pc}
 800490a:	bf00      	nop
 800490c:	20000218 	.word	0x20000218

08004910 <SystemInit>:
 8004910:	b480      	push	{r7}
 8004912:	af00      	add	r7, sp, #0
 8004914:	4b06      	ldr	r3, [pc, #24]	; (8004930 <SystemInit+0x20>)
 8004916:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800491a:	4a05      	ldr	r2, [pc, #20]	; (8004930 <SystemInit+0x20>)
 800491c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8004920:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8004924:	bf00      	nop
 8004926:	46bd      	mov	sp, r7
 8004928:	f85d 7b04 	ldr.w	r7, [sp], #4
 800492c:	4770      	bx	lr
 800492e:	bf00      	nop
 8004930:	e000ed00 	.word	0xe000ed00

08004934 <Reset_Handler>:
 8004934:	f8df d034 	ldr.w	sp, [pc, #52]	; 800496c <LoopFillZerobss+0x12>
 8004938:	480d      	ldr	r0, [pc, #52]	; (8004970 <LoopFillZerobss+0x16>)
 800493a:	490e      	ldr	r1, [pc, #56]	; (8004974 <LoopFillZerobss+0x1a>)
 800493c:	4a0e      	ldr	r2, [pc, #56]	; (8004978 <LoopFillZerobss+0x1e>)
 800493e:	2300      	movs	r3, #0
 8004940:	e002      	b.n	8004948 <LoopCopyDataInit>

08004942 <CopyDataInit>:
 8004942:	58d4      	ldr	r4, [r2, r3]
 8004944:	50c4      	str	r4, [r0, r3]
 8004946:	3304      	adds	r3, #4

08004948 <LoopCopyDataInit>:
 8004948:	18c4      	adds	r4, r0, r3
 800494a:	428c      	cmp	r4, r1
 800494c:	d3f9      	bcc.n	8004942 <CopyDataInit>
 800494e:	4a0b      	ldr	r2, [pc, #44]	; (800497c <LoopFillZerobss+0x22>)
 8004950:	4c0b      	ldr	r4, [pc, #44]	; (8004980 <LoopFillZerobss+0x26>)
 8004952:	2300      	movs	r3, #0
 8004954:	e001      	b.n	800495a <LoopFillZerobss>

08004956 <FillZerobss>:
 8004956:	6013      	str	r3, [r2, #0]
 8004958:	3204      	adds	r2, #4

0800495a <LoopFillZerobss>:
 800495a:	42a2      	cmp	r2, r4
 800495c:	d3fb      	bcc.n	8004956 <FillZerobss>
 800495e:	f7ff ffd7 	bl	8004910 <SystemInit>
 8004962:	f007 f815 	bl	800b990 <__libc_init_array>
 8004966:	f7fc fa97 	bl	8000e98 <main>
 800496a:	4770      	bx	lr
 800496c:	20020000 	.word	0x20020000
 8004970:	20000000 	.word	0x20000000
 8004974:	200001a4 	.word	0x200001a4
 8004978:	0800bbec 	.word	0x0800bbec
 800497c:	200001a8 	.word	0x200001a8
 8004980:	20000810 	.word	0x20000810

08004984 <ADC_IRQHandler>:
 8004984:	e7fe      	b.n	8004984 <ADC_IRQHandler>
	...

08004988 <HAL_Init>:
 8004988:	b580      	push	{r7, lr}
 800498a:	af00      	add	r7, sp, #0
 800498c:	4b0e      	ldr	r3, [pc, #56]	; (80049c8 <HAL_Init+0x40>)
 800498e:	681b      	ldr	r3, [r3, #0]
 8004990:	4a0d      	ldr	r2, [pc, #52]	; (80049c8 <HAL_Init+0x40>)
 8004992:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004996:	6013      	str	r3, [r2, #0]
 8004998:	4b0b      	ldr	r3, [pc, #44]	; (80049c8 <HAL_Init+0x40>)
 800499a:	681b      	ldr	r3, [r3, #0]
 800499c:	4a0a      	ldr	r2, [pc, #40]	; (80049c8 <HAL_Init+0x40>)
 800499e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80049a2:	6013      	str	r3, [r2, #0]
 80049a4:	4b08      	ldr	r3, [pc, #32]	; (80049c8 <HAL_Init+0x40>)
 80049a6:	681b      	ldr	r3, [r3, #0]
 80049a8:	4a07      	ldr	r2, [pc, #28]	; (80049c8 <HAL_Init+0x40>)
 80049aa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80049ae:	6013      	str	r3, [r2, #0]
 80049b0:	2003      	movs	r0, #3
 80049b2:	f000 f92b 	bl	8004c0c <HAL_NVIC_SetPriorityGrouping>
 80049b6:	2000      	movs	r0, #0
 80049b8:	f000 f808 	bl	80049cc <HAL_InitTick>
 80049bc:	f7ff fca4 	bl	8004308 <HAL_MspInit>
 80049c0:	2300      	movs	r3, #0
 80049c2:	4618      	mov	r0, r3
 80049c4:	bd80      	pop	{r7, pc}
 80049c6:	bf00      	nop
 80049c8:	40023c00 	.word	0x40023c00

080049cc <HAL_InitTick>:
 80049cc:	b580      	push	{r7, lr}
 80049ce:	b082      	sub	sp, #8
 80049d0:	af00      	add	r7, sp, #0
 80049d2:	6078      	str	r0, [r7, #4]
 80049d4:	4b12      	ldr	r3, [pc, #72]	; (8004a20 <HAL_InitTick+0x54>)
 80049d6:	681a      	ldr	r2, [r3, #0]
 80049d8:	4b12      	ldr	r3, [pc, #72]	; (8004a24 <HAL_InitTick+0x58>)
 80049da:	781b      	ldrb	r3, [r3, #0]
 80049dc:	4619      	mov	r1, r3
 80049de:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80049e2:	fbb3 f3f1 	udiv	r3, r3, r1
 80049e6:	fbb2 f3f3 	udiv	r3, r2, r3
 80049ea:	4618      	mov	r0, r3
 80049ec:	f000 f943 	bl	8004c76 <HAL_SYSTICK_Config>
 80049f0:	4603      	mov	r3, r0
 80049f2:	2b00      	cmp	r3, #0
 80049f4:	d001      	beq.n	80049fa <HAL_InitTick+0x2e>
 80049f6:	2301      	movs	r3, #1
 80049f8:	e00e      	b.n	8004a18 <HAL_InitTick+0x4c>
 80049fa:	687b      	ldr	r3, [r7, #4]
 80049fc:	2b0f      	cmp	r3, #15
 80049fe:	d80a      	bhi.n	8004a16 <HAL_InitTick+0x4a>
 8004a00:	2200      	movs	r2, #0
 8004a02:	6879      	ldr	r1, [r7, #4]
 8004a04:	f04f 30ff 	mov.w	r0, #4294967295
 8004a08:	f000 f90b 	bl	8004c22 <HAL_NVIC_SetPriority>
 8004a0c:	4a06      	ldr	r2, [pc, #24]	; (8004a28 <HAL_InitTick+0x5c>)
 8004a0e:	687b      	ldr	r3, [r7, #4]
 8004a10:	6013      	str	r3, [r2, #0]
 8004a12:	2300      	movs	r3, #0
 8004a14:	e000      	b.n	8004a18 <HAL_InitTick+0x4c>
 8004a16:	2301      	movs	r3, #1
 8004a18:	4618      	mov	r0, r3
 8004a1a:	3708      	adds	r7, #8
 8004a1c:	46bd      	mov	sp, r7
 8004a1e:	bd80      	pop	{r7, pc}
 8004a20:	20000134 	.word	0x20000134
 8004a24:	2000013c 	.word	0x2000013c
 8004a28:	20000138 	.word	0x20000138

08004a2c <HAL_IncTick>:
 8004a2c:	b480      	push	{r7}
 8004a2e:	af00      	add	r7, sp, #0
 8004a30:	4b06      	ldr	r3, [pc, #24]	; (8004a4c <HAL_IncTick+0x20>)
 8004a32:	781b      	ldrb	r3, [r3, #0]
 8004a34:	461a      	mov	r2, r3
 8004a36:	4b06      	ldr	r3, [pc, #24]	; (8004a50 <HAL_IncTick+0x24>)
 8004a38:	681b      	ldr	r3, [r3, #0]
 8004a3a:	4413      	add	r3, r2
 8004a3c:	4a04      	ldr	r2, [pc, #16]	; (8004a50 <HAL_IncTick+0x24>)
 8004a3e:	6013      	str	r3, [r2, #0]
 8004a40:	bf00      	nop
 8004a42:	46bd      	mov	sp, r7
 8004a44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a48:	4770      	bx	lr
 8004a4a:	bf00      	nop
 8004a4c:	2000013c 	.word	0x2000013c
 8004a50:	2000080c 	.word	0x2000080c

08004a54 <HAL_GetTick>:
 8004a54:	b480      	push	{r7}
 8004a56:	af00      	add	r7, sp, #0
 8004a58:	4b03      	ldr	r3, [pc, #12]	; (8004a68 <HAL_GetTick+0x14>)
 8004a5a:	681b      	ldr	r3, [r3, #0]
 8004a5c:	4618      	mov	r0, r3
 8004a5e:	46bd      	mov	sp, r7
 8004a60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a64:	4770      	bx	lr
 8004a66:	bf00      	nop
 8004a68:	2000080c 	.word	0x2000080c

08004a6c <__NVIC_SetPriorityGrouping>:
 8004a6c:	b480      	push	{r7}
 8004a6e:	b085      	sub	sp, #20
 8004a70:	af00      	add	r7, sp, #0
 8004a72:	6078      	str	r0, [r7, #4]
 8004a74:	687b      	ldr	r3, [r7, #4]
 8004a76:	f003 0307 	and.w	r3, r3, #7
 8004a7a:	60fb      	str	r3, [r7, #12]
 8004a7c:	4b0c      	ldr	r3, [pc, #48]	; (8004ab0 <__NVIC_SetPriorityGrouping+0x44>)
 8004a7e:	68db      	ldr	r3, [r3, #12]
 8004a80:	60bb      	str	r3, [r7, #8]
 8004a82:	68ba      	ldr	r2, [r7, #8]
 8004a84:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8004a88:	4013      	ands	r3, r2
 8004a8a:	60bb      	str	r3, [r7, #8]
 8004a8c:	68fb      	ldr	r3, [r7, #12]
 8004a8e:	021a      	lsls	r2, r3, #8
 8004a90:	68bb      	ldr	r3, [r7, #8]
 8004a92:	4313      	orrs	r3, r2
 8004a94:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004a98:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004a9c:	60bb      	str	r3, [r7, #8]
 8004a9e:	4a04      	ldr	r2, [pc, #16]	; (8004ab0 <__NVIC_SetPriorityGrouping+0x44>)
 8004aa0:	68bb      	ldr	r3, [r7, #8]
 8004aa2:	60d3      	str	r3, [r2, #12]
 8004aa4:	bf00      	nop
 8004aa6:	3714      	adds	r7, #20
 8004aa8:	46bd      	mov	sp, r7
 8004aaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004aae:	4770      	bx	lr
 8004ab0:	e000ed00 	.word	0xe000ed00

08004ab4 <__NVIC_GetPriorityGrouping>:
 8004ab4:	b480      	push	{r7}
 8004ab6:	af00      	add	r7, sp, #0
 8004ab8:	4b04      	ldr	r3, [pc, #16]	; (8004acc <__NVIC_GetPriorityGrouping+0x18>)
 8004aba:	68db      	ldr	r3, [r3, #12]
 8004abc:	0a1b      	lsrs	r3, r3, #8
 8004abe:	f003 0307 	and.w	r3, r3, #7
 8004ac2:	4618      	mov	r0, r3
 8004ac4:	46bd      	mov	sp, r7
 8004ac6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004aca:	4770      	bx	lr
 8004acc:	e000ed00 	.word	0xe000ed00

08004ad0 <__NVIC_EnableIRQ>:
 8004ad0:	b480      	push	{r7}
 8004ad2:	b083      	sub	sp, #12
 8004ad4:	af00      	add	r7, sp, #0
 8004ad6:	4603      	mov	r3, r0
 8004ad8:	71fb      	strb	r3, [r7, #7]
 8004ada:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004ade:	2b00      	cmp	r3, #0
 8004ae0:	db0b      	blt.n	8004afa <__NVIC_EnableIRQ+0x2a>
 8004ae2:	79fb      	ldrb	r3, [r7, #7]
 8004ae4:	f003 021f 	and.w	r2, r3, #31
 8004ae8:	4907      	ldr	r1, [pc, #28]	; (8004b08 <__NVIC_EnableIRQ+0x38>)
 8004aea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004aee:	095b      	lsrs	r3, r3, #5
 8004af0:	2001      	movs	r0, #1
 8004af2:	fa00 f202 	lsl.w	r2, r0, r2
 8004af6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004afa:	bf00      	nop
 8004afc:	370c      	adds	r7, #12
 8004afe:	46bd      	mov	sp, r7
 8004b00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b04:	4770      	bx	lr
 8004b06:	bf00      	nop
 8004b08:	e000e100 	.word	0xe000e100

08004b0c <__NVIC_SetPriority>:
 8004b0c:	b480      	push	{r7}
 8004b0e:	b083      	sub	sp, #12
 8004b10:	af00      	add	r7, sp, #0
 8004b12:	4603      	mov	r3, r0
 8004b14:	6039      	str	r1, [r7, #0]
 8004b16:	71fb      	strb	r3, [r7, #7]
 8004b18:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004b1c:	2b00      	cmp	r3, #0
 8004b1e:	db0a      	blt.n	8004b36 <__NVIC_SetPriority+0x2a>
 8004b20:	683b      	ldr	r3, [r7, #0]
 8004b22:	b2da      	uxtb	r2, r3
 8004b24:	490c      	ldr	r1, [pc, #48]	; (8004b58 <__NVIC_SetPriority+0x4c>)
 8004b26:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004b2a:	0112      	lsls	r2, r2, #4
 8004b2c:	b2d2      	uxtb	r2, r2
 8004b2e:	440b      	add	r3, r1
 8004b30:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8004b34:	e00a      	b.n	8004b4c <__NVIC_SetPriority+0x40>
 8004b36:	683b      	ldr	r3, [r7, #0]
 8004b38:	b2da      	uxtb	r2, r3
 8004b3a:	4908      	ldr	r1, [pc, #32]	; (8004b5c <__NVIC_SetPriority+0x50>)
 8004b3c:	79fb      	ldrb	r3, [r7, #7]
 8004b3e:	f003 030f 	and.w	r3, r3, #15
 8004b42:	3b04      	subs	r3, #4
 8004b44:	0112      	lsls	r2, r2, #4
 8004b46:	b2d2      	uxtb	r2, r2
 8004b48:	440b      	add	r3, r1
 8004b4a:	761a      	strb	r2, [r3, #24]
 8004b4c:	bf00      	nop
 8004b4e:	370c      	adds	r7, #12
 8004b50:	46bd      	mov	sp, r7
 8004b52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b56:	4770      	bx	lr
 8004b58:	e000e100 	.word	0xe000e100
 8004b5c:	e000ed00 	.word	0xe000ed00

08004b60 <NVIC_EncodePriority>:
 8004b60:	b480      	push	{r7}
 8004b62:	b089      	sub	sp, #36	; 0x24
 8004b64:	af00      	add	r7, sp, #0
 8004b66:	60f8      	str	r0, [r7, #12]
 8004b68:	60b9      	str	r1, [r7, #8]
 8004b6a:	607a      	str	r2, [r7, #4]
 8004b6c:	68fb      	ldr	r3, [r7, #12]
 8004b6e:	f003 0307 	and.w	r3, r3, #7
 8004b72:	61fb      	str	r3, [r7, #28]
 8004b74:	69fb      	ldr	r3, [r7, #28]
 8004b76:	f1c3 0307 	rsb	r3, r3, #7
 8004b7a:	2b04      	cmp	r3, #4
 8004b7c:	bf28      	it	cs
 8004b7e:	2304      	movcs	r3, #4
 8004b80:	61bb      	str	r3, [r7, #24]
 8004b82:	69fb      	ldr	r3, [r7, #28]
 8004b84:	3304      	adds	r3, #4
 8004b86:	2b06      	cmp	r3, #6
 8004b88:	d902      	bls.n	8004b90 <NVIC_EncodePriority+0x30>
 8004b8a:	69fb      	ldr	r3, [r7, #28]
 8004b8c:	3b03      	subs	r3, #3
 8004b8e:	e000      	b.n	8004b92 <NVIC_EncodePriority+0x32>
 8004b90:	2300      	movs	r3, #0
 8004b92:	617b      	str	r3, [r7, #20]
 8004b94:	f04f 32ff 	mov.w	r2, #4294967295
 8004b98:	69bb      	ldr	r3, [r7, #24]
 8004b9a:	fa02 f303 	lsl.w	r3, r2, r3
 8004b9e:	43da      	mvns	r2, r3
 8004ba0:	68bb      	ldr	r3, [r7, #8]
 8004ba2:	401a      	ands	r2, r3
 8004ba4:	697b      	ldr	r3, [r7, #20]
 8004ba6:	409a      	lsls	r2, r3
 8004ba8:	f04f 31ff 	mov.w	r1, #4294967295
 8004bac:	697b      	ldr	r3, [r7, #20]
 8004bae:	fa01 f303 	lsl.w	r3, r1, r3
 8004bb2:	43d9      	mvns	r1, r3
 8004bb4:	687b      	ldr	r3, [r7, #4]
 8004bb6:	400b      	ands	r3, r1
 8004bb8:	4313      	orrs	r3, r2
 8004bba:	4618      	mov	r0, r3
 8004bbc:	3724      	adds	r7, #36	; 0x24
 8004bbe:	46bd      	mov	sp, r7
 8004bc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bc4:	4770      	bx	lr
	...

08004bc8 <SysTick_Config>:
 8004bc8:	b580      	push	{r7, lr}
 8004bca:	b082      	sub	sp, #8
 8004bcc:	af00      	add	r7, sp, #0
 8004bce:	6078      	str	r0, [r7, #4]
 8004bd0:	687b      	ldr	r3, [r7, #4]
 8004bd2:	3b01      	subs	r3, #1
 8004bd4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004bd8:	d301      	bcc.n	8004bde <SysTick_Config+0x16>
 8004bda:	2301      	movs	r3, #1
 8004bdc:	e00f      	b.n	8004bfe <SysTick_Config+0x36>
 8004bde:	4a0a      	ldr	r2, [pc, #40]	; (8004c08 <SysTick_Config+0x40>)
 8004be0:	687b      	ldr	r3, [r7, #4]
 8004be2:	3b01      	subs	r3, #1
 8004be4:	6053      	str	r3, [r2, #4]
 8004be6:	210f      	movs	r1, #15
 8004be8:	f04f 30ff 	mov.w	r0, #4294967295
 8004bec:	f7ff ff8e 	bl	8004b0c <__NVIC_SetPriority>
 8004bf0:	4b05      	ldr	r3, [pc, #20]	; (8004c08 <SysTick_Config+0x40>)
 8004bf2:	2200      	movs	r2, #0
 8004bf4:	609a      	str	r2, [r3, #8]
 8004bf6:	4b04      	ldr	r3, [pc, #16]	; (8004c08 <SysTick_Config+0x40>)
 8004bf8:	2207      	movs	r2, #7
 8004bfa:	601a      	str	r2, [r3, #0]
 8004bfc:	2300      	movs	r3, #0
 8004bfe:	4618      	mov	r0, r3
 8004c00:	3708      	adds	r7, #8
 8004c02:	46bd      	mov	sp, r7
 8004c04:	bd80      	pop	{r7, pc}
 8004c06:	bf00      	nop
 8004c08:	e000e010 	.word	0xe000e010

08004c0c <HAL_NVIC_SetPriorityGrouping>:
 8004c0c:	b580      	push	{r7, lr}
 8004c0e:	b082      	sub	sp, #8
 8004c10:	af00      	add	r7, sp, #0
 8004c12:	6078      	str	r0, [r7, #4]
 8004c14:	6878      	ldr	r0, [r7, #4]
 8004c16:	f7ff ff29 	bl	8004a6c <__NVIC_SetPriorityGrouping>
 8004c1a:	bf00      	nop
 8004c1c:	3708      	adds	r7, #8
 8004c1e:	46bd      	mov	sp, r7
 8004c20:	bd80      	pop	{r7, pc}

08004c22 <HAL_NVIC_SetPriority>:
 8004c22:	b580      	push	{r7, lr}
 8004c24:	b086      	sub	sp, #24
 8004c26:	af00      	add	r7, sp, #0
 8004c28:	4603      	mov	r3, r0
 8004c2a:	60b9      	str	r1, [r7, #8]
 8004c2c:	607a      	str	r2, [r7, #4]
 8004c2e:	73fb      	strb	r3, [r7, #15]
 8004c30:	2300      	movs	r3, #0
 8004c32:	617b      	str	r3, [r7, #20]
 8004c34:	f7ff ff3e 	bl	8004ab4 <__NVIC_GetPriorityGrouping>
 8004c38:	6178      	str	r0, [r7, #20]
 8004c3a:	687a      	ldr	r2, [r7, #4]
 8004c3c:	68b9      	ldr	r1, [r7, #8]
 8004c3e:	6978      	ldr	r0, [r7, #20]
 8004c40:	f7ff ff8e 	bl	8004b60 <NVIC_EncodePriority>
 8004c44:	4602      	mov	r2, r0
 8004c46:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004c4a:	4611      	mov	r1, r2
 8004c4c:	4618      	mov	r0, r3
 8004c4e:	f7ff ff5d 	bl	8004b0c <__NVIC_SetPriority>
 8004c52:	bf00      	nop
 8004c54:	3718      	adds	r7, #24
 8004c56:	46bd      	mov	sp, r7
 8004c58:	bd80      	pop	{r7, pc}

08004c5a <HAL_NVIC_EnableIRQ>:
 8004c5a:	b580      	push	{r7, lr}
 8004c5c:	b082      	sub	sp, #8
 8004c5e:	af00      	add	r7, sp, #0
 8004c60:	4603      	mov	r3, r0
 8004c62:	71fb      	strb	r3, [r7, #7]
 8004c64:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004c68:	4618      	mov	r0, r3
 8004c6a:	f7ff ff31 	bl	8004ad0 <__NVIC_EnableIRQ>
 8004c6e:	bf00      	nop
 8004c70:	3708      	adds	r7, #8
 8004c72:	46bd      	mov	sp, r7
 8004c74:	bd80      	pop	{r7, pc}

08004c76 <HAL_SYSTICK_Config>:
 8004c76:	b580      	push	{r7, lr}
 8004c78:	b082      	sub	sp, #8
 8004c7a:	af00      	add	r7, sp, #0
 8004c7c:	6078      	str	r0, [r7, #4]
 8004c7e:	6878      	ldr	r0, [r7, #4]
 8004c80:	f7ff ffa2 	bl	8004bc8 <SysTick_Config>
 8004c84:	4603      	mov	r3, r0
 8004c86:	4618      	mov	r0, r3
 8004c88:	3708      	adds	r7, #8
 8004c8a:	46bd      	mov	sp, r7
 8004c8c:	bd80      	pop	{r7, pc}
	...

08004c90 <HAL_DMA_Init>:
 8004c90:	b580      	push	{r7, lr}
 8004c92:	b086      	sub	sp, #24
 8004c94:	af00      	add	r7, sp, #0
 8004c96:	6078      	str	r0, [r7, #4]
 8004c98:	2300      	movs	r3, #0
 8004c9a:	617b      	str	r3, [r7, #20]
 8004c9c:	f7ff feda 	bl	8004a54 <HAL_GetTick>
 8004ca0:	6138      	str	r0, [r7, #16]
 8004ca2:	687b      	ldr	r3, [r7, #4]
 8004ca4:	2b00      	cmp	r3, #0
 8004ca6:	d101      	bne.n	8004cac <HAL_DMA_Init+0x1c>
 8004ca8:	2301      	movs	r3, #1
 8004caa:	e099      	b.n	8004de0 <HAL_DMA_Init+0x150>
 8004cac:	687b      	ldr	r3, [r7, #4]
 8004cae:	2202      	movs	r2, #2
 8004cb0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004cb4:	687b      	ldr	r3, [r7, #4]
 8004cb6:	2200      	movs	r2, #0
 8004cb8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	681b      	ldr	r3, [r3, #0]
 8004cc0:	681a      	ldr	r2, [r3, #0]
 8004cc2:	687b      	ldr	r3, [r7, #4]
 8004cc4:	681b      	ldr	r3, [r3, #0]
 8004cc6:	f022 0201 	bic.w	r2, r2, #1
 8004cca:	601a      	str	r2, [r3, #0]
 8004ccc:	e00f      	b.n	8004cee <HAL_DMA_Init+0x5e>
 8004cce:	f7ff fec1 	bl	8004a54 <HAL_GetTick>
 8004cd2:	4602      	mov	r2, r0
 8004cd4:	693b      	ldr	r3, [r7, #16]
 8004cd6:	1ad3      	subs	r3, r2, r3
 8004cd8:	2b05      	cmp	r3, #5
 8004cda:	d908      	bls.n	8004cee <HAL_DMA_Init+0x5e>
 8004cdc:	687b      	ldr	r3, [r7, #4]
 8004cde:	2220      	movs	r2, #32
 8004ce0:	655a      	str	r2, [r3, #84]	; 0x54
 8004ce2:	687b      	ldr	r3, [r7, #4]
 8004ce4:	2203      	movs	r2, #3
 8004ce6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004cea:	2303      	movs	r3, #3
 8004cec:	e078      	b.n	8004de0 <HAL_DMA_Init+0x150>
 8004cee:	687b      	ldr	r3, [r7, #4]
 8004cf0:	681b      	ldr	r3, [r3, #0]
 8004cf2:	681b      	ldr	r3, [r3, #0]
 8004cf4:	f003 0301 	and.w	r3, r3, #1
 8004cf8:	2b00      	cmp	r3, #0
 8004cfa:	d1e8      	bne.n	8004cce <HAL_DMA_Init+0x3e>
 8004cfc:	687b      	ldr	r3, [r7, #4]
 8004cfe:	681b      	ldr	r3, [r3, #0]
 8004d00:	681b      	ldr	r3, [r3, #0]
 8004d02:	617b      	str	r3, [r7, #20]
 8004d04:	697a      	ldr	r2, [r7, #20]
 8004d06:	4b38      	ldr	r3, [pc, #224]	; (8004de8 <HAL_DMA_Init+0x158>)
 8004d08:	4013      	ands	r3, r2
 8004d0a:	617b      	str	r3, [r7, #20]
 8004d0c:	687b      	ldr	r3, [r7, #4]
 8004d0e:	685a      	ldr	r2, [r3, #4]
 8004d10:	687b      	ldr	r3, [r7, #4]
 8004d12:	689b      	ldr	r3, [r3, #8]
 8004d14:	431a      	orrs	r2, r3
 8004d16:	687b      	ldr	r3, [r7, #4]
 8004d18:	68db      	ldr	r3, [r3, #12]
 8004d1a:	431a      	orrs	r2, r3
 8004d1c:	687b      	ldr	r3, [r7, #4]
 8004d1e:	691b      	ldr	r3, [r3, #16]
 8004d20:	431a      	orrs	r2, r3
 8004d22:	687b      	ldr	r3, [r7, #4]
 8004d24:	695b      	ldr	r3, [r3, #20]
 8004d26:	431a      	orrs	r2, r3
 8004d28:	687b      	ldr	r3, [r7, #4]
 8004d2a:	699b      	ldr	r3, [r3, #24]
 8004d2c:	431a      	orrs	r2, r3
 8004d2e:	687b      	ldr	r3, [r7, #4]
 8004d30:	69db      	ldr	r3, [r3, #28]
 8004d32:	431a      	orrs	r2, r3
 8004d34:	687b      	ldr	r3, [r7, #4]
 8004d36:	6a1b      	ldr	r3, [r3, #32]
 8004d38:	4313      	orrs	r3, r2
 8004d3a:	697a      	ldr	r2, [r7, #20]
 8004d3c:	4313      	orrs	r3, r2
 8004d3e:	617b      	str	r3, [r7, #20]
 8004d40:	687b      	ldr	r3, [r7, #4]
 8004d42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d44:	2b04      	cmp	r3, #4
 8004d46:	d107      	bne.n	8004d58 <HAL_DMA_Init+0xc8>
 8004d48:	687b      	ldr	r3, [r7, #4]
 8004d4a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004d4c:	687b      	ldr	r3, [r7, #4]
 8004d4e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004d50:	4313      	orrs	r3, r2
 8004d52:	697a      	ldr	r2, [r7, #20]
 8004d54:	4313      	orrs	r3, r2
 8004d56:	617b      	str	r3, [r7, #20]
 8004d58:	687b      	ldr	r3, [r7, #4]
 8004d5a:	681b      	ldr	r3, [r3, #0]
 8004d5c:	697a      	ldr	r2, [r7, #20]
 8004d5e:	601a      	str	r2, [r3, #0]
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	681b      	ldr	r3, [r3, #0]
 8004d64:	695b      	ldr	r3, [r3, #20]
 8004d66:	617b      	str	r3, [r7, #20]
 8004d68:	697b      	ldr	r3, [r7, #20]
 8004d6a:	f023 0307 	bic.w	r3, r3, #7
 8004d6e:	617b      	str	r3, [r7, #20]
 8004d70:	687b      	ldr	r3, [r7, #4]
 8004d72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d74:	697a      	ldr	r2, [r7, #20]
 8004d76:	4313      	orrs	r3, r2
 8004d78:	617b      	str	r3, [r7, #20]
 8004d7a:	687b      	ldr	r3, [r7, #4]
 8004d7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d7e:	2b04      	cmp	r3, #4
 8004d80:	d117      	bne.n	8004db2 <HAL_DMA_Init+0x122>
 8004d82:	687b      	ldr	r3, [r7, #4]
 8004d84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004d86:	697a      	ldr	r2, [r7, #20]
 8004d88:	4313      	orrs	r3, r2
 8004d8a:	617b      	str	r3, [r7, #20]
 8004d8c:	687b      	ldr	r3, [r7, #4]
 8004d8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004d90:	2b00      	cmp	r3, #0
 8004d92:	d00e      	beq.n	8004db2 <HAL_DMA_Init+0x122>
 8004d94:	6878      	ldr	r0, [r7, #4]
 8004d96:	f000 fb0f 	bl	80053b8 <DMA_CheckFifoParam>
 8004d9a:	4603      	mov	r3, r0
 8004d9c:	2b00      	cmp	r3, #0
 8004d9e:	d008      	beq.n	8004db2 <HAL_DMA_Init+0x122>
 8004da0:	687b      	ldr	r3, [r7, #4]
 8004da2:	2240      	movs	r2, #64	; 0x40
 8004da4:	655a      	str	r2, [r3, #84]	; 0x54
 8004da6:	687b      	ldr	r3, [r7, #4]
 8004da8:	2201      	movs	r2, #1
 8004daa:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004dae:	2301      	movs	r3, #1
 8004db0:	e016      	b.n	8004de0 <HAL_DMA_Init+0x150>
 8004db2:	687b      	ldr	r3, [r7, #4]
 8004db4:	681b      	ldr	r3, [r3, #0]
 8004db6:	697a      	ldr	r2, [r7, #20]
 8004db8:	615a      	str	r2, [r3, #20]
 8004dba:	6878      	ldr	r0, [r7, #4]
 8004dbc:	f000 fac6 	bl	800534c <DMA_CalcBaseAndBitshift>
 8004dc0:	4603      	mov	r3, r0
 8004dc2:	60fb      	str	r3, [r7, #12]
 8004dc4:	687b      	ldr	r3, [r7, #4]
 8004dc6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004dc8:	223f      	movs	r2, #63	; 0x3f
 8004dca:	409a      	lsls	r2, r3
 8004dcc:	68fb      	ldr	r3, [r7, #12]
 8004dce:	609a      	str	r2, [r3, #8]
 8004dd0:	687b      	ldr	r3, [r7, #4]
 8004dd2:	2200      	movs	r2, #0
 8004dd4:	655a      	str	r2, [r3, #84]	; 0x54
 8004dd6:	687b      	ldr	r3, [r7, #4]
 8004dd8:	2201      	movs	r2, #1
 8004dda:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004dde:	2300      	movs	r3, #0
 8004de0:	4618      	mov	r0, r3
 8004de2:	3718      	adds	r7, #24
 8004de4:	46bd      	mov	sp, r7
 8004de6:	bd80      	pop	{r7, pc}
 8004de8:	f010803f 	.word	0xf010803f

08004dec <HAL_DMA_Start_IT>:
 8004dec:	b580      	push	{r7, lr}
 8004dee:	b086      	sub	sp, #24
 8004df0:	af00      	add	r7, sp, #0
 8004df2:	60f8      	str	r0, [r7, #12]
 8004df4:	60b9      	str	r1, [r7, #8]
 8004df6:	607a      	str	r2, [r7, #4]
 8004df8:	603b      	str	r3, [r7, #0]
 8004dfa:	2300      	movs	r3, #0
 8004dfc:	75fb      	strb	r3, [r7, #23]
 8004dfe:	68fb      	ldr	r3, [r7, #12]
 8004e00:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004e02:	613b      	str	r3, [r7, #16]
 8004e04:	68fb      	ldr	r3, [r7, #12]
 8004e06:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8004e0a:	2b01      	cmp	r3, #1
 8004e0c:	d101      	bne.n	8004e12 <HAL_DMA_Start_IT+0x26>
 8004e0e:	2302      	movs	r3, #2
 8004e10:	e040      	b.n	8004e94 <HAL_DMA_Start_IT+0xa8>
 8004e12:	68fb      	ldr	r3, [r7, #12]
 8004e14:	2201      	movs	r2, #1
 8004e16:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004e1a:	68fb      	ldr	r3, [r7, #12]
 8004e1c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004e20:	b2db      	uxtb	r3, r3
 8004e22:	2b01      	cmp	r3, #1
 8004e24:	d12f      	bne.n	8004e86 <HAL_DMA_Start_IT+0x9a>
 8004e26:	68fb      	ldr	r3, [r7, #12]
 8004e28:	2202      	movs	r2, #2
 8004e2a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004e2e:	68fb      	ldr	r3, [r7, #12]
 8004e30:	2200      	movs	r2, #0
 8004e32:	655a      	str	r2, [r3, #84]	; 0x54
 8004e34:	683b      	ldr	r3, [r7, #0]
 8004e36:	687a      	ldr	r2, [r7, #4]
 8004e38:	68b9      	ldr	r1, [r7, #8]
 8004e3a:	68f8      	ldr	r0, [r7, #12]
 8004e3c:	f000 fa58 	bl	80052f0 <DMA_SetConfig>
 8004e40:	68fb      	ldr	r3, [r7, #12]
 8004e42:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004e44:	223f      	movs	r2, #63	; 0x3f
 8004e46:	409a      	lsls	r2, r3
 8004e48:	693b      	ldr	r3, [r7, #16]
 8004e4a:	609a      	str	r2, [r3, #8]
 8004e4c:	68fb      	ldr	r3, [r7, #12]
 8004e4e:	681b      	ldr	r3, [r3, #0]
 8004e50:	681a      	ldr	r2, [r3, #0]
 8004e52:	68fb      	ldr	r3, [r7, #12]
 8004e54:	681b      	ldr	r3, [r3, #0]
 8004e56:	f042 0216 	orr.w	r2, r2, #22
 8004e5a:	601a      	str	r2, [r3, #0]
 8004e5c:	68fb      	ldr	r3, [r7, #12]
 8004e5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004e60:	2b00      	cmp	r3, #0
 8004e62:	d007      	beq.n	8004e74 <HAL_DMA_Start_IT+0x88>
 8004e64:	68fb      	ldr	r3, [r7, #12]
 8004e66:	681b      	ldr	r3, [r3, #0]
 8004e68:	681a      	ldr	r2, [r3, #0]
 8004e6a:	68fb      	ldr	r3, [r7, #12]
 8004e6c:	681b      	ldr	r3, [r3, #0]
 8004e6e:	f042 0208 	orr.w	r2, r2, #8
 8004e72:	601a      	str	r2, [r3, #0]
 8004e74:	68fb      	ldr	r3, [r7, #12]
 8004e76:	681b      	ldr	r3, [r3, #0]
 8004e78:	681a      	ldr	r2, [r3, #0]
 8004e7a:	68fb      	ldr	r3, [r7, #12]
 8004e7c:	681b      	ldr	r3, [r3, #0]
 8004e7e:	f042 0201 	orr.w	r2, r2, #1
 8004e82:	601a      	str	r2, [r3, #0]
 8004e84:	e005      	b.n	8004e92 <HAL_DMA_Start_IT+0xa6>
 8004e86:	68fb      	ldr	r3, [r7, #12]
 8004e88:	2200      	movs	r2, #0
 8004e8a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004e8e:	2302      	movs	r3, #2
 8004e90:	75fb      	strb	r3, [r7, #23]
 8004e92:	7dfb      	ldrb	r3, [r7, #23]
 8004e94:	4618      	mov	r0, r3
 8004e96:	3718      	adds	r7, #24
 8004e98:	46bd      	mov	sp, r7
 8004e9a:	bd80      	pop	{r7, pc}

08004e9c <HAL_DMA_Abort>:
 8004e9c:	b580      	push	{r7, lr}
 8004e9e:	b084      	sub	sp, #16
 8004ea0:	af00      	add	r7, sp, #0
 8004ea2:	6078      	str	r0, [r7, #4]
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004ea8:	60fb      	str	r3, [r7, #12]
 8004eaa:	f7ff fdd3 	bl	8004a54 <HAL_GetTick>
 8004eae:	60b8      	str	r0, [r7, #8]
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004eb6:	b2db      	uxtb	r3, r3
 8004eb8:	2b02      	cmp	r3, #2
 8004eba:	d008      	beq.n	8004ece <HAL_DMA_Abort+0x32>
 8004ebc:	687b      	ldr	r3, [r7, #4]
 8004ebe:	2280      	movs	r2, #128	; 0x80
 8004ec0:	655a      	str	r2, [r3, #84]	; 0x54
 8004ec2:	687b      	ldr	r3, [r7, #4]
 8004ec4:	2200      	movs	r2, #0
 8004ec6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004eca:	2301      	movs	r3, #1
 8004ecc:	e052      	b.n	8004f74 <HAL_DMA_Abort+0xd8>
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	681b      	ldr	r3, [r3, #0]
 8004ed2:	681a      	ldr	r2, [r3, #0]
 8004ed4:	687b      	ldr	r3, [r7, #4]
 8004ed6:	681b      	ldr	r3, [r3, #0]
 8004ed8:	f022 0216 	bic.w	r2, r2, #22
 8004edc:	601a      	str	r2, [r3, #0]
 8004ede:	687b      	ldr	r3, [r7, #4]
 8004ee0:	681b      	ldr	r3, [r3, #0]
 8004ee2:	695a      	ldr	r2, [r3, #20]
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	681b      	ldr	r3, [r3, #0]
 8004ee8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004eec:	615a      	str	r2, [r3, #20]
 8004eee:	687b      	ldr	r3, [r7, #4]
 8004ef0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ef2:	2b00      	cmp	r3, #0
 8004ef4:	d103      	bne.n	8004efe <HAL_DMA_Abort+0x62>
 8004ef6:	687b      	ldr	r3, [r7, #4]
 8004ef8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004efa:	2b00      	cmp	r3, #0
 8004efc:	d007      	beq.n	8004f0e <HAL_DMA_Abort+0x72>
 8004efe:	687b      	ldr	r3, [r7, #4]
 8004f00:	681b      	ldr	r3, [r3, #0]
 8004f02:	681a      	ldr	r2, [r3, #0]
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	681b      	ldr	r3, [r3, #0]
 8004f08:	f022 0208 	bic.w	r2, r2, #8
 8004f0c:	601a      	str	r2, [r3, #0]
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	681b      	ldr	r3, [r3, #0]
 8004f12:	681a      	ldr	r2, [r3, #0]
 8004f14:	687b      	ldr	r3, [r7, #4]
 8004f16:	681b      	ldr	r3, [r3, #0]
 8004f18:	f022 0201 	bic.w	r2, r2, #1
 8004f1c:	601a      	str	r2, [r3, #0]
 8004f1e:	e013      	b.n	8004f48 <HAL_DMA_Abort+0xac>
 8004f20:	f7ff fd98 	bl	8004a54 <HAL_GetTick>
 8004f24:	4602      	mov	r2, r0
 8004f26:	68bb      	ldr	r3, [r7, #8]
 8004f28:	1ad3      	subs	r3, r2, r3
 8004f2a:	2b05      	cmp	r3, #5
 8004f2c:	d90c      	bls.n	8004f48 <HAL_DMA_Abort+0xac>
 8004f2e:	687b      	ldr	r3, [r7, #4]
 8004f30:	2220      	movs	r2, #32
 8004f32:	655a      	str	r2, [r3, #84]	; 0x54
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	2203      	movs	r2, #3
 8004f38:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004f3c:	687b      	ldr	r3, [r7, #4]
 8004f3e:	2200      	movs	r2, #0
 8004f40:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004f44:	2303      	movs	r3, #3
 8004f46:	e015      	b.n	8004f74 <HAL_DMA_Abort+0xd8>
 8004f48:	687b      	ldr	r3, [r7, #4]
 8004f4a:	681b      	ldr	r3, [r3, #0]
 8004f4c:	681b      	ldr	r3, [r3, #0]
 8004f4e:	f003 0301 	and.w	r3, r3, #1
 8004f52:	2b00      	cmp	r3, #0
 8004f54:	d1e4      	bne.n	8004f20 <HAL_DMA_Abort+0x84>
 8004f56:	687b      	ldr	r3, [r7, #4]
 8004f58:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004f5a:	223f      	movs	r2, #63	; 0x3f
 8004f5c:	409a      	lsls	r2, r3
 8004f5e:	68fb      	ldr	r3, [r7, #12]
 8004f60:	609a      	str	r2, [r3, #8]
 8004f62:	687b      	ldr	r3, [r7, #4]
 8004f64:	2201      	movs	r2, #1
 8004f66:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004f6a:	687b      	ldr	r3, [r7, #4]
 8004f6c:	2200      	movs	r2, #0
 8004f6e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004f72:	2300      	movs	r3, #0
 8004f74:	4618      	mov	r0, r3
 8004f76:	3710      	adds	r7, #16
 8004f78:	46bd      	mov	sp, r7
 8004f7a:	bd80      	pop	{r7, pc}

08004f7c <HAL_DMA_Abort_IT>:
 8004f7c:	b480      	push	{r7}
 8004f7e:	b083      	sub	sp, #12
 8004f80:	af00      	add	r7, sp, #0
 8004f82:	6078      	str	r0, [r7, #4]
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004f8a:	b2db      	uxtb	r3, r3
 8004f8c:	2b02      	cmp	r3, #2
 8004f8e:	d004      	beq.n	8004f9a <HAL_DMA_Abort_IT+0x1e>
 8004f90:	687b      	ldr	r3, [r7, #4]
 8004f92:	2280      	movs	r2, #128	; 0x80
 8004f94:	655a      	str	r2, [r3, #84]	; 0x54
 8004f96:	2301      	movs	r3, #1
 8004f98:	e00c      	b.n	8004fb4 <HAL_DMA_Abort_IT+0x38>
 8004f9a:	687b      	ldr	r3, [r7, #4]
 8004f9c:	2205      	movs	r2, #5
 8004f9e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004fa2:	687b      	ldr	r3, [r7, #4]
 8004fa4:	681b      	ldr	r3, [r3, #0]
 8004fa6:	681a      	ldr	r2, [r3, #0]
 8004fa8:	687b      	ldr	r3, [r7, #4]
 8004faa:	681b      	ldr	r3, [r3, #0]
 8004fac:	f022 0201 	bic.w	r2, r2, #1
 8004fb0:	601a      	str	r2, [r3, #0]
 8004fb2:	2300      	movs	r3, #0
 8004fb4:	4618      	mov	r0, r3
 8004fb6:	370c      	adds	r7, #12
 8004fb8:	46bd      	mov	sp, r7
 8004fba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fbe:	4770      	bx	lr

08004fc0 <HAL_DMA_IRQHandler>:
 8004fc0:	b580      	push	{r7, lr}
 8004fc2:	b086      	sub	sp, #24
 8004fc4:	af00      	add	r7, sp, #0
 8004fc6:	6078      	str	r0, [r7, #4]
 8004fc8:	2300      	movs	r3, #0
 8004fca:	60bb      	str	r3, [r7, #8]
 8004fcc:	4b8e      	ldr	r3, [pc, #568]	; (8005208 <HAL_DMA_IRQHandler+0x248>)
 8004fce:	681b      	ldr	r3, [r3, #0]
 8004fd0:	4a8e      	ldr	r2, [pc, #568]	; (800520c <HAL_DMA_IRQHandler+0x24c>)
 8004fd2:	fba2 2303 	umull	r2, r3, r2, r3
 8004fd6:	0a9b      	lsrs	r3, r3, #10
 8004fd8:	617b      	str	r3, [r7, #20]
 8004fda:	687b      	ldr	r3, [r7, #4]
 8004fdc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004fde:	613b      	str	r3, [r7, #16]
 8004fe0:	693b      	ldr	r3, [r7, #16]
 8004fe2:	681b      	ldr	r3, [r3, #0]
 8004fe4:	60fb      	str	r3, [r7, #12]
 8004fe6:	687b      	ldr	r3, [r7, #4]
 8004fe8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004fea:	2208      	movs	r2, #8
 8004fec:	409a      	lsls	r2, r3
 8004fee:	68fb      	ldr	r3, [r7, #12]
 8004ff0:	4013      	ands	r3, r2
 8004ff2:	2b00      	cmp	r3, #0
 8004ff4:	d01a      	beq.n	800502c <HAL_DMA_IRQHandler+0x6c>
 8004ff6:	687b      	ldr	r3, [r7, #4]
 8004ff8:	681b      	ldr	r3, [r3, #0]
 8004ffa:	681b      	ldr	r3, [r3, #0]
 8004ffc:	f003 0304 	and.w	r3, r3, #4
 8005000:	2b00      	cmp	r3, #0
 8005002:	d013      	beq.n	800502c <HAL_DMA_IRQHandler+0x6c>
 8005004:	687b      	ldr	r3, [r7, #4]
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	681a      	ldr	r2, [r3, #0]
 800500a:	687b      	ldr	r3, [r7, #4]
 800500c:	681b      	ldr	r3, [r3, #0]
 800500e:	f022 0204 	bic.w	r2, r2, #4
 8005012:	601a      	str	r2, [r3, #0]
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005018:	2208      	movs	r2, #8
 800501a:	409a      	lsls	r2, r3
 800501c:	693b      	ldr	r3, [r7, #16]
 800501e:	609a      	str	r2, [r3, #8]
 8005020:	687b      	ldr	r3, [r7, #4]
 8005022:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005024:	f043 0201 	orr.w	r2, r3, #1
 8005028:	687b      	ldr	r3, [r7, #4]
 800502a:	655a      	str	r2, [r3, #84]	; 0x54
 800502c:	687b      	ldr	r3, [r7, #4]
 800502e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005030:	2201      	movs	r2, #1
 8005032:	409a      	lsls	r2, r3
 8005034:	68fb      	ldr	r3, [r7, #12]
 8005036:	4013      	ands	r3, r2
 8005038:	2b00      	cmp	r3, #0
 800503a:	d012      	beq.n	8005062 <HAL_DMA_IRQHandler+0xa2>
 800503c:	687b      	ldr	r3, [r7, #4]
 800503e:	681b      	ldr	r3, [r3, #0]
 8005040:	695b      	ldr	r3, [r3, #20]
 8005042:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005046:	2b00      	cmp	r3, #0
 8005048:	d00b      	beq.n	8005062 <HAL_DMA_IRQHandler+0xa2>
 800504a:	687b      	ldr	r3, [r7, #4]
 800504c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800504e:	2201      	movs	r2, #1
 8005050:	409a      	lsls	r2, r3
 8005052:	693b      	ldr	r3, [r7, #16]
 8005054:	609a      	str	r2, [r3, #8]
 8005056:	687b      	ldr	r3, [r7, #4]
 8005058:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800505a:	f043 0202 	orr.w	r2, r3, #2
 800505e:	687b      	ldr	r3, [r7, #4]
 8005060:	655a      	str	r2, [r3, #84]	; 0x54
 8005062:	687b      	ldr	r3, [r7, #4]
 8005064:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005066:	2204      	movs	r2, #4
 8005068:	409a      	lsls	r2, r3
 800506a:	68fb      	ldr	r3, [r7, #12]
 800506c:	4013      	ands	r3, r2
 800506e:	2b00      	cmp	r3, #0
 8005070:	d012      	beq.n	8005098 <HAL_DMA_IRQHandler+0xd8>
 8005072:	687b      	ldr	r3, [r7, #4]
 8005074:	681b      	ldr	r3, [r3, #0]
 8005076:	681b      	ldr	r3, [r3, #0]
 8005078:	f003 0302 	and.w	r3, r3, #2
 800507c:	2b00      	cmp	r3, #0
 800507e:	d00b      	beq.n	8005098 <HAL_DMA_IRQHandler+0xd8>
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005084:	2204      	movs	r2, #4
 8005086:	409a      	lsls	r2, r3
 8005088:	693b      	ldr	r3, [r7, #16]
 800508a:	609a      	str	r2, [r3, #8]
 800508c:	687b      	ldr	r3, [r7, #4]
 800508e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005090:	f043 0204 	orr.w	r2, r3, #4
 8005094:	687b      	ldr	r3, [r7, #4]
 8005096:	655a      	str	r2, [r3, #84]	; 0x54
 8005098:	687b      	ldr	r3, [r7, #4]
 800509a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800509c:	2210      	movs	r2, #16
 800509e:	409a      	lsls	r2, r3
 80050a0:	68fb      	ldr	r3, [r7, #12]
 80050a2:	4013      	ands	r3, r2
 80050a4:	2b00      	cmp	r3, #0
 80050a6:	d043      	beq.n	8005130 <HAL_DMA_IRQHandler+0x170>
 80050a8:	687b      	ldr	r3, [r7, #4]
 80050aa:	681b      	ldr	r3, [r3, #0]
 80050ac:	681b      	ldr	r3, [r3, #0]
 80050ae:	f003 0308 	and.w	r3, r3, #8
 80050b2:	2b00      	cmp	r3, #0
 80050b4:	d03c      	beq.n	8005130 <HAL_DMA_IRQHandler+0x170>
 80050b6:	687b      	ldr	r3, [r7, #4]
 80050b8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80050ba:	2210      	movs	r2, #16
 80050bc:	409a      	lsls	r2, r3
 80050be:	693b      	ldr	r3, [r7, #16]
 80050c0:	609a      	str	r2, [r3, #8]
 80050c2:	687b      	ldr	r3, [r7, #4]
 80050c4:	681b      	ldr	r3, [r3, #0]
 80050c6:	681b      	ldr	r3, [r3, #0]
 80050c8:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80050cc:	2b00      	cmp	r3, #0
 80050ce:	d018      	beq.n	8005102 <HAL_DMA_IRQHandler+0x142>
 80050d0:	687b      	ldr	r3, [r7, #4]
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	681b      	ldr	r3, [r3, #0]
 80050d6:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80050da:	2b00      	cmp	r3, #0
 80050dc:	d108      	bne.n	80050f0 <HAL_DMA_IRQHandler+0x130>
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80050e2:	2b00      	cmp	r3, #0
 80050e4:	d024      	beq.n	8005130 <HAL_DMA_IRQHandler+0x170>
 80050e6:	687b      	ldr	r3, [r7, #4]
 80050e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80050ea:	6878      	ldr	r0, [r7, #4]
 80050ec:	4798      	blx	r3
 80050ee:	e01f      	b.n	8005130 <HAL_DMA_IRQHandler+0x170>
 80050f0:	687b      	ldr	r3, [r7, #4]
 80050f2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80050f4:	2b00      	cmp	r3, #0
 80050f6:	d01b      	beq.n	8005130 <HAL_DMA_IRQHandler+0x170>
 80050f8:	687b      	ldr	r3, [r7, #4]
 80050fa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80050fc:	6878      	ldr	r0, [r7, #4]
 80050fe:	4798      	blx	r3
 8005100:	e016      	b.n	8005130 <HAL_DMA_IRQHandler+0x170>
 8005102:	687b      	ldr	r3, [r7, #4]
 8005104:	681b      	ldr	r3, [r3, #0]
 8005106:	681b      	ldr	r3, [r3, #0]
 8005108:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800510c:	2b00      	cmp	r3, #0
 800510e:	d107      	bne.n	8005120 <HAL_DMA_IRQHandler+0x160>
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	681b      	ldr	r3, [r3, #0]
 8005114:	681a      	ldr	r2, [r3, #0]
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	681b      	ldr	r3, [r3, #0]
 800511a:	f022 0208 	bic.w	r2, r2, #8
 800511e:	601a      	str	r2, [r3, #0]
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005124:	2b00      	cmp	r3, #0
 8005126:	d003      	beq.n	8005130 <HAL_DMA_IRQHandler+0x170>
 8005128:	687b      	ldr	r3, [r7, #4]
 800512a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800512c:	6878      	ldr	r0, [r7, #4]
 800512e:	4798      	blx	r3
 8005130:	687b      	ldr	r3, [r7, #4]
 8005132:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005134:	2220      	movs	r2, #32
 8005136:	409a      	lsls	r2, r3
 8005138:	68fb      	ldr	r3, [r7, #12]
 800513a:	4013      	ands	r3, r2
 800513c:	2b00      	cmp	r3, #0
 800513e:	f000 808f 	beq.w	8005260 <HAL_DMA_IRQHandler+0x2a0>
 8005142:	687b      	ldr	r3, [r7, #4]
 8005144:	681b      	ldr	r3, [r3, #0]
 8005146:	681b      	ldr	r3, [r3, #0]
 8005148:	f003 0310 	and.w	r3, r3, #16
 800514c:	2b00      	cmp	r3, #0
 800514e:	f000 8087 	beq.w	8005260 <HAL_DMA_IRQHandler+0x2a0>
 8005152:	687b      	ldr	r3, [r7, #4]
 8005154:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005156:	2220      	movs	r2, #32
 8005158:	409a      	lsls	r2, r3
 800515a:	693b      	ldr	r3, [r7, #16]
 800515c:	609a      	str	r2, [r3, #8]
 800515e:	687b      	ldr	r3, [r7, #4]
 8005160:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8005164:	b2db      	uxtb	r3, r3
 8005166:	2b05      	cmp	r3, #5
 8005168:	d136      	bne.n	80051d8 <HAL_DMA_IRQHandler+0x218>
 800516a:	687b      	ldr	r3, [r7, #4]
 800516c:	681b      	ldr	r3, [r3, #0]
 800516e:	681a      	ldr	r2, [r3, #0]
 8005170:	687b      	ldr	r3, [r7, #4]
 8005172:	681b      	ldr	r3, [r3, #0]
 8005174:	f022 0216 	bic.w	r2, r2, #22
 8005178:	601a      	str	r2, [r3, #0]
 800517a:	687b      	ldr	r3, [r7, #4]
 800517c:	681b      	ldr	r3, [r3, #0]
 800517e:	695a      	ldr	r2, [r3, #20]
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	681b      	ldr	r3, [r3, #0]
 8005184:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005188:	615a      	str	r2, [r3, #20]
 800518a:	687b      	ldr	r3, [r7, #4]
 800518c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800518e:	2b00      	cmp	r3, #0
 8005190:	d103      	bne.n	800519a <HAL_DMA_IRQHandler+0x1da>
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005196:	2b00      	cmp	r3, #0
 8005198:	d007      	beq.n	80051aa <HAL_DMA_IRQHandler+0x1ea>
 800519a:	687b      	ldr	r3, [r7, #4]
 800519c:	681b      	ldr	r3, [r3, #0]
 800519e:	681a      	ldr	r2, [r3, #0]
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	681b      	ldr	r3, [r3, #0]
 80051a4:	f022 0208 	bic.w	r2, r2, #8
 80051a8:	601a      	str	r2, [r3, #0]
 80051aa:	687b      	ldr	r3, [r7, #4]
 80051ac:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80051ae:	223f      	movs	r2, #63	; 0x3f
 80051b0:	409a      	lsls	r2, r3
 80051b2:	693b      	ldr	r3, [r7, #16]
 80051b4:	609a      	str	r2, [r3, #8]
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	2201      	movs	r2, #1
 80051ba:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	2200      	movs	r2, #0
 80051c2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80051ca:	2b00      	cmp	r3, #0
 80051cc:	d07e      	beq.n	80052cc <HAL_DMA_IRQHandler+0x30c>
 80051ce:	687b      	ldr	r3, [r7, #4]
 80051d0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80051d2:	6878      	ldr	r0, [r7, #4]
 80051d4:	4798      	blx	r3
 80051d6:	e079      	b.n	80052cc <HAL_DMA_IRQHandler+0x30c>
 80051d8:	687b      	ldr	r3, [r7, #4]
 80051da:	681b      	ldr	r3, [r3, #0]
 80051dc:	681b      	ldr	r3, [r3, #0]
 80051de:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80051e2:	2b00      	cmp	r3, #0
 80051e4:	d01d      	beq.n	8005222 <HAL_DMA_IRQHandler+0x262>
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	681b      	ldr	r3, [r3, #0]
 80051ea:	681b      	ldr	r3, [r3, #0]
 80051ec:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80051f0:	2b00      	cmp	r3, #0
 80051f2:	d10d      	bne.n	8005210 <HAL_DMA_IRQHandler+0x250>
 80051f4:	687b      	ldr	r3, [r7, #4]
 80051f6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80051f8:	2b00      	cmp	r3, #0
 80051fa:	d031      	beq.n	8005260 <HAL_DMA_IRQHandler+0x2a0>
 80051fc:	687b      	ldr	r3, [r7, #4]
 80051fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005200:	6878      	ldr	r0, [r7, #4]
 8005202:	4798      	blx	r3
 8005204:	e02c      	b.n	8005260 <HAL_DMA_IRQHandler+0x2a0>
 8005206:	bf00      	nop
 8005208:	20000134 	.word	0x20000134
 800520c:	1b4e81b5 	.word	0x1b4e81b5
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005214:	2b00      	cmp	r3, #0
 8005216:	d023      	beq.n	8005260 <HAL_DMA_IRQHandler+0x2a0>
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800521c:	6878      	ldr	r0, [r7, #4]
 800521e:	4798      	blx	r3
 8005220:	e01e      	b.n	8005260 <HAL_DMA_IRQHandler+0x2a0>
 8005222:	687b      	ldr	r3, [r7, #4]
 8005224:	681b      	ldr	r3, [r3, #0]
 8005226:	681b      	ldr	r3, [r3, #0]
 8005228:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800522c:	2b00      	cmp	r3, #0
 800522e:	d10f      	bne.n	8005250 <HAL_DMA_IRQHandler+0x290>
 8005230:	687b      	ldr	r3, [r7, #4]
 8005232:	681b      	ldr	r3, [r3, #0]
 8005234:	681a      	ldr	r2, [r3, #0]
 8005236:	687b      	ldr	r3, [r7, #4]
 8005238:	681b      	ldr	r3, [r3, #0]
 800523a:	f022 0210 	bic.w	r2, r2, #16
 800523e:	601a      	str	r2, [r3, #0]
 8005240:	687b      	ldr	r3, [r7, #4]
 8005242:	2201      	movs	r2, #1
 8005244:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005248:	687b      	ldr	r3, [r7, #4]
 800524a:	2200      	movs	r2, #0
 800524c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8005250:	687b      	ldr	r3, [r7, #4]
 8005252:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005254:	2b00      	cmp	r3, #0
 8005256:	d003      	beq.n	8005260 <HAL_DMA_IRQHandler+0x2a0>
 8005258:	687b      	ldr	r3, [r7, #4]
 800525a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800525c:	6878      	ldr	r0, [r7, #4]
 800525e:	4798      	blx	r3
 8005260:	687b      	ldr	r3, [r7, #4]
 8005262:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005264:	2b00      	cmp	r3, #0
 8005266:	d032      	beq.n	80052ce <HAL_DMA_IRQHandler+0x30e>
 8005268:	687b      	ldr	r3, [r7, #4]
 800526a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800526c:	f003 0301 	and.w	r3, r3, #1
 8005270:	2b00      	cmp	r3, #0
 8005272:	d022      	beq.n	80052ba <HAL_DMA_IRQHandler+0x2fa>
 8005274:	687b      	ldr	r3, [r7, #4]
 8005276:	2205      	movs	r2, #5
 8005278:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800527c:	687b      	ldr	r3, [r7, #4]
 800527e:	681b      	ldr	r3, [r3, #0]
 8005280:	681a      	ldr	r2, [r3, #0]
 8005282:	687b      	ldr	r3, [r7, #4]
 8005284:	681b      	ldr	r3, [r3, #0]
 8005286:	f022 0201 	bic.w	r2, r2, #1
 800528a:	601a      	str	r2, [r3, #0]
 800528c:	68bb      	ldr	r3, [r7, #8]
 800528e:	3301      	adds	r3, #1
 8005290:	60bb      	str	r3, [r7, #8]
 8005292:	697a      	ldr	r2, [r7, #20]
 8005294:	429a      	cmp	r2, r3
 8005296:	d307      	bcc.n	80052a8 <HAL_DMA_IRQHandler+0x2e8>
 8005298:	687b      	ldr	r3, [r7, #4]
 800529a:	681b      	ldr	r3, [r3, #0]
 800529c:	681b      	ldr	r3, [r3, #0]
 800529e:	f003 0301 	and.w	r3, r3, #1
 80052a2:	2b00      	cmp	r3, #0
 80052a4:	d1f2      	bne.n	800528c <HAL_DMA_IRQHandler+0x2cc>
 80052a6:	e000      	b.n	80052aa <HAL_DMA_IRQHandler+0x2ea>
 80052a8:	bf00      	nop
 80052aa:	687b      	ldr	r3, [r7, #4]
 80052ac:	2201      	movs	r2, #1
 80052ae:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80052b2:	687b      	ldr	r3, [r7, #4]
 80052b4:	2200      	movs	r2, #0
 80052b6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80052ba:	687b      	ldr	r3, [r7, #4]
 80052bc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80052be:	2b00      	cmp	r3, #0
 80052c0:	d005      	beq.n	80052ce <HAL_DMA_IRQHandler+0x30e>
 80052c2:	687b      	ldr	r3, [r7, #4]
 80052c4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80052c6:	6878      	ldr	r0, [r7, #4]
 80052c8:	4798      	blx	r3
 80052ca:	e000      	b.n	80052ce <HAL_DMA_IRQHandler+0x30e>
 80052cc:	bf00      	nop
 80052ce:	3718      	adds	r7, #24
 80052d0:	46bd      	mov	sp, r7
 80052d2:	bd80      	pop	{r7, pc}

080052d4 <HAL_DMA_GetState>:
 80052d4:	b480      	push	{r7}
 80052d6:	b083      	sub	sp, #12
 80052d8:	af00      	add	r7, sp, #0
 80052da:	6078      	str	r0, [r7, #4]
 80052dc:	687b      	ldr	r3, [r7, #4]
 80052de:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80052e2:	b2db      	uxtb	r3, r3
 80052e4:	4618      	mov	r0, r3
 80052e6:	370c      	adds	r7, #12
 80052e8:	46bd      	mov	sp, r7
 80052ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052ee:	4770      	bx	lr

080052f0 <DMA_SetConfig>:
 80052f0:	b480      	push	{r7}
 80052f2:	b085      	sub	sp, #20
 80052f4:	af00      	add	r7, sp, #0
 80052f6:	60f8      	str	r0, [r7, #12]
 80052f8:	60b9      	str	r1, [r7, #8]
 80052fa:	607a      	str	r2, [r7, #4]
 80052fc:	603b      	str	r3, [r7, #0]
 80052fe:	68fb      	ldr	r3, [r7, #12]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	681a      	ldr	r2, [r3, #0]
 8005304:	68fb      	ldr	r3, [r7, #12]
 8005306:	681b      	ldr	r3, [r3, #0]
 8005308:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800530c:	601a      	str	r2, [r3, #0]
 800530e:	68fb      	ldr	r3, [r7, #12]
 8005310:	681b      	ldr	r3, [r3, #0]
 8005312:	683a      	ldr	r2, [r7, #0]
 8005314:	605a      	str	r2, [r3, #4]
 8005316:	68fb      	ldr	r3, [r7, #12]
 8005318:	689b      	ldr	r3, [r3, #8]
 800531a:	2b40      	cmp	r3, #64	; 0x40
 800531c:	d108      	bne.n	8005330 <DMA_SetConfig+0x40>
 800531e:	68fb      	ldr	r3, [r7, #12]
 8005320:	681b      	ldr	r3, [r3, #0]
 8005322:	687a      	ldr	r2, [r7, #4]
 8005324:	609a      	str	r2, [r3, #8]
 8005326:	68fb      	ldr	r3, [r7, #12]
 8005328:	681b      	ldr	r3, [r3, #0]
 800532a:	68ba      	ldr	r2, [r7, #8]
 800532c:	60da      	str	r2, [r3, #12]
 800532e:	e007      	b.n	8005340 <DMA_SetConfig+0x50>
 8005330:	68fb      	ldr	r3, [r7, #12]
 8005332:	681b      	ldr	r3, [r3, #0]
 8005334:	68ba      	ldr	r2, [r7, #8]
 8005336:	609a      	str	r2, [r3, #8]
 8005338:	68fb      	ldr	r3, [r7, #12]
 800533a:	681b      	ldr	r3, [r3, #0]
 800533c:	687a      	ldr	r2, [r7, #4]
 800533e:	60da      	str	r2, [r3, #12]
 8005340:	bf00      	nop
 8005342:	3714      	adds	r7, #20
 8005344:	46bd      	mov	sp, r7
 8005346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800534a:	4770      	bx	lr

0800534c <DMA_CalcBaseAndBitshift>:
 800534c:	b480      	push	{r7}
 800534e:	b085      	sub	sp, #20
 8005350:	af00      	add	r7, sp, #0
 8005352:	6078      	str	r0, [r7, #4]
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	681b      	ldr	r3, [r3, #0]
 8005358:	b2db      	uxtb	r3, r3
 800535a:	3b10      	subs	r3, #16
 800535c:	4a14      	ldr	r2, [pc, #80]	; (80053b0 <DMA_CalcBaseAndBitshift+0x64>)
 800535e:	fba2 2303 	umull	r2, r3, r2, r3
 8005362:	091b      	lsrs	r3, r3, #4
 8005364:	60fb      	str	r3, [r7, #12]
 8005366:	4a13      	ldr	r2, [pc, #76]	; (80053b4 <DMA_CalcBaseAndBitshift+0x68>)
 8005368:	68fb      	ldr	r3, [r7, #12]
 800536a:	4413      	add	r3, r2
 800536c:	781b      	ldrb	r3, [r3, #0]
 800536e:	461a      	mov	r2, r3
 8005370:	687b      	ldr	r3, [r7, #4]
 8005372:	65da      	str	r2, [r3, #92]	; 0x5c
 8005374:	68fb      	ldr	r3, [r7, #12]
 8005376:	2b03      	cmp	r3, #3
 8005378:	d909      	bls.n	800538e <DMA_CalcBaseAndBitshift+0x42>
 800537a:	687b      	ldr	r3, [r7, #4]
 800537c:	681b      	ldr	r3, [r3, #0]
 800537e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8005382:	f023 0303 	bic.w	r3, r3, #3
 8005386:	1d1a      	adds	r2, r3, #4
 8005388:	687b      	ldr	r3, [r7, #4]
 800538a:	659a      	str	r2, [r3, #88]	; 0x58
 800538c:	e007      	b.n	800539e <DMA_CalcBaseAndBitshift+0x52>
 800538e:	687b      	ldr	r3, [r7, #4]
 8005390:	681b      	ldr	r3, [r3, #0]
 8005392:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8005396:	f023 0303 	bic.w	r3, r3, #3
 800539a:	687a      	ldr	r2, [r7, #4]
 800539c:	6593      	str	r3, [r2, #88]	; 0x58
 800539e:	687b      	ldr	r3, [r7, #4]
 80053a0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80053a2:	4618      	mov	r0, r3
 80053a4:	3714      	adds	r7, #20
 80053a6:	46bd      	mov	sp, r7
 80053a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053ac:	4770      	bx	lr
 80053ae:	bf00      	nop
 80053b0:	aaaaaaab 	.word	0xaaaaaaab
 80053b4:	0800bbd4 	.word	0x0800bbd4

080053b8 <DMA_CheckFifoParam>:
 80053b8:	b480      	push	{r7}
 80053ba:	b085      	sub	sp, #20
 80053bc:	af00      	add	r7, sp, #0
 80053be:	6078      	str	r0, [r7, #4]
 80053c0:	2300      	movs	r3, #0
 80053c2:	73fb      	strb	r3, [r7, #15]
 80053c4:	687b      	ldr	r3, [r7, #4]
 80053c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80053c8:	60bb      	str	r3, [r7, #8]
 80053ca:	687b      	ldr	r3, [r7, #4]
 80053cc:	699b      	ldr	r3, [r3, #24]
 80053ce:	2b00      	cmp	r3, #0
 80053d0:	d11f      	bne.n	8005412 <DMA_CheckFifoParam+0x5a>
 80053d2:	68bb      	ldr	r3, [r7, #8]
 80053d4:	2b03      	cmp	r3, #3
 80053d6:	d856      	bhi.n	8005486 <DMA_CheckFifoParam+0xce>
 80053d8:	a201      	add	r2, pc, #4	; (adr r2, 80053e0 <DMA_CheckFifoParam+0x28>)
 80053da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80053de:	bf00      	nop
 80053e0:	080053f1 	.word	0x080053f1
 80053e4:	08005403 	.word	0x08005403
 80053e8:	080053f1 	.word	0x080053f1
 80053ec:	08005487 	.word	0x08005487
 80053f0:	687b      	ldr	r3, [r7, #4]
 80053f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80053f4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80053f8:	2b00      	cmp	r3, #0
 80053fa:	d046      	beq.n	800548a <DMA_CheckFifoParam+0xd2>
 80053fc:	2301      	movs	r3, #1
 80053fe:	73fb      	strb	r3, [r7, #15]
 8005400:	e043      	b.n	800548a <DMA_CheckFifoParam+0xd2>
 8005402:	687b      	ldr	r3, [r7, #4]
 8005404:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005406:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 800540a:	d140      	bne.n	800548e <DMA_CheckFifoParam+0xd6>
 800540c:	2301      	movs	r3, #1
 800540e:	73fb      	strb	r3, [r7, #15]
 8005410:	e03d      	b.n	800548e <DMA_CheckFifoParam+0xd6>
 8005412:	687b      	ldr	r3, [r7, #4]
 8005414:	699b      	ldr	r3, [r3, #24]
 8005416:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800541a:	d121      	bne.n	8005460 <DMA_CheckFifoParam+0xa8>
 800541c:	68bb      	ldr	r3, [r7, #8]
 800541e:	2b03      	cmp	r3, #3
 8005420:	d837      	bhi.n	8005492 <DMA_CheckFifoParam+0xda>
 8005422:	a201      	add	r2, pc, #4	; (adr r2, 8005428 <DMA_CheckFifoParam+0x70>)
 8005424:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005428:	08005439 	.word	0x08005439
 800542c:	0800543f 	.word	0x0800543f
 8005430:	08005439 	.word	0x08005439
 8005434:	08005451 	.word	0x08005451
 8005438:	2301      	movs	r3, #1
 800543a:	73fb      	strb	r3, [r7, #15]
 800543c:	e030      	b.n	80054a0 <DMA_CheckFifoParam+0xe8>
 800543e:	687b      	ldr	r3, [r7, #4]
 8005440:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005442:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005446:	2b00      	cmp	r3, #0
 8005448:	d025      	beq.n	8005496 <DMA_CheckFifoParam+0xde>
 800544a:	2301      	movs	r3, #1
 800544c:	73fb      	strb	r3, [r7, #15]
 800544e:	e022      	b.n	8005496 <DMA_CheckFifoParam+0xde>
 8005450:	687b      	ldr	r3, [r7, #4]
 8005452:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005454:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8005458:	d11f      	bne.n	800549a <DMA_CheckFifoParam+0xe2>
 800545a:	2301      	movs	r3, #1
 800545c:	73fb      	strb	r3, [r7, #15]
 800545e:	e01c      	b.n	800549a <DMA_CheckFifoParam+0xe2>
 8005460:	68bb      	ldr	r3, [r7, #8]
 8005462:	2b02      	cmp	r3, #2
 8005464:	d903      	bls.n	800546e <DMA_CheckFifoParam+0xb6>
 8005466:	68bb      	ldr	r3, [r7, #8]
 8005468:	2b03      	cmp	r3, #3
 800546a:	d003      	beq.n	8005474 <DMA_CheckFifoParam+0xbc>
 800546c:	e018      	b.n	80054a0 <DMA_CheckFifoParam+0xe8>
 800546e:	2301      	movs	r3, #1
 8005470:	73fb      	strb	r3, [r7, #15]
 8005472:	e015      	b.n	80054a0 <DMA_CheckFifoParam+0xe8>
 8005474:	687b      	ldr	r3, [r7, #4]
 8005476:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005478:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800547c:	2b00      	cmp	r3, #0
 800547e:	d00e      	beq.n	800549e <DMA_CheckFifoParam+0xe6>
 8005480:	2301      	movs	r3, #1
 8005482:	73fb      	strb	r3, [r7, #15]
 8005484:	e00b      	b.n	800549e <DMA_CheckFifoParam+0xe6>
 8005486:	bf00      	nop
 8005488:	e00a      	b.n	80054a0 <DMA_CheckFifoParam+0xe8>
 800548a:	bf00      	nop
 800548c:	e008      	b.n	80054a0 <DMA_CheckFifoParam+0xe8>
 800548e:	bf00      	nop
 8005490:	e006      	b.n	80054a0 <DMA_CheckFifoParam+0xe8>
 8005492:	bf00      	nop
 8005494:	e004      	b.n	80054a0 <DMA_CheckFifoParam+0xe8>
 8005496:	bf00      	nop
 8005498:	e002      	b.n	80054a0 <DMA_CheckFifoParam+0xe8>
 800549a:	bf00      	nop
 800549c:	e000      	b.n	80054a0 <DMA_CheckFifoParam+0xe8>
 800549e:	bf00      	nop
 80054a0:	7bfb      	ldrb	r3, [r7, #15]
 80054a2:	4618      	mov	r0, r3
 80054a4:	3714      	adds	r7, #20
 80054a6:	46bd      	mov	sp, r7
 80054a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054ac:	4770      	bx	lr
 80054ae:	bf00      	nop

080054b0 <HAL_GPIO_Init>:
 80054b0:	b480      	push	{r7}
 80054b2:	b089      	sub	sp, #36	; 0x24
 80054b4:	af00      	add	r7, sp, #0
 80054b6:	6078      	str	r0, [r7, #4]
 80054b8:	6039      	str	r1, [r7, #0]
 80054ba:	2300      	movs	r3, #0
 80054bc:	617b      	str	r3, [r7, #20]
 80054be:	2300      	movs	r3, #0
 80054c0:	613b      	str	r3, [r7, #16]
 80054c2:	2300      	movs	r3, #0
 80054c4:	61bb      	str	r3, [r7, #24]
 80054c6:	2300      	movs	r3, #0
 80054c8:	61fb      	str	r3, [r7, #28]
 80054ca:	e159      	b.n	8005780 <HAL_GPIO_Init+0x2d0>
 80054cc:	2201      	movs	r2, #1
 80054ce:	69fb      	ldr	r3, [r7, #28]
 80054d0:	fa02 f303 	lsl.w	r3, r2, r3
 80054d4:	617b      	str	r3, [r7, #20]
 80054d6:	683b      	ldr	r3, [r7, #0]
 80054d8:	681b      	ldr	r3, [r3, #0]
 80054da:	697a      	ldr	r2, [r7, #20]
 80054dc:	4013      	ands	r3, r2
 80054de:	613b      	str	r3, [r7, #16]
 80054e0:	693a      	ldr	r2, [r7, #16]
 80054e2:	697b      	ldr	r3, [r7, #20]
 80054e4:	429a      	cmp	r2, r3
 80054e6:	f040 8148 	bne.w	800577a <HAL_GPIO_Init+0x2ca>
 80054ea:	683b      	ldr	r3, [r7, #0]
 80054ec:	685b      	ldr	r3, [r3, #4]
 80054ee:	f003 0303 	and.w	r3, r3, #3
 80054f2:	2b01      	cmp	r3, #1
 80054f4:	d005      	beq.n	8005502 <HAL_GPIO_Init+0x52>
 80054f6:	683b      	ldr	r3, [r7, #0]
 80054f8:	685b      	ldr	r3, [r3, #4]
 80054fa:	f003 0303 	and.w	r3, r3, #3
 80054fe:	2b02      	cmp	r3, #2
 8005500:	d130      	bne.n	8005564 <HAL_GPIO_Init+0xb4>
 8005502:	687b      	ldr	r3, [r7, #4]
 8005504:	689b      	ldr	r3, [r3, #8]
 8005506:	61bb      	str	r3, [r7, #24]
 8005508:	69fb      	ldr	r3, [r7, #28]
 800550a:	005b      	lsls	r3, r3, #1
 800550c:	2203      	movs	r2, #3
 800550e:	fa02 f303 	lsl.w	r3, r2, r3
 8005512:	43db      	mvns	r3, r3
 8005514:	69ba      	ldr	r2, [r7, #24]
 8005516:	4013      	ands	r3, r2
 8005518:	61bb      	str	r3, [r7, #24]
 800551a:	683b      	ldr	r3, [r7, #0]
 800551c:	68da      	ldr	r2, [r3, #12]
 800551e:	69fb      	ldr	r3, [r7, #28]
 8005520:	005b      	lsls	r3, r3, #1
 8005522:	fa02 f303 	lsl.w	r3, r2, r3
 8005526:	69ba      	ldr	r2, [r7, #24]
 8005528:	4313      	orrs	r3, r2
 800552a:	61bb      	str	r3, [r7, #24]
 800552c:	687b      	ldr	r3, [r7, #4]
 800552e:	69ba      	ldr	r2, [r7, #24]
 8005530:	609a      	str	r2, [r3, #8]
 8005532:	687b      	ldr	r3, [r7, #4]
 8005534:	685b      	ldr	r3, [r3, #4]
 8005536:	61bb      	str	r3, [r7, #24]
 8005538:	2201      	movs	r2, #1
 800553a:	69fb      	ldr	r3, [r7, #28]
 800553c:	fa02 f303 	lsl.w	r3, r2, r3
 8005540:	43db      	mvns	r3, r3
 8005542:	69ba      	ldr	r2, [r7, #24]
 8005544:	4013      	ands	r3, r2
 8005546:	61bb      	str	r3, [r7, #24]
 8005548:	683b      	ldr	r3, [r7, #0]
 800554a:	685b      	ldr	r3, [r3, #4]
 800554c:	091b      	lsrs	r3, r3, #4
 800554e:	f003 0201 	and.w	r2, r3, #1
 8005552:	69fb      	ldr	r3, [r7, #28]
 8005554:	fa02 f303 	lsl.w	r3, r2, r3
 8005558:	69ba      	ldr	r2, [r7, #24]
 800555a:	4313      	orrs	r3, r2
 800555c:	61bb      	str	r3, [r7, #24]
 800555e:	687b      	ldr	r3, [r7, #4]
 8005560:	69ba      	ldr	r2, [r7, #24]
 8005562:	605a      	str	r2, [r3, #4]
 8005564:	683b      	ldr	r3, [r7, #0]
 8005566:	685b      	ldr	r3, [r3, #4]
 8005568:	f003 0303 	and.w	r3, r3, #3
 800556c:	2b03      	cmp	r3, #3
 800556e:	d017      	beq.n	80055a0 <HAL_GPIO_Init+0xf0>
 8005570:	687b      	ldr	r3, [r7, #4]
 8005572:	68db      	ldr	r3, [r3, #12]
 8005574:	61bb      	str	r3, [r7, #24]
 8005576:	69fb      	ldr	r3, [r7, #28]
 8005578:	005b      	lsls	r3, r3, #1
 800557a:	2203      	movs	r2, #3
 800557c:	fa02 f303 	lsl.w	r3, r2, r3
 8005580:	43db      	mvns	r3, r3
 8005582:	69ba      	ldr	r2, [r7, #24]
 8005584:	4013      	ands	r3, r2
 8005586:	61bb      	str	r3, [r7, #24]
 8005588:	683b      	ldr	r3, [r7, #0]
 800558a:	689a      	ldr	r2, [r3, #8]
 800558c:	69fb      	ldr	r3, [r7, #28]
 800558e:	005b      	lsls	r3, r3, #1
 8005590:	fa02 f303 	lsl.w	r3, r2, r3
 8005594:	69ba      	ldr	r2, [r7, #24]
 8005596:	4313      	orrs	r3, r2
 8005598:	61bb      	str	r3, [r7, #24]
 800559a:	687b      	ldr	r3, [r7, #4]
 800559c:	69ba      	ldr	r2, [r7, #24]
 800559e:	60da      	str	r2, [r3, #12]
 80055a0:	683b      	ldr	r3, [r7, #0]
 80055a2:	685b      	ldr	r3, [r3, #4]
 80055a4:	f003 0303 	and.w	r3, r3, #3
 80055a8:	2b02      	cmp	r3, #2
 80055aa:	d123      	bne.n	80055f4 <HAL_GPIO_Init+0x144>
 80055ac:	69fb      	ldr	r3, [r7, #28]
 80055ae:	08da      	lsrs	r2, r3, #3
 80055b0:	687b      	ldr	r3, [r7, #4]
 80055b2:	3208      	adds	r2, #8
 80055b4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80055b8:	61bb      	str	r3, [r7, #24]
 80055ba:	69fb      	ldr	r3, [r7, #28]
 80055bc:	f003 0307 	and.w	r3, r3, #7
 80055c0:	009b      	lsls	r3, r3, #2
 80055c2:	220f      	movs	r2, #15
 80055c4:	fa02 f303 	lsl.w	r3, r2, r3
 80055c8:	43db      	mvns	r3, r3
 80055ca:	69ba      	ldr	r2, [r7, #24]
 80055cc:	4013      	ands	r3, r2
 80055ce:	61bb      	str	r3, [r7, #24]
 80055d0:	683b      	ldr	r3, [r7, #0]
 80055d2:	691a      	ldr	r2, [r3, #16]
 80055d4:	69fb      	ldr	r3, [r7, #28]
 80055d6:	f003 0307 	and.w	r3, r3, #7
 80055da:	009b      	lsls	r3, r3, #2
 80055dc:	fa02 f303 	lsl.w	r3, r2, r3
 80055e0:	69ba      	ldr	r2, [r7, #24]
 80055e2:	4313      	orrs	r3, r2
 80055e4:	61bb      	str	r3, [r7, #24]
 80055e6:	69fb      	ldr	r3, [r7, #28]
 80055e8:	08da      	lsrs	r2, r3, #3
 80055ea:	687b      	ldr	r3, [r7, #4]
 80055ec:	3208      	adds	r2, #8
 80055ee:	69b9      	ldr	r1, [r7, #24]
 80055f0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80055f4:	687b      	ldr	r3, [r7, #4]
 80055f6:	681b      	ldr	r3, [r3, #0]
 80055f8:	61bb      	str	r3, [r7, #24]
 80055fa:	69fb      	ldr	r3, [r7, #28]
 80055fc:	005b      	lsls	r3, r3, #1
 80055fe:	2203      	movs	r2, #3
 8005600:	fa02 f303 	lsl.w	r3, r2, r3
 8005604:	43db      	mvns	r3, r3
 8005606:	69ba      	ldr	r2, [r7, #24]
 8005608:	4013      	ands	r3, r2
 800560a:	61bb      	str	r3, [r7, #24]
 800560c:	683b      	ldr	r3, [r7, #0]
 800560e:	685b      	ldr	r3, [r3, #4]
 8005610:	f003 0203 	and.w	r2, r3, #3
 8005614:	69fb      	ldr	r3, [r7, #28]
 8005616:	005b      	lsls	r3, r3, #1
 8005618:	fa02 f303 	lsl.w	r3, r2, r3
 800561c:	69ba      	ldr	r2, [r7, #24]
 800561e:	4313      	orrs	r3, r2
 8005620:	61bb      	str	r3, [r7, #24]
 8005622:	687b      	ldr	r3, [r7, #4]
 8005624:	69ba      	ldr	r2, [r7, #24]
 8005626:	601a      	str	r2, [r3, #0]
 8005628:	683b      	ldr	r3, [r7, #0]
 800562a:	685b      	ldr	r3, [r3, #4]
 800562c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005630:	2b00      	cmp	r3, #0
 8005632:	f000 80a2 	beq.w	800577a <HAL_GPIO_Init+0x2ca>
 8005636:	2300      	movs	r3, #0
 8005638:	60fb      	str	r3, [r7, #12]
 800563a:	4b57      	ldr	r3, [pc, #348]	; (8005798 <HAL_GPIO_Init+0x2e8>)
 800563c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800563e:	4a56      	ldr	r2, [pc, #344]	; (8005798 <HAL_GPIO_Init+0x2e8>)
 8005640:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005644:	6453      	str	r3, [r2, #68]	; 0x44
 8005646:	4b54      	ldr	r3, [pc, #336]	; (8005798 <HAL_GPIO_Init+0x2e8>)
 8005648:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800564a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800564e:	60fb      	str	r3, [r7, #12]
 8005650:	68fb      	ldr	r3, [r7, #12]
 8005652:	4a52      	ldr	r2, [pc, #328]	; (800579c <HAL_GPIO_Init+0x2ec>)
 8005654:	69fb      	ldr	r3, [r7, #28]
 8005656:	089b      	lsrs	r3, r3, #2
 8005658:	3302      	adds	r3, #2
 800565a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800565e:	61bb      	str	r3, [r7, #24]
 8005660:	69fb      	ldr	r3, [r7, #28]
 8005662:	f003 0303 	and.w	r3, r3, #3
 8005666:	009b      	lsls	r3, r3, #2
 8005668:	220f      	movs	r2, #15
 800566a:	fa02 f303 	lsl.w	r3, r2, r3
 800566e:	43db      	mvns	r3, r3
 8005670:	69ba      	ldr	r2, [r7, #24]
 8005672:	4013      	ands	r3, r2
 8005674:	61bb      	str	r3, [r7, #24]
 8005676:	687b      	ldr	r3, [r7, #4]
 8005678:	4a49      	ldr	r2, [pc, #292]	; (80057a0 <HAL_GPIO_Init+0x2f0>)
 800567a:	4293      	cmp	r3, r2
 800567c:	d019      	beq.n	80056b2 <HAL_GPIO_Init+0x202>
 800567e:	687b      	ldr	r3, [r7, #4]
 8005680:	4a48      	ldr	r2, [pc, #288]	; (80057a4 <HAL_GPIO_Init+0x2f4>)
 8005682:	4293      	cmp	r3, r2
 8005684:	d013      	beq.n	80056ae <HAL_GPIO_Init+0x1fe>
 8005686:	687b      	ldr	r3, [r7, #4]
 8005688:	4a47      	ldr	r2, [pc, #284]	; (80057a8 <HAL_GPIO_Init+0x2f8>)
 800568a:	4293      	cmp	r3, r2
 800568c:	d00d      	beq.n	80056aa <HAL_GPIO_Init+0x1fa>
 800568e:	687b      	ldr	r3, [r7, #4]
 8005690:	4a46      	ldr	r2, [pc, #280]	; (80057ac <HAL_GPIO_Init+0x2fc>)
 8005692:	4293      	cmp	r3, r2
 8005694:	d007      	beq.n	80056a6 <HAL_GPIO_Init+0x1f6>
 8005696:	687b      	ldr	r3, [r7, #4]
 8005698:	4a45      	ldr	r2, [pc, #276]	; (80057b0 <HAL_GPIO_Init+0x300>)
 800569a:	4293      	cmp	r3, r2
 800569c:	d101      	bne.n	80056a2 <HAL_GPIO_Init+0x1f2>
 800569e:	2304      	movs	r3, #4
 80056a0:	e008      	b.n	80056b4 <HAL_GPIO_Init+0x204>
 80056a2:	2307      	movs	r3, #7
 80056a4:	e006      	b.n	80056b4 <HAL_GPIO_Init+0x204>
 80056a6:	2303      	movs	r3, #3
 80056a8:	e004      	b.n	80056b4 <HAL_GPIO_Init+0x204>
 80056aa:	2302      	movs	r3, #2
 80056ac:	e002      	b.n	80056b4 <HAL_GPIO_Init+0x204>
 80056ae:	2301      	movs	r3, #1
 80056b0:	e000      	b.n	80056b4 <HAL_GPIO_Init+0x204>
 80056b2:	2300      	movs	r3, #0
 80056b4:	69fa      	ldr	r2, [r7, #28]
 80056b6:	f002 0203 	and.w	r2, r2, #3
 80056ba:	0092      	lsls	r2, r2, #2
 80056bc:	4093      	lsls	r3, r2
 80056be:	69ba      	ldr	r2, [r7, #24]
 80056c0:	4313      	orrs	r3, r2
 80056c2:	61bb      	str	r3, [r7, #24]
 80056c4:	4935      	ldr	r1, [pc, #212]	; (800579c <HAL_GPIO_Init+0x2ec>)
 80056c6:	69fb      	ldr	r3, [r7, #28]
 80056c8:	089b      	lsrs	r3, r3, #2
 80056ca:	3302      	adds	r3, #2
 80056cc:	69ba      	ldr	r2, [r7, #24]
 80056ce:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80056d2:	4b38      	ldr	r3, [pc, #224]	; (80057b4 <HAL_GPIO_Init+0x304>)
 80056d4:	689b      	ldr	r3, [r3, #8]
 80056d6:	61bb      	str	r3, [r7, #24]
 80056d8:	693b      	ldr	r3, [r7, #16]
 80056da:	43db      	mvns	r3, r3
 80056dc:	69ba      	ldr	r2, [r7, #24]
 80056de:	4013      	ands	r3, r2
 80056e0:	61bb      	str	r3, [r7, #24]
 80056e2:	683b      	ldr	r3, [r7, #0]
 80056e4:	685b      	ldr	r3, [r3, #4]
 80056e6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80056ea:	2b00      	cmp	r3, #0
 80056ec:	d003      	beq.n	80056f6 <HAL_GPIO_Init+0x246>
 80056ee:	69ba      	ldr	r2, [r7, #24]
 80056f0:	693b      	ldr	r3, [r7, #16]
 80056f2:	4313      	orrs	r3, r2
 80056f4:	61bb      	str	r3, [r7, #24]
 80056f6:	4a2f      	ldr	r2, [pc, #188]	; (80057b4 <HAL_GPIO_Init+0x304>)
 80056f8:	69bb      	ldr	r3, [r7, #24]
 80056fa:	6093      	str	r3, [r2, #8]
 80056fc:	4b2d      	ldr	r3, [pc, #180]	; (80057b4 <HAL_GPIO_Init+0x304>)
 80056fe:	68db      	ldr	r3, [r3, #12]
 8005700:	61bb      	str	r3, [r7, #24]
 8005702:	693b      	ldr	r3, [r7, #16]
 8005704:	43db      	mvns	r3, r3
 8005706:	69ba      	ldr	r2, [r7, #24]
 8005708:	4013      	ands	r3, r2
 800570a:	61bb      	str	r3, [r7, #24]
 800570c:	683b      	ldr	r3, [r7, #0]
 800570e:	685b      	ldr	r3, [r3, #4]
 8005710:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005714:	2b00      	cmp	r3, #0
 8005716:	d003      	beq.n	8005720 <HAL_GPIO_Init+0x270>
 8005718:	69ba      	ldr	r2, [r7, #24]
 800571a:	693b      	ldr	r3, [r7, #16]
 800571c:	4313      	orrs	r3, r2
 800571e:	61bb      	str	r3, [r7, #24]
 8005720:	4a24      	ldr	r2, [pc, #144]	; (80057b4 <HAL_GPIO_Init+0x304>)
 8005722:	69bb      	ldr	r3, [r7, #24]
 8005724:	60d3      	str	r3, [r2, #12]
 8005726:	4b23      	ldr	r3, [pc, #140]	; (80057b4 <HAL_GPIO_Init+0x304>)
 8005728:	685b      	ldr	r3, [r3, #4]
 800572a:	61bb      	str	r3, [r7, #24]
 800572c:	693b      	ldr	r3, [r7, #16]
 800572e:	43db      	mvns	r3, r3
 8005730:	69ba      	ldr	r2, [r7, #24]
 8005732:	4013      	ands	r3, r2
 8005734:	61bb      	str	r3, [r7, #24]
 8005736:	683b      	ldr	r3, [r7, #0]
 8005738:	685b      	ldr	r3, [r3, #4]
 800573a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800573e:	2b00      	cmp	r3, #0
 8005740:	d003      	beq.n	800574a <HAL_GPIO_Init+0x29a>
 8005742:	69ba      	ldr	r2, [r7, #24]
 8005744:	693b      	ldr	r3, [r7, #16]
 8005746:	4313      	orrs	r3, r2
 8005748:	61bb      	str	r3, [r7, #24]
 800574a:	4a1a      	ldr	r2, [pc, #104]	; (80057b4 <HAL_GPIO_Init+0x304>)
 800574c:	69bb      	ldr	r3, [r7, #24]
 800574e:	6053      	str	r3, [r2, #4]
 8005750:	4b18      	ldr	r3, [pc, #96]	; (80057b4 <HAL_GPIO_Init+0x304>)
 8005752:	681b      	ldr	r3, [r3, #0]
 8005754:	61bb      	str	r3, [r7, #24]
 8005756:	693b      	ldr	r3, [r7, #16]
 8005758:	43db      	mvns	r3, r3
 800575a:	69ba      	ldr	r2, [r7, #24]
 800575c:	4013      	ands	r3, r2
 800575e:	61bb      	str	r3, [r7, #24]
 8005760:	683b      	ldr	r3, [r7, #0]
 8005762:	685b      	ldr	r3, [r3, #4]
 8005764:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005768:	2b00      	cmp	r3, #0
 800576a:	d003      	beq.n	8005774 <HAL_GPIO_Init+0x2c4>
 800576c:	69ba      	ldr	r2, [r7, #24]
 800576e:	693b      	ldr	r3, [r7, #16]
 8005770:	4313      	orrs	r3, r2
 8005772:	61bb      	str	r3, [r7, #24]
 8005774:	4a0f      	ldr	r2, [pc, #60]	; (80057b4 <HAL_GPIO_Init+0x304>)
 8005776:	69bb      	ldr	r3, [r7, #24]
 8005778:	6013      	str	r3, [r2, #0]
 800577a:	69fb      	ldr	r3, [r7, #28]
 800577c:	3301      	adds	r3, #1
 800577e:	61fb      	str	r3, [r7, #28]
 8005780:	69fb      	ldr	r3, [r7, #28]
 8005782:	2b0f      	cmp	r3, #15
 8005784:	f67f aea2 	bls.w	80054cc <HAL_GPIO_Init+0x1c>
 8005788:	bf00      	nop
 800578a:	bf00      	nop
 800578c:	3724      	adds	r7, #36	; 0x24
 800578e:	46bd      	mov	sp, r7
 8005790:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005794:	4770      	bx	lr
 8005796:	bf00      	nop
 8005798:	40023800 	.word	0x40023800
 800579c:	40013800 	.word	0x40013800
 80057a0:	40020000 	.word	0x40020000
 80057a4:	40020400 	.word	0x40020400
 80057a8:	40020800 	.word	0x40020800
 80057ac:	40020c00 	.word	0x40020c00
 80057b0:	40021000 	.word	0x40021000
 80057b4:	40013c00 	.word	0x40013c00

080057b8 <HAL_GPIO_ReadPin>:
 80057b8:	b480      	push	{r7}
 80057ba:	b085      	sub	sp, #20
 80057bc:	af00      	add	r7, sp, #0
 80057be:	6078      	str	r0, [r7, #4]
 80057c0:	460b      	mov	r3, r1
 80057c2:	807b      	strh	r3, [r7, #2]
 80057c4:	687b      	ldr	r3, [r7, #4]
 80057c6:	691a      	ldr	r2, [r3, #16]
 80057c8:	887b      	ldrh	r3, [r7, #2]
 80057ca:	4013      	ands	r3, r2
 80057cc:	2b00      	cmp	r3, #0
 80057ce:	d002      	beq.n	80057d6 <HAL_GPIO_ReadPin+0x1e>
 80057d0:	2301      	movs	r3, #1
 80057d2:	73fb      	strb	r3, [r7, #15]
 80057d4:	e001      	b.n	80057da <HAL_GPIO_ReadPin+0x22>
 80057d6:	2300      	movs	r3, #0
 80057d8:	73fb      	strb	r3, [r7, #15]
 80057da:	7bfb      	ldrb	r3, [r7, #15]
 80057dc:	4618      	mov	r0, r3
 80057de:	3714      	adds	r7, #20
 80057e0:	46bd      	mov	sp, r7
 80057e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057e6:	4770      	bx	lr

080057e8 <HAL_GPIO_WritePin>:
 80057e8:	b480      	push	{r7}
 80057ea:	b083      	sub	sp, #12
 80057ec:	af00      	add	r7, sp, #0
 80057ee:	6078      	str	r0, [r7, #4]
 80057f0:	460b      	mov	r3, r1
 80057f2:	807b      	strh	r3, [r7, #2]
 80057f4:	4613      	mov	r3, r2
 80057f6:	707b      	strb	r3, [r7, #1]
 80057f8:	787b      	ldrb	r3, [r7, #1]
 80057fa:	2b00      	cmp	r3, #0
 80057fc:	d003      	beq.n	8005806 <HAL_GPIO_WritePin+0x1e>
 80057fe:	887a      	ldrh	r2, [r7, #2]
 8005800:	687b      	ldr	r3, [r7, #4]
 8005802:	619a      	str	r2, [r3, #24]
 8005804:	e003      	b.n	800580e <HAL_GPIO_WritePin+0x26>
 8005806:	887b      	ldrh	r3, [r7, #2]
 8005808:	041a      	lsls	r2, r3, #16
 800580a:	687b      	ldr	r3, [r7, #4]
 800580c:	619a      	str	r2, [r3, #24]
 800580e:	bf00      	nop
 8005810:	370c      	adds	r7, #12
 8005812:	46bd      	mov	sp, r7
 8005814:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005818:	4770      	bx	lr
	...

0800581c <HAL_GPIO_EXTI_IRQHandler>:
 800581c:	b580      	push	{r7, lr}
 800581e:	b082      	sub	sp, #8
 8005820:	af00      	add	r7, sp, #0
 8005822:	4603      	mov	r3, r0
 8005824:	80fb      	strh	r3, [r7, #6]
 8005826:	4b08      	ldr	r3, [pc, #32]	; (8005848 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8005828:	695a      	ldr	r2, [r3, #20]
 800582a:	88fb      	ldrh	r3, [r7, #6]
 800582c:	4013      	ands	r3, r2
 800582e:	2b00      	cmp	r3, #0
 8005830:	d006      	beq.n	8005840 <HAL_GPIO_EXTI_IRQHandler+0x24>
 8005832:	4a05      	ldr	r2, [pc, #20]	; (8005848 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8005834:	88fb      	ldrh	r3, [r7, #6]
 8005836:	6153      	str	r3, [r2, #20]
 8005838:	88fb      	ldrh	r3, [r7, #6]
 800583a:	4618      	mov	r0, r3
 800583c:	f7fd ff12 	bl	8003664 <HAL_GPIO_EXTI_Callback>
 8005840:	bf00      	nop
 8005842:	3708      	adds	r7, #8
 8005844:	46bd      	mov	sp, r7
 8005846:	bd80      	pop	{r7, pc}
 8005848:	40013c00 	.word	0x40013c00

0800584c <HAL_I2C_Init>:
 800584c:	b580      	push	{r7, lr}
 800584e:	b084      	sub	sp, #16
 8005850:	af00      	add	r7, sp, #0
 8005852:	6078      	str	r0, [r7, #4]
 8005854:	687b      	ldr	r3, [r7, #4]
 8005856:	2b00      	cmp	r3, #0
 8005858:	d101      	bne.n	800585e <HAL_I2C_Init+0x12>
 800585a:	2301      	movs	r3, #1
 800585c:	e12b      	b.n	8005ab6 <HAL_I2C_Init+0x26a>
 800585e:	687b      	ldr	r3, [r7, #4]
 8005860:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005864:	b2db      	uxtb	r3, r3
 8005866:	2b00      	cmp	r3, #0
 8005868:	d106      	bne.n	8005878 <HAL_I2C_Init+0x2c>
 800586a:	687b      	ldr	r3, [r7, #4]
 800586c:	2200      	movs	r2, #0
 800586e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005872:	6878      	ldr	r0, [r7, #4]
 8005874:	f7fe fd70 	bl	8004358 <HAL_I2C_MspInit>
 8005878:	687b      	ldr	r3, [r7, #4]
 800587a:	2224      	movs	r2, #36	; 0x24
 800587c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005880:	687b      	ldr	r3, [r7, #4]
 8005882:	681b      	ldr	r3, [r3, #0]
 8005884:	681a      	ldr	r2, [r3, #0]
 8005886:	687b      	ldr	r3, [r7, #4]
 8005888:	681b      	ldr	r3, [r3, #0]
 800588a:	f022 0201 	bic.w	r2, r2, #1
 800588e:	601a      	str	r2, [r3, #0]
 8005890:	687b      	ldr	r3, [r7, #4]
 8005892:	681b      	ldr	r3, [r3, #0]
 8005894:	681a      	ldr	r2, [r3, #0]
 8005896:	687b      	ldr	r3, [r7, #4]
 8005898:	681b      	ldr	r3, [r3, #0]
 800589a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800589e:	601a      	str	r2, [r3, #0]
 80058a0:	687b      	ldr	r3, [r7, #4]
 80058a2:	681b      	ldr	r3, [r3, #0]
 80058a4:	681a      	ldr	r2, [r3, #0]
 80058a6:	687b      	ldr	r3, [r7, #4]
 80058a8:	681b      	ldr	r3, [r3, #0]
 80058aa:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80058ae:	601a      	str	r2, [r3, #0]
 80058b0:	f003 f8ac 	bl	8008a0c <HAL_RCC_GetPCLK1Freq>
 80058b4:	60f8      	str	r0, [r7, #12]
 80058b6:	687b      	ldr	r3, [r7, #4]
 80058b8:	685b      	ldr	r3, [r3, #4]
 80058ba:	4a81      	ldr	r2, [pc, #516]	; (8005ac0 <HAL_I2C_Init+0x274>)
 80058bc:	4293      	cmp	r3, r2
 80058be:	d807      	bhi.n	80058d0 <HAL_I2C_Init+0x84>
 80058c0:	68fb      	ldr	r3, [r7, #12]
 80058c2:	4a80      	ldr	r2, [pc, #512]	; (8005ac4 <HAL_I2C_Init+0x278>)
 80058c4:	4293      	cmp	r3, r2
 80058c6:	bf94      	ite	ls
 80058c8:	2301      	movls	r3, #1
 80058ca:	2300      	movhi	r3, #0
 80058cc:	b2db      	uxtb	r3, r3
 80058ce:	e006      	b.n	80058de <HAL_I2C_Init+0x92>
 80058d0:	68fb      	ldr	r3, [r7, #12]
 80058d2:	4a7d      	ldr	r2, [pc, #500]	; (8005ac8 <HAL_I2C_Init+0x27c>)
 80058d4:	4293      	cmp	r3, r2
 80058d6:	bf94      	ite	ls
 80058d8:	2301      	movls	r3, #1
 80058da:	2300      	movhi	r3, #0
 80058dc:	b2db      	uxtb	r3, r3
 80058de:	2b00      	cmp	r3, #0
 80058e0:	d001      	beq.n	80058e6 <HAL_I2C_Init+0x9a>
 80058e2:	2301      	movs	r3, #1
 80058e4:	e0e7      	b.n	8005ab6 <HAL_I2C_Init+0x26a>
 80058e6:	68fb      	ldr	r3, [r7, #12]
 80058e8:	4a78      	ldr	r2, [pc, #480]	; (8005acc <HAL_I2C_Init+0x280>)
 80058ea:	fba2 2303 	umull	r2, r3, r2, r3
 80058ee:	0c9b      	lsrs	r3, r3, #18
 80058f0:	60bb      	str	r3, [r7, #8]
 80058f2:	687b      	ldr	r3, [r7, #4]
 80058f4:	681b      	ldr	r3, [r3, #0]
 80058f6:	685b      	ldr	r3, [r3, #4]
 80058f8:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 80058fc:	687b      	ldr	r3, [r7, #4]
 80058fe:	681b      	ldr	r3, [r3, #0]
 8005900:	68ba      	ldr	r2, [r7, #8]
 8005902:	430a      	orrs	r2, r1
 8005904:	605a      	str	r2, [r3, #4]
 8005906:	687b      	ldr	r3, [r7, #4]
 8005908:	681b      	ldr	r3, [r3, #0]
 800590a:	6a1b      	ldr	r3, [r3, #32]
 800590c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8005910:	687b      	ldr	r3, [r7, #4]
 8005912:	685b      	ldr	r3, [r3, #4]
 8005914:	4a6a      	ldr	r2, [pc, #424]	; (8005ac0 <HAL_I2C_Init+0x274>)
 8005916:	4293      	cmp	r3, r2
 8005918:	d802      	bhi.n	8005920 <HAL_I2C_Init+0xd4>
 800591a:	68bb      	ldr	r3, [r7, #8]
 800591c:	3301      	adds	r3, #1
 800591e:	e009      	b.n	8005934 <HAL_I2C_Init+0xe8>
 8005920:	68bb      	ldr	r3, [r7, #8]
 8005922:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8005926:	fb02 f303 	mul.w	r3, r2, r3
 800592a:	4a69      	ldr	r2, [pc, #420]	; (8005ad0 <HAL_I2C_Init+0x284>)
 800592c:	fba2 2303 	umull	r2, r3, r2, r3
 8005930:	099b      	lsrs	r3, r3, #6
 8005932:	3301      	adds	r3, #1
 8005934:	687a      	ldr	r2, [r7, #4]
 8005936:	6812      	ldr	r2, [r2, #0]
 8005938:	430b      	orrs	r3, r1
 800593a:	6213      	str	r3, [r2, #32]
 800593c:	687b      	ldr	r3, [r7, #4]
 800593e:	681b      	ldr	r3, [r3, #0]
 8005940:	69db      	ldr	r3, [r3, #28]
 8005942:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8005946:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800594a:	687b      	ldr	r3, [r7, #4]
 800594c:	685b      	ldr	r3, [r3, #4]
 800594e:	495c      	ldr	r1, [pc, #368]	; (8005ac0 <HAL_I2C_Init+0x274>)
 8005950:	428b      	cmp	r3, r1
 8005952:	d819      	bhi.n	8005988 <HAL_I2C_Init+0x13c>
 8005954:	68fb      	ldr	r3, [r7, #12]
 8005956:	1e59      	subs	r1, r3, #1
 8005958:	687b      	ldr	r3, [r7, #4]
 800595a:	685b      	ldr	r3, [r3, #4]
 800595c:	005b      	lsls	r3, r3, #1
 800595e:	fbb1 f3f3 	udiv	r3, r1, r3
 8005962:	1c59      	adds	r1, r3, #1
 8005964:	f640 73fc 	movw	r3, #4092	; 0xffc
 8005968:	400b      	ands	r3, r1
 800596a:	2b00      	cmp	r3, #0
 800596c:	d00a      	beq.n	8005984 <HAL_I2C_Init+0x138>
 800596e:	68fb      	ldr	r3, [r7, #12]
 8005970:	1e59      	subs	r1, r3, #1
 8005972:	687b      	ldr	r3, [r7, #4]
 8005974:	685b      	ldr	r3, [r3, #4]
 8005976:	005b      	lsls	r3, r3, #1
 8005978:	fbb1 f3f3 	udiv	r3, r1, r3
 800597c:	3301      	adds	r3, #1
 800597e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005982:	e051      	b.n	8005a28 <HAL_I2C_Init+0x1dc>
 8005984:	2304      	movs	r3, #4
 8005986:	e04f      	b.n	8005a28 <HAL_I2C_Init+0x1dc>
 8005988:	687b      	ldr	r3, [r7, #4]
 800598a:	689b      	ldr	r3, [r3, #8]
 800598c:	2b00      	cmp	r3, #0
 800598e:	d111      	bne.n	80059b4 <HAL_I2C_Init+0x168>
 8005990:	68fb      	ldr	r3, [r7, #12]
 8005992:	1e58      	subs	r0, r3, #1
 8005994:	687b      	ldr	r3, [r7, #4]
 8005996:	6859      	ldr	r1, [r3, #4]
 8005998:	460b      	mov	r3, r1
 800599a:	005b      	lsls	r3, r3, #1
 800599c:	440b      	add	r3, r1
 800599e:	fbb0 f3f3 	udiv	r3, r0, r3
 80059a2:	3301      	adds	r3, #1
 80059a4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80059a8:	2b00      	cmp	r3, #0
 80059aa:	bf0c      	ite	eq
 80059ac:	2301      	moveq	r3, #1
 80059ae:	2300      	movne	r3, #0
 80059b0:	b2db      	uxtb	r3, r3
 80059b2:	e012      	b.n	80059da <HAL_I2C_Init+0x18e>
 80059b4:	68fb      	ldr	r3, [r7, #12]
 80059b6:	1e58      	subs	r0, r3, #1
 80059b8:	687b      	ldr	r3, [r7, #4]
 80059ba:	6859      	ldr	r1, [r3, #4]
 80059bc:	460b      	mov	r3, r1
 80059be:	009b      	lsls	r3, r3, #2
 80059c0:	440b      	add	r3, r1
 80059c2:	0099      	lsls	r1, r3, #2
 80059c4:	440b      	add	r3, r1
 80059c6:	fbb0 f3f3 	udiv	r3, r0, r3
 80059ca:	3301      	adds	r3, #1
 80059cc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80059d0:	2b00      	cmp	r3, #0
 80059d2:	bf0c      	ite	eq
 80059d4:	2301      	moveq	r3, #1
 80059d6:	2300      	movne	r3, #0
 80059d8:	b2db      	uxtb	r3, r3
 80059da:	2b00      	cmp	r3, #0
 80059dc:	d001      	beq.n	80059e2 <HAL_I2C_Init+0x196>
 80059de:	2301      	movs	r3, #1
 80059e0:	e022      	b.n	8005a28 <HAL_I2C_Init+0x1dc>
 80059e2:	687b      	ldr	r3, [r7, #4]
 80059e4:	689b      	ldr	r3, [r3, #8]
 80059e6:	2b00      	cmp	r3, #0
 80059e8:	d10e      	bne.n	8005a08 <HAL_I2C_Init+0x1bc>
 80059ea:	68fb      	ldr	r3, [r7, #12]
 80059ec:	1e58      	subs	r0, r3, #1
 80059ee:	687b      	ldr	r3, [r7, #4]
 80059f0:	6859      	ldr	r1, [r3, #4]
 80059f2:	460b      	mov	r3, r1
 80059f4:	005b      	lsls	r3, r3, #1
 80059f6:	440b      	add	r3, r1
 80059f8:	fbb0 f3f3 	udiv	r3, r0, r3
 80059fc:	3301      	adds	r3, #1
 80059fe:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005a02:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005a06:	e00f      	b.n	8005a28 <HAL_I2C_Init+0x1dc>
 8005a08:	68fb      	ldr	r3, [r7, #12]
 8005a0a:	1e58      	subs	r0, r3, #1
 8005a0c:	687b      	ldr	r3, [r7, #4]
 8005a0e:	6859      	ldr	r1, [r3, #4]
 8005a10:	460b      	mov	r3, r1
 8005a12:	009b      	lsls	r3, r3, #2
 8005a14:	440b      	add	r3, r1
 8005a16:	0099      	lsls	r1, r3, #2
 8005a18:	440b      	add	r3, r1
 8005a1a:	fbb0 f3f3 	udiv	r3, r0, r3
 8005a1e:	3301      	adds	r3, #1
 8005a20:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005a24:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005a28:	6879      	ldr	r1, [r7, #4]
 8005a2a:	6809      	ldr	r1, [r1, #0]
 8005a2c:	4313      	orrs	r3, r2
 8005a2e:	61cb      	str	r3, [r1, #28]
 8005a30:	687b      	ldr	r3, [r7, #4]
 8005a32:	681b      	ldr	r3, [r3, #0]
 8005a34:	681b      	ldr	r3, [r3, #0]
 8005a36:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8005a3a:	687b      	ldr	r3, [r7, #4]
 8005a3c:	69da      	ldr	r2, [r3, #28]
 8005a3e:	687b      	ldr	r3, [r7, #4]
 8005a40:	6a1b      	ldr	r3, [r3, #32]
 8005a42:	431a      	orrs	r2, r3
 8005a44:	687b      	ldr	r3, [r7, #4]
 8005a46:	681b      	ldr	r3, [r3, #0]
 8005a48:	430a      	orrs	r2, r1
 8005a4a:	601a      	str	r2, [r3, #0]
 8005a4c:	687b      	ldr	r3, [r7, #4]
 8005a4e:	681b      	ldr	r3, [r3, #0]
 8005a50:	689b      	ldr	r3, [r3, #8]
 8005a52:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8005a56:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8005a5a:	687a      	ldr	r2, [r7, #4]
 8005a5c:	6911      	ldr	r1, [r2, #16]
 8005a5e:	687a      	ldr	r2, [r7, #4]
 8005a60:	68d2      	ldr	r2, [r2, #12]
 8005a62:	4311      	orrs	r1, r2
 8005a64:	687a      	ldr	r2, [r7, #4]
 8005a66:	6812      	ldr	r2, [r2, #0]
 8005a68:	430b      	orrs	r3, r1
 8005a6a:	6093      	str	r3, [r2, #8]
 8005a6c:	687b      	ldr	r3, [r7, #4]
 8005a6e:	681b      	ldr	r3, [r3, #0]
 8005a70:	68db      	ldr	r3, [r3, #12]
 8005a72:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8005a76:	687b      	ldr	r3, [r7, #4]
 8005a78:	695a      	ldr	r2, [r3, #20]
 8005a7a:	687b      	ldr	r3, [r7, #4]
 8005a7c:	699b      	ldr	r3, [r3, #24]
 8005a7e:	431a      	orrs	r2, r3
 8005a80:	687b      	ldr	r3, [r7, #4]
 8005a82:	681b      	ldr	r3, [r3, #0]
 8005a84:	430a      	orrs	r2, r1
 8005a86:	60da      	str	r2, [r3, #12]
 8005a88:	687b      	ldr	r3, [r7, #4]
 8005a8a:	681b      	ldr	r3, [r3, #0]
 8005a8c:	681a      	ldr	r2, [r3, #0]
 8005a8e:	687b      	ldr	r3, [r7, #4]
 8005a90:	681b      	ldr	r3, [r3, #0]
 8005a92:	f042 0201 	orr.w	r2, r2, #1
 8005a96:	601a      	str	r2, [r3, #0]
 8005a98:	687b      	ldr	r3, [r7, #4]
 8005a9a:	2200      	movs	r2, #0
 8005a9c:	641a      	str	r2, [r3, #64]	; 0x40
 8005a9e:	687b      	ldr	r3, [r7, #4]
 8005aa0:	2220      	movs	r2, #32
 8005aa2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005aa6:	687b      	ldr	r3, [r7, #4]
 8005aa8:	2200      	movs	r2, #0
 8005aaa:	631a      	str	r2, [r3, #48]	; 0x30
 8005aac:	687b      	ldr	r3, [r7, #4]
 8005aae:	2200      	movs	r2, #0
 8005ab0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005ab4:	2300      	movs	r3, #0
 8005ab6:	4618      	mov	r0, r3
 8005ab8:	3710      	adds	r7, #16
 8005aba:	46bd      	mov	sp, r7
 8005abc:	bd80      	pop	{r7, pc}
 8005abe:	bf00      	nop
 8005ac0:	000186a0 	.word	0x000186a0
 8005ac4:	001e847f 	.word	0x001e847f
 8005ac8:	003d08ff 	.word	0x003d08ff
 8005acc:	431bde83 	.word	0x431bde83
 8005ad0:	10624dd3 	.word	0x10624dd3

08005ad4 <HAL_I2C_Master_Transmit>:
 8005ad4:	b580      	push	{r7, lr}
 8005ad6:	b088      	sub	sp, #32
 8005ad8:	af02      	add	r7, sp, #8
 8005ada:	60f8      	str	r0, [r7, #12]
 8005adc:	607a      	str	r2, [r7, #4]
 8005ade:	461a      	mov	r2, r3
 8005ae0:	460b      	mov	r3, r1
 8005ae2:	817b      	strh	r3, [r7, #10]
 8005ae4:	4613      	mov	r3, r2
 8005ae6:	813b      	strh	r3, [r7, #8]
 8005ae8:	f7fe ffb4 	bl	8004a54 <HAL_GetTick>
 8005aec:	6178      	str	r0, [r7, #20]
 8005aee:	68fb      	ldr	r3, [r7, #12]
 8005af0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005af4:	b2db      	uxtb	r3, r3
 8005af6:	2b20      	cmp	r3, #32
 8005af8:	f040 80e0 	bne.w	8005cbc <HAL_I2C_Master_Transmit+0x1e8>
 8005afc:	697b      	ldr	r3, [r7, #20]
 8005afe:	9300      	str	r3, [sp, #0]
 8005b00:	2319      	movs	r3, #25
 8005b02:	2201      	movs	r2, #1
 8005b04:	4970      	ldr	r1, [pc, #448]	; (8005cc8 <HAL_I2C_Master_Transmit+0x1f4>)
 8005b06:	68f8      	ldr	r0, [r7, #12]
 8005b08:	f002 f8e6 	bl	8007cd8 <I2C_WaitOnFlagUntilTimeout>
 8005b0c:	4603      	mov	r3, r0
 8005b0e:	2b00      	cmp	r3, #0
 8005b10:	d001      	beq.n	8005b16 <HAL_I2C_Master_Transmit+0x42>
 8005b12:	2302      	movs	r3, #2
 8005b14:	e0d3      	b.n	8005cbe <HAL_I2C_Master_Transmit+0x1ea>
 8005b16:	68fb      	ldr	r3, [r7, #12]
 8005b18:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005b1c:	2b01      	cmp	r3, #1
 8005b1e:	d101      	bne.n	8005b24 <HAL_I2C_Master_Transmit+0x50>
 8005b20:	2302      	movs	r3, #2
 8005b22:	e0cc      	b.n	8005cbe <HAL_I2C_Master_Transmit+0x1ea>
 8005b24:	68fb      	ldr	r3, [r7, #12]
 8005b26:	2201      	movs	r2, #1
 8005b28:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005b2c:	68fb      	ldr	r3, [r7, #12]
 8005b2e:	681b      	ldr	r3, [r3, #0]
 8005b30:	681b      	ldr	r3, [r3, #0]
 8005b32:	f003 0301 	and.w	r3, r3, #1
 8005b36:	2b01      	cmp	r3, #1
 8005b38:	d007      	beq.n	8005b4a <HAL_I2C_Master_Transmit+0x76>
 8005b3a:	68fb      	ldr	r3, [r7, #12]
 8005b3c:	681b      	ldr	r3, [r3, #0]
 8005b3e:	681a      	ldr	r2, [r3, #0]
 8005b40:	68fb      	ldr	r3, [r7, #12]
 8005b42:	681b      	ldr	r3, [r3, #0]
 8005b44:	f042 0201 	orr.w	r2, r2, #1
 8005b48:	601a      	str	r2, [r3, #0]
 8005b4a:	68fb      	ldr	r3, [r7, #12]
 8005b4c:	681b      	ldr	r3, [r3, #0]
 8005b4e:	681a      	ldr	r2, [r3, #0]
 8005b50:	68fb      	ldr	r3, [r7, #12]
 8005b52:	681b      	ldr	r3, [r3, #0]
 8005b54:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005b58:	601a      	str	r2, [r3, #0]
 8005b5a:	68fb      	ldr	r3, [r7, #12]
 8005b5c:	2221      	movs	r2, #33	; 0x21
 8005b5e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005b62:	68fb      	ldr	r3, [r7, #12]
 8005b64:	2210      	movs	r2, #16
 8005b66:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005b6a:	68fb      	ldr	r3, [r7, #12]
 8005b6c:	2200      	movs	r2, #0
 8005b6e:	641a      	str	r2, [r3, #64]	; 0x40
 8005b70:	68fb      	ldr	r3, [r7, #12]
 8005b72:	687a      	ldr	r2, [r7, #4]
 8005b74:	625a      	str	r2, [r3, #36]	; 0x24
 8005b76:	68fb      	ldr	r3, [r7, #12]
 8005b78:	893a      	ldrh	r2, [r7, #8]
 8005b7a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005b7c:	68fb      	ldr	r3, [r7, #12]
 8005b7e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005b80:	b29a      	uxth	r2, r3
 8005b82:	68fb      	ldr	r3, [r7, #12]
 8005b84:	851a      	strh	r2, [r3, #40]	; 0x28
 8005b86:	68fb      	ldr	r3, [r7, #12]
 8005b88:	4a50      	ldr	r2, [pc, #320]	; (8005ccc <HAL_I2C_Master_Transmit+0x1f8>)
 8005b8a:	62da      	str	r2, [r3, #44]	; 0x2c
 8005b8c:	8979      	ldrh	r1, [r7, #10]
 8005b8e:	697b      	ldr	r3, [r7, #20]
 8005b90:	6a3a      	ldr	r2, [r7, #32]
 8005b92:	68f8      	ldr	r0, [r7, #12]
 8005b94:	f001 fea8 	bl	80078e8 <I2C_MasterRequestWrite>
 8005b98:	4603      	mov	r3, r0
 8005b9a:	2b00      	cmp	r3, #0
 8005b9c:	d001      	beq.n	8005ba2 <HAL_I2C_Master_Transmit+0xce>
 8005b9e:	2301      	movs	r3, #1
 8005ba0:	e08d      	b.n	8005cbe <HAL_I2C_Master_Transmit+0x1ea>
 8005ba2:	2300      	movs	r3, #0
 8005ba4:	613b      	str	r3, [r7, #16]
 8005ba6:	68fb      	ldr	r3, [r7, #12]
 8005ba8:	681b      	ldr	r3, [r3, #0]
 8005baa:	695b      	ldr	r3, [r3, #20]
 8005bac:	613b      	str	r3, [r7, #16]
 8005bae:	68fb      	ldr	r3, [r7, #12]
 8005bb0:	681b      	ldr	r3, [r3, #0]
 8005bb2:	699b      	ldr	r3, [r3, #24]
 8005bb4:	613b      	str	r3, [r7, #16]
 8005bb6:	693b      	ldr	r3, [r7, #16]
 8005bb8:	e066      	b.n	8005c88 <HAL_I2C_Master_Transmit+0x1b4>
 8005bba:	697a      	ldr	r2, [r7, #20]
 8005bbc:	6a39      	ldr	r1, [r7, #32]
 8005bbe:	68f8      	ldr	r0, [r7, #12]
 8005bc0:	f002 f960 	bl	8007e84 <I2C_WaitOnTXEFlagUntilTimeout>
 8005bc4:	4603      	mov	r3, r0
 8005bc6:	2b00      	cmp	r3, #0
 8005bc8:	d00d      	beq.n	8005be6 <HAL_I2C_Master_Transmit+0x112>
 8005bca:	68fb      	ldr	r3, [r7, #12]
 8005bcc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005bce:	2b04      	cmp	r3, #4
 8005bd0:	d107      	bne.n	8005be2 <HAL_I2C_Master_Transmit+0x10e>
 8005bd2:	68fb      	ldr	r3, [r7, #12]
 8005bd4:	681b      	ldr	r3, [r3, #0]
 8005bd6:	681a      	ldr	r2, [r3, #0]
 8005bd8:	68fb      	ldr	r3, [r7, #12]
 8005bda:	681b      	ldr	r3, [r3, #0]
 8005bdc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005be0:	601a      	str	r2, [r3, #0]
 8005be2:	2301      	movs	r3, #1
 8005be4:	e06b      	b.n	8005cbe <HAL_I2C_Master_Transmit+0x1ea>
 8005be6:	68fb      	ldr	r3, [r7, #12]
 8005be8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005bea:	781a      	ldrb	r2, [r3, #0]
 8005bec:	68fb      	ldr	r3, [r7, #12]
 8005bee:	681b      	ldr	r3, [r3, #0]
 8005bf0:	611a      	str	r2, [r3, #16]
 8005bf2:	68fb      	ldr	r3, [r7, #12]
 8005bf4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005bf6:	1c5a      	adds	r2, r3, #1
 8005bf8:	68fb      	ldr	r3, [r7, #12]
 8005bfa:	625a      	str	r2, [r3, #36]	; 0x24
 8005bfc:	68fb      	ldr	r3, [r7, #12]
 8005bfe:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005c00:	b29b      	uxth	r3, r3
 8005c02:	3b01      	subs	r3, #1
 8005c04:	b29a      	uxth	r2, r3
 8005c06:	68fb      	ldr	r3, [r7, #12]
 8005c08:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005c0a:	68fb      	ldr	r3, [r7, #12]
 8005c0c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005c0e:	3b01      	subs	r3, #1
 8005c10:	b29a      	uxth	r2, r3
 8005c12:	68fb      	ldr	r3, [r7, #12]
 8005c14:	851a      	strh	r2, [r3, #40]	; 0x28
 8005c16:	68fb      	ldr	r3, [r7, #12]
 8005c18:	681b      	ldr	r3, [r3, #0]
 8005c1a:	695b      	ldr	r3, [r3, #20]
 8005c1c:	f003 0304 	and.w	r3, r3, #4
 8005c20:	2b04      	cmp	r3, #4
 8005c22:	d11b      	bne.n	8005c5c <HAL_I2C_Master_Transmit+0x188>
 8005c24:	68fb      	ldr	r3, [r7, #12]
 8005c26:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005c28:	2b00      	cmp	r3, #0
 8005c2a:	d017      	beq.n	8005c5c <HAL_I2C_Master_Transmit+0x188>
 8005c2c:	68fb      	ldr	r3, [r7, #12]
 8005c2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c30:	781a      	ldrb	r2, [r3, #0]
 8005c32:	68fb      	ldr	r3, [r7, #12]
 8005c34:	681b      	ldr	r3, [r3, #0]
 8005c36:	611a      	str	r2, [r3, #16]
 8005c38:	68fb      	ldr	r3, [r7, #12]
 8005c3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c3c:	1c5a      	adds	r2, r3, #1
 8005c3e:	68fb      	ldr	r3, [r7, #12]
 8005c40:	625a      	str	r2, [r3, #36]	; 0x24
 8005c42:	68fb      	ldr	r3, [r7, #12]
 8005c44:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005c46:	b29b      	uxth	r3, r3
 8005c48:	3b01      	subs	r3, #1
 8005c4a:	b29a      	uxth	r2, r3
 8005c4c:	68fb      	ldr	r3, [r7, #12]
 8005c4e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005c50:	68fb      	ldr	r3, [r7, #12]
 8005c52:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005c54:	3b01      	subs	r3, #1
 8005c56:	b29a      	uxth	r2, r3
 8005c58:	68fb      	ldr	r3, [r7, #12]
 8005c5a:	851a      	strh	r2, [r3, #40]	; 0x28
 8005c5c:	697a      	ldr	r2, [r7, #20]
 8005c5e:	6a39      	ldr	r1, [r7, #32]
 8005c60:	68f8      	ldr	r0, [r7, #12]
 8005c62:	f002 f950 	bl	8007f06 <I2C_WaitOnBTFFlagUntilTimeout>
 8005c66:	4603      	mov	r3, r0
 8005c68:	2b00      	cmp	r3, #0
 8005c6a:	d00d      	beq.n	8005c88 <HAL_I2C_Master_Transmit+0x1b4>
 8005c6c:	68fb      	ldr	r3, [r7, #12]
 8005c6e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c70:	2b04      	cmp	r3, #4
 8005c72:	d107      	bne.n	8005c84 <HAL_I2C_Master_Transmit+0x1b0>
 8005c74:	68fb      	ldr	r3, [r7, #12]
 8005c76:	681b      	ldr	r3, [r3, #0]
 8005c78:	681a      	ldr	r2, [r3, #0]
 8005c7a:	68fb      	ldr	r3, [r7, #12]
 8005c7c:	681b      	ldr	r3, [r3, #0]
 8005c7e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005c82:	601a      	str	r2, [r3, #0]
 8005c84:	2301      	movs	r3, #1
 8005c86:	e01a      	b.n	8005cbe <HAL_I2C_Master_Transmit+0x1ea>
 8005c88:	68fb      	ldr	r3, [r7, #12]
 8005c8a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005c8c:	2b00      	cmp	r3, #0
 8005c8e:	d194      	bne.n	8005bba <HAL_I2C_Master_Transmit+0xe6>
 8005c90:	68fb      	ldr	r3, [r7, #12]
 8005c92:	681b      	ldr	r3, [r3, #0]
 8005c94:	681a      	ldr	r2, [r3, #0]
 8005c96:	68fb      	ldr	r3, [r7, #12]
 8005c98:	681b      	ldr	r3, [r3, #0]
 8005c9a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005c9e:	601a      	str	r2, [r3, #0]
 8005ca0:	68fb      	ldr	r3, [r7, #12]
 8005ca2:	2220      	movs	r2, #32
 8005ca4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005ca8:	68fb      	ldr	r3, [r7, #12]
 8005caa:	2200      	movs	r2, #0
 8005cac:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005cb0:	68fb      	ldr	r3, [r7, #12]
 8005cb2:	2200      	movs	r2, #0
 8005cb4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005cb8:	2300      	movs	r3, #0
 8005cba:	e000      	b.n	8005cbe <HAL_I2C_Master_Transmit+0x1ea>
 8005cbc:	2302      	movs	r3, #2
 8005cbe:	4618      	mov	r0, r3
 8005cc0:	3718      	adds	r7, #24
 8005cc2:	46bd      	mov	sp, r7
 8005cc4:	bd80      	pop	{r7, pc}
 8005cc6:	bf00      	nop
 8005cc8:	00100002 	.word	0x00100002
 8005ccc:	ffff0000 	.word	0xffff0000

08005cd0 <HAL_I2C_Master_Receive>:
 8005cd0:	b580      	push	{r7, lr}
 8005cd2:	b08c      	sub	sp, #48	; 0x30
 8005cd4:	af02      	add	r7, sp, #8
 8005cd6:	60f8      	str	r0, [r7, #12]
 8005cd8:	607a      	str	r2, [r7, #4]
 8005cda:	461a      	mov	r2, r3
 8005cdc:	460b      	mov	r3, r1
 8005cde:	817b      	strh	r3, [r7, #10]
 8005ce0:	4613      	mov	r3, r2
 8005ce2:	813b      	strh	r3, [r7, #8]
 8005ce4:	f7fe feb6 	bl	8004a54 <HAL_GetTick>
 8005ce8:	6278      	str	r0, [r7, #36]	; 0x24
 8005cea:	68fb      	ldr	r3, [r7, #12]
 8005cec:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005cf0:	b2db      	uxtb	r3, r3
 8005cf2:	2b20      	cmp	r3, #32
 8005cf4:	f040 820b 	bne.w	800610e <HAL_I2C_Master_Receive+0x43e>
 8005cf8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005cfa:	9300      	str	r3, [sp, #0]
 8005cfc:	2319      	movs	r3, #25
 8005cfe:	2201      	movs	r2, #1
 8005d00:	497c      	ldr	r1, [pc, #496]	; (8005ef4 <HAL_I2C_Master_Receive+0x224>)
 8005d02:	68f8      	ldr	r0, [r7, #12]
 8005d04:	f001 ffe8 	bl	8007cd8 <I2C_WaitOnFlagUntilTimeout>
 8005d08:	4603      	mov	r3, r0
 8005d0a:	2b00      	cmp	r3, #0
 8005d0c:	d001      	beq.n	8005d12 <HAL_I2C_Master_Receive+0x42>
 8005d0e:	2302      	movs	r3, #2
 8005d10:	e1fe      	b.n	8006110 <HAL_I2C_Master_Receive+0x440>
 8005d12:	68fb      	ldr	r3, [r7, #12]
 8005d14:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005d18:	2b01      	cmp	r3, #1
 8005d1a:	d101      	bne.n	8005d20 <HAL_I2C_Master_Receive+0x50>
 8005d1c:	2302      	movs	r3, #2
 8005d1e:	e1f7      	b.n	8006110 <HAL_I2C_Master_Receive+0x440>
 8005d20:	68fb      	ldr	r3, [r7, #12]
 8005d22:	2201      	movs	r2, #1
 8005d24:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005d28:	68fb      	ldr	r3, [r7, #12]
 8005d2a:	681b      	ldr	r3, [r3, #0]
 8005d2c:	681b      	ldr	r3, [r3, #0]
 8005d2e:	f003 0301 	and.w	r3, r3, #1
 8005d32:	2b01      	cmp	r3, #1
 8005d34:	d007      	beq.n	8005d46 <HAL_I2C_Master_Receive+0x76>
 8005d36:	68fb      	ldr	r3, [r7, #12]
 8005d38:	681b      	ldr	r3, [r3, #0]
 8005d3a:	681a      	ldr	r2, [r3, #0]
 8005d3c:	68fb      	ldr	r3, [r7, #12]
 8005d3e:	681b      	ldr	r3, [r3, #0]
 8005d40:	f042 0201 	orr.w	r2, r2, #1
 8005d44:	601a      	str	r2, [r3, #0]
 8005d46:	68fb      	ldr	r3, [r7, #12]
 8005d48:	681b      	ldr	r3, [r3, #0]
 8005d4a:	681a      	ldr	r2, [r3, #0]
 8005d4c:	68fb      	ldr	r3, [r7, #12]
 8005d4e:	681b      	ldr	r3, [r3, #0]
 8005d50:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005d54:	601a      	str	r2, [r3, #0]
 8005d56:	68fb      	ldr	r3, [r7, #12]
 8005d58:	2222      	movs	r2, #34	; 0x22
 8005d5a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005d5e:	68fb      	ldr	r3, [r7, #12]
 8005d60:	2210      	movs	r2, #16
 8005d62:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005d66:	68fb      	ldr	r3, [r7, #12]
 8005d68:	2200      	movs	r2, #0
 8005d6a:	641a      	str	r2, [r3, #64]	; 0x40
 8005d6c:	68fb      	ldr	r3, [r7, #12]
 8005d6e:	687a      	ldr	r2, [r7, #4]
 8005d70:	625a      	str	r2, [r3, #36]	; 0x24
 8005d72:	68fb      	ldr	r3, [r7, #12]
 8005d74:	893a      	ldrh	r2, [r7, #8]
 8005d76:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005d78:	68fb      	ldr	r3, [r7, #12]
 8005d7a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005d7c:	b29a      	uxth	r2, r3
 8005d7e:	68fb      	ldr	r3, [r7, #12]
 8005d80:	851a      	strh	r2, [r3, #40]	; 0x28
 8005d82:	68fb      	ldr	r3, [r7, #12]
 8005d84:	4a5c      	ldr	r2, [pc, #368]	; (8005ef8 <HAL_I2C_Master_Receive+0x228>)
 8005d86:	62da      	str	r2, [r3, #44]	; 0x2c
 8005d88:	8979      	ldrh	r1, [r7, #10]
 8005d8a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005d8c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005d8e:	68f8      	ldr	r0, [r7, #12]
 8005d90:	f001 fe2c 	bl	80079ec <I2C_MasterRequestRead>
 8005d94:	4603      	mov	r3, r0
 8005d96:	2b00      	cmp	r3, #0
 8005d98:	d001      	beq.n	8005d9e <HAL_I2C_Master_Receive+0xce>
 8005d9a:	2301      	movs	r3, #1
 8005d9c:	e1b8      	b.n	8006110 <HAL_I2C_Master_Receive+0x440>
 8005d9e:	68fb      	ldr	r3, [r7, #12]
 8005da0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005da2:	2b00      	cmp	r3, #0
 8005da4:	d113      	bne.n	8005dce <HAL_I2C_Master_Receive+0xfe>
 8005da6:	2300      	movs	r3, #0
 8005da8:	623b      	str	r3, [r7, #32]
 8005daa:	68fb      	ldr	r3, [r7, #12]
 8005dac:	681b      	ldr	r3, [r3, #0]
 8005dae:	695b      	ldr	r3, [r3, #20]
 8005db0:	623b      	str	r3, [r7, #32]
 8005db2:	68fb      	ldr	r3, [r7, #12]
 8005db4:	681b      	ldr	r3, [r3, #0]
 8005db6:	699b      	ldr	r3, [r3, #24]
 8005db8:	623b      	str	r3, [r7, #32]
 8005dba:	6a3b      	ldr	r3, [r7, #32]
 8005dbc:	68fb      	ldr	r3, [r7, #12]
 8005dbe:	681b      	ldr	r3, [r3, #0]
 8005dc0:	681a      	ldr	r2, [r3, #0]
 8005dc2:	68fb      	ldr	r3, [r7, #12]
 8005dc4:	681b      	ldr	r3, [r3, #0]
 8005dc6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005dca:	601a      	str	r2, [r3, #0]
 8005dcc:	e18c      	b.n	80060e8 <HAL_I2C_Master_Receive+0x418>
 8005dce:	68fb      	ldr	r3, [r7, #12]
 8005dd0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005dd2:	2b01      	cmp	r3, #1
 8005dd4:	d11b      	bne.n	8005e0e <HAL_I2C_Master_Receive+0x13e>
 8005dd6:	68fb      	ldr	r3, [r7, #12]
 8005dd8:	681b      	ldr	r3, [r3, #0]
 8005dda:	681a      	ldr	r2, [r3, #0]
 8005ddc:	68fb      	ldr	r3, [r7, #12]
 8005dde:	681b      	ldr	r3, [r3, #0]
 8005de0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005de4:	601a      	str	r2, [r3, #0]
 8005de6:	2300      	movs	r3, #0
 8005de8:	61fb      	str	r3, [r7, #28]
 8005dea:	68fb      	ldr	r3, [r7, #12]
 8005dec:	681b      	ldr	r3, [r3, #0]
 8005dee:	695b      	ldr	r3, [r3, #20]
 8005df0:	61fb      	str	r3, [r7, #28]
 8005df2:	68fb      	ldr	r3, [r7, #12]
 8005df4:	681b      	ldr	r3, [r3, #0]
 8005df6:	699b      	ldr	r3, [r3, #24]
 8005df8:	61fb      	str	r3, [r7, #28]
 8005dfa:	69fb      	ldr	r3, [r7, #28]
 8005dfc:	68fb      	ldr	r3, [r7, #12]
 8005dfe:	681b      	ldr	r3, [r3, #0]
 8005e00:	681a      	ldr	r2, [r3, #0]
 8005e02:	68fb      	ldr	r3, [r7, #12]
 8005e04:	681b      	ldr	r3, [r3, #0]
 8005e06:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005e0a:	601a      	str	r2, [r3, #0]
 8005e0c:	e16c      	b.n	80060e8 <HAL_I2C_Master_Receive+0x418>
 8005e0e:	68fb      	ldr	r3, [r7, #12]
 8005e10:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005e12:	2b02      	cmp	r3, #2
 8005e14:	d11b      	bne.n	8005e4e <HAL_I2C_Master_Receive+0x17e>
 8005e16:	68fb      	ldr	r3, [r7, #12]
 8005e18:	681b      	ldr	r3, [r3, #0]
 8005e1a:	681a      	ldr	r2, [r3, #0]
 8005e1c:	68fb      	ldr	r3, [r7, #12]
 8005e1e:	681b      	ldr	r3, [r3, #0]
 8005e20:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005e24:	601a      	str	r2, [r3, #0]
 8005e26:	68fb      	ldr	r3, [r7, #12]
 8005e28:	681b      	ldr	r3, [r3, #0]
 8005e2a:	681a      	ldr	r2, [r3, #0]
 8005e2c:	68fb      	ldr	r3, [r7, #12]
 8005e2e:	681b      	ldr	r3, [r3, #0]
 8005e30:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005e34:	601a      	str	r2, [r3, #0]
 8005e36:	2300      	movs	r3, #0
 8005e38:	61bb      	str	r3, [r7, #24]
 8005e3a:	68fb      	ldr	r3, [r7, #12]
 8005e3c:	681b      	ldr	r3, [r3, #0]
 8005e3e:	695b      	ldr	r3, [r3, #20]
 8005e40:	61bb      	str	r3, [r7, #24]
 8005e42:	68fb      	ldr	r3, [r7, #12]
 8005e44:	681b      	ldr	r3, [r3, #0]
 8005e46:	699b      	ldr	r3, [r3, #24]
 8005e48:	61bb      	str	r3, [r7, #24]
 8005e4a:	69bb      	ldr	r3, [r7, #24]
 8005e4c:	e14c      	b.n	80060e8 <HAL_I2C_Master_Receive+0x418>
 8005e4e:	68fb      	ldr	r3, [r7, #12]
 8005e50:	681b      	ldr	r3, [r3, #0]
 8005e52:	681a      	ldr	r2, [r3, #0]
 8005e54:	68fb      	ldr	r3, [r7, #12]
 8005e56:	681b      	ldr	r3, [r3, #0]
 8005e58:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005e5c:	601a      	str	r2, [r3, #0]
 8005e5e:	2300      	movs	r3, #0
 8005e60:	617b      	str	r3, [r7, #20]
 8005e62:	68fb      	ldr	r3, [r7, #12]
 8005e64:	681b      	ldr	r3, [r3, #0]
 8005e66:	695b      	ldr	r3, [r3, #20]
 8005e68:	617b      	str	r3, [r7, #20]
 8005e6a:	68fb      	ldr	r3, [r7, #12]
 8005e6c:	681b      	ldr	r3, [r3, #0]
 8005e6e:	699b      	ldr	r3, [r3, #24]
 8005e70:	617b      	str	r3, [r7, #20]
 8005e72:	697b      	ldr	r3, [r7, #20]
 8005e74:	e138      	b.n	80060e8 <HAL_I2C_Master_Receive+0x418>
 8005e76:	68fb      	ldr	r3, [r7, #12]
 8005e78:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005e7a:	2b03      	cmp	r3, #3
 8005e7c:	f200 80f1 	bhi.w	8006062 <HAL_I2C_Master_Receive+0x392>
 8005e80:	68fb      	ldr	r3, [r7, #12]
 8005e82:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005e84:	2b01      	cmp	r3, #1
 8005e86:	d123      	bne.n	8005ed0 <HAL_I2C_Master_Receive+0x200>
 8005e88:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005e8a:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8005e8c:	68f8      	ldr	r0, [r7, #12]
 8005e8e:	f002 f8ad 	bl	8007fec <I2C_WaitOnRXNEFlagUntilTimeout>
 8005e92:	4603      	mov	r3, r0
 8005e94:	2b00      	cmp	r3, #0
 8005e96:	d001      	beq.n	8005e9c <HAL_I2C_Master_Receive+0x1cc>
 8005e98:	2301      	movs	r3, #1
 8005e9a:	e139      	b.n	8006110 <HAL_I2C_Master_Receive+0x440>
 8005e9c:	68fb      	ldr	r3, [r7, #12]
 8005e9e:	681b      	ldr	r3, [r3, #0]
 8005ea0:	691a      	ldr	r2, [r3, #16]
 8005ea2:	68fb      	ldr	r3, [r7, #12]
 8005ea4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ea6:	b2d2      	uxtb	r2, r2
 8005ea8:	701a      	strb	r2, [r3, #0]
 8005eaa:	68fb      	ldr	r3, [r7, #12]
 8005eac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005eae:	1c5a      	adds	r2, r3, #1
 8005eb0:	68fb      	ldr	r3, [r7, #12]
 8005eb2:	625a      	str	r2, [r3, #36]	; 0x24
 8005eb4:	68fb      	ldr	r3, [r7, #12]
 8005eb6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005eb8:	3b01      	subs	r3, #1
 8005eba:	b29a      	uxth	r2, r3
 8005ebc:	68fb      	ldr	r3, [r7, #12]
 8005ebe:	851a      	strh	r2, [r3, #40]	; 0x28
 8005ec0:	68fb      	ldr	r3, [r7, #12]
 8005ec2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005ec4:	b29b      	uxth	r3, r3
 8005ec6:	3b01      	subs	r3, #1
 8005ec8:	b29a      	uxth	r2, r3
 8005eca:	68fb      	ldr	r3, [r7, #12]
 8005ecc:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005ece:	e10b      	b.n	80060e8 <HAL_I2C_Master_Receive+0x418>
 8005ed0:	68fb      	ldr	r3, [r7, #12]
 8005ed2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005ed4:	2b02      	cmp	r3, #2
 8005ed6:	d14e      	bne.n	8005f76 <HAL_I2C_Master_Receive+0x2a6>
 8005ed8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005eda:	9300      	str	r3, [sp, #0]
 8005edc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005ede:	2200      	movs	r2, #0
 8005ee0:	4906      	ldr	r1, [pc, #24]	; (8005efc <HAL_I2C_Master_Receive+0x22c>)
 8005ee2:	68f8      	ldr	r0, [r7, #12]
 8005ee4:	f001 fef8 	bl	8007cd8 <I2C_WaitOnFlagUntilTimeout>
 8005ee8:	4603      	mov	r3, r0
 8005eea:	2b00      	cmp	r3, #0
 8005eec:	d008      	beq.n	8005f00 <HAL_I2C_Master_Receive+0x230>
 8005eee:	2301      	movs	r3, #1
 8005ef0:	e10e      	b.n	8006110 <HAL_I2C_Master_Receive+0x440>
 8005ef2:	bf00      	nop
 8005ef4:	00100002 	.word	0x00100002
 8005ef8:	ffff0000 	.word	0xffff0000
 8005efc:	00010004 	.word	0x00010004
 8005f00:	68fb      	ldr	r3, [r7, #12]
 8005f02:	681b      	ldr	r3, [r3, #0]
 8005f04:	681a      	ldr	r2, [r3, #0]
 8005f06:	68fb      	ldr	r3, [r7, #12]
 8005f08:	681b      	ldr	r3, [r3, #0]
 8005f0a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005f0e:	601a      	str	r2, [r3, #0]
 8005f10:	68fb      	ldr	r3, [r7, #12]
 8005f12:	681b      	ldr	r3, [r3, #0]
 8005f14:	691a      	ldr	r2, [r3, #16]
 8005f16:	68fb      	ldr	r3, [r7, #12]
 8005f18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f1a:	b2d2      	uxtb	r2, r2
 8005f1c:	701a      	strb	r2, [r3, #0]
 8005f1e:	68fb      	ldr	r3, [r7, #12]
 8005f20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f22:	1c5a      	adds	r2, r3, #1
 8005f24:	68fb      	ldr	r3, [r7, #12]
 8005f26:	625a      	str	r2, [r3, #36]	; 0x24
 8005f28:	68fb      	ldr	r3, [r7, #12]
 8005f2a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005f2c:	3b01      	subs	r3, #1
 8005f2e:	b29a      	uxth	r2, r3
 8005f30:	68fb      	ldr	r3, [r7, #12]
 8005f32:	851a      	strh	r2, [r3, #40]	; 0x28
 8005f34:	68fb      	ldr	r3, [r7, #12]
 8005f36:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005f38:	b29b      	uxth	r3, r3
 8005f3a:	3b01      	subs	r3, #1
 8005f3c:	b29a      	uxth	r2, r3
 8005f3e:	68fb      	ldr	r3, [r7, #12]
 8005f40:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005f42:	68fb      	ldr	r3, [r7, #12]
 8005f44:	681b      	ldr	r3, [r3, #0]
 8005f46:	691a      	ldr	r2, [r3, #16]
 8005f48:	68fb      	ldr	r3, [r7, #12]
 8005f4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f4c:	b2d2      	uxtb	r2, r2
 8005f4e:	701a      	strb	r2, [r3, #0]
 8005f50:	68fb      	ldr	r3, [r7, #12]
 8005f52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f54:	1c5a      	adds	r2, r3, #1
 8005f56:	68fb      	ldr	r3, [r7, #12]
 8005f58:	625a      	str	r2, [r3, #36]	; 0x24
 8005f5a:	68fb      	ldr	r3, [r7, #12]
 8005f5c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005f5e:	3b01      	subs	r3, #1
 8005f60:	b29a      	uxth	r2, r3
 8005f62:	68fb      	ldr	r3, [r7, #12]
 8005f64:	851a      	strh	r2, [r3, #40]	; 0x28
 8005f66:	68fb      	ldr	r3, [r7, #12]
 8005f68:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005f6a:	b29b      	uxth	r3, r3
 8005f6c:	3b01      	subs	r3, #1
 8005f6e:	b29a      	uxth	r2, r3
 8005f70:	68fb      	ldr	r3, [r7, #12]
 8005f72:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005f74:	e0b8      	b.n	80060e8 <HAL_I2C_Master_Receive+0x418>
 8005f76:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005f78:	9300      	str	r3, [sp, #0]
 8005f7a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f7c:	2200      	movs	r2, #0
 8005f7e:	4966      	ldr	r1, [pc, #408]	; (8006118 <HAL_I2C_Master_Receive+0x448>)
 8005f80:	68f8      	ldr	r0, [r7, #12]
 8005f82:	f001 fea9 	bl	8007cd8 <I2C_WaitOnFlagUntilTimeout>
 8005f86:	4603      	mov	r3, r0
 8005f88:	2b00      	cmp	r3, #0
 8005f8a:	d001      	beq.n	8005f90 <HAL_I2C_Master_Receive+0x2c0>
 8005f8c:	2301      	movs	r3, #1
 8005f8e:	e0bf      	b.n	8006110 <HAL_I2C_Master_Receive+0x440>
 8005f90:	68fb      	ldr	r3, [r7, #12]
 8005f92:	681b      	ldr	r3, [r3, #0]
 8005f94:	681a      	ldr	r2, [r3, #0]
 8005f96:	68fb      	ldr	r3, [r7, #12]
 8005f98:	681b      	ldr	r3, [r3, #0]
 8005f9a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005f9e:	601a      	str	r2, [r3, #0]
 8005fa0:	68fb      	ldr	r3, [r7, #12]
 8005fa2:	681b      	ldr	r3, [r3, #0]
 8005fa4:	691a      	ldr	r2, [r3, #16]
 8005fa6:	68fb      	ldr	r3, [r7, #12]
 8005fa8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005faa:	b2d2      	uxtb	r2, r2
 8005fac:	701a      	strb	r2, [r3, #0]
 8005fae:	68fb      	ldr	r3, [r7, #12]
 8005fb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fb2:	1c5a      	adds	r2, r3, #1
 8005fb4:	68fb      	ldr	r3, [r7, #12]
 8005fb6:	625a      	str	r2, [r3, #36]	; 0x24
 8005fb8:	68fb      	ldr	r3, [r7, #12]
 8005fba:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005fbc:	3b01      	subs	r3, #1
 8005fbe:	b29a      	uxth	r2, r3
 8005fc0:	68fb      	ldr	r3, [r7, #12]
 8005fc2:	851a      	strh	r2, [r3, #40]	; 0x28
 8005fc4:	68fb      	ldr	r3, [r7, #12]
 8005fc6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005fc8:	b29b      	uxth	r3, r3
 8005fca:	3b01      	subs	r3, #1
 8005fcc:	b29a      	uxth	r2, r3
 8005fce:	68fb      	ldr	r3, [r7, #12]
 8005fd0:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005fd2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005fd4:	9300      	str	r3, [sp, #0]
 8005fd6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005fd8:	2200      	movs	r2, #0
 8005fda:	494f      	ldr	r1, [pc, #316]	; (8006118 <HAL_I2C_Master_Receive+0x448>)
 8005fdc:	68f8      	ldr	r0, [r7, #12]
 8005fde:	f001 fe7b 	bl	8007cd8 <I2C_WaitOnFlagUntilTimeout>
 8005fe2:	4603      	mov	r3, r0
 8005fe4:	2b00      	cmp	r3, #0
 8005fe6:	d001      	beq.n	8005fec <HAL_I2C_Master_Receive+0x31c>
 8005fe8:	2301      	movs	r3, #1
 8005fea:	e091      	b.n	8006110 <HAL_I2C_Master_Receive+0x440>
 8005fec:	68fb      	ldr	r3, [r7, #12]
 8005fee:	681b      	ldr	r3, [r3, #0]
 8005ff0:	681a      	ldr	r2, [r3, #0]
 8005ff2:	68fb      	ldr	r3, [r7, #12]
 8005ff4:	681b      	ldr	r3, [r3, #0]
 8005ff6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005ffa:	601a      	str	r2, [r3, #0]
 8005ffc:	68fb      	ldr	r3, [r7, #12]
 8005ffe:	681b      	ldr	r3, [r3, #0]
 8006000:	691a      	ldr	r2, [r3, #16]
 8006002:	68fb      	ldr	r3, [r7, #12]
 8006004:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006006:	b2d2      	uxtb	r2, r2
 8006008:	701a      	strb	r2, [r3, #0]
 800600a:	68fb      	ldr	r3, [r7, #12]
 800600c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800600e:	1c5a      	adds	r2, r3, #1
 8006010:	68fb      	ldr	r3, [r7, #12]
 8006012:	625a      	str	r2, [r3, #36]	; 0x24
 8006014:	68fb      	ldr	r3, [r7, #12]
 8006016:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006018:	3b01      	subs	r3, #1
 800601a:	b29a      	uxth	r2, r3
 800601c:	68fb      	ldr	r3, [r7, #12]
 800601e:	851a      	strh	r2, [r3, #40]	; 0x28
 8006020:	68fb      	ldr	r3, [r7, #12]
 8006022:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006024:	b29b      	uxth	r3, r3
 8006026:	3b01      	subs	r3, #1
 8006028:	b29a      	uxth	r2, r3
 800602a:	68fb      	ldr	r3, [r7, #12]
 800602c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800602e:	68fb      	ldr	r3, [r7, #12]
 8006030:	681b      	ldr	r3, [r3, #0]
 8006032:	691a      	ldr	r2, [r3, #16]
 8006034:	68fb      	ldr	r3, [r7, #12]
 8006036:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006038:	b2d2      	uxtb	r2, r2
 800603a:	701a      	strb	r2, [r3, #0]
 800603c:	68fb      	ldr	r3, [r7, #12]
 800603e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006040:	1c5a      	adds	r2, r3, #1
 8006042:	68fb      	ldr	r3, [r7, #12]
 8006044:	625a      	str	r2, [r3, #36]	; 0x24
 8006046:	68fb      	ldr	r3, [r7, #12]
 8006048:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800604a:	3b01      	subs	r3, #1
 800604c:	b29a      	uxth	r2, r3
 800604e:	68fb      	ldr	r3, [r7, #12]
 8006050:	851a      	strh	r2, [r3, #40]	; 0x28
 8006052:	68fb      	ldr	r3, [r7, #12]
 8006054:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006056:	b29b      	uxth	r3, r3
 8006058:	3b01      	subs	r3, #1
 800605a:	b29a      	uxth	r2, r3
 800605c:	68fb      	ldr	r3, [r7, #12]
 800605e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006060:	e042      	b.n	80060e8 <HAL_I2C_Master_Receive+0x418>
 8006062:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006064:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8006066:	68f8      	ldr	r0, [r7, #12]
 8006068:	f001 ffc0 	bl	8007fec <I2C_WaitOnRXNEFlagUntilTimeout>
 800606c:	4603      	mov	r3, r0
 800606e:	2b00      	cmp	r3, #0
 8006070:	d001      	beq.n	8006076 <HAL_I2C_Master_Receive+0x3a6>
 8006072:	2301      	movs	r3, #1
 8006074:	e04c      	b.n	8006110 <HAL_I2C_Master_Receive+0x440>
 8006076:	68fb      	ldr	r3, [r7, #12]
 8006078:	681b      	ldr	r3, [r3, #0]
 800607a:	691a      	ldr	r2, [r3, #16]
 800607c:	68fb      	ldr	r3, [r7, #12]
 800607e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006080:	b2d2      	uxtb	r2, r2
 8006082:	701a      	strb	r2, [r3, #0]
 8006084:	68fb      	ldr	r3, [r7, #12]
 8006086:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006088:	1c5a      	adds	r2, r3, #1
 800608a:	68fb      	ldr	r3, [r7, #12]
 800608c:	625a      	str	r2, [r3, #36]	; 0x24
 800608e:	68fb      	ldr	r3, [r7, #12]
 8006090:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006092:	3b01      	subs	r3, #1
 8006094:	b29a      	uxth	r2, r3
 8006096:	68fb      	ldr	r3, [r7, #12]
 8006098:	851a      	strh	r2, [r3, #40]	; 0x28
 800609a:	68fb      	ldr	r3, [r7, #12]
 800609c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800609e:	b29b      	uxth	r3, r3
 80060a0:	3b01      	subs	r3, #1
 80060a2:	b29a      	uxth	r2, r3
 80060a4:	68fb      	ldr	r3, [r7, #12]
 80060a6:	855a      	strh	r2, [r3, #42]	; 0x2a
 80060a8:	68fb      	ldr	r3, [r7, #12]
 80060aa:	681b      	ldr	r3, [r3, #0]
 80060ac:	695b      	ldr	r3, [r3, #20]
 80060ae:	f003 0304 	and.w	r3, r3, #4
 80060b2:	2b04      	cmp	r3, #4
 80060b4:	d118      	bne.n	80060e8 <HAL_I2C_Master_Receive+0x418>
 80060b6:	68fb      	ldr	r3, [r7, #12]
 80060b8:	681b      	ldr	r3, [r3, #0]
 80060ba:	691a      	ldr	r2, [r3, #16]
 80060bc:	68fb      	ldr	r3, [r7, #12]
 80060be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060c0:	b2d2      	uxtb	r2, r2
 80060c2:	701a      	strb	r2, [r3, #0]
 80060c4:	68fb      	ldr	r3, [r7, #12]
 80060c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060c8:	1c5a      	adds	r2, r3, #1
 80060ca:	68fb      	ldr	r3, [r7, #12]
 80060cc:	625a      	str	r2, [r3, #36]	; 0x24
 80060ce:	68fb      	ldr	r3, [r7, #12]
 80060d0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80060d2:	3b01      	subs	r3, #1
 80060d4:	b29a      	uxth	r2, r3
 80060d6:	68fb      	ldr	r3, [r7, #12]
 80060d8:	851a      	strh	r2, [r3, #40]	; 0x28
 80060da:	68fb      	ldr	r3, [r7, #12]
 80060dc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80060de:	b29b      	uxth	r3, r3
 80060e0:	3b01      	subs	r3, #1
 80060e2:	b29a      	uxth	r2, r3
 80060e4:	68fb      	ldr	r3, [r7, #12]
 80060e6:	855a      	strh	r2, [r3, #42]	; 0x2a
 80060e8:	68fb      	ldr	r3, [r7, #12]
 80060ea:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80060ec:	2b00      	cmp	r3, #0
 80060ee:	f47f aec2 	bne.w	8005e76 <HAL_I2C_Master_Receive+0x1a6>
 80060f2:	68fb      	ldr	r3, [r7, #12]
 80060f4:	2220      	movs	r2, #32
 80060f6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80060fa:	68fb      	ldr	r3, [r7, #12]
 80060fc:	2200      	movs	r2, #0
 80060fe:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006102:	68fb      	ldr	r3, [r7, #12]
 8006104:	2200      	movs	r2, #0
 8006106:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800610a:	2300      	movs	r3, #0
 800610c:	e000      	b.n	8006110 <HAL_I2C_Master_Receive+0x440>
 800610e:	2302      	movs	r3, #2
 8006110:	4618      	mov	r0, r3
 8006112:	3728      	adds	r7, #40	; 0x28
 8006114:	46bd      	mov	sp, r7
 8006116:	bd80      	pop	{r7, pc}
 8006118:	00010004 	.word	0x00010004

0800611c <HAL_I2C_EV_IRQHandler>:
 800611c:	b580      	push	{r7, lr}
 800611e:	b088      	sub	sp, #32
 8006120:	af00      	add	r7, sp, #0
 8006122:	6078      	str	r0, [r7, #4]
 8006124:	2300      	movs	r3, #0
 8006126:	61bb      	str	r3, [r7, #24]
 8006128:	687b      	ldr	r3, [r7, #4]
 800612a:	681b      	ldr	r3, [r3, #0]
 800612c:	685b      	ldr	r3, [r3, #4]
 800612e:	617b      	str	r3, [r7, #20]
 8006130:	687b      	ldr	r3, [r7, #4]
 8006132:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006134:	613b      	str	r3, [r7, #16]
 8006136:	687b      	ldr	r3, [r7, #4]
 8006138:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800613c:	73fb      	strb	r3, [r7, #15]
 800613e:	687b      	ldr	r3, [r7, #4]
 8006140:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006144:	73bb      	strb	r3, [r7, #14]
 8006146:	7bfb      	ldrb	r3, [r7, #15]
 8006148:	2b10      	cmp	r3, #16
 800614a:	d003      	beq.n	8006154 <HAL_I2C_EV_IRQHandler+0x38>
 800614c:	7bfb      	ldrb	r3, [r7, #15]
 800614e:	2b40      	cmp	r3, #64	; 0x40
 8006150:	f040 80c1 	bne.w	80062d6 <HAL_I2C_EV_IRQHandler+0x1ba>
 8006154:	687b      	ldr	r3, [r7, #4]
 8006156:	681b      	ldr	r3, [r3, #0]
 8006158:	699b      	ldr	r3, [r3, #24]
 800615a:	61bb      	str	r3, [r7, #24]
 800615c:	687b      	ldr	r3, [r7, #4]
 800615e:	681b      	ldr	r3, [r3, #0]
 8006160:	695b      	ldr	r3, [r3, #20]
 8006162:	61fb      	str	r3, [r7, #28]
 8006164:	69fb      	ldr	r3, [r7, #28]
 8006166:	f003 0301 	and.w	r3, r3, #1
 800616a:	2b00      	cmp	r3, #0
 800616c:	d10d      	bne.n	800618a <HAL_I2C_EV_IRQHandler+0x6e>
 800616e:	693b      	ldr	r3, [r7, #16]
 8006170:	f5b3 0f2a 	cmp.w	r3, #11141120	; 0xaa0000
 8006174:	d003      	beq.n	800617e <HAL_I2C_EV_IRQHandler+0x62>
 8006176:	693b      	ldr	r3, [r7, #16]
 8006178:	f1b3 4f2a 	cmp.w	r3, #2852126720	; 0xaa000000
 800617c:	d101      	bne.n	8006182 <HAL_I2C_EV_IRQHandler+0x66>
 800617e:	2301      	movs	r3, #1
 8006180:	e000      	b.n	8006184 <HAL_I2C_EV_IRQHandler+0x68>
 8006182:	2300      	movs	r3, #0
 8006184:	2b01      	cmp	r3, #1
 8006186:	f000 8132 	beq.w	80063ee <HAL_I2C_EV_IRQHandler+0x2d2>
 800618a:	69fb      	ldr	r3, [r7, #28]
 800618c:	f003 0301 	and.w	r3, r3, #1
 8006190:	2b00      	cmp	r3, #0
 8006192:	d00c      	beq.n	80061ae <HAL_I2C_EV_IRQHandler+0x92>
 8006194:	697b      	ldr	r3, [r7, #20]
 8006196:	0a5b      	lsrs	r3, r3, #9
 8006198:	f003 0301 	and.w	r3, r3, #1
 800619c:	2b00      	cmp	r3, #0
 800619e:	d006      	beq.n	80061ae <HAL_I2C_EV_IRQHandler+0x92>
 80061a0:	6878      	ldr	r0, [r7, #4]
 80061a2:	f001 ffa8 	bl	80080f6 <I2C_ConvertOtherXferOptions>
 80061a6:	6878      	ldr	r0, [r7, #4]
 80061a8:	f000 fd83 	bl	8006cb2 <I2C_Master_SB>
 80061ac:	e092      	b.n	80062d4 <HAL_I2C_EV_IRQHandler+0x1b8>
 80061ae:	69fb      	ldr	r3, [r7, #28]
 80061b0:	08db      	lsrs	r3, r3, #3
 80061b2:	f003 0301 	and.w	r3, r3, #1
 80061b6:	2b00      	cmp	r3, #0
 80061b8:	d009      	beq.n	80061ce <HAL_I2C_EV_IRQHandler+0xb2>
 80061ba:	697b      	ldr	r3, [r7, #20]
 80061bc:	0a5b      	lsrs	r3, r3, #9
 80061be:	f003 0301 	and.w	r3, r3, #1
 80061c2:	2b00      	cmp	r3, #0
 80061c4:	d003      	beq.n	80061ce <HAL_I2C_EV_IRQHandler+0xb2>
 80061c6:	6878      	ldr	r0, [r7, #4]
 80061c8:	f000 fdf9 	bl	8006dbe <I2C_Master_ADD10>
 80061cc:	e082      	b.n	80062d4 <HAL_I2C_EV_IRQHandler+0x1b8>
 80061ce:	69fb      	ldr	r3, [r7, #28]
 80061d0:	085b      	lsrs	r3, r3, #1
 80061d2:	f003 0301 	and.w	r3, r3, #1
 80061d6:	2b00      	cmp	r3, #0
 80061d8:	d009      	beq.n	80061ee <HAL_I2C_EV_IRQHandler+0xd2>
 80061da:	697b      	ldr	r3, [r7, #20]
 80061dc:	0a5b      	lsrs	r3, r3, #9
 80061de:	f003 0301 	and.w	r3, r3, #1
 80061e2:	2b00      	cmp	r3, #0
 80061e4:	d003      	beq.n	80061ee <HAL_I2C_EV_IRQHandler+0xd2>
 80061e6:	6878      	ldr	r0, [r7, #4]
 80061e8:	f000 fe13 	bl	8006e12 <I2C_Master_ADDR>
 80061ec:	e072      	b.n	80062d4 <HAL_I2C_EV_IRQHandler+0x1b8>
 80061ee:	69bb      	ldr	r3, [r7, #24]
 80061f0:	089b      	lsrs	r3, r3, #2
 80061f2:	f003 0301 	and.w	r3, r3, #1
 80061f6:	2b00      	cmp	r3, #0
 80061f8:	d03b      	beq.n	8006272 <HAL_I2C_EV_IRQHandler+0x156>
 80061fa:	687b      	ldr	r3, [r7, #4]
 80061fc:	681b      	ldr	r3, [r3, #0]
 80061fe:	685b      	ldr	r3, [r3, #4]
 8006200:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8006204:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006208:	f000 80f3 	beq.w	80063f2 <HAL_I2C_EV_IRQHandler+0x2d6>
 800620c:	69fb      	ldr	r3, [r7, #28]
 800620e:	09db      	lsrs	r3, r3, #7
 8006210:	f003 0301 	and.w	r3, r3, #1
 8006214:	2b00      	cmp	r3, #0
 8006216:	d00f      	beq.n	8006238 <HAL_I2C_EV_IRQHandler+0x11c>
 8006218:	697b      	ldr	r3, [r7, #20]
 800621a:	0a9b      	lsrs	r3, r3, #10
 800621c:	f003 0301 	and.w	r3, r3, #1
 8006220:	2b00      	cmp	r3, #0
 8006222:	d009      	beq.n	8006238 <HAL_I2C_EV_IRQHandler+0x11c>
 8006224:	69fb      	ldr	r3, [r7, #28]
 8006226:	089b      	lsrs	r3, r3, #2
 8006228:	f003 0301 	and.w	r3, r3, #1
 800622c:	2b00      	cmp	r3, #0
 800622e:	d103      	bne.n	8006238 <HAL_I2C_EV_IRQHandler+0x11c>
 8006230:	6878      	ldr	r0, [r7, #4]
 8006232:	f000 f9f3 	bl	800661c <I2C_MasterTransmit_TXE>
 8006236:	e04d      	b.n	80062d4 <HAL_I2C_EV_IRQHandler+0x1b8>
 8006238:	69fb      	ldr	r3, [r7, #28]
 800623a:	089b      	lsrs	r3, r3, #2
 800623c:	f003 0301 	and.w	r3, r3, #1
 8006240:	2b00      	cmp	r3, #0
 8006242:	f000 80d6 	beq.w	80063f2 <HAL_I2C_EV_IRQHandler+0x2d6>
 8006246:	697b      	ldr	r3, [r7, #20]
 8006248:	0a5b      	lsrs	r3, r3, #9
 800624a:	f003 0301 	and.w	r3, r3, #1
 800624e:	2b00      	cmp	r3, #0
 8006250:	f000 80cf 	beq.w	80063f2 <HAL_I2C_EV_IRQHandler+0x2d6>
 8006254:	7bbb      	ldrb	r3, [r7, #14]
 8006256:	2b21      	cmp	r3, #33	; 0x21
 8006258:	d103      	bne.n	8006262 <HAL_I2C_EV_IRQHandler+0x146>
 800625a:	6878      	ldr	r0, [r7, #4]
 800625c:	f000 fa7a 	bl	8006754 <I2C_MasterTransmit_BTF>
 8006260:	e0c7      	b.n	80063f2 <HAL_I2C_EV_IRQHandler+0x2d6>
 8006262:	7bfb      	ldrb	r3, [r7, #15]
 8006264:	2b40      	cmp	r3, #64	; 0x40
 8006266:	f040 80c4 	bne.w	80063f2 <HAL_I2C_EV_IRQHandler+0x2d6>
 800626a:	6878      	ldr	r0, [r7, #4]
 800626c:	f000 fae8 	bl	8006840 <I2C_MemoryTransmit_TXE_BTF>
 8006270:	e0bf      	b.n	80063f2 <HAL_I2C_EV_IRQHandler+0x2d6>
 8006272:	687b      	ldr	r3, [r7, #4]
 8006274:	681b      	ldr	r3, [r3, #0]
 8006276:	685b      	ldr	r3, [r3, #4]
 8006278:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800627c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006280:	f000 80b7 	beq.w	80063f2 <HAL_I2C_EV_IRQHandler+0x2d6>
 8006284:	69fb      	ldr	r3, [r7, #28]
 8006286:	099b      	lsrs	r3, r3, #6
 8006288:	f003 0301 	and.w	r3, r3, #1
 800628c:	2b00      	cmp	r3, #0
 800628e:	d00f      	beq.n	80062b0 <HAL_I2C_EV_IRQHandler+0x194>
 8006290:	697b      	ldr	r3, [r7, #20]
 8006292:	0a9b      	lsrs	r3, r3, #10
 8006294:	f003 0301 	and.w	r3, r3, #1
 8006298:	2b00      	cmp	r3, #0
 800629a:	d009      	beq.n	80062b0 <HAL_I2C_EV_IRQHandler+0x194>
 800629c:	69fb      	ldr	r3, [r7, #28]
 800629e:	089b      	lsrs	r3, r3, #2
 80062a0:	f003 0301 	and.w	r3, r3, #1
 80062a4:	2b00      	cmp	r3, #0
 80062a6:	d103      	bne.n	80062b0 <HAL_I2C_EV_IRQHandler+0x194>
 80062a8:	6878      	ldr	r0, [r7, #4]
 80062aa:	f000 fb5d 	bl	8006968 <I2C_MasterReceive_RXNE>
 80062ae:	e011      	b.n	80062d4 <HAL_I2C_EV_IRQHandler+0x1b8>
 80062b0:	69fb      	ldr	r3, [r7, #28]
 80062b2:	089b      	lsrs	r3, r3, #2
 80062b4:	f003 0301 	and.w	r3, r3, #1
 80062b8:	2b00      	cmp	r3, #0
 80062ba:	f000 809a 	beq.w	80063f2 <HAL_I2C_EV_IRQHandler+0x2d6>
 80062be:	697b      	ldr	r3, [r7, #20]
 80062c0:	0a5b      	lsrs	r3, r3, #9
 80062c2:	f003 0301 	and.w	r3, r3, #1
 80062c6:	2b00      	cmp	r3, #0
 80062c8:	f000 8093 	beq.w	80063f2 <HAL_I2C_EV_IRQHandler+0x2d6>
 80062cc:	6878      	ldr	r0, [r7, #4]
 80062ce:	f000 fc06 	bl	8006ade <I2C_MasterReceive_BTF>
 80062d2:	e08e      	b.n	80063f2 <HAL_I2C_EV_IRQHandler+0x2d6>
 80062d4:	e08d      	b.n	80063f2 <HAL_I2C_EV_IRQHandler+0x2d6>
 80062d6:	687b      	ldr	r3, [r7, #4]
 80062d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80062da:	2b00      	cmp	r3, #0
 80062dc:	d004      	beq.n	80062e8 <HAL_I2C_EV_IRQHandler+0x1cc>
 80062de:	687b      	ldr	r3, [r7, #4]
 80062e0:	681b      	ldr	r3, [r3, #0]
 80062e2:	695b      	ldr	r3, [r3, #20]
 80062e4:	61fb      	str	r3, [r7, #28]
 80062e6:	e007      	b.n	80062f8 <HAL_I2C_EV_IRQHandler+0x1dc>
 80062e8:	687b      	ldr	r3, [r7, #4]
 80062ea:	681b      	ldr	r3, [r3, #0]
 80062ec:	699b      	ldr	r3, [r3, #24]
 80062ee:	61bb      	str	r3, [r7, #24]
 80062f0:	687b      	ldr	r3, [r7, #4]
 80062f2:	681b      	ldr	r3, [r3, #0]
 80062f4:	695b      	ldr	r3, [r3, #20]
 80062f6:	61fb      	str	r3, [r7, #28]
 80062f8:	69fb      	ldr	r3, [r7, #28]
 80062fa:	085b      	lsrs	r3, r3, #1
 80062fc:	f003 0301 	and.w	r3, r3, #1
 8006300:	2b00      	cmp	r3, #0
 8006302:	d012      	beq.n	800632a <HAL_I2C_EV_IRQHandler+0x20e>
 8006304:	697b      	ldr	r3, [r7, #20]
 8006306:	0a5b      	lsrs	r3, r3, #9
 8006308:	f003 0301 	and.w	r3, r3, #1
 800630c:	2b00      	cmp	r3, #0
 800630e:	d00c      	beq.n	800632a <HAL_I2C_EV_IRQHandler+0x20e>
 8006310:	687b      	ldr	r3, [r7, #4]
 8006312:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006314:	2b00      	cmp	r3, #0
 8006316:	d003      	beq.n	8006320 <HAL_I2C_EV_IRQHandler+0x204>
 8006318:	687b      	ldr	r3, [r7, #4]
 800631a:	681b      	ldr	r3, [r3, #0]
 800631c:	699b      	ldr	r3, [r3, #24]
 800631e:	61bb      	str	r3, [r7, #24]
 8006320:	69b9      	ldr	r1, [r7, #24]
 8006322:	6878      	ldr	r0, [r7, #4]
 8006324:	f000 ffc4 	bl	80072b0 <I2C_Slave_ADDR>
 8006328:	e066      	b.n	80063f8 <HAL_I2C_EV_IRQHandler+0x2dc>
 800632a:	69fb      	ldr	r3, [r7, #28]
 800632c:	091b      	lsrs	r3, r3, #4
 800632e:	f003 0301 	and.w	r3, r3, #1
 8006332:	2b00      	cmp	r3, #0
 8006334:	d009      	beq.n	800634a <HAL_I2C_EV_IRQHandler+0x22e>
 8006336:	697b      	ldr	r3, [r7, #20]
 8006338:	0a5b      	lsrs	r3, r3, #9
 800633a:	f003 0301 	and.w	r3, r3, #1
 800633e:	2b00      	cmp	r3, #0
 8006340:	d003      	beq.n	800634a <HAL_I2C_EV_IRQHandler+0x22e>
 8006342:	6878      	ldr	r0, [r7, #4]
 8006344:	f000 fffe 	bl	8007344 <I2C_Slave_STOPF>
 8006348:	e056      	b.n	80063f8 <HAL_I2C_EV_IRQHandler+0x2dc>
 800634a:	7bbb      	ldrb	r3, [r7, #14]
 800634c:	2b21      	cmp	r3, #33	; 0x21
 800634e:	d002      	beq.n	8006356 <HAL_I2C_EV_IRQHandler+0x23a>
 8006350:	7bbb      	ldrb	r3, [r7, #14]
 8006352:	2b29      	cmp	r3, #41	; 0x29
 8006354:	d125      	bne.n	80063a2 <HAL_I2C_EV_IRQHandler+0x286>
 8006356:	69fb      	ldr	r3, [r7, #28]
 8006358:	09db      	lsrs	r3, r3, #7
 800635a:	f003 0301 	and.w	r3, r3, #1
 800635e:	2b00      	cmp	r3, #0
 8006360:	d00f      	beq.n	8006382 <HAL_I2C_EV_IRQHandler+0x266>
 8006362:	697b      	ldr	r3, [r7, #20]
 8006364:	0a9b      	lsrs	r3, r3, #10
 8006366:	f003 0301 	and.w	r3, r3, #1
 800636a:	2b00      	cmp	r3, #0
 800636c:	d009      	beq.n	8006382 <HAL_I2C_EV_IRQHandler+0x266>
 800636e:	69fb      	ldr	r3, [r7, #28]
 8006370:	089b      	lsrs	r3, r3, #2
 8006372:	f003 0301 	and.w	r3, r3, #1
 8006376:	2b00      	cmp	r3, #0
 8006378:	d103      	bne.n	8006382 <HAL_I2C_EV_IRQHandler+0x266>
 800637a:	6878      	ldr	r0, [r7, #4]
 800637c:	f000 feda 	bl	8007134 <I2C_SlaveTransmit_TXE>
 8006380:	e039      	b.n	80063f6 <HAL_I2C_EV_IRQHandler+0x2da>
 8006382:	69fb      	ldr	r3, [r7, #28]
 8006384:	089b      	lsrs	r3, r3, #2
 8006386:	f003 0301 	and.w	r3, r3, #1
 800638a:	2b00      	cmp	r3, #0
 800638c:	d033      	beq.n	80063f6 <HAL_I2C_EV_IRQHandler+0x2da>
 800638e:	697b      	ldr	r3, [r7, #20]
 8006390:	0a5b      	lsrs	r3, r3, #9
 8006392:	f003 0301 	and.w	r3, r3, #1
 8006396:	2b00      	cmp	r3, #0
 8006398:	d02d      	beq.n	80063f6 <HAL_I2C_EV_IRQHandler+0x2da>
 800639a:	6878      	ldr	r0, [r7, #4]
 800639c:	f000 ff07 	bl	80071ae <I2C_SlaveTransmit_BTF>
 80063a0:	e029      	b.n	80063f6 <HAL_I2C_EV_IRQHandler+0x2da>
 80063a2:	69fb      	ldr	r3, [r7, #28]
 80063a4:	099b      	lsrs	r3, r3, #6
 80063a6:	f003 0301 	and.w	r3, r3, #1
 80063aa:	2b00      	cmp	r3, #0
 80063ac:	d00f      	beq.n	80063ce <HAL_I2C_EV_IRQHandler+0x2b2>
 80063ae:	697b      	ldr	r3, [r7, #20]
 80063b0:	0a9b      	lsrs	r3, r3, #10
 80063b2:	f003 0301 	and.w	r3, r3, #1
 80063b6:	2b00      	cmp	r3, #0
 80063b8:	d009      	beq.n	80063ce <HAL_I2C_EV_IRQHandler+0x2b2>
 80063ba:	69fb      	ldr	r3, [r7, #28]
 80063bc:	089b      	lsrs	r3, r3, #2
 80063be:	f003 0301 	and.w	r3, r3, #1
 80063c2:	2b00      	cmp	r3, #0
 80063c4:	d103      	bne.n	80063ce <HAL_I2C_EV_IRQHandler+0x2b2>
 80063c6:	6878      	ldr	r0, [r7, #4]
 80063c8:	f000 ff12 	bl	80071f0 <I2C_SlaveReceive_RXNE>
 80063cc:	e014      	b.n	80063f8 <HAL_I2C_EV_IRQHandler+0x2dc>
 80063ce:	69fb      	ldr	r3, [r7, #28]
 80063d0:	089b      	lsrs	r3, r3, #2
 80063d2:	f003 0301 	and.w	r3, r3, #1
 80063d6:	2b00      	cmp	r3, #0
 80063d8:	d00e      	beq.n	80063f8 <HAL_I2C_EV_IRQHandler+0x2dc>
 80063da:	697b      	ldr	r3, [r7, #20]
 80063dc:	0a5b      	lsrs	r3, r3, #9
 80063de:	f003 0301 	and.w	r3, r3, #1
 80063e2:	2b00      	cmp	r3, #0
 80063e4:	d008      	beq.n	80063f8 <HAL_I2C_EV_IRQHandler+0x2dc>
 80063e6:	6878      	ldr	r0, [r7, #4]
 80063e8:	f000 ff40 	bl	800726c <I2C_SlaveReceive_BTF>
 80063ec:	e004      	b.n	80063f8 <HAL_I2C_EV_IRQHandler+0x2dc>
 80063ee:	bf00      	nop
 80063f0:	e002      	b.n	80063f8 <HAL_I2C_EV_IRQHandler+0x2dc>
 80063f2:	bf00      	nop
 80063f4:	e000      	b.n	80063f8 <HAL_I2C_EV_IRQHandler+0x2dc>
 80063f6:	bf00      	nop
 80063f8:	3720      	adds	r7, #32
 80063fa:	46bd      	mov	sp, r7
 80063fc:	bd80      	pop	{r7, pc}

080063fe <HAL_I2C_ER_IRQHandler>:
 80063fe:	b580      	push	{r7, lr}
 8006400:	b08a      	sub	sp, #40	; 0x28
 8006402:	af00      	add	r7, sp, #0
 8006404:	6078      	str	r0, [r7, #4]
 8006406:	687b      	ldr	r3, [r7, #4]
 8006408:	681b      	ldr	r3, [r3, #0]
 800640a:	695b      	ldr	r3, [r3, #20]
 800640c:	623b      	str	r3, [r7, #32]
 800640e:	687b      	ldr	r3, [r7, #4]
 8006410:	681b      	ldr	r3, [r3, #0]
 8006412:	685b      	ldr	r3, [r3, #4]
 8006414:	61fb      	str	r3, [r7, #28]
 8006416:	2300      	movs	r3, #0
 8006418:	627b      	str	r3, [r7, #36]	; 0x24
 800641a:	687b      	ldr	r3, [r7, #4]
 800641c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006420:	76fb      	strb	r3, [r7, #27]
 8006422:	6a3b      	ldr	r3, [r7, #32]
 8006424:	0a1b      	lsrs	r3, r3, #8
 8006426:	f003 0301 	and.w	r3, r3, #1
 800642a:	2b00      	cmp	r3, #0
 800642c:	d00e      	beq.n	800644c <HAL_I2C_ER_IRQHandler+0x4e>
 800642e:	69fb      	ldr	r3, [r7, #28]
 8006430:	0a1b      	lsrs	r3, r3, #8
 8006432:	f003 0301 	and.w	r3, r3, #1
 8006436:	2b00      	cmp	r3, #0
 8006438:	d008      	beq.n	800644c <HAL_I2C_ER_IRQHandler+0x4e>
 800643a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800643c:	f043 0301 	orr.w	r3, r3, #1
 8006440:	627b      	str	r3, [r7, #36]	; 0x24
 8006442:	687b      	ldr	r3, [r7, #4]
 8006444:	681b      	ldr	r3, [r3, #0]
 8006446:	f46f 7280 	mvn.w	r2, #256	; 0x100
 800644a:	615a      	str	r2, [r3, #20]
 800644c:	6a3b      	ldr	r3, [r7, #32]
 800644e:	0a5b      	lsrs	r3, r3, #9
 8006450:	f003 0301 	and.w	r3, r3, #1
 8006454:	2b00      	cmp	r3, #0
 8006456:	d00e      	beq.n	8006476 <HAL_I2C_ER_IRQHandler+0x78>
 8006458:	69fb      	ldr	r3, [r7, #28]
 800645a:	0a1b      	lsrs	r3, r3, #8
 800645c:	f003 0301 	and.w	r3, r3, #1
 8006460:	2b00      	cmp	r3, #0
 8006462:	d008      	beq.n	8006476 <HAL_I2C_ER_IRQHandler+0x78>
 8006464:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006466:	f043 0302 	orr.w	r3, r3, #2
 800646a:	627b      	str	r3, [r7, #36]	; 0x24
 800646c:	687b      	ldr	r3, [r7, #4]
 800646e:	681b      	ldr	r3, [r3, #0]
 8006470:	f46f 7200 	mvn.w	r2, #512	; 0x200
 8006474:	615a      	str	r2, [r3, #20]
 8006476:	6a3b      	ldr	r3, [r7, #32]
 8006478:	0a9b      	lsrs	r3, r3, #10
 800647a:	f003 0301 	and.w	r3, r3, #1
 800647e:	2b00      	cmp	r3, #0
 8006480:	d03f      	beq.n	8006502 <HAL_I2C_ER_IRQHandler+0x104>
 8006482:	69fb      	ldr	r3, [r7, #28]
 8006484:	0a1b      	lsrs	r3, r3, #8
 8006486:	f003 0301 	and.w	r3, r3, #1
 800648a:	2b00      	cmp	r3, #0
 800648c:	d039      	beq.n	8006502 <HAL_I2C_ER_IRQHandler+0x104>
 800648e:	7efb      	ldrb	r3, [r7, #27]
 8006490:	76bb      	strb	r3, [r7, #26]
 8006492:	687b      	ldr	r3, [r7, #4]
 8006494:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006496:	b29b      	uxth	r3, r3
 8006498:	617b      	str	r3, [r7, #20]
 800649a:	687b      	ldr	r3, [r7, #4]
 800649c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80064a0:	74fb      	strb	r3, [r7, #19]
 80064a2:	687b      	ldr	r3, [r7, #4]
 80064a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064a6:	60fb      	str	r3, [r7, #12]
 80064a8:	7ebb      	ldrb	r3, [r7, #26]
 80064aa:	2b20      	cmp	r3, #32
 80064ac:	d112      	bne.n	80064d4 <HAL_I2C_ER_IRQHandler+0xd6>
 80064ae:	697b      	ldr	r3, [r7, #20]
 80064b0:	2b00      	cmp	r3, #0
 80064b2:	d10f      	bne.n	80064d4 <HAL_I2C_ER_IRQHandler+0xd6>
 80064b4:	7cfb      	ldrb	r3, [r7, #19]
 80064b6:	2b21      	cmp	r3, #33	; 0x21
 80064b8:	d008      	beq.n	80064cc <HAL_I2C_ER_IRQHandler+0xce>
 80064ba:	7cfb      	ldrb	r3, [r7, #19]
 80064bc:	2b29      	cmp	r3, #41	; 0x29
 80064be:	d005      	beq.n	80064cc <HAL_I2C_ER_IRQHandler+0xce>
 80064c0:	7cfb      	ldrb	r3, [r7, #19]
 80064c2:	2b28      	cmp	r3, #40	; 0x28
 80064c4:	d106      	bne.n	80064d4 <HAL_I2C_ER_IRQHandler+0xd6>
 80064c6:	68fb      	ldr	r3, [r7, #12]
 80064c8:	2b21      	cmp	r3, #33	; 0x21
 80064ca:	d103      	bne.n	80064d4 <HAL_I2C_ER_IRQHandler+0xd6>
 80064cc:	6878      	ldr	r0, [r7, #4]
 80064ce:	f001 f869 	bl	80075a4 <I2C_Slave_AF>
 80064d2:	e016      	b.n	8006502 <HAL_I2C_ER_IRQHandler+0x104>
 80064d4:	687b      	ldr	r3, [r7, #4]
 80064d6:	681b      	ldr	r3, [r3, #0]
 80064d8:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80064dc:	615a      	str	r2, [r3, #20]
 80064de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80064e0:	f043 0304 	orr.w	r3, r3, #4
 80064e4:	627b      	str	r3, [r7, #36]	; 0x24
 80064e6:	7efb      	ldrb	r3, [r7, #27]
 80064e8:	2b10      	cmp	r3, #16
 80064ea:	d002      	beq.n	80064f2 <HAL_I2C_ER_IRQHandler+0xf4>
 80064ec:	7efb      	ldrb	r3, [r7, #27]
 80064ee:	2b40      	cmp	r3, #64	; 0x40
 80064f0:	d107      	bne.n	8006502 <HAL_I2C_ER_IRQHandler+0x104>
 80064f2:	687b      	ldr	r3, [r7, #4]
 80064f4:	681b      	ldr	r3, [r3, #0]
 80064f6:	681a      	ldr	r2, [r3, #0]
 80064f8:	687b      	ldr	r3, [r7, #4]
 80064fa:	681b      	ldr	r3, [r3, #0]
 80064fc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006500:	601a      	str	r2, [r3, #0]
 8006502:	6a3b      	ldr	r3, [r7, #32]
 8006504:	0adb      	lsrs	r3, r3, #11
 8006506:	f003 0301 	and.w	r3, r3, #1
 800650a:	2b00      	cmp	r3, #0
 800650c:	d00e      	beq.n	800652c <HAL_I2C_ER_IRQHandler+0x12e>
 800650e:	69fb      	ldr	r3, [r7, #28]
 8006510:	0a1b      	lsrs	r3, r3, #8
 8006512:	f003 0301 	and.w	r3, r3, #1
 8006516:	2b00      	cmp	r3, #0
 8006518:	d008      	beq.n	800652c <HAL_I2C_ER_IRQHandler+0x12e>
 800651a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800651c:	f043 0308 	orr.w	r3, r3, #8
 8006520:	627b      	str	r3, [r7, #36]	; 0x24
 8006522:	687b      	ldr	r3, [r7, #4]
 8006524:	681b      	ldr	r3, [r3, #0]
 8006526:	f46f 6200 	mvn.w	r2, #2048	; 0x800
 800652a:	615a      	str	r2, [r3, #20]
 800652c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800652e:	2b00      	cmp	r3, #0
 8006530:	d008      	beq.n	8006544 <HAL_I2C_ER_IRQHandler+0x146>
 8006532:	687b      	ldr	r3, [r7, #4]
 8006534:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006536:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006538:	431a      	orrs	r2, r3
 800653a:	687b      	ldr	r3, [r7, #4]
 800653c:	641a      	str	r2, [r3, #64]	; 0x40
 800653e:	6878      	ldr	r0, [r7, #4]
 8006540:	f001 f8a0 	bl	8007684 <I2C_ITError>
 8006544:	bf00      	nop
 8006546:	3728      	adds	r7, #40	; 0x28
 8006548:	46bd      	mov	sp, r7
 800654a:	bd80      	pop	{r7, pc}

0800654c <HAL_I2C_MasterTxCpltCallback>:
 800654c:	b480      	push	{r7}
 800654e:	b083      	sub	sp, #12
 8006550:	af00      	add	r7, sp, #0
 8006552:	6078      	str	r0, [r7, #4]
 8006554:	bf00      	nop
 8006556:	370c      	adds	r7, #12
 8006558:	46bd      	mov	sp, r7
 800655a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800655e:	4770      	bx	lr

08006560 <HAL_I2C_MasterRxCpltCallback>:
 8006560:	b480      	push	{r7}
 8006562:	b083      	sub	sp, #12
 8006564:	af00      	add	r7, sp, #0
 8006566:	6078      	str	r0, [r7, #4]
 8006568:	bf00      	nop
 800656a:	370c      	adds	r7, #12
 800656c:	46bd      	mov	sp, r7
 800656e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006572:	4770      	bx	lr

08006574 <HAL_I2C_SlaveTxCpltCallback>:
 8006574:	b480      	push	{r7}
 8006576:	b083      	sub	sp, #12
 8006578:	af00      	add	r7, sp, #0
 800657a:	6078      	str	r0, [r7, #4]
 800657c:	bf00      	nop
 800657e:	370c      	adds	r7, #12
 8006580:	46bd      	mov	sp, r7
 8006582:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006586:	4770      	bx	lr

08006588 <HAL_I2C_SlaveRxCpltCallback>:
 8006588:	b480      	push	{r7}
 800658a:	b083      	sub	sp, #12
 800658c:	af00      	add	r7, sp, #0
 800658e:	6078      	str	r0, [r7, #4]
 8006590:	bf00      	nop
 8006592:	370c      	adds	r7, #12
 8006594:	46bd      	mov	sp, r7
 8006596:	f85d 7b04 	ldr.w	r7, [sp], #4
 800659a:	4770      	bx	lr

0800659c <HAL_I2C_AddrCallback>:
 800659c:	b480      	push	{r7}
 800659e:	b083      	sub	sp, #12
 80065a0:	af00      	add	r7, sp, #0
 80065a2:	6078      	str	r0, [r7, #4]
 80065a4:	460b      	mov	r3, r1
 80065a6:	70fb      	strb	r3, [r7, #3]
 80065a8:	4613      	mov	r3, r2
 80065aa:	803b      	strh	r3, [r7, #0]
 80065ac:	bf00      	nop
 80065ae:	370c      	adds	r7, #12
 80065b0:	46bd      	mov	sp, r7
 80065b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065b6:	4770      	bx	lr

080065b8 <HAL_I2C_ListenCpltCallback>:
 80065b8:	b480      	push	{r7}
 80065ba:	b083      	sub	sp, #12
 80065bc:	af00      	add	r7, sp, #0
 80065be:	6078      	str	r0, [r7, #4]
 80065c0:	bf00      	nop
 80065c2:	370c      	adds	r7, #12
 80065c4:	46bd      	mov	sp, r7
 80065c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065ca:	4770      	bx	lr

080065cc <HAL_I2C_MemTxCpltCallback>:
 80065cc:	b480      	push	{r7}
 80065ce:	b083      	sub	sp, #12
 80065d0:	af00      	add	r7, sp, #0
 80065d2:	6078      	str	r0, [r7, #4]
 80065d4:	bf00      	nop
 80065d6:	370c      	adds	r7, #12
 80065d8:	46bd      	mov	sp, r7
 80065da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065de:	4770      	bx	lr

080065e0 <HAL_I2C_MemRxCpltCallback>:
 80065e0:	b480      	push	{r7}
 80065e2:	b083      	sub	sp, #12
 80065e4:	af00      	add	r7, sp, #0
 80065e6:	6078      	str	r0, [r7, #4]
 80065e8:	bf00      	nop
 80065ea:	370c      	adds	r7, #12
 80065ec:	46bd      	mov	sp, r7
 80065ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065f2:	4770      	bx	lr

080065f4 <HAL_I2C_ErrorCallback>:
 80065f4:	b480      	push	{r7}
 80065f6:	b083      	sub	sp, #12
 80065f8:	af00      	add	r7, sp, #0
 80065fa:	6078      	str	r0, [r7, #4]
 80065fc:	bf00      	nop
 80065fe:	370c      	adds	r7, #12
 8006600:	46bd      	mov	sp, r7
 8006602:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006606:	4770      	bx	lr

08006608 <HAL_I2C_AbortCpltCallback>:
 8006608:	b480      	push	{r7}
 800660a:	b083      	sub	sp, #12
 800660c:	af00      	add	r7, sp, #0
 800660e:	6078      	str	r0, [r7, #4]
 8006610:	bf00      	nop
 8006612:	370c      	adds	r7, #12
 8006614:	46bd      	mov	sp, r7
 8006616:	f85d 7b04 	ldr.w	r7, [sp], #4
 800661a:	4770      	bx	lr

0800661c <I2C_MasterTransmit_TXE>:
 800661c:	b580      	push	{r7, lr}
 800661e:	b084      	sub	sp, #16
 8006620:	af00      	add	r7, sp, #0
 8006622:	6078      	str	r0, [r7, #4]
 8006624:	687b      	ldr	r3, [r7, #4]
 8006626:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800662a:	73fb      	strb	r3, [r7, #15]
 800662c:	687b      	ldr	r3, [r7, #4]
 800662e:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006632:	73bb      	strb	r3, [r7, #14]
 8006634:	687b      	ldr	r3, [r7, #4]
 8006636:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006638:	60bb      	str	r3, [r7, #8]
 800663a:	687b      	ldr	r3, [r7, #4]
 800663c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800663e:	2b00      	cmp	r3, #0
 8006640:	d150      	bne.n	80066e4 <I2C_MasterTransmit_TXE+0xc8>
 8006642:	7bfb      	ldrb	r3, [r7, #15]
 8006644:	2b21      	cmp	r3, #33	; 0x21
 8006646:	d14d      	bne.n	80066e4 <I2C_MasterTransmit_TXE+0xc8>
 8006648:	68bb      	ldr	r3, [r7, #8]
 800664a:	2b08      	cmp	r3, #8
 800664c:	d01d      	beq.n	800668a <I2C_MasterTransmit_TXE+0x6e>
 800664e:	68bb      	ldr	r3, [r7, #8]
 8006650:	2b20      	cmp	r3, #32
 8006652:	d01a      	beq.n	800668a <I2C_MasterTransmit_TXE+0x6e>
 8006654:	68bb      	ldr	r3, [r7, #8]
 8006656:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800665a:	d016      	beq.n	800668a <I2C_MasterTransmit_TXE+0x6e>
 800665c:	687b      	ldr	r3, [r7, #4]
 800665e:	681b      	ldr	r3, [r3, #0]
 8006660:	685a      	ldr	r2, [r3, #4]
 8006662:	687b      	ldr	r3, [r7, #4]
 8006664:	681b      	ldr	r3, [r3, #0]
 8006666:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800666a:	605a      	str	r2, [r3, #4]
 800666c:	687b      	ldr	r3, [r7, #4]
 800666e:	2211      	movs	r2, #17
 8006670:	631a      	str	r2, [r3, #48]	; 0x30
 8006672:	687b      	ldr	r3, [r7, #4]
 8006674:	2200      	movs	r2, #0
 8006676:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800667a:	687b      	ldr	r3, [r7, #4]
 800667c:	2220      	movs	r2, #32
 800667e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006682:	6878      	ldr	r0, [r7, #4]
 8006684:	f7ff ff62 	bl	800654c <HAL_I2C_MasterTxCpltCallback>
 8006688:	e060      	b.n	800674c <I2C_MasterTransmit_TXE+0x130>
 800668a:	687b      	ldr	r3, [r7, #4]
 800668c:	681b      	ldr	r3, [r3, #0]
 800668e:	685a      	ldr	r2, [r3, #4]
 8006690:	687b      	ldr	r3, [r7, #4]
 8006692:	681b      	ldr	r3, [r3, #0]
 8006694:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006698:	605a      	str	r2, [r3, #4]
 800669a:	687b      	ldr	r3, [r7, #4]
 800669c:	681b      	ldr	r3, [r3, #0]
 800669e:	681a      	ldr	r2, [r3, #0]
 80066a0:	687b      	ldr	r3, [r7, #4]
 80066a2:	681b      	ldr	r3, [r3, #0]
 80066a4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80066a8:	601a      	str	r2, [r3, #0]
 80066aa:	687b      	ldr	r3, [r7, #4]
 80066ac:	2200      	movs	r2, #0
 80066ae:	631a      	str	r2, [r3, #48]	; 0x30
 80066b0:	687b      	ldr	r3, [r7, #4]
 80066b2:	2220      	movs	r2, #32
 80066b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80066b8:	687b      	ldr	r3, [r7, #4]
 80066ba:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80066be:	b2db      	uxtb	r3, r3
 80066c0:	2b40      	cmp	r3, #64	; 0x40
 80066c2:	d107      	bne.n	80066d4 <I2C_MasterTransmit_TXE+0xb8>
 80066c4:	687b      	ldr	r3, [r7, #4]
 80066c6:	2200      	movs	r2, #0
 80066c8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80066cc:	6878      	ldr	r0, [r7, #4]
 80066ce:	f7ff ff7d 	bl	80065cc <HAL_I2C_MemTxCpltCallback>
 80066d2:	e03b      	b.n	800674c <I2C_MasterTransmit_TXE+0x130>
 80066d4:	687b      	ldr	r3, [r7, #4]
 80066d6:	2200      	movs	r2, #0
 80066d8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80066dc:	6878      	ldr	r0, [r7, #4]
 80066de:	f7ff ff35 	bl	800654c <HAL_I2C_MasterTxCpltCallback>
 80066e2:	e033      	b.n	800674c <I2C_MasterTransmit_TXE+0x130>
 80066e4:	7bfb      	ldrb	r3, [r7, #15]
 80066e6:	2b21      	cmp	r3, #33	; 0x21
 80066e8:	d005      	beq.n	80066f6 <I2C_MasterTransmit_TXE+0xda>
 80066ea:	7bbb      	ldrb	r3, [r7, #14]
 80066ec:	2b40      	cmp	r3, #64	; 0x40
 80066ee:	d12d      	bne.n	800674c <I2C_MasterTransmit_TXE+0x130>
 80066f0:	7bfb      	ldrb	r3, [r7, #15]
 80066f2:	2b22      	cmp	r3, #34	; 0x22
 80066f4:	d12a      	bne.n	800674c <I2C_MasterTransmit_TXE+0x130>
 80066f6:	687b      	ldr	r3, [r7, #4]
 80066f8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80066fa:	b29b      	uxth	r3, r3
 80066fc:	2b00      	cmp	r3, #0
 80066fe:	d108      	bne.n	8006712 <I2C_MasterTransmit_TXE+0xf6>
 8006700:	687b      	ldr	r3, [r7, #4]
 8006702:	681b      	ldr	r3, [r3, #0]
 8006704:	685a      	ldr	r2, [r3, #4]
 8006706:	687b      	ldr	r3, [r7, #4]
 8006708:	681b      	ldr	r3, [r3, #0]
 800670a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800670e:	605a      	str	r2, [r3, #4]
 8006710:	e01c      	b.n	800674c <I2C_MasterTransmit_TXE+0x130>
 8006712:	687b      	ldr	r3, [r7, #4]
 8006714:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006718:	b2db      	uxtb	r3, r3
 800671a:	2b40      	cmp	r3, #64	; 0x40
 800671c:	d103      	bne.n	8006726 <I2C_MasterTransmit_TXE+0x10a>
 800671e:	6878      	ldr	r0, [r7, #4]
 8006720:	f000 f88e 	bl	8006840 <I2C_MemoryTransmit_TXE_BTF>
 8006724:	e012      	b.n	800674c <I2C_MasterTransmit_TXE+0x130>
 8006726:	687b      	ldr	r3, [r7, #4]
 8006728:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800672a:	781a      	ldrb	r2, [r3, #0]
 800672c:	687b      	ldr	r3, [r7, #4]
 800672e:	681b      	ldr	r3, [r3, #0]
 8006730:	611a      	str	r2, [r3, #16]
 8006732:	687b      	ldr	r3, [r7, #4]
 8006734:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006736:	1c5a      	adds	r2, r3, #1
 8006738:	687b      	ldr	r3, [r7, #4]
 800673a:	625a      	str	r2, [r3, #36]	; 0x24
 800673c:	687b      	ldr	r3, [r7, #4]
 800673e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006740:	b29b      	uxth	r3, r3
 8006742:	3b01      	subs	r3, #1
 8006744:	b29a      	uxth	r2, r3
 8006746:	687b      	ldr	r3, [r7, #4]
 8006748:	855a      	strh	r2, [r3, #42]	; 0x2a
 800674a:	e7ff      	b.n	800674c <I2C_MasterTransmit_TXE+0x130>
 800674c:	bf00      	nop
 800674e:	3710      	adds	r7, #16
 8006750:	46bd      	mov	sp, r7
 8006752:	bd80      	pop	{r7, pc}

08006754 <I2C_MasterTransmit_BTF>:
 8006754:	b580      	push	{r7, lr}
 8006756:	b084      	sub	sp, #16
 8006758:	af00      	add	r7, sp, #0
 800675a:	6078      	str	r0, [r7, #4]
 800675c:	687b      	ldr	r3, [r7, #4]
 800675e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006760:	60fb      	str	r3, [r7, #12]
 8006762:	687b      	ldr	r3, [r7, #4]
 8006764:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006768:	b2db      	uxtb	r3, r3
 800676a:	2b21      	cmp	r3, #33	; 0x21
 800676c:	d164      	bne.n	8006838 <I2C_MasterTransmit_BTF+0xe4>
 800676e:	687b      	ldr	r3, [r7, #4]
 8006770:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006772:	b29b      	uxth	r3, r3
 8006774:	2b00      	cmp	r3, #0
 8006776:	d012      	beq.n	800679e <I2C_MasterTransmit_BTF+0x4a>
 8006778:	687b      	ldr	r3, [r7, #4]
 800677a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800677c:	781a      	ldrb	r2, [r3, #0]
 800677e:	687b      	ldr	r3, [r7, #4]
 8006780:	681b      	ldr	r3, [r3, #0]
 8006782:	611a      	str	r2, [r3, #16]
 8006784:	687b      	ldr	r3, [r7, #4]
 8006786:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006788:	1c5a      	adds	r2, r3, #1
 800678a:	687b      	ldr	r3, [r7, #4]
 800678c:	625a      	str	r2, [r3, #36]	; 0x24
 800678e:	687b      	ldr	r3, [r7, #4]
 8006790:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006792:	b29b      	uxth	r3, r3
 8006794:	3b01      	subs	r3, #1
 8006796:	b29a      	uxth	r2, r3
 8006798:	687b      	ldr	r3, [r7, #4]
 800679a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800679c:	e04c      	b.n	8006838 <I2C_MasterTransmit_BTF+0xe4>
 800679e:	68fb      	ldr	r3, [r7, #12]
 80067a0:	2b08      	cmp	r3, #8
 80067a2:	d01d      	beq.n	80067e0 <I2C_MasterTransmit_BTF+0x8c>
 80067a4:	68fb      	ldr	r3, [r7, #12]
 80067a6:	2b20      	cmp	r3, #32
 80067a8:	d01a      	beq.n	80067e0 <I2C_MasterTransmit_BTF+0x8c>
 80067aa:	68fb      	ldr	r3, [r7, #12]
 80067ac:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80067b0:	d016      	beq.n	80067e0 <I2C_MasterTransmit_BTF+0x8c>
 80067b2:	687b      	ldr	r3, [r7, #4]
 80067b4:	681b      	ldr	r3, [r3, #0]
 80067b6:	685a      	ldr	r2, [r3, #4]
 80067b8:	687b      	ldr	r3, [r7, #4]
 80067ba:	681b      	ldr	r3, [r3, #0]
 80067bc:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80067c0:	605a      	str	r2, [r3, #4]
 80067c2:	687b      	ldr	r3, [r7, #4]
 80067c4:	2211      	movs	r2, #17
 80067c6:	631a      	str	r2, [r3, #48]	; 0x30
 80067c8:	687b      	ldr	r3, [r7, #4]
 80067ca:	2200      	movs	r2, #0
 80067cc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80067d0:	687b      	ldr	r3, [r7, #4]
 80067d2:	2220      	movs	r2, #32
 80067d4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80067d8:	6878      	ldr	r0, [r7, #4]
 80067da:	f7ff feb7 	bl	800654c <HAL_I2C_MasterTxCpltCallback>
 80067de:	e02b      	b.n	8006838 <I2C_MasterTransmit_BTF+0xe4>
 80067e0:	687b      	ldr	r3, [r7, #4]
 80067e2:	681b      	ldr	r3, [r3, #0]
 80067e4:	685a      	ldr	r2, [r3, #4]
 80067e6:	687b      	ldr	r3, [r7, #4]
 80067e8:	681b      	ldr	r3, [r3, #0]
 80067ea:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80067ee:	605a      	str	r2, [r3, #4]
 80067f0:	687b      	ldr	r3, [r7, #4]
 80067f2:	681b      	ldr	r3, [r3, #0]
 80067f4:	681a      	ldr	r2, [r3, #0]
 80067f6:	687b      	ldr	r3, [r7, #4]
 80067f8:	681b      	ldr	r3, [r3, #0]
 80067fa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80067fe:	601a      	str	r2, [r3, #0]
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	2200      	movs	r2, #0
 8006804:	631a      	str	r2, [r3, #48]	; 0x30
 8006806:	687b      	ldr	r3, [r7, #4]
 8006808:	2220      	movs	r2, #32
 800680a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800680e:	687b      	ldr	r3, [r7, #4]
 8006810:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006814:	b2db      	uxtb	r3, r3
 8006816:	2b40      	cmp	r3, #64	; 0x40
 8006818:	d107      	bne.n	800682a <I2C_MasterTransmit_BTF+0xd6>
 800681a:	687b      	ldr	r3, [r7, #4]
 800681c:	2200      	movs	r2, #0
 800681e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006822:	6878      	ldr	r0, [r7, #4]
 8006824:	f7ff fed2 	bl	80065cc <HAL_I2C_MemTxCpltCallback>
 8006828:	e006      	b.n	8006838 <I2C_MasterTransmit_BTF+0xe4>
 800682a:	687b      	ldr	r3, [r7, #4]
 800682c:	2200      	movs	r2, #0
 800682e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006832:	6878      	ldr	r0, [r7, #4]
 8006834:	f7ff fe8a 	bl	800654c <HAL_I2C_MasterTxCpltCallback>
 8006838:	bf00      	nop
 800683a:	3710      	adds	r7, #16
 800683c:	46bd      	mov	sp, r7
 800683e:	bd80      	pop	{r7, pc}

08006840 <I2C_MemoryTransmit_TXE_BTF>:
 8006840:	b580      	push	{r7, lr}
 8006842:	b084      	sub	sp, #16
 8006844:	af00      	add	r7, sp, #0
 8006846:	6078      	str	r0, [r7, #4]
 8006848:	687b      	ldr	r3, [r7, #4]
 800684a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800684e:	73fb      	strb	r3, [r7, #15]
 8006850:	687b      	ldr	r3, [r7, #4]
 8006852:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006854:	2b00      	cmp	r3, #0
 8006856:	d11d      	bne.n	8006894 <I2C_MemoryTransmit_TXE_BTF+0x54>
 8006858:	687b      	ldr	r3, [r7, #4]
 800685a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800685c:	2b01      	cmp	r3, #1
 800685e:	d10b      	bne.n	8006878 <I2C_MemoryTransmit_TXE_BTF+0x38>
 8006860:	687b      	ldr	r3, [r7, #4]
 8006862:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006864:	b2da      	uxtb	r2, r3
 8006866:	687b      	ldr	r3, [r7, #4]
 8006868:	681b      	ldr	r3, [r3, #0]
 800686a:	611a      	str	r2, [r3, #16]
 800686c:	687b      	ldr	r3, [r7, #4]
 800686e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006870:	1c9a      	adds	r2, r3, #2
 8006872:	687b      	ldr	r3, [r7, #4]
 8006874:	651a      	str	r2, [r3, #80]	; 0x50
 8006876:	e073      	b.n	8006960 <I2C_MemoryTransmit_TXE_BTF+0x120>
 8006878:	687b      	ldr	r3, [r7, #4]
 800687a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800687c:	b29b      	uxth	r3, r3
 800687e:	121b      	asrs	r3, r3, #8
 8006880:	b2da      	uxtb	r2, r3
 8006882:	687b      	ldr	r3, [r7, #4]
 8006884:	681b      	ldr	r3, [r3, #0]
 8006886:	611a      	str	r2, [r3, #16]
 8006888:	687b      	ldr	r3, [r7, #4]
 800688a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800688c:	1c5a      	adds	r2, r3, #1
 800688e:	687b      	ldr	r3, [r7, #4]
 8006890:	651a      	str	r2, [r3, #80]	; 0x50
 8006892:	e065      	b.n	8006960 <I2C_MemoryTransmit_TXE_BTF+0x120>
 8006894:	687b      	ldr	r3, [r7, #4]
 8006896:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006898:	2b01      	cmp	r3, #1
 800689a:	d10b      	bne.n	80068b4 <I2C_MemoryTransmit_TXE_BTF+0x74>
 800689c:	687b      	ldr	r3, [r7, #4]
 800689e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80068a0:	b2da      	uxtb	r2, r3
 80068a2:	687b      	ldr	r3, [r7, #4]
 80068a4:	681b      	ldr	r3, [r3, #0]
 80068a6:	611a      	str	r2, [r3, #16]
 80068a8:	687b      	ldr	r3, [r7, #4]
 80068aa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80068ac:	1c5a      	adds	r2, r3, #1
 80068ae:	687b      	ldr	r3, [r7, #4]
 80068b0:	651a      	str	r2, [r3, #80]	; 0x50
 80068b2:	e055      	b.n	8006960 <I2C_MemoryTransmit_TXE_BTF+0x120>
 80068b4:	687b      	ldr	r3, [r7, #4]
 80068b6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80068b8:	2b02      	cmp	r3, #2
 80068ba:	d151      	bne.n	8006960 <I2C_MemoryTransmit_TXE_BTF+0x120>
 80068bc:	7bfb      	ldrb	r3, [r7, #15]
 80068be:	2b22      	cmp	r3, #34	; 0x22
 80068c0:	d10d      	bne.n	80068de <I2C_MemoryTransmit_TXE_BTF+0x9e>
 80068c2:	687b      	ldr	r3, [r7, #4]
 80068c4:	681b      	ldr	r3, [r3, #0]
 80068c6:	681a      	ldr	r2, [r3, #0]
 80068c8:	687b      	ldr	r3, [r7, #4]
 80068ca:	681b      	ldr	r3, [r3, #0]
 80068cc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80068d0:	601a      	str	r2, [r3, #0]
 80068d2:	687b      	ldr	r3, [r7, #4]
 80068d4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80068d6:	1c5a      	adds	r2, r3, #1
 80068d8:	687b      	ldr	r3, [r7, #4]
 80068da:	651a      	str	r2, [r3, #80]	; 0x50
 80068dc:	e040      	b.n	8006960 <I2C_MemoryTransmit_TXE_BTF+0x120>
 80068de:	687b      	ldr	r3, [r7, #4]
 80068e0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80068e2:	b29b      	uxth	r3, r3
 80068e4:	2b00      	cmp	r3, #0
 80068e6:	d015      	beq.n	8006914 <I2C_MemoryTransmit_TXE_BTF+0xd4>
 80068e8:	7bfb      	ldrb	r3, [r7, #15]
 80068ea:	2b21      	cmp	r3, #33	; 0x21
 80068ec:	d112      	bne.n	8006914 <I2C_MemoryTransmit_TXE_BTF+0xd4>
 80068ee:	687b      	ldr	r3, [r7, #4]
 80068f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80068f2:	781a      	ldrb	r2, [r3, #0]
 80068f4:	687b      	ldr	r3, [r7, #4]
 80068f6:	681b      	ldr	r3, [r3, #0]
 80068f8:	611a      	str	r2, [r3, #16]
 80068fa:	687b      	ldr	r3, [r7, #4]
 80068fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80068fe:	1c5a      	adds	r2, r3, #1
 8006900:	687b      	ldr	r3, [r7, #4]
 8006902:	625a      	str	r2, [r3, #36]	; 0x24
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006908:	b29b      	uxth	r3, r3
 800690a:	3b01      	subs	r3, #1
 800690c:	b29a      	uxth	r2, r3
 800690e:	687b      	ldr	r3, [r7, #4]
 8006910:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006912:	e025      	b.n	8006960 <I2C_MemoryTransmit_TXE_BTF+0x120>
 8006914:	687b      	ldr	r3, [r7, #4]
 8006916:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006918:	b29b      	uxth	r3, r3
 800691a:	2b00      	cmp	r3, #0
 800691c:	d120      	bne.n	8006960 <I2C_MemoryTransmit_TXE_BTF+0x120>
 800691e:	7bfb      	ldrb	r3, [r7, #15]
 8006920:	2b21      	cmp	r3, #33	; 0x21
 8006922:	d11d      	bne.n	8006960 <I2C_MemoryTransmit_TXE_BTF+0x120>
 8006924:	687b      	ldr	r3, [r7, #4]
 8006926:	681b      	ldr	r3, [r3, #0]
 8006928:	685a      	ldr	r2, [r3, #4]
 800692a:	687b      	ldr	r3, [r7, #4]
 800692c:	681b      	ldr	r3, [r3, #0]
 800692e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006932:	605a      	str	r2, [r3, #4]
 8006934:	687b      	ldr	r3, [r7, #4]
 8006936:	681b      	ldr	r3, [r3, #0]
 8006938:	681a      	ldr	r2, [r3, #0]
 800693a:	687b      	ldr	r3, [r7, #4]
 800693c:	681b      	ldr	r3, [r3, #0]
 800693e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006942:	601a      	str	r2, [r3, #0]
 8006944:	687b      	ldr	r3, [r7, #4]
 8006946:	2200      	movs	r2, #0
 8006948:	631a      	str	r2, [r3, #48]	; 0x30
 800694a:	687b      	ldr	r3, [r7, #4]
 800694c:	2220      	movs	r2, #32
 800694e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006952:	687b      	ldr	r3, [r7, #4]
 8006954:	2200      	movs	r2, #0
 8006956:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800695a:	6878      	ldr	r0, [r7, #4]
 800695c:	f7ff fe36 	bl	80065cc <HAL_I2C_MemTxCpltCallback>
 8006960:	bf00      	nop
 8006962:	3710      	adds	r7, #16
 8006964:	46bd      	mov	sp, r7
 8006966:	bd80      	pop	{r7, pc}

08006968 <I2C_MasterReceive_RXNE>:
 8006968:	b580      	push	{r7, lr}
 800696a:	b084      	sub	sp, #16
 800696c:	af00      	add	r7, sp, #0
 800696e:	6078      	str	r0, [r7, #4]
 8006970:	687b      	ldr	r3, [r7, #4]
 8006972:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006976:	b2db      	uxtb	r3, r3
 8006978:	2b22      	cmp	r3, #34	; 0x22
 800697a:	f040 80ac 	bne.w	8006ad6 <I2C_MasterReceive_RXNE+0x16e>
 800697e:	687b      	ldr	r3, [r7, #4]
 8006980:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006982:	b29b      	uxth	r3, r3
 8006984:	60fb      	str	r3, [r7, #12]
 8006986:	68fb      	ldr	r3, [r7, #12]
 8006988:	2b03      	cmp	r3, #3
 800698a:	d921      	bls.n	80069d0 <I2C_MasterReceive_RXNE+0x68>
 800698c:	687b      	ldr	r3, [r7, #4]
 800698e:	681b      	ldr	r3, [r3, #0]
 8006990:	691a      	ldr	r2, [r3, #16]
 8006992:	687b      	ldr	r3, [r7, #4]
 8006994:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006996:	b2d2      	uxtb	r2, r2
 8006998:	701a      	strb	r2, [r3, #0]
 800699a:	687b      	ldr	r3, [r7, #4]
 800699c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800699e:	1c5a      	adds	r2, r3, #1
 80069a0:	687b      	ldr	r3, [r7, #4]
 80069a2:	625a      	str	r2, [r3, #36]	; 0x24
 80069a4:	687b      	ldr	r3, [r7, #4]
 80069a6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80069a8:	b29b      	uxth	r3, r3
 80069aa:	3b01      	subs	r3, #1
 80069ac:	b29a      	uxth	r2, r3
 80069ae:	687b      	ldr	r3, [r7, #4]
 80069b0:	855a      	strh	r2, [r3, #42]	; 0x2a
 80069b2:	687b      	ldr	r3, [r7, #4]
 80069b4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80069b6:	b29b      	uxth	r3, r3
 80069b8:	2b03      	cmp	r3, #3
 80069ba:	f040 808c 	bne.w	8006ad6 <I2C_MasterReceive_RXNE+0x16e>
 80069be:	687b      	ldr	r3, [r7, #4]
 80069c0:	681b      	ldr	r3, [r3, #0]
 80069c2:	685a      	ldr	r2, [r3, #4]
 80069c4:	687b      	ldr	r3, [r7, #4]
 80069c6:	681b      	ldr	r3, [r3, #0]
 80069c8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80069cc:	605a      	str	r2, [r3, #4]
 80069ce:	e082      	b.n	8006ad6 <I2C_MasterReceive_RXNE+0x16e>
 80069d0:	687b      	ldr	r3, [r7, #4]
 80069d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80069d4:	2b02      	cmp	r3, #2
 80069d6:	d075      	beq.n	8006ac4 <I2C_MasterReceive_RXNE+0x15c>
 80069d8:	68fb      	ldr	r3, [r7, #12]
 80069da:	2b01      	cmp	r3, #1
 80069dc:	d002      	beq.n	80069e4 <I2C_MasterReceive_RXNE+0x7c>
 80069de:	68fb      	ldr	r3, [r7, #12]
 80069e0:	2b00      	cmp	r3, #0
 80069e2:	d16f      	bne.n	8006ac4 <I2C_MasterReceive_RXNE+0x15c>
 80069e4:	6878      	ldr	r0, [r7, #4]
 80069e6:	f001 facf 	bl	8007f88 <I2C_WaitOnSTOPRequestThroughIT>
 80069ea:	4603      	mov	r3, r0
 80069ec:	2b00      	cmp	r3, #0
 80069ee:	d142      	bne.n	8006a76 <I2C_MasterReceive_RXNE+0x10e>
 80069f0:	687b      	ldr	r3, [r7, #4]
 80069f2:	681b      	ldr	r3, [r3, #0]
 80069f4:	681a      	ldr	r2, [r3, #0]
 80069f6:	687b      	ldr	r3, [r7, #4]
 80069f8:	681b      	ldr	r3, [r3, #0]
 80069fa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80069fe:	601a      	str	r2, [r3, #0]
 8006a00:	687b      	ldr	r3, [r7, #4]
 8006a02:	681b      	ldr	r3, [r3, #0]
 8006a04:	685a      	ldr	r2, [r3, #4]
 8006a06:	687b      	ldr	r3, [r7, #4]
 8006a08:	681b      	ldr	r3, [r3, #0]
 8006a0a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006a0e:	605a      	str	r2, [r3, #4]
 8006a10:	687b      	ldr	r3, [r7, #4]
 8006a12:	681b      	ldr	r3, [r3, #0]
 8006a14:	691a      	ldr	r2, [r3, #16]
 8006a16:	687b      	ldr	r3, [r7, #4]
 8006a18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006a1a:	b2d2      	uxtb	r2, r2
 8006a1c:	701a      	strb	r2, [r3, #0]
 8006a1e:	687b      	ldr	r3, [r7, #4]
 8006a20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006a22:	1c5a      	adds	r2, r3, #1
 8006a24:	687b      	ldr	r3, [r7, #4]
 8006a26:	625a      	str	r2, [r3, #36]	; 0x24
 8006a28:	687b      	ldr	r3, [r7, #4]
 8006a2a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006a2c:	b29b      	uxth	r3, r3
 8006a2e:	3b01      	subs	r3, #1
 8006a30:	b29a      	uxth	r2, r3
 8006a32:	687b      	ldr	r3, [r7, #4]
 8006a34:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006a36:	687b      	ldr	r3, [r7, #4]
 8006a38:	2220      	movs	r2, #32
 8006a3a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006a3e:	687b      	ldr	r3, [r7, #4]
 8006a40:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006a44:	b2db      	uxtb	r3, r3
 8006a46:	2b40      	cmp	r3, #64	; 0x40
 8006a48:	d10a      	bne.n	8006a60 <I2C_MasterReceive_RXNE+0xf8>
 8006a4a:	687b      	ldr	r3, [r7, #4]
 8006a4c:	2200      	movs	r2, #0
 8006a4e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006a52:	687b      	ldr	r3, [r7, #4]
 8006a54:	2200      	movs	r2, #0
 8006a56:	631a      	str	r2, [r3, #48]	; 0x30
 8006a58:	6878      	ldr	r0, [r7, #4]
 8006a5a:	f7ff fdc1 	bl	80065e0 <HAL_I2C_MemRxCpltCallback>
 8006a5e:	e03a      	b.n	8006ad6 <I2C_MasterReceive_RXNE+0x16e>
 8006a60:	687b      	ldr	r3, [r7, #4]
 8006a62:	2200      	movs	r2, #0
 8006a64:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006a68:	687b      	ldr	r3, [r7, #4]
 8006a6a:	2212      	movs	r2, #18
 8006a6c:	631a      	str	r2, [r3, #48]	; 0x30
 8006a6e:	6878      	ldr	r0, [r7, #4]
 8006a70:	f7ff fd76 	bl	8006560 <HAL_I2C_MasterRxCpltCallback>
 8006a74:	e02f      	b.n	8006ad6 <I2C_MasterReceive_RXNE+0x16e>
 8006a76:	687b      	ldr	r3, [r7, #4]
 8006a78:	681b      	ldr	r3, [r3, #0]
 8006a7a:	685a      	ldr	r2, [r3, #4]
 8006a7c:	687b      	ldr	r3, [r7, #4]
 8006a7e:	681b      	ldr	r3, [r3, #0]
 8006a80:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006a84:	605a      	str	r2, [r3, #4]
 8006a86:	687b      	ldr	r3, [r7, #4]
 8006a88:	681b      	ldr	r3, [r3, #0]
 8006a8a:	691a      	ldr	r2, [r3, #16]
 8006a8c:	687b      	ldr	r3, [r7, #4]
 8006a8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006a90:	b2d2      	uxtb	r2, r2
 8006a92:	701a      	strb	r2, [r3, #0]
 8006a94:	687b      	ldr	r3, [r7, #4]
 8006a96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006a98:	1c5a      	adds	r2, r3, #1
 8006a9a:	687b      	ldr	r3, [r7, #4]
 8006a9c:	625a      	str	r2, [r3, #36]	; 0x24
 8006a9e:	687b      	ldr	r3, [r7, #4]
 8006aa0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006aa2:	b29b      	uxth	r3, r3
 8006aa4:	3b01      	subs	r3, #1
 8006aa6:	b29a      	uxth	r2, r3
 8006aa8:	687b      	ldr	r3, [r7, #4]
 8006aaa:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	2220      	movs	r2, #32
 8006ab0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006ab4:	687b      	ldr	r3, [r7, #4]
 8006ab6:	2200      	movs	r2, #0
 8006ab8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006abc:	6878      	ldr	r0, [r7, #4]
 8006abe:	f7ff fd99 	bl	80065f4 <HAL_I2C_ErrorCallback>
 8006ac2:	e008      	b.n	8006ad6 <I2C_MasterReceive_RXNE+0x16e>
 8006ac4:	687b      	ldr	r3, [r7, #4]
 8006ac6:	681b      	ldr	r3, [r3, #0]
 8006ac8:	685a      	ldr	r2, [r3, #4]
 8006aca:	687b      	ldr	r3, [r7, #4]
 8006acc:	681b      	ldr	r3, [r3, #0]
 8006ace:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006ad2:	605a      	str	r2, [r3, #4]
 8006ad4:	e7ff      	b.n	8006ad6 <I2C_MasterReceive_RXNE+0x16e>
 8006ad6:	bf00      	nop
 8006ad8:	3710      	adds	r7, #16
 8006ada:	46bd      	mov	sp, r7
 8006adc:	bd80      	pop	{r7, pc}

08006ade <I2C_MasterReceive_BTF>:
 8006ade:	b580      	push	{r7, lr}
 8006ae0:	b084      	sub	sp, #16
 8006ae2:	af00      	add	r7, sp, #0
 8006ae4:	6078      	str	r0, [r7, #4]
 8006ae6:	687b      	ldr	r3, [r7, #4]
 8006ae8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006aea:	60fb      	str	r3, [r7, #12]
 8006aec:	687b      	ldr	r3, [r7, #4]
 8006aee:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006af0:	b29b      	uxth	r3, r3
 8006af2:	2b04      	cmp	r3, #4
 8006af4:	d11b      	bne.n	8006b2e <I2C_MasterReceive_BTF+0x50>
 8006af6:	687b      	ldr	r3, [r7, #4]
 8006af8:	681b      	ldr	r3, [r3, #0]
 8006afa:	685a      	ldr	r2, [r3, #4]
 8006afc:	687b      	ldr	r3, [r7, #4]
 8006afe:	681b      	ldr	r3, [r3, #0]
 8006b00:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006b04:	605a      	str	r2, [r3, #4]
 8006b06:	687b      	ldr	r3, [r7, #4]
 8006b08:	681b      	ldr	r3, [r3, #0]
 8006b0a:	691a      	ldr	r2, [r3, #16]
 8006b0c:	687b      	ldr	r3, [r7, #4]
 8006b0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006b10:	b2d2      	uxtb	r2, r2
 8006b12:	701a      	strb	r2, [r3, #0]
 8006b14:	687b      	ldr	r3, [r7, #4]
 8006b16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006b18:	1c5a      	adds	r2, r3, #1
 8006b1a:	687b      	ldr	r3, [r7, #4]
 8006b1c:	625a      	str	r2, [r3, #36]	; 0x24
 8006b1e:	687b      	ldr	r3, [r7, #4]
 8006b20:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006b22:	b29b      	uxth	r3, r3
 8006b24:	3b01      	subs	r3, #1
 8006b26:	b29a      	uxth	r2, r3
 8006b28:	687b      	ldr	r3, [r7, #4]
 8006b2a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006b2c:	e0bd      	b.n	8006caa <I2C_MasterReceive_BTF+0x1cc>
 8006b2e:	687b      	ldr	r3, [r7, #4]
 8006b30:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006b32:	b29b      	uxth	r3, r3
 8006b34:	2b03      	cmp	r3, #3
 8006b36:	d129      	bne.n	8006b8c <I2C_MasterReceive_BTF+0xae>
 8006b38:	687b      	ldr	r3, [r7, #4]
 8006b3a:	681b      	ldr	r3, [r3, #0]
 8006b3c:	685a      	ldr	r2, [r3, #4]
 8006b3e:	687b      	ldr	r3, [r7, #4]
 8006b40:	681b      	ldr	r3, [r3, #0]
 8006b42:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006b46:	605a      	str	r2, [r3, #4]
 8006b48:	68fb      	ldr	r3, [r7, #12]
 8006b4a:	2b04      	cmp	r3, #4
 8006b4c:	d00a      	beq.n	8006b64 <I2C_MasterReceive_BTF+0x86>
 8006b4e:	68fb      	ldr	r3, [r7, #12]
 8006b50:	2b02      	cmp	r3, #2
 8006b52:	d007      	beq.n	8006b64 <I2C_MasterReceive_BTF+0x86>
 8006b54:	687b      	ldr	r3, [r7, #4]
 8006b56:	681b      	ldr	r3, [r3, #0]
 8006b58:	681a      	ldr	r2, [r3, #0]
 8006b5a:	687b      	ldr	r3, [r7, #4]
 8006b5c:	681b      	ldr	r3, [r3, #0]
 8006b5e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006b62:	601a      	str	r2, [r3, #0]
 8006b64:	687b      	ldr	r3, [r7, #4]
 8006b66:	681b      	ldr	r3, [r3, #0]
 8006b68:	691a      	ldr	r2, [r3, #16]
 8006b6a:	687b      	ldr	r3, [r7, #4]
 8006b6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006b6e:	b2d2      	uxtb	r2, r2
 8006b70:	701a      	strb	r2, [r3, #0]
 8006b72:	687b      	ldr	r3, [r7, #4]
 8006b74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006b76:	1c5a      	adds	r2, r3, #1
 8006b78:	687b      	ldr	r3, [r7, #4]
 8006b7a:	625a      	str	r2, [r3, #36]	; 0x24
 8006b7c:	687b      	ldr	r3, [r7, #4]
 8006b7e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006b80:	b29b      	uxth	r3, r3
 8006b82:	3b01      	subs	r3, #1
 8006b84:	b29a      	uxth	r2, r3
 8006b86:	687b      	ldr	r3, [r7, #4]
 8006b88:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006b8a:	e08e      	b.n	8006caa <I2C_MasterReceive_BTF+0x1cc>
 8006b8c:	687b      	ldr	r3, [r7, #4]
 8006b8e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006b90:	b29b      	uxth	r3, r3
 8006b92:	2b02      	cmp	r3, #2
 8006b94:	d176      	bne.n	8006c84 <I2C_MasterReceive_BTF+0x1a6>
 8006b96:	68fb      	ldr	r3, [r7, #12]
 8006b98:	2b01      	cmp	r3, #1
 8006b9a:	d002      	beq.n	8006ba2 <I2C_MasterReceive_BTF+0xc4>
 8006b9c:	68fb      	ldr	r3, [r7, #12]
 8006b9e:	2b10      	cmp	r3, #16
 8006ba0:	d108      	bne.n	8006bb4 <I2C_MasterReceive_BTF+0xd6>
 8006ba2:	687b      	ldr	r3, [r7, #4]
 8006ba4:	681b      	ldr	r3, [r3, #0]
 8006ba6:	681a      	ldr	r2, [r3, #0]
 8006ba8:	687b      	ldr	r3, [r7, #4]
 8006baa:	681b      	ldr	r3, [r3, #0]
 8006bac:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006bb0:	601a      	str	r2, [r3, #0]
 8006bb2:	e019      	b.n	8006be8 <I2C_MasterReceive_BTF+0x10a>
 8006bb4:	68fb      	ldr	r3, [r7, #12]
 8006bb6:	2b04      	cmp	r3, #4
 8006bb8:	d002      	beq.n	8006bc0 <I2C_MasterReceive_BTF+0xe2>
 8006bba:	68fb      	ldr	r3, [r7, #12]
 8006bbc:	2b02      	cmp	r3, #2
 8006bbe:	d108      	bne.n	8006bd2 <I2C_MasterReceive_BTF+0xf4>
 8006bc0:	687b      	ldr	r3, [r7, #4]
 8006bc2:	681b      	ldr	r3, [r3, #0]
 8006bc4:	681a      	ldr	r2, [r3, #0]
 8006bc6:	687b      	ldr	r3, [r7, #4]
 8006bc8:	681b      	ldr	r3, [r3, #0]
 8006bca:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006bce:	601a      	str	r2, [r3, #0]
 8006bd0:	e00a      	b.n	8006be8 <I2C_MasterReceive_BTF+0x10a>
 8006bd2:	68fb      	ldr	r3, [r7, #12]
 8006bd4:	2b10      	cmp	r3, #16
 8006bd6:	d007      	beq.n	8006be8 <I2C_MasterReceive_BTF+0x10a>
 8006bd8:	687b      	ldr	r3, [r7, #4]
 8006bda:	681b      	ldr	r3, [r3, #0]
 8006bdc:	681a      	ldr	r2, [r3, #0]
 8006bde:	687b      	ldr	r3, [r7, #4]
 8006be0:	681b      	ldr	r3, [r3, #0]
 8006be2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006be6:	601a      	str	r2, [r3, #0]
 8006be8:	687b      	ldr	r3, [r7, #4]
 8006bea:	681b      	ldr	r3, [r3, #0]
 8006bec:	691a      	ldr	r2, [r3, #16]
 8006bee:	687b      	ldr	r3, [r7, #4]
 8006bf0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006bf2:	b2d2      	uxtb	r2, r2
 8006bf4:	701a      	strb	r2, [r3, #0]
 8006bf6:	687b      	ldr	r3, [r7, #4]
 8006bf8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006bfa:	1c5a      	adds	r2, r3, #1
 8006bfc:	687b      	ldr	r3, [r7, #4]
 8006bfe:	625a      	str	r2, [r3, #36]	; 0x24
 8006c00:	687b      	ldr	r3, [r7, #4]
 8006c02:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006c04:	b29b      	uxth	r3, r3
 8006c06:	3b01      	subs	r3, #1
 8006c08:	b29a      	uxth	r2, r3
 8006c0a:	687b      	ldr	r3, [r7, #4]
 8006c0c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006c0e:	687b      	ldr	r3, [r7, #4]
 8006c10:	681b      	ldr	r3, [r3, #0]
 8006c12:	691a      	ldr	r2, [r3, #16]
 8006c14:	687b      	ldr	r3, [r7, #4]
 8006c16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006c18:	b2d2      	uxtb	r2, r2
 8006c1a:	701a      	strb	r2, [r3, #0]
 8006c1c:	687b      	ldr	r3, [r7, #4]
 8006c1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006c20:	1c5a      	adds	r2, r3, #1
 8006c22:	687b      	ldr	r3, [r7, #4]
 8006c24:	625a      	str	r2, [r3, #36]	; 0x24
 8006c26:	687b      	ldr	r3, [r7, #4]
 8006c28:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006c2a:	b29b      	uxth	r3, r3
 8006c2c:	3b01      	subs	r3, #1
 8006c2e:	b29a      	uxth	r2, r3
 8006c30:	687b      	ldr	r3, [r7, #4]
 8006c32:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006c34:	687b      	ldr	r3, [r7, #4]
 8006c36:	681b      	ldr	r3, [r3, #0]
 8006c38:	685a      	ldr	r2, [r3, #4]
 8006c3a:	687b      	ldr	r3, [r7, #4]
 8006c3c:	681b      	ldr	r3, [r3, #0]
 8006c3e:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8006c42:	605a      	str	r2, [r3, #4]
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	2220      	movs	r2, #32
 8006c48:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006c4c:	687b      	ldr	r3, [r7, #4]
 8006c4e:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006c52:	b2db      	uxtb	r3, r3
 8006c54:	2b40      	cmp	r3, #64	; 0x40
 8006c56:	d10a      	bne.n	8006c6e <I2C_MasterReceive_BTF+0x190>
 8006c58:	687b      	ldr	r3, [r7, #4]
 8006c5a:	2200      	movs	r2, #0
 8006c5c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006c60:	687b      	ldr	r3, [r7, #4]
 8006c62:	2200      	movs	r2, #0
 8006c64:	631a      	str	r2, [r3, #48]	; 0x30
 8006c66:	6878      	ldr	r0, [r7, #4]
 8006c68:	f7ff fcba 	bl	80065e0 <HAL_I2C_MemRxCpltCallback>
 8006c6c:	e01d      	b.n	8006caa <I2C_MasterReceive_BTF+0x1cc>
 8006c6e:	687b      	ldr	r3, [r7, #4]
 8006c70:	2200      	movs	r2, #0
 8006c72:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006c76:	687b      	ldr	r3, [r7, #4]
 8006c78:	2212      	movs	r2, #18
 8006c7a:	631a      	str	r2, [r3, #48]	; 0x30
 8006c7c:	6878      	ldr	r0, [r7, #4]
 8006c7e:	f7ff fc6f 	bl	8006560 <HAL_I2C_MasterRxCpltCallback>
 8006c82:	e012      	b.n	8006caa <I2C_MasterReceive_BTF+0x1cc>
 8006c84:	687b      	ldr	r3, [r7, #4]
 8006c86:	681b      	ldr	r3, [r3, #0]
 8006c88:	691a      	ldr	r2, [r3, #16]
 8006c8a:	687b      	ldr	r3, [r7, #4]
 8006c8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006c8e:	b2d2      	uxtb	r2, r2
 8006c90:	701a      	strb	r2, [r3, #0]
 8006c92:	687b      	ldr	r3, [r7, #4]
 8006c94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006c96:	1c5a      	adds	r2, r3, #1
 8006c98:	687b      	ldr	r3, [r7, #4]
 8006c9a:	625a      	str	r2, [r3, #36]	; 0x24
 8006c9c:	687b      	ldr	r3, [r7, #4]
 8006c9e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006ca0:	b29b      	uxth	r3, r3
 8006ca2:	3b01      	subs	r3, #1
 8006ca4:	b29a      	uxth	r2, r3
 8006ca6:	687b      	ldr	r3, [r7, #4]
 8006ca8:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006caa:	bf00      	nop
 8006cac:	3710      	adds	r7, #16
 8006cae:	46bd      	mov	sp, r7
 8006cb0:	bd80      	pop	{r7, pc}

08006cb2 <I2C_Master_SB>:
 8006cb2:	b480      	push	{r7}
 8006cb4:	b083      	sub	sp, #12
 8006cb6:	af00      	add	r7, sp, #0
 8006cb8:	6078      	str	r0, [r7, #4]
 8006cba:	687b      	ldr	r3, [r7, #4]
 8006cbc:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006cc0:	b2db      	uxtb	r3, r3
 8006cc2:	2b40      	cmp	r3, #64	; 0x40
 8006cc4:	d117      	bne.n	8006cf6 <I2C_Master_SB+0x44>
 8006cc6:	687b      	ldr	r3, [r7, #4]
 8006cc8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006cca:	2b00      	cmp	r3, #0
 8006ccc:	d109      	bne.n	8006ce2 <I2C_Master_SB+0x30>
 8006cce:	687b      	ldr	r3, [r7, #4]
 8006cd0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006cd2:	b2db      	uxtb	r3, r3
 8006cd4:	461a      	mov	r2, r3
 8006cd6:	687b      	ldr	r3, [r7, #4]
 8006cd8:	681b      	ldr	r3, [r3, #0]
 8006cda:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8006cde:	611a      	str	r2, [r3, #16]
 8006ce0:	e067      	b.n	8006db2 <I2C_Master_SB+0x100>
 8006ce2:	687b      	ldr	r3, [r7, #4]
 8006ce4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006ce6:	b2db      	uxtb	r3, r3
 8006ce8:	f043 0301 	orr.w	r3, r3, #1
 8006cec:	b2da      	uxtb	r2, r3
 8006cee:	687b      	ldr	r3, [r7, #4]
 8006cf0:	681b      	ldr	r3, [r3, #0]
 8006cf2:	611a      	str	r2, [r3, #16]
 8006cf4:	e05d      	b.n	8006db2 <I2C_Master_SB+0x100>
 8006cf6:	687b      	ldr	r3, [r7, #4]
 8006cf8:	691b      	ldr	r3, [r3, #16]
 8006cfa:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8006cfe:	d133      	bne.n	8006d68 <I2C_Master_SB+0xb6>
 8006d00:	687b      	ldr	r3, [r7, #4]
 8006d02:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006d06:	b2db      	uxtb	r3, r3
 8006d08:	2b21      	cmp	r3, #33	; 0x21
 8006d0a:	d109      	bne.n	8006d20 <I2C_Master_SB+0x6e>
 8006d0c:	687b      	ldr	r3, [r7, #4]
 8006d0e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006d10:	b2db      	uxtb	r3, r3
 8006d12:	461a      	mov	r2, r3
 8006d14:	687b      	ldr	r3, [r7, #4]
 8006d16:	681b      	ldr	r3, [r3, #0]
 8006d18:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8006d1c:	611a      	str	r2, [r3, #16]
 8006d1e:	e008      	b.n	8006d32 <I2C_Master_SB+0x80>
 8006d20:	687b      	ldr	r3, [r7, #4]
 8006d22:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006d24:	b2db      	uxtb	r3, r3
 8006d26:	f043 0301 	orr.w	r3, r3, #1
 8006d2a:	b2da      	uxtb	r2, r3
 8006d2c:	687b      	ldr	r3, [r7, #4]
 8006d2e:	681b      	ldr	r3, [r3, #0]
 8006d30:	611a      	str	r2, [r3, #16]
 8006d32:	687b      	ldr	r3, [r7, #4]
 8006d34:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006d36:	2b00      	cmp	r3, #0
 8006d38:	d004      	beq.n	8006d44 <I2C_Master_SB+0x92>
 8006d3a:	687b      	ldr	r3, [r7, #4]
 8006d3c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006d3e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006d40:	2b00      	cmp	r3, #0
 8006d42:	d108      	bne.n	8006d56 <I2C_Master_SB+0xa4>
 8006d44:	687b      	ldr	r3, [r7, #4]
 8006d46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006d48:	2b00      	cmp	r3, #0
 8006d4a:	d032      	beq.n	8006db2 <I2C_Master_SB+0x100>
 8006d4c:	687b      	ldr	r3, [r7, #4]
 8006d4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006d50:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006d52:	2b00      	cmp	r3, #0
 8006d54:	d02d      	beq.n	8006db2 <I2C_Master_SB+0x100>
 8006d56:	687b      	ldr	r3, [r7, #4]
 8006d58:	681b      	ldr	r3, [r3, #0]
 8006d5a:	685a      	ldr	r2, [r3, #4]
 8006d5c:	687b      	ldr	r3, [r7, #4]
 8006d5e:	681b      	ldr	r3, [r3, #0]
 8006d60:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006d64:	605a      	str	r2, [r3, #4]
 8006d66:	e024      	b.n	8006db2 <I2C_Master_SB+0x100>
 8006d68:	687b      	ldr	r3, [r7, #4]
 8006d6a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006d6c:	2b00      	cmp	r3, #0
 8006d6e:	d10e      	bne.n	8006d8e <I2C_Master_SB+0xdc>
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006d74:	b29b      	uxth	r3, r3
 8006d76:	11db      	asrs	r3, r3, #7
 8006d78:	b2db      	uxtb	r3, r3
 8006d7a:	f003 0306 	and.w	r3, r3, #6
 8006d7e:	b2db      	uxtb	r3, r3
 8006d80:	f063 030f 	orn	r3, r3, #15
 8006d84:	b2da      	uxtb	r2, r3
 8006d86:	687b      	ldr	r3, [r7, #4]
 8006d88:	681b      	ldr	r3, [r3, #0]
 8006d8a:	611a      	str	r2, [r3, #16]
 8006d8c:	e011      	b.n	8006db2 <I2C_Master_SB+0x100>
 8006d8e:	687b      	ldr	r3, [r7, #4]
 8006d90:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006d92:	2b01      	cmp	r3, #1
 8006d94:	d10d      	bne.n	8006db2 <I2C_Master_SB+0x100>
 8006d96:	687b      	ldr	r3, [r7, #4]
 8006d98:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006d9a:	b29b      	uxth	r3, r3
 8006d9c:	11db      	asrs	r3, r3, #7
 8006d9e:	b2db      	uxtb	r3, r3
 8006da0:	f003 0306 	and.w	r3, r3, #6
 8006da4:	b2db      	uxtb	r3, r3
 8006da6:	f063 030e 	orn	r3, r3, #14
 8006daa:	b2da      	uxtb	r2, r3
 8006dac:	687b      	ldr	r3, [r7, #4]
 8006dae:	681b      	ldr	r3, [r3, #0]
 8006db0:	611a      	str	r2, [r3, #16]
 8006db2:	bf00      	nop
 8006db4:	370c      	adds	r7, #12
 8006db6:	46bd      	mov	sp, r7
 8006db8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dbc:	4770      	bx	lr

08006dbe <I2C_Master_ADD10>:
 8006dbe:	b480      	push	{r7}
 8006dc0:	b083      	sub	sp, #12
 8006dc2:	af00      	add	r7, sp, #0
 8006dc4:	6078      	str	r0, [r7, #4]
 8006dc6:	687b      	ldr	r3, [r7, #4]
 8006dc8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006dca:	b2da      	uxtb	r2, r3
 8006dcc:	687b      	ldr	r3, [r7, #4]
 8006dce:	681b      	ldr	r3, [r3, #0]
 8006dd0:	611a      	str	r2, [r3, #16]
 8006dd2:	687b      	ldr	r3, [r7, #4]
 8006dd4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006dd6:	2b00      	cmp	r3, #0
 8006dd8:	d004      	beq.n	8006de4 <I2C_Master_ADD10+0x26>
 8006dda:	687b      	ldr	r3, [r7, #4]
 8006ddc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006dde:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006de0:	2b00      	cmp	r3, #0
 8006de2:	d108      	bne.n	8006df6 <I2C_Master_ADD10+0x38>
 8006de4:	687b      	ldr	r3, [r7, #4]
 8006de6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006de8:	2b00      	cmp	r3, #0
 8006dea:	d00c      	beq.n	8006e06 <I2C_Master_ADD10+0x48>
 8006dec:	687b      	ldr	r3, [r7, #4]
 8006dee:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006df0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006df2:	2b00      	cmp	r3, #0
 8006df4:	d007      	beq.n	8006e06 <I2C_Master_ADD10+0x48>
 8006df6:	687b      	ldr	r3, [r7, #4]
 8006df8:	681b      	ldr	r3, [r3, #0]
 8006dfa:	685a      	ldr	r2, [r3, #4]
 8006dfc:	687b      	ldr	r3, [r7, #4]
 8006dfe:	681b      	ldr	r3, [r3, #0]
 8006e00:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006e04:	605a      	str	r2, [r3, #4]
 8006e06:	bf00      	nop
 8006e08:	370c      	adds	r7, #12
 8006e0a:	46bd      	mov	sp, r7
 8006e0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e10:	4770      	bx	lr

08006e12 <I2C_Master_ADDR>:
 8006e12:	b480      	push	{r7}
 8006e14:	b091      	sub	sp, #68	; 0x44
 8006e16:	af00      	add	r7, sp, #0
 8006e18:	6078      	str	r0, [r7, #4]
 8006e1a:	687b      	ldr	r3, [r7, #4]
 8006e1c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006e20:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8006e24:	687b      	ldr	r3, [r7, #4]
 8006e26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006e28:	63bb      	str	r3, [r7, #56]	; 0x38
 8006e2a:	687b      	ldr	r3, [r7, #4]
 8006e2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e2e:	637b      	str	r3, [r7, #52]	; 0x34
 8006e30:	687b      	ldr	r3, [r7, #4]
 8006e32:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006e36:	b2db      	uxtb	r3, r3
 8006e38:	2b22      	cmp	r3, #34	; 0x22
 8006e3a:	f040 8169 	bne.w	8007110 <I2C_Master_ADDR+0x2fe>
 8006e3e:	687b      	ldr	r3, [r7, #4]
 8006e40:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006e42:	2b00      	cmp	r3, #0
 8006e44:	d10f      	bne.n	8006e66 <I2C_Master_ADDR+0x54>
 8006e46:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 8006e4a:	2b40      	cmp	r3, #64	; 0x40
 8006e4c:	d10b      	bne.n	8006e66 <I2C_Master_ADDR+0x54>
 8006e4e:	2300      	movs	r3, #0
 8006e50:	633b      	str	r3, [r7, #48]	; 0x30
 8006e52:	687b      	ldr	r3, [r7, #4]
 8006e54:	681b      	ldr	r3, [r3, #0]
 8006e56:	695b      	ldr	r3, [r3, #20]
 8006e58:	633b      	str	r3, [r7, #48]	; 0x30
 8006e5a:	687b      	ldr	r3, [r7, #4]
 8006e5c:	681b      	ldr	r3, [r3, #0]
 8006e5e:	699b      	ldr	r3, [r3, #24]
 8006e60:	633b      	str	r3, [r7, #48]	; 0x30
 8006e62:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006e64:	e160      	b.n	8007128 <I2C_Master_ADDR+0x316>
 8006e66:	687b      	ldr	r3, [r7, #4]
 8006e68:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006e6a:	2b00      	cmp	r3, #0
 8006e6c:	d11d      	bne.n	8006eaa <I2C_Master_ADDR+0x98>
 8006e6e:	687b      	ldr	r3, [r7, #4]
 8006e70:	691b      	ldr	r3, [r3, #16]
 8006e72:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8006e76:	d118      	bne.n	8006eaa <I2C_Master_ADDR+0x98>
 8006e78:	2300      	movs	r3, #0
 8006e7a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006e7c:	687b      	ldr	r3, [r7, #4]
 8006e7e:	681b      	ldr	r3, [r3, #0]
 8006e80:	695b      	ldr	r3, [r3, #20]
 8006e82:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006e84:	687b      	ldr	r3, [r7, #4]
 8006e86:	681b      	ldr	r3, [r3, #0]
 8006e88:	699b      	ldr	r3, [r3, #24]
 8006e8a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006e8c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006e8e:	687b      	ldr	r3, [r7, #4]
 8006e90:	681b      	ldr	r3, [r3, #0]
 8006e92:	681a      	ldr	r2, [r3, #0]
 8006e94:	687b      	ldr	r3, [r7, #4]
 8006e96:	681b      	ldr	r3, [r3, #0]
 8006e98:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006e9c:	601a      	str	r2, [r3, #0]
 8006e9e:	687b      	ldr	r3, [r7, #4]
 8006ea0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006ea2:	1c5a      	adds	r2, r3, #1
 8006ea4:	687b      	ldr	r3, [r7, #4]
 8006ea6:	651a      	str	r2, [r3, #80]	; 0x50
 8006ea8:	e13e      	b.n	8007128 <I2C_Master_ADDR+0x316>
 8006eaa:	687b      	ldr	r3, [r7, #4]
 8006eac:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006eae:	b29b      	uxth	r3, r3
 8006eb0:	2b00      	cmp	r3, #0
 8006eb2:	d113      	bne.n	8006edc <I2C_Master_ADDR+0xca>
 8006eb4:	2300      	movs	r3, #0
 8006eb6:	62bb      	str	r3, [r7, #40]	; 0x28
 8006eb8:	687b      	ldr	r3, [r7, #4]
 8006eba:	681b      	ldr	r3, [r3, #0]
 8006ebc:	695b      	ldr	r3, [r3, #20]
 8006ebe:	62bb      	str	r3, [r7, #40]	; 0x28
 8006ec0:	687b      	ldr	r3, [r7, #4]
 8006ec2:	681b      	ldr	r3, [r3, #0]
 8006ec4:	699b      	ldr	r3, [r3, #24]
 8006ec6:	62bb      	str	r3, [r7, #40]	; 0x28
 8006ec8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006eca:	687b      	ldr	r3, [r7, #4]
 8006ecc:	681b      	ldr	r3, [r3, #0]
 8006ece:	681a      	ldr	r2, [r3, #0]
 8006ed0:	687b      	ldr	r3, [r7, #4]
 8006ed2:	681b      	ldr	r3, [r3, #0]
 8006ed4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006ed8:	601a      	str	r2, [r3, #0]
 8006eda:	e115      	b.n	8007108 <I2C_Master_ADDR+0x2f6>
 8006edc:	687b      	ldr	r3, [r7, #4]
 8006ede:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006ee0:	b29b      	uxth	r3, r3
 8006ee2:	2b01      	cmp	r3, #1
 8006ee4:	f040 808a 	bne.w	8006ffc <I2C_Master_ADDR+0x1ea>
 8006ee8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006eea:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8006eee:	d137      	bne.n	8006f60 <I2C_Master_ADDR+0x14e>
 8006ef0:	687b      	ldr	r3, [r7, #4]
 8006ef2:	681b      	ldr	r3, [r3, #0]
 8006ef4:	681a      	ldr	r2, [r3, #0]
 8006ef6:	687b      	ldr	r3, [r7, #4]
 8006ef8:	681b      	ldr	r3, [r3, #0]
 8006efa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006efe:	601a      	str	r2, [r3, #0]
 8006f00:	687b      	ldr	r3, [r7, #4]
 8006f02:	681b      	ldr	r3, [r3, #0]
 8006f04:	685b      	ldr	r3, [r3, #4]
 8006f06:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8006f0a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006f0e:	d113      	bne.n	8006f38 <I2C_Master_ADDR+0x126>
 8006f10:	687b      	ldr	r3, [r7, #4]
 8006f12:	681b      	ldr	r3, [r3, #0]
 8006f14:	681a      	ldr	r2, [r3, #0]
 8006f16:	687b      	ldr	r3, [r7, #4]
 8006f18:	681b      	ldr	r3, [r3, #0]
 8006f1a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006f1e:	601a      	str	r2, [r3, #0]
 8006f20:	2300      	movs	r3, #0
 8006f22:	627b      	str	r3, [r7, #36]	; 0x24
 8006f24:	687b      	ldr	r3, [r7, #4]
 8006f26:	681b      	ldr	r3, [r3, #0]
 8006f28:	695b      	ldr	r3, [r3, #20]
 8006f2a:	627b      	str	r3, [r7, #36]	; 0x24
 8006f2c:	687b      	ldr	r3, [r7, #4]
 8006f2e:	681b      	ldr	r3, [r3, #0]
 8006f30:	699b      	ldr	r3, [r3, #24]
 8006f32:	627b      	str	r3, [r7, #36]	; 0x24
 8006f34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006f36:	e0e7      	b.n	8007108 <I2C_Master_ADDR+0x2f6>
 8006f38:	2300      	movs	r3, #0
 8006f3a:	623b      	str	r3, [r7, #32]
 8006f3c:	687b      	ldr	r3, [r7, #4]
 8006f3e:	681b      	ldr	r3, [r3, #0]
 8006f40:	695b      	ldr	r3, [r3, #20]
 8006f42:	623b      	str	r3, [r7, #32]
 8006f44:	687b      	ldr	r3, [r7, #4]
 8006f46:	681b      	ldr	r3, [r3, #0]
 8006f48:	699b      	ldr	r3, [r3, #24]
 8006f4a:	623b      	str	r3, [r7, #32]
 8006f4c:	6a3b      	ldr	r3, [r7, #32]
 8006f4e:	687b      	ldr	r3, [r7, #4]
 8006f50:	681b      	ldr	r3, [r3, #0]
 8006f52:	681a      	ldr	r2, [r3, #0]
 8006f54:	687b      	ldr	r3, [r7, #4]
 8006f56:	681b      	ldr	r3, [r3, #0]
 8006f58:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006f5c:	601a      	str	r2, [r3, #0]
 8006f5e:	e0d3      	b.n	8007108 <I2C_Master_ADDR+0x2f6>
 8006f60:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f62:	2b08      	cmp	r3, #8
 8006f64:	d02e      	beq.n	8006fc4 <I2C_Master_ADDR+0x1b2>
 8006f66:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f68:	2b20      	cmp	r3, #32
 8006f6a:	d02b      	beq.n	8006fc4 <I2C_Master_ADDR+0x1b2>
 8006f6c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8006f6e:	2b12      	cmp	r3, #18
 8006f70:	d102      	bne.n	8006f78 <I2C_Master_ADDR+0x166>
 8006f72:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f74:	2b01      	cmp	r3, #1
 8006f76:	d125      	bne.n	8006fc4 <I2C_Master_ADDR+0x1b2>
 8006f78:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f7a:	2b04      	cmp	r3, #4
 8006f7c:	d00e      	beq.n	8006f9c <I2C_Master_ADDR+0x18a>
 8006f7e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f80:	2b02      	cmp	r3, #2
 8006f82:	d00b      	beq.n	8006f9c <I2C_Master_ADDR+0x18a>
 8006f84:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f86:	2b10      	cmp	r3, #16
 8006f88:	d008      	beq.n	8006f9c <I2C_Master_ADDR+0x18a>
 8006f8a:	687b      	ldr	r3, [r7, #4]
 8006f8c:	681b      	ldr	r3, [r3, #0]
 8006f8e:	681a      	ldr	r2, [r3, #0]
 8006f90:	687b      	ldr	r3, [r7, #4]
 8006f92:	681b      	ldr	r3, [r3, #0]
 8006f94:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006f98:	601a      	str	r2, [r3, #0]
 8006f9a:	e007      	b.n	8006fac <I2C_Master_ADDR+0x19a>
 8006f9c:	687b      	ldr	r3, [r7, #4]
 8006f9e:	681b      	ldr	r3, [r3, #0]
 8006fa0:	681a      	ldr	r2, [r3, #0]
 8006fa2:	687b      	ldr	r3, [r7, #4]
 8006fa4:	681b      	ldr	r3, [r3, #0]
 8006fa6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006faa:	601a      	str	r2, [r3, #0]
 8006fac:	2300      	movs	r3, #0
 8006fae:	61fb      	str	r3, [r7, #28]
 8006fb0:	687b      	ldr	r3, [r7, #4]
 8006fb2:	681b      	ldr	r3, [r3, #0]
 8006fb4:	695b      	ldr	r3, [r3, #20]
 8006fb6:	61fb      	str	r3, [r7, #28]
 8006fb8:	687b      	ldr	r3, [r7, #4]
 8006fba:	681b      	ldr	r3, [r3, #0]
 8006fbc:	699b      	ldr	r3, [r3, #24]
 8006fbe:	61fb      	str	r3, [r7, #28]
 8006fc0:	69fb      	ldr	r3, [r7, #28]
 8006fc2:	e0a1      	b.n	8007108 <I2C_Master_ADDR+0x2f6>
 8006fc4:	687b      	ldr	r3, [r7, #4]
 8006fc6:	681b      	ldr	r3, [r3, #0]
 8006fc8:	681a      	ldr	r2, [r3, #0]
 8006fca:	687b      	ldr	r3, [r7, #4]
 8006fcc:	681b      	ldr	r3, [r3, #0]
 8006fce:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006fd2:	601a      	str	r2, [r3, #0]
 8006fd4:	2300      	movs	r3, #0
 8006fd6:	61bb      	str	r3, [r7, #24]
 8006fd8:	687b      	ldr	r3, [r7, #4]
 8006fda:	681b      	ldr	r3, [r3, #0]
 8006fdc:	695b      	ldr	r3, [r3, #20]
 8006fde:	61bb      	str	r3, [r7, #24]
 8006fe0:	687b      	ldr	r3, [r7, #4]
 8006fe2:	681b      	ldr	r3, [r3, #0]
 8006fe4:	699b      	ldr	r3, [r3, #24]
 8006fe6:	61bb      	str	r3, [r7, #24]
 8006fe8:	69bb      	ldr	r3, [r7, #24]
 8006fea:	687b      	ldr	r3, [r7, #4]
 8006fec:	681b      	ldr	r3, [r3, #0]
 8006fee:	681a      	ldr	r2, [r3, #0]
 8006ff0:	687b      	ldr	r3, [r7, #4]
 8006ff2:	681b      	ldr	r3, [r3, #0]
 8006ff4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006ff8:	601a      	str	r2, [r3, #0]
 8006ffa:	e085      	b.n	8007108 <I2C_Master_ADDR+0x2f6>
 8006ffc:	687b      	ldr	r3, [r7, #4]
 8006ffe:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007000:	b29b      	uxth	r3, r3
 8007002:	2b02      	cmp	r3, #2
 8007004:	d14d      	bne.n	80070a2 <I2C_Master_ADDR+0x290>
 8007006:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007008:	2b04      	cmp	r3, #4
 800700a:	d016      	beq.n	800703a <I2C_Master_ADDR+0x228>
 800700c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800700e:	2b02      	cmp	r3, #2
 8007010:	d013      	beq.n	800703a <I2C_Master_ADDR+0x228>
 8007012:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007014:	2b10      	cmp	r3, #16
 8007016:	d010      	beq.n	800703a <I2C_Master_ADDR+0x228>
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	681b      	ldr	r3, [r3, #0]
 800701c:	681a      	ldr	r2, [r3, #0]
 800701e:	687b      	ldr	r3, [r7, #4]
 8007020:	681b      	ldr	r3, [r3, #0]
 8007022:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007026:	601a      	str	r2, [r3, #0]
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	681b      	ldr	r3, [r3, #0]
 800702c:	681a      	ldr	r2, [r3, #0]
 800702e:	687b      	ldr	r3, [r7, #4]
 8007030:	681b      	ldr	r3, [r3, #0]
 8007032:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007036:	601a      	str	r2, [r3, #0]
 8007038:	e007      	b.n	800704a <I2C_Master_ADDR+0x238>
 800703a:	687b      	ldr	r3, [r7, #4]
 800703c:	681b      	ldr	r3, [r3, #0]
 800703e:	681a      	ldr	r2, [r3, #0]
 8007040:	687b      	ldr	r3, [r7, #4]
 8007042:	681b      	ldr	r3, [r3, #0]
 8007044:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007048:	601a      	str	r2, [r3, #0]
 800704a:	687b      	ldr	r3, [r7, #4]
 800704c:	681b      	ldr	r3, [r3, #0]
 800704e:	685b      	ldr	r3, [r3, #4]
 8007050:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8007054:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007058:	d117      	bne.n	800708a <I2C_Master_ADDR+0x278>
 800705a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800705c:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8007060:	d00b      	beq.n	800707a <I2C_Master_ADDR+0x268>
 8007062:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007064:	2b01      	cmp	r3, #1
 8007066:	d008      	beq.n	800707a <I2C_Master_ADDR+0x268>
 8007068:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800706a:	2b08      	cmp	r3, #8
 800706c:	d005      	beq.n	800707a <I2C_Master_ADDR+0x268>
 800706e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007070:	2b10      	cmp	r3, #16
 8007072:	d002      	beq.n	800707a <I2C_Master_ADDR+0x268>
 8007074:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007076:	2b20      	cmp	r3, #32
 8007078:	d107      	bne.n	800708a <I2C_Master_ADDR+0x278>
 800707a:	687b      	ldr	r3, [r7, #4]
 800707c:	681b      	ldr	r3, [r3, #0]
 800707e:	685a      	ldr	r2, [r3, #4]
 8007080:	687b      	ldr	r3, [r7, #4]
 8007082:	681b      	ldr	r3, [r3, #0]
 8007084:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8007088:	605a      	str	r2, [r3, #4]
 800708a:	2300      	movs	r3, #0
 800708c:	617b      	str	r3, [r7, #20]
 800708e:	687b      	ldr	r3, [r7, #4]
 8007090:	681b      	ldr	r3, [r3, #0]
 8007092:	695b      	ldr	r3, [r3, #20]
 8007094:	617b      	str	r3, [r7, #20]
 8007096:	687b      	ldr	r3, [r7, #4]
 8007098:	681b      	ldr	r3, [r3, #0]
 800709a:	699b      	ldr	r3, [r3, #24]
 800709c:	617b      	str	r3, [r7, #20]
 800709e:	697b      	ldr	r3, [r7, #20]
 80070a0:	e032      	b.n	8007108 <I2C_Master_ADDR+0x2f6>
 80070a2:	687b      	ldr	r3, [r7, #4]
 80070a4:	681b      	ldr	r3, [r3, #0]
 80070a6:	681a      	ldr	r2, [r3, #0]
 80070a8:	687b      	ldr	r3, [r7, #4]
 80070aa:	681b      	ldr	r3, [r3, #0]
 80070ac:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80070b0:	601a      	str	r2, [r3, #0]
 80070b2:	687b      	ldr	r3, [r7, #4]
 80070b4:	681b      	ldr	r3, [r3, #0]
 80070b6:	685b      	ldr	r3, [r3, #4]
 80070b8:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80070bc:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80070c0:	d117      	bne.n	80070f2 <I2C_Master_ADDR+0x2e0>
 80070c2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070c4:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80070c8:	d00b      	beq.n	80070e2 <I2C_Master_ADDR+0x2d0>
 80070ca:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070cc:	2b01      	cmp	r3, #1
 80070ce:	d008      	beq.n	80070e2 <I2C_Master_ADDR+0x2d0>
 80070d0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070d2:	2b08      	cmp	r3, #8
 80070d4:	d005      	beq.n	80070e2 <I2C_Master_ADDR+0x2d0>
 80070d6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070d8:	2b10      	cmp	r3, #16
 80070da:	d002      	beq.n	80070e2 <I2C_Master_ADDR+0x2d0>
 80070dc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070de:	2b20      	cmp	r3, #32
 80070e0:	d107      	bne.n	80070f2 <I2C_Master_ADDR+0x2e0>
 80070e2:	687b      	ldr	r3, [r7, #4]
 80070e4:	681b      	ldr	r3, [r3, #0]
 80070e6:	685a      	ldr	r2, [r3, #4]
 80070e8:	687b      	ldr	r3, [r7, #4]
 80070ea:	681b      	ldr	r3, [r3, #0]
 80070ec:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80070f0:	605a      	str	r2, [r3, #4]
 80070f2:	2300      	movs	r3, #0
 80070f4:	613b      	str	r3, [r7, #16]
 80070f6:	687b      	ldr	r3, [r7, #4]
 80070f8:	681b      	ldr	r3, [r3, #0]
 80070fa:	695b      	ldr	r3, [r3, #20]
 80070fc:	613b      	str	r3, [r7, #16]
 80070fe:	687b      	ldr	r3, [r7, #4]
 8007100:	681b      	ldr	r3, [r3, #0]
 8007102:	699b      	ldr	r3, [r3, #24]
 8007104:	613b      	str	r3, [r7, #16]
 8007106:	693b      	ldr	r3, [r7, #16]
 8007108:	687b      	ldr	r3, [r7, #4]
 800710a:	2200      	movs	r2, #0
 800710c:	651a      	str	r2, [r3, #80]	; 0x50
 800710e:	e00b      	b.n	8007128 <I2C_Master_ADDR+0x316>
 8007110:	2300      	movs	r3, #0
 8007112:	60fb      	str	r3, [r7, #12]
 8007114:	687b      	ldr	r3, [r7, #4]
 8007116:	681b      	ldr	r3, [r3, #0]
 8007118:	695b      	ldr	r3, [r3, #20]
 800711a:	60fb      	str	r3, [r7, #12]
 800711c:	687b      	ldr	r3, [r7, #4]
 800711e:	681b      	ldr	r3, [r3, #0]
 8007120:	699b      	ldr	r3, [r3, #24]
 8007122:	60fb      	str	r3, [r7, #12]
 8007124:	68fb      	ldr	r3, [r7, #12]
 8007126:	e7ff      	b.n	8007128 <I2C_Master_ADDR+0x316>
 8007128:	bf00      	nop
 800712a:	3744      	adds	r7, #68	; 0x44
 800712c:	46bd      	mov	sp, r7
 800712e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007132:	4770      	bx	lr

08007134 <I2C_SlaveTransmit_TXE>:
 8007134:	b580      	push	{r7, lr}
 8007136:	b084      	sub	sp, #16
 8007138:	af00      	add	r7, sp, #0
 800713a:	6078      	str	r0, [r7, #4]
 800713c:	687b      	ldr	r3, [r7, #4]
 800713e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007142:	73fb      	strb	r3, [r7, #15]
 8007144:	687b      	ldr	r3, [r7, #4]
 8007146:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007148:	b29b      	uxth	r3, r3
 800714a:	2b00      	cmp	r3, #0
 800714c:	d02b      	beq.n	80071a6 <I2C_SlaveTransmit_TXE+0x72>
 800714e:	687b      	ldr	r3, [r7, #4]
 8007150:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007152:	781a      	ldrb	r2, [r3, #0]
 8007154:	687b      	ldr	r3, [r7, #4]
 8007156:	681b      	ldr	r3, [r3, #0]
 8007158:	611a      	str	r2, [r3, #16]
 800715a:	687b      	ldr	r3, [r7, #4]
 800715c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800715e:	1c5a      	adds	r2, r3, #1
 8007160:	687b      	ldr	r3, [r7, #4]
 8007162:	625a      	str	r2, [r3, #36]	; 0x24
 8007164:	687b      	ldr	r3, [r7, #4]
 8007166:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007168:	b29b      	uxth	r3, r3
 800716a:	3b01      	subs	r3, #1
 800716c:	b29a      	uxth	r2, r3
 800716e:	687b      	ldr	r3, [r7, #4]
 8007170:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007172:	687b      	ldr	r3, [r7, #4]
 8007174:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007176:	b29b      	uxth	r3, r3
 8007178:	2b00      	cmp	r3, #0
 800717a:	d114      	bne.n	80071a6 <I2C_SlaveTransmit_TXE+0x72>
 800717c:	7bfb      	ldrb	r3, [r7, #15]
 800717e:	2b29      	cmp	r3, #41	; 0x29
 8007180:	d111      	bne.n	80071a6 <I2C_SlaveTransmit_TXE+0x72>
 8007182:	687b      	ldr	r3, [r7, #4]
 8007184:	681b      	ldr	r3, [r3, #0]
 8007186:	685a      	ldr	r2, [r3, #4]
 8007188:	687b      	ldr	r3, [r7, #4]
 800718a:	681b      	ldr	r3, [r3, #0]
 800718c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007190:	605a      	str	r2, [r3, #4]
 8007192:	687b      	ldr	r3, [r7, #4]
 8007194:	2221      	movs	r2, #33	; 0x21
 8007196:	631a      	str	r2, [r3, #48]	; 0x30
 8007198:	687b      	ldr	r3, [r7, #4]
 800719a:	2228      	movs	r2, #40	; 0x28
 800719c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80071a0:	6878      	ldr	r0, [r7, #4]
 80071a2:	f7ff f9e7 	bl	8006574 <HAL_I2C_SlaveTxCpltCallback>
 80071a6:	bf00      	nop
 80071a8:	3710      	adds	r7, #16
 80071aa:	46bd      	mov	sp, r7
 80071ac:	bd80      	pop	{r7, pc}

080071ae <I2C_SlaveTransmit_BTF>:
 80071ae:	b480      	push	{r7}
 80071b0:	b083      	sub	sp, #12
 80071b2:	af00      	add	r7, sp, #0
 80071b4:	6078      	str	r0, [r7, #4]
 80071b6:	687b      	ldr	r3, [r7, #4]
 80071b8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80071ba:	b29b      	uxth	r3, r3
 80071bc:	2b00      	cmp	r3, #0
 80071be:	d011      	beq.n	80071e4 <I2C_SlaveTransmit_BTF+0x36>
 80071c0:	687b      	ldr	r3, [r7, #4]
 80071c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80071c4:	781a      	ldrb	r2, [r3, #0]
 80071c6:	687b      	ldr	r3, [r7, #4]
 80071c8:	681b      	ldr	r3, [r3, #0]
 80071ca:	611a      	str	r2, [r3, #16]
 80071cc:	687b      	ldr	r3, [r7, #4]
 80071ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80071d0:	1c5a      	adds	r2, r3, #1
 80071d2:	687b      	ldr	r3, [r7, #4]
 80071d4:	625a      	str	r2, [r3, #36]	; 0x24
 80071d6:	687b      	ldr	r3, [r7, #4]
 80071d8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80071da:	b29b      	uxth	r3, r3
 80071dc:	3b01      	subs	r3, #1
 80071de:	b29a      	uxth	r2, r3
 80071e0:	687b      	ldr	r3, [r7, #4]
 80071e2:	855a      	strh	r2, [r3, #42]	; 0x2a
 80071e4:	bf00      	nop
 80071e6:	370c      	adds	r7, #12
 80071e8:	46bd      	mov	sp, r7
 80071ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071ee:	4770      	bx	lr

080071f0 <I2C_SlaveReceive_RXNE>:
 80071f0:	b580      	push	{r7, lr}
 80071f2:	b084      	sub	sp, #16
 80071f4:	af00      	add	r7, sp, #0
 80071f6:	6078      	str	r0, [r7, #4]
 80071f8:	687b      	ldr	r3, [r7, #4]
 80071fa:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80071fe:	73fb      	strb	r3, [r7, #15]
 8007200:	687b      	ldr	r3, [r7, #4]
 8007202:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007204:	b29b      	uxth	r3, r3
 8007206:	2b00      	cmp	r3, #0
 8007208:	d02c      	beq.n	8007264 <I2C_SlaveReceive_RXNE+0x74>
 800720a:	687b      	ldr	r3, [r7, #4]
 800720c:	681b      	ldr	r3, [r3, #0]
 800720e:	691a      	ldr	r2, [r3, #16]
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007214:	b2d2      	uxtb	r2, r2
 8007216:	701a      	strb	r2, [r3, #0]
 8007218:	687b      	ldr	r3, [r7, #4]
 800721a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800721c:	1c5a      	adds	r2, r3, #1
 800721e:	687b      	ldr	r3, [r7, #4]
 8007220:	625a      	str	r2, [r3, #36]	; 0x24
 8007222:	687b      	ldr	r3, [r7, #4]
 8007224:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007226:	b29b      	uxth	r3, r3
 8007228:	3b01      	subs	r3, #1
 800722a:	b29a      	uxth	r2, r3
 800722c:	687b      	ldr	r3, [r7, #4]
 800722e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007230:	687b      	ldr	r3, [r7, #4]
 8007232:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007234:	b29b      	uxth	r3, r3
 8007236:	2b00      	cmp	r3, #0
 8007238:	d114      	bne.n	8007264 <I2C_SlaveReceive_RXNE+0x74>
 800723a:	7bfb      	ldrb	r3, [r7, #15]
 800723c:	2b2a      	cmp	r3, #42	; 0x2a
 800723e:	d111      	bne.n	8007264 <I2C_SlaveReceive_RXNE+0x74>
 8007240:	687b      	ldr	r3, [r7, #4]
 8007242:	681b      	ldr	r3, [r3, #0]
 8007244:	685a      	ldr	r2, [r3, #4]
 8007246:	687b      	ldr	r3, [r7, #4]
 8007248:	681b      	ldr	r3, [r3, #0]
 800724a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800724e:	605a      	str	r2, [r3, #4]
 8007250:	687b      	ldr	r3, [r7, #4]
 8007252:	2222      	movs	r2, #34	; 0x22
 8007254:	631a      	str	r2, [r3, #48]	; 0x30
 8007256:	687b      	ldr	r3, [r7, #4]
 8007258:	2228      	movs	r2, #40	; 0x28
 800725a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800725e:	6878      	ldr	r0, [r7, #4]
 8007260:	f7ff f992 	bl	8006588 <HAL_I2C_SlaveRxCpltCallback>
 8007264:	bf00      	nop
 8007266:	3710      	adds	r7, #16
 8007268:	46bd      	mov	sp, r7
 800726a:	bd80      	pop	{r7, pc}

0800726c <I2C_SlaveReceive_BTF>:
 800726c:	b480      	push	{r7}
 800726e:	b083      	sub	sp, #12
 8007270:	af00      	add	r7, sp, #0
 8007272:	6078      	str	r0, [r7, #4]
 8007274:	687b      	ldr	r3, [r7, #4]
 8007276:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007278:	b29b      	uxth	r3, r3
 800727a:	2b00      	cmp	r3, #0
 800727c:	d012      	beq.n	80072a4 <I2C_SlaveReceive_BTF+0x38>
 800727e:	687b      	ldr	r3, [r7, #4]
 8007280:	681b      	ldr	r3, [r3, #0]
 8007282:	691a      	ldr	r2, [r3, #16]
 8007284:	687b      	ldr	r3, [r7, #4]
 8007286:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007288:	b2d2      	uxtb	r2, r2
 800728a:	701a      	strb	r2, [r3, #0]
 800728c:	687b      	ldr	r3, [r7, #4]
 800728e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007290:	1c5a      	adds	r2, r3, #1
 8007292:	687b      	ldr	r3, [r7, #4]
 8007294:	625a      	str	r2, [r3, #36]	; 0x24
 8007296:	687b      	ldr	r3, [r7, #4]
 8007298:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800729a:	b29b      	uxth	r3, r3
 800729c:	3b01      	subs	r3, #1
 800729e:	b29a      	uxth	r2, r3
 80072a0:	687b      	ldr	r3, [r7, #4]
 80072a2:	855a      	strh	r2, [r3, #42]	; 0x2a
 80072a4:	bf00      	nop
 80072a6:	370c      	adds	r7, #12
 80072a8:	46bd      	mov	sp, r7
 80072aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072ae:	4770      	bx	lr

080072b0 <I2C_Slave_ADDR>:
 80072b0:	b580      	push	{r7, lr}
 80072b2:	b084      	sub	sp, #16
 80072b4:	af00      	add	r7, sp, #0
 80072b6:	6078      	str	r0, [r7, #4]
 80072b8:	6039      	str	r1, [r7, #0]
 80072ba:	2300      	movs	r3, #0
 80072bc:	73fb      	strb	r3, [r7, #15]
 80072be:	687b      	ldr	r3, [r7, #4]
 80072c0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80072c4:	b2db      	uxtb	r3, r3
 80072c6:	f003 0328 	and.w	r3, r3, #40	; 0x28
 80072ca:	2b28      	cmp	r3, #40	; 0x28
 80072cc:	d127      	bne.n	800731e <I2C_Slave_ADDR+0x6e>
 80072ce:	687b      	ldr	r3, [r7, #4]
 80072d0:	681b      	ldr	r3, [r3, #0]
 80072d2:	685a      	ldr	r2, [r3, #4]
 80072d4:	687b      	ldr	r3, [r7, #4]
 80072d6:	681b      	ldr	r3, [r3, #0]
 80072d8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80072dc:	605a      	str	r2, [r3, #4]
 80072de:	683b      	ldr	r3, [r7, #0]
 80072e0:	089b      	lsrs	r3, r3, #2
 80072e2:	f003 0301 	and.w	r3, r3, #1
 80072e6:	2b00      	cmp	r3, #0
 80072e8:	d101      	bne.n	80072ee <I2C_Slave_ADDR+0x3e>
 80072ea:	2301      	movs	r3, #1
 80072ec:	73fb      	strb	r3, [r7, #15]
 80072ee:	683b      	ldr	r3, [r7, #0]
 80072f0:	09db      	lsrs	r3, r3, #7
 80072f2:	f003 0301 	and.w	r3, r3, #1
 80072f6:	2b00      	cmp	r3, #0
 80072f8:	d103      	bne.n	8007302 <I2C_Slave_ADDR+0x52>
 80072fa:	687b      	ldr	r3, [r7, #4]
 80072fc:	68db      	ldr	r3, [r3, #12]
 80072fe:	81bb      	strh	r3, [r7, #12]
 8007300:	e002      	b.n	8007308 <I2C_Slave_ADDR+0x58>
 8007302:	687b      	ldr	r3, [r7, #4]
 8007304:	699b      	ldr	r3, [r3, #24]
 8007306:	81bb      	strh	r3, [r7, #12]
 8007308:	687b      	ldr	r3, [r7, #4]
 800730a:	2200      	movs	r2, #0
 800730c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007310:	89ba      	ldrh	r2, [r7, #12]
 8007312:	7bfb      	ldrb	r3, [r7, #15]
 8007314:	4619      	mov	r1, r3
 8007316:	6878      	ldr	r0, [r7, #4]
 8007318:	f7ff f940 	bl	800659c <HAL_I2C_AddrCallback>
 800731c:	e00e      	b.n	800733c <I2C_Slave_ADDR+0x8c>
 800731e:	2300      	movs	r3, #0
 8007320:	60bb      	str	r3, [r7, #8]
 8007322:	687b      	ldr	r3, [r7, #4]
 8007324:	681b      	ldr	r3, [r3, #0]
 8007326:	695b      	ldr	r3, [r3, #20]
 8007328:	60bb      	str	r3, [r7, #8]
 800732a:	687b      	ldr	r3, [r7, #4]
 800732c:	681b      	ldr	r3, [r3, #0]
 800732e:	699b      	ldr	r3, [r3, #24]
 8007330:	60bb      	str	r3, [r7, #8]
 8007332:	68bb      	ldr	r3, [r7, #8]
 8007334:	687b      	ldr	r3, [r7, #4]
 8007336:	2200      	movs	r2, #0
 8007338:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800733c:	bf00      	nop
 800733e:	3710      	adds	r7, #16
 8007340:	46bd      	mov	sp, r7
 8007342:	bd80      	pop	{r7, pc}

08007344 <I2C_Slave_STOPF>:
 8007344:	b580      	push	{r7, lr}
 8007346:	b084      	sub	sp, #16
 8007348:	af00      	add	r7, sp, #0
 800734a:	6078      	str	r0, [r7, #4]
 800734c:	687b      	ldr	r3, [r7, #4]
 800734e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007352:	73fb      	strb	r3, [r7, #15]
 8007354:	687b      	ldr	r3, [r7, #4]
 8007356:	681b      	ldr	r3, [r3, #0]
 8007358:	685a      	ldr	r2, [r3, #4]
 800735a:	687b      	ldr	r3, [r7, #4]
 800735c:	681b      	ldr	r3, [r3, #0]
 800735e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8007362:	605a      	str	r2, [r3, #4]
 8007364:	2300      	movs	r3, #0
 8007366:	60bb      	str	r3, [r7, #8]
 8007368:	687b      	ldr	r3, [r7, #4]
 800736a:	681b      	ldr	r3, [r3, #0]
 800736c:	695b      	ldr	r3, [r3, #20]
 800736e:	60bb      	str	r3, [r7, #8]
 8007370:	687b      	ldr	r3, [r7, #4]
 8007372:	681b      	ldr	r3, [r3, #0]
 8007374:	681a      	ldr	r2, [r3, #0]
 8007376:	687b      	ldr	r3, [r7, #4]
 8007378:	681b      	ldr	r3, [r3, #0]
 800737a:	f042 0201 	orr.w	r2, r2, #1
 800737e:	601a      	str	r2, [r3, #0]
 8007380:	68bb      	ldr	r3, [r7, #8]
 8007382:	687b      	ldr	r3, [r7, #4]
 8007384:	681b      	ldr	r3, [r3, #0]
 8007386:	681a      	ldr	r2, [r3, #0]
 8007388:	687b      	ldr	r3, [r7, #4]
 800738a:	681b      	ldr	r3, [r3, #0]
 800738c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007390:	601a      	str	r2, [r3, #0]
 8007392:	687b      	ldr	r3, [r7, #4]
 8007394:	681b      	ldr	r3, [r3, #0]
 8007396:	685b      	ldr	r3, [r3, #4]
 8007398:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800739c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80073a0:	d172      	bne.n	8007488 <I2C_Slave_STOPF+0x144>
 80073a2:	7bfb      	ldrb	r3, [r7, #15]
 80073a4:	2b22      	cmp	r3, #34	; 0x22
 80073a6:	d002      	beq.n	80073ae <I2C_Slave_STOPF+0x6a>
 80073a8:	7bfb      	ldrb	r3, [r7, #15]
 80073aa:	2b2a      	cmp	r3, #42	; 0x2a
 80073ac:	d135      	bne.n	800741a <I2C_Slave_STOPF+0xd6>
 80073ae:	687b      	ldr	r3, [r7, #4]
 80073b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80073b2:	681b      	ldr	r3, [r3, #0]
 80073b4:	685b      	ldr	r3, [r3, #4]
 80073b6:	b29a      	uxth	r2, r3
 80073b8:	687b      	ldr	r3, [r7, #4]
 80073ba:	855a      	strh	r2, [r3, #42]	; 0x2a
 80073bc:	687b      	ldr	r3, [r7, #4]
 80073be:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80073c0:	b29b      	uxth	r3, r3
 80073c2:	2b00      	cmp	r3, #0
 80073c4:	d005      	beq.n	80073d2 <I2C_Slave_STOPF+0x8e>
 80073c6:	687b      	ldr	r3, [r7, #4]
 80073c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80073ca:	f043 0204 	orr.w	r2, r3, #4
 80073ce:	687b      	ldr	r3, [r7, #4]
 80073d0:	641a      	str	r2, [r3, #64]	; 0x40
 80073d2:	687b      	ldr	r3, [r7, #4]
 80073d4:	681b      	ldr	r3, [r3, #0]
 80073d6:	685a      	ldr	r2, [r3, #4]
 80073d8:	687b      	ldr	r3, [r7, #4]
 80073da:	681b      	ldr	r3, [r3, #0]
 80073dc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80073e0:	605a      	str	r2, [r3, #4]
 80073e2:	687b      	ldr	r3, [r7, #4]
 80073e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80073e6:	4618      	mov	r0, r3
 80073e8:	f7fd ff74 	bl	80052d4 <HAL_DMA_GetState>
 80073ec:	4603      	mov	r3, r0
 80073ee:	2b01      	cmp	r3, #1
 80073f0:	d049      	beq.n	8007486 <I2C_Slave_STOPF+0x142>
 80073f2:	687b      	ldr	r3, [r7, #4]
 80073f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80073f6:	4a69      	ldr	r2, [pc, #420]	; (800759c <I2C_Slave_STOPF+0x258>)
 80073f8:	651a      	str	r2, [r3, #80]	; 0x50
 80073fa:	687b      	ldr	r3, [r7, #4]
 80073fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80073fe:	4618      	mov	r0, r3
 8007400:	f7fd fdbc 	bl	8004f7c <HAL_DMA_Abort_IT>
 8007404:	4603      	mov	r3, r0
 8007406:	2b00      	cmp	r3, #0
 8007408:	d03d      	beq.n	8007486 <I2C_Slave_STOPF+0x142>
 800740a:	687b      	ldr	r3, [r7, #4]
 800740c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800740e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007410:	687a      	ldr	r2, [r7, #4]
 8007412:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8007414:	4610      	mov	r0, r2
 8007416:	4798      	blx	r3
 8007418:	e035      	b.n	8007486 <I2C_Slave_STOPF+0x142>
 800741a:	687b      	ldr	r3, [r7, #4]
 800741c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800741e:	681b      	ldr	r3, [r3, #0]
 8007420:	685b      	ldr	r3, [r3, #4]
 8007422:	b29a      	uxth	r2, r3
 8007424:	687b      	ldr	r3, [r7, #4]
 8007426:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007428:	687b      	ldr	r3, [r7, #4]
 800742a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800742c:	b29b      	uxth	r3, r3
 800742e:	2b00      	cmp	r3, #0
 8007430:	d005      	beq.n	800743e <I2C_Slave_STOPF+0xfa>
 8007432:	687b      	ldr	r3, [r7, #4]
 8007434:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007436:	f043 0204 	orr.w	r2, r3, #4
 800743a:	687b      	ldr	r3, [r7, #4]
 800743c:	641a      	str	r2, [r3, #64]	; 0x40
 800743e:	687b      	ldr	r3, [r7, #4]
 8007440:	681b      	ldr	r3, [r3, #0]
 8007442:	685a      	ldr	r2, [r3, #4]
 8007444:	687b      	ldr	r3, [r7, #4]
 8007446:	681b      	ldr	r3, [r3, #0]
 8007448:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800744c:	605a      	str	r2, [r3, #4]
 800744e:	687b      	ldr	r3, [r7, #4]
 8007450:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007452:	4618      	mov	r0, r3
 8007454:	f7fd ff3e 	bl	80052d4 <HAL_DMA_GetState>
 8007458:	4603      	mov	r3, r0
 800745a:	2b01      	cmp	r3, #1
 800745c:	d014      	beq.n	8007488 <I2C_Slave_STOPF+0x144>
 800745e:	687b      	ldr	r3, [r7, #4]
 8007460:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007462:	4a4e      	ldr	r2, [pc, #312]	; (800759c <I2C_Slave_STOPF+0x258>)
 8007464:	651a      	str	r2, [r3, #80]	; 0x50
 8007466:	687b      	ldr	r3, [r7, #4]
 8007468:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800746a:	4618      	mov	r0, r3
 800746c:	f7fd fd86 	bl	8004f7c <HAL_DMA_Abort_IT>
 8007470:	4603      	mov	r3, r0
 8007472:	2b00      	cmp	r3, #0
 8007474:	d008      	beq.n	8007488 <I2C_Slave_STOPF+0x144>
 8007476:	687b      	ldr	r3, [r7, #4]
 8007478:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800747a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800747c:	687a      	ldr	r2, [r7, #4]
 800747e:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8007480:	4610      	mov	r0, r2
 8007482:	4798      	blx	r3
 8007484:	e000      	b.n	8007488 <I2C_Slave_STOPF+0x144>
 8007486:	bf00      	nop
 8007488:	687b      	ldr	r3, [r7, #4]
 800748a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800748c:	b29b      	uxth	r3, r3
 800748e:	2b00      	cmp	r3, #0
 8007490:	d03e      	beq.n	8007510 <I2C_Slave_STOPF+0x1cc>
 8007492:	687b      	ldr	r3, [r7, #4]
 8007494:	681b      	ldr	r3, [r3, #0]
 8007496:	695b      	ldr	r3, [r3, #20]
 8007498:	f003 0304 	and.w	r3, r3, #4
 800749c:	2b04      	cmp	r3, #4
 800749e:	d112      	bne.n	80074c6 <I2C_Slave_STOPF+0x182>
 80074a0:	687b      	ldr	r3, [r7, #4]
 80074a2:	681b      	ldr	r3, [r3, #0]
 80074a4:	691a      	ldr	r2, [r3, #16]
 80074a6:	687b      	ldr	r3, [r7, #4]
 80074a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80074aa:	b2d2      	uxtb	r2, r2
 80074ac:	701a      	strb	r2, [r3, #0]
 80074ae:	687b      	ldr	r3, [r7, #4]
 80074b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80074b2:	1c5a      	adds	r2, r3, #1
 80074b4:	687b      	ldr	r3, [r7, #4]
 80074b6:	625a      	str	r2, [r3, #36]	; 0x24
 80074b8:	687b      	ldr	r3, [r7, #4]
 80074ba:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80074bc:	b29b      	uxth	r3, r3
 80074be:	3b01      	subs	r3, #1
 80074c0:	b29a      	uxth	r2, r3
 80074c2:	687b      	ldr	r3, [r7, #4]
 80074c4:	855a      	strh	r2, [r3, #42]	; 0x2a
 80074c6:	687b      	ldr	r3, [r7, #4]
 80074c8:	681b      	ldr	r3, [r3, #0]
 80074ca:	695b      	ldr	r3, [r3, #20]
 80074cc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80074d0:	2b40      	cmp	r3, #64	; 0x40
 80074d2:	d112      	bne.n	80074fa <I2C_Slave_STOPF+0x1b6>
 80074d4:	687b      	ldr	r3, [r7, #4]
 80074d6:	681b      	ldr	r3, [r3, #0]
 80074d8:	691a      	ldr	r2, [r3, #16]
 80074da:	687b      	ldr	r3, [r7, #4]
 80074dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80074de:	b2d2      	uxtb	r2, r2
 80074e0:	701a      	strb	r2, [r3, #0]
 80074e2:	687b      	ldr	r3, [r7, #4]
 80074e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80074e6:	1c5a      	adds	r2, r3, #1
 80074e8:	687b      	ldr	r3, [r7, #4]
 80074ea:	625a      	str	r2, [r3, #36]	; 0x24
 80074ec:	687b      	ldr	r3, [r7, #4]
 80074ee:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80074f0:	b29b      	uxth	r3, r3
 80074f2:	3b01      	subs	r3, #1
 80074f4:	b29a      	uxth	r2, r3
 80074f6:	687b      	ldr	r3, [r7, #4]
 80074f8:	855a      	strh	r2, [r3, #42]	; 0x2a
 80074fa:	687b      	ldr	r3, [r7, #4]
 80074fc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80074fe:	b29b      	uxth	r3, r3
 8007500:	2b00      	cmp	r3, #0
 8007502:	d005      	beq.n	8007510 <I2C_Slave_STOPF+0x1cc>
 8007504:	687b      	ldr	r3, [r7, #4]
 8007506:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007508:	f043 0204 	orr.w	r2, r3, #4
 800750c:	687b      	ldr	r3, [r7, #4]
 800750e:	641a      	str	r2, [r3, #64]	; 0x40
 8007510:	687b      	ldr	r3, [r7, #4]
 8007512:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007514:	2b00      	cmp	r3, #0
 8007516:	d003      	beq.n	8007520 <I2C_Slave_STOPF+0x1dc>
 8007518:	6878      	ldr	r0, [r7, #4]
 800751a:	f000 f8b3 	bl	8007684 <I2C_ITError>
 800751e:	e039      	b.n	8007594 <I2C_Slave_STOPF+0x250>
 8007520:	7bfb      	ldrb	r3, [r7, #15]
 8007522:	2b2a      	cmp	r3, #42	; 0x2a
 8007524:	d109      	bne.n	800753a <I2C_Slave_STOPF+0x1f6>
 8007526:	687b      	ldr	r3, [r7, #4]
 8007528:	2200      	movs	r2, #0
 800752a:	631a      	str	r2, [r3, #48]	; 0x30
 800752c:	687b      	ldr	r3, [r7, #4]
 800752e:	2228      	movs	r2, #40	; 0x28
 8007530:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007534:	6878      	ldr	r0, [r7, #4]
 8007536:	f7ff f827 	bl	8006588 <HAL_I2C_SlaveRxCpltCallback>
 800753a:	687b      	ldr	r3, [r7, #4]
 800753c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007540:	b2db      	uxtb	r3, r3
 8007542:	2b28      	cmp	r3, #40	; 0x28
 8007544:	d111      	bne.n	800756a <I2C_Slave_STOPF+0x226>
 8007546:	687b      	ldr	r3, [r7, #4]
 8007548:	4a15      	ldr	r2, [pc, #84]	; (80075a0 <I2C_Slave_STOPF+0x25c>)
 800754a:	62da      	str	r2, [r3, #44]	; 0x2c
 800754c:	687b      	ldr	r3, [r7, #4]
 800754e:	2200      	movs	r2, #0
 8007550:	631a      	str	r2, [r3, #48]	; 0x30
 8007552:	687b      	ldr	r3, [r7, #4]
 8007554:	2220      	movs	r2, #32
 8007556:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800755a:	687b      	ldr	r3, [r7, #4]
 800755c:	2200      	movs	r2, #0
 800755e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007562:	6878      	ldr	r0, [r7, #4]
 8007564:	f7ff f828 	bl	80065b8 <HAL_I2C_ListenCpltCallback>
 8007568:	e014      	b.n	8007594 <I2C_Slave_STOPF+0x250>
 800756a:	687b      	ldr	r3, [r7, #4]
 800756c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800756e:	2b22      	cmp	r3, #34	; 0x22
 8007570:	d002      	beq.n	8007578 <I2C_Slave_STOPF+0x234>
 8007572:	7bfb      	ldrb	r3, [r7, #15]
 8007574:	2b22      	cmp	r3, #34	; 0x22
 8007576:	d10d      	bne.n	8007594 <I2C_Slave_STOPF+0x250>
 8007578:	687b      	ldr	r3, [r7, #4]
 800757a:	2200      	movs	r2, #0
 800757c:	631a      	str	r2, [r3, #48]	; 0x30
 800757e:	687b      	ldr	r3, [r7, #4]
 8007580:	2220      	movs	r2, #32
 8007582:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007586:	687b      	ldr	r3, [r7, #4]
 8007588:	2200      	movs	r2, #0
 800758a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800758e:	6878      	ldr	r0, [r7, #4]
 8007590:	f7fe fffa 	bl	8006588 <HAL_I2C_SlaveRxCpltCallback>
 8007594:	bf00      	nop
 8007596:	3710      	adds	r7, #16
 8007598:	46bd      	mov	sp, r7
 800759a:	bd80      	pop	{r7, pc}
 800759c:	08007b89 	.word	0x08007b89
 80075a0:	ffff0000 	.word	0xffff0000

080075a4 <I2C_Slave_AF>:
 80075a4:	b580      	push	{r7, lr}
 80075a6:	b084      	sub	sp, #16
 80075a8:	af00      	add	r7, sp, #0
 80075aa:	6078      	str	r0, [r7, #4]
 80075ac:	687b      	ldr	r3, [r7, #4]
 80075ae:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80075b2:	73fb      	strb	r3, [r7, #15]
 80075b4:	687b      	ldr	r3, [r7, #4]
 80075b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80075b8:	60bb      	str	r3, [r7, #8]
 80075ba:	68bb      	ldr	r3, [r7, #8]
 80075bc:	2b08      	cmp	r3, #8
 80075be:	d002      	beq.n	80075c6 <I2C_Slave_AF+0x22>
 80075c0:	68bb      	ldr	r3, [r7, #8]
 80075c2:	2b20      	cmp	r3, #32
 80075c4:	d129      	bne.n	800761a <I2C_Slave_AF+0x76>
 80075c6:	7bfb      	ldrb	r3, [r7, #15]
 80075c8:	2b28      	cmp	r3, #40	; 0x28
 80075ca:	d126      	bne.n	800761a <I2C_Slave_AF+0x76>
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	4a2c      	ldr	r2, [pc, #176]	; (8007680 <I2C_Slave_AF+0xdc>)
 80075d0:	62da      	str	r2, [r3, #44]	; 0x2c
 80075d2:	687b      	ldr	r3, [r7, #4]
 80075d4:	681b      	ldr	r3, [r3, #0]
 80075d6:	685a      	ldr	r2, [r3, #4]
 80075d8:	687b      	ldr	r3, [r7, #4]
 80075da:	681b      	ldr	r3, [r3, #0]
 80075dc:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80075e0:	605a      	str	r2, [r3, #4]
 80075e2:	687b      	ldr	r3, [r7, #4]
 80075e4:	681b      	ldr	r3, [r3, #0]
 80075e6:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80075ea:	615a      	str	r2, [r3, #20]
 80075ec:	687b      	ldr	r3, [r7, #4]
 80075ee:	681b      	ldr	r3, [r3, #0]
 80075f0:	681a      	ldr	r2, [r3, #0]
 80075f2:	687b      	ldr	r3, [r7, #4]
 80075f4:	681b      	ldr	r3, [r3, #0]
 80075f6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80075fa:	601a      	str	r2, [r3, #0]
 80075fc:	687b      	ldr	r3, [r7, #4]
 80075fe:	2200      	movs	r2, #0
 8007600:	631a      	str	r2, [r3, #48]	; 0x30
 8007602:	687b      	ldr	r3, [r7, #4]
 8007604:	2220      	movs	r2, #32
 8007606:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800760a:	687b      	ldr	r3, [r7, #4]
 800760c:	2200      	movs	r2, #0
 800760e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007612:	6878      	ldr	r0, [r7, #4]
 8007614:	f7fe ffd0 	bl	80065b8 <HAL_I2C_ListenCpltCallback>
 8007618:	e02e      	b.n	8007678 <I2C_Slave_AF+0xd4>
 800761a:	7bfb      	ldrb	r3, [r7, #15]
 800761c:	2b21      	cmp	r3, #33	; 0x21
 800761e:	d126      	bne.n	800766e <I2C_Slave_AF+0xca>
 8007620:	687b      	ldr	r3, [r7, #4]
 8007622:	4a17      	ldr	r2, [pc, #92]	; (8007680 <I2C_Slave_AF+0xdc>)
 8007624:	62da      	str	r2, [r3, #44]	; 0x2c
 8007626:	687b      	ldr	r3, [r7, #4]
 8007628:	2221      	movs	r2, #33	; 0x21
 800762a:	631a      	str	r2, [r3, #48]	; 0x30
 800762c:	687b      	ldr	r3, [r7, #4]
 800762e:	2220      	movs	r2, #32
 8007630:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007634:	687b      	ldr	r3, [r7, #4]
 8007636:	2200      	movs	r2, #0
 8007638:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800763c:	687b      	ldr	r3, [r7, #4]
 800763e:	681b      	ldr	r3, [r3, #0]
 8007640:	685a      	ldr	r2, [r3, #4]
 8007642:	687b      	ldr	r3, [r7, #4]
 8007644:	681b      	ldr	r3, [r3, #0]
 8007646:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800764a:	605a      	str	r2, [r3, #4]
 800764c:	687b      	ldr	r3, [r7, #4]
 800764e:	681b      	ldr	r3, [r3, #0]
 8007650:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8007654:	615a      	str	r2, [r3, #20]
 8007656:	687b      	ldr	r3, [r7, #4]
 8007658:	681b      	ldr	r3, [r3, #0]
 800765a:	681a      	ldr	r2, [r3, #0]
 800765c:	687b      	ldr	r3, [r7, #4]
 800765e:	681b      	ldr	r3, [r3, #0]
 8007660:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007664:	601a      	str	r2, [r3, #0]
 8007666:	6878      	ldr	r0, [r7, #4]
 8007668:	f7fe ff84 	bl	8006574 <HAL_I2C_SlaveTxCpltCallback>
 800766c:	e004      	b.n	8007678 <I2C_Slave_AF+0xd4>
 800766e:	687b      	ldr	r3, [r7, #4]
 8007670:	681b      	ldr	r3, [r3, #0]
 8007672:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8007676:	615a      	str	r2, [r3, #20]
 8007678:	bf00      	nop
 800767a:	3710      	adds	r7, #16
 800767c:	46bd      	mov	sp, r7
 800767e:	bd80      	pop	{r7, pc}
 8007680:	ffff0000 	.word	0xffff0000

08007684 <I2C_ITError>:
 8007684:	b580      	push	{r7, lr}
 8007686:	b084      	sub	sp, #16
 8007688:	af00      	add	r7, sp, #0
 800768a:	6078      	str	r0, [r7, #4]
 800768c:	687b      	ldr	r3, [r7, #4]
 800768e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007692:	73fb      	strb	r3, [r7, #15]
 8007694:	687b      	ldr	r3, [r7, #4]
 8007696:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800769a:	73bb      	strb	r3, [r7, #14]
 800769c:	7bbb      	ldrb	r3, [r7, #14]
 800769e:	2b10      	cmp	r3, #16
 80076a0:	d002      	beq.n	80076a8 <I2C_ITError+0x24>
 80076a2:	7bbb      	ldrb	r3, [r7, #14]
 80076a4:	2b40      	cmp	r3, #64	; 0x40
 80076a6:	d10a      	bne.n	80076be <I2C_ITError+0x3a>
 80076a8:	7bfb      	ldrb	r3, [r7, #15]
 80076aa:	2b22      	cmp	r3, #34	; 0x22
 80076ac:	d107      	bne.n	80076be <I2C_ITError+0x3a>
 80076ae:	687b      	ldr	r3, [r7, #4]
 80076b0:	681b      	ldr	r3, [r3, #0]
 80076b2:	681a      	ldr	r2, [r3, #0]
 80076b4:	687b      	ldr	r3, [r7, #4]
 80076b6:	681b      	ldr	r3, [r3, #0]
 80076b8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80076bc:	601a      	str	r2, [r3, #0]
 80076be:	7bfb      	ldrb	r3, [r7, #15]
 80076c0:	f003 0328 	and.w	r3, r3, #40	; 0x28
 80076c4:	2b28      	cmp	r3, #40	; 0x28
 80076c6:	d107      	bne.n	80076d8 <I2C_ITError+0x54>
 80076c8:	687b      	ldr	r3, [r7, #4]
 80076ca:	2200      	movs	r2, #0
 80076cc:	631a      	str	r2, [r3, #48]	; 0x30
 80076ce:	687b      	ldr	r3, [r7, #4]
 80076d0:	2228      	movs	r2, #40	; 0x28
 80076d2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80076d6:	e015      	b.n	8007704 <I2C_ITError+0x80>
 80076d8:	687b      	ldr	r3, [r7, #4]
 80076da:	681b      	ldr	r3, [r3, #0]
 80076dc:	685b      	ldr	r3, [r3, #4]
 80076de:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80076e2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80076e6:	d00a      	beq.n	80076fe <I2C_ITError+0x7a>
 80076e8:	7bfb      	ldrb	r3, [r7, #15]
 80076ea:	2b60      	cmp	r3, #96	; 0x60
 80076ec:	d007      	beq.n	80076fe <I2C_ITError+0x7a>
 80076ee:	687b      	ldr	r3, [r7, #4]
 80076f0:	2220      	movs	r2, #32
 80076f2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80076f6:	687b      	ldr	r3, [r7, #4]
 80076f8:	2200      	movs	r2, #0
 80076fa:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80076fe:	687b      	ldr	r3, [r7, #4]
 8007700:	2200      	movs	r2, #0
 8007702:	631a      	str	r2, [r3, #48]	; 0x30
 8007704:	687b      	ldr	r3, [r7, #4]
 8007706:	681b      	ldr	r3, [r3, #0]
 8007708:	685b      	ldr	r3, [r3, #4]
 800770a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800770e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007712:	d162      	bne.n	80077da <I2C_ITError+0x156>
 8007714:	687b      	ldr	r3, [r7, #4]
 8007716:	681b      	ldr	r3, [r3, #0]
 8007718:	685a      	ldr	r2, [r3, #4]
 800771a:	687b      	ldr	r3, [r7, #4]
 800771c:	681b      	ldr	r3, [r3, #0]
 800771e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007722:	605a      	str	r2, [r3, #4]
 8007724:	687b      	ldr	r3, [r7, #4]
 8007726:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007728:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800772c:	b2db      	uxtb	r3, r3
 800772e:	2b01      	cmp	r3, #1
 8007730:	d020      	beq.n	8007774 <I2C_ITError+0xf0>
 8007732:	687b      	ldr	r3, [r7, #4]
 8007734:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007736:	4a6a      	ldr	r2, [pc, #424]	; (80078e0 <I2C_ITError+0x25c>)
 8007738:	651a      	str	r2, [r3, #80]	; 0x50
 800773a:	687b      	ldr	r3, [r7, #4]
 800773c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800773e:	4618      	mov	r0, r3
 8007740:	f7fd fc1c 	bl	8004f7c <HAL_DMA_Abort_IT>
 8007744:	4603      	mov	r3, r0
 8007746:	2b00      	cmp	r3, #0
 8007748:	f000 8089 	beq.w	800785e <I2C_ITError+0x1da>
 800774c:	687b      	ldr	r3, [r7, #4]
 800774e:	681b      	ldr	r3, [r3, #0]
 8007750:	681a      	ldr	r2, [r3, #0]
 8007752:	687b      	ldr	r3, [r7, #4]
 8007754:	681b      	ldr	r3, [r3, #0]
 8007756:	f022 0201 	bic.w	r2, r2, #1
 800775a:	601a      	str	r2, [r3, #0]
 800775c:	687b      	ldr	r3, [r7, #4]
 800775e:	2220      	movs	r2, #32
 8007760:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007764:	687b      	ldr	r3, [r7, #4]
 8007766:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007768:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800776a:	687a      	ldr	r2, [r7, #4]
 800776c:	6b52      	ldr	r2, [r2, #52]	; 0x34
 800776e:	4610      	mov	r0, r2
 8007770:	4798      	blx	r3
 8007772:	e074      	b.n	800785e <I2C_ITError+0x1da>
 8007774:	687b      	ldr	r3, [r7, #4]
 8007776:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007778:	4a59      	ldr	r2, [pc, #356]	; (80078e0 <I2C_ITError+0x25c>)
 800777a:	651a      	str	r2, [r3, #80]	; 0x50
 800777c:	687b      	ldr	r3, [r7, #4]
 800777e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007780:	4618      	mov	r0, r3
 8007782:	f7fd fbfb 	bl	8004f7c <HAL_DMA_Abort_IT>
 8007786:	4603      	mov	r3, r0
 8007788:	2b00      	cmp	r3, #0
 800778a:	d068      	beq.n	800785e <I2C_ITError+0x1da>
 800778c:	687b      	ldr	r3, [r7, #4]
 800778e:	681b      	ldr	r3, [r3, #0]
 8007790:	695b      	ldr	r3, [r3, #20]
 8007792:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007796:	2b40      	cmp	r3, #64	; 0x40
 8007798:	d10b      	bne.n	80077b2 <I2C_ITError+0x12e>
 800779a:	687b      	ldr	r3, [r7, #4]
 800779c:	681b      	ldr	r3, [r3, #0]
 800779e:	691a      	ldr	r2, [r3, #16]
 80077a0:	687b      	ldr	r3, [r7, #4]
 80077a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80077a4:	b2d2      	uxtb	r2, r2
 80077a6:	701a      	strb	r2, [r3, #0]
 80077a8:	687b      	ldr	r3, [r7, #4]
 80077aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80077ac:	1c5a      	adds	r2, r3, #1
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	625a      	str	r2, [r3, #36]	; 0x24
 80077b2:	687b      	ldr	r3, [r7, #4]
 80077b4:	681b      	ldr	r3, [r3, #0]
 80077b6:	681a      	ldr	r2, [r3, #0]
 80077b8:	687b      	ldr	r3, [r7, #4]
 80077ba:	681b      	ldr	r3, [r3, #0]
 80077bc:	f022 0201 	bic.w	r2, r2, #1
 80077c0:	601a      	str	r2, [r3, #0]
 80077c2:	687b      	ldr	r3, [r7, #4]
 80077c4:	2220      	movs	r2, #32
 80077c6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80077ca:	687b      	ldr	r3, [r7, #4]
 80077cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80077ce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80077d0:	687a      	ldr	r2, [r7, #4]
 80077d2:	6b92      	ldr	r2, [r2, #56]	; 0x38
 80077d4:	4610      	mov	r0, r2
 80077d6:	4798      	blx	r3
 80077d8:	e041      	b.n	800785e <I2C_ITError+0x1da>
 80077da:	687b      	ldr	r3, [r7, #4]
 80077dc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80077e0:	b2db      	uxtb	r3, r3
 80077e2:	2b60      	cmp	r3, #96	; 0x60
 80077e4:	d125      	bne.n	8007832 <I2C_ITError+0x1ae>
 80077e6:	687b      	ldr	r3, [r7, #4]
 80077e8:	2220      	movs	r2, #32
 80077ea:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80077ee:	687b      	ldr	r3, [r7, #4]
 80077f0:	2200      	movs	r2, #0
 80077f2:	641a      	str	r2, [r3, #64]	; 0x40
 80077f4:	687b      	ldr	r3, [r7, #4]
 80077f6:	681b      	ldr	r3, [r3, #0]
 80077f8:	695b      	ldr	r3, [r3, #20]
 80077fa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80077fe:	2b40      	cmp	r3, #64	; 0x40
 8007800:	d10b      	bne.n	800781a <I2C_ITError+0x196>
 8007802:	687b      	ldr	r3, [r7, #4]
 8007804:	681b      	ldr	r3, [r3, #0]
 8007806:	691a      	ldr	r2, [r3, #16]
 8007808:	687b      	ldr	r3, [r7, #4]
 800780a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800780c:	b2d2      	uxtb	r2, r2
 800780e:	701a      	strb	r2, [r3, #0]
 8007810:	687b      	ldr	r3, [r7, #4]
 8007812:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007814:	1c5a      	adds	r2, r3, #1
 8007816:	687b      	ldr	r3, [r7, #4]
 8007818:	625a      	str	r2, [r3, #36]	; 0x24
 800781a:	687b      	ldr	r3, [r7, #4]
 800781c:	681b      	ldr	r3, [r3, #0]
 800781e:	681a      	ldr	r2, [r3, #0]
 8007820:	687b      	ldr	r3, [r7, #4]
 8007822:	681b      	ldr	r3, [r3, #0]
 8007824:	f022 0201 	bic.w	r2, r2, #1
 8007828:	601a      	str	r2, [r3, #0]
 800782a:	6878      	ldr	r0, [r7, #4]
 800782c:	f7fe feec 	bl	8006608 <HAL_I2C_AbortCpltCallback>
 8007830:	e015      	b.n	800785e <I2C_ITError+0x1da>
 8007832:	687b      	ldr	r3, [r7, #4]
 8007834:	681b      	ldr	r3, [r3, #0]
 8007836:	695b      	ldr	r3, [r3, #20]
 8007838:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800783c:	2b40      	cmp	r3, #64	; 0x40
 800783e:	d10b      	bne.n	8007858 <I2C_ITError+0x1d4>
 8007840:	687b      	ldr	r3, [r7, #4]
 8007842:	681b      	ldr	r3, [r3, #0]
 8007844:	691a      	ldr	r2, [r3, #16]
 8007846:	687b      	ldr	r3, [r7, #4]
 8007848:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800784a:	b2d2      	uxtb	r2, r2
 800784c:	701a      	strb	r2, [r3, #0]
 800784e:	687b      	ldr	r3, [r7, #4]
 8007850:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007852:	1c5a      	adds	r2, r3, #1
 8007854:	687b      	ldr	r3, [r7, #4]
 8007856:	625a      	str	r2, [r3, #36]	; 0x24
 8007858:	6878      	ldr	r0, [r7, #4]
 800785a:	f7fe fecb 	bl	80065f4 <HAL_I2C_ErrorCallback>
 800785e:	687b      	ldr	r3, [r7, #4]
 8007860:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007862:	60bb      	str	r3, [r7, #8]
 8007864:	68bb      	ldr	r3, [r7, #8]
 8007866:	f003 0301 	and.w	r3, r3, #1
 800786a:	2b00      	cmp	r3, #0
 800786c:	d10e      	bne.n	800788c <I2C_ITError+0x208>
 800786e:	68bb      	ldr	r3, [r7, #8]
 8007870:	f003 0302 	and.w	r3, r3, #2
 8007874:	2b00      	cmp	r3, #0
 8007876:	d109      	bne.n	800788c <I2C_ITError+0x208>
 8007878:	68bb      	ldr	r3, [r7, #8]
 800787a:	f003 0304 	and.w	r3, r3, #4
 800787e:	2b00      	cmp	r3, #0
 8007880:	d104      	bne.n	800788c <I2C_ITError+0x208>
 8007882:	68bb      	ldr	r3, [r7, #8]
 8007884:	f003 0308 	and.w	r3, r3, #8
 8007888:	2b00      	cmp	r3, #0
 800788a:	d007      	beq.n	800789c <I2C_ITError+0x218>
 800788c:	687b      	ldr	r3, [r7, #4]
 800788e:	681b      	ldr	r3, [r3, #0]
 8007890:	685a      	ldr	r2, [r3, #4]
 8007892:	687b      	ldr	r3, [r7, #4]
 8007894:	681b      	ldr	r3, [r3, #0]
 8007896:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800789a:	605a      	str	r2, [r3, #4]
 800789c:	687b      	ldr	r3, [r7, #4]
 800789e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80078a2:	73fb      	strb	r3, [r7, #15]
 80078a4:	687b      	ldr	r3, [r7, #4]
 80078a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80078a8:	f003 0304 	and.w	r3, r3, #4
 80078ac:	2b04      	cmp	r3, #4
 80078ae:	d113      	bne.n	80078d8 <I2C_ITError+0x254>
 80078b0:	7bfb      	ldrb	r3, [r7, #15]
 80078b2:	2b28      	cmp	r3, #40	; 0x28
 80078b4:	d110      	bne.n	80078d8 <I2C_ITError+0x254>
 80078b6:	687b      	ldr	r3, [r7, #4]
 80078b8:	4a0a      	ldr	r2, [pc, #40]	; (80078e4 <I2C_ITError+0x260>)
 80078ba:	62da      	str	r2, [r3, #44]	; 0x2c
 80078bc:	687b      	ldr	r3, [r7, #4]
 80078be:	2200      	movs	r2, #0
 80078c0:	631a      	str	r2, [r3, #48]	; 0x30
 80078c2:	687b      	ldr	r3, [r7, #4]
 80078c4:	2220      	movs	r2, #32
 80078c6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80078ca:	687b      	ldr	r3, [r7, #4]
 80078cc:	2200      	movs	r2, #0
 80078ce:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80078d2:	6878      	ldr	r0, [r7, #4]
 80078d4:	f7fe fe70 	bl	80065b8 <HAL_I2C_ListenCpltCallback>
 80078d8:	bf00      	nop
 80078da:	3710      	adds	r7, #16
 80078dc:	46bd      	mov	sp, r7
 80078de:	bd80      	pop	{r7, pc}
 80078e0:	08007b89 	.word	0x08007b89
 80078e4:	ffff0000 	.word	0xffff0000

080078e8 <I2C_MasterRequestWrite>:
 80078e8:	b580      	push	{r7, lr}
 80078ea:	b088      	sub	sp, #32
 80078ec:	af02      	add	r7, sp, #8
 80078ee:	60f8      	str	r0, [r7, #12]
 80078f0:	607a      	str	r2, [r7, #4]
 80078f2:	603b      	str	r3, [r7, #0]
 80078f4:	460b      	mov	r3, r1
 80078f6:	817b      	strh	r3, [r7, #10]
 80078f8:	68fb      	ldr	r3, [r7, #12]
 80078fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80078fc:	617b      	str	r3, [r7, #20]
 80078fe:	697b      	ldr	r3, [r7, #20]
 8007900:	2b08      	cmp	r3, #8
 8007902:	d006      	beq.n	8007912 <I2C_MasterRequestWrite+0x2a>
 8007904:	697b      	ldr	r3, [r7, #20]
 8007906:	2b01      	cmp	r3, #1
 8007908:	d003      	beq.n	8007912 <I2C_MasterRequestWrite+0x2a>
 800790a:	697b      	ldr	r3, [r7, #20]
 800790c:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8007910:	d108      	bne.n	8007924 <I2C_MasterRequestWrite+0x3c>
 8007912:	68fb      	ldr	r3, [r7, #12]
 8007914:	681b      	ldr	r3, [r3, #0]
 8007916:	681a      	ldr	r2, [r3, #0]
 8007918:	68fb      	ldr	r3, [r7, #12]
 800791a:	681b      	ldr	r3, [r3, #0]
 800791c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007920:	601a      	str	r2, [r3, #0]
 8007922:	e00b      	b.n	800793c <I2C_MasterRequestWrite+0x54>
 8007924:	68fb      	ldr	r3, [r7, #12]
 8007926:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007928:	2b12      	cmp	r3, #18
 800792a:	d107      	bne.n	800793c <I2C_MasterRequestWrite+0x54>
 800792c:	68fb      	ldr	r3, [r7, #12]
 800792e:	681b      	ldr	r3, [r3, #0]
 8007930:	681a      	ldr	r2, [r3, #0]
 8007932:	68fb      	ldr	r3, [r7, #12]
 8007934:	681b      	ldr	r3, [r3, #0]
 8007936:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800793a:	601a      	str	r2, [r3, #0]
 800793c:	683b      	ldr	r3, [r7, #0]
 800793e:	9300      	str	r3, [sp, #0]
 8007940:	687b      	ldr	r3, [r7, #4]
 8007942:	2200      	movs	r2, #0
 8007944:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8007948:	68f8      	ldr	r0, [r7, #12]
 800794a:	f000 f9c5 	bl	8007cd8 <I2C_WaitOnFlagUntilTimeout>
 800794e:	4603      	mov	r3, r0
 8007950:	2b00      	cmp	r3, #0
 8007952:	d00d      	beq.n	8007970 <I2C_MasterRequestWrite+0x88>
 8007954:	68fb      	ldr	r3, [r7, #12]
 8007956:	681b      	ldr	r3, [r3, #0]
 8007958:	681b      	ldr	r3, [r3, #0]
 800795a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800795e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007962:	d103      	bne.n	800796c <I2C_MasterRequestWrite+0x84>
 8007964:	68fb      	ldr	r3, [r7, #12]
 8007966:	f44f 7200 	mov.w	r2, #512	; 0x200
 800796a:	641a      	str	r2, [r3, #64]	; 0x40
 800796c:	2303      	movs	r3, #3
 800796e:	e035      	b.n	80079dc <I2C_MasterRequestWrite+0xf4>
 8007970:	68fb      	ldr	r3, [r7, #12]
 8007972:	691b      	ldr	r3, [r3, #16]
 8007974:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007978:	d108      	bne.n	800798c <I2C_MasterRequestWrite+0xa4>
 800797a:	897b      	ldrh	r3, [r7, #10]
 800797c:	b2db      	uxtb	r3, r3
 800797e:	461a      	mov	r2, r3
 8007980:	68fb      	ldr	r3, [r7, #12]
 8007982:	681b      	ldr	r3, [r3, #0]
 8007984:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8007988:	611a      	str	r2, [r3, #16]
 800798a:	e01b      	b.n	80079c4 <I2C_MasterRequestWrite+0xdc>
 800798c:	897b      	ldrh	r3, [r7, #10]
 800798e:	11db      	asrs	r3, r3, #7
 8007990:	b2db      	uxtb	r3, r3
 8007992:	f003 0306 	and.w	r3, r3, #6
 8007996:	b2db      	uxtb	r3, r3
 8007998:	f063 030f 	orn	r3, r3, #15
 800799c:	b2da      	uxtb	r2, r3
 800799e:	68fb      	ldr	r3, [r7, #12]
 80079a0:	681b      	ldr	r3, [r3, #0]
 80079a2:	611a      	str	r2, [r3, #16]
 80079a4:	683b      	ldr	r3, [r7, #0]
 80079a6:	687a      	ldr	r2, [r7, #4]
 80079a8:	490e      	ldr	r1, [pc, #56]	; (80079e4 <I2C_MasterRequestWrite+0xfc>)
 80079aa:	68f8      	ldr	r0, [r7, #12]
 80079ac:	f000 f9eb 	bl	8007d86 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80079b0:	4603      	mov	r3, r0
 80079b2:	2b00      	cmp	r3, #0
 80079b4:	d001      	beq.n	80079ba <I2C_MasterRequestWrite+0xd2>
 80079b6:	2301      	movs	r3, #1
 80079b8:	e010      	b.n	80079dc <I2C_MasterRequestWrite+0xf4>
 80079ba:	897b      	ldrh	r3, [r7, #10]
 80079bc:	b2da      	uxtb	r2, r3
 80079be:	68fb      	ldr	r3, [r7, #12]
 80079c0:	681b      	ldr	r3, [r3, #0]
 80079c2:	611a      	str	r2, [r3, #16]
 80079c4:	683b      	ldr	r3, [r7, #0]
 80079c6:	687a      	ldr	r2, [r7, #4]
 80079c8:	4907      	ldr	r1, [pc, #28]	; (80079e8 <I2C_MasterRequestWrite+0x100>)
 80079ca:	68f8      	ldr	r0, [r7, #12]
 80079cc:	f000 f9db 	bl	8007d86 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80079d0:	4603      	mov	r3, r0
 80079d2:	2b00      	cmp	r3, #0
 80079d4:	d001      	beq.n	80079da <I2C_MasterRequestWrite+0xf2>
 80079d6:	2301      	movs	r3, #1
 80079d8:	e000      	b.n	80079dc <I2C_MasterRequestWrite+0xf4>
 80079da:	2300      	movs	r3, #0
 80079dc:	4618      	mov	r0, r3
 80079de:	3718      	adds	r7, #24
 80079e0:	46bd      	mov	sp, r7
 80079e2:	bd80      	pop	{r7, pc}
 80079e4:	00010008 	.word	0x00010008
 80079e8:	00010002 	.word	0x00010002

080079ec <I2C_MasterRequestRead>:
 80079ec:	b580      	push	{r7, lr}
 80079ee:	b088      	sub	sp, #32
 80079f0:	af02      	add	r7, sp, #8
 80079f2:	60f8      	str	r0, [r7, #12]
 80079f4:	607a      	str	r2, [r7, #4]
 80079f6:	603b      	str	r3, [r7, #0]
 80079f8:	460b      	mov	r3, r1
 80079fa:	817b      	strh	r3, [r7, #10]
 80079fc:	68fb      	ldr	r3, [r7, #12]
 80079fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007a00:	617b      	str	r3, [r7, #20]
 8007a02:	68fb      	ldr	r3, [r7, #12]
 8007a04:	681b      	ldr	r3, [r3, #0]
 8007a06:	681a      	ldr	r2, [r3, #0]
 8007a08:	68fb      	ldr	r3, [r7, #12]
 8007a0a:	681b      	ldr	r3, [r3, #0]
 8007a0c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007a10:	601a      	str	r2, [r3, #0]
 8007a12:	697b      	ldr	r3, [r7, #20]
 8007a14:	2b08      	cmp	r3, #8
 8007a16:	d006      	beq.n	8007a26 <I2C_MasterRequestRead+0x3a>
 8007a18:	697b      	ldr	r3, [r7, #20]
 8007a1a:	2b01      	cmp	r3, #1
 8007a1c:	d003      	beq.n	8007a26 <I2C_MasterRequestRead+0x3a>
 8007a1e:	697b      	ldr	r3, [r7, #20]
 8007a20:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8007a24:	d108      	bne.n	8007a38 <I2C_MasterRequestRead+0x4c>
 8007a26:	68fb      	ldr	r3, [r7, #12]
 8007a28:	681b      	ldr	r3, [r3, #0]
 8007a2a:	681a      	ldr	r2, [r3, #0]
 8007a2c:	68fb      	ldr	r3, [r7, #12]
 8007a2e:	681b      	ldr	r3, [r3, #0]
 8007a30:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007a34:	601a      	str	r2, [r3, #0]
 8007a36:	e00b      	b.n	8007a50 <I2C_MasterRequestRead+0x64>
 8007a38:	68fb      	ldr	r3, [r7, #12]
 8007a3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007a3c:	2b11      	cmp	r3, #17
 8007a3e:	d107      	bne.n	8007a50 <I2C_MasterRequestRead+0x64>
 8007a40:	68fb      	ldr	r3, [r7, #12]
 8007a42:	681b      	ldr	r3, [r3, #0]
 8007a44:	681a      	ldr	r2, [r3, #0]
 8007a46:	68fb      	ldr	r3, [r7, #12]
 8007a48:	681b      	ldr	r3, [r3, #0]
 8007a4a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007a4e:	601a      	str	r2, [r3, #0]
 8007a50:	683b      	ldr	r3, [r7, #0]
 8007a52:	9300      	str	r3, [sp, #0]
 8007a54:	687b      	ldr	r3, [r7, #4]
 8007a56:	2200      	movs	r2, #0
 8007a58:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8007a5c:	68f8      	ldr	r0, [r7, #12]
 8007a5e:	f000 f93b 	bl	8007cd8 <I2C_WaitOnFlagUntilTimeout>
 8007a62:	4603      	mov	r3, r0
 8007a64:	2b00      	cmp	r3, #0
 8007a66:	d00d      	beq.n	8007a84 <I2C_MasterRequestRead+0x98>
 8007a68:	68fb      	ldr	r3, [r7, #12]
 8007a6a:	681b      	ldr	r3, [r3, #0]
 8007a6c:	681b      	ldr	r3, [r3, #0]
 8007a6e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007a72:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007a76:	d103      	bne.n	8007a80 <I2C_MasterRequestRead+0x94>
 8007a78:	68fb      	ldr	r3, [r7, #12]
 8007a7a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007a7e:	641a      	str	r2, [r3, #64]	; 0x40
 8007a80:	2303      	movs	r3, #3
 8007a82:	e079      	b.n	8007b78 <I2C_MasterRequestRead+0x18c>
 8007a84:	68fb      	ldr	r3, [r7, #12]
 8007a86:	691b      	ldr	r3, [r3, #16]
 8007a88:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007a8c:	d108      	bne.n	8007aa0 <I2C_MasterRequestRead+0xb4>
 8007a8e:	897b      	ldrh	r3, [r7, #10]
 8007a90:	b2db      	uxtb	r3, r3
 8007a92:	f043 0301 	orr.w	r3, r3, #1
 8007a96:	b2da      	uxtb	r2, r3
 8007a98:	68fb      	ldr	r3, [r7, #12]
 8007a9a:	681b      	ldr	r3, [r3, #0]
 8007a9c:	611a      	str	r2, [r3, #16]
 8007a9e:	e05f      	b.n	8007b60 <I2C_MasterRequestRead+0x174>
 8007aa0:	897b      	ldrh	r3, [r7, #10]
 8007aa2:	11db      	asrs	r3, r3, #7
 8007aa4:	b2db      	uxtb	r3, r3
 8007aa6:	f003 0306 	and.w	r3, r3, #6
 8007aaa:	b2db      	uxtb	r3, r3
 8007aac:	f063 030f 	orn	r3, r3, #15
 8007ab0:	b2da      	uxtb	r2, r3
 8007ab2:	68fb      	ldr	r3, [r7, #12]
 8007ab4:	681b      	ldr	r3, [r3, #0]
 8007ab6:	611a      	str	r2, [r3, #16]
 8007ab8:	683b      	ldr	r3, [r7, #0]
 8007aba:	687a      	ldr	r2, [r7, #4]
 8007abc:	4930      	ldr	r1, [pc, #192]	; (8007b80 <I2C_MasterRequestRead+0x194>)
 8007abe:	68f8      	ldr	r0, [r7, #12]
 8007ac0:	f000 f961 	bl	8007d86 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007ac4:	4603      	mov	r3, r0
 8007ac6:	2b00      	cmp	r3, #0
 8007ac8:	d001      	beq.n	8007ace <I2C_MasterRequestRead+0xe2>
 8007aca:	2301      	movs	r3, #1
 8007acc:	e054      	b.n	8007b78 <I2C_MasterRequestRead+0x18c>
 8007ace:	897b      	ldrh	r3, [r7, #10]
 8007ad0:	b2da      	uxtb	r2, r3
 8007ad2:	68fb      	ldr	r3, [r7, #12]
 8007ad4:	681b      	ldr	r3, [r3, #0]
 8007ad6:	611a      	str	r2, [r3, #16]
 8007ad8:	683b      	ldr	r3, [r7, #0]
 8007ada:	687a      	ldr	r2, [r7, #4]
 8007adc:	4929      	ldr	r1, [pc, #164]	; (8007b84 <I2C_MasterRequestRead+0x198>)
 8007ade:	68f8      	ldr	r0, [r7, #12]
 8007ae0:	f000 f951 	bl	8007d86 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007ae4:	4603      	mov	r3, r0
 8007ae6:	2b00      	cmp	r3, #0
 8007ae8:	d001      	beq.n	8007aee <I2C_MasterRequestRead+0x102>
 8007aea:	2301      	movs	r3, #1
 8007aec:	e044      	b.n	8007b78 <I2C_MasterRequestRead+0x18c>
 8007aee:	2300      	movs	r3, #0
 8007af0:	613b      	str	r3, [r7, #16]
 8007af2:	68fb      	ldr	r3, [r7, #12]
 8007af4:	681b      	ldr	r3, [r3, #0]
 8007af6:	695b      	ldr	r3, [r3, #20]
 8007af8:	613b      	str	r3, [r7, #16]
 8007afa:	68fb      	ldr	r3, [r7, #12]
 8007afc:	681b      	ldr	r3, [r3, #0]
 8007afe:	699b      	ldr	r3, [r3, #24]
 8007b00:	613b      	str	r3, [r7, #16]
 8007b02:	693b      	ldr	r3, [r7, #16]
 8007b04:	68fb      	ldr	r3, [r7, #12]
 8007b06:	681b      	ldr	r3, [r3, #0]
 8007b08:	681a      	ldr	r2, [r3, #0]
 8007b0a:	68fb      	ldr	r3, [r7, #12]
 8007b0c:	681b      	ldr	r3, [r3, #0]
 8007b0e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007b12:	601a      	str	r2, [r3, #0]
 8007b14:	683b      	ldr	r3, [r7, #0]
 8007b16:	9300      	str	r3, [sp, #0]
 8007b18:	687b      	ldr	r3, [r7, #4]
 8007b1a:	2200      	movs	r2, #0
 8007b1c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8007b20:	68f8      	ldr	r0, [r7, #12]
 8007b22:	f000 f8d9 	bl	8007cd8 <I2C_WaitOnFlagUntilTimeout>
 8007b26:	4603      	mov	r3, r0
 8007b28:	2b00      	cmp	r3, #0
 8007b2a:	d00d      	beq.n	8007b48 <I2C_MasterRequestRead+0x15c>
 8007b2c:	68fb      	ldr	r3, [r7, #12]
 8007b2e:	681b      	ldr	r3, [r3, #0]
 8007b30:	681b      	ldr	r3, [r3, #0]
 8007b32:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007b36:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007b3a:	d103      	bne.n	8007b44 <I2C_MasterRequestRead+0x158>
 8007b3c:	68fb      	ldr	r3, [r7, #12]
 8007b3e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007b42:	641a      	str	r2, [r3, #64]	; 0x40
 8007b44:	2303      	movs	r3, #3
 8007b46:	e017      	b.n	8007b78 <I2C_MasterRequestRead+0x18c>
 8007b48:	897b      	ldrh	r3, [r7, #10]
 8007b4a:	11db      	asrs	r3, r3, #7
 8007b4c:	b2db      	uxtb	r3, r3
 8007b4e:	f003 0306 	and.w	r3, r3, #6
 8007b52:	b2db      	uxtb	r3, r3
 8007b54:	f063 030e 	orn	r3, r3, #14
 8007b58:	b2da      	uxtb	r2, r3
 8007b5a:	68fb      	ldr	r3, [r7, #12]
 8007b5c:	681b      	ldr	r3, [r3, #0]
 8007b5e:	611a      	str	r2, [r3, #16]
 8007b60:	683b      	ldr	r3, [r7, #0]
 8007b62:	687a      	ldr	r2, [r7, #4]
 8007b64:	4907      	ldr	r1, [pc, #28]	; (8007b84 <I2C_MasterRequestRead+0x198>)
 8007b66:	68f8      	ldr	r0, [r7, #12]
 8007b68:	f000 f90d 	bl	8007d86 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007b6c:	4603      	mov	r3, r0
 8007b6e:	2b00      	cmp	r3, #0
 8007b70:	d001      	beq.n	8007b76 <I2C_MasterRequestRead+0x18a>
 8007b72:	2301      	movs	r3, #1
 8007b74:	e000      	b.n	8007b78 <I2C_MasterRequestRead+0x18c>
 8007b76:	2300      	movs	r3, #0
 8007b78:	4618      	mov	r0, r3
 8007b7a:	3718      	adds	r7, #24
 8007b7c:	46bd      	mov	sp, r7
 8007b7e:	bd80      	pop	{r7, pc}
 8007b80:	00010008 	.word	0x00010008
 8007b84:	00010002 	.word	0x00010002

08007b88 <I2C_DMAAbort>:
 8007b88:	b580      	push	{r7, lr}
 8007b8a:	b086      	sub	sp, #24
 8007b8c:	af00      	add	r7, sp, #0
 8007b8e:	6078      	str	r0, [r7, #4]
 8007b90:	2300      	movs	r3, #0
 8007b92:	60fb      	str	r3, [r7, #12]
 8007b94:	687b      	ldr	r3, [r7, #4]
 8007b96:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007b98:	617b      	str	r3, [r7, #20]
 8007b9a:	697b      	ldr	r3, [r7, #20]
 8007b9c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007ba0:	74fb      	strb	r3, [r7, #19]
 8007ba2:	4b4b      	ldr	r3, [pc, #300]	; (8007cd0 <I2C_DMAAbort+0x148>)
 8007ba4:	681b      	ldr	r3, [r3, #0]
 8007ba6:	08db      	lsrs	r3, r3, #3
 8007ba8:	4a4a      	ldr	r2, [pc, #296]	; (8007cd4 <I2C_DMAAbort+0x14c>)
 8007baa:	fba2 2303 	umull	r2, r3, r2, r3
 8007bae:	0a1a      	lsrs	r2, r3, #8
 8007bb0:	4613      	mov	r3, r2
 8007bb2:	009b      	lsls	r3, r3, #2
 8007bb4:	4413      	add	r3, r2
 8007bb6:	00da      	lsls	r2, r3, #3
 8007bb8:	1ad3      	subs	r3, r2, r3
 8007bba:	60fb      	str	r3, [r7, #12]
 8007bbc:	68fb      	ldr	r3, [r7, #12]
 8007bbe:	2b00      	cmp	r3, #0
 8007bc0:	d106      	bne.n	8007bd0 <I2C_DMAAbort+0x48>
 8007bc2:	697b      	ldr	r3, [r7, #20]
 8007bc4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007bc6:	f043 0220 	orr.w	r2, r3, #32
 8007bca:	697b      	ldr	r3, [r7, #20]
 8007bcc:	641a      	str	r2, [r3, #64]	; 0x40
 8007bce:	e00a      	b.n	8007be6 <I2C_DMAAbort+0x5e>
 8007bd0:	68fb      	ldr	r3, [r7, #12]
 8007bd2:	3b01      	subs	r3, #1
 8007bd4:	60fb      	str	r3, [r7, #12]
 8007bd6:	697b      	ldr	r3, [r7, #20]
 8007bd8:	681b      	ldr	r3, [r3, #0]
 8007bda:	681b      	ldr	r3, [r3, #0]
 8007bdc:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8007be0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007be4:	d0ea      	beq.n	8007bbc <I2C_DMAAbort+0x34>
 8007be6:	697b      	ldr	r3, [r7, #20]
 8007be8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007bea:	2b00      	cmp	r3, #0
 8007bec:	d003      	beq.n	8007bf6 <I2C_DMAAbort+0x6e>
 8007bee:	697b      	ldr	r3, [r7, #20]
 8007bf0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007bf2:	2200      	movs	r2, #0
 8007bf4:	63da      	str	r2, [r3, #60]	; 0x3c
 8007bf6:	697b      	ldr	r3, [r7, #20]
 8007bf8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007bfa:	2b00      	cmp	r3, #0
 8007bfc:	d003      	beq.n	8007c06 <I2C_DMAAbort+0x7e>
 8007bfe:	697b      	ldr	r3, [r7, #20]
 8007c00:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c02:	2200      	movs	r2, #0
 8007c04:	63da      	str	r2, [r3, #60]	; 0x3c
 8007c06:	697b      	ldr	r3, [r7, #20]
 8007c08:	681b      	ldr	r3, [r3, #0]
 8007c0a:	681a      	ldr	r2, [r3, #0]
 8007c0c:	697b      	ldr	r3, [r7, #20]
 8007c0e:	681b      	ldr	r3, [r3, #0]
 8007c10:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007c14:	601a      	str	r2, [r3, #0]
 8007c16:	697b      	ldr	r3, [r7, #20]
 8007c18:	2200      	movs	r2, #0
 8007c1a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007c1c:	697b      	ldr	r3, [r7, #20]
 8007c1e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007c20:	2b00      	cmp	r3, #0
 8007c22:	d003      	beq.n	8007c2c <I2C_DMAAbort+0xa4>
 8007c24:	697b      	ldr	r3, [r7, #20]
 8007c26:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007c28:	2200      	movs	r2, #0
 8007c2a:	651a      	str	r2, [r3, #80]	; 0x50
 8007c2c:	697b      	ldr	r3, [r7, #20]
 8007c2e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c30:	2b00      	cmp	r3, #0
 8007c32:	d003      	beq.n	8007c3c <I2C_DMAAbort+0xb4>
 8007c34:	697b      	ldr	r3, [r7, #20]
 8007c36:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c38:	2200      	movs	r2, #0
 8007c3a:	651a      	str	r2, [r3, #80]	; 0x50
 8007c3c:	697b      	ldr	r3, [r7, #20]
 8007c3e:	681b      	ldr	r3, [r3, #0]
 8007c40:	681a      	ldr	r2, [r3, #0]
 8007c42:	697b      	ldr	r3, [r7, #20]
 8007c44:	681b      	ldr	r3, [r3, #0]
 8007c46:	f022 0201 	bic.w	r2, r2, #1
 8007c4a:	601a      	str	r2, [r3, #0]
 8007c4c:	697b      	ldr	r3, [r7, #20]
 8007c4e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007c52:	b2db      	uxtb	r3, r3
 8007c54:	2b60      	cmp	r3, #96	; 0x60
 8007c56:	d10e      	bne.n	8007c76 <I2C_DMAAbort+0xee>
 8007c58:	697b      	ldr	r3, [r7, #20]
 8007c5a:	2220      	movs	r2, #32
 8007c5c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007c60:	697b      	ldr	r3, [r7, #20]
 8007c62:	2200      	movs	r2, #0
 8007c64:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007c68:	697b      	ldr	r3, [r7, #20]
 8007c6a:	2200      	movs	r2, #0
 8007c6c:	641a      	str	r2, [r3, #64]	; 0x40
 8007c6e:	6978      	ldr	r0, [r7, #20]
 8007c70:	f7fe fcca 	bl	8006608 <HAL_I2C_AbortCpltCallback>
 8007c74:	e027      	b.n	8007cc6 <I2C_DMAAbort+0x13e>
 8007c76:	7cfb      	ldrb	r3, [r7, #19]
 8007c78:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8007c7c:	2b28      	cmp	r3, #40	; 0x28
 8007c7e:	d117      	bne.n	8007cb0 <I2C_DMAAbort+0x128>
 8007c80:	697b      	ldr	r3, [r7, #20]
 8007c82:	681b      	ldr	r3, [r3, #0]
 8007c84:	681a      	ldr	r2, [r3, #0]
 8007c86:	697b      	ldr	r3, [r7, #20]
 8007c88:	681b      	ldr	r3, [r3, #0]
 8007c8a:	f042 0201 	orr.w	r2, r2, #1
 8007c8e:	601a      	str	r2, [r3, #0]
 8007c90:	697b      	ldr	r3, [r7, #20]
 8007c92:	681b      	ldr	r3, [r3, #0]
 8007c94:	681a      	ldr	r2, [r3, #0]
 8007c96:	697b      	ldr	r3, [r7, #20]
 8007c98:	681b      	ldr	r3, [r3, #0]
 8007c9a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007c9e:	601a      	str	r2, [r3, #0]
 8007ca0:	697b      	ldr	r3, [r7, #20]
 8007ca2:	2200      	movs	r2, #0
 8007ca4:	631a      	str	r2, [r3, #48]	; 0x30
 8007ca6:	697b      	ldr	r3, [r7, #20]
 8007ca8:	2228      	movs	r2, #40	; 0x28
 8007caa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007cae:	e007      	b.n	8007cc0 <I2C_DMAAbort+0x138>
 8007cb0:	697b      	ldr	r3, [r7, #20]
 8007cb2:	2220      	movs	r2, #32
 8007cb4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007cb8:	697b      	ldr	r3, [r7, #20]
 8007cba:	2200      	movs	r2, #0
 8007cbc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007cc0:	6978      	ldr	r0, [r7, #20]
 8007cc2:	f7fe fc97 	bl	80065f4 <HAL_I2C_ErrorCallback>
 8007cc6:	bf00      	nop
 8007cc8:	3718      	adds	r7, #24
 8007cca:	46bd      	mov	sp, r7
 8007ccc:	bd80      	pop	{r7, pc}
 8007cce:	bf00      	nop
 8007cd0:	20000134 	.word	0x20000134
 8007cd4:	14f8b589 	.word	0x14f8b589

08007cd8 <I2C_WaitOnFlagUntilTimeout>:
 8007cd8:	b580      	push	{r7, lr}
 8007cda:	b084      	sub	sp, #16
 8007cdc:	af00      	add	r7, sp, #0
 8007cde:	60f8      	str	r0, [r7, #12]
 8007ce0:	60b9      	str	r1, [r7, #8]
 8007ce2:	603b      	str	r3, [r7, #0]
 8007ce4:	4613      	mov	r3, r2
 8007ce6:	71fb      	strb	r3, [r7, #7]
 8007ce8:	e025      	b.n	8007d36 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8007cea:	683b      	ldr	r3, [r7, #0]
 8007cec:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007cf0:	d021      	beq.n	8007d36 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8007cf2:	f7fc feaf 	bl	8004a54 <HAL_GetTick>
 8007cf6:	4602      	mov	r2, r0
 8007cf8:	69bb      	ldr	r3, [r7, #24]
 8007cfa:	1ad3      	subs	r3, r2, r3
 8007cfc:	683a      	ldr	r2, [r7, #0]
 8007cfe:	429a      	cmp	r2, r3
 8007d00:	d302      	bcc.n	8007d08 <I2C_WaitOnFlagUntilTimeout+0x30>
 8007d02:	683b      	ldr	r3, [r7, #0]
 8007d04:	2b00      	cmp	r3, #0
 8007d06:	d116      	bne.n	8007d36 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8007d08:	68fb      	ldr	r3, [r7, #12]
 8007d0a:	2200      	movs	r2, #0
 8007d0c:	631a      	str	r2, [r3, #48]	; 0x30
 8007d0e:	68fb      	ldr	r3, [r7, #12]
 8007d10:	2220      	movs	r2, #32
 8007d12:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007d16:	68fb      	ldr	r3, [r7, #12]
 8007d18:	2200      	movs	r2, #0
 8007d1a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007d1e:	68fb      	ldr	r3, [r7, #12]
 8007d20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007d22:	f043 0220 	orr.w	r2, r3, #32
 8007d26:	68fb      	ldr	r3, [r7, #12]
 8007d28:	641a      	str	r2, [r3, #64]	; 0x40
 8007d2a:	68fb      	ldr	r3, [r7, #12]
 8007d2c:	2200      	movs	r2, #0
 8007d2e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007d32:	2301      	movs	r3, #1
 8007d34:	e023      	b.n	8007d7e <I2C_WaitOnFlagUntilTimeout+0xa6>
 8007d36:	68bb      	ldr	r3, [r7, #8]
 8007d38:	0c1b      	lsrs	r3, r3, #16
 8007d3a:	b2db      	uxtb	r3, r3
 8007d3c:	2b01      	cmp	r3, #1
 8007d3e:	d10d      	bne.n	8007d5c <I2C_WaitOnFlagUntilTimeout+0x84>
 8007d40:	68fb      	ldr	r3, [r7, #12]
 8007d42:	681b      	ldr	r3, [r3, #0]
 8007d44:	695b      	ldr	r3, [r3, #20]
 8007d46:	43da      	mvns	r2, r3
 8007d48:	68bb      	ldr	r3, [r7, #8]
 8007d4a:	4013      	ands	r3, r2
 8007d4c:	b29b      	uxth	r3, r3
 8007d4e:	2b00      	cmp	r3, #0
 8007d50:	bf0c      	ite	eq
 8007d52:	2301      	moveq	r3, #1
 8007d54:	2300      	movne	r3, #0
 8007d56:	b2db      	uxtb	r3, r3
 8007d58:	461a      	mov	r2, r3
 8007d5a:	e00c      	b.n	8007d76 <I2C_WaitOnFlagUntilTimeout+0x9e>
 8007d5c:	68fb      	ldr	r3, [r7, #12]
 8007d5e:	681b      	ldr	r3, [r3, #0]
 8007d60:	699b      	ldr	r3, [r3, #24]
 8007d62:	43da      	mvns	r2, r3
 8007d64:	68bb      	ldr	r3, [r7, #8]
 8007d66:	4013      	ands	r3, r2
 8007d68:	b29b      	uxth	r3, r3
 8007d6a:	2b00      	cmp	r3, #0
 8007d6c:	bf0c      	ite	eq
 8007d6e:	2301      	moveq	r3, #1
 8007d70:	2300      	movne	r3, #0
 8007d72:	b2db      	uxtb	r3, r3
 8007d74:	461a      	mov	r2, r3
 8007d76:	79fb      	ldrb	r3, [r7, #7]
 8007d78:	429a      	cmp	r2, r3
 8007d7a:	d0b6      	beq.n	8007cea <I2C_WaitOnFlagUntilTimeout+0x12>
 8007d7c:	2300      	movs	r3, #0
 8007d7e:	4618      	mov	r0, r3
 8007d80:	3710      	adds	r7, #16
 8007d82:	46bd      	mov	sp, r7
 8007d84:	bd80      	pop	{r7, pc}

08007d86 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8007d86:	b580      	push	{r7, lr}
 8007d88:	b084      	sub	sp, #16
 8007d8a:	af00      	add	r7, sp, #0
 8007d8c:	60f8      	str	r0, [r7, #12]
 8007d8e:	60b9      	str	r1, [r7, #8]
 8007d90:	607a      	str	r2, [r7, #4]
 8007d92:	603b      	str	r3, [r7, #0]
 8007d94:	e051      	b.n	8007e3a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8007d96:	68fb      	ldr	r3, [r7, #12]
 8007d98:	681b      	ldr	r3, [r3, #0]
 8007d9a:	695b      	ldr	r3, [r3, #20]
 8007d9c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007da0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007da4:	d123      	bne.n	8007dee <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8007da6:	68fb      	ldr	r3, [r7, #12]
 8007da8:	681b      	ldr	r3, [r3, #0]
 8007daa:	681a      	ldr	r2, [r3, #0]
 8007dac:	68fb      	ldr	r3, [r7, #12]
 8007dae:	681b      	ldr	r3, [r3, #0]
 8007db0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007db4:	601a      	str	r2, [r3, #0]
 8007db6:	68fb      	ldr	r3, [r7, #12]
 8007db8:	681b      	ldr	r3, [r3, #0]
 8007dba:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8007dbe:	615a      	str	r2, [r3, #20]
 8007dc0:	68fb      	ldr	r3, [r7, #12]
 8007dc2:	2200      	movs	r2, #0
 8007dc4:	631a      	str	r2, [r3, #48]	; 0x30
 8007dc6:	68fb      	ldr	r3, [r7, #12]
 8007dc8:	2220      	movs	r2, #32
 8007dca:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007dce:	68fb      	ldr	r3, [r7, #12]
 8007dd0:	2200      	movs	r2, #0
 8007dd2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007dd6:	68fb      	ldr	r3, [r7, #12]
 8007dd8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007dda:	f043 0204 	orr.w	r2, r3, #4
 8007dde:	68fb      	ldr	r3, [r7, #12]
 8007de0:	641a      	str	r2, [r3, #64]	; 0x40
 8007de2:	68fb      	ldr	r3, [r7, #12]
 8007de4:	2200      	movs	r2, #0
 8007de6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007dea:	2301      	movs	r3, #1
 8007dec:	e046      	b.n	8007e7c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8007dee:	687b      	ldr	r3, [r7, #4]
 8007df0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007df4:	d021      	beq.n	8007e3a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8007df6:	f7fc fe2d 	bl	8004a54 <HAL_GetTick>
 8007dfa:	4602      	mov	r2, r0
 8007dfc:	683b      	ldr	r3, [r7, #0]
 8007dfe:	1ad3      	subs	r3, r2, r3
 8007e00:	687a      	ldr	r2, [r7, #4]
 8007e02:	429a      	cmp	r2, r3
 8007e04:	d302      	bcc.n	8007e0c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8007e06:	687b      	ldr	r3, [r7, #4]
 8007e08:	2b00      	cmp	r3, #0
 8007e0a:	d116      	bne.n	8007e3a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8007e0c:	68fb      	ldr	r3, [r7, #12]
 8007e0e:	2200      	movs	r2, #0
 8007e10:	631a      	str	r2, [r3, #48]	; 0x30
 8007e12:	68fb      	ldr	r3, [r7, #12]
 8007e14:	2220      	movs	r2, #32
 8007e16:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007e1a:	68fb      	ldr	r3, [r7, #12]
 8007e1c:	2200      	movs	r2, #0
 8007e1e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007e22:	68fb      	ldr	r3, [r7, #12]
 8007e24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007e26:	f043 0220 	orr.w	r2, r3, #32
 8007e2a:	68fb      	ldr	r3, [r7, #12]
 8007e2c:	641a      	str	r2, [r3, #64]	; 0x40
 8007e2e:	68fb      	ldr	r3, [r7, #12]
 8007e30:	2200      	movs	r2, #0
 8007e32:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007e36:	2301      	movs	r3, #1
 8007e38:	e020      	b.n	8007e7c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8007e3a:	68bb      	ldr	r3, [r7, #8]
 8007e3c:	0c1b      	lsrs	r3, r3, #16
 8007e3e:	b2db      	uxtb	r3, r3
 8007e40:	2b01      	cmp	r3, #1
 8007e42:	d10c      	bne.n	8007e5e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8007e44:	68fb      	ldr	r3, [r7, #12]
 8007e46:	681b      	ldr	r3, [r3, #0]
 8007e48:	695b      	ldr	r3, [r3, #20]
 8007e4a:	43da      	mvns	r2, r3
 8007e4c:	68bb      	ldr	r3, [r7, #8]
 8007e4e:	4013      	ands	r3, r2
 8007e50:	b29b      	uxth	r3, r3
 8007e52:	2b00      	cmp	r3, #0
 8007e54:	bf14      	ite	ne
 8007e56:	2301      	movne	r3, #1
 8007e58:	2300      	moveq	r3, #0
 8007e5a:	b2db      	uxtb	r3, r3
 8007e5c:	e00b      	b.n	8007e76 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8007e5e:	68fb      	ldr	r3, [r7, #12]
 8007e60:	681b      	ldr	r3, [r3, #0]
 8007e62:	699b      	ldr	r3, [r3, #24]
 8007e64:	43da      	mvns	r2, r3
 8007e66:	68bb      	ldr	r3, [r7, #8]
 8007e68:	4013      	ands	r3, r2
 8007e6a:	b29b      	uxth	r3, r3
 8007e6c:	2b00      	cmp	r3, #0
 8007e6e:	bf14      	ite	ne
 8007e70:	2301      	movne	r3, #1
 8007e72:	2300      	moveq	r3, #0
 8007e74:	b2db      	uxtb	r3, r3
 8007e76:	2b00      	cmp	r3, #0
 8007e78:	d18d      	bne.n	8007d96 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8007e7a:	2300      	movs	r3, #0
 8007e7c:	4618      	mov	r0, r3
 8007e7e:	3710      	adds	r7, #16
 8007e80:	46bd      	mov	sp, r7
 8007e82:	bd80      	pop	{r7, pc}

08007e84 <I2C_WaitOnTXEFlagUntilTimeout>:
 8007e84:	b580      	push	{r7, lr}
 8007e86:	b084      	sub	sp, #16
 8007e88:	af00      	add	r7, sp, #0
 8007e8a:	60f8      	str	r0, [r7, #12]
 8007e8c:	60b9      	str	r1, [r7, #8]
 8007e8e:	607a      	str	r2, [r7, #4]
 8007e90:	e02d      	b.n	8007eee <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8007e92:	68f8      	ldr	r0, [r7, #12]
 8007e94:	f000 f900 	bl	8008098 <I2C_IsAcknowledgeFailed>
 8007e98:	4603      	mov	r3, r0
 8007e9a:	2b00      	cmp	r3, #0
 8007e9c:	d001      	beq.n	8007ea2 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8007e9e:	2301      	movs	r3, #1
 8007ea0:	e02d      	b.n	8007efe <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8007ea2:	68bb      	ldr	r3, [r7, #8]
 8007ea4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007ea8:	d021      	beq.n	8007eee <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8007eaa:	f7fc fdd3 	bl	8004a54 <HAL_GetTick>
 8007eae:	4602      	mov	r2, r0
 8007eb0:	687b      	ldr	r3, [r7, #4]
 8007eb2:	1ad3      	subs	r3, r2, r3
 8007eb4:	68ba      	ldr	r2, [r7, #8]
 8007eb6:	429a      	cmp	r2, r3
 8007eb8:	d302      	bcc.n	8007ec0 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8007eba:	68bb      	ldr	r3, [r7, #8]
 8007ebc:	2b00      	cmp	r3, #0
 8007ebe:	d116      	bne.n	8007eee <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8007ec0:	68fb      	ldr	r3, [r7, #12]
 8007ec2:	2200      	movs	r2, #0
 8007ec4:	631a      	str	r2, [r3, #48]	; 0x30
 8007ec6:	68fb      	ldr	r3, [r7, #12]
 8007ec8:	2220      	movs	r2, #32
 8007eca:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007ece:	68fb      	ldr	r3, [r7, #12]
 8007ed0:	2200      	movs	r2, #0
 8007ed2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007ed6:	68fb      	ldr	r3, [r7, #12]
 8007ed8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007eda:	f043 0220 	orr.w	r2, r3, #32
 8007ede:	68fb      	ldr	r3, [r7, #12]
 8007ee0:	641a      	str	r2, [r3, #64]	; 0x40
 8007ee2:	68fb      	ldr	r3, [r7, #12]
 8007ee4:	2200      	movs	r2, #0
 8007ee6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007eea:	2301      	movs	r3, #1
 8007eec:	e007      	b.n	8007efe <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8007eee:	68fb      	ldr	r3, [r7, #12]
 8007ef0:	681b      	ldr	r3, [r3, #0]
 8007ef2:	695b      	ldr	r3, [r3, #20]
 8007ef4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007ef8:	2b80      	cmp	r3, #128	; 0x80
 8007efa:	d1ca      	bne.n	8007e92 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8007efc:	2300      	movs	r3, #0
 8007efe:	4618      	mov	r0, r3
 8007f00:	3710      	adds	r7, #16
 8007f02:	46bd      	mov	sp, r7
 8007f04:	bd80      	pop	{r7, pc}

08007f06 <I2C_WaitOnBTFFlagUntilTimeout>:
 8007f06:	b580      	push	{r7, lr}
 8007f08:	b084      	sub	sp, #16
 8007f0a:	af00      	add	r7, sp, #0
 8007f0c:	60f8      	str	r0, [r7, #12]
 8007f0e:	60b9      	str	r1, [r7, #8]
 8007f10:	607a      	str	r2, [r7, #4]
 8007f12:	e02d      	b.n	8007f70 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8007f14:	68f8      	ldr	r0, [r7, #12]
 8007f16:	f000 f8bf 	bl	8008098 <I2C_IsAcknowledgeFailed>
 8007f1a:	4603      	mov	r3, r0
 8007f1c:	2b00      	cmp	r3, #0
 8007f1e:	d001      	beq.n	8007f24 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8007f20:	2301      	movs	r3, #1
 8007f22:	e02d      	b.n	8007f80 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8007f24:	68bb      	ldr	r3, [r7, #8]
 8007f26:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007f2a:	d021      	beq.n	8007f70 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8007f2c:	f7fc fd92 	bl	8004a54 <HAL_GetTick>
 8007f30:	4602      	mov	r2, r0
 8007f32:	687b      	ldr	r3, [r7, #4]
 8007f34:	1ad3      	subs	r3, r2, r3
 8007f36:	68ba      	ldr	r2, [r7, #8]
 8007f38:	429a      	cmp	r2, r3
 8007f3a:	d302      	bcc.n	8007f42 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8007f3c:	68bb      	ldr	r3, [r7, #8]
 8007f3e:	2b00      	cmp	r3, #0
 8007f40:	d116      	bne.n	8007f70 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8007f42:	68fb      	ldr	r3, [r7, #12]
 8007f44:	2200      	movs	r2, #0
 8007f46:	631a      	str	r2, [r3, #48]	; 0x30
 8007f48:	68fb      	ldr	r3, [r7, #12]
 8007f4a:	2220      	movs	r2, #32
 8007f4c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007f50:	68fb      	ldr	r3, [r7, #12]
 8007f52:	2200      	movs	r2, #0
 8007f54:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007f58:	68fb      	ldr	r3, [r7, #12]
 8007f5a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007f5c:	f043 0220 	orr.w	r2, r3, #32
 8007f60:	68fb      	ldr	r3, [r7, #12]
 8007f62:	641a      	str	r2, [r3, #64]	; 0x40
 8007f64:	68fb      	ldr	r3, [r7, #12]
 8007f66:	2200      	movs	r2, #0
 8007f68:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007f6c:	2301      	movs	r3, #1
 8007f6e:	e007      	b.n	8007f80 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8007f70:	68fb      	ldr	r3, [r7, #12]
 8007f72:	681b      	ldr	r3, [r3, #0]
 8007f74:	695b      	ldr	r3, [r3, #20]
 8007f76:	f003 0304 	and.w	r3, r3, #4
 8007f7a:	2b04      	cmp	r3, #4
 8007f7c:	d1ca      	bne.n	8007f14 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8007f7e:	2300      	movs	r3, #0
 8007f80:	4618      	mov	r0, r3
 8007f82:	3710      	adds	r7, #16
 8007f84:	46bd      	mov	sp, r7
 8007f86:	bd80      	pop	{r7, pc}

08007f88 <I2C_WaitOnSTOPRequestThroughIT>:
 8007f88:	b480      	push	{r7}
 8007f8a:	b085      	sub	sp, #20
 8007f8c:	af00      	add	r7, sp, #0
 8007f8e:	6078      	str	r0, [r7, #4]
 8007f90:	2300      	movs	r3, #0
 8007f92:	60fb      	str	r3, [r7, #12]
 8007f94:	4b13      	ldr	r3, [pc, #76]	; (8007fe4 <I2C_WaitOnSTOPRequestThroughIT+0x5c>)
 8007f96:	681b      	ldr	r3, [r3, #0]
 8007f98:	08db      	lsrs	r3, r3, #3
 8007f9a:	4a13      	ldr	r2, [pc, #76]	; (8007fe8 <I2C_WaitOnSTOPRequestThroughIT+0x60>)
 8007f9c:	fba2 2303 	umull	r2, r3, r2, r3
 8007fa0:	0a1a      	lsrs	r2, r3, #8
 8007fa2:	4613      	mov	r3, r2
 8007fa4:	009b      	lsls	r3, r3, #2
 8007fa6:	4413      	add	r3, r2
 8007fa8:	60fb      	str	r3, [r7, #12]
 8007faa:	68fb      	ldr	r3, [r7, #12]
 8007fac:	3b01      	subs	r3, #1
 8007fae:	60fb      	str	r3, [r7, #12]
 8007fb0:	68fb      	ldr	r3, [r7, #12]
 8007fb2:	2b00      	cmp	r3, #0
 8007fb4:	d107      	bne.n	8007fc6 <I2C_WaitOnSTOPRequestThroughIT+0x3e>
 8007fb6:	687b      	ldr	r3, [r7, #4]
 8007fb8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007fba:	f043 0220 	orr.w	r2, r3, #32
 8007fbe:	687b      	ldr	r3, [r7, #4]
 8007fc0:	641a      	str	r2, [r3, #64]	; 0x40
 8007fc2:	2301      	movs	r3, #1
 8007fc4:	e008      	b.n	8007fd8 <I2C_WaitOnSTOPRequestThroughIT+0x50>
 8007fc6:	687b      	ldr	r3, [r7, #4]
 8007fc8:	681b      	ldr	r3, [r3, #0]
 8007fca:	681b      	ldr	r3, [r3, #0]
 8007fcc:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8007fd0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007fd4:	d0e9      	beq.n	8007faa <I2C_WaitOnSTOPRequestThroughIT+0x22>
 8007fd6:	2300      	movs	r3, #0
 8007fd8:	4618      	mov	r0, r3
 8007fda:	3714      	adds	r7, #20
 8007fdc:	46bd      	mov	sp, r7
 8007fde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fe2:	4770      	bx	lr
 8007fe4:	20000134 	.word	0x20000134
 8007fe8:	14f8b589 	.word	0x14f8b589

08007fec <I2C_WaitOnRXNEFlagUntilTimeout>:
 8007fec:	b580      	push	{r7, lr}
 8007fee:	b084      	sub	sp, #16
 8007ff0:	af00      	add	r7, sp, #0
 8007ff2:	60f8      	str	r0, [r7, #12]
 8007ff4:	60b9      	str	r1, [r7, #8]
 8007ff6:	607a      	str	r2, [r7, #4]
 8007ff8:	e042      	b.n	8008080 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 8007ffa:	68fb      	ldr	r3, [r7, #12]
 8007ffc:	681b      	ldr	r3, [r3, #0]
 8007ffe:	695b      	ldr	r3, [r3, #20]
 8008000:	f003 0310 	and.w	r3, r3, #16
 8008004:	2b10      	cmp	r3, #16
 8008006:	d119      	bne.n	800803c <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8008008:	68fb      	ldr	r3, [r7, #12]
 800800a:	681b      	ldr	r3, [r3, #0]
 800800c:	f06f 0210 	mvn.w	r2, #16
 8008010:	615a      	str	r2, [r3, #20]
 8008012:	68fb      	ldr	r3, [r7, #12]
 8008014:	2200      	movs	r2, #0
 8008016:	631a      	str	r2, [r3, #48]	; 0x30
 8008018:	68fb      	ldr	r3, [r7, #12]
 800801a:	2220      	movs	r2, #32
 800801c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008020:	68fb      	ldr	r3, [r7, #12]
 8008022:	2200      	movs	r2, #0
 8008024:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008028:	68fb      	ldr	r3, [r7, #12]
 800802a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800802c:	68fb      	ldr	r3, [r7, #12]
 800802e:	641a      	str	r2, [r3, #64]	; 0x40
 8008030:	68fb      	ldr	r3, [r7, #12]
 8008032:	2200      	movs	r2, #0
 8008034:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008038:	2301      	movs	r3, #1
 800803a:	e029      	b.n	8008090 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 800803c:	f7fc fd0a 	bl	8004a54 <HAL_GetTick>
 8008040:	4602      	mov	r2, r0
 8008042:	687b      	ldr	r3, [r7, #4]
 8008044:	1ad3      	subs	r3, r2, r3
 8008046:	68ba      	ldr	r2, [r7, #8]
 8008048:	429a      	cmp	r2, r3
 800804a:	d302      	bcc.n	8008052 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 800804c:	68bb      	ldr	r3, [r7, #8]
 800804e:	2b00      	cmp	r3, #0
 8008050:	d116      	bne.n	8008080 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 8008052:	68fb      	ldr	r3, [r7, #12]
 8008054:	2200      	movs	r2, #0
 8008056:	631a      	str	r2, [r3, #48]	; 0x30
 8008058:	68fb      	ldr	r3, [r7, #12]
 800805a:	2220      	movs	r2, #32
 800805c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008060:	68fb      	ldr	r3, [r7, #12]
 8008062:	2200      	movs	r2, #0
 8008064:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008068:	68fb      	ldr	r3, [r7, #12]
 800806a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800806c:	f043 0220 	orr.w	r2, r3, #32
 8008070:	68fb      	ldr	r3, [r7, #12]
 8008072:	641a      	str	r2, [r3, #64]	; 0x40
 8008074:	68fb      	ldr	r3, [r7, #12]
 8008076:	2200      	movs	r2, #0
 8008078:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800807c:	2301      	movs	r3, #1
 800807e:	e007      	b.n	8008090 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 8008080:	68fb      	ldr	r3, [r7, #12]
 8008082:	681b      	ldr	r3, [r3, #0]
 8008084:	695b      	ldr	r3, [r3, #20]
 8008086:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800808a:	2b40      	cmp	r3, #64	; 0x40
 800808c:	d1b5      	bne.n	8007ffa <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 800808e:	2300      	movs	r3, #0
 8008090:	4618      	mov	r0, r3
 8008092:	3710      	adds	r7, #16
 8008094:	46bd      	mov	sp, r7
 8008096:	bd80      	pop	{r7, pc}

08008098 <I2C_IsAcknowledgeFailed>:
 8008098:	b480      	push	{r7}
 800809a:	b083      	sub	sp, #12
 800809c:	af00      	add	r7, sp, #0
 800809e:	6078      	str	r0, [r7, #4]
 80080a0:	687b      	ldr	r3, [r7, #4]
 80080a2:	681b      	ldr	r3, [r3, #0]
 80080a4:	695b      	ldr	r3, [r3, #20]
 80080a6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80080aa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80080ae:	d11b      	bne.n	80080e8 <I2C_IsAcknowledgeFailed+0x50>
 80080b0:	687b      	ldr	r3, [r7, #4]
 80080b2:	681b      	ldr	r3, [r3, #0]
 80080b4:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80080b8:	615a      	str	r2, [r3, #20]
 80080ba:	687b      	ldr	r3, [r7, #4]
 80080bc:	2200      	movs	r2, #0
 80080be:	631a      	str	r2, [r3, #48]	; 0x30
 80080c0:	687b      	ldr	r3, [r7, #4]
 80080c2:	2220      	movs	r2, #32
 80080c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80080c8:	687b      	ldr	r3, [r7, #4]
 80080ca:	2200      	movs	r2, #0
 80080cc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80080d0:	687b      	ldr	r3, [r7, #4]
 80080d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80080d4:	f043 0204 	orr.w	r2, r3, #4
 80080d8:	687b      	ldr	r3, [r7, #4]
 80080da:	641a      	str	r2, [r3, #64]	; 0x40
 80080dc:	687b      	ldr	r3, [r7, #4]
 80080de:	2200      	movs	r2, #0
 80080e0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80080e4:	2301      	movs	r3, #1
 80080e6:	e000      	b.n	80080ea <I2C_IsAcknowledgeFailed+0x52>
 80080e8:	2300      	movs	r3, #0
 80080ea:	4618      	mov	r0, r3
 80080ec:	370c      	adds	r7, #12
 80080ee:	46bd      	mov	sp, r7
 80080f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080f4:	4770      	bx	lr

080080f6 <I2C_ConvertOtherXferOptions>:
 80080f6:	b480      	push	{r7}
 80080f8:	b083      	sub	sp, #12
 80080fa:	af00      	add	r7, sp, #0
 80080fc:	6078      	str	r0, [r7, #4]
 80080fe:	687b      	ldr	r3, [r7, #4]
 8008100:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008102:	f5b3 0f2a 	cmp.w	r3, #11141120	; 0xaa0000
 8008106:	d103      	bne.n	8008110 <I2C_ConvertOtherXferOptions+0x1a>
 8008108:	687b      	ldr	r3, [r7, #4]
 800810a:	2201      	movs	r2, #1
 800810c:	62da      	str	r2, [r3, #44]	; 0x2c
 800810e:	e007      	b.n	8008120 <I2C_ConvertOtherXferOptions+0x2a>
 8008110:	687b      	ldr	r3, [r7, #4]
 8008112:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008114:	f1b3 4f2a 	cmp.w	r3, #2852126720	; 0xaa000000
 8008118:	d102      	bne.n	8008120 <I2C_ConvertOtherXferOptions+0x2a>
 800811a:	687b      	ldr	r3, [r7, #4]
 800811c:	2208      	movs	r2, #8
 800811e:	62da      	str	r2, [r3, #44]	; 0x2c
 8008120:	bf00      	nop
 8008122:	370c      	adds	r7, #12
 8008124:	46bd      	mov	sp, r7
 8008126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800812a:	4770      	bx	lr

0800812c <HAL_RCC_OscConfig>:
 800812c:	b580      	push	{r7, lr}
 800812e:	b086      	sub	sp, #24
 8008130:	af00      	add	r7, sp, #0
 8008132:	6078      	str	r0, [r7, #4]
 8008134:	687b      	ldr	r3, [r7, #4]
 8008136:	2b00      	cmp	r3, #0
 8008138:	d101      	bne.n	800813e <HAL_RCC_OscConfig+0x12>
 800813a:	2301      	movs	r3, #1
 800813c:	e267      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 800813e:	687b      	ldr	r3, [r7, #4]
 8008140:	681b      	ldr	r3, [r3, #0]
 8008142:	f003 0301 	and.w	r3, r3, #1
 8008146:	2b00      	cmp	r3, #0
 8008148:	d075      	beq.n	8008236 <HAL_RCC_OscConfig+0x10a>
 800814a:	4b88      	ldr	r3, [pc, #544]	; (800836c <HAL_RCC_OscConfig+0x240>)
 800814c:	689b      	ldr	r3, [r3, #8]
 800814e:	f003 030c 	and.w	r3, r3, #12
 8008152:	2b04      	cmp	r3, #4
 8008154:	d00c      	beq.n	8008170 <HAL_RCC_OscConfig+0x44>
 8008156:	4b85      	ldr	r3, [pc, #532]	; (800836c <HAL_RCC_OscConfig+0x240>)
 8008158:	689b      	ldr	r3, [r3, #8]
 800815a:	f003 030c 	and.w	r3, r3, #12
 800815e:	2b08      	cmp	r3, #8
 8008160:	d112      	bne.n	8008188 <HAL_RCC_OscConfig+0x5c>
 8008162:	4b82      	ldr	r3, [pc, #520]	; (800836c <HAL_RCC_OscConfig+0x240>)
 8008164:	685b      	ldr	r3, [r3, #4]
 8008166:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800816a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800816e:	d10b      	bne.n	8008188 <HAL_RCC_OscConfig+0x5c>
 8008170:	4b7e      	ldr	r3, [pc, #504]	; (800836c <HAL_RCC_OscConfig+0x240>)
 8008172:	681b      	ldr	r3, [r3, #0]
 8008174:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008178:	2b00      	cmp	r3, #0
 800817a:	d05b      	beq.n	8008234 <HAL_RCC_OscConfig+0x108>
 800817c:	687b      	ldr	r3, [r7, #4]
 800817e:	685b      	ldr	r3, [r3, #4]
 8008180:	2b00      	cmp	r3, #0
 8008182:	d157      	bne.n	8008234 <HAL_RCC_OscConfig+0x108>
 8008184:	2301      	movs	r3, #1
 8008186:	e242      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 8008188:	687b      	ldr	r3, [r7, #4]
 800818a:	685b      	ldr	r3, [r3, #4]
 800818c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008190:	d106      	bne.n	80081a0 <HAL_RCC_OscConfig+0x74>
 8008192:	4b76      	ldr	r3, [pc, #472]	; (800836c <HAL_RCC_OscConfig+0x240>)
 8008194:	681b      	ldr	r3, [r3, #0]
 8008196:	4a75      	ldr	r2, [pc, #468]	; (800836c <HAL_RCC_OscConfig+0x240>)
 8008198:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800819c:	6013      	str	r3, [r2, #0]
 800819e:	e01d      	b.n	80081dc <HAL_RCC_OscConfig+0xb0>
 80081a0:	687b      	ldr	r3, [r7, #4]
 80081a2:	685b      	ldr	r3, [r3, #4]
 80081a4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80081a8:	d10c      	bne.n	80081c4 <HAL_RCC_OscConfig+0x98>
 80081aa:	4b70      	ldr	r3, [pc, #448]	; (800836c <HAL_RCC_OscConfig+0x240>)
 80081ac:	681b      	ldr	r3, [r3, #0]
 80081ae:	4a6f      	ldr	r2, [pc, #444]	; (800836c <HAL_RCC_OscConfig+0x240>)
 80081b0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80081b4:	6013      	str	r3, [r2, #0]
 80081b6:	4b6d      	ldr	r3, [pc, #436]	; (800836c <HAL_RCC_OscConfig+0x240>)
 80081b8:	681b      	ldr	r3, [r3, #0]
 80081ba:	4a6c      	ldr	r2, [pc, #432]	; (800836c <HAL_RCC_OscConfig+0x240>)
 80081bc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80081c0:	6013      	str	r3, [r2, #0]
 80081c2:	e00b      	b.n	80081dc <HAL_RCC_OscConfig+0xb0>
 80081c4:	4b69      	ldr	r3, [pc, #420]	; (800836c <HAL_RCC_OscConfig+0x240>)
 80081c6:	681b      	ldr	r3, [r3, #0]
 80081c8:	4a68      	ldr	r2, [pc, #416]	; (800836c <HAL_RCC_OscConfig+0x240>)
 80081ca:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80081ce:	6013      	str	r3, [r2, #0]
 80081d0:	4b66      	ldr	r3, [pc, #408]	; (800836c <HAL_RCC_OscConfig+0x240>)
 80081d2:	681b      	ldr	r3, [r3, #0]
 80081d4:	4a65      	ldr	r2, [pc, #404]	; (800836c <HAL_RCC_OscConfig+0x240>)
 80081d6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80081da:	6013      	str	r3, [r2, #0]
 80081dc:	687b      	ldr	r3, [r7, #4]
 80081de:	685b      	ldr	r3, [r3, #4]
 80081e0:	2b00      	cmp	r3, #0
 80081e2:	d013      	beq.n	800820c <HAL_RCC_OscConfig+0xe0>
 80081e4:	f7fc fc36 	bl	8004a54 <HAL_GetTick>
 80081e8:	6138      	str	r0, [r7, #16]
 80081ea:	e008      	b.n	80081fe <HAL_RCC_OscConfig+0xd2>
 80081ec:	f7fc fc32 	bl	8004a54 <HAL_GetTick>
 80081f0:	4602      	mov	r2, r0
 80081f2:	693b      	ldr	r3, [r7, #16]
 80081f4:	1ad3      	subs	r3, r2, r3
 80081f6:	2b64      	cmp	r3, #100	; 0x64
 80081f8:	d901      	bls.n	80081fe <HAL_RCC_OscConfig+0xd2>
 80081fa:	2303      	movs	r3, #3
 80081fc:	e207      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 80081fe:	4b5b      	ldr	r3, [pc, #364]	; (800836c <HAL_RCC_OscConfig+0x240>)
 8008200:	681b      	ldr	r3, [r3, #0]
 8008202:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008206:	2b00      	cmp	r3, #0
 8008208:	d0f0      	beq.n	80081ec <HAL_RCC_OscConfig+0xc0>
 800820a:	e014      	b.n	8008236 <HAL_RCC_OscConfig+0x10a>
 800820c:	f7fc fc22 	bl	8004a54 <HAL_GetTick>
 8008210:	6138      	str	r0, [r7, #16]
 8008212:	e008      	b.n	8008226 <HAL_RCC_OscConfig+0xfa>
 8008214:	f7fc fc1e 	bl	8004a54 <HAL_GetTick>
 8008218:	4602      	mov	r2, r0
 800821a:	693b      	ldr	r3, [r7, #16]
 800821c:	1ad3      	subs	r3, r2, r3
 800821e:	2b64      	cmp	r3, #100	; 0x64
 8008220:	d901      	bls.n	8008226 <HAL_RCC_OscConfig+0xfa>
 8008222:	2303      	movs	r3, #3
 8008224:	e1f3      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 8008226:	4b51      	ldr	r3, [pc, #324]	; (800836c <HAL_RCC_OscConfig+0x240>)
 8008228:	681b      	ldr	r3, [r3, #0]
 800822a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800822e:	2b00      	cmp	r3, #0
 8008230:	d1f0      	bne.n	8008214 <HAL_RCC_OscConfig+0xe8>
 8008232:	e000      	b.n	8008236 <HAL_RCC_OscConfig+0x10a>
 8008234:	bf00      	nop
 8008236:	687b      	ldr	r3, [r7, #4]
 8008238:	681b      	ldr	r3, [r3, #0]
 800823a:	f003 0302 	and.w	r3, r3, #2
 800823e:	2b00      	cmp	r3, #0
 8008240:	d063      	beq.n	800830a <HAL_RCC_OscConfig+0x1de>
 8008242:	4b4a      	ldr	r3, [pc, #296]	; (800836c <HAL_RCC_OscConfig+0x240>)
 8008244:	689b      	ldr	r3, [r3, #8]
 8008246:	f003 030c 	and.w	r3, r3, #12
 800824a:	2b00      	cmp	r3, #0
 800824c:	d00b      	beq.n	8008266 <HAL_RCC_OscConfig+0x13a>
 800824e:	4b47      	ldr	r3, [pc, #284]	; (800836c <HAL_RCC_OscConfig+0x240>)
 8008250:	689b      	ldr	r3, [r3, #8]
 8008252:	f003 030c 	and.w	r3, r3, #12
 8008256:	2b08      	cmp	r3, #8
 8008258:	d11c      	bne.n	8008294 <HAL_RCC_OscConfig+0x168>
 800825a:	4b44      	ldr	r3, [pc, #272]	; (800836c <HAL_RCC_OscConfig+0x240>)
 800825c:	685b      	ldr	r3, [r3, #4]
 800825e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008262:	2b00      	cmp	r3, #0
 8008264:	d116      	bne.n	8008294 <HAL_RCC_OscConfig+0x168>
 8008266:	4b41      	ldr	r3, [pc, #260]	; (800836c <HAL_RCC_OscConfig+0x240>)
 8008268:	681b      	ldr	r3, [r3, #0]
 800826a:	f003 0302 	and.w	r3, r3, #2
 800826e:	2b00      	cmp	r3, #0
 8008270:	d005      	beq.n	800827e <HAL_RCC_OscConfig+0x152>
 8008272:	687b      	ldr	r3, [r7, #4]
 8008274:	68db      	ldr	r3, [r3, #12]
 8008276:	2b01      	cmp	r3, #1
 8008278:	d001      	beq.n	800827e <HAL_RCC_OscConfig+0x152>
 800827a:	2301      	movs	r3, #1
 800827c:	e1c7      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 800827e:	4b3b      	ldr	r3, [pc, #236]	; (800836c <HAL_RCC_OscConfig+0x240>)
 8008280:	681b      	ldr	r3, [r3, #0]
 8008282:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8008286:	687b      	ldr	r3, [r7, #4]
 8008288:	691b      	ldr	r3, [r3, #16]
 800828a:	00db      	lsls	r3, r3, #3
 800828c:	4937      	ldr	r1, [pc, #220]	; (800836c <HAL_RCC_OscConfig+0x240>)
 800828e:	4313      	orrs	r3, r2
 8008290:	600b      	str	r3, [r1, #0]
 8008292:	e03a      	b.n	800830a <HAL_RCC_OscConfig+0x1de>
 8008294:	687b      	ldr	r3, [r7, #4]
 8008296:	68db      	ldr	r3, [r3, #12]
 8008298:	2b00      	cmp	r3, #0
 800829a:	d020      	beq.n	80082de <HAL_RCC_OscConfig+0x1b2>
 800829c:	4b34      	ldr	r3, [pc, #208]	; (8008370 <HAL_RCC_OscConfig+0x244>)
 800829e:	2201      	movs	r2, #1
 80082a0:	601a      	str	r2, [r3, #0]
 80082a2:	f7fc fbd7 	bl	8004a54 <HAL_GetTick>
 80082a6:	6138      	str	r0, [r7, #16]
 80082a8:	e008      	b.n	80082bc <HAL_RCC_OscConfig+0x190>
 80082aa:	f7fc fbd3 	bl	8004a54 <HAL_GetTick>
 80082ae:	4602      	mov	r2, r0
 80082b0:	693b      	ldr	r3, [r7, #16]
 80082b2:	1ad3      	subs	r3, r2, r3
 80082b4:	2b02      	cmp	r3, #2
 80082b6:	d901      	bls.n	80082bc <HAL_RCC_OscConfig+0x190>
 80082b8:	2303      	movs	r3, #3
 80082ba:	e1a8      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 80082bc:	4b2b      	ldr	r3, [pc, #172]	; (800836c <HAL_RCC_OscConfig+0x240>)
 80082be:	681b      	ldr	r3, [r3, #0]
 80082c0:	f003 0302 	and.w	r3, r3, #2
 80082c4:	2b00      	cmp	r3, #0
 80082c6:	d0f0      	beq.n	80082aa <HAL_RCC_OscConfig+0x17e>
 80082c8:	4b28      	ldr	r3, [pc, #160]	; (800836c <HAL_RCC_OscConfig+0x240>)
 80082ca:	681b      	ldr	r3, [r3, #0]
 80082cc:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80082d0:	687b      	ldr	r3, [r7, #4]
 80082d2:	691b      	ldr	r3, [r3, #16]
 80082d4:	00db      	lsls	r3, r3, #3
 80082d6:	4925      	ldr	r1, [pc, #148]	; (800836c <HAL_RCC_OscConfig+0x240>)
 80082d8:	4313      	orrs	r3, r2
 80082da:	600b      	str	r3, [r1, #0]
 80082dc:	e015      	b.n	800830a <HAL_RCC_OscConfig+0x1de>
 80082de:	4b24      	ldr	r3, [pc, #144]	; (8008370 <HAL_RCC_OscConfig+0x244>)
 80082e0:	2200      	movs	r2, #0
 80082e2:	601a      	str	r2, [r3, #0]
 80082e4:	f7fc fbb6 	bl	8004a54 <HAL_GetTick>
 80082e8:	6138      	str	r0, [r7, #16]
 80082ea:	e008      	b.n	80082fe <HAL_RCC_OscConfig+0x1d2>
 80082ec:	f7fc fbb2 	bl	8004a54 <HAL_GetTick>
 80082f0:	4602      	mov	r2, r0
 80082f2:	693b      	ldr	r3, [r7, #16]
 80082f4:	1ad3      	subs	r3, r2, r3
 80082f6:	2b02      	cmp	r3, #2
 80082f8:	d901      	bls.n	80082fe <HAL_RCC_OscConfig+0x1d2>
 80082fa:	2303      	movs	r3, #3
 80082fc:	e187      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 80082fe:	4b1b      	ldr	r3, [pc, #108]	; (800836c <HAL_RCC_OscConfig+0x240>)
 8008300:	681b      	ldr	r3, [r3, #0]
 8008302:	f003 0302 	and.w	r3, r3, #2
 8008306:	2b00      	cmp	r3, #0
 8008308:	d1f0      	bne.n	80082ec <HAL_RCC_OscConfig+0x1c0>
 800830a:	687b      	ldr	r3, [r7, #4]
 800830c:	681b      	ldr	r3, [r3, #0]
 800830e:	f003 0308 	and.w	r3, r3, #8
 8008312:	2b00      	cmp	r3, #0
 8008314:	d036      	beq.n	8008384 <HAL_RCC_OscConfig+0x258>
 8008316:	687b      	ldr	r3, [r7, #4]
 8008318:	695b      	ldr	r3, [r3, #20]
 800831a:	2b00      	cmp	r3, #0
 800831c:	d016      	beq.n	800834c <HAL_RCC_OscConfig+0x220>
 800831e:	4b15      	ldr	r3, [pc, #84]	; (8008374 <HAL_RCC_OscConfig+0x248>)
 8008320:	2201      	movs	r2, #1
 8008322:	601a      	str	r2, [r3, #0]
 8008324:	f7fc fb96 	bl	8004a54 <HAL_GetTick>
 8008328:	6138      	str	r0, [r7, #16]
 800832a:	e008      	b.n	800833e <HAL_RCC_OscConfig+0x212>
 800832c:	f7fc fb92 	bl	8004a54 <HAL_GetTick>
 8008330:	4602      	mov	r2, r0
 8008332:	693b      	ldr	r3, [r7, #16]
 8008334:	1ad3      	subs	r3, r2, r3
 8008336:	2b02      	cmp	r3, #2
 8008338:	d901      	bls.n	800833e <HAL_RCC_OscConfig+0x212>
 800833a:	2303      	movs	r3, #3
 800833c:	e167      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 800833e:	4b0b      	ldr	r3, [pc, #44]	; (800836c <HAL_RCC_OscConfig+0x240>)
 8008340:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008342:	f003 0302 	and.w	r3, r3, #2
 8008346:	2b00      	cmp	r3, #0
 8008348:	d0f0      	beq.n	800832c <HAL_RCC_OscConfig+0x200>
 800834a:	e01b      	b.n	8008384 <HAL_RCC_OscConfig+0x258>
 800834c:	4b09      	ldr	r3, [pc, #36]	; (8008374 <HAL_RCC_OscConfig+0x248>)
 800834e:	2200      	movs	r2, #0
 8008350:	601a      	str	r2, [r3, #0]
 8008352:	f7fc fb7f 	bl	8004a54 <HAL_GetTick>
 8008356:	6138      	str	r0, [r7, #16]
 8008358:	e00e      	b.n	8008378 <HAL_RCC_OscConfig+0x24c>
 800835a:	f7fc fb7b 	bl	8004a54 <HAL_GetTick>
 800835e:	4602      	mov	r2, r0
 8008360:	693b      	ldr	r3, [r7, #16]
 8008362:	1ad3      	subs	r3, r2, r3
 8008364:	2b02      	cmp	r3, #2
 8008366:	d907      	bls.n	8008378 <HAL_RCC_OscConfig+0x24c>
 8008368:	2303      	movs	r3, #3
 800836a:	e150      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 800836c:	40023800 	.word	0x40023800
 8008370:	42470000 	.word	0x42470000
 8008374:	42470e80 	.word	0x42470e80
 8008378:	4b88      	ldr	r3, [pc, #544]	; (800859c <HAL_RCC_OscConfig+0x470>)
 800837a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800837c:	f003 0302 	and.w	r3, r3, #2
 8008380:	2b00      	cmp	r3, #0
 8008382:	d1ea      	bne.n	800835a <HAL_RCC_OscConfig+0x22e>
 8008384:	687b      	ldr	r3, [r7, #4]
 8008386:	681b      	ldr	r3, [r3, #0]
 8008388:	f003 0304 	and.w	r3, r3, #4
 800838c:	2b00      	cmp	r3, #0
 800838e:	f000 8097 	beq.w	80084c0 <HAL_RCC_OscConfig+0x394>
 8008392:	2300      	movs	r3, #0
 8008394:	75fb      	strb	r3, [r7, #23]
 8008396:	4b81      	ldr	r3, [pc, #516]	; (800859c <HAL_RCC_OscConfig+0x470>)
 8008398:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800839a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800839e:	2b00      	cmp	r3, #0
 80083a0:	d10f      	bne.n	80083c2 <HAL_RCC_OscConfig+0x296>
 80083a2:	2300      	movs	r3, #0
 80083a4:	60bb      	str	r3, [r7, #8]
 80083a6:	4b7d      	ldr	r3, [pc, #500]	; (800859c <HAL_RCC_OscConfig+0x470>)
 80083a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80083aa:	4a7c      	ldr	r2, [pc, #496]	; (800859c <HAL_RCC_OscConfig+0x470>)
 80083ac:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80083b0:	6413      	str	r3, [r2, #64]	; 0x40
 80083b2:	4b7a      	ldr	r3, [pc, #488]	; (800859c <HAL_RCC_OscConfig+0x470>)
 80083b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80083b6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80083ba:	60bb      	str	r3, [r7, #8]
 80083bc:	68bb      	ldr	r3, [r7, #8]
 80083be:	2301      	movs	r3, #1
 80083c0:	75fb      	strb	r3, [r7, #23]
 80083c2:	4b77      	ldr	r3, [pc, #476]	; (80085a0 <HAL_RCC_OscConfig+0x474>)
 80083c4:	681b      	ldr	r3, [r3, #0]
 80083c6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80083ca:	2b00      	cmp	r3, #0
 80083cc:	d118      	bne.n	8008400 <HAL_RCC_OscConfig+0x2d4>
 80083ce:	4b74      	ldr	r3, [pc, #464]	; (80085a0 <HAL_RCC_OscConfig+0x474>)
 80083d0:	681b      	ldr	r3, [r3, #0]
 80083d2:	4a73      	ldr	r2, [pc, #460]	; (80085a0 <HAL_RCC_OscConfig+0x474>)
 80083d4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80083d8:	6013      	str	r3, [r2, #0]
 80083da:	f7fc fb3b 	bl	8004a54 <HAL_GetTick>
 80083de:	6138      	str	r0, [r7, #16]
 80083e0:	e008      	b.n	80083f4 <HAL_RCC_OscConfig+0x2c8>
 80083e2:	f7fc fb37 	bl	8004a54 <HAL_GetTick>
 80083e6:	4602      	mov	r2, r0
 80083e8:	693b      	ldr	r3, [r7, #16]
 80083ea:	1ad3      	subs	r3, r2, r3
 80083ec:	2b02      	cmp	r3, #2
 80083ee:	d901      	bls.n	80083f4 <HAL_RCC_OscConfig+0x2c8>
 80083f0:	2303      	movs	r3, #3
 80083f2:	e10c      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 80083f4:	4b6a      	ldr	r3, [pc, #424]	; (80085a0 <HAL_RCC_OscConfig+0x474>)
 80083f6:	681b      	ldr	r3, [r3, #0]
 80083f8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80083fc:	2b00      	cmp	r3, #0
 80083fe:	d0f0      	beq.n	80083e2 <HAL_RCC_OscConfig+0x2b6>
 8008400:	687b      	ldr	r3, [r7, #4]
 8008402:	689b      	ldr	r3, [r3, #8]
 8008404:	2b01      	cmp	r3, #1
 8008406:	d106      	bne.n	8008416 <HAL_RCC_OscConfig+0x2ea>
 8008408:	4b64      	ldr	r3, [pc, #400]	; (800859c <HAL_RCC_OscConfig+0x470>)
 800840a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800840c:	4a63      	ldr	r2, [pc, #396]	; (800859c <HAL_RCC_OscConfig+0x470>)
 800840e:	f043 0301 	orr.w	r3, r3, #1
 8008412:	6713      	str	r3, [r2, #112]	; 0x70
 8008414:	e01c      	b.n	8008450 <HAL_RCC_OscConfig+0x324>
 8008416:	687b      	ldr	r3, [r7, #4]
 8008418:	689b      	ldr	r3, [r3, #8]
 800841a:	2b05      	cmp	r3, #5
 800841c:	d10c      	bne.n	8008438 <HAL_RCC_OscConfig+0x30c>
 800841e:	4b5f      	ldr	r3, [pc, #380]	; (800859c <HAL_RCC_OscConfig+0x470>)
 8008420:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008422:	4a5e      	ldr	r2, [pc, #376]	; (800859c <HAL_RCC_OscConfig+0x470>)
 8008424:	f043 0304 	orr.w	r3, r3, #4
 8008428:	6713      	str	r3, [r2, #112]	; 0x70
 800842a:	4b5c      	ldr	r3, [pc, #368]	; (800859c <HAL_RCC_OscConfig+0x470>)
 800842c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800842e:	4a5b      	ldr	r2, [pc, #364]	; (800859c <HAL_RCC_OscConfig+0x470>)
 8008430:	f043 0301 	orr.w	r3, r3, #1
 8008434:	6713      	str	r3, [r2, #112]	; 0x70
 8008436:	e00b      	b.n	8008450 <HAL_RCC_OscConfig+0x324>
 8008438:	4b58      	ldr	r3, [pc, #352]	; (800859c <HAL_RCC_OscConfig+0x470>)
 800843a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800843c:	4a57      	ldr	r2, [pc, #348]	; (800859c <HAL_RCC_OscConfig+0x470>)
 800843e:	f023 0301 	bic.w	r3, r3, #1
 8008442:	6713      	str	r3, [r2, #112]	; 0x70
 8008444:	4b55      	ldr	r3, [pc, #340]	; (800859c <HAL_RCC_OscConfig+0x470>)
 8008446:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008448:	4a54      	ldr	r2, [pc, #336]	; (800859c <HAL_RCC_OscConfig+0x470>)
 800844a:	f023 0304 	bic.w	r3, r3, #4
 800844e:	6713      	str	r3, [r2, #112]	; 0x70
 8008450:	687b      	ldr	r3, [r7, #4]
 8008452:	689b      	ldr	r3, [r3, #8]
 8008454:	2b00      	cmp	r3, #0
 8008456:	d015      	beq.n	8008484 <HAL_RCC_OscConfig+0x358>
 8008458:	f7fc fafc 	bl	8004a54 <HAL_GetTick>
 800845c:	6138      	str	r0, [r7, #16]
 800845e:	e00a      	b.n	8008476 <HAL_RCC_OscConfig+0x34a>
 8008460:	f7fc faf8 	bl	8004a54 <HAL_GetTick>
 8008464:	4602      	mov	r2, r0
 8008466:	693b      	ldr	r3, [r7, #16]
 8008468:	1ad3      	subs	r3, r2, r3
 800846a:	f241 3288 	movw	r2, #5000	; 0x1388
 800846e:	4293      	cmp	r3, r2
 8008470:	d901      	bls.n	8008476 <HAL_RCC_OscConfig+0x34a>
 8008472:	2303      	movs	r3, #3
 8008474:	e0cb      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 8008476:	4b49      	ldr	r3, [pc, #292]	; (800859c <HAL_RCC_OscConfig+0x470>)
 8008478:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800847a:	f003 0302 	and.w	r3, r3, #2
 800847e:	2b00      	cmp	r3, #0
 8008480:	d0ee      	beq.n	8008460 <HAL_RCC_OscConfig+0x334>
 8008482:	e014      	b.n	80084ae <HAL_RCC_OscConfig+0x382>
 8008484:	f7fc fae6 	bl	8004a54 <HAL_GetTick>
 8008488:	6138      	str	r0, [r7, #16]
 800848a:	e00a      	b.n	80084a2 <HAL_RCC_OscConfig+0x376>
 800848c:	f7fc fae2 	bl	8004a54 <HAL_GetTick>
 8008490:	4602      	mov	r2, r0
 8008492:	693b      	ldr	r3, [r7, #16]
 8008494:	1ad3      	subs	r3, r2, r3
 8008496:	f241 3288 	movw	r2, #5000	; 0x1388
 800849a:	4293      	cmp	r3, r2
 800849c:	d901      	bls.n	80084a2 <HAL_RCC_OscConfig+0x376>
 800849e:	2303      	movs	r3, #3
 80084a0:	e0b5      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 80084a2:	4b3e      	ldr	r3, [pc, #248]	; (800859c <HAL_RCC_OscConfig+0x470>)
 80084a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80084a6:	f003 0302 	and.w	r3, r3, #2
 80084aa:	2b00      	cmp	r3, #0
 80084ac:	d1ee      	bne.n	800848c <HAL_RCC_OscConfig+0x360>
 80084ae:	7dfb      	ldrb	r3, [r7, #23]
 80084b0:	2b01      	cmp	r3, #1
 80084b2:	d105      	bne.n	80084c0 <HAL_RCC_OscConfig+0x394>
 80084b4:	4b39      	ldr	r3, [pc, #228]	; (800859c <HAL_RCC_OscConfig+0x470>)
 80084b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80084b8:	4a38      	ldr	r2, [pc, #224]	; (800859c <HAL_RCC_OscConfig+0x470>)
 80084ba:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80084be:	6413      	str	r3, [r2, #64]	; 0x40
 80084c0:	687b      	ldr	r3, [r7, #4]
 80084c2:	699b      	ldr	r3, [r3, #24]
 80084c4:	2b00      	cmp	r3, #0
 80084c6:	f000 80a1 	beq.w	800860c <HAL_RCC_OscConfig+0x4e0>
 80084ca:	4b34      	ldr	r3, [pc, #208]	; (800859c <HAL_RCC_OscConfig+0x470>)
 80084cc:	689b      	ldr	r3, [r3, #8]
 80084ce:	f003 030c 	and.w	r3, r3, #12
 80084d2:	2b08      	cmp	r3, #8
 80084d4:	d05c      	beq.n	8008590 <HAL_RCC_OscConfig+0x464>
 80084d6:	687b      	ldr	r3, [r7, #4]
 80084d8:	699b      	ldr	r3, [r3, #24]
 80084da:	2b02      	cmp	r3, #2
 80084dc:	d141      	bne.n	8008562 <HAL_RCC_OscConfig+0x436>
 80084de:	4b31      	ldr	r3, [pc, #196]	; (80085a4 <HAL_RCC_OscConfig+0x478>)
 80084e0:	2200      	movs	r2, #0
 80084e2:	601a      	str	r2, [r3, #0]
 80084e4:	f7fc fab6 	bl	8004a54 <HAL_GetTick>
 80084e8:	6138      	str	r0, [r7, #16]
 80084ea:	e008      	b.n	80084fe <HAL_RCC_OscConfig+0x3d2>
 80084ec:	f7fc fab2 	bl	8004a54 <HAL_GetTick>
 80084f0:	4602      	mov	r2, r0
 80084f2:	693b      	ldr	r3, [r7, #16]
 80084f4:	1ad3      	subs	r3, r2, r3
 80084f6:	2b02      	cmp	r3, #2
 80084f8:	d901      	bls.n	80084fe <HAL_RCC_OscConfig+0x3d2>
 80084fa:	2303      	movs	r3, #3
 80084fc:	e087      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 80084fe:	4b27      	ldr	r3, [pc, #156]	; (800859c <HAL_RCC_OscConfig+0x470>)
 8008500:	681b      	ldr	r3, [r3, #0]
 8008502:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008506:	2b00      	cmp	r3, #0
 8008508:	d1f0      	bne.n	80084ec <HAL_RCC_OscConfig+0x3c0>
 800850a:	687b      	ldr	r3, [r7, #4]
 800850c:	69da      	ldr	r2, [r3, #28]
 800850e:	687b      	ldr	r3, [r7, #4]
 8008510:	6a1b      	ldr	r3, [r3, #32]
 8008512:	431a      	orrs	r2, r3
 8008514:	687b      	ldr	r3, [r7, #4]
 8008516:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008518:	019b      	lsls	r3, r3, #6
 800851a:	431a      	orrs	r2, r3
 800851c:	687b      	ldr	r3, [r7, #4]
 800851e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008520:	085b      	lsrs	r3, r3, #1
 8008522:	3b01      	subs	r3, #1
 8008524:	041b      	lsls	r3, r3, #16
 8008526:	431a      	orrs	r2, r3
 8008528:	687b      	ldr	r3, [r7, #4]
 800852a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800852c:	061b      	lsls	r3, r3, #24
 800852e:	491b      	ldr	r1, [pc, #108]	; (800859c <HAL_RCC_OscConfig+0x470>)
 8008530:	4313      	orrs	r3, r2
 8008532:	604b      	str	r3, [r1, #4]
 8008534:	4b1b      	ldr	r3, [pc, #108]	; (80085a4 <HAL_RCC_OscConfig+0x478>)
 8008536:	2201      	movs	r2, #1
 8008538:	601a      	str	r2, [r3, #0]
 800853a:	f7fc fa8b 	bl	8004a54 <HAL_GetTick>
 800853e:	6138      	str	r0, [r7, #16]
 8008540:	e008      	b.n	8008554 <HAL_RCC_OscConfig+0x428>
 8008542:	f7fc fa87 	bl	8004a54 <HAL_GetTick>
 8008546:	4602      	mov	r2, r0
 8008548:	693b      	ldr	r3, [r7, #16]
 800854a:	1ad3      	subs	r3, r2, r3
 800854c:	2b02      	cmp	r3, #2
 800854e:	d901      	bls.n	8008554 <HAL_RCC_OscConfig+0x428>
 8008550:	2303      	movs	r3, #3
 8008552:	e05c      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 8008554:	4b11      	ldr	r3, [pc, #68]	; (800859c <HAL_RCC_OscConfig+0x470>)
 8008556:	681b      	ldr	r3, [r3, #0]
 8008558:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800855c:	2b00      	cmp	r3, #0
 800855e:	d0f0      	beq.n	8008542 <HAL_RCC_OscConfig+0x416>
 8008560:	e054      	b.n	800860c <HAL_RCC_OscConfig+0x4e0>
 8008562:	4b10      	ldr	r3, [pc, #64]	; (80085a4 <HAL_RCC_OscConfig+0x478>)
 8008564:	2200      	movs	r2, #0
 8008566:	601a      	str	r2, [r3, #0]
 8008568:	f7fc fa74 	bl	8004a54 <HAL_GetTick>
 800856c:	6138      	str	r0, [r7, #16]
 800856e:	e008      	b.n	8008582 <HAL_RCC_OscConfig+0x456>
 8008570:	f7fc fa70 	bl	8004a54 <HAL_GetTick>
 8008574:	4602      	mov	r2, r0
 8008576:	693b      	ldr	r3, [r7, #16]
 8008578:	1ad3      	subs	r3, r2, r3
 800857a:	2b02      	cmp	r3, #2
 800857c:	d901      	bls.n	8008582 <HAL_RCC_OscConfig+0x456>
 800857e:	2303      	movs	r3, #3
 8008580:	e045      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 8008582:	4b06      	ldr	r3, [pc, #24]	; (800859c <HAL_RCC_OscConfig+0x470>)
 8008584:	681b      	ldr	r3, [r3, #0]
 8008586:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800858a:	2b00      	cmp	r3, #0
 800858c:	d1f0      	bne.n	8008570 <HAL_RCC_OscConfig+0x444>
 800858e:	e03d      	b.n	800860c <HAL_RCC_OscConfig+0x4e0>
 8008590:	687b      	ldr	r3, [r7, #4]
 8008592:	699b      	ldr	r3, [r3, #24]
 8008594:	2b01      	cmp	r3, #1
 8008596:	d107      	bne.n	80085a8 <HAL_RCC_OscConfig+0x47c>
 8008598:	2301      	movs	r3, #1
 800859a:	e038      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 800859c:	40023800 	.word	0x40023800
 80085a0:	40007000 	.word	0x40007000
 80085a4:	42470060 	.word	0x42470060
 80085a8:	4b1b      	ldr	r3, [pc, #108]	; (8008618 <HAL_RCC_OscConfig+0x4ec>)
 80085aa:	685b      	ldr	r3, [r3, #4]
 80085ac:	60fb      	str	r3, [r7, #12]
 80085ae:	687b      	ldr	r3, [r7, #4]
 80085b0:	699b      	ldr	r3, [r3, #24]
 80085b2:	2b01      	cmp	r3, #1
 80085b4:	d028      	beq.n	8008608 <HAL_RCC_OscConfig+0x4dc>
 80085b6:	68fb      	ldr	r3, [r7, #12]
 80085b8:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80085bc:	687b      	ldr	r3, [r7, #4]
 80085be:	69db      	ldr	r3, [r3, #28]
 80085c0:	429a      	cmp	r2, r3
 80085c2:	d121      	bne.n	8008608 <HAL_RCC_OscConfig+0x4dc>
 80085c4:	68fb      	ldr	r3, [r7, #12]
 80085c6:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80085ca:	687b      	ldr	r3, [r7, #4]
 80085cc:	6a1b      	ldr	r3, [r3, #32]
 80085ce:	429a      	cmp	r2, r3
 80085d0:	d11a      	bne.n	8008608 <HAL_RCC_OscConfig+0x4dc>
 80085d2:	68fa      	ldr	r2, [r7, #12]
 80085d4:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80085d8:	4013      	ands	r3, r2
 80085da:	687a      	ldr	r2, [r7, #4]
 80085dc:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80085de:	0192      	lsls	r2, r2, #6
 80085e0:	4293      	cmp	r3, r2
 80085e2:	d111      	bne.n	8008608 <HAL_RCC_OscConfig+0x4dc>
 80085e4:	68fb      	ldr	r3, [r7, #12]
 80085e6:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80085ea:	687b      	ldr	r3, [r7, #4]
 80085ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80085ee:	085b      	lsrs	r3, r3, #1
 80085f0:	3b01      	subs	r3, #1
 80085f2:	041b      	lsls	r3, r3, #16
 80085f4:	429a      	cmp	r2, r3
 80085f6:	d107      	bne.n	8008608 <HAL_RCC_OscConfig+0x4dc>
 80085f8:	68fb      	ldr	r3, [r7, #12]
 80085fa:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80085fe:	687b      	ldr	r3, [r7, #4]
 8008600:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008602:	061b      	lsls	r3, r3, #24
 8008604:	429a      	cmp	r2, r3
 8008606:	d001      	beq.n	800860c <HAL_RCC_OscConfig+0x4e0>
 8008608:	2301      	movs	r3, #1
 800860a:	e000      	b.n	800860e <HAL_RCC_OscConfig+0x4e2>
 800860c:	2300      	movs	r3, #0
 800860e:	4618      	mov	r0, r3
 8008610:	3718      	adds	r7, #24
 8008612:	46bd      	mov	sp, r7
 8008614:	bd80      	pop	{r7, pc}
 8008616:	bf00      	nop
 8008618:	40023800 	.word	0x40023800

0800861c <HAL_RCC_ClockConfig>:
 800861c:	b580      	push	{r7, lr}
 800861e:	b084      	sub	sp, #16
 8008620:	af00      	add	r7, sp, #0
 8008622:	6078      	str	r0, [r7, #4]
 8008624:	6039      	str	r1, [r7, #0]
 8008626:	687b      	ldr	r3, [r7, #4]
 8008628:	2b00      	cmp	r3, #0
 800862a:	d101      	bne.n	8008630 <HAL_RCC_ClockConfig+0x14>
 800862c:	2301      	movs	r3, #1
 800862e:	e0cc      	b.n	80087ca <HAL_RCC_ClockConfig+0x1ae>
 8008630:	4b68      	ldr	r3, [pc, #416]	; (80087d4 <HAL_RCC_ClockConfig+0x1b8>)
 8008632:	681b      	ldr	r3, [r3, #0]
 8008634:	f003 0307 	and.w	r3, r3, #7
 8008638:	683a      	ldr	r2, [r7, #0]
 800863a:	429a      	cmp	r2, r3
 800863c:	d90c      	bls.n	8008658 <HAL_RCC_ClockConfig+0x3c>
 800863e:	4b65      	ldr	r3, [pc, #404]	; (80087d4 <HAL_RCC_ClockConfig+0x1b8>)
 8008640:	683a      	ldr	r2, [r7, #0]
 8008642:	b2d2      	uxtb	r2, r2
 8008644:	701a      	strb	r2, [r3, #0]
 8008646:	4b63      	ldr	r3, [pc, #396]	; (80087d4 <HAL_RCC_ClockConfig+0x1b8>)
 8008648:	681b      	ldr	r3, [r3, #0]
 800864a:	f003 0307 	and.w	r3, r3, #7
 800864e:	683a      	ldr	r2, [r7, #0]
 8008650:	429a      	cmp	r2, r3
 8008652:	d001      	beq.n	8008658 <HAL_RCC_ClockConfig+0x3c>
 8008654:	2301      	movs	r3, #1
 8008656:	e0b8      	b.n	80087ca <HAL_RCC_ClockConfig+0x1ae>
 8008658:	687b      	ldr	r3, [r7, #4]
 800865a:	681b      	ldr	r3, [r3, #0]
 800865c:	f003 0302 	and.w	r3, r3, #2
 8008660:	2b00      	cmp	r3, #0
 8008662:	d020      	beq.n	80086a6 <HAL_RCC_ClockConfig+0x8a>
 8008664:	687b      	ldr	r3, [r7, #4]
 8008666:	681b      	ldr	r3, [r3, #0]
 8008668:	f003 0304 	and.w	r3, r3, #4
 800866c:	2b00      	cmp	r3, #0
 800866e:	d005      	beq.n	800867c <HAL_RCC_ClockConfig+0x60>
 8008670:	4b59      	ldr	r3, [pc, #356]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 8008672:	689b      	ldr	r3, [r3, #8]
 8008674:	4a58      	ldr	r2, [pc, #352]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 8008676:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800867a:	6093      	str	r3, [r2, #8]
 800867c:	687b      	ldr	r3, [r7, #4]
 800867e:	681b      	ldr	r3, [r3, #0]
 8008680:	f003 0308 	and.w	r3, r3, #8
 8008684:	2b00      	cmp	r3, #0
 8008686:	d005      	beq.n	8008694 <HAL_RCC_ClockConfig+0x78>
 8008688:	4b53      	ldr	r3, [pc, #332]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 800868a:	689b      	ldr	r3, [r3, #8]
 800868c:	4a52      	ldr	r2, [pc, #328]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 800868e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8008692:	6093      	str	r3, [r2, #8]
 8008694:	4b50      	ldr	r3, [pc, #320]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 8008696:	689b      	ldr	r3, [r3, #8]
 8008698:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800869c:	687b      	ldr	r3, [r7, #4]
 800869e:	689b      	ldr	r3, [r3, #8]
 80086a0:	494d      	ldr	r1, [pc, #308]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 80086a2:	4313      	orrs	r3, r2
 80086a4:	608b      	str	r3, [r1, #8]
 80086a6:	687b      	ldr	r3, [r7, #4]
 80086a8:	681b      	ldr	r3, [r3, #0]
 80086aa:	f003 0301 	and.w	r3, r3, #1
 80086ae:	2b00      	cmp	r3, #0
 80086b0:	d044      	beq.n	800873c <HAL_RCC_ClockConfig+0x120>
 80086b2:	687b      	ldr	r3, [r7, #4]
 80086b4:	685b      	ldr	r3, [r3, #4]
 80086b6:	2b01      	cmp	r3, #1
 80086b8:	d107      	bne.n	80086ca <HAL_RCC_ClockConfig+0xae>
 80086ba:	4b47      	ldr	r3, [pc, #284]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 80086bc:	681b      	ldr	r3, [r3, #0]
 80086be:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80086c2:	2b00      	cmp	r3, #0
 80086c4:	d119      	bne.n	80086fa <HAL_RCC_ClockConfig+0xde>
 80086c6:	2301      	movs	r3, #1
 80086c8:	e07f      	b.n	80087ca <HAL_RCC_ClockConfig+0x1ae>
 80086ca:	687b      	ldr	r3, [r7, #4]
 80086cc:	685b      	ldr	r3, [r3, #4]
 80086ce:	2b02      	cmp	r3, #2
 80086d0:	d003      	beq.n	80086da <HAL_RCC_ClockConfig+0xbe>
 80086d2:	687b      	ldr	r3, [r7, #4]
 80086d4:	685b      	ldr	r3, [r3, #4]
 80086d6:	2b03      	cmp	r3, #3
 80086d8:	d107      	bne.n	80086ea <HAL_RCC_ClockConfig+0xce>
 80086da:	4b3f      	ldr	r3, [pc, #252]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 80086dc:	681b      	ldr	r3, [r3, #0]
 80086de:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80086e2:	2b00      	cmp	r3, #0
 80086e4:	d109      	bne.n	80086fa <HAL_RCC_ClockConfig+0xde>
 80086e6:	2301      	movs	r3, #1
 80086e8:	e06f      	b.n	80087ca <HAL_RCC_ClockConfig+0x1ae>
 80086ea:	4b3b      	ldr	r3, [pc, #236]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 80086ec:	681b      	ldr	r3, [r3, #0]
 80086ee:	f003 0302 	and.w	r3, r3, #2
 80086f2:	2b00      	cmp	r3, #0
 80086f4:	d101      	bne.n	80086fa <HAL_RCC_ClockConfig+0xde>
 80086f6:	2301      	movs	r3, #1
 80086f8:	e067      	b.n	80087ca <HAL_RCC_ClockConfig+0x1ae>
 80086fa:	4b37      	ldr	r3, [pc, #220]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 80086fc:	689b      	ldr	r3, [r3, #8]
 80086fe:	f023 0203 	bic.w	r2, r3, #3
 8008702:	687b      	ldr	r3, [r7, #4]
 8008704:	685b      	ldr	r3, [r3, #4]
 8008706:	4934      	ldr	r1, [pc, #208]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 8008708:	4313      	orrs	r3, r2
 800870a:	608b      	str	r3, [r1, #8]
 800870c:	f7fc f9a2 	bl	8004a54 <HAL_GetTick>
 8008710:	60f8      	str	r0, [r7, #12]
 8008712:	e00a      	b.n	800872a <HAL_RCC_ClockConfig+0x10e>
 8008714:	f7fc f99e 	bl	8004a54 <HAL_GetTick>
 8008718:	4602      	mov	r2, r0
 800871a:	68fb      	ldr	r3, [r7, #12]
 800871c:	1ad3      	subs	r3, r2, r3
 800871e:	f241 3288 	movw	r2, #5000	; 0x1388
 8008722:	4293      	cmp	r3, r2
 8008724:	d901      	bls.n	800872a <HAL_RCC_ClockConfig+0x10e>
 8008726:	2303      	movs	r3, #3
 8008728:	e04f      	b.n	80087ca <HAL_RCC_ClockConfig+0x1ae>
 800872a:	4b2b      	ldr	r3, [pc, #172]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 800872c:	689b      	ldr	r3, [r3, #8]
 800872e:	f003 020c 	and.w	r2, r3, #12
 8008732:	687b      	ldr	r3, [r7, #4]
 8008734:	685b      	ldr	r3, [r3, #4]
 8008736:	009b      	lsls	r3, r3, #2
 8008738:	429a      	cmp	r2, r3
 800873a:	d1eb      	bne.n	8008714 <HAL_RCC_ClockConfig+0xf8>
 800873c:	4b25      	ldr	r3, [pc, #148]	; (80087d4 <HAL_RCC_ClockConfig+0x1b8>)
 800873e:	681b      	ldr	r3, [r3, #0]
 8008740:	f003 0307 	and.w	r3, r3, #7
 8008744:	683a      	ldr	r2, [r7, #0]
 8008746:	429a      	cmp	r2, r3
 8008748:	d20c      	bcs.n	8008764 <HAL_RCC_ClockConfig+0x148>
 800874a:	4b22      	ldr	r3, [pc, #136]	; (80087d4 <HAL_RCC_ClockConfig+0x1b8>)
 800874c:	683a      	ldr	r2, [r7, #0]
 800874e:	b2d2      	uxtb	r2, r2
 8008750:	701a      	strb	r2, [r3, #0]
 8008752:	4b20      	ldr	r3, [pc, #128]	; (80087d4 <HAL_RCC_ClockConfig+0x1b8>)
 8008754:	681b      	ldr	r3, [r3, #0]
 8008756:	f003 0307 	and.w	r3, r3, #7
 800875a:	683a      	ldr	r2, [r7, #0]
 800875c:	429a      	cmp	r2, r3
 800875e:	d001      	beq.n	8008764 <HAL_RCC_ClockConfig+0x148>
 8008760:	2301      	movs	r3, #1
 8008762:	e032      	b.n	80087ca <HAL_RCC_ClockConfig+0x1ae>
 8008764:	687b      	ldr	r3, [r7, #4]
 8008766:	681b      	ldr	r3, [r3, #0]
 8008768:	f003 0304 	and.w	r3, r3, #4
 800876c:	2b00      	cmp	r3, #0
 800876e:	d008      	beq.n	8008782 <HAL_RCC_ClockConfig+0x166>
 8008770:	4b19      	ldr	r3, [pc, #100]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 8008772:	689b      	ldr	r3, [r3, #8]
 8008774:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8008778:	687b      	ldr	r3, [r7, #4]
 800877a:	68db      	ldr	r3, [r3, #12]
 800877c:	4916      	ldr	r1, [pc, #88]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 800877e:	4313      	orrs	r3, r2
 8008780:	608b      	str	r3, [r1, #8]
 8008782:	687b      	ldr	r3, [r7, #4]
 8008784:	681b      	ldr	r3, [r3, #0]
 8008786:	f003 0308 	and.w	r3, r3, #8
 800878a:	2b00      	cmp	r3, #0
 800878c:	d009      	beq.n	80087a2 <HAL_RCC_ClockConfig+0x186>
 800878e:	4b12      	ldr	r3, [pc, #72]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 8008790:	689b      	ldr	r3, [r3, #8]
 8008792:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8008796:	687b      	ldr	r3, [r7, #4]
 8008798:	691b      	ldr	r3, [r3, #16]
 800879a:	00db      	lsls	r3, r3, #3
 800879c:	490e      	ldr	r1, [pc, #56]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 800879e:	4313      	orrs	r3, r2
 80087a0:	608b      	str	r3, [r1, #8]
 80087a2:	f000 f821 	bl	80087e8 <HAL_RCC_GetSysClockFreq>
 80087a6:	4602      	mov	r2, r0
 80087a8:	4b0b      	ldr	r3, [pc, #44]	; (80087d8 <HAL_RCC_ClockConfig+0x1bc>)
 80087aa:	689b      	ldr	r3, [r3, #8]
 80087ac:	091b      	lsrs	r3, r3, #4
 80087ae:	f003 030f 	and.w	r3, r3, #15
 80087b2:	490a      	ldr	r1, [pc, #40]	; (80087dc <HAL_RCC_ClockConfig+0x1c0>)
 80087b4:	5ccb      	ldrb	r3, [r1, r3]
 80087b6:	fa22 f303 	lsr.w	r3, r2, r3
 80087ba:	4a09      	ldr	r2, [pc, #36]	; (80087e0 <HAL_RCC_ClockConfig+0x1c4>)
 80087bc:	6013      	str	r3, [r2, #0]
 80087be:	4b09      	ldr	r3, [pc, #36]	; (80087e4 <HAL_RCC_ClockConfig+0x1c8>)
 80087c0:	681b      	ldr	r3, [r3, #0]
 80087c2:	4618      	mov	r0, r3
 80087c4:	f7fc f902 	bl	80049cc <HAL_InitTick>
 80087c8:	2300      	movs	r3, #0
 80087ca:	4618      	mov	r0, r3
 80087cc:	3710      	adds	r7, #16
 80087ce:	46bd      	mov	sp, r7
 80087d0:	bd80      	pop	{r7, pc}
 80087d2:	bf00      	nop
 80087d4:	40023c00 	.word	0x40023c00
 80087d8:	40023800 	.word	0x40023800
 80087dc:	0800bbbc 	.word	0x0800bbbc
 80087e0:	20000134 	.word	0x20000134
 80087e4:	20000138 	.word	0x20000138

080087e8 <HAL_RCC_GetSysClockFreq>:
 80087e8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80087ec:	b094      	sub	sp, #80	; 0x50
 80087ee:	af00      	add	r7, sp, #0
 80087f0:	2300      	movs	r3, #0
 80087f2:	647b      	str	r3, [r7, #68]	; 0x44
 80087f4:	2300      	movs	r3, #0
 80087f6:	64fb      	str	r3, [r7, #76]	; 0x4c
 80087f8:	2300      	movs	r3, #0
 80087fa:	643b      	str	r3, [r7, #64]	; 0x40
 80087fc:	2300      	movs	r3, #0
 80087fe:	64bb      	str	r3, [r7, #72]	; 0x48
 8008800:	4b79      	ldr	r3, [pc, #484]	; (80089e8 <HAL_RCC_GetSysClockFreq+0x200>)
 8008802:	689b      	ldr	r3, [r3, #8]
 8008804:	f003 030c 	and.w	r3, r3, #12
 8008808:	2b08      	cmp	r3, #8
 800880a:	d00d      	beq.n	8008828 <HAL_RCC_GetSysClockFreq+0x40>
 800880c:	2b08      	cmp	r3, #8
 800880e:	f200 80e1 	bhi.w	80089d4 <HAL_RCC_GetSysClockFreq+0x1ec>
 8008812:	2b00      	cmp	r3, #0
 8008814:	d002      	beq.n	800881c <HAL_RCC_GetSysClockFreq+0x34>
 8008816:	2b04      	cmp	r3, #4
 8008818:	d003      	beq.n	8008822 <HAL_RCC_GetSysClockFreq+0x3a>
 800881a:	e0db      	b.n	80089d4 <HAL_RCC_GetSysClockFreq+0x1ec>
 800881c:	4b73      	ldr	r3, [pc, #460]	; (80089ec <HAL_RCC_GetSysClockFreq+0x204>)
 800881e:	64bb      	str	r3, [r7, #72]	; 0x48
 8008820:	e0db      	b.n	80089da <HAL_RCC_GetSysClockFreq+0x1f2>
 8008822:	4b73      	ldr	r3, [pc, #460]	; (80089f0 <HAL_RCC_GetSysClockFreq+0x208>)
 8008824:	64bb      	str	r3, [r7, #72]	; 0x48
 8008826:	e0d8      	b.n	80089da <HAL_RCC_GetSysClockFreq+0x1f2>
 8008828:	4b6f      	ldr	r3, [pc, #444]	; (80089e8 <HAL_RCC_GetSysClockFreq+0x200>)
 800882a:	685b      	ldr	r3, [r3, #4]
 800882c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8008830:	647b      	str	r3, [r7, #68]	; 0x44
 8008832:	4b6d      	ldr	r3, [pc, #436]	; (80089e8 <HAL_RCC_GetSysClockFreq+0x200>)
 8008834:	685b      	ldr	r3, [r3, #4]
 8008836:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800883a:	2b00      	cmp	r3, #0
 800883c:	d063      	beq.n	8008906 <HAL_RCC_GetSysClockFreq+0x11e>
 800883e:	4b6a      	ldr	r3, [pc, #424]	; (80089e8 <HAL_RCC_GetSysClockFreq+0x200>)
 8008840:	685b      	ldr	r3, [r3, #4]
 8008842:	099b      	lsrs	r3, r3, #6
 8008844:	2200      	movs	r2, #0
 8008846:	63bb      	str	r3, [r7, #56]	; 0x38
 8008848:	63fa      	str	r2, [r7, #60]	; 0x3c
 800884a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800884c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008850:	633b      	str	r3, [r7, #48]	; 0x30
 8008852:	2300      	movs	r3, #0
 8008854:	637b      	str	r3, [r7, #52]	; 0x34
 8008856:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 800885a:	4622      	mov	r2, r4
 800885c:	462b      	mov	r3, r5
 800885e:	f04f 0000 	mov.w	r0, #0
 8008862:	f04f 0100 	mov.w	r1, #0
 8008866:	0159      	lsls	r1, r3, #5
 8008868:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800886c:	0150      	lsls	r0, r2, #5
 800886e:	4602      	mov	r2, r0
 8008870:	460b      	mov	r3, r1
 8008872:	4621      	mov	r1, r4
 8008874:	1a51      	subs	r1, r2, r1
 8008876:	6139      	str	r1, [r7, #16]
 8008878:	4629      	mov	r1, r5
 800887a:	eb63 0301 	sbc.w	r3, r3, r1
 800887e:	617b      	str	r3, [r7, #20]
 8008880:	f04f 0200 	mov.w	r2, #0
 8008884:	f04f 0300 	mov.w	r3, #0
 8008888:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800888c:	4659      	mov	r1, fp
 800888e:	018b      	lsls	r3, r1, #6
 8008890:	4651      	mov	r1, sl
 8008892:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8008896:	4651      	mov	r1, sl
 8008898:	018a      	lsls	r2, r1, #6
 800889a:	4651      	mov	r1, sl
 800889c:	ebb2 0801 	subs.w	r8, r2, r1
 80088a0:	4659      	mov	r1, fp
 80088a2:	eb63 0901 	sbc.w	r9, r3, r1
 80088a6:	f04f 0200 	mov.w	r2, #0
 80088aa:	f04f 0300 	mov.w	r3, #0
 80088ae:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80088b2:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80088b6:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80088ba:	4690      	mov	r8, r2
 80088bc:	4699      	mov	r9, r3
 80088be:	4623      	mov	r3, r4
 80088c0:	eb18 0303 	adds.w	r3, r8, r3
 80088c4:	60bb      	str	r3, [r7, #8]
 80088c6:	462b      	mov	r3, r5
 80088c8:	eb49 0303 	adc.w	r3, r9, r3
 80088cc:	60fb      	str	r3, [r7, #12]
 80088ce:	f04f 0200 	mov.w	r2, #0
 80088d2:	f04f 0300 	mov.w	r3, #0
 80088d6:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80088da:	4629      	mov	r1, r5
 80088dc:	024b      	lsls	r3, r1, #9
 80088de:	4621      	mov	r1, r4
 80088e0:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 80088e4:	4621      	mov	r1, r4
 80088e6:	024a      	lsls	r2, r1, #9
 80088e8:	4610      	mov	r0, r2
 80088ea:	4619      	mov	r1, r3
 80088ec:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80088ee:	2200      	movs	r2, #0
 80088f0:	62bb      	str	r3, [r7, #40]	; 0x28
 80088f2:	62fa      	str	r2, [r7, #44]	; 0x2c
 80088f4:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 80088f8:	f7f8 f94a 	bl	8000b90 <__aeabi_uldivmod>
 80088fc:	4602      	mov	r2, r0
 80088fe:	460b      	mov	r3, r1
 8008900:	4613      	mov	r3, r2
 8008902:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008904:	e058      	b.n	80089b8 <HAL_RCC_GetSysClockFreq+0x1d0>
 8008906:	4b38      	ldr	r3, [pc, #224]	; (80089e8 <HAL_RCC_GetSysClockFreq+0x200>)
 8008908:	685b      	ldr	r3, [r3, #4]
 800890a:	099b      	lsrs	r3, r3, #6
 800890c:	2200      	movs	r2, #0
 800890e:	4618      	mov	r0, r3
 8008910:	4611      	mov	r1, r2
 8008912:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8008916:	623b      	str	r3, [r7, #32]
 8008918:	2300      	movs	r3, #0
 800891a:	627b      	str	r3, [r7, #36]	; 0x24
 800891c:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8008920:	4642      	mov	r2, r8
 8008922:	464b      	mov	r3, r9
 8008924:	f04f 0000 	mov.w	r0, #0
 8008928:	f04f 0100 	mov.w	r1, #0
 800892c:	0159      	lsls	r1, r3, #5
 800892e:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8008932:	0150      	lsls	r0, r2, #5
 8008934:	4602      	mov	r2, r0
 8008936:	460b      	mov	r3, r1
 8008938:	4641      	mov	r1, r8
 800893a:	ebb2 0a01 	subs.w	sl, r2, r1
 800893e:	4649      	mov	r1, r9
 8008940:	eb63 0b01 	sbc.w	fp, r3, r1
 8008944:	f04f 0200 	mov.w	r2, #0
 8008948:	f04f 0300 	mov.w	r3, #0
 800894c:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8008950:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8008954:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8008958:	ebb2 040a 	subs.w	r4, r2, sl
 800895c:	eb63 050b 	sbc.w	r5, r3, fp
 8008960:	f04f 0200 	mov.w	r2, #0
 8008964:	f04f 0300 	mov.w	r3, #0
 8008968:	00eb      	lsls	r3, r5, #3
 800896a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800896e:	00e2      	lsls	r2, r4, #3
 8008970:	4614      	mov	r4, r2
 8008972:	461d      	mov	r5, r3
 8008974:	4643      	mov	r3, r8
 8008976:	18e3      	adds	r3, r4, r3
 8008978:	603b      	str	r3, [r7, #0]
 800897a:	464b      	mov	r3, r9
 800897c:	eb45 0303 	adc.w	r3, r5, r3
 8008980:	607b      	str	r3, [r7, #4]
 8008982:	f04f 0200 	mov.w	r2, #0
 8008986:	f04f 0300 	mov.w	r3, #0
 800898a:	e9d7 4500 	ldrd	r4, r5, [r7]
 800898e:	4629      	mov	r1, r5
 8008990:	028b      	lsls	r3, r1, #10
 8008992:	4621      	mov	r1, r4
 8008994:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8008998:	4621      	mov	r1, r4
 800899a:	028a      	lsls	r2, r1, #10
 800899c:	4610      	mov	r0, r2
 800899e:	4619      	mov	r1, r3
 80089a0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80089a2:	2200      	movs	r2, #0
 80089a4:	61bb      	str	r3, [r7, #24]
 80089a6:	61fa      	str	r2, [r7, #28]
 80089a8:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80089ac:	f7f8 f8f0 	bl	8000b90 <__aeabi_uldivmod>
 80089b0:	4602      	mov	r2, r0
 80089b2:	460b      	mov	r3, r1
 80089b4:	4613      	mov	r3, r2
 80089b6:	64fb      	str	r3, [r7, #76]	; 0x4c
 80089b8:	4b0b      	ldr	r3, [pc, #44]	; (80089e8 <HAL_RCC_GetSysClockFreq+0x200>)
 80089ba:	685b      	ldr	r3, [r3, #4]
 80089bc:	0c1b      	lsrs	r3, r3, #16
 80089be:	f003 0303 	and.w	r3, r3, #3
 80089c2:	3301      	adds	r3, #1
 80089c4:	005b      	lsls	r3, r3, #1
 80089c6:	643b      	str	r3, [r7, #64]	; 0x40
 80089c8:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80089ca:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80089cc:	fbb2 f3f3 	udiv	r3, r2, r3
 80089d0:	64bb      	str	r3, [r7, #72]	; 0x48
 80089d2:	e002      	b.n	80089da <HAL_RCC_GetSysClockFreq+0x1f2>
 80089d4:	4b05      	ldr	r3, [pc, #20]	; (80089ec <HAL_RCC_GetSysClockFreq+0x204>)
 80089d6:	64bb      	str	r3, [r7, #72]	; 0x48
 80089d8:	bf00      	nop
 80089da:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80089dc:	4618      	mov	r0, r3
 80089de:	3750      	adds	r7, #80	; 0x50
 80089e0:	46bd      	mov	sp, r7
 80089e2:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80089e6:	bf00      	nop
 80089e8:	40023800 	.word	0x40023800
 80089ec:	00f42400 	.word	0x00f42400
 80089f0:	007a1200 	.word	0x007a1200

080089f4 <HAL_RCC_GetHCLKFreq>:
 80089f4:	b480      	push	{r7}
 80089f6:	af00      	add	r7, sp, #0
 80089f8:	4b03      	ldr	r3, [pc, #12]	; (8008a08 <HAL_RCC_GetHCLKFreq+0x14>)
 80089fa:	681b      	ldr	r3, [r3, #0]
 80089fc:	4618      	mov	r0, r3
 80089fe:	46bd      	mov	sp, r7
 8008a00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a04:	4770      	bx	lr
 8008a06:	bf00      	nop
 8008a08:	20000134 	.word	0x20000134

08008a0c <HAL_RCC_GetPCLK1Freq>:
 8008a0c:	b580      	push	{r7, lr}
 8008a0e:	af00      	add	r7, sp, #0
 8008a10:	f7ff fff0 	bl	80089f4 <HAL_RCC_GetHCLKFreq>
 8008a14:	4602      	mov	r2, r0
 8008a16:	4b05      	ldr	r3, [pc, #20]	; (8008a2c <HAL_RCC_GetPCLK1Freq+0x20>)
 8008a18:	689b      	ldr	r3, [r3, #8]
 8008a1a:	0a9b      	lsrs	r3, r3, #10
 8008a1c:	f003 0307 	and.w	r3, r3, #7
 8008a20:	4903      	ldr	r1, [pc, #12]	; (8008a30 <HAL_RCC_GetPCLK1Freq+0x24>)
 8008a22:	5ccb      	ldrb	r3, [r1, r3]
 8008a24:	fa22 f303 	lsr.w	r3, r2, r3
 8008a28:	4618      	mov	r0, r3
 8008a2a:	bd80      	pop	{r7, pc}
 8008a2c:	40023800 	.word	0x40023800
 8008a30:	0800bbcc 	.word	0x0800bbcc

08008a34 <HAL_RCC_GetPCLK2Freq>:
 8008a34:	b580      	push	{r7, lr}
 8008a36:	af00      	add	r7, sp, #0
 8008a38:	f7ff ffdc 	bl	80089f4 <HAL_RCC_GetHCLKFreq>
 8008a3c:	4602      	mov	r2, r0
 8008a3e:	4b05      	ldr	r3, [pc, #20]	; (8008a54 <HAL_RCC_GetPCLK2Freq+0x20>)
 8008a40:	689b      	ldr	r3, [r3, #8]
 8008a42:	0b5b      	lsrs	r3, r3, #13
 8008a44:	f003 0307 	and.w	r3, r3, #7
 8008a48:	4903      	ldr	r1, [pc, #12]	; (8008a58 <HAL_RCC_GetPCLK2Freq+0x24>)
 8008a4a:	5ccb      	ldrb	r3, [r1, r3]
 8008a4c:	fa22 f303 	lsr.w	r3, r2, r3
 8008a50:	4618      	mov	r0, r3
 8008a52:	bd80      	pop	{r7, pc}
 8008a54:	40023800 	.word	0x40023800
 8008a58:	0800bbcc 	.word	0x0800bbcc

08008a5c <HAL_SPI_Init>:
 8008a5c:	b580      	push	{r7, lr}
 8008a5e:	b082      	sub	sp, #8
 8008a60:	af00      	add	r7, sp, #0
 8008a62:	6078      	str	r0, [r7, #4]
 8008a64:	687b      	ldr	r3, [r7, #4]
 8008a66:	2b00      	cmp	r3, #0
 8008a68:	d101      	bne.n	8008a6e <HAL_SPI_Init+0x12>
 8008a6a:	2301      	movs	r3, #1
 8008a6c:	e07b      	b.n	8008b66 <HAL_SPI_Init+0x10a>
 8008a6e:	687b      	ldr	r3, [r7, #4]
 8008a70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008a72:	2b00      	cmp	r3, #0
 8008a74:	d108      	bne.n	8008a88 <HAL_SPI_Init+0x2c>
 8008a76:	687b      	ldr	r3, [r7, #4]
 8008a78:	685b      	ldr	r3, [r3, #4]
 8008a7a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8008a7e:	d009      	beq.n	8008a94 <HAL_SPI_Init+0x38>
 8008a80:	687b      	ldr	r3, [r7, #4]
 8008a82:	2200      	movs	r2, #0
 8008a84:	61da      	str	r2, [r3, #28]
 8008a86:	e005      	b.n	8008a94 <HAL_SPI_Init+0x38>
 8008a88:	687b      	ldr	r3, [r7, #4]
 8008a8a:	2200      	movs	r2, #0
 8008a8c:	611a      	str	r2, [r3, #16]
 8008a8e:	687b      	ldr	r3, [r7, #4]
 8008a90:	2200      	movs	r2, #0
 8008a92:	615a      	str	r2, [r3, #20]
 8008a94:	687b      	ldr	r3, [r7, #4]
 8008a96:	2200      	movs	r2, #0
 8008a98:	629a      	str	r2, [r3, #40]	; 0x28
 8008a9a:	687b      	ldr	r3, [r7, #4]
 8008a9c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008aa0:	b2db      	uxtb	r3, r3
 8008aa2:	2b00      	cmp	r3, #0
 8008aa4:	d106      	bne.n	8008ab4 <HAL_SPI_Init+0x58>
 8008aa6:	687b      	ldr	r3, [r7, #4]
 8008aa8:	2200      	movs	r2, #0
 8008aaa:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8008aae:	6878      	ldr	r0, [r7, #4]
 8008ab0:	f7fb fcaa 	bl	8004408 <HAL_SPI_MspInit>
 8008ab4:	687b      	ldr	r3, [r7, #4]
 8008ab6:	2202      	movs	r2, #2
 8008ab8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008abc:	687b      	ldr	r3, [r7, #4]
 8008abe:	681b      	ldr	r3, [r3, #0]
 8008ac0:	681a      	ldr	r2, [r3, #0]
 8008ac2:	687b      	ldr	r3, [r7, #4]
 8008ac4:	681b      	ldr	r3, [r3, #0]
 8008ac6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008aca:	601a      	str	r2, [r3, #0]
 8008acc:	687b      	ldr	r3, [r7, #4]
 8008ace:	685b      	ldr	r3, [r3, #4]
 8008ad0:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8008ad4:	687b      	ldr	r3, [r7, #4]
 8008ad6:	689b      	ldr	r3, [r3, #8]
 8008ad8:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8008adc:	431a      	orrs	r2, r3
 8008ade:	687b      	ldr	r3, [r7, #4]
 8008ae0:	68db      	ldr	r3, [r3, #12]
 8008ae2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8008ae6:	431a      	orrs	r2, r3
 8008ae8:	687b      	ldr	r3, [r7, #4]
 8008aea:	691b      	ldr	r3, [r3, #16]
 8008aec:	f003 0302 	and.w	r3, r3, #2
 8008af0:	431a      	orrs	r2, r3
 8008af2:	687b      	ldr	r3, [r7, #4]
 8008af4:	695b      	ldr	r3, [r3, #20]
 8008af6:	f003 0301 	and.w	r3, r3, #1
 8008afa:	431a      	orrs	r2, r3
 8008afc:	687b      	ldr	r3, [r7, #4]
 8008afe:	699b      	ldr	r3, [r3, #24]
 8008b00:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8008b04:	431a      	orrs	r2, r3
 8008b06:	687b      	ldr	r3, [r7, #4]
 8008b08:	69db      	ldr	r3, [r3, #28]
 8008b0a:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8008b0e:	431a      	orrs	r2, r3
 8008b10:	687b      	ldr	r3, [r7, #4]
 8008b12:	6a1b      	ldr	r3, [r3, #32]
 8008b14:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008b18:	ea42 0103 	orr.w	r1, r2, r3
 8008b1c:	687b      	ldr	r3, [r7, #4]
 8008b1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008b20:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8008b24:	687b      	ldr	r3, [r7, #4]
 8008b26:	681b      	ldr	r3, [r3, #0]
 8008b28:	430a      	orrs	r2, r1
 8008b2a:	601a      	str	r2, [r3, #0]
 8008b2c:	687b      	ldr	r3, [r7, #4]
 8008b2e:	699b      	ldr	r3, [r3, #24]
 8008b30:	0c1b      	lsrs	r3, r3, #16
 8008b32:	f003 0104 	and.w	r1, r3, #4
 8008b36:	687b      	ldr	r3, [r7, #4]
 8008b38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008b3a:	f003 0210 	and.w	r2, r3, #16
 8008b3e:	687b      	ldr	r3, [r7, #4]
 8008b40:	681b      	ldr	r3, [r3, #0]
 8008b42:	430a      	orrs	r2, r1
 8008b44:	605a      	str	r2, [r3, #4]
 8008b46:	687b      	ldr	r3, [r7, #4]
 8008b48:	681b      	ldr	r3, [r3, #0]
 8008b4a:	69da      	ldr	r2, [r3, #28]
 8008b4c:	687b      	ldr	r3, [r7, #4]
 8008b4e:	681b      	ldr	r3, [r3, #0]
 8008b50:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8008b54:	61da      	str	r2, [r3, #28]
 8008b56:	687b      	ldr	r3, [r7, #4]
 8008b58:	2200      	movs	r2, #0
 8008b5a:	655a      	str	r2, [r3, #84]	; 0x54
 8008b5c:	687b      	ldr	r3, [r7, #4]
 8008b5e:	2201      	movs	r2, #1
 8008b60:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008b64:	2300      	movs	r3, #0
 8008b66:	4618      	mov	r0, r3
 8008b68:	3708      	adds	r7, #8
 8008b6a:	46bd      	mov	sp, r7
 8008b6c:	bd80      	pop	{r7, pc}
	...

08008b70 <HAL_SPI_TransmitReceive_DMA>:
 8008b70:	b580      	push	{r7, lr}
 8008b72:	b086      	sub	sp, #24
 8008b74:	af00      	add	r7, sp, #0
 8008b76:	60f8      	str	r0, [r7, #12]
 8008b78:	60b9      	str	r1, [r7, #8]
 8008b7a:	607a      	str	r2, [r7, #4]
 8008b7c:	807b      	strh	r3, [r7, #2]
 8008b7e:	2300      	movs	r3, #0
 8008b80:	75fb      	strb	r3, [r7, #23]
 8008b82:	68fb      	ldr	r3, [r7, #12]
 8008b84:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8008b88:	2b01      	cmp	r3, #1
 8008b8a:	d101      	bne.n	8008b90 <HAL_SPI_TransmitReceive_DMA+0x20>
 8008b8c:	2302      	movs	r3, #2
 8008b8e:	e0e3      	b.n	8008d58 <HAL_SPI_TransmitReceive_DMA+0x1e8>
 8008b90:	68fb      	ldr	r3, [r7, #12]
 8008b92:	2201      	movs	r2, #1
 8008b94:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8008b98:	68fb      	ldr	r3, [r7, #12]
 8008b9a:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008b9e:	75bb      	strb	r3, [r7, #22]
 8008ba0:	68fb      	ldr	r3, [r7, #12]
 8008ba2:	685b      	ldr	r3, [r3, #4]
 8008ba4:	613b      	str	r3, [r7, #16]
 8008ba6:	7dbb      	ldrb	r3, [r7, #22]
 8008ba8:	2b01      	cmp	r3, #1
 8008baa:	d00d      	beq.n	8008bc8 <HAL_SPI_TransmitReceive_DMA+0x58>
 8008bac:	693b      	ldr	r3, [r7, #16]
 8008bae:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8008bb2:	d106      	bne.n	8008bc2 <HAL_SPI_TransmitReceive_DMA+0x52>
 8008bb4:	68fb      	ldr	r3, [r7, #12]
 8008bb6:	689b      	ldr	r3, [r3, #8]
 8008bb8:	2b00      	cmp	r3, #0
 8008bba:	d102      	bne.n	8008bc2 <HAL_SPI_TransmitReceive_DMA+0x52>
 8008bbc:	7dbb      	ldrb	r3, [r7, #22]
 8008bbe:	2b04      	cmp	r3, #4
 8008bc0:	d002      	beq.n	8008bc8 <HAL_SPI_TransmitReceive_DMA+0x58>
 8008bc2:	2302      	movs	r3, #2
 8008bc4:	75fb      	strb	r3, [r7, #23]
 8008bc6:	e0c2      	b.n	8008d4e <HAL_SPI_TransmitReceive_DMA+0x1de>
 8008bc8:	68bb      	ldr	r3, [r7, #8]
 8008bca:	2b00      	cmp	r3, #0
 8008bcc:	d005      	beq.n	8008bda <HAL_SPI_TransmitReceive_DMA+0x6a>
 8008bce:	687b      	ldr	r3, [r7, #4]
 8008bd0:	2b00      	cmp	r3, #0
 8008bd2:	d002      	beq.n	8008bda <HAL_SPI_TransmitReceive_DMA+0x6a>
 8008bd4:	887b      	ldrh	r3, [r7, #2]
 8008bd6:	2b00      	cmp	r3, #0
 8008bd8:	d102      	bne.n	8008be0 <HAL_SPI_TransmitReceive_DMA+0x70>
 8008bda:	2301      	movs	r3, #1
 8008bdc:	75fb      	strb	r3, [r7, #23]
 8008bde:	e0b6      	b.n	8008d4e <HAL_SPI_TransmitReceive_DMA+0x1de>
 8008be0:	68fb      	ldr	r3, [r7, #12]
 8008be2:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008be6:	b2db      	uxtb	r3, r3
 8008be8:	2b04      	cmp	r3, #4
 8008bea:	d003      	beq.n	8008bf4 <HAL_SPI_TransmitReceive_DMA+0x84>
 8008bec:	68fb      	ldr	r3, [r7, #12]
 8008bee:	2205      	movs	r2, #5
 8008bf0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008bf4:	68fb      	ldr	r3, [r7, #12]
 8008bf6:	2200      	movs	r2, #0
 8008bf8:	655a      	str	r2, [r3, #84]	; 0x54
 8008bfa:	68fb      	ldr	r3, [r7, #12]
 8008bfc:	68ba      	ldr	r2, [r7, #8]
 8008bfe:	631a      	str	r2, [r3, #48]	; 0x30
 8008c00:	68fb      	ldr	r3, [r7, #12]
 8008c02:	887a      	ldrh	r2, [r7, #2]
 8008c04:	869a      	strh	r2, [r3, #52]	; 0x34
 8008c06:	68fb      	ldr	r3, [r7, #12]
 8008c08:	887a      	ldrh	r2, [r7, #2]
 8008c0a:	86da      	strh	r2, [r3, #54]	; 0x36
 8008c0c:	68fb      	ldr	r3, [r7, #12]
 8008c0e:	687a      	ldr	r2, [r7, #4]
 8008c10:	639a      	str	r2, [r3, #56]	; 0x38
 8008c12:	68fb      	ldr	r3, [r7, #12]
 8008c14:	887a      	ldrh	r2, [r7, #2]
 8008c16:	879a      	strh	r2, [r3, #60]	; 0x3c
 8008c18:	68fb      	ldr	r3, [r7, #12]
 8008c1a:	887a      	ldrh	r2, [r7, #2]
 8008c1c:	87da      	strh	r2, [r3, #62]	; 0x3e
 8008c1e:	68fb      	ldr	r3, [r7, #12]
 8008c20:	2200      	movs	r2, #0
 8008c22:	641a      	str	r2, [r3, #64]	; 0x40
 8008c24:	68fb      	ldr	r3, [r7, #12]
 8008c26:	2200      	movs	r2, #0
 8008c28:	645a      	str	r2, [r3, #68]	; 0x44
 8008c2a:	68fb      	ldr	r3, [r7, #12]
 8008c2c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008c30:	b2db      	uxtb	r3, r3
 8008c32:	2b04      	cmp	r3, #4
 8008c34:	d108      	bne.n	8008c48 <HAL_SPI_TransmitReceive_DMA+0xd8>
 8008c36:	68fb      	ldr	r3, [r7, #12]
 8008c38:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008c3a:	4a49      	ldr	r2, [pc, #292]	; (8008d60 <HAL_SPI_TransmitReceive_DMA+0x1f0>)
 8008c3c:	641a      	str	r2, [r3, #64]	; 0x40
 8008c3e:	68fb      	ldr	r3, [r7, #12]
 8008c40:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008c42:	4a48      	ldr	r2, [pc, #288]	; (8008d64 <HAL_SPI_TransmitReceive_DMA+0x1f4>)
 8008c44:	63da      	str	r2, [r3, #60]	; 0x3c
 8008c46:	e007      	b.n	8008c58 <HAL_SPI_TransmitReceive_DMA+0xe8>
 8008c48:	68fb      	ldr	r3, [r7, #12]
 8008c4a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008c4c:	4a46      	ldr	r2, [pc, #280]	; (8008d68 <HAL_SPI_TransmitReceive_DMA+0x1f8>)
 8008c4e:	641a      	str	r2, [r3, #64]	; 0x40
 8008c50:	68fb      	ldr	r3, [r7, #12]
 8008c52:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008c54:	4a45      	ldr	r2, [pc, #276]	; (8008d6c <HAL_SPI_TransmitReceive_DMA+0x1fc>)
 8008c56:	63da      	str	r2, [r3, #60]	; 0x3c
 8008c58:	68fb      	ldr	r3, [r7, #12]
 8008c5a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008c5c:	4a44      	ldr	r2, [pc, #272]	; (8008d70 <HAL_SPI_TransmitReceive_DMA+0x200>)
 8008c5e:	64da      	str	r2, [r3, #76]	; 0x4c
 8008c60:	68fb      	ldr	r3, [r7, #12]
 8008c62:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008c64:	2200      	movs	r2, #0
 8008c66:	651a      	str	r2, [r3, #80]	; 0x50
 8008c68:	68fb      	ldr	r3, [r7, #12]
 8008c6a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8008c6c:	68fb      	ldr	r3, [r7, #12]
 8008c6e:	681b      	ldr	r3, [r3, #0]
 8008c70:	330c      	adds	r3, #12
 8008c72:	4619      	mov	r1, r3
 8008c74:	68fb      	ldr	r3, [r7, #12]
 8008c76:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008c78:	461a      	mov	r2, r3
 8008c7a:	68fb      	ldr	r3, [r7, #12]
 8008c7c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8008c7e:	b29b      	uxth	r3, r3
 8008c80:	f7fc f8b4 	bl	8004dec <HAL_DMA_Start_IT>
 8008c84:	4603      	mov	r3, r0
 8008c86:	2b00      	cmp	r3, #0
 8008c88:	d00c      	beq.n	8008ca4 <HAL_SPI_TransmitReceive_DMA+0x134>
 8008c8a:	68fb      	ldr	r3, [r7, #12]
 8008c8c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008c8e:	f043 0210 	orr.w	r2, r3, #16
 8008c92:	68fb      	ldr	r3, [r7, #12]
 8008c94:	655a      	str	r2, [r3, #84]	; 0x54
 8008c96:	2301      	movs	r3, #1
 8008c98:	75fb      	strb	r3, [r7, #23]
 8008c9a:	68fb      	ldr	r3, [r7, #12]
 8008c9c:	2201      	movs	r2, #1
 8008c9e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008ca2:	e054      	b.n	8008d4e <HAL_SPI_TransmitReceive_DMA+0x1de>
 8008ca4:	68fb      	ldr	r3, [r7, #12]
 8008ca6:	681b      	ldr	r3, [r3, #0]
 8008ca8:	685a      	ldr	r2, [r3, #4]
 8008caa:	68fb      	ldr	r3, [r7, #12]
 8008cac:	681b      	ldr	r3, [r3, #0]
 8008cae:	f042 0201 	orr.w	r2, r2, #1
 8008cb2:	605a      	str	r2, [r3, #4]
 8008cb4:	68fb      	ldr	r3, [r7, #12]
 8008cb6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008cb8:	2200      	movs	r2, #0
 8008cba:	641a      	str	r2, [r3, #64]	; 0x40
 8008cbc:	68fb      	ldr	r3, [r7, #12]
 8008cbe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008cc0:	2200      	movs	r2, #0
 8008cc2:	63da      	str	r2, [r3, #60]	; 0x3c
 8008cc4:	68fb      	ldr	r3, [r7, #12]
 8008cc6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008cc8:	2200      	movs	r2, #0
 8008cca:	64da      	str	r2, [r3, #76]	; 0x4c
 8008ccc:	68fb      	ldr	r3, [r7, #12]
 8008cce:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008cd0:	2200      	movs	r2, #0
 8008cd2:	651a      	str	r2, [r3, #80]	; 0x50
 8008cd4:	68fb      	ldr	r3, [r7, #12]
 8008cd6:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8008cd8:	68fb      	ldr	r3, [r7, #12]
 8008cda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008cdc:	4619      	mov	r1, r3
 8008cde:	68fb      	ldr	r3, [r7, #12]
 8008ce0:	681b      	ldr	r3, [r3, #0]
 8008ce2:	330c      	adds	r3, #12
 8008ce4:	461a      	mov	r2, r3
 8008ce6:	68fb      	ldr	r3, [r7, #12]
 8008ce8:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8008cea:	b29b      	uxth	r3, r3
 8008cec:	f7fc f87e 	bl	8004dec <HAL_DMA_Start_IT>
 8008cf0:	4603      	mov	r3, r0
 8008cf2:	2b00      	cmp	r3, #0
 8008cf4:	d00c      	beq.n	8008d10 <HAL_SPI_TransmitReceive_DMA+0x1a0>
 8008cf6:	68fb      	ldr	r3, [r7, #12]
 8008cf8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008cfa:	f043 0210 	orr.w	r2, r3, #16
 8008cfe:	68fb      	ldr	r3, [r7, #12]
 8008d00:	655a      	str	r2, [r3, #84]	; 0x54
 8008d02:	2301      	movs	r3, #1
 8008d04:	75fb      	strb	r3, [r7, #23]
 8008d06:	68fb      	ldr	r3, [r7, #12]
 8008d08:	2201      	movs	r2, #1
 8008d0a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008d0e:	e01e      	b.n	8008d4e <HAL_SPI_TransmitReceive_DMA+0x1de>
 8008d10:	68fb      	ldr	r3, [r7, #12]
 8008d12:	681b      	ldr	r3, [r3, #0]
 8008d14:	681b      	ldr	r3, [r3, #0]
 8008d16:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008d1a:	2b40      	cmp	r3, #64	; 0x40
 8008d1c:	d007      	beq.n	8008d2e <HAL_SPI_TransmitReceive_DMA+0x1be>
 8008d1e:	68fb      	ldr	r3, [r7, #12]
 8008d20:	681b      	ldr	r3, [r3, #0]
 8008d22:	681a      	ldr	r2, [r3, #0]
 8008d24:	68fb      	ldr	r3, [r7, #12]
 8008d26:	681b      	ldr	r3, [r3, #0]
 8008d28:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8008d2c:	601a      	str	r2, [r3, #0]
 8008d2e:	68fb      	ldr	r3, [r7, #12]
 8008d30:	681b      	ldr	r3, [r3, #0]
 8008d32:	685a      	ldr	r2, [r3, #4]
 8008d34:	68fb      	ldr	r3, [r7, #12]
 8008d36:	681b      	ldr	r3, [r3, #0]
 8008d38:	f042 0220 	orr.w	r2, r2, #32
 8008d3c:	605a      	str	r2, [r3, #4]
 8008d3e:	68fb      	ldr	r3, [r7, #12]
 8008d40:	681b      	ldr	r3, [r3, #0]
 8008d42:	685a      	ldr	r2, [r3, #4]
 8008d44:	68fb      	ldr	r3, [r7, #12]
 8008d46:	681b      	ldr	r3, [r3, #0]
 8008d48:	f042 0202 	orr.w	r2, r2, #2
 8008d4c:	605a      	str	r2, [r3, #4]
 8008d4e:	68fb      	ldr	r3, [r7, #12]
 8008d50:	2200      	movs	r2, #0
 8008d52:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8008d56:	7dfb      	ldrb	r3, [r7, #23]
 8008d58:	4618      	mov	r0, r3
 8008d5a:	3718      	adds	r7, #24
 8008d5c:	46bd      	mov	sp, r7
 8008d5e:	bd80      	pop	{r7, pc}
 8008d60:	0800917d 	.word	0x0800917d
 8008d64:	08009045 	.word	0x08009045
 8008d68:	08009199 	.word	0x08009199
 8008d6c:	080090ed 	.word	0x080090ed
 8008d70:	080091b5 	.word	0x080091b5

08008d74 <HAL_SPI_DMAStop>:
 8008d74:	b580      	push	{r7, lr}
 8008d76:	b084      	sub	sp, #16
 8008d78:	af00      	add	r7, sp, #0
 8008d7a:	6078      	str	r0, [r7, #4]
 8008d7c:	2300      	movs	r3, #0
 8008d7e:	73fb      	strb	r3, [r7, #15]
 8008d80:	687b      	ldr	r3, [r7, #4]
 8008d82:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008d84:	2b00      	cmp	r3, #0
 8008d86:	d00f      	beq.n	8008da8 <HAL_SPI_DMAStop+0x34>
 8008d88:	687b      	ldr	r3, [r7, #4]
 8008d8a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008d8c:	4618      	mov	r0, r3
 8008d8e:	f7fc f885 	bl	8004e9c <HAL_DMA_Abort>
 8008d92:	4603      	mov	r3, r0
 8008d94:	2b00      	cmp	r3, #0
 8008d96:	d007      	beq.n	8008da8 <HAL_SPI_DMAStop+0x34>
 8008d98:	687b      	ldr	r3, [r7, #4]
 8008d9a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008d9c:	f043 0210 	orr.w	r2, r3, #16
 8008da0:	687b      	ldr	r3, [r7, #4]
 8008da2:	655a      	str	r2, [r3, #84]	; 0x54
 8008da4:	2301      	movs	r3, #1
 8008da6:	73fb      	strb	r3, [r7, #15]
 8008da8:	687b      	ldr	r3, [r7, #4]
 8008daa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008dac:	2b00      	cmp	r3, #0
 8008dae:	d00f      	beq.n	8008dd0 <HAL_SPI_DMAStop+0x5c>
 8008db0:	687b      	ldr	r3, [r7, #4]
 8008db2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008db4:	4618      	mov	r0, r3
 8008db6:	f7fc f871 	bl	8004e9c <HAL_DMA_Abort>
 8008dba:	4603      	mov	r3, r0
 8008dbc:	2b00      	cmp	r3, #0
 8008dbe:	d007      	beq.n	8008dd0 <HAL_SPI_DMAStop+0x5c>
 8008dc0:	687b      	ldr	r3, [r7, #4]
 8008dc2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008dc4:	f043 0210 	orr.w	r2, r3, #16
 8008dc8:	687b      	ldr	r3, [r7, #4]
 8008dca:	655a      	str	r2, [r3, #84]	; 0x54
 8008dcc:	2301      	movs	r3, #1
 8008dce:	73fb      	strb	r3, [r7, #15]
 8008dd0:	687b      	ldr	r3, [r7, #4]
 8008dd2:	681b      	ldr	r3, [r3, #0]
 8008dd4:	685a      	ldr	r2, [r3, #4]
 8008dd6:	687b      	ldr	r3, [r7, #4]
 8008dd8:	681b      	ldr	r3, [r3, #0]
 8008dda:	f022 0203 	bic.w	r2, r2, #3
 8008dde:	605a      	str	r2, [r3, #4]
 8008de0:	687b      	ldr	r3, [r7, #4]
 8008de2:	2201      	movs	r2, #1
 8008de4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008de8:	7bfb      	ldrb	r3, [r7, #15]
 8008dea:	4618      	mov	r0, r3
 8008dec:	3710      	adds	r7, #16
 8008dee:	46bd      	mov	sp, r7
 8008df0:	bd80      	pop	{r7, pc}
	...

08008df4 <HAL_SPI_IRQHandler>:
 8008df4:	b580      	push	{r7, lr}
 8008df6:	b088      	sub	sp, #32
 8008df8:	af00      	add	r7, sp, #0
 8008dfa:	6078      	str	r0, [r7, #4]
 8008dfc:	687b      	ldr	r3, [r7, #4]
 8008dfe:	681b      	ldr	r3, [r3, #0]
 8008e00:	685b      	ldr	r3, [r3, #4]
 8008e02:	61fb      	str	r3, [r7, #28]
 8008e04:	687b      	ldr	r3, [r7, #4]
 8008e06:	681b      	ldr	r3, [r3, #0]
 8008e08:	689b      	ldr	r3, [r3, #8]
 8008e0a:	61bb      	str	r3, [r7, #24]
 8008e0c:	69bb      	ldr	r3, [r7, #24]
 8008e0e:	099b      	lsrs	r3, r3, #6
 8008e10:	f003 0301 	and.w	r3, r3, #1
 8008e14:	2b00      	cmp	r3, #0
 8008e16:	d10f      	bne.n	8008e38 <HAL_SPI_IRQHandler+0x44>
 8008e18:	69bb      	ldr	r3, [r7, #24]
 8008e1a:	f003 0301 	and.w	r3, r3, #1
 8008e1e:	2b00      	cmp	r3, #0
 8008e20:	d00a      	beq.n	8008e38 <HAL_SPI_IRQHandler+0x44>
 8008e22:	69fb      	ldr	r3, [r7, #28]
 8008e24:	099b      	lsrs	r3, r3, #6
 8008e26:	f003 0301 	and.w	r3, r3, #1
 8008e2a:	2b00      	cmp	r3, #0
 8008e2c:	d004      	beq.n	8008e38 <HAL_SPI_IRQHandler+0x44>
 8008e2e:	687b      	ldr	r3, [r7, #4]
 8008e30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008e32:	6878      	ldr	r0, [r7, #4]
 8008e34:	4798      	blx	r3
 8008e36:	e0d7      	b.n	8008fe8 <HAL_SPI_IRQHandler+0x1f4>
 8008e38:	69bb      	ldr	r3, [r7, #24]
 8008e3a:	085b      	lsrs	r3, r3, #1
 8008e3c:	f003 0301 	and.w	r3, r3, #1
 8008e40:	2b00      	cmp	r3, #0
 8008e42:	d00a      	beq.n	8008e5a <HAL_SPI_IRQHandler+0x66>
 8008e44:	69fb      	ldr	r3, [r7, #28]
 8008e46:	09db      	lsrs	r3, r3, #7
 8008e48:	f003 0301 	and.w	r3, r3, #1
 8008e4c:	2b00      	cmp	r3, #0
 8008e4e:	d004      	beq.n	8008e5a <HAL_SPI_IRQHandler+0x66>
 8008e50:	687b      	ldr	r3, [r7, #4]
 8008e52:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008e54:	6878      	ldr	r0, [r7, #4]
 8008e56:	4798      	blx	r3
 8008e58:	e0c6      	b.n	8008fe8 <HAL_SPI_IRQHandler+0x1f4>
 8008e5a:	69bb      	ldr	r3, [r7, #24]
 8008e5c:	095b      	lsrs	r3, r3, #5
 8008e5e:	f003 0301 	and.w	r3, r3, #1
 8008e62:	2b00      	cmp	r3, #0
 8008e64:	d10c      	bne.n	8008e80 <HAL_SPI_IRQHandler+0x8c>
 8008e66:	69bb      	ldr	r3, [r7, #24]
 8008e68:	099b      	lsrs	r3, r3, #6
 8008e6a:	f003 0301 	and.w	r3, r3, #1
 8008e6e:	2b00      	cmp	r3, #0
 8008e70:	d106      	bne.n	8008e80 <HAL_SPI_IRQHandler+0x8c>
 8008e72:	69bb      	ldr	r3, [r7, #24]
 8008e74:	0a1b      	lsrs	r3, r3, #8
 8008e76:	f003 0301 	and.w	r3, r3, #1
 8008e7a:	2b00      	cmp	r3, #0
 8008e7c:	f000 80b4 	beq.w	8008fe8 <HAL_SPI_IRQHandler+0x1f4>
 8008e80:	69fb      	ldr	r3, [r7, #28]
 8008e82:	095b      	lsrs	r3, r3, #5
 8008e84:	f003 0301 	and.w	r3, r3, #1
 8008e88:	2b00      	cmp	r3, #0
 8008e8a:	f000 80ad 	beq.w	8008fe8 <HAL_SPI_IRQHandler+0x1f4>
 8008e8e:	69bb      	ldr	r3, [r7, #24]
 8008e90:	099b      	lsrs	r3, r3, #6
 8008e92:	f003 0301 	and.w	r3, r3, #1
 8008e96:	2b00      	cmp	r3, #0
 8008e98:	d023      	beq.n	8008ee2 <HAL_SPI_IRQHandler+0xee>
 8008e9a:	687b      	ldr	r3, [r7, #4]
 8008e9c:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008ea0:	b2db      	uxtb	r3, r3
 8008ea2:	2b03      	cmp	r3, #3
 8008ea4:	d011      	beq.n	8008eca <HAL_SPI_IRQHandler+0xd6>
 8008ea6:	687b      	ldr	r3, [r7, #4]
 8008ea8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008eaa:	f043 0204 	orr.w	r2, r3, #4
 8008eae:	687b      	ldr	r3, [r7, #4]
 8008eb0:	655a      	str	r2, [r3, #84]	; 0x54
 8008eb2:	2300      	movs	r3, #0
 8008eb4:	617b      	str	r3, [r7, #20]
 8008eb6:	687b      	ldr	r3, [r7, #4]
 8008eb8:	681b      	ldr	r3, [r3, #0]
 8008eba:	68db      	ldr	r3, [r3, #12]
 8008ebc:	617b      	str	r3, [r7, #20]
 8008ebe:	687b      	ldr	r3, [r7, #4]
 8008ec0:	681b      	ldr	r3, [r3, #0]
 8008ec2:	689b      	ldr	r3, [r3, #8]
 8008ec4:	617b      	str	r3, [r7, #20]
 8008ec6:	697b      	ldr	r3, [r7, #20]
 8008ec8:	e00b      	b.n	8008ee2 <HAL_SPI_IRQHandler+0xee>
 8008eca:	2300      	movs	r3, #0
 8008ecc:	613b      	str	r3, [r7, #16]
 8008ece:	687b      	ldr	r3, [r7, #4]
 8008ed0:	681b      	ldr	r3, [r3, #0]
 8008ed2:	68db      	ldr	r3, [r3, #12]
 8008ed4:	613b      	str	r3, [r7, #16]
 8008ed6:	687b      	ldr	r3, [r7, #4]
 8008ed8:	681b      	ldr	r3, [r3, #0]
 8008eda:	689b      	ldr	r3, [r3, #8]
 8008edc:	613b      	str	r3, [r7, #16]
 8008ede:	693b      	ldr	r3, [r7, #16]
 8008ee0:	e082      	b.n	8008fe8 <HAL_SPI_IRQHandler+0x1f4>
 8008ee2:	69bb      	ldr	r3, [r7, #24]
 8008ee4:	095b      	lsrs	r3, r3, #5
 8008ee6:	f003 0301 	and.w	r3, r3, #1
 8008eea:	2b00      	cmp	r3, #0
 8008eec:	d014      	beq.n	8008f18 <HAL_SPI_IRQHandler+0x124>
 8008eee:	687b      	ldr	r3, [r7, #4]
 8008ef0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008ef2:	f043 0201 	orr.w	r2, r3, #1
 8008ef6:	687b      	ldr	r3, [r7, #4]
 8008ef8:	655a      	str	r2, [r3, #84]	; 0x54
 8008efa:	2300      	movs	r3, #0
 8008efc:	60fb      	str	r3, [r7, #12]
 8008efe:	687b      	ldr	r3, [r7, #4]
 8008f00:	681b      	ldr	r3, [r3, #0]
 8008f02:	689b      	ldr	r3, [r3, #8]
 8008f04:	60fb      	str	r3, [r7, #12]
 8008f06:	687b      	ldr	r3, [r7, #4]
 8008f08:	681b      	ldr	r3, [r3, #0]
 8008f0a:	681a      	ldr	r2, [r3, #0]
 8008f0c:	687b      	ldr	r3, [r7, #4]
 8008f0e:	681b      	ldr	r3, [r3, #0]
 8008f10:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008f14:	601a      	str	r2, [r3, #0]
 8008f16:	68fb      	ldr	r3, [r7, #12]
 8008f18:	69bb      	ldr	r3, [r7, #24]
 8008f1a:	0a1b      	lsrs	r3, r3, #8
 8008f1c:	f003 0301 	and.w	r3, r3, #1
 8008f20:	2b00      	cmp	r3, #0
 8008f22:	d00c      	beq.n	8008f3e <HAL_SPI_IRQHandler+0x14a>
 8008f24:	687b      	ldr	r3, [r7, #4]
 8008f26:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008f28:	f043 0208 	orr.w	r2, r3, #8
 8008f2c:	687b      	ldr	r3, [r7, #4]
 8008f2e:	655a      	str	r2, [r3, #84]	; 0x54
 8008f30:	2300      	movs	r3, #0
 8008f32:	60bb      	str	r3, [r7, #8]
 8008f34:	687b      	ldr	r3, [r7, #4]
 8008f36:	681b      	ldr	r3, [r3, #0]
 8008f38:	689b      	ldr	r3, [r3, #8]
 8008f3a:	60bb      	str	r3, [r7, #8]
 8008f3c:	68bb      	ldr	r3, [r7, #8]
 8008f3e:	687b      	ldr	r3, [r7, #4]
 8008f40:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008f42:	2b00      	cmp	r3, #0
 8008f44:	d04f      	beq.n	8008fe6 <HAL_SPI_IRQHandler+0x1f2>
 8008f46:	687b      	ldr	r3, [r7, #4]
 8008f48:	681b      	ldr	r3, [r3, #0]
 8008f4a:	685a      	ldr	r2, [r3, #4]
 8008f4c:	687b      	ldr	r3, [r7, #4]
 8008f4e:	681b      	ldr	r3, [r3, #0]
 8008f50:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8008f54:	605a      	str	r2, [r3, #4]
 8008f56:	687b      	ldr	r3, [r7, #4]
 8008f58:	2201      	movs	r2, #1
 8008f5a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008f5e:	69fb      	ldr	r3, [r7, #28]
 8008f60:	f003 0302 	and.w	r3, r3, #2
 8008f64:	2b00      	cmp	r3, #0
 8008f66:	d104      	bne.n	8008f72 <HAL_SPI_IRQHandler+0x17e>
 8008f68:	69fb      	ldr	r3, [r7, #28]
 8008f6a:	f003 0301 	and.w	r3, r3, #1
 8008f6e:	2b00      	cmp	r3, #0
 8008f70:	d034      	beq.n	8008fdc <HAL_SPI_IRQHandler+0x1e8>
 8008f72:	687b      	ldr	r3, [r7, #4]
 8008f74:	681b      	ldr	r3, [r3, #0]
 8008f76:	685a      	ldr	r2, [r3, #4]
 8008f78:	687b      	ldr	r3, [r7, #4]
 8008f7a:	681b      	ldr	r3, [r3, #0]
 8008f7c:	f022 0203 	bic.w	r2, r2, #3
 8008f80:	605a      	str	r2, [r3, #4]
 8008f82:	687b      	ldr	r3, [r7, #4]
 8008f84:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008f86:	2b00      	cmp	r3, #0
 8008f88:	d011      	beq.n	8008fae <HAL_SPI_IRQHandler+0x1ba>
 8008f8a:	687b      	ldr	r3, [r7, #4]
 8008f8c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008f8e:	4a18      	ldr	r2, [pc, #96]	; (8008ff0 <HAL_SPI_IRQHandler+0x1fc>)
 8008f90:	651a      	str	r2, [r3, #80]	; 0x50
 8008f92:	687b      	ldr	r3, [r7, #4]
 8008f94:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008f96:	4618      	mov	r0, r3
 8008f98:	f7fb fff0 	bl	8004f7c <HAL_DMA_Abort_IT>
 8008f9c:	4603      	mov	r3, r0
 8008f9e:	2b00      	cmp	r3, #0
 8008fa0:	d005      	beq.n	8008fae <HAL_SPI_IRQHandler+0x1ba>
 8008fa2:	687b      	ldr	r3, [r7, #4]
 8008fa4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008fa6:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8008faa:	687b      	ldr	r3, [r7, #4]
 8008fac:	655a      	str	r2, [r3, #84]	; 0x54
 8008fae:	687b      	ldr	r3, [r7, #4]
 8008fb0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008fb2:	2b00      	cmp	r3, #0
 8008fb4:	d016      	beq.n	8008fe4 <HAL_SPI_IRQHandler+0x1f0>
 8008fb6:	687b      	ldr	r3, [r7, #4]
 8008fb8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008fba:	4a0d      	ldr	r2, [pc, #52]	; (8008ff0 <HAL_SPI_IRQHandler+0x1fc>)
 8008fbc:	651a      	str	r2, [r3, #80]	; 0x50
 8008fbe:	687b      	ldr	r3, [r7, #4]
 8008fc0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008fc2:	4618      	mov	r0, r3
 8008fc4:	f7fb ffda 	bl	8004f7c <HAL_DMA_Abort_IT>
 8008fc8:	4603      	mov	r3, r0
 8008fca:	2b00      	cmp	r3, #0
 8008fcc:	d00a      	beq.n	8008fe4 <HAL_SPI_IRQHandler+0x1f0>
 8008fce:	687b      	ldr	r3, [r7, #4]
 8008fd0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008fd2:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8008fd6:	687b      	ldr	r3, [r7, #4]
 8008fd8:	655a      	str	r2, [r3, #84]	; 0x54
 8008fda:	e003      	b.n	8008fe4 <HAL_SPI_IRQHandler+0x1f0>
 8008fdc:	6878      	ldr	r0, [r7, #4]
 8008fde:	f000 f827 	bl	8009030 <HAL_SPI_ErrorCallback>
 8008fe2:	e000      	b.n	8008fe6 <HAL_SPI_IRQHandler+0x1f2>
 8008fe4:	bf00      	nop
 8008fe6:	bf00      	nop
 8008fe8:	3720      	adds	r7, #32
 8008fea:	46bd      	mov	sp, r7
 8008fec:	bd80      	pop	{r7, pc}
 8008fee:	bf00      	nop
 8008ff0:	080091f5 	.word	0x080091f5

08008ff4 <HAL_SPI_RxCpltCallback>:
 8008ff4:	b480      	push	{r7}
 8008ff6:	b083      	sub	sp, #12
 8008ff8:	af00      	add	r7, sp, #0
 8008ffa:	6078      	str	r0, [r7, #4]
 8008ffc:	bf00      	nop
 8008ffe:	370c      	adds	r7, #12
 8009000:	46bd      	mov	sp, r7
 8009002:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009006:	4770      	bx	lr

08009008 <HAL_SPI_RxHalfCpltCallback>:
 8009008:	b480      	push	{r7}
 800900a:	b083      	sub	sp, #12
 800900c:	af00      	add	r7, sp, #0
 800900e:	6078      	str	r0, [r7, #4]
 8009010:	bf00      	nop
 8009012:	370c      	adds	r7, #12
 8009014:	46bd      	mov	sp, r7
 8009016:	f85d 7b04 	ldr.w	r7, [sp], #4
 800901a:	4770      	bx	lr

0800901c <HAL_SPI_TxRxHalfCpltCallback>:
 800901c:	b480      	push	{r7}
 800901e:	b083      	sub	sp, #12
 8009020:	af00      	add	r7, sp, #0
 8009022:	6078      	str	r0, [r7, #4]
 8009024:	bf00      	nop
 8009026:	370c      	adds	r7, #12
 8009028:	46bd      	mov	sp, r7
 800902a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800902e:	4770      	bx	lr

08009030 <HAL_SPI_ErrorCallback>:
 8009030:	b480      	push	{r7}
 8009032:	b083      	sub	sp, #12
 8009034:	af00      	add	r7, sp, #0
 8009036:	6078      	str	r0, [r7, #4]
 8009038:	bf00      	nop
 800903a:	370c      	adds	r7, #12
 800903c:	46bd      	mov	sp, r7
 800903e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009042:	4770      	bx	lr

08009044 <SPI_DMAReceiveCplt>:
 8009044:	b580      	push	{r7, lr}
 8009046:	b084      	sub	sp, #16
 8009048:	af00      	add	r7, sp, #0
 800904a:	6078      	str	r0, [r7, #4]
 800904c:	687b      	ldr	r3, [r7, #4]
 800904e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009050:	60fb      	str	r3, [r7, #12]
 8009052:	f7fb fcff 	bl	8004a54 <HAL_GetTick>
 8009056:	60b8      	str	r0, [r7, #8]
 8009058:	687b      	ldr	r3, [r7, #4]
 800905a:	681b      	ldr	r3, [r3, #0]
 800905c:	681b      	ldr	r3, [r3, #0]
 800905e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009062:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009066:	d03b      	beq.n	80090e0 <SPI_DMAReceiveCplt+0x9c>
 8009068:	68fb      	ldr	r3, [r7, #12]
 800906a:	681b      	ldr	r3, [r3, #0]
 800906c:	685a      	ldr	r2, [r3, #4]
 800906e:	68fb      	ldr	r3, [r7, #12]
 8009070:	681b      	ldr	r3, [r3, #0]
 8009072:	f022 0220 	bic.w	r2, r2, #32
 8009076:	605a      	str	r2, [r3, #4]
 8009078:	68fb      	ldr	r3, [r7, #12]
 800907a:	689b      	ldr	r3, [r3, #8]
 800907c:	2b00      	cmp	r3, #0
 800907e:	d10d      	bne.n	800909c <SPI_DMAReceiveCplt+0x58>
 8009080:	68fb      	ldr	r3, [r7, #12]
 8009082:	685b      	ldr	r3, [r3, #4]
 8009084:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8009088:	d108      	bne.n	800909c <SPI_DMAReceiveCplt+0x58>
 800908a:	68fb      	ldr	r3, [r7, #12]
 800908c:	681b      	ldr	r3, [r3, #0]
 800908e:	685a      	ldr	r2, [r3, #4]
 8009090:	68fb      	ldr	r3, [r7, #12]
 8009092:	681b      	ldr	r3, [r3, #0]
 8009094:	f022 0203 	bic.w	r2, r2, #3
 8009098:	605a      	str	r2, [r3, #4]
 800909a:	e007      	b.n	80090ac <SPI_DMAReceiveCplt+0x68>
 800909c:	68fb      	ldr	r3, [r7, #12]
 800909e:	681b      	ldr	r3, [r3, #0]
 80090a0:	685a      	ldr	r2, [r3, #4]
 80090a2:	68fb      	ldr	r3, [r7, #12]
 80090a4:	681b      	ldr	r3, [r3, #0]
 80090a6:	f022 0201 	bic.w	r2, r2, #1
 80090aa:	605a      	str	r2, [r3, #4]
 80090ac:	68ba      	ldr	r2, [r7, #8]
 80090ae:	2164      	movs	r1, #100	; 0x64
 80090b0:	68f8      	ldr	r0, [r7, #12]
 80090b2:	f000 f93b 	bl	800932c <SPI_EndRxTransaction>
 80090b6:	4603      	mov	r3, r0
 80090b8:	2b00      	cmp	r3, #0
 80090ba:	d002      	beq.n	80090c2 <SPI_DMAReceiveCplt+0x7e>
 80090bc:	68fb      	ldr	r3, [r7, #12]
 80090be:	2220      	movs	r2, #32
 80090c0:	655a      	str	r2, [r3, #84]	; 0x54
 80090c2:	68fb      	ldr	r3, [r7, #12]
 80090c4:	2200      	movs	r2, #0
 80090c6:	87da      	strh	r2, [r3, #62]	; 0x3e
 80090c8:	68fb      	ldr	r3, [r7, #12]
 80090ca:	2201      	movs	r2, #1
 80090cc:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80090d0:	68fb      	ldr	r3, [r7, #12]
 80090d2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80090d4:	2b00      	cmp	r3, #0
 80090d6:	d003      	beq.n	80090e0 <SPI_DMAReceiveCplt+0x9c>
 80090d8:	68f8      	ldr	r0, [r7, #12]
 80090da:	f7ff ffa9 	bl	8009030 <HAL_SPI_ErrorCallback>
 80090de:	e002      	b.n	80090e6 <SPI_DMAReceiveCplt+0xa2>
 80090e0:	68f8      	ldr	r0, [r7, #12]
 80090e2:	f7ff ff87 	bl	8008ff4 <HAL_SPI_RxCpltCallback>
 80090e6:	3710      	adds	r7, #16
 80090e8:	46bd      	mov	sp, r7
 80090ea:	bd80      	pop	{r7, pc}

080090ec <SPI_DMATransmitReceiveCplt>:
 80090ec:	b580      	push	{r7, lr}
 80090ee:	b084      	sub	sp, #16
 80090f0:	af00      	add	r7, sp, #0
 80090f2:	6078      	str	r0, [r7, #4]
 80090f4:	687b      	ldr	r3, [r7, #4]
 80090f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80090f8:	60fb      	str	r3, [r7, #12]
 80090fa:	f7fb fcab 	bl	8004a54 <HAL_GetTick>
 80090fe:	60b8      	str	r0, [r7, #8]
 8009100:	687b      	ldr	r3, [r7, #4]
 8009102:	681b      	ldr	r3, [r3, #0]
 8009104:	681b      	ldr	r3, [r3, #0]
 8009106:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800910a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800910e:	d02f      	beq.n	8009170 <SPI_DMATransmitReceiveCplt+0x84>
 8009110:	68fb      	ldr	r3, [r7, #12]
 8009112:	681b      	ldr	r3, [r3, #0]
 8009114:	685a      	ldr	r2, [r3, #4]
 8009116:	68fb      	ldr	r3, [r7, #12]
 8009118:	681b      	ldr	r3, [r3, #0]
 800911a:	f022 0220 	bic.w	r2, r2, #32
 800911e:	605a      	str	r2, [r3, #4]
 8009120:	68ba      	ldr	r2, [r7, #8]
 8009122:	2164      	movs	r1, #100	; 0x64
 8009124:	68f8      	ldr	r0, [r7, #12]
 8009126:	f000 f967 	bl	80093f8 <SPI_EndRxTxTransaction>
 800912a:	4603      	mov	r3, r0
 800912c:	2b00      	cmp	r3, #0
 800912e:	d005      	beq.n	800913c <SPI_DMATransmitReceiveCplt+0x50>
 8009130:	68fb      	ldr	r3, [r7, #12]
 8009132:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009134:	f043 0220 	orr.w	r2, r3, #32
 8009138:	68fb      	ldr	r3, [r7, #12]
 800913a:	655a      	str	r2, [r3, #84]	; 0x54
 800913c:	68fb      	ldr	r3, [r7, #12]
 800913e:	681b      	ldr	r3, [r3, #0]
 8009140:	685a      	ldr	r2, [r3, #4]
 8009142:	68fb      	ldr	r3, [r7, #12]
 8009144:	681b      	ldr	r3, [r3, #0]
 8009146:	f022 0203 	bic.w	r2, r2, #3
 800914a:	605a      	str	r2, [r3, #4]
 800914c:	68fb      	ldr	r3, [r7, #12]
 800914e:	2200      	movs	r2, #0
 8009150:	86da      	strh	r2, [r3, #54]	; 0x36
 8009152:	68fb      	ldr	r3, [r7, #12]
 8009154:	2200      	movs	r2, #0
 8009156:	87da      	strh	r2, [r3, #62]	; 0x3e
 8009158:	68fb      	ldr	r3, [r7, #12]
 800915a:	2201      	movs	r2, #1
 800915c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8009160:	68fb      	ldr	r3, [r7, #12]
 8009162:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009164:	2b00      	cmp	r3, #0
 8009166:	d003      	beq.n	8009170 <SPI_DMATransmitReceiveCplt+0x84>
 8009168:	68f8      	ldr	r0, [r7, #12]
 800916a:	f7ff ff61 	bl	8009030 <HAL_SPI_ErrorCallback>
 800916e:	e002      	b.n	8009176 <SPI_DMATransmitReceiveCplt+0x8a>
 8009170:	68f8      	ldr	r0, [r7, #12]
 8009172:	f7fa f927 	bl	80033c4 <HAL_SPI_TxRxCpltCallback>
 8009176:	3710      	adds	r7, #16
 8009178:	46bd      	mov	sp, r7
 800917a:	bd80      	pop	{r7, pc}

0800917c <SPI_DMAHalfReceiveCplt>:
 800917c:	b580      	push	{r7, lr}
 800917e:	b084      	sub	sp, #16
 8009180:	af00      	add	r7, sp, #0
 8009182:	6078      	str	r0, [r7, #4]
 8009184:	687b      	ldr	r3, [r7, #4]
 8009186:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009188:	60fb      	str	r3, [r7, #12]
 800918a:	68f8      	ldr	r0, [r7, #12]
 800918c:	f7ff ff3c 	bl	8009008 <HAL_SPI_RxHalfCpltCallback>
 8009190:	bf00      	nop
 8009192:	3710      	adds	r7, #16
 8009194:	46bd      	mov	sp, r7
 8009196:	bd80      	pop	{r7, pc}

08009198 <SPI_DMAHalfTransmitReceiveCplt>:
 8009198:	b580      	push	{r7, lr}
 800919a:	b084      	sub	sp, #16
 800919c:	af00      	add	r7, sp, #0
 800919e:	6078      	str	r0, [r7, #4]
 80091a0:	687b      	ldr	r3, [r7, #4]
 80091a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80091a4:	60fb      	str	r3, [r7, #12]
 80091a6:	68f8      	ldr	r0, [r7, #12]
 80091a8:	f7ff ff38 	bl	800901c <HAL_SPI_TxRxHalfCpltCallback>
 80091ac:	bf00      	nop
 80091ae:	3710      	adds	r7, #16
 80091b0:	46bd      	mov	sp, r7
 80091b2:	bd80      	pop	{r7, pc}

080091b4 <SPI_DMAError>:
 80091b4:	b580      	push	{r7, lr}
 80091b6:	b084      	sub	sp, #16
 80091b8:	af00      	add	r7, sp, #0
 80091ba:	6078      	str	r0, [r7, #4]
 80091bc:	687b      	ldr	r3, [r7, #4]
 80091be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80091c0:	60fb      	str	r3, [r7, #12]
 80091c2:	68fb      	ldr	r3, [r7, #12]
 80091c4:	681b      	ldr	r3, [r3, #0]
 80091c6:	685a      	ldr	r2, [r3, #4]
 80091c8:	68fb      	ldr	r3, [r7, #12]
 80091ca:	681b      	ldr	r3, [r3, #0]
 80091cc:	f022 0203 	bic.w	r2, r2, #3
 80091d0:	605a      	str	r2, [r3, #4]
 80091d2:	68fb      	ldr	r3, [r7, #12]
 80091d4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80091d6:	f043 0210 	orr.w	r2, r3, #16
 80091da:	68fb      	ldr	r3, [r7, #12]
 80091dc:	655a      	str	r2, [r3, #84]	; 0x54
 80091de:	68fb      	ldr	r3, [r7, #12]
 80091e0:	2201      	movs	r2, #1
 80091e2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80091e6:	68f8      	ldr	r0, [r7, #12]
 80091e8:	f7ff ff22 	bl	8009030 <HAL_SPI_ErrorCallback>
 80091ec:	bf00      	nop
 80091ee:	3710      	adds	r7, #16
 80091f0:	46bd      	mov	sp, r7
 80091f2:	bd80      	pop	{r7, pc}

080091f4 <SPI_DMAAbortOnError>:
 80091f4:	b580      	push	{r7, lr}
 80091f6:	b084      	sub	sp, #16
 80091f8:	af00      	add	r7, sp, #0
 80091fa:	6078      	str	r0, [r7, #4]
 80091fc:	687b      	ldr	r3, [r7, #4]
 80091fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009200:	60fb      	str	r3, [r7, #12]
 8009202:	68fb      	ldr	r3, [r7, #12]
 8009204:	2200      	movs	r2, #0
 8009206:	87da      	strh	r2, [r3, #62]	; 0x3e
 8009208:	68fb      	ldr	r3, [r7, #12]
 800920a:	2200      	movs	r2, #0
 800920c:	86da      	strh	r2, [r3, #54]	; 0x36
 800920e:	68f8      	ldr	r0, [r7, #12]
 8009210:	f7ff ff0e 	bl	8009030 <HAL_SPI_ErrorCallback>
 8009214:	bf00      	nop
 8009216:	3710      	adds	r7, #16
 8009218:	46bd      	mov	sp, r7
 800921a:	bd80      	pop	{r7, pc}

0800921c <SPI_WaitFlagStateUntilTimeout>:
 800921c:	b580      	push	{r7, lr}
 800921e:	b088      	sub	sp, #32
 8009220:	af00      	add	r7, sp, #0
 8009222:	60f8      	str	r0, [r7, #12]
 8009224:	60b9      	str	r1, [r7, #8]
 8009226:	603b      	str	r3, [r7, #0]
 8009228:	4613      	mov	r3, r2
 800922a:	71fb      	strb	r3, [r7, #7]
 800922c:	f7fb fc12 	bl	8004a54 <HAL_GetTick>
 8009230:	4602      	mov	r2, r0
 8009232:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009234:	1a9b      	subs	r3, r3, r2
 8009236:	683a      	ldr	r2, [r7, #0]
 8009238:	4413      	add	r3, r2
 800923a:	61fb      	str	r3, [r7, #28]
 800923c:	f7fb fc0a 	bl	8004a54 <HAL_GetTick>
 8009240:	61b8      	str	r0, [r7, #24]
 8009242:	4b39      	ldr	r3, [pc, #228]	; (8009328 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8009244:	681b      	ldr	r3, [r3, #0]
 8009246:	015b      	lsls	r3, r3, #5
 8009248:	0d1b      	lsrs	r3, r3, #20
 800924a:	69fa      	ldr	r2, [r7, #28]
 800924c:	fb02 f303 	mul.w	r3, r2, r3
 8009250:	617b      	str	r3, [r7, #20]
 8009252:	e054      	b.n	80092fe <SPI_WaitFlagStateUntilTimeout+0xe2>
 8009254:	683b      	ldr	r3, [r7, #0]
 8009256:	f1b3 3fff 	cmp.w	r3, #4294967295
 800925a:	d050      	beq.n	80092fe <SPI_WaitFlagStateUntilTimeout+0xe2>
 800925c:	f7fb fbfa 	bl	8004a54 <HAL_GetTick>
 8009260:	4602      	mov	r2, r0
 8009262:	69bb      	ldr	r3, [r7, #24]
 8009264:	1ad3      	subs	r3, r2, r3
 8009266:	69fa      	ldr	r2, [r7, #28]
 8009268:	429a      	cmp	r2, r3
 800926a:	d902      	bls.n	8009272 <SPI_WaitFlagStateUntilTimeout+0x56>
 800926c:	69fb      	ldr	r3, [r7, #28]
 800926e:	2b00      	cmp	r3, #0
 8009270:	d13d      	bne.n	80092ee <SPI_WaitFlagStateUntilTimeout+0xd2>
 8009272:	68fb      	ldr	r3, [r7, #12]
 8009274:	681b      	ldr	r3, [r3, #0]
 8009276:	685a      	ldr	r2, [r3, #4]
 8009278:	68fb      	ldr	r3, [r7, #12]
 800927a:	681b      	ldr	r3, [r3, #0]
 800927c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8009280:	605a      	str	r2, [r3, #4]
 8009282:	68fb      	ldr	r3, [r7, #12]
 8009284:	685b      	ldr	r3, [r3, #4]
 8009286:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800928a:	d111      	bne.n	80092b0 <SPI_WaitFlagStateUntilTimeout+0x94>
 800928c:	68fb      	ldr	r3, [r7, #12]
 800928e:	689b      	ldr	r3, [r3, #8]
 8009290:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009294:	d004      	beq.n	80092a0 <SPI_WaitFlagStateUntilTimeout+0x84>
 8009296:	68fb      	ldr	r3, [r7, #12]
 8009298:	689b      	ldr	r3, [r3, #8]
 800929a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800929e:	d107      	bne.n	80092b0 <SPI_WaitFlagStateUntilTimeout+0x94>
 80092a0:	68fb      	ldr	r3, [r7, #12]
 80092a2:	681b      	ldr	r3, [r3, #0]
 80092a4:	681a      	ldr	r2, [r3, #0]
 80092a6:	68fb      	ldr	r3, [r7, #12]
 80092a8:	681b      	ldr	r3, [r3, #0]
 80092aa:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80092ae:	601a      	str	r2, [r3, #0]
 80092b0:	68fb      	ldr	r3, [r7, #12]
 80092b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80092b4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80092b8:	d10f      	bne.n	80092da <SPI_WaitFlagStateUntilTimeout+0xbe>
 80092ba:	68fb      	ldr	r3, [r7, #12]
 80092bc:	681b      	ldr	r3, [r3, #0]
 80092be:	681a      	ldr	r2, [r3, #0]
 80092c0:	68fb      	ldr	r3, [r7, #12]
 80092c2:	681b      	ldr	r3, [r3, #0]
 80092c4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80092c8:	601a      	str	r2, [r3, #0]
 80092ca:	68fb      	ldr	r3, [r7, #12]
 80092cc:	681b      	ldr	r3, [r3, #0]
 80092ce:	681a      	ldr	r2, [r3, #0]
 80092d0:	68fb      	ldr	r3, [r7, #12]
 80092d2:	681b      	ldr	r3, [r3, #0]
 80092d4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80092d8:	601a      	str	r2, [r3, #0]
 80092da:	68fb      	ldr	r3, [r7, #12]
 80092dc:	2201      	movs	r2, #1
 80092de:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80092e2:	68fb      	ldr	r3, [r7, #12]
 80092e4:	2200      	movs	r2, #0
 80092e6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80092ea:	2303      	movs	r3, #3
 80092ec:	e017      	b.n	800931e <SPI_WaitFlagStateUntilTimeout+0x102>
 80092ee:	697b      	ldr	r3, [r7, #20]
 80092f0:	2b00      	cmp	r3, #0
 80092f2:	d101      	bne.n	80092f8 <SPI_WaitFlagStateUntilTimeout+0xdc>
 80092f4:	2300      	movs	r3, #0
 80092f6:	61fb      	str	r3, [r7, #28]
 80092f8:	697b      	ldr	r3, [r7, #20]
 80092fa:	3b01      	subs	r3, #1
 80092fc:	617b      	str	r3, [r7, #20]
 80092fe:	68fb      	ldr	r3, [r7, #12]
 8009300:	681b      	ldr	r3, [r3, #0]
 8009302:	689a      	ldr	r2, [r3, #8]
 8009304:	68bb      	ldr	r3, [r7, #8]
 8009306:	4013      	ands	r3, r2
 8009308:	68ba      	ldr	r2, [r7, #8]
 800930a:	429a      	cmp	r2, r3
 800930c:	bf0c      	ite	eq
 800930e:	2301      	moveq	r3, #1
 8009310:	2300      	movne	r3, #0
 8009312:	b2db      	uxtb	r3, r3
 8009314:	461a      	mov	r2, r3
 8009316:	79fb      	ldrb	r3, [r7, #7]
 8009318:	429a      	cmp	r2, r3
 800931a:	d19b      	bne.n	8009254 <SPI_WaitFlagStateUntilTimeout+0x38>
 800931c:	2300      	movs	r3, #0
 800931e:	4618      	mov	r0, r3
 8009320:	3720      	adds	r7, #32
 8009322:	46bd      	mov	sp, r7
 8009324:	bd80      	pop	{r7, pc}
 8009326:	bf00      	nop
 8009328:	20000134 	.word	0x20000134

0800932c <SPI_EndRxTransaction>:
 800932c:	b580      	push	{r7, lr}
 800932e:	b086      	sub	sp, #24
 8009330:	af02      	add	r7, sp, #8
 8009332:	60f8      	str	r0, [r7, #12]
 8009334:	60b9      	str	r1, [r7, #8]
 8009336:	607a      	str	r2, [r7, #4]
 8009338:	68fb      	ldr	r3, [r7, #12]
 800933a:	685b      	ldr	r3, [r3, #4]
 800933c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8009340:	d111      	bne.n	8009366 <SPI_EndRxTransaction+0x3a>
 8009342:	68fb      	ldr	r3, [r7, #12]
 8009344:	689b      	ldr	r3, [r3, #8]
 8009346:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800934a:	d004      	beq.n	8009356 <SPI_EndRxTransaction+0x2a>
 800934c:	68fb      	ldr	r3, [r7, #12]
 800934e:	689b      	ldr	r3, [r3, #8]
 8009350:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009354:	d107      	bne.n	8009366 <SPI_EndRxTransaction+0x3a>
 8009356:	68fb      	ldr	r3, [r7, #12]
 8009358:	681b      	ldr	r3, [r3, #0]
 800935a:	681a      	ldr	r2, [r3, #0]
 800935c:	68fb      	ldr	r3, [r7, #12]
 800935e:	681b      	ldr	r3, [r3, #0]
 8009360:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8009364:	601a      	str	r2, [r3, #0]
 8009366:	68fb      	ldr	r3, [r7, #12]
 8009368:	685b      	ldr	r3, [r3, #4]
 800936a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800936e:	d12a      	bne.n	80093c6 <SPI_EndRxTransaction+0x9a>
 8009370:	68fb      	ldr	r3, [r7, #12]
 8009372:	689b      	ldr	r3, [r3, #8]
 8009374:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009378:	d012      	beq.n	80093a0 <SPI_EndRxTransaction+0x74>
 800937a:	687b      	ldr	r3, [r7, #4]
 800937c:	9300      	str	r3, [sp, #0]
 800937e:	68bb      	ldr	r3, [r7, #8]
 8009380:	2200      	movs	r2, #0
 8009382:	2180      	movs	r1, #128	; 0x80
 8009384:	68f8      	ldr	r0, [r7, #12]
 8009386:	f7ff ff49 	bl	800921c <SPI_WaitFlagStateUntilTimeout>
 800938a:	4603      	mov	r3, r0
 800938c:	2b00      	cmp	r3, #0
 800938e:	d02d      	beq.n	80093ec <SPI_EndRxTransaction+0xc0>
 8009390:	68fb      	ldr	r3, [r7, #12]
 8009392:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009394:	f043 0220 	orr.w	r2, r3, #32
 8009398:	68fb      	ldr	r3, [r7, #12]
 800939a:	655a      	str	r2, [r3, #84]	; 0x54
 800939c:	2303      	movs	r3, #3
 800939e:	e026      	b.n	80093ee <SPI_EndRxTransaction+0xc2>
 80093a0:	687b      	ldr	r3, [r7, #4]
 80093a2:	9300      	str	r3, [sp, #0]
 80093a4:	68bb      	ldr	r3, [r7, #8]
 80093a6:	2200      	movs	r2, #0
 80093a8:	2101      	movs	r1, #1
 80093aa:	68f8      	ldr	r0, [r7, #12]
 80093ac:	f7ff ff36 	bl	800921c <SPI_WaitFlagStateUntilTimeout>
 80093b0:	4603      	mov	r3, r0
 80093b2:	2b00      	cmp	r3, #0
 80093b4:	d01a      	beq.n	80093ec <SPI_EndRxTransaction+0xc0>
 80093b6:	68fb      	ldr	r3, [r7, #12]
 80093b8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80093ba:	f043 0220 	orr.w	r2, r3, #32
 80093be:	68fb      	ldr	r3, [r7, #12]
 80093c0:	655a      	str	r2, [r3, #84]	; 0x54
 80093c2:	2303      	movs	r3, #3
 80093c4:	e013      	b.n	80093ee <SPI_EndRxTransaction+0xc2>
 80093c6:	687b      	ldr	r3, [r7, #4]
 80093c8:	9300      	str	r3, [sp, #0]
 80093ca:	68bb      	ldr	r3, [r7, #8]
 80093cc:	2200      	movs	r2, #0
 80093ce:	2101      	movs	r1, #1
 80093d0:	68f8      	ldr	r0, [r7, #12]
 80093d2:	f7ff ff23 	bl	800921c <SPI_WaitFlagStateUntilTimeout>
 80093d6:	4603      	mov	r3, r0
 80093d8:	2b00      	cmp	r3, #0
 80093da:	d007      	beq.n	80093ec <SPI_EndRxTransaction+0xc0>
 80093dc:	68fb      	ldr	r3, [r7, #12]
 80093de:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80093e0:	f043 0220 	orr.w	r2, r3, #32
 80093e4:	68fb      	ldr	r3, [r7, #12]
 80093e6:	655a      	str	r2, [r3, #84]	; 0x54
 80093e8:	2303      	movs	r3, #3
 80093ea:	e000      	b.n	80093ee <SPI_EndRxTransaction+0xc2>
 80093ec:	2300      	movs	r3, #0
 80093ee:	4618      	mov	r0, r3
 80093f0:	3710      	adds	r7, #16
 80093f2:	46bd      	mov	sp, r7
 80093f4:	bd80      	pop	{r7, pc}
	...

080093f8 <SPI_EndRxTxTransaction>:
 80093f8:	b580      	push	{r7, lr}
 80093fa:	b088      	sub	sp, #32
 80093fc:	af02      	add	r7, sp, #8
 80093fe:	60f8      	str	r0, [r7, #12]
 8009400:	60b9      	str	r1, [r7, #8]
 8009402:	607a      	str	r2, [r7, #4]
 8009404:	4b1b      	ldr	r3, [pc, #108]	; (8009474 <SPI_EndRxTxTransaction+0x7c>)
 8009406:	681b      	ldr	r3, [r3, #0]
 8009408:	4a1b      	ldr	r2, [pc, #108]	; (8009478 <SPI_EndRxTxTransaction+0x80>)
 800940a:	fba2 2303 	umull	r2, r3, r2, r3
 800940e:	0d5b      	lsrs	r3, r3, #21
 8009410:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8009414:	fb02 f303 	mul.w	r3, r2, r3
 8009418:	617b      	str	r3, [r7, #20]
 800941a:	68fb      	ldr	r3, [r7, #12]
 800941c:	685b      	ldr	r3, [r3, #4]
 800941e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8009422:	d112      	bne.n	800944a <SPI_EndRxTxTransaction+0x52>
 8009424:	687b      	ldr	r3, [r7, #4]
 8009426:	9300      	str	r3, [sp, #0]
 8009428:	68bb      	ldr	r3, [r7, #8]
 800942a:	2200      	movs	r2, #0
 800942c:	2180      	movs	r1, #128	; 0x80
 800942e:	68f8      	ldr	r0, [r7, #12]
 8009430:	f7ff fef4 	bl	800921c <SPI_WaitFlagStateUntilTimeout>
 8009434:	4603      	mov	r3, r0
 8009436:	2b00      	cmp	r3, #0
 8009438:	d016      	beq.n	8009468 <SPI_EndRxTxTransaction+0x70>
 800943a:	68fb      	ldr	r3, [r7, #12]
 800943c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800943e:	f043 0220 	orr.w	r2, r3, #32
 8009442:	68fb      	ldr	r3, [r7, #12]
 8009444:	655a      	str	r2, [r3, #84]	; 0x54
 8009446:	2303      	movs	r3, #3
 8009448:	e00f      	b.n	800946a <SPI_EndRxTxTransaction+0x72>
 800944a:	697b      	ldr	r3, [r7, #20]
 800944c:	2b00      	cmp	r3, #0
 800944e:	d00a      	beq.n	8009466 <SPI_EndRxTxTransaction+0x6e>
 8009450:	697b      	ldr	r3, [r7, #20]
 8009452:	3b01      	subs	r3, #1
 8009454:	617b      	str	r3, [r7, #20]
 8009456:	68fb      	ldr	r3, [r7, #12]
 8009458:	681b      	ldr	r3, [r3, #0]
 800945a:	689b      	ldr	r3, [r3, #8]
 800945c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009460:	2b80      	cmp	r3, #128	; 0x80
 8009462:	d0f2      	beq.n	800944a <SPI_EndRxTxTransaction+0x52>
 8009464:	e000      	b.n	8009468 <SPI_EndRxTxTransaction+0x70>
 8009466:	bf00      	nop
 8009468:	2300      	movs	r3, #0
 800946a:	4618      	mov	r0, r3
 800946c:	3718      	adds	r7, #24
 800946e:	46bd      	mov	sp, r7
 8009470:	bd80      	pop	{r7, pc}
 8009472:	bf00      	nop
 8009474:	20000134 	.word	0x20000134
 8009478:	165e9f81 	.word	0x165e9f81

0800947c <HAL_TIM_Base_Init>:
 800947c:	b580      	push	{r7, lr}
 800947e:	b082      	sub	sp, #8
 8009480:	af00      	add	r7, sp, #0
 8009482:	6078      	str	r0, [r7, #4]
 8009484:	687b      	ldr	r3, [r7, #4]
 8009486:	2b00      	cmp	r3, #0
 8009488:	d101      	bne.n	800948e <HAL_TIM_Base_Init+0x12>
 800948a:	2301      	movs	r3, #1
 800948c:	e041      	b.n	8009512 <HAL_TIM_Base_Init+0x96>
 800948e:	687b      	ldr	r3, [r7, #4]
 8009490:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009494:	b2db      	uxtb	r3, r3
 8009496:	2b00      	cmp	r3, #0
 8009498:	d106      	bne.n	80094a8 <HAL_TIM_Base_Init+0x2c>
 800949a:	687b      	ldr	r3, [r7, #4]
 800949c:	2200      	movs	r2, #0
 800949e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80094a2:	6878      	ldr	r0, [r7, #4]
 80094a4:	f7fb f864 	bl	8004570 <HAL_TIM_Base_MspInit>
 80094a8:	687b      	ldr	r3, [r7, #4]
 80094aa:	2202      	movs	r2, #2
 80094ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80094b0:	687b      	ldr	r3, [r7, #4]
 80094b2:	681a      	ldr	r2, [r3, #0]
 80094b4:	687b      	ldr	r3, [r7, #4]
 80094b6:	3304      	adds	r3, #4
 80094b8:	4619      	mov	r1, r3
 80094ba:	4610      	mov	r0, r2
 80094bc:	f000 fcae 	bl	8009e1c <TIM_Base_SetConfig>
 80094c0:	687b      	ldr	r3, [r7, #4]
 80094c2:	2201      	movs	r2, #1
 80094c4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80094c8:	687b      	ldr	r3, [r7, #4]
 80094ca:	2201      	movs	r2, #1
 80094cc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80094d0:	687b      	ldr	r3, [r7, #4]
 80094d2:	2201      	movs	r2, #1
 80094d4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80094d8:	687b      	ldr	r3, [r7, #4]
 80094da:	2201      	movs	r2, #1
 80094dc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80094e0:	687b      	ldr	r3, [r7, #4]
 80094e2:	2201      	movs	r2, #1
 80094e4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80094e8:	687b      	ldr	r3, [r7, #4]
 80094ea:	2201      	movs	r2, #1
 80094ec:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80094f0:	687b      	ldr	r3, [r7, #4]
 80094f2:	2201      	movs	r2, #1
 80094f4:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80094f8:	687b      	ldr	r3, [r7, #4]
 80094fa:	2201      	movs	r2, #1
 80094fc:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8009500:	687b      	ldr	r3, [r7, #4]
 8009502:	2201      	movs	r2, #1
 8009504:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8009508:	687b      	ldr	r3, [r7, #4]
 800950a:	2201      	movs	r2, #1
 800950c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009510:	2300      	movs	r3, #0
 8009512:	4618      	mov	r0, r3
 8009514:	3708      	adds	r7, #8
 8009516:	46bd      	mov	sp, r7
 8009518:	bd80      	pop	{r7, pc}
	...

0800951c <HAL_TIM_Base_Start>:
 800951c:	b480      	push	{r7}
 800951e:	b085      	sub	sp, #20
 8009520:	af00      	add	r7, sp, #0
 8009522:	6078      	str	r0, [r7, #4]
 8009524:	687b      	ldr	r3, [r7, #4]
 8009526:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800952a:	b2db      	uxtb	r3, r3
 800952c:	2b01      	cmp	r3, #1
 800952e:	d001      	beq.n	8009534 <HAL_TIM_Base_Start+0x18>
 8009530:	2301      	movs	r3, #1
 8009532:	e03c      	b.n	80095ae <HAL_TIM_Base_Start+0x92>
 8009534:	687b      	ldr	r3, [r7, #4]
 8009536:	2202      	movs	r2, #2
 8009538:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800953c:	687b      	ldr	r3, [r7, #4]
 800953e:	681b      	ldr	r3, [r3, #0]
 8009540:	4a1e      	ldr	r2, [pc, #120]	; (80095bc <HAL_TIM_Base_Start+0xa0>)
 8009542:	4293      	cmp	r3, r2
 8009544:	d018      	beq.n	8009578 <HAL_TIM_Base_Start+0x5c>
 8009546:	687b      	ldr	r3, [r7, #4]
 8009548:	681b      	ldr	r3, [r3, #0]
 800954a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800954e:	d013      	beq.n	8009578 <HAL_TIM_Base_Start+0x5c>
 8009550:	687b      	ldr	r3, [r7, #4]
 8009552:	681b      	ldr	r3, [r3, #0]
 8009554:	4a1a      	ldr	r2, [pc, #104]	; (80095c0 <HAL_TIM_Base_Start+0xa4>)
 8009556:	4293      	cmp	r3, r2
 8009558:	d00e      	beq.n	8009578 <HAL_TIM_Base_Start+0x5c>
 800955a:	687b      	ldr	r3, [r7, #4]
 800955c:	681b      	ldr	r3, [r3, #0]
 800955e:	4a19      	ldr	r2, [pc, #100]	; (80095c4 <HAL_TIM_Base_Start+0xa8>)
 8009560:	4293      	cmp	r3, r2
 8009562:	d009      	beq.n	8009578 <HAL_TIM_Base_Start+0x5c>
 8009564:	687b      	ldr	r3, [r7, #4]
 8009566:	681b      	ldr	r3, [r3, #0]
 8009568:	4a17      	ldr	r2, [pc, #92]	; (80095c8 <HAL_TIM_Base_Start+0xac>)
 800956a:	4293      	cmp	r3, r2
 800956c:	d004      	beq.n	8009578 <HAL_TIM_Base_Start+0x5c>
 800956e:	687b      	ldr	r3, [r7, #4]
 8009570:	681b      	ldr	r3, [r3, #0]
 8009572:	4a16      	ldr	r2, [pc, #88]	; (80095cc <HAL_TIM_Base_Start+0xb0>)
 8009574:	4293      	cmp	r3, r2
 8009576:	d111      	bne.n	800959c <HAL_TIM_Base_Start+0x80>
 8009578:	687b      	ldr	r3, [r7, #4]
 800957a:	681b      	ldr	r3, [r3, #0]
 800957c:	689b      	ldr	r3, [r3, #8]
 800957e:	f003 0307 	and.w	r3, r3, #7
 8009582:	60fb      	str	r3, [r7, #12]
 8009584:	68fb      	ldr	r3, [r7, #12]
 8009586:	2b06      	cmp	r3, #6
 8009588:	d010      	beq.n	80095ac <HAL_TIM_Base_Start+0x90>
 800958a:	687b      	ldr	r3, [r7, #4]
 800958c:	681b      	ldr	r3, [r3, #0]
 800958e:	681a      	ldr	r2, [r3, #0]
 8009590:	687b      	ldr	r3, [r7, #4]
 8009592:	681b      	ldr	r3, [r3, #0]
 8009594:	f042 0201 	orr.w	r2, r2, #1
 8009598:	601a      	str	r2, [r3, #0]
 800959a:	e007      	b.n	80095ac <HAL_TIM_Base_Start+0x90>
 800959c:	687b      	ldr	r3, [r7, #4]
 800959e:	681b      	ldr	r3, [r3, #0]
 80095a0:	681a      	ldr	r2, [r3, #0]
 80095a2:	687b      	ldr	r3, [r7, #4]
 80095a4:	681b      	ldr	r3, [r3, #0]
 80095a6:	f042 0201 	orr.w	r2, r2, #1
 80095aa:	601a      	str	r2, [r3, #0]
 80095ac:	2300      	movs	r3, #0
 80095ae:	4618      	mov	r0, r3
 80095b0:	3714      	adds	r7, #20
 80095b2:	46bd      	mov	sp, r7
 80095b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095b8:	4770      	bx	lr
 80095ba:	bf00      	nop
 80095bc:	40010000 	.word	0x40010000
 80095c0:	40000400 	.word	0x40000400
 80095c4:	40000800 	.word	0x40000800
 80095c8:	40000c00 	.word	0x40000c00
 80095cc:	40014000 	.word	0x40014000

080095d0 <HAL_TIM_Base_Start_IT>:
 80095d0:	b480      	push	{r7}
 80095d2:	b085      	sub	sp, #20
 80095d4:	af00      	add	r7, sp, #0
 80095d6:	6078      	str	r0, [r7, #4]
 80095d8:	687b      	ldr	r3, [r7, #4]
 80095da:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80095de:	b2db      	uxtb	r3, r3
 80095e0:	2b01      	cmp	r3, #1
 80095e2:	d001      	beq.n	80095e8 <HAL_TIM_Base_Start_IT+0x18>
 80095e4:	2301      	movs	r3, #1
 80095e6:	e044      	b.n	8009672 <HAL_TIM_Base_Start_IT+0xa2>
 80095e8:	687b      	ldr	r3, [r7, #4]
 80095ea:	2202      	movs	r2, #2
 80095ec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80095f0:	687b      	ldr	r3, [r7, #4]
 80095f2:	681b      	ldr	r3, [r3, #0]
 80095f4:	68da      	ldr	r2, [r3, #12]
 80095f6:	687b      	ldr	r3, [r7, #4]
 80095f8:	681b      	ldr	r3, [r3, #0]
 80095fa:	f042 0201 	orr.w	r2, r2, #1
 80095fe:	60da      	str	r2, [r3, #12]
 8009600:	687b      	ldr	r3, [r7, #4]
 8009602:	681b      	ldr	r3, [r3, #0]
 8009604:	4a1e      	ldr	r2, [pc, #120]	; (8009680 <HAL_TIM_Base_Start_IT+0xb0>)
 8009606:	4293      	cmp	r3, r2
 8009608:	d018      	beq.n	800963c <HAL_TIM_Base_Start_IT+0x6c>
 800960a:	687b      	ldr	r3, [r7, #4]
 800960c:	681b      	ldr	r3, [r3, #0]
 800960e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009612:	d013      	beq.n	800963c <HAL_TIM_Base_Start_IT+0x6c>
 8009614:	687b      	ldr	r3, [r7, #4]
 8009616:	681b      	ldr	r3, [r3, #0]
 8009618:	4a1a      	ldr	r2, [pc, #104]	; (8009684 <HAL_TIM_Base_Start_IT+0xb4>)
 800961a:	4293      	cmp	r3, r2
 800961c:	d00e      	beq.n	800963c <HAL_TIM_Base_Start_IT+0x6c>
 800961e:	687b      	ldr	r3, [r7, #4]
 8009620:	681b      	ldr	r3, [r3, #0]
 8009622:	4a19      	ldr	r2, [pc, #100]	; (8009688 <HAL_TIM_Base_Start_IT+0xb8>)
 8009624:	4293      	cmp	r3, r2
 8009626:	d009      	beq.n	800963c <HAL_TIM_Base_Start_IT+0x6c>
 8009628:	687b      	ldr	r3, [r7, #4]
 800962a:	681b      	ldr	r3, [r3, #0]
 800962c:	4a17      	ldr	r2, [pc, #92]	; (800968c <HAL_TIM_Base_Start_IT+0xbc>)
 800962e:	4293      	cmp	r3, r2
 8009630:	d004      	beq.n	800963c <HAL_TIM_Base_Start_IT+0x6c>
 8009632:	687b      	ldr	r3, [r7, #4]
 8009634:	681b      	ldr	r3, [r3, #0]
 8009636:	4a16      	ldr	r2, [pc, #88]	; (8009690 <HAL_TIM_Base_Start_IT+0xc0>)
 8009638:	4293      	cmp	r3, r2
 800963a:	d111      	bne.n	8009660 <HAL_TIM_Base_Start_IT+0x90>
 800963c:	687b      	ldr	r3, [r7, #4]
 800963e:	681b      	ldr	r3, [r3, #0]
 8009640:	689b      	ldr	r3, [r3, #8]
 8009642:	f003 0307 	and.w	r3, r3, #7
 8009646:	60fb      	str	r3, [r7, #12]
 8009648:	68fb      	ldr	r3, [r7, #12]
 800964a:	2b06      	cmp	r3, #6
 800964c:	d010      	beq.n	8009670 <HAL_TIM_Base_Start_IT+0xa0>
 800964e:	687b      	ldr	r3, [r7, #4]
 8009650:	681b      	ldr	r3, [r3, #0]
 8009652:	681a      	ldr	r2, [r3, #0]
 8009654:	687b      	ldr	r3, [r7, #4]
 8009656:	681b      	ldr	r3, [r3, #0]
 8009658:	f042 0201 	orr.w	r2, r2, #1
 800965c:	601a      	str	r2, [r3, #0]
 800965e:	e007      	b.n	8009670 <HAL_TIM_Base_Start_IT+0xa0>
 8009660:	687b      	ldr	r3, [r7, #4]
 8009662:	681b      	ldr	r3, [r3, #0]
 8009664:	681a      	ldr	r2, [r3, #0]
 8009666:	687b      	ldr	r3, [r7, #4]
 8009668:	681b      	ldr	r3, [r3, #0]
 800966a:	f042 0201 	orr.w	r2, r2, #1
 800966e:	601a      	str	r2, [r3, #0]
 8009670:	2300      	movs	r3, #0
 8009672:	4618      	mov	r0, r3
 8009674:	3714      	adds	r7, #20
 8009676:	46bd      	mov	sp, r7
 8009678:	f85d 7b04 	ldr.w	r7, [sp], #4
 800967c:	4770      	bx	lr
 800967e:	bf00      	nop
 8009680:	40010000 	.word	0x40010000
 8009684:	40000400 	.word	0x40000400
 8009688:	40000800 	.word	0x40000800
 800968c:	40000c00 	.word	0x40000c00
 8009690:	40014000 	.word	0x40014000

08009694 <HAL_TIM_PWM_Init>:
 8009694:	b580      	push	{r7, lr}
 8009696:	b082      	sub	sp, #8
 8009698:	af00      	add	r7, sp, #0
 800969a:	6078      	str	r0, [r7, #4]
 800969c:	687b      	ldr	r3, [r7, #4]
 800969e:	2b00      	cmp	r3, #0
 80096a0:	d101      	bne.n	80096a6 <HAL_TIM_PWM_Init+0x12>
 80096a2:	2301      	movs	r3, #1
 80096a4:	e041      	b.n	800972a <HAL_TIM_PWM_Init+0x96>
 80096a6:	687b      	ldr	r3, [r7, #4]
 80096a8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80096ac:	b2db      	uxtb	r3, r3
 80096ae:	2b00      	cmp	r3, #0
 80096b0:	d106      	bne.n	80096c0 <HAL_TIM_PWM_Init+0x2c>
 80096b2:	687b      	ldr	r3, [r7, #4]
 80096b4:	2200      	movs	r2, #0
 80096b6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80096ba:	6878      	ldr	r0, [r7, #4]
 80096bc:	f000 f839 	bl	8009732 <HAL_TIM_PWM_MspInit>
 80096c0:	687b      	ldr	r3, [r7, #4]
 80096c2:	2202      	movs	r2, #2
 80096c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80096c8:	687b      	ldr	r3, [r7, #4]
 80096ca:	681a      	ldr	r2, [r3, #0]
 80096cc:	687b      	ldr	r3, [r7, #4]
 80096ce:	3304      	adds	r3, #4
 80096d0:	4619      	mov	r1, r3
 80096d2:	4610      	mov	r0, r2
 80096d4:	f000 fba2 	bl	8009e1c <TIM_Base_SetConfig>
 80096d8:	687b      	ldr	r3, [r7, #4]
 80096da:	2201      	movs	r2, #1
 80096dc:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80096e0:	687b      	ldr	r3, [r7, #4]
 80096e2:	2201      	movs	r2, #1
 80096e4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80096e8:	687b      	ldr	r3, [r7, #4]
 80096ea:	2201      	movs	r2, #1
 80096ec:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80096f0:	687b      	ldr	r3, [r7, #4]
 80096f2:	2201      	movs	r2, #1
 80096f4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80096f8:	687b      	ldr	r3, [r7, #4]
 80096fa:	2201      	movs	r2, #1
 80096fc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009700:	687b      	ldr	r3, [r7, #4]
 8009702:	2201      	movs	r2, #1
 8009704:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009708:	687b      	ldr	r3, [r7, #4]
 800970a:	2201      	movs	r2, #1
 800970c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8009710:	687b      	ldr	r3, [r7, #4]
 8009712:	2201      	movs	r2, #1
 8009714:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8009718:	687b      	ldr	r3, [r7, #4]
 800971a:	2201      	movs	r2, #1
 800971c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8009720:	687b      	ldr	r3, [r7, #4]
 8009722:	2201      	movs	r2, #1
 8009724:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009728:	2300      	movs	r3, #0
 800972a:	4618      	mov	r0, r3
 800972c:	3708      	adds	r7, #8
 800972e:	46bd      	mov	sp, r7
 8009730:	bd80      	pop	{r7, pc}

08009732 <HAL_TIM_PWM_MspInit>:
 8009732:	b480      	push	{r7}
 8009734:	b083      	sub	sp, #12
 8009736:	af00      	add	r7, sp, #0
 8009738:	6078      	str	r0, [r7, #4]
 800973a:	bf00      	nop
 800973c:	370c      	adds	r7, #12
 800973e:	46bd      	mov	sp, r7
 8009740:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009744:	4770      	bx	lr
	...

08009748 <HAL_TIM_PWM_Start>:
 8009748:	b580      	push	{r7, lr}
 800974a:	b084      	sub	sp, #16
 800974c:	af00      	add	r7, sp, #0
 800974e:	6078      	str	r0, [r7, #4]
 8009750:	6039      	str	r1, [r7, #0]
 8009752:	683b      	ldr	r3, [r7, #0]
 8009754:	2b00      	cmp	r3, #0
 8009756:	d109      	bne.n	800976c <HAL_TIM_PWM_Start+0x24>
 8009758:	687b      	ldr	r3, [r7, #4]
 800975a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800975e:	b2db      	uxtb	r3, r3
 8009760:	2b01      	cmp	r3, #1
 8009762:	bf14      	ite	ne
 8009764:	2301      	movne	r3, #1
 8009766:	2300      	moveq	r3, #0
 8009768:	b2db      	uxtb	r3, r3
 800976a:	e022      	b.n	80097b2 <HAL_TIM_PWM_Start+0x6a>
 800976c:	683b      	ldr	r3, [r7, #0]
 800976e:	2b04      	cmp	r3, #4
 8009770:	d109      	bne.n	8009786 <HAL_TIM_PWM_Start+0x3e>
 8009772:	687b      	ldr	r3, [r7, #4]
 8009774:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8009778:	b2db      	uxtb	r3, r3
 800977a:	2b01      	cmp	r3, #1
 800977c:	bf14      	ite	ne
 800977e:	2301      	movne	r3, #1
 8009780:	2300      	moveq	r3, #0
 8009782:	b2db      	uxtb	r3, r3
 8009784:	e015      	b.n	80097b2 <HAL_TIM_PWM_Start+0x6a>
 8009786:	683b      	ldr	r3, [r7, #0]
 8009788:	2b08      	cmp	r3, #8
 800978a:	d109      	bne.n	80097a0 <HAL_TIM_PWM_Start+0x58>
 800978c:	687b      	ldr	r3, [r7, #4]
 800978e:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8009792:	b2db      	uxtb	r3, r3
 8009794:	2b01      	cmp	r3, #1
 8009796:	bf14      	ite	ne
 8009798:	2301      	movne	r3, #1
 800979a:	2300      	moveq	r3, #0
 800979c:	b2db      	uxtb	r3, r3
 800979e:	e008      	b.n	80097b2 <HAL_TIM_PWM_Start+0x6a>
 80097a0:	687b      	ldr	r3, [r7, #4]
 80097a2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80097a6:	b2db      	uxtb	r3, r3
 80097a8:	2b01      	cmp	r3, #1
 80097aa:	bf14      	ite	ne
 80097ac:	2301      	movne	r3, #1
 80097ae:	2300      	moveq	r3, #0
 80097b0:	b2db      	uxtb	r3, r3
 80097b2:	2b00      	cmp	r3, #0
 80097b4:	d001      	beq.n	80097ba <HAL_TIM_PWM_Start+0x72>
 80097b6:	2301      	movs	r3, #1
 80097b8:	e068      	b.n	800988c <HAL_TIM_PWM_Start+0x144>
 80097ba:	683b      	ldr	r3, [r7, #0]
 80097bc:	2b00      	cmp	r3, #0
 80097be:	d104      	bne.n	80097ca <HAL_TIM_PWM_Start+0x82>
 80097c0:	687b      	ldr	r3, [r7, #4]
 80097c2:	2202      	movs	r2, #2
 80097c4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80097c8:	e013      	b.n	80097f2 <HAL_TIM_PWM_Start+0xaa>
 80097ca:	683b      	ldr	r3, [r7, #0]
 80097cc:	2b04      	cmp	r3, #4
 80097ce:	d104      	bne.n	80097da <HAL_TIM_PWM_Start+0x92>
 80097d0:	687b      	ldr	r3, [r7, #4]
 80097d2:	2202      	movs	r2, #2
 80097d4:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80097d8:	e00b      	b.n	80097f2 <HAL_TIM_PWM_Start+0xaa>
 80097da:	683b      	ldr	r3, [r7, #0]
 80097dc:	2b08      	cmp	r3, #8
 80097de:	d104      	bne.n	80097ea <HAL_TIM_PWM_Start+0xa2>
 80097e0:	687b      	ldr	r3, [r7, #4]
 80097e2:	2202      	movs	r2, #2
 80097e4:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80097e8:	e003      	b.n	80097f2 <HAL_TIM_PWM_Start+0xaa>
 80097ea:	687b      	ldr	r3, [r7, #4]
 80097ec:	2202      	movs	r2, #2
 80097ee:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80097f2:	687b      	ldr	r3, [r7, #4]
 80097f4:	681b      	ldr	r3, [r3, #0]
 80097f6:	2201      	movs	r2, #1
 80097f8:	6839      	ldr	r1, [r7, #0]
 80097fa:	4618      	mov	r0, r3
 80097fc:	f000 fdb4 	bl	800a368 <TIM_CCxChannelCmd>
 8009800:	687b      	ldr	r3, [r7, #4]
 8009802:	681b      	ldr	r3, [r3, #0]
 8009804:	4a23      	ldr	r2, [pc, #140]	; (8009894 <HAL_TIM_PWM_Start+0x14c>)
 8009806:	4293      	cmp	r3, r2
 8009808:	d107      	bne.n	800981a <HAL_TIM_PWM_Start+0xd2>
 800980a:	687b      	ldr	r3, [r7, #4]
 800980c:	681b      	ldr	r3, [r3, #0]
 800980e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8009810:	687b      	ldr	r3, [r7, #4]
 8009812:	681b      	ldr	r3, [r3, #0]
 8009814:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009818:	645a      	str	r2, [r3, #68]	; 0x44
 800981a:	687b      	ldr	r3, [r7, #4]
 800981c:	681b      	ldr	r3, [r3, #0]
 800981e:	4a1d      	ldr	r2, [pc, #116]	; (8009894 <HAL_TIM_PWM_Start+0x14c>)
 8009820:	4293      	cmp	r3, r2
 8009822:	d018      	beq.n	8009856 <HAL_TIM_PWM_Start+0x10e>
 8009824:	687b      	ldr	r3, [r7, #4]
 8009826:	681b      	ldr	r3, [r3, #0]
 8009828:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800982c:	d013      	beq.n	8009856 <HAL_TIM_PWM_Start+0x10e>
 800982e:	687b      	ldr	r3, [r7, #4]
 8009830:	681b      	ldr	r3, [r3, #0]
 8009832:	4a19      	ldr	r2, [pc, #100]	; (8009898 <HAL_TIM_PWM_Start+0x150>)
 8009834:	4293      	cmp	r3, r2
 8009836:	d00e      	beq.n	8009856 <HAL_TIM_PWM_Start+0x10e>
 8009838:	687b      	ldr	r3, [r7, #4]
 800983a:	681b      	ldr	r3, [r3, #0]
 800983c:	4a17      	ldr	r2, [pc, #92]	; (800989c <HAL_TIM_PWM_Start+0x154>)
 800983e:	4293      	cmp	r3, r2
 8009840:	d009      	beq.n	8009856 <HAL_TIM_PWM_Start+0x10e>
 8009842:	687b      	ldr	r3, [r7, #4]
 8009844:	681b      	ldr	r3, [r3, #0]
 8009846:	4a16      	ldr	r2, [pc, #88]	; (80098a0 <HAL_TIM_PWM_Start+0x158>)
 8009848:	4293      	cmp	r3, r2
 800984a:	d004      	beq.n	8009856 <HAL_TIM_PWM_Start+0x10e>
 800984c:	687b      	ldr	r3, [r7, #4]
 800984e:	681b      	ldr	r3, [r3, #0]
 8009850:	4a14      	ldr	r2, [pc, #80]	; (80098a4 <HAL_TIM_PWM_Start+0x15c>)
 8009852:	4293      	cmp	r3, r2
 8009854:	d111      	bne.n	800987a <HAL_TIM_PWM_Start+0x132>
 8009856:	687b      	ldr	r3, [r7, #4]
 8009858:	681b      	ldr	r3, [r3, #0]
 800985a:	689b      	ldr	r3, [r3, #8]
 800985c:	f003 0307 	and.w	r3, r3, #7
 8009860:	60fb      	str	r3, [r7, #12]
 8009862:	68fb      	ldr	r3, [r7, #12]
 8009864:	2b06      	cmp	r3, #6
 8009866:	d010      	beq.n	800988a <HAL_TIM_PWM_Start+0x142>
 8009868:	687b      	ldr	r3, [r7, #4]
 800986a:	681b      	ldr	r3, [r3, #0]
 800986c:	681a      	ldr	r2, [r3, #0]
 800986e:	687b      	ldr	r3, [r7, #4]
 8009870:	681b      	ldr	r3, [r3, #0]
 8009872:	f042 0201 	orr.w	r2, r2, #1
 8009876:	601a      	str	r2, [r3, #0]
 8009878:	e007      	b.n	800988a <HAL_TIM_PWM_Start+0x142>
 800987a:	687b      	ldr	r3, [r7, #4]
 800987c:	681b      	ldr	r3, [r3, #0]
 800987e:	681a      	ldr	r2, [r3, #0]
 8009880:	687b      	ldr	r3, [r7, #4]
 8009882:	681b      	ldr	r3, [r3, #0]
 8009884:	f042 0201 	orr.w	r2, r2, #1
 8009888:	601a      	str	r2, [r3, #0]
 800988a:	2300      	movs	r3, #0
 800988c:	4618      	mov	r0, r3
 800988e:	3710      	adds	r7, #16
 8009890:	46bd      	mov	sp, r7
 8009892:	bd80      	pop	{r7, pc}
 8009894:	40010000 	.word	0x40010000
 8009898:	40000400 	.word	0x40000400
 800989c:	40000800 	.word	0x40000800
 80098a0:	40000c00 	.word	0x40000c00
 80098a4:	40014000 	.word	0x40014000

080098a8 <HAL_TIM_IRQHandler>:
 80098a8:	b580      	push	{r7, lr}
 80098aa:	b082      	sub	sp, #8
 80098ac:	af00      	add	r7, sp, #0
 80098ae:	6078      	str	r0, [r7, #4]
 80098b0:	687b      	ldr	r3, [r7, #4]
 80098b2:	681b      	ldr	r3, [r3, #0]
 80098b4:	691b      	ldr	r3, [r3, #16]
 80098b6:	f003 0302 	and.w	r3, r3, #2
 80098ba:	2b02      	cmp	r3, #2
 80098bc:	d122      	bne.n	8009904 <HAL_TIM_IRQHandler+0x5c>
 80098be:	687b      	ldr	r3, [r7, #4]
 80098c0:	681b      	ldr	r3, [r3, #0]
 80098c2:	68db      	ldr	r3, [r3, #12]
 80098c4:	f003 0302 	and.w	r3, r3, #2
 80098c8:	2b02      	cmp	r3, #2
 80098ca:	d11b      	bne.n	8009904 <HAL_TIM_IRQHandler+0x5c>
 80098cc:	687b      	ldr	r3, [r7, #4]
 80098ce:	681b      	ldr	r3, [r3, #0]
 80098d0:	f06f 0202 	mvn.w	r2, #2
 80098d4:	611a      	str	r2, [r3, #16]
 80098d6:	687b      	ldr	r3, [r7, #4]
 80098d8:	2201      	movs	r2, #1
 80098da:	771a      	strb	r2, [r3, #28]
 80098dc:	687b      	ldr	r3, [r7, #4]
 80098de:	681b      	ldr	r3, [r3, #0]
 80098e0:	699b      	ldr	r3, [r3, #24]
 80098e2:	f003 0303 	and.w	r3, r3, #3
 80098e6:	2b00      	cmp	r3, #0
 80098e8:	d003      	beq.n	80098f2 <HAL_TIM_IRQHandler+0x4a>
 80098ea:	6878      	ldr	r0, [r7, #4]
 80098ec:	f000 fa77 	bl	8009dde <HAL_TIM_IC_CaptureCallback>
 80098f0:	e005      	b.n	80098fe <HAL_TIM_IRQHandler+0x56>
 80098f2:	6878      	ldr	r0, [r7, #4]
 80098f4:	f000 fa69 	bl	8009dca <HAL_TIM_OC_DelayElapsedCallback>
 80098f8:	6878      	ldr	r0, [r7, #4]
 80098fa:	f000 fa7a 	bl	8009df2 <HAL_TIM_PWM_PulseFinishedCallback>
 80098fe:	687b      	ldr	r3, [r7, #4]
 8009900:	2200      	movs	r2, #0
 8009902:	771a      	strb	r2, [r3, #28]
 8009904:	687b      	ldr	r3, [r7, #4]
 8009906:	681b      	ldr	r3, [r3, #0]
 8009908:	691b      	ldr	r3, [r3, #16]
 800990a:	f003 0304 	and.w	r3, r3, #4
 800990e:	2b04      	cmp	r3, #4
 8009910:	d122      	bne.n	8009958 <HAL_TIM_IRQHandler+0xb0>
 8009912:	687b      	ldr	r3, [r7, #4]
 8009914:	681b      	ldr	r3, [r3, #0]
 8009916:	68db      	ldr	r3, [r3, #12]
 8009918:	f003 0304 	and.w	r3, r3, #4
 800991c:	2b04      	cmp	r3, #4
 800991e:	d11b      	bne.n	8009958 <HAL_TIM_IRQHandler+0xb0>
 8009920:	687b      	ldr	r3, [r7, #4]
 8009922:	681b      	ldr	r3, [r3, #0]
 8009924:	f06f 0204 	mvn.w	r2, #4
 8009928:	611a      	str	r2, [r3, #16]
 800992a:	687b      	ldr	r3, [r7, #4]
 800992c:	2202      	movs	r2, #2
 800992e:	771a      	strb	r2, [r3, #28]
 8009930:	687b      	ldr	r3, [r7, #4]
 8009932:	681b      	ldr	r3, [r3, #0]
 8009934:	699b      	ldr	r3, [r3, #24]
 8009936:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800993a:	2b00      	cmp	r3, #0
 800993c:	d003      	beq.n	8009946 <HAL_TIM_IRQHandler+0x9e>
 800993e:	6878      	ldr	r0, [r7, #4]
 8009940:	f000 fa4d 	bl	8009dde <HAL_TIM_IC_CaptureCallback>
 8009944:	e005      	b.n	8009952 <HAL_TIM_IRQHandler+0xaa>
 8009946:	6878      	ldr	r0, [r7, #4]
 8009948:	f000 fa3f 	bl	8009dca <HAL_TIM_OC_DelayElapsedCallback>
 800994c:	6878      	ldr	r0, [r7, #4]
 800994e:	f000 fa50 	bl	8009df2 <HAL_TIM_PWM_PulseFinishedCallback>
 8009952:	687b      	ldr	r3, [r7, #4]
 8009954:	2200      	movs	r2, #0
 8009956:	771a      	strb	r2, [r3, #28]
 8009958:	687b      	ldr	r3, [r7, #4]
 800995a:	681b      	ldr	r3, [r3, #0]
 800995c:	691b      	ldr	r3, [r3, #16]
 800995e:	f003 0308 	and.w	r3, r3, #8
 8009962:	2b08      	cmp	r3, #8
 8009964:	d122      	bne.n	80099ac <HAL_TIM_IRQHandler+0x104>
 8009966:	687b      	ldr	r3, [r7, #4]
 8009968:	681b      	ldr	r3, [r3, #0]
 800996a:	68db      	ldr	r3, [r3, #12]
 800996c:	f003 0308 	and.w	r3, r3, #8
 8009970:	2b08      	cmp	r3, #8
 8009972:	d11b      	bne.n	80099ac <HAL_TIM_IRQHandler+0x104>
 8009974:	687b      	ldr	r3, [r7, #4]
 8009976:	681b      	ldr	r3, [r3, #0]
 8009978:	f06f 0208 	mvn.w	r2, #8
 800997c:	611a      	str	r2, [r3, #16]
 800997e:	687b      	ldr	r3, [r7, #4]
 8009980:	2204      	movs	r2, #4
 8009982:	771a      	strb	r2, [r3, #28]
 8009984:	687b      	ldr	r3, [r7, #4]
 8009986:	681b      	ldr	r3, [r3, #0]
 8009988:	69db      	ldr	r3, [r3, #28]
 800998a:	f003 0303 	and.w	r3, r3, #3
 800998e:	2b00      	cmp	r3, #0
 8009990:	d003      	beq.n	800999a <HAL_TIM_IRQHandler+0xf2>
 8009992:	6878      	ldr	r0, [r7, #4]
 8009994:	f000 fa23 	bl	8009dde <HAL_TIM_IC_CaptureCallback>
 8009998:	e005      	b.n	80099a6 <HAL_TIM_IRQHandler+0xfe>
 800999a:	6878      	ldr	r0, [r7, #4]
 800999c:	f000 fa15 	bl	8009dca <HAL_TIM_OC_DelayElapsedCallback>
 80099a0:	6878      	ldr	r0, [r7, #4]
 80099a2:	f000 fa26 	bl	8009df2 <HAL_TIM_PWM_PulseFinishedCallback>
 80099a6:	687b      	ldr	r3, [r7, #4]
 80099a8:	2200      	movs	r2, #0
 80099aa:	771a      	strb	r2, [r3, #28]
 80099ac:	687b      	ldr	r3, [r7, #4]
 80099ae:	681b      	ldr	r3, [r3, #0]
 80099b0:	691b      	ldr	r3, [r3, #16]
 80099b2:	f003 0310 	and.w	r3, r3, #16
 80099b6:	2b10      	cmp	r3, #16
 80099b8:	d122      	bne.n	8009a00 <HAL_TIM_IRQHandler+0x158>
 80099ba:	687b      	ldr	r3, [r7, #4]
 80099bc:	681b      	ldr	r3, [r3, #0]
 80099be:	68db      	ldr	r3, [r3, #12]
 80099c0:	f003 0310 	and.w	r3, r3, #16
 80099c4:	2b10      	cmp	r3, #16
 80099c6:	d11b      	bne.n	8009a00 <HAL_TIM_IRQHandler+0x158>
 80099c8:	687b      	ldr	r3, [r7, #4]
 80099ca:	681b      	ldr	r3, [r3, #0]
 80099cc:	f06f 0210 	mvn.w	r2, #16
 80099d0:	611a      	str	r2, [r3, #16]
 80099d2:	687b      	ldr	r3, [r7, #4]
 80099d4:	2208      	movs	r2, #8
 80099d6:	771a      	strb	r2, [r3, #28]
 80099d8:	687b      	ldr	r3, [r7, #4]
 80099da:	681b      	ldr	r3, [r3, #0]
 80099dc:	69db      	ldr	r3, [r3, #28]
 80099de:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80099e2:	2b00      	cmp	r3, #0
 80099e4:	d003      	beq.n	80099ee <HAL_TIM_IRQHandler+0x146>
 80099e6:	6878      	ldr	r0, [r7, #4]
 80099e8:	f000 f9f9 	bl	8009dde <HAL_TIM_IC_CaptureCallback>
 80099ec:	e005      	b.n	80099fa <HAL_TIM_IRQHandler+0x152>
 80099ee:	6878      	ldr	r0, [r7, #4]
 80099f0:	f000 f9eb 	bl	8009dca <HAL_TIM_OC_DelayElapsedCallback>
 80099f4:	6878      	ldr	r0, [r7, #4]
 80099f6:	f000 f9fc 	bl	8009df2 <HAL_TIM_PWM_PulseFinishedCallback>
 80099fa:	687b      	ldr	r3, [r7, #4]
 80099fc:	2200      	movs	r2, #0
 80099fe:	771a      	strb	r2, [r3, #28]
 8009a00:	687b      	ldr	r3, [r7, #4]
 8009a02:	681b      	ldr	r3, [r3, #0]
 8009a04:	691b      	ldr	r3, [r3, #16]
 8009a06:	f003 0301 	and.w	r3, r3, #1
 8009a0a:	2b01      	cmp	r3, #1
 8009a0c:	d10e      	bne.n	8009a2c <HAL_TIM_IRQHandler+0x184>
 8009a0e:	687b      	ldr	r3, [r7, #4]
 8009a10:	681b      	ldr	r3, [r3, #0]
 8009a12:	68db      	ldr	r3, [r3, #12]
 8009a14:	f003 0301 	and.w	r3, r3, #1
 8009a18:	2b01      	cmp	r3, #1
 8009a1a:	d107      	bne.n	8009a2c <HAL_TIM_IRQHandler+0x184>
 8009a1c:	687b      	ldr	r3, [r7, #4]
 8009a1e:	681b      	ldr	r3, [r3, #0]
 8009a20:	f06f 0201 	mvn.w	r2, #1
 8009a24:	611a      	str	r2, [r3, #16]
 8009a26:	6878      	ldr	r0, [r7, #4]
 8009a28:	f7f9 fe50 	bl	80036cc <HAL_TIM_PeriodElapsedCallback>
 8009a2c:	687b      	ldr	r3, [r7, #4]
 8009a2e:	681b      	ldr	r3, [r3, #0]
 8009a30:	691b      	ldr	r3, [r3, #16]
 8009a32:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009a36:	2b80      	cmp	r3, #128	; 0x80
 8009a38:	d10e      	bne.n	8009a58 <HAL_TIM_IRQHandler+0x1b0>
 8009a3a:	687b      	ldr	r3, [r7, #4]
 8009a3c:	681b      	ldr	r3, [r3, #0]
 8009a3e:	68db      	ldr	r3, [r3, #12]
 8009a40:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009a44:	2b80      	cmp	r3, #128	; 0x80
 8009a46:	d107      	bne.n	8009a58 <HAL_TIM_IRQHandler+0x1b0>
 8009a48:	687b      	ldr	r3, [r7, #4]
 8009a4a:	681b      	ldr	r3, [r3, #0]
 8009a4c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8009a50:	611a      	str	r2, [r3, #16]
 8009a52:	6878      	ldr	r0, [r7, #4]
 8009a54:	f000 fd26 	bl	800a4a4 <HAL_TIMEx_BreakCallback>
 8009a58:	687b      	ldr	r3, [r7, #4]
 8009a5a:	681b      	ldr	r3, [r3, #0]
 8009a5c:	691b      	ldr	r3, [r3, #16]
 8009a5e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009a62:	2b40      	cmp	r3, #64	; 0x40
 8009a64:	d10e      	bne.n	8009a84 <HAL_TIM_IRQHandler+0x1dc>
 8009a66:	687b      	ldr	r3, [r7, #4]
 8009a68:	681b      	ldr	r3, [r3, #0]
 8009a6a:	68db      	ldr	r3, [r3, #12]
 8009a6c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009a70:	2b40      	cmp	r3, #64	; 0x40
 8009a72:	d107      	bne.n	8009a84 <HAL_TIM_IRQHandler+0x1dc>
 8009a74:	687b      	ldr	r3, [r7, #4]
 8009a76:	681b      	ldr	r3, [r3, #0]
 8009a78:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8009a7c:	611a      	str	r2, [r3, #16]
 8009a7e:	6878      	ldr	r0, [r7, #4]
 8009a80:	f000 f9c1 	bl	8009e06 <HAL_TIM_TriggerCallback>
 8009a84:	687b      	ldr	r3, [r7, #4]
 8009a86:	681b      	ldr	r3, [r3, #0]
 8009a88:	691b      	ldr	r3, [r3, #16]
 8009a8a:	f003 0320 	and.w	r3, r3, #32
 8009a8e:	2b20      	cmp	r3, #32
 8009a90:	d10e      	bne.n	8009ab0 <HAL_TIM_IRQHandler+0x208>
 8009a92:	687b      	ldr	r3, [r7, #4]
 8009a94:	681b      	ldr	r3, [r3, #0]
 8009a96:	68db      	ldr	r3, [r3, #12]
 8009a98:	f003 0320 	and.w	r3, r3, #32
 8009a9c:	2b20      	cmp	r3, #32
 8009a9e:	d107      	bne.n	8009ab0 <HAL_TIM_IRQHandler+0x208>
 8009aa0:	687b      	ldr	r3, [r7, #4]
 8009aa2:	681b      	ldr	r3, [r3, #0]
 8009aa4:	f06f 0220 	mvn.w	r2, #32
 8009aa8:	611a      	str	r2, [r3, #16]
 8009aaa:	6878      	ldr	r0, [r7, #4]
 8009aac:	f000 fcf0 	bl	800a490 <HAL_TIMEx_CommutCallback>
 8009ab0:	bf00      	nop
 8009ab2:	3708      	adds	r7, #8
 8009ab4:	46bd      	mov	sp, r7
 8009ab6:	bd80      	pop	{r7, pc}

08009ab8 <HAL_TIM_PWM_ConfigChannel>:
 8009ab8:	b580      	push	{r7, lr}
 8009aba:	b086      	sub	sp, #24
 8009abc:	af00      	add	r7, sp, #0
 8009abe:	60f8      	str	r0, [r7, #12]
 8009ac0:	60b9      	str	r1, [r7, #8]
 8009ac2:	607a      	str	r2, [r7, #4]
 8009ac4:	2300      	movs	r3, #0
 8009ac6:	75fb      	strb	r3, [r7, #23]
 8009ac8:	68fb      	ldr	r3, [r7, #12]
 8009aca:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009ace:	2b01      	cmp	r3, #1
 8009ad0:	d101      	bne.n	8009ad6 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8009ad2:	2302      	movs	r3, #2
 8009ad4:	e0ae      	b.n	8009c34 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8009ad6:	68fb      	ldr	r3, [r7, #12]
 8009ad8:	2201      	movs	r2, #1
 8009ada:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009ade:	687b      	ldr	r3, [r7, #4]
 8009ae0:	2b0c      	cmp	r3, #12
 8009ae2:	f200 809f 	bhi.w	8009c24 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8009ae6:	a201      	add	r2, pc, #4	; (adr r2, 8009aec <HAL_TIM_PWM_ConfigChannel+0x34>)
 8009ae8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009aec:	08009b21 	.word	0x08009b21
 8009af0:	08009c25 	.word	0x08009c25
 8009af4:	08009c25 	.word	0x08009c25
 8009af8:	08009c25 	.word	0x08009c25
 8009afc:	08009b61 	.word	0x08009b61
 8009b00:	08009c25 	.word	0x08009c25
 8009b04:	08009c25 	.word	0x08009c25
 8009b08:	08009c25 	.word	0x08009c25
 8009b0c:	08009ba3 	.word	0x08009ba3
 8009b10:	08009c25 	.word	0x08009c25
 8009b14:	08009c25 	.word	0x08009c25
 8009b18:	08009c25 	.word	0x08009c25
 8009b1c:	08009be3 	.word	0x08009be3
 8009b20:	68fb      	ldr	r3, [r7, #12]
 8009b22:	681b      	ldr	r3, [r3, #0]
 8009b24:	68b9      	ldr	r1, [r7, #8]
 8009b26:	4618      	mov	r0, r3
 8009b28:	f000 f9f8 	bl	8009f1c <TIM_OC1_SetConfig>
 8009b2c:	68fb      	ldr	r3, [r7, #12]
 8009b2e:	681b      	ldr	r3, [r3, #0]
 8009b30:	699a      	ldr	r2, [r3, #24]
 8009b32:	68fb      	ldr	r3, [r7, #12]
 8009b34:	681b      	ldr	r3, [r3, #0]
 8009b36:	f042 0208 	orr.w	r2, r2, #8
 8009b3a:	619a      	str	r2, [r3, #24]
 8009b3c:	68fb      	ldr	r3, [r7, #12]
 8009b3e:	681b      	ldr	r3, [r3, #0]
 8009b40:	699a      	ldr	r2, [r3, #24]
 8009b42:	68fb      	ldr	r3, [r7, #12]
 8009b44:	681b      	ldr	r3, [r3, #0]
 8009b46:	f022 0204 	bic.w	r2, r2, #4
 8009b4a:	619a      	str	r2, [r3, #24]
 8009b4c:	68fb      	ldr	r3, [r7, #12]
 8009b4e:	681b      	ldr	r3, [r3, #0]
 8009b50:	6999      	ldr	r1, [r3, #24]
 8009b52:	68bb      	ldr	r3, [r7, #8]
 8009b54:	691a      	ldr	r2, [r3, #16]
 8009b56:	68fb      	ldr	r3, [r7, #12]
 8009b58:	681b      	ldr	r3, [r3, #0]
 8009b5a:	430a      	orrs	r2, r1
 8009b5c:	619a      	str	r2, [r3, #24]
 8009b5e:	e064      	b.n	8009c2a <HAL_TIM_PWM_ConfigChannel+0x172>
 8009b60:	68fb      	ldr	r3, [r7, #12]
 8009b62:	681b      	ldr	r3, [r3, #0]
 8009b64:	68b9      	ldr	r1, [r7, #8]
 8009b66:	4618      	mov	r0, r3
 8009b68:	f000 fa3e 	bl	8009fe8 <TIM_OC2_SetConfig>
 8009b6c:	68fb      	ldr	r3, [r7, #12]
 8009b6e:	681b      	ldr	r3, [r3, #0]
 8009b70:	699a      	ldr	r2, [r3, #24]
 8009b72:	68fb      	ldr	r3, [r7, #12]
 8009b74:	681b      	ldr	r3, [r3, #0]
 8009b76:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009b7a:	619a      	str	r2, [r3, #24]
 8009b7c:	68fb      	ldr	r3, [r7, #12]
 8009b7e:	681b      	ldr	r3, [r3, #0]
 8009b80:	699a      	ldr	r2, [r3, #24]
 8009b82:	68fb      	ldr	r3, [r7, #12]
 8009b84:	681b      	ldr	r3, [r3, #0]
 8009b86:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009b8a:	619a      	str	r2, [r3, #24]
 8009b8c:	68fb      	ldr	r3, [r7, #12]
 8009b8e:	681b      	ldr	r3, [r3, #0]
 8009b90:	6999      	ldr	r1, [r3, #24]
 8009b92:	68bb      	ldr	r3, [r7, #8]
 8009b94:	691b      	ldr	r3, [r3, #16]
 8009b96:	021a      	lsls	r2, r3, #8
 8009b98:	68fb      	ldr	r3, [r7, #12]
 8009b9a:	681b      	ldr	r3, [r3, #0]
 8009b9c:	430a      	orrs	r2, r1
 8009b9e:	619a      	str	r2, [r3, #24]
 8009ba0:	e043      	b.n	8009c2a <HAL_TIM_PWM_ConfigChannel+0x172>
 8009ba2:	68fb      	ldr	r3, [r7, #12]
 8009ba4:	681b      	ldr	r3, [r3, #0]
 8009ba6:	68b9      	ldr	r1, [r7, #8]
 8009ba8:	4618      	mov	r0, r3
 8009baa:	f000 fa89 	bl	800a0c0 <TIM_OC3_SetConfig>
 8009bae:	68fb      	ldr	r3, [r7, #12]
 8009bb0:	681b      	ldr	r3, [r3, #0]
 8009bb2:	69da      	ldr	r2, [r3, #28]
 8009bb4:	68fb      	ldr	r3, [r7, #12]
 8009bb6:	681b      	ldr	r3, [r3, #0]
 8009bb8:	f042 0208 	orr.w	r2, r2, #8
 8009bbc:	61da      	str	r2, [r3, #28]
 8009bbe:	68fb      	ldr	r3, [r7, #12]
 8009bc0:	681b      	ldr	r3, [r3, #0]
 8009bc2:	69da      	ldr	r2, [r3, #28]
 8009bc4:	68fb      	ldr	r3, [r7, #12]
 8009bc6:	681b      	ldr	r3, [r3, #0]
 8009bc8:	f022 0204 	bic.w	r2, r2, #4
 8009bcc:	61da      	str	r2, [r3, #28]
 8009bce:	68fb      	ldr	r3, [r7, #12]
 8009bd0:	681b      	ldr	r3, [r3, #0]
 8009bd2:	69d9      	ldr	r1, [r3, #28]
 8009bd4:	68bb      	ldr	r3, [r7, #8]
 8009bd6:	691a      	ldr	r2, [r3, #16]
 8009bd8:	68fb      	ldr	r3, [r7, #12]
 8009bda:	681b      	ldr	r3, [r3, #0]
 8009bdc:	430a      	orrs	r2, r1
 8009bde:	61da      	str	r2, [r3, #28]
 8009be0:	e023      	b.n	8009c2a <HAL_TIM_PWM_ConfigChannel+0x172>
 8009be2:	68fb      	ldr	r3, [r7, #12]
 8009be4:	681b      	ldr	r3, [r3, #0]
 8009be6:	68b9      	ldr	r1, [r7, #8]
 8009be8:	4618      	mov	r0, r3
 8009bea:	f000 fad3 	bl	800a194 <TIM_OC4_SetConfig>
 8009bee:	68fb      	ldr	r3, [r7, #12]
 8009bf0:	681b      	ldr	r3, [r3, #0]
 8009bf2:	69da      	ldr	r2, [r3, #28]
 8009bf4:	68fb      	ldr	r3, [r7, #12]
 8009bf6:	681b      	ldr	r3, [r3, #0]
 8009bf8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009bfc:	61da      	str	r2, [r3, #28]
 8009bfe:	68fb      	ldr	r3, [r7, #12]
 8009c00:	681b      	ldr	r3, [r3, #0]
 8009c02:	69da      	ldr	r2, [r3, #28]
 8009c04:	68fb      	ldr	r3, [r7, #12]
 8009c06:	681b      	ldr	r3, [r3, #0]
 8009c08:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009c0c:	61da      	str	r2, [r3, #28]
 8009c0e:	68fb      	ldr	r3, [r7, #12]
 8009c10:	681b      	ldr	r3, [r3, #0]
 8009c12:	69d9      	ldr	r1, [r3, #28]
 8009c14:	68bb      	ldr	r3, [r7, #8]
 8009c16:	691b      	ldr	r3, [r3, #16]
 8009c18:	021a      	lsls	r2, r3, #8
 8009c1a:	68fb      	ldr	r3, [r7, #12]
 8009c1c:	681b      	ldr	r3, [r3, #0]
 8009c1e:	430a      	orrs	r2, r1
 8009c20:	61da      	str	r2, [r3, #28]
 8009c22:	e002      	b.n	8009c2a <HAL_TIM_PWM_ConfigChannel+0x172>
 8009c24:	2301      	movs	r3, #1
 8009c26:	75fb      	strb	r3, [r7, #23]
 8009c28:	bf00      	nop
 8009c2a:	68fb      	ldr	r3, [r7, #12]
 8009c2c:	2200      	movs	r2, #0
 8009c2e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009c32:	7dfb      	ldrb	r3, [r7, #23]
 8009c34:	4618      	mov	r0, r3
 8009c36:	3718      	adds	r7, #24
 8009c38:	46bd      	mov	sp, r7
 8009c3a:	bd80      	pop	{r7, pc}

08009c3c <HAL_TIM_ConfigClockSource>:
 8009c3c:	b580      	push	{r7, lr}
 8009c3e:	b084      	sub	sp, #16
 8009c40:	af00      	add	r7, sp, #0
 8009c42:	6078      	str	r0, [r7, #4]
 8009c44:	6039      	str	r1, [r7, #0]
 8009c46:	2300      	movs	r3, #0
 8009c48:	73fb      	strb	r3, [r7, #15]
 8009c4a:	687b      	ldr	r3, [r7, #4]
 8009c4c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009c50:	2b01      	cmp	r3, #1
 8009c52:	d101      	bne.n	8009c58 <HAL_TIM_ConfigClockSource+0x1c>
 8009c54:	2302      	movs	r3, #2
 8009c56:	e0b4      	b.n	8009dc2 <HAL_TIM_ConfigClockSource+0x186>
 8009c58:	687b      	ldr	r3, [r7, #4]
 8009c5a:	2201      	movs	r2, #1
 8009c5c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009c60:	687b      	ldr	r3, [r7, #4]
 8009c62:	2202      	movs	r2, #2
 8009c64:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009c68:	687b      	ldr	r3, [r7, #4]
 8009c6a:	681b      	ldr	r3, [r3, #0]
 8009c6c:	689b      	ldr	r3, [r3, #8]
 8009c6e:	60bb      	str	r3, [r7, #8]
 8009c70:	68bb      	ldr	r3, [r7, #8]
 8009c72:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8009c76:	60bb      	str	r3, [r7, #8]
 8009c78:	68bb      	ldr	r3, [r7, #8]
 8009c7a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8009c7e:	60bb      	str	r3, [r7, #8]
 8009c80:	687b      	ldr	r3, [r7, #4]
 8009c82:	681b      	ldr	r3, [r3, #0]
 8009c84:	68ba      	ldr	r2, [r7, #8]
 8009c86:	609a      	str	r2, [r3, #8]
 8009c88:	683b      	ldr	r3, [r7, #0]
 8009c8a:	681b      	ldr	r3, [r3, #0]
 8009c8c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009c90:	d03e      	beq.n	8009d10 <HAL_TIM_ConfigClockSource+0xd4>
 8009c92:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009c96:	f200 8087 	bhi.w	8009da8 <HAL_TIM_ConfigClockSource+0x16c>
 8009c9a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009c9e:	f000 8086 	beq.w	8009dae <HAL_TIM_ConfigClockSource+0x172>
 8009ca2:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009ca6:	d87f      	bhi.n	8009da8 <HAL_TIM_ConfigClockSource+0x16c>
 8009ca8:	2b70      	cmp	r3, #112	; 0x70
 8009caa:	d01a      	beq.n	8009ce2 <HAL_TIM_ConfigClockSource+0xa6>
 8009cac:	2b70      	cmp	r3, #112	; 0x70
 8009cae:	d87b      	bhi.n	8009da8 <HAL_TIM_ConfigClockSource+0x16c>
 8009cb0:	2b60      	cmp	r3, #96	; 0x60
 8009cb2:	d050      	beq.n	8009d56 <HAL_TIM_ConfigClockSource+0x11a>
 8009cb4:	2b60      	cmp	r3, #96	; 0x60
 8009cb6:	d877      	bhi.n	8009da8 <HAL_TIM_ConfigClockSource+0x16c>
 8009cb8:	2b50      	cmp	r3, #80	; 0x50
 8009cba:	d03c      	beq.n	8009d36 <HAL_TIM_ConfigClockSource+0xfa>
 8009cbc:	2b50      	cmp	r3, #80	; 0x50
 8009cbe:	d873      	bhi.n	8009da8 <HAL_TIM_ConfigClockSource+0x16c>
 8009cc0:	2b40      	cmp	r3, #64	; 0x40
 8009cc2:	d058      	beq.n	8009d76 <HAL_TIM_ConfigClockSource+0x13a>
 8009cc4:	2b40      	cmp	r3, #64	; 0x40
 8009cc6:	d86f      	bhi.n	8009da8 <HAL_TIM_ConfigClockSource+0x16c>
 8009cc8:	2b30      	cmp	r3, #48	; 0x30
 8009cca:	d064      	beq.n	8009d96 <HAL_TIM_ConfigClockSource+0x15a>
 8009ccc:	2b30      	cmp	r3, #48	; 0x30
 8009cce:	d86b      	bhi.n	8009da8 <HAL_TIM_ConfigClockSource+0x16c>
 8009cd0:	2b20      	cmp	r3, #32
 8009cd2:	d060      	beq.n	8009d96 <HAL_TIM_ConfigClockSource+0x15a>
 8009cd4:	2b20      	cmp	r3, #32
 8009cd6:	d867      	bhi.n	8009da8 <HAL_TIM_ConfigClockSource+0x16c>
 8009cd8:	2b00      	cmp	r3, #0
 8009cda:	d05c      	beq.n	8009d96 <HAL_TIM_ConfigClockSource+0x15a>
 8009cdc:	2b10      	cmp	r3, #16
 8009cde:	d05a      	beq.n	8009d96 <HAL_TIM_ConfigClockSource+0x15a>
 8009ce0:	e062      	b.n	8009da8 <HAL_TIM_ConfigClockSource+0x16c>
 8009ce2:	687b      	ldr	r3, [r7, #4]
 8009ce4:	6818      	ldr	r0, [r3, #0]
 8009ce6:	683b      	ldr	r3, [r7, #0]
 8009ce8:	6899      	ldr	r1, [r3, #8]
 8009cea:	683b      	ldr	r3, [r7, #0]
 8009cec:	685a      	ldr	r2, [r3, #4]
 8009cee:	683b      	ldr	r3, [r7, #0]
 8009cf0:	68db      	ldr	r3, [r3, #12]
 8009cf2:	f000 fb19 	bl	800a328 <TIM_ETR_SetConfig>
 8009cf6:	687b      	ldr	r3, [r7, #4]
 8009cf8:	681b      	ldr	r3, [r3, #0]
 8009cfa:	689b      	ldr	r3, [r3, #8]
 8009cfc:	60bb      	str	r3, [r7, #8]
 8009cfe:	68bb      	ldr	r3, [r7, #8]
 8009d00:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8009d04:	60bb      	str	r3, [r7, #8]
 8009d06:	687b      	ldr	r3, [r7, #4]
 8009d08:	681b      	ldr	r3, [r3, #0]
 8009d0a:	68ba      	ldr	r2, [r7, #8]
 8009d0c:	609a      	str	r2, [r3, #8]
 8009d0e:	e04f      	b.n	8009db0 <HAL_TIM_ConfigClockSource+0x174>
 8009d10:	687b      	ldr	r3, [r7, #4]
 8009d12:	6818      	ldr	r0, [r3, #0]
 8009d14:	683b      	ldr	r3, [r7, #0]
 8009d16:	6899      	ldr	r1, [r3, #8]
 8009d18:	683b      	ldr	r3, [r7, #0]
 8009d1a:	685a      	ldr	r2, [r3, #4]
 8009d1c:	683b      	ldr	r3, [r7, #0]
 8009d1e:	68db      	ldr	r3, [r3, #12]
 8009d20:	f000 fb02 	bl	800a328 <TIM_ETR_SetConfig>
 8009d24:	687b      	ldr	r3, [r7, #4]
 8009d26:	681b      	ldr	r3, [r3, #0]
 8009d28:	689a      	ldr	r2, [r3, #8]
 8009d2a:	687b      	ldr	r3, [r7, #4]
 8009d2c:	681b      	ldr	r3, [r3, #0]
 8009d2e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8009d32:	609a      	str	r2, [r3, #8]
 8009d34:	e03c      	b.n	8009db0 <HAL_TIM_ConfigClockSource+0x174>
 8009d36:	687b      	ldr	r3, [r7, #4]
 8009d38:	6818      	ldr	r0, [r3, #0]
 8009d3a:	683b      	ldr	r3, [r7, #0]
 8009d3c:	6859      	ldr	r1, [r3, #4]
 8009d3e:	683b      	ldr	r3, [r7, #0]
 8009d40:	68db      	ldr	r3, [r3, #12]
 8009d42:	461a      	mov	r2, r3
 8009d44:	f000 fa76 	bl	800a234 <TIM_TI1_ConfigInputStage>
 8009d48:	687b      	ldr	r3, [r7, #4]
 8009d4a:	681b      	ldr	r3, [r3, #0]
 8009d4c:	2150      	movs	r1, #80	; 0x50
 8009d4e:	4618      	mov	r0, r3
 8009d50:	f000 facf 	bl	800a2f2 <TIM_ITRx_SetConfig>
 8009d54:	e02c      	b.n	8009db0 <HAL_TIM_ConfigClockSource+0x174>
 8009d56:	687b      	ldr	r3, [r7, #4]
 8009d58:	6818      	ldr	r0, [r3, #0]
 8009d5a:	683b      	ldr	r3, [r7, #0]
 8009d5c:	6859      	ldr	r1, [r3, #4]
 8009d5e:	683b      	ldr	r3, [r7, #0]
 8009d60:	68db      	ldr	r3, [r3, #12]
 8009d62:	461a      	mov	r2, r3
 8009d64:	f000 fa95 	bl	800a292 <TIM_TI2_ConfigInputStage>
 8009d68:	687b      	ldr	r3, [r7, #4]
 8009d6a:	681b      	ldr	r3, [r3, #0]
 8009d6c:	2160      	movs	r1, #96	; 0x60
 8009d6e:	4618      	mov	r0, r3
 8009d70:	f000 fabf 	bl	800a2f2 <TIM_ITRx_SetConfig>
 8009d74:	e01c      	b.n	8009db0 <HAL_TIM_ConfigClockSource+0x174>
 8009d76:	687b      	ldr	r3, [r7, #4]
 8009d78:	6818      	ldr	r0, [r3, #0]
 8009d7a:	683b      	ldr	r3, [r7, #0]
 8009d7c:	6859      	ldr	r1, [r3, #4]
 8009d7e:	683b      	ldr	r3, [r7, #0]
 8009d80:	68db      	ldr	r3, [r3, #12]
 8009d82:	461a      	mov	r2, r3
 8009d84:	f000 fa56 	bl	800a234 <TIM_TI1_ConfigInputStage>
 8009d88:	687b      	ldr	r3, [r7, #4]
 8009d8a:	681b      	ldr	r3, [r3, #0]
 8009d8c:	2140      	movs	r1, #64	; 0x40
 8009d8e:	4618      	mov	r0, r3
 8009d90:	f000 faaf 	bl	800a2f2 <TIM_ITRx_SetConfig>
 8009d94:	e00c      	b.n	8009db0 <HAL_TIM_ConfigClockSource+0x174>
 8009d96:	687b      	ldr	r3, [r7, #4]
 8009d98:	681a      	ldr	r2, [r3, #0]
 8009d9a:	683b      	ldr	r3, [r7, #0]
 8009d9c:	681b      	ldr	r3, [r3, #0]
 8009d9e:	4619      	mov	r1, r3
 8009da0:	4610      	mov	r0, r2
 8009da2:	f000 faa6 	bl	800a2f2 <TIM_ITRx_SetConfig>
 8009da6:	e003      	b.n	8009db0 <HAL_TIM_ConfigClockSource+0x174>
 8009da8:	2301      	movs	r3, #1
 8009daa:	73fb      	strb	r3, [r7, #15]
 8009dac:	e000      	b.n	8009db0 <HAL_TIM_ConfigClockSource+0x174>
 8009dae:	bf00      	nop
 8009db0:	687b      	ldr	r3, [r7, #4]
 8009db2:	2201      	movs	r2, #1
 8009db4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009db8:	687b      	ldr	r3, [r7, #4]
 8009dba:	2200      	movs	r2, #0
 8009dbc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009dc0:	7bfb      	ldrb	r3, [r7, #15]
 8009dc2:	4618      	mov	r0, r3
 8009dc4:	3710      	adds	r7, #16
 8009dc6:	46bd      	mov	sp, r7
 8009dc8:	bd80      	pop	{r7, pc}

08009dca <HAL_TIM_OC_DelayElapsedCallback>:
 8009dca:	b480      	push	{r7}
 8009dcc:	b083      	sub	sp, #12
 8009dce:	af00      	add	r7, sp, #0
 8009dd0:	6078      	str	r0, [r7, #4]
 8009dd2:	bf00      	nop
 8009dd4:	370c      	adds	r7, #12
 8009dd6:	46bd      	mov	sp, r7
 8009dd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ddc:	4770      	bx	lr

08009dde <HAL_TIM_IC_CaptureCallback>:
 8009dde:	b480      	push	{r7}
 8009de0:	b083      	sub	sp, #12
 8009de2:	af00      	add	r7, sp, #0
 8009de4:	6078      	str	r0, [r7, #4]
 8009de6:	bf00      	nop
 8009de8:	370c      	adds	r7, #12
 8009dea:	46bd      	mov	sp, r7
 8009dec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009df0:	4770      	bx	lr

08009df2 <HAL_TIM_PWM_PulseFinishedCallback>:
 8009df2:	b480      	push	{r7}
 8009df4:	b083      	sub	sp, #12
 8009df6:	af00      	add	r7, sp, #0
 8009df8:	6078      	str	r0, [r7, #4]
 8009dfa:	bf00      	nop
 8009dfc:	370c      	adds	r7, #12
 8009dfe:	46bd      	mov	sp, r7
 8009e00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e04:	4770      	bx	lr

08009e06 <HAL_TIM_TriggerCallback>:
 8009e06:	b480      	push	{r7}
 8009e08:	b083      	sub	sp, #12
 8009e0a:	af00      	add	r7, sp, #0
 8009e0c:	6078      	str	r0, [r7, #4]
 8009e0e:	bf00      	nop
 8009e10:	370c      	adds	r7, #12
 8009e12:	46bd      	mov	sp, r7
 8009e14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e18:	4770      	bx	lr
	...

08009e1c <TIM_Base_SetConfig>:
 8009e1c:	b480      	push	{r7}
 8009e1e:	b085      	sub	sp, #20
 8009e20:	af00      	add	r7, sp, #0
 8009e22:	6078      	str	r0, [r7, #4]
 8009e24:	6039      	str	r1, [r7, #0]
 8009e26:	687b      	ldr	r3, [r7, #4]
 8009e28:	681b      	ldr	r3, [r3, #0]
 8009e2a:	60fb      	str	r3, [r7, #12]
 8009e2c:	687b      	ldr	r3, [r7, #4]
 8009e2e:	4a34      	ldr	r2, [pc, #208]	; (8009f00 <TIM_Base_SetConfig+0xe4>)
 8009e30:	4293      	cmp	r3, r2
 8009e32:	d00f      	beq.n	8009e54 <TIM_Base_SetConfig+0x38>
 8009e34:	687b      	ldr	r3, [r7, #4]
 8009e36:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009e3a:	d00b      	beq.n	8009e54 <TIM_Base_SetConfig+0x38>
 8009e3c:	687b      	ldr	r3, [r7, #4]
 8009e3e:	4a31      	ldr	r2, [pc, #196]	; (8009f04 <TIM_Base_SetConfig+0xe8>)
 8009e40:	4293      	cmp	r3, r2
 8009e42:	d007      	beq.n	8009e54 <TIM_Base_SetConfig+0x38>
 8009e44:	687b      	ldr	r3, [r7, #4]
 8009e46:	4a30      	ldr	r2, [pc, #192]	; (8009f08 <TIM_Base_SetConfig+0xec>)
 8009e48:	4293      	cmp	r3, r2
 8009e4a:	d003      	beq.n	8009e54 <TIM_Base_SetConfig+0x38>
 8009e4c:	687b      	ldr	r3, [r7, #4]
 8009e4e:	4a2f      	ldr	r2, [pc, #188]	; (8009f0c <TIM_Base_SetConfig+0xf0>)
 8009e50:	4293      	cmp	r3, r2
 8009e52:	d108      	bne.n	8009e66 <TIM_Base_SetConfig+0x4a>
 8009e54:	68fb      	ldr	r3, [r7, #12]
 8009e56:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009e5a:	60fb      	str	r3, [r7, #12]
 8009e5c:	683b      	ldr	r3, [r7, #0]
 8009e5e:	685b      	ldr	r3, [r3, #4]
 8009e60:	68fa      	ldr	r2, [r7, #12]
 8009e62:	4313      	orrs	r3, r2
 8009e64:	60fb      	str	r3, [r7, #12]
 8009e66:	687b      	ldr	r3, [r7, #4]
 8009e68:	4a25      	ldr	r2, [pc, #148]	; (8009f00 <TIM_Base_SetConfig+0xe4>)
 8009e6a:	4293      	cmp	r3, r2
 8009e6c:	d01b      	beq.n	8009ea6 <TIM_Base_SetConfig+0x8a>
 8009e6e:	687b      	ldr	r3, [r7, #4]
 8009e70:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009e74:	d017      	beq.n	8009ea6 <TIM_Base_SetConfig+0x8a>
 8009e76:	687b      	ldr	r3, [r7, #4]
 8009e78:	4a22      	ldr	r2, [pc, #136]	; (8009f04 <TIM_Base_SetConfig+0xe8>)
 8009e7a:	4293      	cmp	r3, r2
 8009e7c:	d013      	beq.n	8009ea6 <TIM_Base_SetConfig+0x8a>
 8009e7e:	687b      	ldr	r3, [r7, #4]
 8009e80:	4a21      	ldr	r2, [pc, #132]	; (8009f08 <TIM_Base_SetConfig+0xec>)
 8009e82:	4293      	cmp	r3, r2
 8009e84:	d00f      	beq.n	8009ea6 <TIM_Base_SetConfig+0x8a>
 8009e86:	687b      	ldr	r3, [r7, #4]
 8009e88:	4a20      	ldr	r2, [pc, #128]	; (8009f0c <TIM_Base_SetConfig+0xf0>)
 8009e8a:	4293      	cmp	r3, r2
 8009e8c:	d00b      	beq.n	8009ea6 <TIM_Base_SetConfig+0x8a>
 8009e8e:	687b      	ldr	r3, [r7, #4]
 8009e90:	4a1f      	ldr	r2, [pc, #124]	; (8009f10 <TIM_Base_SetConfig+0xf4>)
 8009e92:	4293      	cmp	r3, r2
 8009e94:	d007      	beq.n	8009ea6 <TIM_Base_SetConfig+0x8a>
 8009e96:	687b      	ldr	r3, [r7, #4]
 8009e98:	4a1e      	ldr	r2, [pc, #120]	; (8009f14 <TIM_Base_SetConfig+0xf8>)
 8009e9a:	4293      	cmp	r3, r2
 8009e9c:	d003      	beq.n	8009ea6 <TIM_Base_SetConfig+0x8a>
 8009e9e:	687b      	ldr	r3, [r7, #4]
 8009ea0:	4a1d      	ldr	r2, [pc, #116]	; (8009f18 <TIM_Base_SetConfig+0xfc>)
 8009ea2:	4293      	cmp	r3, r2
 8009ea4:	d108      	bne.n	8009eb8 <TIM_Base_SetConfig+0x9c>
 8009ea6:	68fb      	ldr	r3, [r7, #12]
 8009ea8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009eac:	60fb      	str	r3, [r7, #12]
 8009eae:	683b      	ldr	r3, [r7, #0]
 8009eb0:	68db      	ldr	r3, [r3, #12]
 8009eb2:	68fa      	ldr	r2, [r7, #12]
 8009eb4:	4313      	orrs	r3, r2
 8009eb6:	60fb      	str	r3, [r7, #12]
 8009eb8:	68fb      	ldr	r3, [r7, #12]
 8009eba:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8009ebe:	683b      	ldr	r3, [r7, #0]
 8009ec0:	695b      	ldr	r3, [r3, #20]
 8009ec2:	4313      	orrs	r3, r2
 8009ec4:	60fb      	str	r3, [r7, #12]
 8009ec6:	687b      	ldr	r3, [r7, #4]
 8009ec8:	68fa      	ldr	r2, [r7, #12]
 8009eca:	601a      	str	r2, [r3, #0]
 8009ecc:	683b      	ldr	r3, [r7, #0]
 8009ece:	689a      	ldr	r2, [r3, #8]
 8009ed0:	687b      	ldr	r3, [r7, #4]
 8009ed2:	62da      	str	r2, [r3, #44]	; 0x2c
 8009ed4:	683b      	ldr	r3, [r7, #0]
 8009ed6:	681a      	ldr	r2, [r3, #0]
 8009ed8:	687b      	ldr	r3, [r7, #4]
 8009eda:	629a      	str	r2, [r3, #40]	; 0x28
 8009edc:	687b      	ldr	r3, [r7, #4]
 8009ede:	4a08      	ldr	r2, [pc, #32]	; (8009f00 <TIM_Base_SetConfig+0xe4>)
 8009ee0:	4293      	cmp	r3, r2
 8009ee2:	d103      	bne.n	8009eec <TIM_Base_SetConfig+0xd0>
 8009ee4:	683b      	ldr	r3, [r7, #0]
 8009ee6:	691a      	ldr	r2, [r3, #16]
 8009ee8:	687b      	ldr	r3, [r7, #4]
 8009eea:	631a      	str	r2, [r3, #48]	; 0x30
 8009eec:	687b      	ldr	r3, [r7, #4]
 8009eee:	2201      	movs	r2, #1
 8009ef0:	615a      	str	r2, [r3, #20]
 8009ef2:	bf00      	nop
 8009ef4:	3714      	adds	r7, #20
 8009ef6:	46bd      	mov	sp, r7
 8009ef8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009efc:	4770      	bx	lr
 8009efe:	bf00      	nop
 8009f00:	40010000 	.word	0x40010000
 8009f04:	40000400 	.word	0x40000400
 8009f08:	40000800 	.word	0x40000800
 8009f0c:	40000c00 	.word	0x40000c00
 8009f10:	40014000 	.word	0x40014000
 8009f14:	40014400 	.word	0x40014400
 8009f18:	40014800 	.word	0x40014800

08009f1c <TIM_OC1_SetConfig>:
 8009f1c:	b480      	push	{r7}
 8009f1e:	b087      	sub	sp, #28
 8009f20:	af00      	add	r7, sp, #0
 8009f22:	6078      	str	r0, [r7, #4]
 8009f24:	6039      	str	r1, [r7, #0]
 8009f26:	687b      	ldr	r3, [r7, #4]
 8009f28:	6a1b      	ldr	r3, [r3, #32]
 8009f2a:	f023 0201 	bic.w	r2, r3, #1
 8009f2e:	687b      	ldr	r3, [r7, #4]
 8009f30:	621a      	str	r2, [r3, #32]
 8009f32:	687b      	ldr	r3, [r7, #4]
 8009f34:	6a1b      	ldr	r3, [r3, #32]
 8009f36:	617b      	str	r3, [r7, #20]
 8009f38:	687b      	ldr	r3, [r7, #4]
 8009f3a:	685b      	ldr	r3, [r3, #4]
 8009f3c:	613b      	str	r3, [r7, #16]
 8009f3e:	687b      	ldr	r3, [r7, #4]
 8009f40:	699b      	ldr	r3, [r3, #24]
 8009f42:	60fb      	str	r3, [r7, #12]
 8009f44:	68fb      	ldr	r3, [r7, #12]
 8009f46:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009f4a:	60fb      	str	r3, [r7, #12]
 8009f4c:	68fb      	ldr	r3, [r7, #12]
 8009f4e:	f023 0303 	bic.w	r3, r3, #3
 8009f52:	60fb      	str	r3, [r7, #12]
 8009f54:	683b      	ldr	r3, [r7, #0]
 8009f56:	681b      	ldr	r3, [r3, #0]
 8009f58:	68fa      	ldr	r2, [r7, #12]
 8009f5a:	4313      	orrs	r3, r2
 8009f5c:	60fb      	str	r3, [r7, #12]
 8009f5e:	697b      	ldr	r3, [r7, #20]
 8009f60:	f023 0302 	bic.w	r3, r3, #2
 8009f64:	617b      	str	r3, [r7, #20]
 8009f66:	683b      	ldr	r3, [r7, #0]
 8009f68:	689b      	ldr	r3, [r3, #8]
 8009f6a:	697a      	ldr	r2, [r7, #20]
 8009f6c:	4313      	orrs	r3, r2
 8009f6e:	617b      	str	r3, [r7, #20]
 8009f70:	687b      	ldr	r3, [r7, #4]
 8009f72:	4a1c      	ldr	r2, [pc, #112]	; (8009fe4 <TIM_OC1_SetConfig+0xc8>)
 8009f74:	4293      	cmp	r3, r2
 8009f76:	d10c      	bne.n	8009f92 <TIM_OC1_SetConfig+0x76>
 8009f78:	697b      	ldr	r3, [r7, #20]
 8009f7a:	f023 0308 	bic.w	r3, r3, #8
 8009f7e:	617b      	str	r3, [r7, #20]
 8009f80:	683b      	ldr	r3, [r7, #0]
 8009f82:	68db      	ldr	r3, [r3, #12]
 8009f84:	697a      	ldr	r2, [r7, #20]
 8009f86:	4313      	orrs	r3, r2
 8009f88:	617b      	str	r3, [r7, #20]
 8009f8a:	697b      	ldr	r3, [r7, #20]
 8009f8c:	f023 0304 	bic.w	r3, r3, #4
 8009f90:	617b      	str	r3, [r7, #20]
 8009f92:	687b      	ldr	r3, [r7, #4]
 8009f94:	4a13      	ldr	r2, [pc, #76]	; (8009fe4 <TIM_OC1_SetConfig+0xc8>)
 8009f96:	4293      	cmp	r3, r2
 8009f98:	d111      	bne.n	8009fbe <TIM_OC1_SetConfig+0xa2>
 8009f9a:	693b      	ldr	r3, [r7, #16]
 8009f9c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8009fa0:	613b      	str	r3, [r7, #16]
 8009fa2:	693b      	ldr	r3, [r7, #16]
 8009fa4:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8009fa8:	613b      	str	r3, [r7, #16]
 8009faa:	683b      	ldr	r3, [r7, #0]
 8009fac:	695b      	ldr	r3, [r3, #20]
 8009fae:	693a      	ldr	r2, [r7, #16]
 8009fb0:	4313      	orrs	r3, r2
 8009fb2:	613b      	str	r3, [r7, #16]
 8009fb4:	683b      	ldr	r3, [r7, #0]
 8009fb6:	699b      	ldr	r3, [r3, #24]
 8009fb8:	693a      	ldr	r2, [r7, #16]
 8009fba:	4313      	orrs	r3, r2
 8009fbc:	613b      	str	r3, [r7, #16]
 8009fbe:	687b      	ldr	r3, [r7, #4]
 8009fc0:	693a      	ldr	r2, [r7, #16]
 8009fc2:	605a      	str	r2, [r3, #4]
 8009fc4:	687b      	ldr	r3, [r7, #4]
 8009fc6:	68fa      	ldr	r2, [r7, #12]
 8009fc8:	619a      	str	r2, [r3, #24]
 8009fca:	683b      	ldr	r3, [r7, #0]
 8009fcc:	685a      	ldr	r2, [r3, #4]
 8009fce:	687b      	ldr	r3, [r7, #4]
 8009fd0:	635a      	str	r2, [r3, #52]	; 0x34
 8009fd2:	687b      	ldr	r3, [r7, #4]
 8009fd4:	697a      	ldr	r2, [r7, #20]
 8009fd6:	621a      	str	r2, [r3, #32]
 8009fd8:	bf00      	nop
 8009fda:	371c      	adds	r7, #28
 8009fdc:	46bd      	mov	sp, r7
 8009fde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fe2:	4770      	bx	lr
 8009fe4:	40010000 	.word	0x40010000

08009fe8 <TIM_OC2_SetConfig>:
 8009fe8:	b480      	push	{r7}
 8009fea:	b087      	sub	sp, #28
 8009fec:	af00      	add	r7, sp, #0
 8009fee:	6078      	str	r0, [r7, #4]
 8009ff0:	6039      	str	r1, [r7, #0]
 8009ff2:	687b      	ldr	r3, [r7, #4]
 8009ff4:	6a1b      	ldr	r3, [r3, #32]
 8009ff6:	f023 0210 	bic.w	r2, r3, #16
 8009ffa:	687b      	ldr	r3, [r7, #4]
 8009ffc:	621a      	str	r2, [r3, #32]
 8009ffe:	687b      	ldr	r3, [r7, #4]
 800a000:	6a1b      	ldr	r3, [r3, #32]
 800a002:	617b      	str	r3, [r7, #20]
 800a004:	687b      	ldr	r3, [r7, #4]
 800a006:	685b      	ldr	r3, [r3, #4]
 800a008:	613b      	str	r3, [r7, #16]
 800a00a:	687b      	ldr	r3, [r7, #4]
 800a00c:	699b      	ldr	r3, [r3, #24]
 800a00e:	60fb      	str	r3, [r7, #12]
 800a010:	68fb      	ldr	r3, [r7, #12]
 800a012:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800a016:	60fb      	str	r3, [r7, #12]
 800a018:	68fb      	ldr	r3, [r7, #12]
 800a01a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800a01e:	60fb      	str	r3, [r7, #12]
 800a020:	683b      	ldr	r3, [r7, #0]
 800a022:	681b      	ldr	r3, [r3, #0]
 800a024:	021b      	lsls	r3, r3, #8
 800a026:	68fa      	ldr	r2, [r7, #12]
 800a028:	4313      	orrs	r3, r2
 800a02a:	60fb      	str	r3, [r7, #12]
 800a02c:	697b      	ldr	r3, [r7, #20]
 800a02e:	f023 0320 	bic.w	r3, r3, #32
 800a032:	617b      	str	r3, [r7, #20]
 800a034:	683b      	ldr	r3, [r7, #0]
 800a036:	689b      	ldr	r3, [r3, #8]
 800a038:	011b      	lsls	r3, r3, #4
 800a03a:	697a      	ldr	r2, [r7, #20]
 800a03c:	4313      	orrs	r3, r2
 800a03e:	617b      	str	r3, [r7, #20]
 800a040:	687b      	ldr	r3, [r7, #4]
 800a042:	4a1e      	ldr	r2, [pc, #120]	; (800a0bc <TIM_OC2_SetConfig+0xd4>)
 800a044:	4293      	cmp	r3, r2
 800a046:	d10d      	bne.n	800a064 <TIM_OC2_SetConfig+0x7c>
 800a048:	697b      	ldr	r3, [r7, #20]
 800a04a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800a04e:	617b      	str	r3, [r7, #20]
 800a050:	683b      	ldr	r3, [r7, #0]
 800a052:	68db      	ldr	r3, [r3, #12]
 800a054:	011b      	lsls	r3, r3, #4
 800a056:	697a      	ldr	r2, [r7, #20]
 800a058:	4313      	orrs	r3, r2
 800a05a:	617b      	str	r3, [r7, #20]
 800a05c:	697b      	ldr	r3, [r7, #20]
 800a05e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a062:	617b      	str	r3, [r7, #20]
 800a064:	687b      	ldr	r3, [r7, #4]
 800a066:	4a15      	ldr	r2, [pc, #84]	; (800a0bc <TIM_OC2_SetConfig+0xd4>)
 800a068:	4293      	cmp	r3, r2
 800a06a:	d113      	bne.n	800a094 <TIM_OC2_SetConfig+0xac>
 800a06c:	693b      	ldr	r3, [r7, #16]
 800a06e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a072:	613b      	str	r3, [r7, #16]
 800a074:	693b      	ldr	r3, [r7, #16]
 800a076:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800a07a:	613b      	str	r3, [r7, #16]
 800a07c:	683b      	ldr	r3, [r7, #0]
 800a07e:	695b      	ldr	r3, [r3, #20]
 800a080:	009b      	lsls	r3, r3, #2
 800a082:	693a      	ldr	r2, [r7, #16]
 800a084:	4313      	orrs	r3, r2
 800a086:	613b      	str	r3, [r7, #16]
 800a088:	683b      	ldr	r3, [r7, #0]
 800a08a:	699b      	ldr	r3, [r3, #24]
 800a08c:	009b      	lsls	r3, r3, #2
 800a08e:	693a      	ldr	r2, [r7, #16]
 800a090:	4313      	orrs	r3, r2
 800a092:	613b      	str	r3, [r7, #16]
 800a094:	687b      	ldr	r3, [r7, #4]
 800a096:	693a      	ldr	r2, [r7, #16]
 800a098:	605a      	str	r2, [r3, #4]
 800a09a:	687b      	ldr	r3, [r7, #4]
 800a09c:	68fa      	ldr	r2, [r7, #12]
 800a09e:	619a      	str	r2, [r3, #24]
 800a0a0:	683b      	ldr	r3, [r7, #0]
 800a0a2:	685a      	ldr	r2, [r3, #4]
 800a0a4:	687b      	ldr	r3, [r7, #4]
 800a0a6:	639a      	str	r2, [r3, #56]	; 0x38
 800a0a8:	687b      	ldr	r3, [r7, #4]
 800a0aa:	697a      	ldr	r2, [r7, #20]
 800a0ac:	621a      	str	r2, [r3, #32]
 800a0ae:	bf00      	nop
 800a0b0:	371c      	adds	r7, #28
 800a0b2:	46bd      	mov	sp, r7
 800a0b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0b8:	4770      	bx	lr
 800a0ba:	bf00      	nop
 800a0bc:	40010000 	.word	0x40010000

0800a0c0 <TIM_OC3_SetConfig>:
 800a0c0:	b480      	push	{r7}
 800a0c2:	b087      	sub	sp, #28
 800a0c4:	af00      	add	r7, sp, #0
 800a0c6:	6078      	str	r0, [r7, #4]
 800a0c8:	6039      	str	r1, [r7, #0]
 800a0ca:	687b      	ldr	r3, [r7, #4]
 800a0cc:	6a1b      	ldr	r3, [r3, #32]
 800a0ce:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800a0d2:	687b      	ldr	r3, [r7, #4]
 800a0d4:	621a      	str	r2, [r3, #32]
 800a0d6:	687b      	ldr	r3, [r7, #4]
 800a0d8:	6a1b      	ldr	r3, [r3, #32]
 800a0da:	617b      	str	r3, [r7, #20]
 800a0dc:	687b      	ldr	r3, [r7, #4]
 800a0de:	685b      	ldr	r3, [r3, #4]
 800a0e0:	613b      	str	r3, [r7, #16]
 800a0e2:	687b      	ldr	r3, [r7, #4]
 800a0e4:	69db      	ldr	r3, [r3, #28]
 800a0e6:	60fb      	str	r3, [r7, #12]
 800a0e8:	68fb      	ldr	r3, [r7, #12]
 800a0ea:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a0ee:	60fb      	str	r3, [r7, #12]
 800a0f0:	68fb      	ldr	r3, [r7, #12]
 800a0f2:	f023 0303 	bic.w	r3, r3, #3
 800a0f6:	60fb      	str	r3, [r7, #12]
 800a0f8:	683b      	ldr	r3, [r7, #0]
 800a0fa:	681b      	ldr	r3, [r3, #0]
 800a0fc:	68fa      	ldr	r2, [r7, #12]
 800a0fe:	4313      	orrs	r3, r2
 800a100:	60fb      	str	r3, [r7, #12]
 800a102:	697b      	ldr	r3, [r7, #20]
 800a104:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800a108:	617b      	str	r3, [r7, #20]
 800a10a:	683b      	ldr	r3, [r7, #0]
 800a10c:	689b      	ldr	r3, [r3, #8]
 800a10e:	021b      	lsls	r3, r3, #8
 800a110:	697a      	ldr	r2, [r7, #20]
 800a112:	4313      	orrs	r3, r2
 800a114:	617b      	str	r3, [r7, #20]
 800a116:	687b      	ldr	r3, [r7, #4]
 800a118:	4a1d      	ldr	r2, [pc, #116]	; (800a190 <TIM_OC3_SetConfig+0xd0>)
 800a11a:	4293      	cmp	r3, r2
 800a11c:	d10d      	bne.n	800a13a <TIM_OC3_SetConfig+0x7a>
 800a11e:	697b      	ldr	r3, [r7, #20]
 800a120:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800a124:	617b      	str	r3, [r7, #20]
 800a126:	683b      	ldr	r3, [r7, #0]
 800a128:	68db      	ldr	r3, [r3, #12]
 800a12a:	021b      	lsls	r3, r3, #8
 800a12c:	697a      	ldr	r2, [r7, #20]
 800a12e:	4313      	orrs	r3, r2
 800a130:	617b      	str	r3, [r7, #20]
 800a132:	697b      	ldr	r3, [r7, #20]
 800a134:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a138:	617b      	str	r3, [r7, #20]
 800a13a:	687b      	ldr	r3, [r7, #4]
 800a13c:	4a14      	ldr	r2, [pc, #80]	; (800a190 <TIM_OC3_SetConfig+0xd0>)
 800a13e:	4293      	cmp	r3, r2
 800a140:	d113      	bne.n	800a16a <TIM_OC3_SetConfig+0xaa>
 800a142:	693b      	ldr	r3, [r7, #16]
 800a144:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800a148:	613b      	str	r3, [r7, #16]
 800a14a:	693b      	ldr	r3, [r7, #16]
 800a14c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800a150:	613b      	str	r3, [r7, #16]
 800a152:	683b      	ldr	r3, [r7, #0]
 800a154:	695b      	ldr	r3, [r3, #20]
 800a156:	011b      	lsls	r3, r3, #4
 800a158:	693a      	ldr	r2, [r7, #16]
 800a15a:	4313      	orrs	r3, r2
 800a15c:	613b      	str	r3, [r7, #16]
 800a15e:	683b      	ldr	r3, [r7, #0]
 800a160:	699b      	ldr	r3, [r3, #24]
 800a162:	011b      	lsls	r3, r3, #4
 800a164:	693a      	ldr	r2, [r7, #16]
 800a166:	4313      	orrs	r3, r2
 800a168:	613b      	str	r3, [r7, #16]
 800a16a:	687b      	ldr	r3, [r7, #4]
 800a16c:	693a      	ldr	r2, [r7, #16]
 800a16e:	605a      	str	r2, [r3, #4]
 800a170:	687b      	ldr	r3, [r7, #4]
 800a172:	68fa      	ldr	r2, [r7, #12]
 800a174:	61da      	str	r2, [r3, #28]
 800a176:	683b      	ldr	r3, [r7, #0]
 800a178:	685a      	ldr	r2, [r3, #4]
 800a17a:	687b      	ldr	r3, [r7, #4]
 800a17c:	63da      	str	r2, [r3, #60]	; 0x3c
 800a17e:	687b      	ldr	r3, [r7, #4]
 800a180:	697a      	ldr	r2, [r7, #20]
 800a182:	621a      	str	r2, [r3, #32]
 800a184:	bf00      	nop
 800a186:	371c      	adds	r7, #28
 800a188:	46bd      	mov	sp, r7
 800a18a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a18e:	4770      	bx	lr
 800a190:	40010000 	.word	0x40010000

0800a194 <TIM_OC4_SetConfig>:
 800a194:	b480      	push	{r7}
 800a196:	b087      	sub	sp, #28
 800a198:	af00      	add	r7, sp, #0
 800a19a:	6078      	str	r0, [r7, #4]
 800a19c:	6039      	str	r1, [r7, #0]
 800a19e:	687b      	ldr	r3, [r7, #4]
 800a1a0:	6a1b      	ldr	r3, [r3, #32]
 800a1a2:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800a1a6:	687b      	ldr	r3, [r7, #4]
 800a1a8:	621a      	str	r2, [r3, #32]
 800a1aa:	687b      	ldr	r3, [r7, #4]
 800a1ac:	6a1b      	ldr	r3, [r3, #32]
 800a1ae:	613b      	str	r3, [r7, #16]
 800a1b0:	687b      	ldr	r3, [r7, #4]
 800a1b2:	685b      	ldr	r3, [r3, #4]
 800a1b4:	617b      	str	r3, [r7, #20]
 800a1b6:	687b      	ldr	r3, [r7, #4]
 800a1b8:	69db      	ldr	r3, [r3, #28]
 800a1ba:	60fb      	str	r3, [r7, #12]
 800a1bc:	68fb      	ldr	r3, [r7, #12]
 800a1be:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800a1c2:	60fb      	str	r3, [r7, #12]
 800a1c4:	68fb      	ldr	r3, [r7, #12]
 800a1c6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800a1ca:	60fb      	str	r3, [r7, #12]
 800a1cc:	683b      	ldr	r3, [r7, #0]
 800a1ce:	681b      	ldr	r3, [r3, #0]
 800a1d0:	021b      	lsls	r3, r3, #8
 800a1d2:	68fa      	ldr	r2, [r7, #12]
 800a1d4:	4313      	orrs	r3, r2
 800a1d6:	60fb      	str	r3, [r7, #12]
 800a1d8:	693b      	ldr	r3, [r7, #16]
 800a1da:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800a1de:	613b      	str	r3, [r7, #16]
 800a1e0:	683b      	ldr	r3, [r7, #0]
 800a1e2:	689b      	ldr	r3, [r3, #8]
 800a1e4:	031b      	lsls	r3, r3, #12
 800a1e6:	693a      	ldr	r2, [r7, #16]
 800a1e8:	4313      	orrs	r3, r2
 800a1ea:	613b      	str	r3, [r7, #16]
 800a1ec:	687b      	ldr	r3, [r7, #4]
 800a1ee:	4a10      	ldr	r2, [pc, #64]	; (800a230 <TIM_OC4_SetConfig+0x9c>)
 800a1f0:	4293      	cmp	r3, r2
 800a1f2:	d109      	bne.n	800a208 <TIM_OC4_SetConfig+0x74>
 800a1f4:	697b      	ldr	r3, [r7, #20]
 800a1f6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800a1fa:	617b      	str	r3, [r7, #20]
 800a1fc:	683b      	ldr	r3, [r7, #0]
 800a1fe:	695b      	ldr	r3, [r3, #20]
 800a200:	019b      	lsls	r3, r3, #6
 800a202:	697a      	ldr	r2, [r7, #20]
 800a204:	4313      	orrs	r3, r2
 800a206:	617b      	str	r3, [r7, #20]
 800a208:	687b      	ldr	r3, [r7, #4]
 800a20a:	697a      	ldr	r2, [r7, #20]
 800a20c:	605a      	str	r2, [r3, #4]
 800a20e:	687b      	ldr	r3, [r7, #4]
 800a210:	68fa      	ldr	r2, [r7, #12]
 800a212:	61da      	str	r2, [r3, #28]
 800a214:	683b      	ldr	r3, [r7, #0]
 800a216:	685a      	ldr	r2, [r3, #4]
 800a218:	687b      	ldr	r3, [r7, #4]
 800a21a:	641a      	str	r2, [r3, #64]	; 0x40
 800a21c:	687b      	ldr	r3, [r7, #4]
 800a21e:	693a      	ldr	r2, [r7, #16]
 800a220:	621a      	str	r2, [r3, #32]
 800a222:	bf00      	nop
 800a224:	371c      	adds	r7, #28
 800a226:	46bd      	mov	sp, r7
 800a228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a22c:	4770      	bx	lr
 800a22e:	bf00      	nop
 800a230:	40010000 	.word	0x40010000

0800a234 <TIM_TI1_ConfigInputStage>:
 800a234:	b480      	push	{r7}
 800a236:	b087      	sub	sp, #28
 800a238:	af00      	add	r7, sp, #0
 800a23a:	60f8      	str	r0, [r7, #12]
 800a23c:	60b9      	str	r1, [r7, #8]
 800a23e:	607a      	str	r2, [r7, #4]
 800a240:	68fb      	ldr	r3, [r7, #12]
 800a242:	6a1b      	ldr	r3, [r3, #32]
 800a244:	617b      	str	r3, [r7, #20]
 800a246:	68fb      	ldr	r3, [r7, #12]
 800a248:	6a1b      	ldr	r3, [r3, #32]
 800a24a:	f023 0201 	bic.w	r2, r3, #1
 800a24e:	68fb      	ldr	r3, [r7, #12]
 800a250:	621a      	str	r2, [r3, #32]
 800a252:	68fb      	ldr	r3, [r7, #12]
 800a254:	699b      	ldr	r3, [r3, #24]
 800a256:	613b      	str	r3, [r7, #16]
 800a258:	693b      	ldr	r3, [r7, #16]
 800a25a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800a25e:	613b      	str	r3, [r7, #16]
 800a260:	687b      	ldr	r3, [r7, #4]
 800a262:	011b      	lsls	r3, r3, #4
 800a264:	693a      	ldr	r2, [r7, #16]
 800a266:	4313      	orrs	r3, r2
 800a268:	613b      	str	r3, [r7, #16]
 800a26a:	697b      	ldr	r3, [r7, #20]
 800a26c:	f023 030a 	bic.w	r3, r3, #10
 800a270:	617b      	str	r3, [r7, #20]
 800a272:	697a      	ldr	r2, [r7, #20]
 800a274:	68bb      	ldr	r3, [r7, #8]
 800a276:	4313      	orrs	r3, r2
 800a278:	617b      	str	r3, [r7, #20]
 800a27a:	68fb      	ldr	r3, [r7, #12]
 800a27c:	693a      	ldr	r2, [r7, #16]
 800a27e:	619a      	str	r2, [r3, #24]
 800a280:	68fb      	ldr	r3, [r7, #12]
 800a282:	697a      	ldr	r2, [r7, #20]
 800a284:	621a      	str	r2, [r3, #32]
 800a286:	bf00      	nop
 800a288:	371c      	adds	r7, #28
 800a28a:	46bd      	mov	sp, r7
 800a28c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a290:	4770      	bx	lr

0800a292 <TIM_TI2_ConfigInputStage>:
 800a292:	b480      	push	{r7}
 800a294:	b087      	sub	sp, #28
 800a296:	af00      	add	r7, sp, #0
 800a298:	60f8      	str	r0, [r7, #12]
 800a29a:	60b9      	str	r1, [r7, #8]
 800a29c:	607a      	str	r2, [r7, #4]
 800a29e:	68fb      	ldr	r3, [r7, #12]
 800a2a0:	6a1b      	ldr	r3, [r3, #32]
 800a2a2:	f023 0210 	bic.w	r2, r3, #16
 800a2a6:	68fb      	ldr	r3, [r7, #12]
 800a2a8:	621a      	str	r2, [r3, #32]
 800a2aa:	68fb      	ldr	r3, [r7, #12]
 800a2ac:	699b      	ldr	r3, [r3, #24]
 800a2ae:	617b      	str	r3, [r7, #20]
 800a2b0:	68fb      	ldr	r3, [r7, #12]
 800a2b2:	6a1b      	ldr	r3, [r3, #32]
 800a2b4:	613b      	str	r3, [r7, #16]
 800a2b6:	697b      	ldr	r3, [r7, #20]
 800a2b8:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800a2bc:	617b      	str	r3, [r7, #20]
 800a2be:	687b      	ldr	r3, [r7, #4]
 800a2c0:	031b      	lsls	r3, r3, #12
 800a2c2:	697a      	ldr	r2, [r7, #20]
 800a2c4:	4313      	orrs	r3, r2
 800a2c6:	617b      	str	r3, [r7, #20]
 800a2c8:	693b      	ldr	r3, [r7, #16]
 800a2ca:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800a2ce:	613b      	str	r3, [r7, #16]
 800a2d0:	68bb      	ldr	r3, [r7, #8]
 800a2d2:	011b      	lsls	r3, r3, #4
 800a2d4:	693a      	ldr	r2, [r7, #16]
 800a2d6:	4313      	orrs	r3, r2
 800a2d8:	613b      	str	r3, [r7, #16]
 800a2da:	68fb      	ldr	r3, [r7, #12]
 800a2dc:	697a      	ldr	r2, [r7, #20]
 800a2de:	619a      	str	r2, [r3, #24]
 800a2e0:	68fb      	ldr	r3, [r7, #12]
 800a2e2:	693a      	ldr	r2, [r7, #16]
 800a2e4:	621a      	str	r2, [r3, #32]
 800a2e6:	bf00      	nop
 800a2e8:	371c      	adds	r7, #28
 800a2ea:	46bd      	mov	sp, r7
 800a2ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2f0:	4770      	bx	lr

0800a2f2 <TIM_ITRx_SetConfig>:
 800a2f2:	b480      	push	{r7}
 800a2f4:	b085      	sub	sp, #20
 800a2f6:	af00      	add	r7, sp, #0
 800a2f8:	6078      	str	r0, [r7, #4]
 800a2fa:	6039      	str	r1, [r7, #0]
 800a2fc:	687b      	ldr	r3, [r7, #4]
 800a2fe:	689b      	ldr	r3, [r3, #8]
 800a300:	60fb      	str	r3, [r7, #12]
 800a302:	68fb      	ldr	r3, [r7, #12]
 800a304:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a308:	60fb      	str	r3, [r7, #12]
 800a30a:	683a      	ldr	r2, [r7, #0]
 800a30c:	68fb      	ldr	r3, [r7, #12]
 800a30e:	4313      	orrs	r3, r2
 800a310:	f043 0307 	orr.w	r3, r3, #7
 800a314:	60fb      	str	r3, [r7, #12]
 800a316:	687b      	ldr	r3, [r7, #4]
 800a318:	68fa      	ldr	r2, [r7, #12]
 800a31a:	609a      	str	r2, [r3, #8]
 800a31c:	bf00      	nop
 800a31e:	3714      	adds	r7, #20
 800a320:	46bd      	mov	sp, r7
 800a322:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a326:	4770      	bx	lr

0800a328 <TIM_ETR_SetConfig>:
 800a328:	b480      	push	{r7}
 800a32a:	b087      	sub	sp, #28
 800a32c:	af00      	add	r7, sp, #0
 800a32e:	60f8      	str	r0, [r7, #12]
 800a330:	60b9      	str	r1, [r7, #8]
 800a332:	607a      	str	r2, [r7, #4]
 800a334:	603b      	str	r3, [r7, #0]
 800a336:	68fb      	ldr	r3, [r7, #12]
 800a338:	689b      	ldr	r3, [r3, #8]
 800a33a:	617b      	str	r3, [r7, #20]
 800a33c:	697b      	ldr	r3, [r7, #20]
 800a33e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800a342:	617b      	str	r3, [r7, #20]
 800a344:	683b      	ldr	r3, [r7, #0]
 800a346:	021a      	lsls	r2, r3, #8
 800a348:	687b      	ldr	r3, [r7, #4]
 800a34a:	431a      	orrs	r2, r3
 800a34c:	68bb      	ldr	r3, [r7, #8]
 800a34e:	4313      	orrs	r3, r2
 800a350:	697a      	ldr	r2, [r7, #20]
 800a352:	4313      	orrs	r3, r2
 800a354:	617b      	str	r3, [r7, #20]
 800a356:	68fb      	ldr	r3, [r7, #12]
 800a358:	697a      	ldr	r2, [r7, #20]
 800a35a:	609a      	str	r2, [r3, #8]
 800a35c:	bf00      	nop
 800a35e:	371c      	adds	r7, #28
 800a360:	46bd      	mov	sp, r7
 800a362:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a366:	4770      	bx	lr

0800a368 <TIM_CCxChannelCmd>:
 800a368:	b480      	push	{r7}
 800a36a:	b087      	sub	sp, #28
 800a36c:	af00      	add	r7, sp, #0
 800a36e:	60f8      	str	r0, [r7, #12]
 800a370:	60b9      	str	r1, [r7, #8]
 800a372:	607a      	str	r2, [r7, #4]
 800a374:	68bb      	ldr	r3, [r7, #8]
 800a376:	f003 031f 	and.w	r3, r3, #31
 800a37a:	2201      	movs	r2, #1
 800a37c:	fa02 f303 	lsl.w	r3, r2, r3
 800a380:	617b      	str	r3, [r7, #20]
 800a382:	68fb      	ldr	r3, [r7, #12]
 800a384:	6a1a      	ldr	r2, [r3, #32]
 800a386:	697b      	ldr	r3, [r7, #20]
 800a388:	43db      	mvns	r3, r3
 800a38a:	401a      	ands	r2, r3
 800a38c:	68fb      	ldr	r3, [r7, #12]
 800a38e:	621a      	str	r2, [r3, #32]
 800a390:	68fb      	ldr	r3, [r7, #12]
 800a392:	6a1a      	ldr	r2, [r3, #32]
 800a394:	68bb      	ldr	r3, [r7, #8]
 800a396:	f003 031f 	and.w	r3, r3, #31
 800a39a:	6879      	ldr	r1, [r7, #4]
 800a39c:	fa01 f303 	lsl.w	r3, r1, r3
 800a3a0:	431a      	orrs	r2, r3
 800a3a2:	68fb      	ldr	r3, [r7, #12]
 800a3a4:	621a      	str	r2, [r3, #32]
 800a3a6:	bf00      	nop
 800a3a8:	371c      	adds	r7, #28
 800a3aa:	46bd      	mov	sp, r7
 800a3ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3b0:	4770      	bx	lr
	...

0800a3b4 <HAL_TIMEx_MasterConfigSynchronization>:
 800a3b4:	b480      	push	{r7}
 800a3b6:	b085      	sub	sp, #20
 800a3b8:	af00      	add	r7, sp, #0
 800a3ba:	6078      	str	r0, [r7, #4]
 800a3bc:	6039      	str	r1, [r7, #0]
 800a3be:	687b      	ldr	r3, [r7, #4]
 800a3c0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800a3c4:	2b01      	cmp	r3, #1
 800a3c6:	d101      	bne.n	800a3cc <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800a3c8:	2302      	movs	r3, #2
 800a3ca:	e050      	b.n	800a46e <HAL_TIMEx_MasterConfigSynchronization+0xba>
 800a3cc:	687b      	ldr	r3, [r7, #4]
 800a3ce:	2201      	movs	r2, #1
 800a3d0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a3d4:	687b      	ldr	r3, [r7, #4]
 800a3d6:	2202      	movs	r2, #2
 800a3d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a3dc:	687b      	ldr	r3, [r7, #4]
 800a3de:	681b      	ldr	r3, [r3, #0]
 800a3e0:	685b      	ldr	r3, [r3, #4]
 800a3e2:	60fb      	str	r3, [r7, #12]
 800a3e4:	687b      	ldr	r3, [r7, #4]
 800a3e6:	681b      	ldr	r3, [r3, #0]
 800a3e8:	689b      	ldr	r3, [r3, #8]
 800a3ea:	60bb      	str	r3, [r7, #8]
 800a3ec:	68fb      	ldr	r3, [r7, #12]
 800a3ee:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a3f2:	60fb      	str	r3, [r7, #12]
 800a3f4:	683b      	ldr	r3, [r7, #0]
 800a3f6:	681b      	ldr	r3, [r3, #0]
 800a3f8:	68fa      	ldr	r2, [r7, #12]
 800a3fa:	4313      	orrs	r3, r2
 800a3fc:	60fb      	str	r3, [r7, #12]
 800a3fe:	687b      	ldr	r3, [r7, #4]
 800a400:	681b      	ldr	r3, [r3, #0]
 800a402:	68fa      	ldr	r2, [r7, #12]
 800a404:	605a      	str	r2, [r3, #4]
 800a406:	687b      	ldr	r3, [r7, #4]
 800a408:	681b      	ldr	r3, [r3, #0]
 800a40a:	4a1c      	ldr	r2, [pc, #112]	; (800a47c <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 800a40c:	4293      	cmp	r3, r2
 800a40e:	d018      	beq.n	800a442 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a410:	687b      	ldr	r3, [r7, #4]
 800a412:	681b      	ldr	r3, [r3, #0]
 800a414:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a418:	d013      	beq.n	800a442 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a41a:	687b      	ldr	r3, [r7, #4]
 800a41c:	681b      	ldr	r3, [r3, #0]
 800a41e:	4a18      	ldr	r2, [pc, #96]	; (800a480 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 800a420:	4293      	cmp	r3, r2
 800a422:	d00e      	beq.n	800a442 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a424:	687b      	ldr	r3, [r7, #4]
 800a426:	681b      	ldr	r3, [r3, #0]
 800a428:	4a16      	ldr	r2, [pc, #88]	; (800a484 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 800a42a:	4293      	cmp	r3, r2
 800a42c:	d009      	beq.n	800a442 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a42e:	687b      	ldr	r3, [r7, #4]
 800a430:	681b      	ldr	r3, [r3, #0]
 800a432:	4a15      	ldr	r2, [pc, #84]	; (800a488 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 800a434:	4293      	cmp	r3, r2
 800a436:	d004      	beq.n	800a442 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a438:	687b      	ldr	r3, [r7, #4]
 800a43a:	681b      	ldr	r3, [r3, #0]
 800a43c:	4a13      	ldr	r2, [pc, #76]	; (800a48c <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 800a43e:	4293      	cmp	r3, r2
 800a440:	d10c      	bne.n	800a45c <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 800a442:	68bb      	ldr	r3, [r7, #8]
 800a444:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800a448:	60bb      	str	r3, [r7, #8]
 800a44a:	683b      	ldr	r3, [r7, #0]
 800a44c:	685b      	ldr	r3, [r3, #4]
 800a44e:	68ba      	ldr	r2, [r7, #8]
 800a450:	4313      	orrs	r3, r2
 800a452:	60bb      	str	r3, [r7, #8]
 800a454:	687b      	ldr	r3, [r7, #4]
 800a456:	681b      	ldr	r3, [r3, #0]
 800a458:	68ba      	ldr	r2, [r7, #8]
 800a45a:	609a      	str	r2, [r3, #8]
 800a45c:	687b      	ldr	r3, [r7, #4]
 800a45e:	2201      	movs	r2, #1
 800a460:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a464:	687b      	ldr	r3, [r7, #4]
 800a466:	2200      	movs	r2, #0
 800a468:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a46c:	2300      	movs	r3, #0
 800a46e:	4618      	mov	r0, r3
 800a470:	3714      	adds	r7, #20
 800a472:	46bd      	mov	sp, r7
 800a474:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a478:	4770      	bx	lr
 800a47a:	bf00      	nop
 800a47c:	40010000 	.word	0x40010000
 800a480:	40000400 	.word	0x40000400
 800a484:	40000800 	.word	0x40000800
 800a488:	40000c00 	.word	0x40000c00
 800a48c:	40014000 	.word	0x40014000

0800a490 <HAL_TIMEx_CommutCallback>:
 800a490:	b480      	push	{r7}
 800a492:	b083      	sub	sp, #12
 800a494:	af00      	add	r7, sp, #0
 800a496:	6078      	str	r0, [r7, #4]
 800a498:	bf00      	nop
 800a49a:	370c      	adds	r7, #12
 800a49c:	46bd      	mov	sp, r7
 800a49e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4a2:	4770      	bx	lr

0800a4a4 <HAL_TIMEx_BreakCallback>:
 800a4a4:	b480      	push	{r7}
 800a4a6:	b083      	sub	sp, #12
 800a4a8:	af00      	add	r7, sp, #0
 800a4aa:	6078      	str	r0, [r7, #4]
 800a4ac:	bf00      	nop
 800a4ae:	370c      	adds	r7, #12
 800a4b0:	46bd      	mov	sp, r7
 800a4b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4b6:	4770      	bx	lr

0800a4b8 <HAL_UART_Init>:
 800a4b8:	b580      	push	{r7, lr}
 800a4ba:	b082      	sub	sp, #8
 800a4bc:	af00      	add	r7, sp, #0
 800a4be:	6078      	str	r0, [r7, #4]
 800a4c0:	687b      	ldr	r3, [r7, #4]
 800a4c2:	2b00      	cmp	r3, #0
 800a4c4:	d101      	bne.n	800a4ca <HAL_UART_Init+0x12>
 800a4c6:	2301      	movs	r3, #1
 800a4c8:	e03f      	b.n	800a54a <HAL_UART_Init+0x92>
 800a4ca:	687b      	ldr	r3, [r7, #4]
 800a4cc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a4d0:	b2db      	uxtb	r3, r3
 800a4d2:	2b00      	cmp	r3, #0
 800a4d4:	d106      	bne.n	800a4e4 <HAL_UART_Init+0x2c>
 800a4d6:	687b      	ldr	r3, [r7, #4]
 800a4d8:	2200      	movs	r2, #0
 800a4da:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a4de:	6878      	ldr	r0, [r7, #4]
 800a4e0:	f7fa f8c2 	bl	8004668 <HAL_UART_MspInit>
 800a4e4:	687b      	ldr	r3, [r7, #4]
 800a4e6:	2224      	movs	r2, #36	; 0x24
 800a4e8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a4ec:	687b      	ldr	r3, [r7, #4]
 800a4ee:	681b      	ldr	r3, [r3, #0]
 800a4f0:	68da      	ldr	r2, [r3, #12]
 800a4f2:	687b      	ldr	r3, [r7, #4]
 800a4f4:	681b      	ldr	r3, [r3, #0]
 800a4f6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a4fa:	60da      	str	r2, [r3, #12]
 800a4fc:	6878      	ldr	r0, [r7, #4]
 800a4fe:	f000 ffcd 	bl	800b49c <UART_SetConfig>
 800a502:	687b      	ldr	r3, [r7, #4]
 800a504:	681b      	ldr	r3, [r3, #0]
 800a506:	691a      	ldr	r2, [r3, #16]
 800a508:	687b      	ldr	r3, [r7, #4]
 800a50a:	681b      	ldr	r3, [r3, #0]
 800a50c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800a510:	611a      	str	r2, [r3, #16]
 800a512:	687b      	ldr	r3, [r7, #4]
 800a514:	681b      	ldr	r3, [r3, #0]
 800a516:	695a      	ldr	r2, [r3, #20]
 800a518:	687b      	ldr	r3, [r7, #4]
 800a51a:	681b      	ldr	r3, [r3, #0]
 800a51c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800a520:	615a      	str	r2, [r3, #20]
 800a522:	687b      	ldr	r3, [r7, #4]
 800a524:	681b      	ldr	r3, [r3, #0]
 800a526:	68da      	ldr	r2, [r3, #12]
 800a528:	687b      	ldr	r3, [r7, #4]
 800a52a:	681b      	ldr	r3, [r3, #0]
 800a52c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800a530:	60da      	str	r2, [r3, #12]
 800a532:	687b      	ldr	r3, [r7, #4]
 800a534:	2200      	movs	r2, #0
 800a536:	641a      	str	r2, [r3, #64]	; 0x40
 800a538:	687b      	ldr	r3, [r7, #4]
 800a53a:	2220      	movs	r2, #32
 800a53c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a540:	687b      	ldr	r3, [r7, #4]
 800a542:	2220      	movs	r2, #32
 800a544:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a548:	2300      	movs	r3, #0
 800a54a:	4618      	mov	r0, r3
 800a54c:	3708      	adds	r7, #8
 800a54e:	46bd      	mov	sp, r7
 800a550:	bd80      	pop	{r7, pc}
	...

0800a554 <HAL_UART_Transmit_DMA>:
 800a554:	b580      	push	{r7, lr}
 800a556:	b08c      	sub	sp, #48	; 0x30
 800a558:	af00      	add	r7, sp, #0
 800a55a:	60f8      	str	r0, [r7, #12]
 800a55c:	60b9      	str	r1, [r7, #8]
 800a55e:	4613      	mov	r3, r2
 800a560:	80fb      	strh	r3, [r7, #6]
 800a562:	68fb      	ldr	r3, [r7, #12]
 800a564:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a568:	b2db      	uxtb	r3, r3
 800a56a:	2b20      	cmp	r3, #32
 800a56c:	d165      	bne.n	800a63a <HAL_UART_Transmit_DMA+0xe6>
 800a56e:	68bb      	ldr	r3, [r7, #8]
 800a570:	2b00      	cmp	r3, #0
 800a572:	d002      	beq.n	800a57a <HAL_UART_Transmit_DMA+0x26>
 800a574:	88fb      	ldrh	r3, [r7, #6]
 800a576:	2b00      	cmp	r3, #0
 800a578:	d101      	bne.n	800a57e <HAL_UART_Transmit_DMA+0x2a>
 800a57a:	2301      	movs	r3, #1
 800a57c:	e05e      	b.n	800a63c <HAL_UART_Transmit_DMA+0xe8>
 800a57e:	68fb      	ldr	r3, [r7, #12]
 800a580:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800a584:	2b01      	cmp	r3, #1
 800a586:	d101      	bne.n	800a58c <HAL_UART_Transmit_DMA+0x38>
 800a588:	2302      	movs	r3, #2
 800a58a:	e057      	b.n	800a63c <HAL_UART_Transmit_DMA+0xe8>
 800a58c:	68fb      	ldr	r3, [r7, #12]
 800a58e:	2201      	movs	r2, #1
 800a590:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a594:	68ba      	ldr	r2, [r7, #8]
 800a596:	68fb      	ldr	r3, [r7, #12]
 800a598:	621a      	str	r2, [r3, #32]
 800a59a:	68fb      	ldr	r3, [r7, #12]
 800a59c:	88fa      	ldrh	r2, [r7, #6]
 800a59e:	849a      	strh	r2, [r3, #36]	; 0x24
 800a5a0:	68fb      	ldr	r3, [r7, #12]
 800a5a2:	88fa      	ldrh	r2, [r7, #6]
 800a5a4:	84da      	strh	r2, [r3, #38]	; 0x26
 800a5a6:	68fb      	ldr	r3, [r7, #12]
 800a5a8:	2200      	movs	r2, #0
 800a5aa:	641a      	str	r2, [r3, #64]	; 0x40
 800a5ac:	68fb      	ldr	r3, [r7, #12]
 800a5ae:	2221      	movs	r2, #33	; 0x21
 800a5b0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a5b4:	68fb      	ldr	r3, [r7, #12]
 800a5b6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a5b8:	4a22      	ldr	r2, [pc, #136]	; (800a644 <HAL_UART_Transmit_DMA+0xf0>)
 800a5ba:	63da      	str	r2, [r3, #60]	; 0x3c
 800a5bc:	68fb      	ldr	r3, [r7, #12]
 800a5be:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a5c0:	4a21      	ldr	r2, [pc, #132]	; (800a648 <HAL_UART_Transmit_DMA+0xf4>)
 800a5c2:	641a      	str	r2, [r3, #64]	; 0x40
 800a5c4:	68fb      	ldr	r3, [r7, #12]
 800a5c6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a5c8:	4a20      	ldr	r2, [pc, #128]	; (800a64c <HAL_UART_Transmit_DMA+0xf8>)
 800a5ca:	64da      	str	r2, [r3, #76]	; 0x4c
 800a5cc:	68fb      	ldr	r3, [r7, #12]
 800a5ce:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a5d0:	2200      	movs	r2, #0
 800a5d2:	651a      	str	r2, [r3, #80]	; 0x50
 800a5d4:	f107 0308 	add.w	r3, r7, #8
 800a5d8:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a5da:	68fb      	ldr	r3, [r7, #12]
 800a5dc:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800a5de:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a5e0:	6819      	ldr	r1, [r3, #0]
 800a5e2:	68fb      	ldr	r3, [r7, #12]
 800a5e4:	681b      	ldr	r3, [r3, #0]
 800a5e6:	3304      	adds	r3, #4
 800a5e8:	461a      	mov	r2, r3
 800a5ea:	88fb      	ldrh	r3, [r7, #6]
 800a5ec:	f7fa fbfe 	bl	8004dec <HAL_DMA_Start_IT>
 800a5f0:	68fb      	ldr	r3, [r7, #12]
 800a5f2:	681b      	ldr	r3, [r3, #0]
 800a5f4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800a5f8:	601a      	str	r2, [r3, #0]
 800a5fa:	68fb      	ldr	r3, [r7, #12]
 800a5fc:	2200      	movs	r2, #0
 800a5fe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a602:	68fb      	ldr	r3, [r7, #12]
 800a604:	681b      	ldr	r3, [r3, #0]
 800a606:	3314      	adds	r3, #20
 800a608:	61bb      	str	r3, [r7, #24]
 800a60a:	69bb      	ldr	r3, [r7, #24]
 800a60c:	e853 3f00 	ldrex	r3, [r3]
 800a610:	617b      	str	r3, [r7, #20]
 800a612:	697b      	ldr	r3, [r7, #20]
 800a614:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800a618:	62bb      	str	r3, [r7, #40]	; 0x28
 800a61a:	68fb      	ldr	r3, [r7, #12]
 800a61c:	681b      	ldr	r3, [r3, #0]
 800a61e:	3314      	adds	r3, #20
 800a620:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a622:	627a      	str	r2, [r7, #36]	; 0x24
 800a624:	623b      	str	r3, [r7, #32]
 800a626:	6a39      	ldr	r1, [r7, #32]
 800a628:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a62a:	e841 2300 	strex	r3, r2, [r1]
 800a62e:	61fb      	str	r3, [r7, #28]
 800a630:	69fb      	ldr	r3, [r7, #28]
 800a632:	2b00      	cmp	r3, #0
 800a634:	d1e5      	bne.n	800a602 <HAL_UART_Transmit_DMA+0xae>
 800a636:	2300      	movs	r3, #0
 800a638:	e000      	b.n	800a63c <HAL_UART_Transmit_DMA+0xe8>
 800a63a:	2302      	movs	r3, #2
 800a63c:	4618      	mov	r0, r3
 800a63e:	3730      	adds	r7, #48	; 0x30
 800a640:	46bd      	mov	sp, r7
 800a642:	bd80      	pop	{r7, pc}
 800a644:	0800ad35 	.word	0x0800ad35
 800a648:	0800adcf 	.word	0x0800adcf
 800a64c:	0800af47 	.word	0x0800af47

0800a650 <HAL_UART_Receive_DMA>:
 800a650:	b580      	push	{r7, lr}
 800a652:	b084      	sub	sp, #16
 800a654:	af00      	add	r7, sp, #0
 800a656:	60f8      	str	r0, [r7, #12]
 800a658:	60b9      	str	r1, [r7, #8]
 800a65a:	4613      	mov	r3, r2
 800a65c:	80fb      	strh	r3, [r7, #6]
 800a65e:	68fb      	ldr	r3, [r7, #12]
 800a660:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a664:	b2db      	uxtb	r3, r3
 800a666:	2b20      	cmp	r3, #32
 800a668:	d11d      	bne.n	800a6a6 <HAL_UART_Receive_DMA+0x56>
 800a66a:	68bb      	ldr	r3, [r7, #8]
 800a66c:	2b00      	cmp	r3, #0
 800a66e:	d002      	beq.n	800a676 <HAL_UART_Receive_DMA+0x26>
 800a670:	88fb      	ldrh	r3, [r7, #6]
 800a672:	2b00      	cmp	r3, #0
 800a674:	d101      	bne.n	800a67a <HAL_UART_Receive_DMA+0x2a>
 800a676:	2301      	movs	r3, #1
 800a678:	e016      	b.n	800a6a8 <HAL_UART_Receive_DMA+0x58>
 800a67a:	68fb      	ldr	r3, [r7, #12]
 800a67c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800a680:	2b01      	cmp	r3, #1
 800a682:	d101      	bne.n	800a688 <HAL_UART_Receive_DMA+0x38>
 800a684:	2302      	movs	r3, #2
 800a686:	e00f      	b.n	800a6a8 <HAL_UART_Receive_DMA+0x58>
 800a688:	68fb      	ldr	r3, [r7, #12]
 800a68a:	2201      	movs	r2, #1
 800a68c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a690:	68fb      	ldr	r3, [r7, #12]
 800a692:	2200      	movs	r2, #0
 800a694:	631a      	str	r2, [r3, #48]	; 0x30
 800a696:	88fb      	ldrh	r3, [r7, #6]
 800a698:	461a      	mov	r2, r3
 800a69a:	68b9      	ldr	r1, [r7, #8]
 800a69c:	68f8      	ldr	r0, [r7, #12]
 800a69e:	f000 fc9d 	bl	800afdc <UART_Start_Receive_DMA>
 800a6a2:	4603      	mov	r3, r0
 800a6a4:	e000      	b.n	800a6a8 <HAL_UART_Receive_DMA+0x58>
 800a6a6:	2302      	movs	r3, #2
 800a6a8:	4618      	mov	r0, r3
 800a6aa:	3710      	adds	r7, #16
 800a6ac:	46bd      	mov	sp, r7
 800a6ae:	bd80      	pop	{r7, pc}

0800a6b0 <HAL_UART_DMAStop>:
 800a6b0:	b580      	push	{r7, lr}
 800a6b2:	b090      	sub	sp, #64	; 0x40
 800a6b4:	af00      	add	r7, sp, #0
 800a6b6:	6078      	str	r0, [r7, #4]
 800a6b8:	2300      	movs	r3, #0
 800a6ba:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a6bc:	687b      	ldr	r3, [r7, #4]
 800a6be:	681b      	ldr	r3, [r3, #0]
 800a6c0:	695b      	ldr	r3, [r3, #20]
 800a6c2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800a6c6:	2b80      	cmp	r3, #128	; 0x80
 800a6c8:	bf0c      	ite	eq
 800a6ca:	2301      	moveq	r3, #1
 800a6cc:	2300      	movne	r3, #0
 800a6ce:	b2db      	uxtb	r3, r3
 800a6d0:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a6d2:	687b      	ldr	r3, [r7, #4]
 800a6d4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a6d8:	b2db      	uxtb	r3, r3
 800a6da:	2b21      	cmp	r3, #33	; 0x21
 800a6dc:	d128      	bne.n	800a730 <HAL_UART_DMAStop+0x80>
 800a6de:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a6e0:	2b00      	cmp	r3, #0
 800a6e2:	d025      	beq.n	800a730 <HAL_UART_DMAStop+0x80>
 800a6e4:	687b      	ldr	r3, [r7, #4]
 800a6e6:	681b      	ldr	r3, [r3, #0]
 800a6e8:	3314      	adds	r3, #20
 800a6ea:	627b      	str	r3, [r7, #36]	; 0x24
 800a6ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a6ee:	e853 3f00 	ldrex	r3, [r3]
 800a6f2:	623b      	str	r3, [r7, #32]
 800a6f4:	6a3b      	ldr	r3, [r7, #32]
 800a6f6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800a6fa:	63bb      	str	r3, [r7, #56]	; 0x38
 800a6fc:	687b      	ldr	r3, [r7, #4]
 800a6fe:	681b      	ldr	r3, [r3, #0]
 800a700:	3314      	adds	r3, #20
 800a702:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800a704:	633a      	str	r2, [r7, #48]	; 0x30
 800a706:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a708:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800a70a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a70c:	e841 2300 	strex	r3, r2, [r1]
 800a710:	62bb      	str	r3, [r7, #40]	; 0x28
 800a712:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a714:	2b00      	cmp	r3, #0
 800a716:	d1e5      	bne.n	800a6e4 <HAL_UART_DMAStop+0x34>
 800a718:	687b      	ldr	r3, [r7, #4]
 800a71a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a71c:	2b00      	cmp	r3, #0
 800a71e:	d004      	beq.n	800a72a <HAL_UART_DMAStop+0x7a>
 800a720:	687b      	ldr	r3, [r7, #4]
 800a722:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a724:	4618      	mov	r0, r3
 800a726:	f7fa fbb9 	bl	8004e9c <HAL_DMA_Abort>
 800a72a:	6878      	ldr	r0, [r7, #4]
 800a72c:	f000 fcf4 	bl	800b118 <UART_EndTxTransfer>
 800a730:	687b      	ldr	r3, [r7, #4]
 800a732:	681b      	ldr	r3, [r3, #0]
 800a734:	695b      	ldr	r3, [r3, #20]
 800a736:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a73a:	2b40      	cmp	r3, #64	; 0x40
 800a73c:	bf0c      	ite	eq
 800a73e:	2301      	moveq	r3, #1
 800a740:	2300      	movne	r3, #0
 800a742:	b2db      	uxtb	r3, r3
 800a744:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a746:	687b      	ldr	r3, [r7, #4]
 800a748:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a74c:	b2db      	uxtb	r3, r3
 800a74e:	2b22      	cmp	r3, #34	; 0x22
 800a750:	d128      	bne.n	800a7a4 <HAL_UART_DMAStop+0xf4>
 800a752:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a754:	2b00      	cmp	r3, #0
 800a756:	d025      	beq.n	800a7a4 <HAL_UART_DMAStop+0xf4>
 800a758:	687b      	ldr	r3, [r7, #4]
 800a75a:	681b      	ldr	r3, [r3, #0]
 800a75c:	3314      	adds	r3, #20
 800a75e:	613b      	str	r3, [r7, #16]
 800a760:	693b      	ldr	r3, [r7, #16]
 800a762:	e853 3f00 	ldrex	r3, [r3]
 800a766:	60fb      	str	r3, [r7, #12]
 800a768:	68fb      	ldr	r3, [r7, #12]
 800a76a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a76e:	637b      	str	r3, [r7, #52]	; 0x34
 800a770:	687b      	ldr	r3, [r7, #4]
 800a772:	681b      	ldr	r3, [r3, #0]
 800a774:	3314      	adds	r3, #20
 800a776:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800a778:	61fa      	str	r2, [r7, #28]
 800a77a:	61bb      	str	r3, [r7, #24]
 800a77c:	69b9      	ldr	r1, [r7, #24]
 800a77e:	69fa      	ldr	r2, [r7, #28]
 800a780:	e841 2300 	strex	r3, r2, [r1]
 800a784:	617b      	str	r3, [r7, #20]
 800a786:	697b      	ldr	r3, [r7, #20]
 800a788:	2b00      	cmp	r3, #0
 800a78a:	d1e5      	bne.n	800a758 <HAL_UART_DMAStop+0xa8>
 800a78c:	687b      	ldr	r3, [r7, #4]
 800a78e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a790:	2b00      	cmp	r3, #0
 800a792:	d004      	beq.n	800a79e <HAL_UART_DMAStop+0xee>
 800a794:	687b      	ldr	r3, [r7, #4]
 800a796:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a798:	4618      	mov	r0, r3
 800a79a:	f7fa fb7f 	bl	8004e9c <HAL_DMA_Abort>
 800a79e:	6878      	ldr	r0, [r7, #4]
 800a7a0:	f000 fce2 	bl	800b168 <UART_EndRxTransfer>
 800a7a4:	2300      	movs	r3, #0
 800a7a6:	4618      	mov	r0, r3
 800a7a8:	3740      	adds	r7, #64	; 0x40
 800a7aa:	46bd      	mov	sp, r7
 800a7ac:	bd80      	pop	{r7, pc}
	...

0800a7b0 <HAL_UART_IRQHandler>:
 800a7b0:	b580      	push	{r7, lr}
 800a7b2:	b0ba      	sub	sp, #232	; 0xe8
 800a7b4:	af00      	add	r7, sp, #0
 800a7b6:	6078      	str	r0, [r7, #4]
 800a7b8:	687b      	ldr	r3, [r7, #4]
 800a7ba:	681b      	ldr	r3, [r3, #0]
 800a7bc:	681b      	ldr	r3, [r3, #0]
 800a7be:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800a7c2:	687b      	ldr	r3, [r7, #4]
 800a7c4:	681b      	ldr	r3, [r3, #0]
 800a7c6:	68db      	ldr	r3, [r3, #12]
 800a7c8:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800a7cc:	687b      	ldr	r3, [r7, #4]
 800a7ce:	681b      	ldr	r3, [r3, #0]
 800a7d0:	695b      	ldr	r3, [r3, #20]
 800a7d2:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800a7d6:	2300      	movs	r3, #0
 800a7d8:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800a7dc:	2300      	movs	r3, #0
 800a7de:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800a7e2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a7e6:	f003 030f 	and.w	r3, r3, #15
 800a7ea:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800a7ee:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800a7f2:	2b00      	cmp	r3, #0
 800a7f4:	d10f      	bne.n	800a816 <HAL_UART_IRQHandler+0x66>
 800a7f6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a7fa:	f003 0320 	and.w	r3, r3, #32
 800a7fe:	2b00      	cmp	r3, #0
 800a800:	d009      	beq.n	800a816 <HAL_UART_IRQHandler+0x66>
 800a802:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a806:	f003 0320 	and.w	r3, r3, #32
 800a80a:	2b00      	cmp	r3, #0
 800a80c:	d003      	beq.n	800a816 <HAL_UART_IRQHandler+0x66>
 800a80e:	6878      	ldr	r0, [r7, #4]
 800a810:	f000 fd89 	bl	800b326 <UART_Receive_IT>
 800a814:	e256      	b.n	800acc4 <HAL_UART_IRQHandler+0x514>
 800a816:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800a81a:	2b00      	cmp	r3, #0
 800a81c:	f000 80de 	beq.w	800a9dc <HAL_UART_IRQHandler+0x22c>
 800a820:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a824:	f003 0301 	and.w	r3, r3, #1
 800a828:	2b00      	cmp	r3, #0
 800a82a:	d106      	bne.n	800a83a <HAL_UART_IRQHandler+0x8a>
 800a82c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a830:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800a834:	2b00      	cmp	r3, #0
 800a836:	f000 80d1 	beq.w	800a9dc <HAL_UART_IRQHandler+0x22c>
 800a83a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a83e:	f003 0301 	and.w	r3, r3, #1
 800a842:	2b00      	cmp	r3, #0
 800a844:	d00b      	beq.n	800a85e <HAL_UART_IRQHandler+0xae>
 800a846:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a84a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a84e:	2b00      	cmp	r3, #0
 800a850:	d005      	beq.n	800a85e <HAL_UART_IRQHandler+0xae>
 800a852:	687b      	ldr	r3, [r7, #4]
 800a854:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a856:	f043 0201 	orr.w	r2, r3, #1
 800a85a:	687b      	ldr	r3, [r7, #4]
 800a85c:	641a      	str	r2, [r3, #64]	; 0x40
 800a85e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a862:	f003 0304 	and.w	r3, r3, #4
 800a866:	2b00      	cmp	r3, #0
 800a868:	d00b      	beq.n	800a882 <HAL_UART_IRQHandler+0xd2>
 800a86a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a86e:	f003 0301 	and.w	r3, r3, #1
 800a872:	2b00      	cmp	r3, #0
 800a874:	d005      	beq.n	800a882 <HAL_UART_IRQHandler+0xd2>
 800a876:	687b      	ldr	r3, [r7, #4]
 800a878:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a87a:	f043 0202 	orr.w	r2, r3, #2
 800a87e:	687b      	ldr	r3, [r7, #4]
 800a880:	641a      	str	r2, [r3, #64]	; 0x40
 800a882:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a886:	f003 0302 	and.w	r3, r3, #2
 800a88a:	2b00      	cmp	r3, #0
 800a88c:	d00b      	beq.n	800a8a6 <HAL_UART_IRQHandler+0xf6>
 800a88e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a892:	f003 0301 	and.w	r3, r3, #1
 800a896:	2b00      	cmp	r3, #0
 800a898:	d005      	beq.n	800a8a6 <HAL_UART_IRQHandler+0xf6>
 800a89a:	687b      	ldr	r3, [r7, #4]
 800a89c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a89e:	f043 0204 	orr.w	r2, r3, #4
 800a8a2:	687b      	ldr	r3, [r7, #4]
 800a8a4:	641a      	str	r2, [r3, #64]	; 0x40
 800a8a6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a8aa:	f003 0308 	and.w	r3, r3, #8
 800a8ae:	2b00      	cmp	r3, #0
 800a8b0:	d011      	beq.n	800a8d6 <HAL_UART_IRQHandler+0x126>
 800a8b2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a8b6:	f003 0320 	and.w	r3, r3, #32
 800a8ba:	2b00      	cmp	r3, #0
 800a8bc:	d105      	bne.n	800a8ca <HAL_UART_IRQHandler+0x11a>
 800a8be:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a8c2:	f003 0301 	and.w	r3, r3, #1
 800a8c6:	2b00      	cmp	r3, #0
 800a8c8:	d005      	beq.n	800a8d6 <HAL_UART_IRQHandler+0x126>
 800a8ca:	687b      	ldr	r3, [r7, #4]
 800a8cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a8ce:	f043 0208 	orr.w	r2, r3, #8
 800a8d2:	687b      	ldr	r3, [r7, #4]
 800a8d4:	641a      	str	r2, [r3, #64]	; 0x40
 800a8d6:	687b      	ldr	r3, [r7, #4]
 800a8d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a8da:	2b00      	cmp	r3, #0
 800a8dc:	f000 81ed 	beq.w	800acba <HAL_UART_IRQHandler+0x50a>
 800a8e0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a8e4:	f003 0320 	and.w	r3, r3, #32
 800a8e8:	2b00      	cmp	r3, #0
 800a8ea:	d008      	beq.n	800a8fe <HAL_UART_IRQHandler+0x14e>
 800a8ec:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a8f0:	f003 0320 	and.w	r3, r3, #32
 800a8f4:	2b00      	cmp	r3, #0
 800a8f6:	d002      	beq.n	800a8fe <HAL_UART_IRQHandler+0x14e>
 800a8f8:	6878      	ldr	r0, [r7, #4]
 800a8fa:	f000 fd14 	bl	800b326 <UART_Receive_IT>
 800a8fe:	687b      	ldr	r3, [r7, #4]
 800a900:	681b      	ldr	r3, [r3, #0]
 800a902:	695b      	ldr	r3, [r3, #20]
 800a904:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a908:	2b40      	cmp	r3, #64	; 0x40
 800a90a:	bf0c      	ite	eq
 800a90c:	2301      	moveq	r3, #1
 800a90e:	2300      	movne	r3, #0
 800a910:	b2db      	uxtb	r3, r3
 800a912:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800a916:	687b      	ldr	r3, [r7, #4]
 800a918:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a91a:	f003 0308 	and.w	r3, r3, #8
 800a91e:	2b00      	cmp	r3, #0
 800a920:	d103      	bne.n	800a92a <HAL_UART_IRQHandler+0x17a>
 800a922:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800a926:	2b00      	cmp	r3, #0
 800a928:	d04f      	beq.n	800a9ca <HAL_UART_IRQHandler+0x21a>
 800a92a:	6878      	ldr	r0, [r7, #4]
 800a92c:	f000 fc1c 	bl	800b168 <UART_EndRxTransfer>
 800a930:	687b      	ldr	r3, [r7, #4]
 800a932:	681b      	ldr	r3, [r3, #0]
 800a934:	695b      	ldr	r3, [r3, #20]
 800a936:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a93a:	2b40      	cmp	r3, #64	; 0x40
 800a93c:	d141      	bne.n	800a9c2 <HAL_UART_IRQHandler+0x212>
 800a93e:	687b      	ldr	r3, [r7, #4]
 800a940:	681b      	ldr	r3, [r3, #0]
 800a942:	3314      	adds	r3, #20
 800a944:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800a948:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800a94c:	e853 3f00 	ldrex	r3, [r3]
 800a950:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800a954:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800a958:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a95c:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800a960:	687b      	ldr	r3, [r7, #4]
 800a962:	681b      	ldr	r3, [r3, #0]
 800a964:	3314      	adds	r3, #20
 800a966:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800a96a:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800a96e:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800a972:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800a976:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800a97a:	e841 2300 	strex	r3, r2, [r1]
 800a97e:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800a982:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800a986:	2b00      	cmp	r3, #0
 800a988:	d1d9      	bne.n	800a93e <HAL_UART_IRQHandler+0x18e>
 800a98a:	687b      	ldr	r3, [r7, #4]
 800a98c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a98e:	2b00      	cmp	r3, #0
 800a990:	d013      	beq.n	800a9ba <HAL_UART_IRQHandler+0x20a>
 800a992:	687b      	ldr	r3, [r7, #4]
 800a994:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a996:	4a7d      	ldr	r2, [pc, #500]	; (800ab8c <HAL_UART_IRQHandler+0x3dc>)
 800a998:	651a      	str	r2, [r3, #80]	; 0x50
 800a99a:	687b      	ldr	r3, [r7, #4]
 800a99c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a99e:	4618      	mov	r0, r3
 800a9a0:	f7fa faec 	bl	8004f7c <HAL_DMA_Abort_IT>
 800a9a4:	4603      	mov	r3, r0
 800a9a6:	2b00      	cmp	r3, #0
 800a9a8:	d016      	beq.n	800a9d8 <HAL_UART_IRQHandler+0x228>
 800a9aa:	687b      	ldr	r3, [r7, #4]
 800a9ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a9ae:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a9b0:	687a      	ldr	r2, [r7, #4]
 800a9b2:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800a9b4:	4610      	mov	r0, r2
 800a9b6:	4798      	blx	r3
 800a9b8:	e00e      	b.n	800a9d8 <HAL_UART_IRQHandler+0x228>
 800a9ba:	6878      	ldr	r0, [r7, #4]
 800a9bc:	f000 f9a4 	bl	800ad08 <HAL_UART_ErrorCallback>
 800a9c0:	e00a      	b.n	800a9d8 <HAL_UART_IRQHandler+0x228>
 800a9c2:	6878      	ldr	r0, [r7, #4]
 800a9c4:	f000 f9a0 	bl	800ad08 <HAL_UART_ErrorCallback>
 800a9c8:	e006      	b.n	800a9d8 <HAL_UART_IRQHandler+0x228>
 800a9ca:	6878      	ldr	r0, [r7, #4]
 800a9cc:	f000 f99c 	bl	800ad08 <HAL_UART_ErrorCallback>
 800a9d0:	687b      	ldr	r3, [r7, #4]
 800a9d2:	2200      	movs	r2, #0
 800a9d4:	641a      	str	r2, [r3, #64]	; 0x40
 800a9d6:	e170      	b.n	800acba <HAL_UART_IRQHandler+0x50a>
 800a9d8:	bf00      	nop
 800a9da:	e16e      	b.n	800acba <HAL_UART_IRQHandler+0x50a>
 800a9dc:	687b      	ldr	r3, [r7, #4]
 800a9de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a9e0:	2b01      	cmp	r3, #1
 800a9e2:	f040 814a 	bne.w	800ac7a <HAL_UART_IRQHandler+0x4ca>
 800a9e6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a9ea:	f003 0310 	and.w	r3, r3, #16
 800a9ee:	2b00      	cmp	r3, #0
 800a9f0:	f000 8143 	beq.w	800ac7a <HAL_UART_IRQHandler+0x4ca>
 800a9f4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a9f8:	f003 0310 	and.w	r3, r3, #16
 800a9fc:	2b00      	cmp	r3, #0
 800a9fe:	f000 813c 	beq.w	800ac7a <HAL_UART_IRQHandler+0x4ca>
 800aa02:	2300      	movs	r3, #0
 800aa04:	60bb      	str	r3, [r7, #8]
 800aa06:	687b      	ldr	r3, [r7, #4]
 800aa08:	681b      	ldr	r3, [r3, #0]
 800aa0a:	681b      	ldr	r3, [r3, #0]
 800aa0c:	60bb      	str	r3, [r7, #8]
 800aa0e:	687b      	ldr	r3, [r7, #4]
 800aa10:	681b      	ldr	r3, [r3, #0]
 800aa12:	685b      	ldr	r3, [r3, #4]
 800aa14:	60bb      	str	r3, [r7, #8]
 800aa16:	68bb      	ldr	r3, [r7, #8]
 800aa18:	687b      	ldr	r3, [r7, #4]
 800aa1a:	681b      	ldr	r3, [r3, #0]
 800aa1c:	695b      	ldr	r3, [r3, #20]
 800aa1e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800aa22:	2b40      	cmp	r3, #64	; 0x40
 800aa24:	f040 80b4 	bne.w	800ab90 <HAL_UART_IRQHandler+0x3e0>
 800aa28:	687b      	ldr	r3, [r7, #4]
 800aa2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aa2c:	681b      	ldr	r3, [r3, #0]
 800aa2e:	685b      	ldr	r3, [r3, #4]
 800aa30:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 800aa34:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800aa38:	2b00      	cmp	r3, #0
 800aa3a:	f000 8140 	beq.w	800acbe <HAL_UART_IRQHandler+0x50e>
 800aa3e:	687b      	ldr	r3, [r7, #4]
 800aa40:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800aa42:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800aa46:	429a      	cmp	r2, r3
 800aa48:	f080 8139 	bcs.w	800acbe <HAL_UART_IRQHandler+0x50e>
 800aa4c:	687b      	ldr	r3, [r7, #4]
 800aa4e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800aa52:	85da      	strh	r2, [r3, #46]	; 0x2e
 800aa54:	687b      	ldr	r3, [r7, #4]
 800aa56:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aa58:	69db      	ldr	r3, [r3, #28]
 800aa5a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800aa5e:	f000 8088 	beq.w	800ab72 <HAL_UART_IRQHandler+0x3c2>
 800aa62:	687b      	ldr	r3, [r7, #4]
 800aa64:	681b      	ldr	r3, [r3, #0]
 800aa66:	330c      	adds	r3, #12
 800aa68:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800aa6c:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800aa70:	e853 3f00 	ldrex	r3, [r3]
 800aa74:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800aa78:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800aa7c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800aa80:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800aa84:	687b      	ldr	r3, [r7, #4]
 800aa86:	681b      	ldr	r3, [r3, #0]
 800aa88:	330c      	adds	r3, #12
 800aa8a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800aa8e:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800aa92:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800aa96:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800aa9a:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800aa9e:	e841 2300 	strex	r3, r2, [r1]
 800aaa2:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800aaa6:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800aaaa:	2b00      	cmp	r3, #0
 800aaac:	d1d9      	bne.n	800aa62 <HAL_UART_IRQHandler+0x2b2>
 800aaae:	687b      	ldr	r3, [r7, #4]
 800aab0:	681b      	ldr	r3, [r3, #0]
 800aab2:	3314      	adds	r3, #20
 800aab4:	677b      	str	r3, [r7, #116]	; 0x74
 800aab6:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800aab8:	e853 3f00 	ldrex	r3, [r3]
 800aabc:	673b      	str	r3, [r7, #112]	; 0x70
 800aabe:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800aac0:	f023 0301 	bic.w	r3, r3, #1
 800aac4:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800aac8:	687b      	ldr	r3, [r7, #4]
 800aaca:	681b      	ldr	r3, [r3, #0]
 800aacc:	3314      	adds	r3, #20
 800aace:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800aad2:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800aad6:	67fb      	str	r3, [r7, #124]	; 0x7c
 800aad8:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800aada:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800aade:	e841 2300 	strex	r3, r2, [r1]
 800aae2:	67bb      	str	r3, [r7, #120]	; 0x78
 800aae4:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800aae6:	2b00      	cmp	r3, #0
 800aae8:	d1e1      	bne.n	800aaae <HAL_UART_IRQHandler+0x2fe>
 800aaea:	687b      	ldr	r3, [r7, #4]
 800aaec:	681b      	ldr	r3, [r3, #0]
 800aaee:	3314      	adds	r3, #20
 800aaf0:	663b      	str	r3, [r7, #96]	; 0x60
 800aaf2:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800aaf4:	e853 3f00 	ldrex	r3, [r3]
 800aaf8:	65fb      	str	r3, [r7, #92]	; 0x5c
 800aafa:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800aafc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ab00:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800ab04:	687b      	ldr	r3, [r7, #4]
 800ab06:	681b      	ldr	r3, [r3, #0]
 800ab08:	3314      	adds	r3, #20
 800ab0a:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800ab0e:	66fa      	str	r2, [r7, #108]	; 0x6c
 800ab10:	66bb      	str	r3, [r7, #104]	; 0x68
 800ab12:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800ab14:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800ab16:	e841 2300 	strex	r3, r2, [r1]
 800ab1a:	667b      	str	r3, [r7, #100]	; 0x64
 800ab1c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800ab1e:	2b00      	cmp	r3, #0
 800ab20:	d1e3      	bne.n	800aaea <HAL_UART_IRQHandler+0x33a>
 800ab22:	687b      	ldr	r3, [r7, #4]
 800ab24:	2220      	movs	r2, #32
 800ab26:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800ab2a:	687b      	ldr	r3, [r7, #4]
 800ab2c:	2200      	movs	r2, #0
 800ab2e:	631a      	str	r2, [r3, #48]	; 0x30
 800ab30:	687b      	ldr	r3, [r7, #4]
 800ab32:	681b      	ldr	r3, [r3, #0]
 800ab34:	330c      	adds	r3, #12
 800ab36:	64fb      	str	r3, [r7, #76]	; 0x4c
 800ab38:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800ab3a:	e853 3f00 	ldrex	r3, [r3]
 800ab3e:	64bb      	str	r3, [r7, #72]	; 0x48
 800ab40:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800ab42:	f023 0310 	bic.w	r3, r3, #16
 800ab46:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800ab4a:	687b      	ldr	r3, [r7, #4]
 800ab4c:	681b      	ldr	r3, [r3, #0]
 800ab4e:	330c      	adds	r3, #12
 800ab50:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 800ab54:	65ba      	str	r2, [r7, #88]	; 0x58
 800ab56:	657b      	str	r3, [r7, #84]	; 0x54
 800ab58:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800ab5a:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800ab5c:	e841 2300 	strex	r3, r2, [r1]
 800ab60:	653b      	str	r3, [r7, #80]	; 0x50
 800ab62:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800ab64:	2b00      	cmp	r3, #0
 800ab66:	d1e3      	bne.n	800ab30 <HAL_UART_IRQHandler+0x380>
 800ab68:	687b      	ldr	r3, [r7, #4]
 800ab6a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ab6c:	4618      	mov	r0, r3
 800ab6e:	f7fa f995 	bl	8004e9c <HAL_DMA_Abort>
 800ab72:	687b      	ldr	r3, [r7, #4]
 800ab74:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800ab76:	687b      	ldr	r3, [r7, #4]
 800ab78:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800ab7a:	b29b      	uxth	r3, r3
 800ab7c:	1ad3      	subs	r3, r2, r3
 800ab7e:	b29b      	uxth	r3, r3
 800ab80:	4619      	mov	r1, r3
 800ab82:	6878      	ldr	r0, [r7, #4]
 800ab84:	f000 f8ca 	bl	800ad1c <HAL_UARTEx_RxEventCallback>
 800ab88:	e099      	b.n	800acbe <HAL_UART_IRQHandler+0x50e>
 800ab8a:	bf00      	nop
 800ab8c:	0800b22f 	.word	0x0800b22f
 800ab90:	687b      	ldr	r3, [r7, #4]
 800ab92:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800ab94:	687b      	ldr	r3, [r7, #4]
 800ab96:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800ab98:	b29b      	uxth	r3, r3
 800ab9a:	1ad3      	subs	r3, r2, r3
 800ab9c:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 800aba0:	687b      	ldr	r3, [r7, #4]
 800aba2:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800aba4:	b29b      	uxth	r3, r3
 800aba6:	2b00      	cmp	r3, #0
 800aba8:	f000 808b 	beq.w	800acc2 <HAL_UART_IRQHandler+0x512>
 800abac:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800abb0:	2b00      	cmp	r3, #0
 800abb2:	f000 8086 	beq.w	800acc2 <HAL_UART_IRQHandler+0x512>
 800abb6:	687b      	ldr	r3, [r7, #4]
 800abb8:	681b      	ldr	r3, [r3, #0]
 800abba:	330c      	adds	r3, #12
 800abbc:	63bb      	str	r3, [r7, #56]	; 0x38
 800abbe:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800abc0:	e853 3f00 	ldrex	r3, [r3]
 800abc4:	637b      	str	r3, [r7, #52]	; 0x34
 800abc6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800abc8:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800abcc:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800abd0:	687b      	ldr	r3, [r7, #4]
 800abd2:	681b      	ldr	r3, [r3, #0]
 800abd4:	330c      	adds	r3, #12
 800abd6:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800abda:	647a      	str	r2, [r7, #68]	; 0x44
 800abdc:	643b      	str	r3, [r7, #64]	; 0x40
 800abde:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800abe0:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800abe2:	e841 2300 	strex	r3, r2, [r1]
 800abe6:	63fb      	str	r3, [r7, #60]	; 0x3c
 800abe8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800abea:	2b00      	cmp	r3, #0
 800abec:	d1e3      	bne.n	800abb6 <HAL_UART_IRQHandler+0x406>
 800abee:	687b      	ldr	r3, [r7, #4]
 800abf0:	681b      	ldr	r3, [r3, #0]
 800abf2:	3314      	adds	r3, #20
 800abf4:	627b      	str	r3, [r7, #36]	; 0x24
 800abf6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800abf8:	e853 3f00 	ldrex	r3, [r3]
 800abfc:	623b      	str	r3, [r7, #32]
 800abfe:	6a3b      	ldr	r3, [r7, #32]
 800ac00:	f023 0301 	bic.w	r3, r3, #1
 800ac04:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800ac08:	687b      	ldr	r3, [r7, #4]
 800ac0a:	681b      	ldr	r3, [r3, #0]
 800ac0c:	3314      	adds	r3, #20
 800ac0e:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800ac12:	633a      	str	r2, [r7, #48]	; 0x30
 800ac14:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ac16:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800ac18:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800ac1a:	e841 2300 	strex	r3, r2, [r1]
 800ac1e:	62bb      	str	r3, [r7, #40]	; 0x28
 800ac20:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ac22:	2b00      	cmp	r3, #0
 800ac24:	d1e3      	bne.n	800abee <HAL_UART_IRQHandler+0x43e>
 800ac26:	687b      	ldr	r3, [r7, #4]
 800ac28:	2220      	movs	r2, #32
 800ac2a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800ac2e:	687b      	ldr	r3, [r7, #4]
 800ac30:	2200      	movs	r2, #0
 800ac32:	631a      	str	r2, [r3, #48]	; 0x30
 800ac34:	687b      	ldr	r3, [r7, #4]
 800ac36:	681b      	ldr	r3, [r3, #0]
 800ac38:	330c      	adds	r3, #12
 800ac3a:	613b      	str	r3, [r7, #16]
 800ac3c:	693b      	ldr	r3, [r7, #16]
 800ac3e:	e853 3f00 	ldrex	r3, [r3]
 800ac42:	60fb      	str	r3, [r7, #12]
 800ac44:	68fb      	ldr	r3, [r7, #12]
 800ac46:	f023 0310 	bic.w	r3, r3, #16
 800ac4a:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800ac4e:	687b      	ldr	r3, [r7, #4]
 800ac50:	681b      	ldr	r3, [r3, #0]
 800ac52:	330c      	adds	r3, #12
 800ac54:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 800ac58:	61fa      	str	r2, [r7, #28]
 800ac5a:	61bb      	str	r3, [r7, #24]
 800ac5c:	69b9      	ldr	r1, [r7, #24]
 800ac5e:	69fa      	ldr	r2, [r7, #28]
 800ac60:	e841 2300 	strex	r3, r2, [r1]
 800ac64:	617b      	str	r3, [r7, #20]
 800ac66:	697b      	ldr	r3, [r7, #20]
 800ac68:	2b00      	cmp	r3, #0
 800ac6a:	d1e3      	bne.n	800ac34 <HAL_UART_IRQHandler+0x484>
 800ac6c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800ac70:	4619      	mov	r1, r3
 800ac72:	6878      	ldr	r0, [r7, #4]
 800ac74:	f000 f852 	bl	800ad1c <HAL_UARTEx_RxEventCallback>
 800ac78:	e023      	b.n	800acc2 <HAL_UART_IRQHandler+0x512>
 800ac7a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ac7e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ac82:	2b00      	cmp	r3, #0
 800ac84:	d009      	beq.n	800ac9a <HAL_UART_IRQHandler+0x4ea>
 800ac86:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ac8a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ac8e:	2b00      	cmp	r3, #0
 800ac90:	d003      	beq.n	800ac9a <HAL_UART_IRQHandler+0x4ea>
 800ac92:	6878      	ldr	r0, [r7, #4]
 800ac94:	f000 fadf 	bl	800b256 <UART_Transmit_IT>
 800ac98:	e014      	b.n	800acc4 <HAL_UART_IRQHandler+0x514>
 800ac9a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ac9e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800aca2:	2b00      	cmp	r3, #0
 800aca4:	d00e      	beq.n	800acc4 <HAL_UART_IRQHandler+0x514>
 800aca6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800acaa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800acae:	2b00      	cmp	r3, #0
 800acb0:	d008      	beq.n	800acc4 <HAL_UART_IRQHandler+0x514>
 800acb2:	6878      	ldr	r0, [r7, #4]
 800acb4:	f000 fb1f 	bl	800b2f6 <UART_EndTransmit_IT>
 800acb8:	e004      	b.n	800acc4 <HAL_UART_IRQHandler+0x514>
 800acba:	bf00      	nop
 800acbc:	e002      	b.n	800acc4 <HAL_UART_IRQHandler+0x514>
 800acbe:	bf00      	nop
 800acc0:	e000      	b.n	800acc4 <HAL_UART_IRQHandler+0x514>
 800acc2:	bf00      	nop
 800acc4:	37e8      	adds	r7, #232	; 0xe8
 800acc6:	46bd      	mov	sp, r7
 800acc8:	bd80      	pop	{r7, pc}
 800acca:	bf00      	nop

0800accc <HAL_UART_TxCpltCallback>:
 800accc:	b480      	push	{r7}
 800acce:	b083      	sub	sp, #12
 800acd0:	af00      	add	r7, sp, #0
 800acd2:	6078      	str	r0, [r7, #4]
 800acd4:	bf00      	nop
 800acd6:	370c      	adds	r7, #12
 800acd8:	46bd      	mov	sp, r7
 800acda:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acde:	4770      	bx	lr

0800ace0 <HAL_UART_TxHalfCpltCallback>:
 800ace0:	b480      	push	{r7}
 800ace2:	b083      	sub	sp, #12
 800ace4:	af00      	add	r7, sp, #0
 800ace6:	6078      	str	r0, [r7, #4]
 800ace8:	bf00      	nop
 800acea:	370c      	adds	r7, #12
 800acec:	46bd      	mov	sp, r7
 800acee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acf2:	4770      	bx	lr

0800acf4 <HAL_UART_RxHalfCpltCallback>:
 800acf4:	b480      	push	{r7}
 800acf6:	b083      	sub	sp, #12
 800acf8:	af00      	add	r7, sp, #0
 800acfa:	6078      	str	r0, [r7, #4]
 800acfc:	bf00      	nop
 800acfe:	370c      	adds	r7, #12
 800ad00:	46bd      	mov	sp, r7
 800ad02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad06:	4770      	bx	lr

0800ad08 <HAL_UART_ErrorCallback>:
 800ad08:	b480      	push	{r7}
 800ad0a:	b083      	sub	sp, #12
 800ad0c:	af00      	add	r7, sp, #0
 800ad0e:	6078      	str	r0, [r7, #4]
 800ad10:	bf00      	nop
 800ad12:	370c      	adds	r7, #12
 800ad14:	46bd      	mov	sp, r7
 800ad16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad1a:	4770      	bx	lr

0800ad1c <HAL_UARTEx_RxEventCallback>:
 800ad1c:	b480      	push	{r7}
 800ad1e:	b083      	sub	sp, #12
 800ad20:	af00      	add	r7, sp, #0
 800ad22:	6078      	str	r0, [r7, #4]
 800ad24:	460b      	mov	r3, r1
 800ad26:	807b      	strh	r3, [r7, #2]
 800ad28:	bf00      	nop
 800ad2a:	370c      	adds	r7, #12
 800ad2c:	46bd      	mov	sp, r7
 800ad2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad32:	4770      	bx	lr

0800ad34 <UART_DMATransmitCplt>:
 800ad34:	b580      	push	{r7, lr}
 800ad36:	b090      	sub	sp, #64	; 0x40
 800ad38:	af00      	add	r7, sp, #0
 800ad3a:	6078      	str	r0, [r7, #4]
 800ad3c:	687b      	ldr	r3, [r7, #4]
 800ad3e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ad40:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ad42:	687b      	ldr	r3, [r7, #4]
 800ad44:	681b      	ldr	r3, [r3, #0]
 800ad46:	681b      	ldr	r3, [r3, #0]
 800ad48:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ad4c:	2b00      	cmp	r3, #0
 800ad4e:	d137      	bne.n	800adc0 <UART_DMATransmitCplt+0x8c>
 800ad50:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ad52:	2200      	movs	r2, #0
 800ad54:	84da      	strh	r2, [r3, #38]	; 0x26
 800ad56:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ad58:	681b      	ldr	r3, [r3, #0]
 800ad5a:	3314      	adds	r3, #20
 800ad5c:	627b      	str	r3, [r7, #36]	; 0x24
 800ad5e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ad60:	e853 3f00 	ldrex	r3, [r3]
 800ad64:	623b      	str	r3, [r7, #32]
 800ad66:	6a3b      	ldr	r3, [r7, #32]
 800ad68:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ad6c:	63bb      	str	r3, [r7, #56]	; 0x38
 800ad6e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ad70:	681b      	ldr	r3, [r3, #0]
 800ad72:	3314      	adds	r3, #20
 800ad74:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800ad76:	633a      	str	r2, [r7, #48]	; 0x30
 800ad78:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ad7a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800ad7c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800ad7e:	e841 2300 	strex	r3, r2, [r1]
 800ad82:	62bb      	str	r3, [r7, #40]	; 0x28
 800ad84:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ad86:	2b00      	cmp	r3, #0
 800ad88:	d1e5      	bne.n	800ad56 <UART_DMATransmitCplt+0x22>
 800ad8a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ad8c:	681b      	ldr	r3, [r3, #0]
 800ad8e:	330c      	adds	r3, #12
 800ad90:	613b      	str	r3, [r7, #16]
 800ad92:	693b      	ldr	r3, [r7, #16]
 800ad94:	e853 3f00 	ldrex	r3, [r3]
 800ad98:	60fb      	str	r3, [r7, #12]
 800ad9a:	68fb      	ldr	r3, [r7, #12]
 800ad9c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ada0:	637b      	str	r3, [r7, #52]	; 0x34
 800ada2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ada4:	681b      	ldr	r3, [r3, #0]
 800ada6:	330c      	adds	r3, #12
 800ada8:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800adaa:	61fa      	str	r2, [r7, #28]
 800adac:	61bb      	str	r3, [r7, #24]
 800adae:	69b9      	ldr	r1, [r7, #24]
 800adb0:	69fa      	ldr	r2, [r7, #28]
 800adb2:	e841 2300 	strex	r3, r2, [r1]
 800adb6:	617b      	str	r3, [r7, #20]
 800adb8:	697b      	ldr	r3, [r7, #20]
 800adba:	2b00      	cmp	r3, #0
 800adbc:	d1e5      	bne.n	800ad8a <UART_DMATransmitCplt+0x56>
 800adbe:	e002      	b.n	800adc6 <UART_DMATransmitCplt+0x92>
 800adc0:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 800adc2:	f7ff ff83 	bl	800accc <HAL_UART_TxCpltCallback>
 800adc6:	bf00      	nop
 800adc8:	3740      	adds	r7, #64	; 0x40
 800adca:	46bd      	mov	sp, r7
 800adcc:	bd80      	pop	{r7, pc}

0800adce <UART_DMATxHalfCplt>:
 800adce:	b580      	push	{r7, lr}
 800add0:	b084      	sub	sp, #16
 800add2:	af00      	add	r7, sp, #0
 800add4:	6078      	str	r0, [r7, #4]
 800add6:	687b      	ldr	r3, [r7, #4]
 800add8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800adda:	60fb      	str	r3, [r7, #12]
 800addc:	68f8      	ldr	r0, [r7, #12]
 800adde:	f7ff ff7f 	bl	800ace0 <HAL_UART_TxHalfCpltCallback>
 800ade2:	bf00      	nop
 800ade4:	3710      	adds	r7, #16
 800ade6:	46bd      	mov	sp, r7
 800ade8:	bd80      	pop	{r7, pc}

0800adea <UART_DMAReceiveCplt>:
 800adea:	b580      	push	{r7, lr}
 800adec:	b09c      	sub	sp, #112	; 0x70
 800adee:	af00      	add	r7, sp, #0
 800adf0:	6078      	str	r0, [r7, #4]
 800adf2:	687b      	ldr	r3, [r7, #4]
 800adf4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800adf6:	66fb      	str	r3, [r7, #108]	; 0x6c
 800adf8:	687b      	ldr	r3, [r7, #4]
 800adfa:	681b      	ldr	r3, [r3, #0]
 800adfc:	681b      	ldr	r3, [r3, #0]
 800adfe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ae02:	2b00      	cmp	r3, #0
 800ae04:	d172      	bne.n	800aeec <UART_DMAReceiveCplt+0x102>
 800ae06:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ae08:	2200      	movs	r2, #0
 800ae0a:	85da      	strh	r2, [r3, #46]	; 0x2e
 800ae0c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ae0e:	681b      	ldr	r3, [r3, #0]
 800ae10:	330c      	adds	r3, #12
 800ae12:	64fb      	str	r3, [r7, #76]	; 0x4c
 800ae14:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800ae16:	e853 3f00 	ldrex	r3, [r3]
 800ae1a:	64bb      	str	r3, [r7, #72]	; 0x48
 800ae1c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800ae1e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800ae22:	66bb      	str	r3, [r7, #104]	; 0x68
 800ae24:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ae26:	681b      	ldr	r3, [r3, #0]
 800ae28:	330c      	adds	r3, #12
 800ae2a:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800ae2c:	65ba      	str	r2, [r7, #88]	; 0x58
 800ae2e:	657b      	str	r3, [r7, #84]	; 0x54
 800ae30:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800ae32:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800ae34:	e841 2300 	strex	r3, r2, [r1]
 800ae38:	653b      	str	r3, [r7, #80]	; 0x50
 800ae3a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800ae3c:	2b00      	cmp	r3, #0
 800ae3e:	d1e5      	bne.n	800ae0c <UART_DMAReceiveCplt+0x22>
 800ae40:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ae42:	681b      	ldr	r3, [r3, #0]
 800ae44:	3314      	adds	r3, #20
 800ae46:	63bb      	str	r3, [r7, #56]	; 0x38
 800ae48:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800ae4a:	e853 3f00 	ldrex	r3, [r3]
 800ae4e:	637b      	str	r3, [r7, #52]	; 0x34
 800ae50:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ae52:	f023 0301 	bic.w	r3, r3, #1
 800ae56:	667b      	str	r3, [r7, #100]	; 0x64
 800ae58:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ae5a:	681b      	ldr	r3, [r3, #0]
 800ae5c:	3314      	adds	r3, #20
 800ae5e:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800ae60:	647a      	str	r2, [r7, #68]	; 0x44
 800ae62:	643b      	str	r3, [r7, #64]	; 0x40
 800ae64:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800ae66:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800ae68:	e841 2300 	strex	r3, r2, [r1]
 800ae6c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ae6e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ae70:	2b00      	cmp	r3, #0
 800ae72:	d1e5      	bne.n	800ae40 <UART_DMAReceiveCplt+0x56>
 800ae74:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ae76:	681b      	ldr	r3, [r3, #0]
 800ae78:	3314      	adds	r3, #20
 800ae7a:	627b      	str	r3, [r7, #36]	; 0x24
 800ae7c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ae7e:	e853 3f00 	ldrex	r3, [r3]
 800ae82:	623b      	str	r3, [r7, #32]
 800ae84:	6a3b      	ldr	r3, [r7, #32]
 800ae86:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ae8a:	663b      	str	r3, [r7, #96]	; 0x60
 800ae8c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800ae8e:	681b      	ldr	r3, [r3, #0]
 800ae90:	3314      	adds	r3, #20
 800ae92:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800ae94:	633a      	str	r2, [r7, #48]	; 0x30
 800ae96:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ae98:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800ae9a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800ae9c:	e841 2300 	strex	r3, r2, [r1]
 800aea0:	62bb      	str	r3, [r7, #40]	; 0x28
 800aea2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800aea4:	2b00      	cmp	r3, #0
 800aea6:	d1e5      	bne.n	800ae74 <UART_DMAReceiveCplt+0x8a>
 800aea8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800aeaa:	2220      	movs	r2, #32
 800aeac:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800aeb0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800aeb2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800aeb4:	2b01      	cmp	r3, #1
 800aeb6:	d119      	bne.n	800aeec <UART_DMAReceiveCplt+0x102>
 800aeb8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800aeba:	681b      	ldr	r3, [r3, #0]
 800aebc:	330c      	adds	r3, #12
 800aebe:	613b      	str	r3, [r7, #16]
 800aec0:	693b      	ldr	r3, [r7, #16]
 800aec2:	e853 3f00 	ldrex	r3, [r3]
 800aec6:	60fb      	str	r3, [r7, #12]
 800aec8:	68fb      	ldr	r3, [r7, #12]
 800aeca:	f023 0310 	bic.w	r3, r3, #16
 800aece:	65fb      	str	r3, [r7, #92]	; 0x5c
 800aed0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800aed2:	681b      	ldr	r3, [r3, #0]
 800aed4:	330c      	adds	r3, #12
 800aed6:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800aed8:	61fa      	str	r2, [r7, #28]
 800aeda:	61bb      	str	r3, [r7, #24]
 800aedc:	69b9      	ldr	r1, [r7, #24]
 800aede:	69fa      	ldr	r2, [r7, #28]
 800aee0:	e841 2300 	strex	r3, r2, [r1]
 800aee4:	617b      	str	r3, [r7, #20]
 800aee6:	697b      	ldr	r3, [r7, #20]
 800aee8:	2b00      	cmp	r3, #0
 800aeea:	d1e5      	bne.n	800aeb8 <UART_DMAReceiveCplt+0xce>
 800aeec:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800aeee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800aef0:	2b01      	cmp	r3, #1
 800aef2:	d106      	bne.n	800af02 <UART_DMAReceiveCplt+0x118>
 800aef4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800aef6:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800aef8:	4619      	mov	r1, r3
 800aefa:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 800aefc:	f7ff ff0e 	bl	800ad1c <HAL_UARTEx_RxEventCallback>
 800af00:	e002      	b.n	800af08 <UART_DMAReceiveCplt+0x11e>
 800af02:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 800af04:	f7f9 f9e2 	bl	80042cc <HAL_UART_RxCpltCallback>
 800af08:	bf00      	nop
 800af0a:	3770      	adds	r7, #112	; 0x70
 800af0c:	46bd      	mov	sp, r7
 800af0e:	bd80      	pop	{r7, pc}

0800af10 <UART_DMARxHalfCplt>:
 800af10:	b580      	push	{r7, lr}
 800af12:	b084      	sub	sp, #16
 800af14:	af00      	add	r7, sp, #0
 800af16:	6078      	str	r0, [r7, #4]
 800af18:	687b      	ldr	r3, [r7, #4]
 800af1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800af1c:	60fb      	str	r3, [r7, #12]
 800af1e:	68fb      	ldr	r3, [r7, #12]
 800af20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800af22:	2b01      	cmp	r3, #1
 800af24:	d108      	bne.n	800af38 <UART_DMARxHalfCplt+0x28>
 800af26:	68fb      	ldr	r3, [r7, #12]
 800af28:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800af2a:	085b      	lsrs	r3, r3, #1
 800af2c:	b29b      	uxth	r3, r3
 800af2e:	4619      	mov	r1, r3
 800af30:	68f8      	ldr	r0, [r7, #12]
 800af32:	f7ff fef3 	bl	800ad1c <HAL_UARTEx_RxEventCallback>
 800af36:	e002      	b.n	800af3e <UART_DMARxHalfCplt+0x2e>
 800af38:	68f8      	ldr	r0, [r7, #12]
 800af3a:	f7ff fedb 	bl	800acf4 <HAL_UART_RxHalfCpltCallback>
 800af3e:	bf00      	nop
 800af40:	3710      	adds	r7, #16
 800af42:	46bd      	mov	sp, r7
 800af44:	bd80      	pop	{r7, pc}

0800af46 <UART_DMAError>:
 800af46:	b580      	push	{r7, lr}
 800af48:	b084      	sub	sp, #16
 800af4a:	af00      	add	r7, sp, #0
 800af4c:	6078      	str	r0, [r7, #4]
 800af4e:	2300      	movs	r3, #0
 800af50:	60fb      	str	r3, [r7, #12]
 800af52:	687b      	ldr	r3, [r7, #4]
 800af54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800af56:	60bb      	str	r3, [r7, #8]
 800af58:	68bb      	ldr	r3, [r7, #8]
 800af5a:	681b      	ldr	r3, [r3, #0]
 800af5c:	695b      	ldr	r3, [r3, #20]
 800af5e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800af62:	2b80      	cmp	r3, #128	; 0x80
 800af64:	bf0c      	ite	eq
 800af66:	2301      	moveq	r3, #1
 800af68:	2300      	movne	r3, #0
 800af6a:	b2db      	uxtb	r3, r3
 800af6c:	60fb      	str	r3, [r7, #12]
 800af6e:	68bb      	ldr	r3, [r7, #8]
 800af70:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800af74:	b2db      	uxtb	r3, r3
 800af76:	2b21      	cmp	r3, #33	; 0x21
 800af78:	d108      	bne.n	800af8c <UART_DMAError+0x46>
 800af7a:	68fb      	ldr	r3, [r7, #12]
 800af7c:	2b00      	cmp	r3, #0
 800af7e:	d005      	beq.n	800af8c <UART_DMAError+0x46>
 800af80:	68bb      	ldr	r3, [r7, #8]
 800af82:	2200      	movs	r2, #0
 800af84:	84da      	strh	r2, [r3, #38]	; 0x26
 800af86:	68b8      	ldr	r0, [r7, #8]
 800af88:	f000 f8c6 	bl	800b118 <UART_EndTxTransfer>
 800af8c:	68bb      	ldr	r3, [r7, #8]
 800af8e:	681b      	ldr	r3, [r3, #0]
 800af90:	695b      	ldr	r3, [r3, #20]
 800af92:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800af96:	2b40      	cmp	r3, #64	; 0x40
 800af98:	bf0c      	ite	eq
 800af9a:	2301      	moveq	r3, #1
 800af9c:	2300      	movne	r3, #0
 800af9e:	b2db      	uxtb	r3, r3
 800afa0:	60fb      	str	r3, [r7, #12]
 800afa2:	68bb      	ldr	r3, [r7, #8]
 800afa4:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800afa8:	b2db      	uxtb	r3, r3
 800afaa:	2b22      	cmp	r3, #34	; 0x22
 800afac:	d108      	bne.n	800afc0 <UART_DMAError+0x7a>
 800afae:	68fb      	ldr	r3, [r7, #12]
 800afb0:	2b00      	cmp	r3, #0
 800afb2:	d005      	beq.n	800afc0 <UART_DMAError+0x7a>
 800afb4:	68bb      	ldr	r3, [r7, #8]
 800afb6:	2200      	movs	r2, #0
 800afb8:	85da      	strh	r2, [r3, #46]	; 0x2e
 800afba:	68b8      	ldr	r0, [r7, #8]
 800afbc:	f000 f8d4 	bl	800b168 <UART_EndRxTransfer>
 800afc0:	68bb      	ldr	r3, [r7, #8]
 800afc2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800afc4:	f043 0210 	orr.w	r2, r3, #16
 800afc8:	68bb      	ldr	r3, [r7, #8]
 800afca:	641a      	str	r2, [r3, #64]	; 0x40
 800afcc:	68b8      	ldr	r0, [r7, #8]
 800afce:	f7ff fe9b 	bl	800ad08 <HAL_UART_ErrorCallback>
 800afd2:	bf00      	nop
 800afd4:	3710      	adds	r7, #16
 800afd6:	46bd      	mov	sp, r7
 800afd8:	bd80      	pop	{r7, pc}
	...

0800afdc <UART_Start_Receive_DMA>:
 800afdc:	b580      	push	{r7, lr}
 800afde:	b098      	sub	sp, #96	; 0x60
 800afe0:	af00      	add	r7, sp, #0
 800afe2:	60f8      	str	r0, [r7, #12]
 800afe4:	60b9      	str	r1, [r7, #8]
 800afe6:	4613      	mov	r3, r2
 800afe8:	80fb      	strh	r3, [r7, #6]
 800afea:	68ba      	ldr	r2, [r7, #8]
 800afec:	68fb      	ldr	r3, [r7, #12]
 800afee:	629a      	str	r2, [r3, #40]	; 0x28
 800aff0:	68fb      	ldr	r3, [r7, #12]
 800aff2:	88fa      	ldrh	r2, [r7, #6]
 800aff4:	859a      	strh	r2, [r3, #44]	; 0x2c
 800aff6:	68fb      	ldr	r3, [r7, #12]
 800aff8:	2200      	movs	r2, #0
 800affa:	641a      	str	r2, [r3, #64]	; 0x40
 800affc:	68fb      	ldr	r3, [r7, #12]
 800affe:	2222      	movs	r2, #34	; 0x22
 800b000:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b004:	68fb      	ldr	r3, [r7, #12]
 800b006:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b008:	4a40      	ldr	r2, [pc, #256]	; (800b10c <UART_Start_Receive_DMA+0x130>)
 800b00a:	63da      	str	r2, [r3, #60]	; 0x3c
 800b00c:	68fb      	ldr	r3, [r7, #12]
 800b00e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b010:	4a3f      	ldr	r2, [pc, #252]	; (800b110 <UART_Start_Receive_DMA+0x134>)
 800b012:	641a      	str	r2, [r3, #64]	; 0x40
 800b014:	68fb      	ldr	r3, [r7, #12]
 800b016:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b018:	4a3e      	ldr	r2, [pc, #248]	; (800b114 <UART_Start_Receive_DMA+0x138>)
 800b01a:	64da      	str	r2, [r3, #76]	; 0x4c
 800b01c:	68fb      	ldr	r3, [r7, #12]
 800b01e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b020:	2200      	movs	r2, #0
 800b022:	651a      	str	r2, [r3, #80]	; 0x50
 800b024:	f107 0308 	add.w	r3, r7, #8
 800b028:	65fb      	str	r3, [r7, #92]	; 0x5c
 800b02a:	68fb      	ldr	r3, [r7, #12]
 800b02c:	6b98      	ldr	r0, [r3, #56]	; 0x38
 800b02e:	68fb      	ldr	r3, [r7, #12]
 800b030:	681b      	ldr	r3, [r3, #0]
 800b032:	3304      	adds	r3, #4
 800b034:	4619      	mov	r1, r3
 800b036:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800b038:	681a      	ldr	r2, [r3, #0]
 800b03a:	88fb      	ldrh	r3, [r7, #6]
 800b03c:	f7f9 fed6 	bl	8004dec <HAL_DMA_Start_IT>
 800b040:	2300      	movs	r3, #0
 800b042:	613b      	str	r3, [r7, #16]
 800b044:	68fb      	ldr	r3, [r7, #12]
 800b046:	681b      	ldr	r3, [r3, #0]
 800b048:	681b      	ldr	r3, [r3, #0]
 800b04a:	613b      	str	r3, [r7, #16]
 800b04c:	68fb      	ldr	r3, [r7, #12]
 800b04e:	681b      	ldr	r3, [r3, #0]
 800b050:	685b      	ldr	r3, [r3, #4]
 800b052:	613b      	str	r3, [r7, #16]
 800b054:	693b      	ldr	r3, [r7, #16]
 800b056:	68fb      	ldr	r3, [r7, #12]
 800b058:	2200      	movs	r2, #0
 800b05a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b05e:	68fb      	ldr	r3, [r7, #12]
 800b060:	691b      	ldr	r3, [r3, #16]
 800b062:	2b00      	cmp	r3, #0
 800b064:	d019      	beq.n	800b09a <UART_Start_Receive_DMA+0xbe>
 800b066:	68fb      	ldr	r3, [r7, #12]
 800b068:	681b      	ldr	r3, [r3, #0]
 800b06a:	330c      	adds	r3, #12
 800b06c:	643b      	str	r3, [r7, #64]	; 0x40
 800b06e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800b070:	e853 3f00 	ldrex	r3, [r3]
 800b074:	63fb      	str	r3, [r7, #60]	; 0x3c
 800b076:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800b078:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b07c:	65bb      	str	r3, [r7, #88]	; 0x58
 800b07e:	68fb      	ldr	r3, [r7, #12]
 800b080:	681b      	ldr	r3, [r3, #0]
 800b082:	330c      	adds	r3, #12
 800b084:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800b086:	64fa      	str	r2, [r7, #76]	; 0x4c
 800b088:	64bb      	str	r3, [r7, #72]	; 0x48
 800b08a:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800b08c:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800b08e:	e841 2300 	strex	r3, r2, [r1]
 800b092:	647b      	str	r3, [r7, #68]	; 0x44
 800b094:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800b096:	2b00      	cmp	r3, #0
 800b098:	d1e5      	bne.n	800b066 <UART_Start_Receive_DMA+0x8a>
 800b09a:	68fb      	ldr	r3, [r7, #12]
 800b09c:	681b      	ldr	r3, [r3, #0]
 800b09e:	3314      	adds	r3, #20
 800b0a0:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b0a2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b0a4:	e853 3f00 	ldrex	r3, [r3]
 800b0a8:	62bb      	str	r3, [r7, #40]	; 0x28
 800b0aa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b0ac:	f043 0301 	orr.w	r3, r3, #1
 800b0b0:	657b      	str	r3, [r7, #84]	; 0x54
 800b0b2:	68fb      	ldr	r3, [r7, #12]
 800b0b4:	681b      	ldr	r3, [r3, #0]
 800b0b6:	3314      	adds	r3, #20
 800b0b8:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800b0ba:	63ba      	str	r2, [r7, #56]	; 0x38
 800b0bc:	637b      	str	r3, [r7, #52]	; 0x34
 800b0be:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800b0c0:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800b0c2:	e841 2300 	strex	r3, r2, [r1]
 800b0c6:	633b      	str	r3, [r7, #48]	; 0x30
 800b0c8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b0ca:	2b00      	cmp	r3, #0
 800b0cc:	d1e5      	bne.n	800b09a <UART_Start_Receive_DMA+0xbe>
 800b0ce:	68fb      	ldr	r3, [r7, #12]
 800b0d0:	681b      	ldr	r3, [r3, #0]
 800b0d2:	3314      	adds	r3, #20
 800b0d4:	61bb      	str	r3, [r7, #24]
 800b0d6:	69bb      	ldr	r3, [r7, #24]
 800b0d8:	e853 3f00 	ldrex	r3, [r3]
 800b0dc:	617b      	str	r3, [r7, #20]
 800b0de:	697b      	ldr	r3, [r7, #20]
 800b0e0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b0e4:	653b      	str	r3, [r7, #80]	; 0x50
 800b0e6:	68fb      	ldr	r3, [r7, #12]
 800b0e8:	681b      	ldr	r3, [r3, #0]
 800b0ea:	3314      	adds	r3, #20
 800b0ec:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800b0ee:	627a      	str	r2, [r7, #36]	; 0x24
 800b0f0:	623b      	str	r3, [r7, #32]
 800b0f2:	6a39      	ldr	r1, [r7, #32]
 800b0f4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800b0f6:	e841 2300 	strex	r3, r2, [r1]
 800b0fa:	61fb      	str	r3, [r7, #28]
 800b0fc:	69fb      	ldr	r3, [r7, #28]
 800b0fe:	2b00      	cmp	r3, #0
 800b100:	d1e5      	bne.n	800b0ce <UART_Start_Receive_DMA+0xf2>
 800b102:	2300      	movs	r3, #0
 800b104:	4618      	mov	r0, r3
 800b106:	3760      	adds	r7, #96	; 0x60
 800b108:	46bd      	mov	sp, r7
 800b10a:	bd80      	pop	{r7, pc}
 800b10c:	0800adeb 	.word	0x0800adeb
 800b110:	0800af11 	.word	0x0800af11
 800b114:	0800af47 	.word	0x0800af47

0800b118 <UART_EndTxTransfer>:
 800b118:	b480      	push	{r7}
 800b11a:	b089      	sub	sp, #36	; 0x24
 800b11c:	af00      	add	r7, sp, #0
 800b11e:	6078      	str	r0, [r7, #4]
 800b120:	687b      	ldr	r3, [r7, #4]
 800b122:	681b      	ldr	r3, [r3, #0]
 800b124:	330c      	adds	r3, #12
 800b126:	60fb      	str	r3, [r7, #12]
 800b128:	68fb      	ldr	r3, [r7, #12]
 800b12a:	e853 3f00 	ldrex	r3, [r3]
 800b12e:	60bb      	str	r3, [r7, #8]
 800b130:	68bb      	ldr	r3, [r7, #8]
 800b132:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800b136:	61fb      	str	r3, [r7, #28]
 800b138:	687b      	ldr	r3, [r7, #4]
 800b13a:	681b      	ldr	r3, [r3, #0]
 800b13c:	330c      	adds	r3, #12
 800b13e:	69fa      	ldr	r2, [r7, #28]
 800b140:	61ba      	str	r2, [r7, #24]
 800b142:	617b      	str	r3, [r7, #20]
 800b144:	6979      	ldr	r1, [r7, #20]
 800b146:	69ba      	ldr	r2, [r7, #24]
 800b148:	e841 2300 	strex	r3, r2, [r1]
 800b14c:	613b      	str	r3, [r7, #16]
 800b14e:	693b      	ldr	r3, [r7, #16]
 800b150:	2b00      	cmp	r3, #0
 800b152:	d1e5      	bne.n	800b120 <UART_EndTxTransfer+0x8>
 800b154:	687b      	ldr	r3, [r7, #4]
 800b156:	2220      	movs	r2, #32
 800b158:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b15c:	bf00      	nop
 800b15e:	3724      	adds	r7, #36	; 0x24
 800b160:	46bd      	mov	sp, r7
 800b162:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b166:	4770      	bx	lr

0800b168 <UART_EndRxTransfer>:
 800b168:	b480      	push	{r7}
 800b16a:	b095      	sub	sp, #84	; 0x54
 800b16c:	af00      	add	r7, sp, #0
 800b16e:	6078      	str	r0, [r7, #4]
 800b170:	687b      	ldr	r3, [r7, #4]
 800b172:	681b      	ldr	r3, [r3, #0]
 800b174:	330c      	adds	r3, #12
 800b176:	637b      	str	r3, [r7, #52]	; 0x34
 800b178:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b17a:	e853 3f00 	ldrex	r3, [r3]
 800b17e:	633b      	str	r3, [r7, #48]	; 0x30
 800b180:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b182:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800b186:	64fb      	str	r3, [r7, #76]	; 0x4c
 800b188:	687b      	ldr	r3, [r7, #4]
 800b18a:	681b      	ldr	r3, [r3, #0]
 800b18c:	330c      	adds	r3, #12
 800b18e:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800b190:	643a      	str	r2, [r7, #64]	; 0x40
 800b192:	63fb      	str	r3, [r7, #60]	; 0x3c
 800b194:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800b196:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800b198:	e841 2300 	strex	r3, r2, [r1]
 800b19c:	63bb      	str	r3, [r7, #56]	; 0x38
 800b19e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800b1a0:	2b00      	cmp	r3, #0
 800b1a2:	d1e5      	bne.n	800b170 <UART_EndRxTransfer+0x8>
 800b1a4:	687b      	ldr	r3, [r7, #4]
 800b1a6:	681b      	ldr	r3, [r3, #0]
 800b1a8:	3314      	adds	r3, #20
 800b1aa:	623b      	str	r3, [r7, #32]
 800b1ac:	6a3b      	ldr	r3, [r7, #32]
 800b1ae:	e853 3f00 	ldrex	r3, [r3]
 800b1b2:	61fb      	str	r3, [r7, #28]
 800b1b4:	69fb      	ldr	r3, [r7, #28]
 800b1b6:	f023 0301 	bic.w	r3, r3, #1
 800b1ba:	64bb      	str	r3, [r7, #72]	; 0x48
 800b1bc:	687b      	ldr	r3, [r7, #4]
 800b1be:	681b      	ldr	r3, [r3, #0]
 800b1c0:	3314      	adds	r3, #20
 800b1c2:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800b1c4:	62fa      	str	r2, [r7, #44]	; 0x2c
 800b1c6:	62bb      	str	r3, [r7, #40]	; 0x28
 800b1c8:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800b1ca:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800b1cc:	e841 2300 	strex	r3, r2, [r1]
 800b1d0:	627b      	str	r3, [r7, #36]	; 0x24
 800b1d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b1d4:	2b00      	cmp	r3, #0
 800b1d6:	d1e5      	bne.n	800b1a4 <UART_EndRxTransfer+0x3c>
 800b1d8:	687b      	ldr	r3, [r7, #4]
 800b1da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b1dc:	2b01      	cmp	r3, #1
 800b1de:	d119      	bne.n	800b214 <UART_EndRxTransfer+0xac>
 800b1e0:	687b      	ldr	r3, [r7, #4]
 800b1e2:	681b      	ldr	r3, [r3, #0]
 800b1e4:	330c      	adds	r3, #12
 800b1e6:	60fb      	str	r3, [r7, #12]
 800b1e8:	68fb      	ldr	r3, [r7, #12]
 800b1ea:	e853 3f00 	ldrex	r3, [r3]
 800b1ee:	60bb      	str	r3, [r7, #8]
 800b1f0:	68bb      	ldr	r3, [r7, #8]
 800b1f2:	f023 0310 	bic.w	r3, r3, #16
 800b1f6:	647b      	str	r3, [r7, #68]	; 0x44
 800b1f8:	687b      	ldr	r3, [r7, #4]
 800b1fa:	681b      	ldr	r3, [r3, #0]
 800b1fc:	330c      	adds	r3, #12
 800b1fe:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800b200:	61ba      	str	r2, [r7, #24]
 800b202:	617b      	str	r3, [r7, #20]
 800b204:	6979      	ldr	r1, [r7, #20]
 800b206:	69ba      	ldr	r2, [r7, #24]
 800b208:	e841 2300 	strex	r3, r2, [r1]
 800b20c:	613b      	str	r3, [r7, #16]
 800b20e:	693b      	ldr	r3, [r7, #16]
 800b210:	2b00      	cmp	r3, #0
 800b212:	d1e5      	bne.n	800b1e0 <UART_EndRxTransfer+0x78>
 800b214:	687b      	ldr	r3, [r7, #4]
 800b216:	2220      	movs	r2, #32
 800b218:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b21c:	687b      	ldr	r3, [r7, #4]
 800b21e:	2200      	movs	r2, #0
 800b220:	631a      	str	r2, [r3, #48]	; 0x30
 800b222:	bf00      	nop
 800b224:	3754      	adds	r7, #84	; 0x54
 800b226:	46bd      	mov	sp, r7
 800b228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b22c:	4770      	bx	lr

0800b22e <UART_DMAAbortOnError>:
 800b22e:	b580      	push	{r7, lr}
 800b230:	b084      	sub	sp, #16
 800b232:	af00      	add	r7, sp, #0
 800b234:	6078      	str	r0, [r7, #4]
 800b236:	687b      	ldr	r3, [r7, #4]
 800b238:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b23a:	60fb      	str	r3, [r7, #12]
 800b23c:	68fb      	ldr	r3, [r7, #12]
 800b23e:	2200      	movs	r2, #0
 800b240:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b242:	68fb      	ldr	r3, [r7, #12]
 800b244:	2200      	movs	r2, #0
 800b246:	84da      	strh	r2, [r3, #38]	; 0x26
 800b248:	68f8      	ldr	r0, [r7, #12]
 800b24a:	f7ff fd5d 	bl	800ad08 <HAL_UART_ErrorCallback>
 800b24e:	bf00      	nop
 800b250:	3710      	adds	r7, #16
 800b252:	46bd      	mov	sp, r7
 800b254:	bd80      	pop	{r7, pc}

0800b256 <UART_Transmit_IT>:
 800b256:	b480      	push	{r7}
 800b258:	b085      	sub	sp, #20
 800b25a:	af00      	add	r7, sp, #0
 800b25c:	6078      	str	r0, [r7, #4]
 800b25e:	687b      	ldr	r3, [r7, #4]
 800b260:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b264:	b2db      	uxtb	r3, r3
 800b266:	2b21      	cmp	r3, #33	; 0x21
 800b268:	d13e      	bne.n	800b2e8 <UART_Transmit_IT+0x92>
 800b26a:	687b      	ldr	r3, [r7, #4]
 800b26c:	689b      	ldr	r3, [r3, #8]
 800b26e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b272:	d114      	bne.n	800b29e <UART_Transmit_IT+0x48>
 800b274:	687b      	ldr	r3, [r7, #4]
 800b276:	691b      	ldr	r3, [r3, #16]
 800b278:	2b00      	cmp	r3, #0
 800b27a:	d110      	bne.n	800b29e <UART_Transmit_IT+0x48>
 800b27c:	687b      	ldr	r3, [r7, #4]
 800b27e:	6a1b      	ldr	r3, [r3, #32]
 800b280:	60fb      	str	r3, [r7, #12]
 800b282:	68fb      	ldr	r3, [r7, #12]
 800b284:	881b      	ldrh	r3, [r3, #0]
 800b286:	461a      	mov	r2, r3
 800b288:	687b      	ldr	r3, [r7, #4]
 800b28a:	681b      	ldr	r3, [r3, #0]
 800b28c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800b290:	605a      	str	r2, [r3, #4]
 800b292:	687b      	ldr	r3, [r7, #4]
 800b294:	6a1b      	ldr	r3, [r3, #32]
 800b296:	1c9a      	adds	r2, r3, #2
 800b298:	687b      	ldr	r3, [r7, #4]
 800b29a:	621a      	str	r2, [r3, #32]
 800b29c:	e008      	b.n	800b2b0 <UART_Transmit_IT+0x5a>
 800b29e:	687b      	ldr	r3, [r7, #4]
 800b2a0:	6a1b      	ldr	r3, [r3, #32]
 800b2a2:	1c59      	adds	r1, r3, #1
 800b2a4:	687a      	ldr	r2, [r7, #4]
 800b2a6:	6211      	str	r1, [r2, #32]
 800b2a8:	781a      	ldrb	r2, [r3, #0]
 800b2aa:	687b      	ldr	r3, [r7, #4]
 800b2ac:	681b      	ldr	r3, [r3, #0]
 800b2ae:	605a      	str	r2, [r3, #4]
 800b2b0:	687b      	ldr	r3, [r7, #4]
 800b2b2:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800b2b4:	b29b      	uxth	r3, r3
 800b2b6:	3b01      	subs	r3, #1
 800b2b8:	b29b      	uxth	r3, r3
 800b2ba:	687a      	ldr	r2, [r7, #4]
 800b2bc:	4619      	mov	r1, r3
 800b2be:	84d1      	strh	r1, [r2, #38]	; 0x26
 800b2c0:	2b00      	cmp	r3, #0
 800b2c2:	d10f      	bne.n	800b2e4 <UART_Transmit_IT+0x8e>
 800b2c4:	687b      	ldr	r3, [r7, #4]
 800b2c6:	681b      	ldr	r3, [r3, #0]
 800b2c8:	68da      	ldr	r2, [r3, #12]
 800b2ca:	687b      	ldr	r3, [r7, #4]
 800b2cc:	681b      	ldr	r3, [r3, #0]
 800b2ce:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800b2d2:	60da      	str	r2, [r3, #12]
 800b2d4:	687b      	ldr	r3, [r7, #4]
 800b2d6:	681b      	ldr	r3, [r3, #0]
 800b2d8:	68da      	ldr	r2, [r3, #12]
 800b2da:	687b      	ldr	r3, [r7, #4]
 800b2dc:	681b      	ldr	r3, [r3, #0]
 800b2de:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800b2e2:	60da      	str	r2, [r3, #12]
 800b2e4:	2300      	movs	r3, #0
 800b2e6:	e000      	b.n	800b2ea <UART_Transmit_IT+0x94>
 800b2e8:	2302      	movs	r3, #2
 800b2ea:	4618      	mov	r0, r3
 800b2ec:	3714      	adds	r7, #20
 800b2ee:	46bd      	mov	sp, r7
 800b2f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2f4:	4770      	bx	lr

0800b2f6 <UART_EndTransmit_IT>:
 800b2f6:	b580      	push	{r7, lr}
 800b2f8:	b082      	sub	sp, #8
 800b2fa:	af00      	add	r7, sp, #0
 800b2fc:	6078      	str	r0, [r7, #4]
 800b2fe:	687b      	ldr	r3, [r7, #4]
 800b300:	681b      	ldr	r3, [r3, #0]
 800b302:	68da      	ldr	r2, [r3, #12]
 800b304:	687b      	ldr	r3, [r7, #4]
 800b306:	681b      	ldr	r3, [r3, #0]
 800b308:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b30c:	60da      	str	r2, [r3, #12]
 800b30e:	687b      	ldr	r3, [r7, #4]
 800b310:	2220      	movs	r2, #32
 800b312:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b316:	6878      	ldr	r0, [r7, #4]
 800b318:	f7ff fcd8 	bl	800accc <HAL_UART_TxCpltCallback>
 800b31c:	2300      	movs	r3, #0
 800b31e:	4618      	mov	r0, r3
 800b320:	3708      	adds	r7, #8
 800b322:	46bd      	mov	sp, r7
 800b324:	bd80      	pop	{r7, pc}

0800b326 <UART_Receive_IT>:
 800b326:	b580      	push	{r7, lr}
 800b328:	b08c      	sub	sp, #48	; 0x30
 800b32a:	af00      	add	r7, sp, #0
 800b32c:	6078      	str	r0, [r7, #4]
 800b32e:	687b      	ldr	r3, [r7, #4]
 800b330:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800b334:	b2db      	uxtb	r3, r3
 800b336:	2b22      	cmp	r3, #34	; 0x22
 800b338:	f040 80ab 	bne.w	800b492 <UART_Receive_IT+0x16c>
 800b33c:	687b      	ldr	r3, [r7, #4]
 800b33e:	689b      	ldr	r3, [r3, #8]
 800b340:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b344:	d117      	bne.n	800b376 <UART_Receive_IT+0x50>
 800b346:	687b      	ldr	r3, [r7, #4]
 800b348:	691b      	ldr	r3, [r3, #16]
 800b34a:	2b00      	cmp	r3, #0
 800b34c:	d113      	bne.n	800b376 <UART_Receive_IT+0x50>
 800b34e:	2300      	movs	r3, #0
 800b350:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b352:	687b      	ldr	r3, [r7, #4]
 800b354:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b356:	62bb      	str	r3, [r7, #40]	; 0x28
 800b358:	687b      	ldr	r3, [r7, #4]
 800b35a:	681b      	ldr	r3, [r3, #0]
 800b35c:	685b      	ldr	r3, [r3, #4]
 800b35e:	b29b      	uxth	r3, r3
 800b360:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800b364:	b29a      	uxth	r2, r3
 800b366:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b368:	801a      	strh	r2, [r3, #0]
 800b36a:	687b      	ldr	r3, [r7, #4]
 800b36c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b36e:	1c9a      	adds	r2, r3, #2
 800b370:	687b      	ldr	r3, [r7, #4]
 800b372:	629a      	str	r2, [r3, #40]	; 0x28
 800b374:	e026      	b.n	800b3c4 <UART_Receive_IT+0x9e>
 800b376:	687b      	ldr	r3, [r7, #4]
 800b378:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b37a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b37c:	2300      	movs	r3, #0
 800b37e:	62bb      	str	r3, [r7, #40]	; 0x28
 800b380:	687b      	ldr	r3, [r7, #4]
 800b382:	689b      	ldr	r3, [r3, #8]
 800b384:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b388:	d007      	beq.n	800b39a <UART_Receive_IT+0x74>
 800b38a:	687b      	ldr	r3, [r7, #4]
 800b38c:	689b      	ldr	r3, [r3, #8]
 800b38e:	2b00      	cmp	r3, #0
 800b390:	d10a      	bne.n	800b3a8 <UART_Receive_IT+0x82>
 800b392:	687b      	ldr	r3, [r7, #4]
 800b394:	691b      	ldr	r3, [r3, #16]
 800b396:	2b00      	cmp	r3, #0
 800b398:	d106      	bne.n	800b3a8 <UART_Receive_IT+0x82>
 800b39a:	687b      	ldr	r3, [r7, #4]
 800b39c:	681b      	ldr	r3, [r3, #0]
 800b39e:	685b      	ldr	r3, [r3, #4]
 800b3a0:	b2da      	uxtb	r2, r3
 800b3a2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b3a4:	701a      	strb	r2, [r3, #0]
 800b3a6:	e008      	b.n	800b3ba <UART_Receive_IT+0x94>
 800b3a8:	687b      	ldr	r3, [r7, #4]
 800b3aa:	681b      	ldr	r3, [r3, #0]
 800b3ac:	685b      	ldr	r3, [r3, #4]
 800b3ae:	b2db      	uxtb	r3, r3
 800b3b0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800b3b4:	b2da      	uxtb	r2, r3
 800b3b6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b3b8:	701a      	strb	r2, [r3, #0]
 800b3ba:	687b      	ldr	r3, [r7, #4]
 800b3bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b3be:	1c5a      	adds	r2, r3, #1
 800b3c0:	687b      	ldr	r3, [r7, #4]
 800b3c2:	629a      	str	r2, [r3, #40]	; 0x28
 800b3c4:	687b      	ldr	r3, [r7, #4]
 800b3c6:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b3c8:	b29b      	uxth	r3, r3
 800b3ca:	3b01      	subs	r3, #1
 800b3cc:	b29b      	uxth	r3, r3
 800b3ce:	687a      	ldr	r2, [r7, #4]
 800b3d0:	4619      	mov	r1, r3
 800b3d2:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800b3d4:	2b00      	cmp	r3, #0
 800b3d6:	d15a      	bne.n	800b48e <UART_Receive_IT+0x168>
 800b3d8:	687b      	ldr	r3, [r7, #4]
 800b3da:	681b      	ldr	r3, [r3, #0]
 800b3dc:	68da      	ldr	r2, [r3, #12]
 800b3de:	687b      	ldr	r3, [r7, #4]
 800b3e0:	681b      	ldr	r3, [r3, #0]
 800b3e2:	f022 0220 	bic.w	r2, r2, #32
 800b3e6:	60da      	str	r2, [r3, #12]
 800b3e8:	687b      	ldr	r3, [r7, #4]
 800b3ea:	681b      	ldr	r3, [r3, #0]
 800b3ec:	68da      	ldr	r2, [r3, #12]
 800b3ee:	687b      	ldr	r3, [r7, #4]
 800b3f0:	681b      	ldr	r3, [r3, #0]
 800b3f2:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800b3f6:	60da      	str	r2, [r3, #12]
 800b3f8:	687b      	ldr	r3, [r7, #4]
 800b3fa:	681b      	ldr	r3, [r3, #0]
 800b3fc:	695a      	ldr	r2, [r3, #20]
 800b3fe:	687b      	ldr	r3, [r7, #4]
 800b400:	681b      	ldr	r3, [r3, #0]
 800b402:	f022 0201 	bic.w	r2, r2, #1
 800b406:	615a      	str	r2, [r3, #20]
 800b408:	687b      	ldr	r3, [r7, #4]
 800b40a:	2220      	movs	r2, #32
 800b40c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b410:	687b      	ldr	r3, [r7, #4]
 800b412:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b414:	2b01      	cmp	r3, #1
 800b416:	d135      	bne.n	800b484 <UART_Receive_IT+0x15e>
 800b418:	687b      	ldr	r3, [r7, #4]
 800b41a:	2200      	movs	r2, #0
 800b41c:	631a      	str	r2, [r3, #48]	; 0x30
 800b41e:	687b      	ldr	r3, [r7, #4]
 800b420:	681b      	ldr	r3, [r3, #0]
 800b422:	330c      	adds	r3, #12
 800b424:	617b      	str	r3, [r7, #20]
 800b426:	697b      	ldr	r3, [r7, #20]
 800b428:	e853 3f00 	ldrex	r3, [r3]
 800b42c:	613b      	str	r3, [r7, #16]
 800b42e:	693b      	ldr	r3, [r7, #16]
 800b430:	f023 0310 	bic.w	r3, r3, #16
 800b434:	627b      	str	r3, [r7, #36]	; 0x24
 800b436:	687b      	ldr	r3, [r7, #4]
 800b438:	681b      	ldr	r3, [r3, #0]
 800b43a:	330c      	adds	r3, #12
 800b43c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800b43e:	623a      	str	r2, [r7, #32]
 800b440:	61fb      	str	r3, [r7, #28]
 800b442:	69f9      	ldr	r1, [r7, #28]
 800b444:	6a3a      	ldr	r2, [r7, #32]
 800b446:	e841 2300 	strex	r3, r2, [r1]
 800b44a:	61bb      	str	r3, [r7, #24]
 800b44c:	69bb      	ldr	r3, [r7, #24]
 800b44e:	2b00      	cmp	r3, #0
 800b450:	d1e5      	bne.n	800b41e <UART_Receive_IT+0xf8>
 800b452:	687b      	ldr	r3, [r7, #4]
 800b454:	681b      	ldr	r3, [r3, #0]
 800b456:	681b      	ldr	r3, [r3, #0]
 800b458:	f003 0310 	and.w	r3, r3, #16
 800b45c:	2b10      	cmp	r3, #16
 800b45e:	d10a      	bne.n	800b476 <UART_Receive_IT+0x150>
 800b460:	2300      	movs	r3, #0
 800b462:	60fb      	str	r3, [r7, #12]
 800b464:	687b      	ldr	r3, [r7, #4]
 800b466:	681b      	ldr	r3, [r3, #0]
 800b468:	681b      	ldr	r3, [r3, #0]
 800b46a:	60fb      	str	r3, [r7, #12]
 800b46c:	687b      	ldr	r3, [r7, #4]
 800b46e:	681b      	ldr	r3, [r3, #0]
 800b470:	685b      	ldr	r3, [r3, #4]
 800b472:	60fb      	str	r3, [r7, #12]
 800b474:	68fb      	ldr	r3, [r7, #12]
 800b476:	687b      	ldr	r3, [r7, #4]
 800b478:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800b47a:	4619      	mov	r1, r3
 800b47c:	6878      	ldr	r0, [r7, #4]
 800b47e:	f7ff fc4d 	bl	800ad1c <HAL_UARTEx_RxEventCallback>
 800b482:	e002      	b.n	800b48a <UART_Receive_IT+0x164>
 800b484:	6878      	ldr	r0, [r7, #4]
 800b486:	f7f8 ff21 	bl	80042cc <HAL_UART_RxCpltCallback>
 800b48a:	2300      	movs	r3, #0
 800b48c:	e002      	b.n	800b494 <UART_Receive_IT+0x16e>
 800b48e:	2300      	movs	r3, #0
 800b490:	e000      	b.n	800b494 <UART_Receive_IT+0x16e>
 800b492:	2302      	movs	r3, #2
 800b494:	4618      	mov	r0, r3
 800b496:	3730      	adds	r7, #48	; 0x30
 800b498:	46bd      	mov	sp, r7
 800b49a:	bd80      	pop	{r7, pc}

0800b49c <UART_SetConfig>:
 800b49c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800b4a0:	b0c0      	sub	sp, #256	; 0x100
 800b4a2:	af00      	add	r7, sp, #0
 800b4a4:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 800b4a8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b4ac:	681b      	ldr	r3, [r3, #0]
 800b4ae:	691b      	ldr	r3, [r3, #16]
 800b4b0:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 800b4b4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b4b8:	68d9      	ldr	r1, [r3, #12]
 800b4ba:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b4be:	681a      	ldr	r2, [r3, #0]
 800b4c0:	ea40 0301 	orr.w	r3, r0, r1
 800b4c4:	6113      	str	r3, [r2, #16]
 800b4c6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b4ca:	689a      	ldr	r2, [r3, #8]
 800b4cc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b4d0:	691b      	ldr	r3, [r3, #16]
 800b4d2:	431a      	orrs	r2, r3
 800b4d4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b4d8:	695b      	ldr	r3, [r3, #20]
 800b4da:	431a      	orrs	r2, r3
 800b4dc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b4e0:	69db      	ldr	r3, [r3, #28]
 800b4e2:	4313      	orrs	r3, r2
 800b4e4:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800b4e8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b4ec:	681b      	ldr	r3, [r3, #0]
 800b4ee:	68db      	ldr	r3, [r3, #12]
 800b4f0:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 800b4f4:	f021 010c 	bic.w	r1, r1, #12
 800b4f8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b4fc:	681a      	ldr	r2, [r3, #0]
 800b4fe:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800b502:	430b      	orrs	r3, r1
 800b504:	60d3      	str	r3, [r2, #12]
 800b506:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b50a:	681b      	ldr	r3, [r3, #0]
 800b50c:	695b      	ldr	r3, [r3, #20]
 800b50e:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800b512:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b516:	6999      	ldr	r1, [r3, #24]
 800b518:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b51c:	681a      	ldr	r2, [r3, #0]
 800b51e:	ea40 0301 	orr.w	r3, r0, r1
 800b522:	6153      	str	r3, [r2, #20]
 800b524:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b528:	681a      	ldr	r2, [r3, #0]
 800b52a:	4b8f      	ldr	r3, [pc, #572]	; (800b768 <UART_SetConfig+0x2cc>)
 800b52c:	429a      	cmp	r2, r3
 800b52e:	d005      	beq.n	800b53c <UART_SetConfig+0xa0>
 800b530:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b534:	681a      	ldr	r2, [r3, #0]
 800b536:	4b8d      	ldr	r3, [pc, #564]	; (800b76c <UART_SetConfig+0x2d0>)
 800b538:	429a      	cmp	r2, r3
 800b53a:	d104      	bne.n	800b546 <UART_SetConfig+0xaa>
 800b53c:	f7fd fa7a 	bl	8008a34 <HAL_RCC_GetPCLK2Freq>
 800b540:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800b544:	e003      	b.n	800b54e <UART_SetConfig+0xb2>
 800b546:	f7fd fa61 	bl	8008a0c <HAL_RCC_GetPCLK1Freq>
 800b54a:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800b54e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b552:	69db      	ldr	r3, [r3, #28]
 800b554:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800b558:	f040 810c 	bne.w	800b774 <UART_SetConfig+0x2d8>
 800b55c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b560:	2200      	movs	r2, #0
 800b562:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800b566:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 800b56a:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 800b56e:	4622      	mov	r2, r4
 800b570:	462b      	mov	r3, r5
 800b572:	1891      	adds	r1, r2, r2
 800b574:	65b9      	str	r1, [r7, #88]	; 0x58
 800b576:	415b      	adcs	r3, r3
 800b578:	65fb      	str	r3, [r7, #92]	; 0x5c
 800b57a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800b57e:	4621      	mov	r1, r4
 800b580:	eb12 0801 	adds.w	r8, r2, r1
 800b584:	4629      	mov	r1, r5
 800b586:	eb43 0901 	adc.w	r9, r3, r1
 800b58a:	f04f 0200 	mov.w	r2, #0
 800b58e:	f04f 0300 	mov.w	r3, #0
 800b592:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800b596:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800b59a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800b59e:	4690      	mov	r8, r2
 800b5a0:	4699      	mov	r9, r3
 800b5a2:	4623      	mov	r3, r4
 800b5a4:	eb18 0303 	adds.w	r3, r8, r3
 800b5a8:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800b5ac:	462b      	mov	r3, r5
 800b5ae:	eb49 0303 	adc.w	r3, r9, r3
 800b5b2:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800b5b6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b5ba:	685b      	ldr	r3, [r3, #4]
 800b5bc:	2200      	movs	r2, #0
 800b5be:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800b5c2:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 800b5c6:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800b5ca:	460b      	mov	r3, r1
 800b5cc:	18db      	adds	r3, r3, r3
 800b5ce:	653b      	str	r3, [r7, #80]	; 0x50
 800b5d0:	4613      	mov	r3, r2
 800b5d2:	eb42 0303 	adc.w	r3, r2, r3
 800b5d6:	657b      	str	r3, [r7, #84]	; 0x54
 800b5d8:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800b5dc:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800b5e0:	f7f5 fad6 	bl	8000b90 <__aeabi_uldivmod>
 800b5e4:	4602      	mov	r2, r0
 800b5e6:	460b      	mov	r3, r1
 800b5e8:	4b61      	ldr	r3, [pc, #388]	; (800b770 <UART_SetConfig+0x2d4>)
 800b5ea:	fba3 2302 	umull	r2, r3, r3, r2
 800b5ee:	095b      	lsrs	r3, r3, #5
 800b5f0:	011c      	lsls	r4, r3, #4
 800b5f2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b5f6:	2200      	movs	r2, #0
 800b5f8:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800b5fc:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 800b600:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 800b604:	4642      	mov	r2, r8
 800b606:	464b      	mov	r3, r9
 800b608:	1891      	adds	r1, r2, r2
 800b60a:	64b9      	str	r1, [r7, #72]	; 0x48
 800b60c:	415b      	adcs	r3, r3
 800b60e:	64fb      	str	r3, [r7, #76]	; 0x4c
 800b610:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800b614:	4641      	mov	r1, r8
 800b616:	eb12 0a01 	adds.w	sl, r2, r1
 800b61a:	4649      	mov	r1, r9
 800b61c:	eb43 0b01 	adc.w	fp, r3, r1
 800b620:	f04f 0200 	mov.w	r2, #0
 800b624:	f04f 0300 	mov.w	r3, #0
 800b628:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800b62c:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800b630:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800b634:	4692      	mov	sl, r2
 800b636:	469b      	mov	fp, r3
 800b638:	4643      	mov	r3, r8
 800b63a:	eb1a 0303 	adds.w	r3, sl, r3
 800b63e:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800b642:	464b      	mov	r3, r9
 800b644:	eb4b 0303 	adc.w	r3, fp, r3
 800b648:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 800b64c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b650:	685b      	ldr	r3, [r3, #4]
 800b652:	2200      	movs	r2, #0
 800b654:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800b658:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 800b65c:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800b660:	460b      	mov	r3, r1
 800b662:	18db      	adds	r3, r3, r3
 800b664:	643b      	str	r3, [r7, #64]	; 0x40
 800b666:	4613      	mov	r3, r2
 800b668:	eb42 0303 	adc.w	r3, r2, r3
 800b66c:	647b      	str	r3, [r7, #68]	; 0x44
 800b66e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800b672:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800b676:	f7f5 fa8b 	bl	8000b90 <__aeabi_uldivmod>
 800b67a:	4602      	mov	r2, r0
 800b67c:	460b      	mov	r3, r1
 800b67e:	4611      	mov	r1, r2
 800b680:	4b3b      	ldr	r3, [pc, #236]	; (800b770 <UART_SetConfig+0x2d4>)
 800b682:	fba3 2301 	umull	r2, r3, r3, r1
 800b686:	095b      	lsrs	r3, r3, #5
 800b688:	2264      	movs	r2, #100	; 0x64
 800b68a:	fb02 f303 	mul.w	r3, r2, r3
 800b68e:	1acb      	subs	r3, r1, r3
 800b690:	00db      	lsls	r3, r3, #3
 800b692:	f103 0232 	add.w	r2, r3, #50	; 0x32
 800b696:	4b36      	ldr	r3, [pc, #216]	; (800b770 <UART_SetConfig+0x2d4>)
 800b698:	fba3 2302 	umull	r2, r3, r3, r2
 800b69c:	095b      	lsrs	r3, r3, #5
 800b69e:	005b      	lsls	r3, r3, #1
 800b6a0:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800b6a4:	441c      	add	r4, r3
 800b6a6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b6aa:	2200      	movs	r2, #0
 800b6ac:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800b6b0:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 800b6b4:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 800b6b8:	4642      	mov	r2, r8
 800b6ba:	464b      	mov	r3, r9
 800b6bc:	1891      	adds	r1, r2, r2
 800b6be:	63b9      	str	r1, [r7, #56]	; 0x38
 800b6c0:	415b      	adcs	r3, r3
 800b6c2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800b6c4:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800b6c8:	4641      	mov	r1, r8
 800b6ca:	1851      	adds	r1, r2, r1
 800b6cc:	6339      	str	r1, [r7, #48]	; 0x30
 800b6ce:	4649      	mov	r1, r9
 800b6d0:	414b      	adcs	r3, r1
 800b6d2:	637b      	str	r3, [r7, #52]	; 0x34
 800b6d4:	f04f 0200 	mov.w	r2, #0
 800b6d8:	f04f 0300 	mov.w	r3, #0
 800b6dc:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 800b6e0:	4659      	mov	r1, fp
 800b6e2:	00cb      	lsls	r3, r1, #3
 800b6e4:	4651      	mov	r1, sl
 800b6e6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800b6ea:	4651      	mov	r1, sl
 800b6ec:	00ca      	lsls	r2, r1, #3
 800b6ee:	4610      	mov	r0, r2
 800b6f0:	4619      	mov	r1, r3
 800b6f2:	4603      	mov	r3, r0
 800b6f4:	4642      	mov	r2, r8
 800b6f6:	189b      	adds	r3, r3, r2
 800b6f8:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800b6fc:	464b      	mov	r3, r9
 800b6fe:	460a      	mov	r2, r1
 800b700:	eb42 0303 	adc.w	r3, r2, r3
 800b704:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800b708:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b70c:	685b      	ldr	r3, [r3, #4]
 800b70e:	2200      	movs	r2, #0
 800b710:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800b714:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800b718:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 800b71c:	460b      	mov	r3, r1
 800b71e:	18db      	adds	r3, r3, r3
 800b720:	62bb      	str	r3, [r7, #40]	; 0x28
 800b722:	4613      	mov	r3, r2
 800b724:	eb42 0303 	adc.w	r3, r2, r3
 800b728:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b72a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800b72e:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800b732:	f7f5 fa2d 	bl	8000b90 <__aeabi_uldivmod>
 800b736:	4602      	mov	r2, r0
 800b738:	460b      	mov	r3, r1
 800b73a:	4b0d      	ldr	r3, [pc, #52]	; (800b770 <UART_SetConfig+0x2d4>)
 800b73c:	fba3 1302 	umull	r1, r3, r3, r2
 800b740:	095b      	lsrs	r3, r3, #5
 800b742:	2164      	movs	r1, #100	; 0x64
 800b744:	fb01 f303 	mul.w	r3, r1, r3
 800b748:	1ad3      	subs	r3, r2, r3
 800b74a:	00db      	lsls	r3, r3, #3
 800b74c:	3332      	adds	r3, #50	; 0x32
 800b74e:	4a08      	ldr	r2, [pc, #32]	; (800b770 <UART_SetConfig+0x2d4>)
 800b750:	fba2 2303 	umull	r2, r3, r2, r3
 800b754:	095b      	lsrs	r3, r3, #5
 800b756:	f003 0207 	and.w	r2, r3, #7
 800b75a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b75e:	681b      	ldr	r3, [r3, #0]
 800b760:	4422      	add	r2, r4
 800b762:	609a      	str	r2, [r3, #8]
 800b764:	e105      	b.n	800b972 <UART_SetConfig+0x4d6>
 800b766:	bf00      	nop
 800b768:	40011000 	.word	0x40011000
 800b76c:	40011400 	.word	0x40011400
 800b770:	51eb851f 	.word	0x51eb851f
 800b774:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b778:	2200      	movs	r2, #0
 800b77a:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800b77e:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800b782:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 800b786:	4642      	mov	r2, r8
 800b788:	464b      	mov	r3, r9
 800b78a:	1891      	adds	r1, r2, r2
 800b78c:	6239      	str	r1, [r7, #32]
 800b78e:	415b      	adcs	r3, r3
 800b790:	627b      	str	r3, [r7, #36]	; 0x24
 800b792:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800b796:	4641      	mov	r1, r8
 800b798:	1854      	adds	r4, r2, r1
 800b79a:	4649      	mov	r1, r9
 800b79c:	eb43 0501 	adc.w	r5, r3, r1
 800b7a0:	f04f 0200 	mov.w	r2, #0
 800b7a4:	f04f 0300 	mov.w	r3, #0
 800b7a8:	00eb      	lsls	r3, r5, #3
 800b7aa:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800b7ae:	00e2      	lsls	r2, r4, #3
 800b7b0:	4614      	mov	r4, r2
 800b7b2:	461d      	mov	r5, r3
 800b7b4:	4643      	mov	r3, r8
 800b7b6:	18e3      	adds	r3, r4, r3
 800b7b8:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800b7bc:	464b      	mov	r3, r9
 800b7be:	eb45 0303 	adc.w	r3, r5, r3
 800b7c2:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800b7c6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b7ca:	685b      	ldr	r3, [r3, #4]
 800b7cc:	2200      	movs	r2, #0
 800b7ce:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800b7d2:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800b7d6:	f04f 0200 	mov.w	r2, #0
 800b7da:	f04f 0300 	mov.w	r3, #0
 800b7de:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800b7e2:	4629      	mov	r1, r5
 800b7e4:	008b      	lsls	r3, r1, #2
 800b7e6:	4621      	mov	r1, r4
 800b7e8:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800b7ec:	4621      	mov	r1, r4
 800b7ee:	008a      	lsls	r2, r1, #2
 800b7f0:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 800b7f4:	f7f5 f9cc 	bl	8000b90 <__aeabi_uldivmod>
 800b7f8:	4602      	mov	r2, r0
 800b7fa:	460b      	mov	r3, r1
 800b7fc:	4b60      	ldr	r3, [pc, #384]	; (800b980 <UART_SetConfig+0x4e4>)
 800b7fe:	fba3 2302 	umull	r2, r3, r3, r2
 800b802:	095b      	lsrs	r3, r3, #5
 800b804:	011c      	lsls	r4, r3, #4
 800b806:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b80a:	2200      	movs	r2, #0
 800b80c:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800b810:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800b814:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 800b818:	4642      	mov	r2, r8
 800b81a:	464b      	mov	r3, r9
 800b81c:	1891      	adds	r1, r2, r2
 800b81e:	61b9      	str	r1, [r7, #24]
 800b820:	415b      	adcs	r3, r3
 800b822:	61fb      	str	r3, [r7, #28]
 800b824:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800b828:	4641      	mov	r1, r8
 800b82a:	1851      	adds	r1, r2, r1
 800b82c:	6139      	str	r1, [r7, #16]
 800b82e:	4649      	mov	r1, r9
 800b830:	414b      	adcs	r3, r1
 800b832:	617b      	str	r3, [r7, #20]
 800b834:	f04f 0200 	mov.w	r2, #0
 800b838:	f04f 0300 	mov.w	r3, #0
 800b83c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800b840:	4659      	mov	r1, fp
 800b842:	00cb      	lsls	r3, r1, #3
 800b844:	4651      	mov	r1, sl
 800b846:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800b84a:	4651      	mov	r1, sl
 800b84c:	00ca      	lsls	r2, r1, #3
 800b84e:	4610      	mov	r0, r2
 800b850:	4619      	mov	r1, r3
 800b852:	4603      	mov	r3, r0
 800b854:	4642      	mov	r2, r8
 800b856:	189b      	adds	r3, r3, r2
 800b858:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800b85c:	464b      	mov	r3, r9
 800b85e:	460a      	mov	r2, r1
 800b860:	eb42 0303 	adc.w	r3, r2, r3
 800b864:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800b868:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b86c:	685b      	ldr	r3, [r3, #4]
 800b86e:	2200      	movs	r2, #0
 800b870:	67bb      	str	r3, [r7, #120]	; 0x78
 800b872:	67fa      	str	r2, [r7, #124]	; 0x7c
 800b874:	f04f 0200 	mov.w	r2, #0
 800b878:	f04f 0300 	mov.w	r3, #0
 800b87c:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 800b880:	4649      	mov	r1, r9
 800b882:	008b      	lsls	r3, r1, #2
 800b884:	4641      	mov	r1, r8
 800b886:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800b88a:	4641      	mov	r1, r8
 800b88c:	008a      	lsls	r2, r1, #2
 800b88e:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800b892:	f7f5 f97d 	bl	8000b90 <__aeabi_uldivmod>
 800b896:	4602      	mov	r2, r0
 800b898:	460b      	mov	r3, r1
 800b89a:	4b39      	ldr	r3, [pc, #228]	; (800b980 <UART_SetConfig+0x4e4>)
 800b89c:	fba3 1302 	umull	r1, r3, r3, r2
 800b8a0:	095b      	lsrs	r3, r3, #5
 800b8a2:	2164      	movs	r1, #100	; 0x64
 800b8a4:	fb01 f303 	mul.w	r3, r1, r3
 800b8a8:	1ad3      	subs	r3, r2, r3
 800b8aa:	011b      	lsls	r3, r3, #4
 800b8ac:	3332      	adds	r3, #50	; 0x32
 800b8ae:	4a34      	ldr	r2, [pc, #208]	; (800b980 <UART_SetConfig+0x4e4>)
 800b8b0:	fba2 2303 	umull	r2, r3, r2, r3
 800b8b4:	095b      	lsrs	r3, r3, #5
 800b8b6:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800b8ba:	441c      	add	r4, r3
 800b8bc:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b8c0:	2200      	movs	r2, #0
 800b8c2:	673b      	str	r3, [r7, #112]	; 0x70
 800b8c4:	677a      	str	r2, [r7, #116]	; 0x74
 800b8c6:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 800b8ca:	4642      	mov	r2, r8
 800b8cc:	464b      	mov	r3, r9
 800b8ce:	1891      	adds	r1, r2, r2
 800b8d0:	60b9      	str	r1, [r7, #8]
 800b8d2:	415b      	adcs	r3, r3
 800b8d4:	60fb      	str	r3, [r7, #12]
 800b8d6:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800b8da:	4641      	mov	r1, r8
 800b8dc:	1851      	adds	r1, r2, r1
 800b8de:	6039      	str	r1, [r7, #0]
 800b8e0:	4649      	mov	r1, r9
 800b8e2:	414b      	adcs	r3, r1
 800b8e4:	607b      	str	r3, [r7, #4]
 800b8e6:	f04f 0200 	mov.w	r2, #0
 800b8ea:	f04f 0300 	mov.w	r3, #0
 800b8ee:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800b8f2:	4659      	mov	r1, fp
 800b8f4:	00cb      	lsls	r3, r1, #3
 800b8f6:	4651      	mov	r1, sl
 800b8f8:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800b8fc:	4651      	mov	r1, sl
 800b8fe:	00ca      	lsls	r2, r1, #3
 800b900:	4610      	mov	r0, r2
 800b902:	4619      	mov	r1, r3
 800b904:	4603      	mov	r3, r0
 800b906:	4642      	mov	r2, r8
 800b908:	189b      	adds	r3, r3, r2
 800b90a:	66bb      	str	r3, [r7, #104]	; 0x68
 800b90c:	464b      	mov	r3, r9
 800b90e:	460a      	mov	r2, r1
 800b910:	eb42 0303 	adc.w	r3, r2, r3
 800b914:	66fb      	str	r3, [r7, #108]	; 0x6c
 800b916:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b91a:	685b      	ldr	r3, [r3, #4]
 800b91c:	2200      	movs	r2, #0
 800b91e:	663b      	str	r3, [r7, #96]	; 0x60
 800b920:	667a      	str	r2, [r7, #100]	; 0x64
 800b922:	f04f 0200 	mov.w	r2, #0
 800b926:	f04f 0300 	mov.w	r3, #0
 800b92a:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 800b92e:	4649      	mov	r1, r9
 800b930:	008b      	lsls	r3, r1, #2
 800b932:	4641      	mov	r1, r8
 800b934:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800b938:	4641      	mov	r1, r8
 800b93a:	008a      	lsls	r2, r1, #2
 800b93c:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800b940:	f7f5 f926 	bl	8000b90 <__aeabi_uldivmod>
 800b944:	4602      	mov	r2, r0
 800b946:	460b      	mov	r3, r1
 800b948:	4b0d      	ldr	r3, [pc, #52]	; (800b980 <UART_SetConfig+0x4e4>)
 800b94a:	fba3 1302 	umull	r1, r3, r3, r2
 800b94e:	095b      	lsrs	r3, r3, #5
 800b950:	2164      	movs	r1, #100	; 0x64
 800b952:	fb01 f303 	mul.w	r3, r1, r3
 800b956:	1ad3      	subs	r3, r2, r3
 800b958:	011b      	lsls	r3, r3, #4
 800b95a:	3332      	adds	r3, #50	; 0x32
 800b95c:	4a08      	ldr	r2, [pc, #32]	; (800b980 <UART_SetConfig+0x4e4>)
 800b95e:	fba2 2303 	umull	r2, r3, r2, r3
 800b962:	095b      	lsrs	r3, r3, #5
 800b964:	f003 020f 	and.w	r2, r3, #15
 800b968:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b96c:	681b      	ldr	r3, [r3, #0]
 800b96e:	4422      	add	r2, r4
 800b970:	609a      	str	r2, [r3, #8]
 800b972:	bf00      	nop
 800b974:	f507 7780 	add.w	r7, r7, #256	; 0x100
 800b978:	46bd      	mov	sp, r7
 800b97a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800b97e:	bf00      	nop
 800b980:	51eb851f 	.word	0x51eb851f

0800b984 <__errno>:
 800b984:	4b01      	ldr	r3, [pc, #4]	; (800b98c <__errno+0x8>)
 800b986:	6818      	ldr	r0, [r3, #0]
 800b988:	4770      	bx	lr
 800b98a:	bf00      	nop
 800b98c:	20000140 	.word	0x20000140

0800b990 <__libc_init_array>:
 800b990:	b570      	push	{r4, r5, r6, lr}
 800b992:	4d0d      	ldr	r5, [pc, #52]	; (800b9c8 <__libc_init_array+0x38>)
 800b994:	4c0d      	ldr	r4, [pc, #52]	; (800b9cc <__libc_init_array+0x3c>)
 800b996:	1b64      	subs	r4, r4, r5
 800b998:	10a4      	asrs	r4, r4, #2
 800b99a:	2600      	movs	r6, #0
 800b99c:	42a6      	cmp	r6, r4
 800b99e:	d109      	bne.n	800b9b4 <__libc_init_array+0x24>
 800b9a0:	4d0b      	ldr	r5, [pc, #44]	; (800b9d0 <__libc_init_array+0x40>)
 800b9a2:	4c0c      	ldr	r4, [pc, #48]	; (800b9d4 <__libc_init_array+0x44>)
 800b9a4:	f000 f8fe 	bl	800bba4 <_init>
 800b9a8:	1b64      	subs	r4, r4, r5
 800b9aa:	10a4      	asrs	r4, r4, #2
 800b9ac:	2600      	movs	r6, #0
 800b9ae:	42a6      	cmp	r6, r4
 800b9b0:	d105      	bne.n	800b9be <__libc_init_array+0x2e>
 800b9b2:	bd70      	pop	{r4, r5, r6, pc}
 800b9b4:	f855 3b04 	ldr.w	r3, [r5], #4
 800b9b8:	4798      	blx	r3
 800b9ba:	3601      	adds	r6, #1
 800b9bc:	e7ee      	b.n	800b99c <__libc_init_array+0xc>
 800b9be:	f855 3b04 	ldr.w	r3, [r5], #4
 800b9c2:	4798      	blx	r3
 800b9c4:	3601      	adds	r6, #1
 800b9c6:	e7f2      	b.n	800b9ae <__libc_init_array+0x1e>
 800b9c8:	0800bbe4 	.word	0x0800bbe4
 800b9cc:	0800bbe4 	.word	0x0800bbe4
 800b9d0:	0800bbe4 	.word	0x0800bbe4
 800b9d4:	0800bbe8 	.word	0x0800bbe8

0800b9d8 <memset>:
 800b9d8:	4402      	add	r2, r0
 800b9da:	4603      	mov	r3, r0
 800b9dc:	4293      	cmp	r3, r2
 800b9de:	d100      	bne.n	800b9e2 <memset+0xa>
 800b9e0:	4770      	bx	lr
 800b9e2:	f803 1b01 	strb.w	r1, [r3], #1
 800b9e6:	e7f9      	b.n	800b9dc <memset+0x4>

0800b9e8 <sqrt>:
 800b9e8:	b538      	push	{r3, r4, r5, lr}
 800b9ea:	ed2d 8b02 	vpush	{d8}
 800b9ee:	ec55 4b10 	vmov	r4, r5, d0
 800b9f2:	f000 f825 	bl	800ba40 <__ieee754_sqrt>
 800b9f6:	4622      	mov	r2, r4
 800b9f8:	462b      	mov	r3, r5
 800b9fa:	4620      	mov	r0, r4
 800b9fc:	4629      	mov	r1, r5
 800b9fe:	eeb0 8a40 	vmov.f32	s16, s0
 800ba02:	eef0 8a60 	vmov.f32	s17, s1
 800ba06:	f7f5 f83d 	bl	8000a84 <__aeabi_dcmpun>
 800ba0a:	b990      	cbnz	r0, 800ba32 <sqrt+0x4a>
 800ba0c:	2200      	movs	r2, #0
 800ba0e:	2300      	movs	r3, #0
 800ba10:	4620      	mov	r0, r4
 800ba12:	4629      	mov	r1, r5
 800ba14:	f7f5 f80e 	bl	8000a34 <__aeabi_dcmplt>
 800ba18:	b158      	cbz	r0, 800ba32 <sqrt+0x4a>
 800ba1a:	f7ff ffb3 	bl	800b984 <__errno>
 800ba1e:	2321      	movs	r3, #33	; 0x21
 800ba20:	6003      	str	r3, [r0, #0]
 800ba22:	2200      	movs	r2, #0
 800ba24:	2300      	movs	r3, #0
 800ba26:	4610      	mov	r0, r2
 800ba28:	4619      	mov	r1, r3
 800ba2a:	f7f4 febb 	bl	80007a4 <__aeabi_ddiv>
 800ba2e:	ec41 0b18 	vmov	d8, r0, r1
 800ba32:	eeb0 0a48 	vmov.f32	s0, s16
 800ba36:	eef0 0a68 	vmov.f32	s1, s17
 800ba3a:	ecbd 8b02 	vpop	{d8}
 800ba3e:	bd38      	pop	{r3, r4, r5, pc}

0800ba40 <__ieee754_sqrt>:
 800ba40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba44:	ec55 4b10 	vmov	r4, r5, d0
 800ba48:	4e55      	ldr	r6, [pc, #340]	; (800bba0 <__ieee754_sqrt+0x160>)
 800ba4a:	43ae      	bics	r6, r5
 800ba4c:	ee10 0a10 	vmov	r0, s0
 800ba50:	ee10 3a10 	vmov	r3, s0
 800ba54:	462a      	mov	r2, r5
 800ba56:	4629      	mov	r1, r5
 800ba58:	d110      	bne.n	800ba7c <__ieee754_sqrt+0x3c>
 800ba5a:	ee10 2a10 	vmov	r2, s0
 800ba5e:	462b      	mov	r3, r5
 800ba60:	f7f4 fd76 	bl	8000550 <__aeabi_dmul>
 800ba64:	4602      	mov	r2, r0
 800ba66:	460b      	mov	r3, r1
 800ba68:	4620      	mov	r0, r4
 800ba6a:	4629      	mov	r1, r5
 800ba6c:	f7f4 fbba 	bl	80001e4 <__adddf3>
 800ba70:	4604      	mov	r4, r0
 800ba72:	460d      	mov	r5, r1
 800ba74:	ec45 4b10 	vmov	d0, r4, r5
 800ba78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ba7c:	2d00      	cmp	r5, #0
 800ba7e:	dc10      	bgt.n	800baa2 <__ieee754_sqrt+0x62>
 800ba80:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800ba84:	4330      	orrs	r0, r6
 800ba86:	d0f5      	beq.n	800ba74 <__ieee754_sqrt+0x34>
 800ba88:	b15d      	cbz	r5, 800baa2 <__ieee754_sqrt+0x62>
 800ba8a:	ee10 2a10 	vmov	r2, s0
 800ba8e:	462b      	mov	r3, r5
 800ba90:	ee10 0a10 	vmov	r0, s0
 800ba94:	f7f4 fba4 	bl	80001e0 <__aeabi_dsub>
 800ba98:	4602      	mov	r2, r0
 800ba9a:	460b      	mov	r3, r1
 800ba9c:	f7f4 fe82 	bl	80007a4 <__aeabi_ddiv>
 800baa0:	e7e6      	b.n	800ba70 <__ieee754_sqrt+0x30>
 800baa2:	1512      	asrs	r2, r2, #20
 800baa4:	d074      	beq.n	800bb90 <__ieee754_sqrt+0x150>
 800baa6:	07d4      	lsls	r4, r2, #31
 800baa8:	f3c1 0113 	ubfx	r1, r1, #0, #20
 800baac:	f2a2 37ff 	subw	r7, r2, #1023	; 0x3ff
 800bab0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800bab4:	bf5e      	ittt	pl
 800bab6:	0fda      	lsrpl	r2, r3, #31
 800bab8:	005b      	lslpl	r3, r3, #1
 800baba:	eb02 0141 	addpl.w	r1, r2, r1, lsl #1
 800babe:	2400      	movs	r4, #0
 800bac0:	0fda      	lsrs	r2, r3, #31
 800bac2:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 800bac6:	107f      	asrs	r7, r7, #1
 800bac8:	005b      	lsls	r3, r3, #1
 800baca:	2516      	movs	r5, #22
 800bacc:	4620      	mov	r0, r4
 800bace:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 800bad2:	1886      	adds	r6, r0, r2
 800bad4:	428e      	cmp	r6, r1
 800bad6:	bfde      	ittt	le
 800bad8:	1b89      	suble	r1, r1, r6
 800bada:	18b0      	addle	r0, r6, r2
 800badc:	18a4      	addle	r4, r4, r2
 800bade:	0049      	lsls	r1, r1, #1
 800bae0:	3d01      	subs	r5, #1
 800bae2:	eb01 71d3 	add.w	r1, r1, r3, lsr #31
 800bae6:	ea4f 0252 	mov.w	r2, r2, lsr #1
 800baea:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800baee:	d1f0      	bne.n	800bad2 <__ieee754_sqrt+0x92>
 800baf0:	462a      	mov	r2, r5
 800baf2:	f04f 0e20 	mov.w	lr, #32
 800baf6:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 800bafa:	4281      	cmp	r1, r0
 800bafc:	eb06 0c05 	add.w	ip, r6, r5
 800bb00:	dc02      	bgt.n	800bb08 <__ieee754_sqrt+0xc8>
 800bb02:	d113      	bne.n	800bb2c <__ieee754_sqrt+0xec>
 800bb04:	459c      	cmp	ip, r3
 800bb06:	d811      	bhi.n	800bb2c <__ieee754_sqrt+0xec>
 800bb08:	f1bc 0f00 	cmp.w	ip, #0
 800bb0c:	eb0c 0506 	add.w	r5, ip, r6
 800bb10:	da43      	bge.n	800bb9a <__ieee754_sqrt+0x15a>
 800bb12:	2d00      	cmp	r5, #0
 800bb14:	db41      	blt.n	800bb9a <__ieee754_sqrt+0x15a>
 800bb16:	f100 0801 	add.w	r8, r0, #1
 800bb1a:	1a09      	subs	r1, r1, r0
 800bb1c:	459c      	cmp	ip, r3
 800bb1e:	bf88      	it	hi
 800bb20:	f101 31ff 	addhi.w	r1, r1, #4294967295
 800bb24:	eba3 030c 	sub.w	r3, r3, ip
 800bb28:	4432      	add	r2, r6
 800bb2a:	4640      	mov	r0, r8
 800bb2c:	ea4f 7cd3 	mov.w	ip, r3, lsr #31
 800bb30:	f1be 0e01 	subs.w	lr, lr, #1
 800bb34:	eb0c 0141 	add.w	r1, ip, r1, lsl #1
 800bb38:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800bb3c:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800bb40:	d1db      	bne.n	800bafa <__ieee754_sqrt+0xba>
 800bb42:	430b      	orrs	r3, r1
 800bb44:	d006      	beq.n	800bb54 <__ieee754_sqrt+0x114>
 800bb46:	1c50      	adds	r0, r2, #1
 800bb48:	bf13      	iteet	ne
 800bb4a:	3201      	addne	r2, #1
 800bb4c:	3401      	addeq	r4, #1
 800bb4e:	4672      	moveq	r2, lr
 800bb50:	f022 0201 	bicne.w	r2, r2, #1
 800bb54:	1063      	asrs	r3, r4, #1
 800bb56:	0852      	lsrs	r2, r2, #1
 800bb58:	07e1      	lsls	r1, r4, #31
 800bb5a:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 800bb5e:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 800bb62:	bf48      	it	mi
 800bb64:	f042 4200 	orrmi.w	r2, r2, #2147483648	; 0x80000000
 800bb68:	eb03 5507 	add.w	r5, r3, r7, lsl #20
 800bb6c:	4614      	mov	r4, r2
 800bb6e:	e781      	b.n	800ba74 <__ieee754_sqrt+0x34>
 800bb70:	0ad9      	lsrs	r1, r3, #11
 800bb72:	3815      	subs	r0, #21
 800bb74:	055b      	lsls	r3, r3, #21
 800bb76:	2900      	cmp	r1, #0
 800bb78:	d0fa      	beq.n	800bb70 <__ieee754_sqrt+0x130>
 800bb7a:	02cd      	lsls	r5, r1, #11
 800bb7c:	d50a      	bpl.n	800bb94 <__ieee754_sqrt+0x154>
 800bb7e:	f1c2 0420 	rsb	r4, r2, #32
 800bb82:	fa23 f404 	lsr.w	r4, r3, r4
 800bb86:	1e55      	subs	r5, r2, #1
 800bb88:	4093      	lsls	r3, r2
 800bb8a:	4321      	orrs	r1, r4
 800bb8c:	1b42      	subs	r2, r0, r5
 800bb8e:	e78a      	b.n	800baa6 <__ieee754_sqrt+0x66>
 800bb90:	4610      	mov	r0, r2
 800bb92:	e7f0      	b.n	800bb76 <__ieee754_sqrt+0x136>
 800bb94:	0049      	lsls	r1, r1, #1
 800bb96:	3201      	adds	r2, #1
 800bb98:	e7ef      	b.n	800bb7a <__ieee754_sqrt+0x13a>
 800bb9a:	4680      	mov	r8, r0
 800bb9c:	e7bd      	b.n	800bb1a <__ieee754_sqrt+0xda>
 800bb9e:	bf00      	nop
 800bba0:	7ff00000 	.word	0x7ff00000

0800bba4 <_init>:
 800bba4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bba6:	bf00      	nop
 800bba8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800bbaa:	bc08      	pop	{r3}
 800bbac:	469e      	mov	lr, r3
 800bbae:	4770      	bx	lr

0800bbb0 <_fini>:
 800bbb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bbb2:	bf00      	nop
 800bbb4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800bbb6:	bc08      	pop	{r3}
 800bbb8:	469e      	mov	lr, r3
 800bbba:	4770      	bx	lr
