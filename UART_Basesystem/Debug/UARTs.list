
UARTs.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000bac8  08000198  08000198  00010198  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000020  0800bc60  0800bc60  0001bc60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800bc80  0800bc80  000201a8  2**0
                  CONTENTS
  4 .ARM          00000008  0800bc80  0800bc80  0001bc80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800bc88  0800bc88  000201a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800bc88  0800bc88  0001bc88  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800bc8c  0800bc8c  0001bc8c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001a8  20000000  0800bc90  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000668  200001a8  0800be38  000201a8  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20000810  0800be38  00020810  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201a8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00013b9a  00000000  00000000  000201d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002185  00000000  00000000  00033d72  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001210  00000000  00000000  00035ef8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001170  00000000  00000000  00037108  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000170e6  00000000  00000000  00038278  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001454b  00000000  00000000  0004f35e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00093294  00000000  00000000  000638a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000f6b3d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000050fc  00000000  00000000  000f6b90  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	200001a8 	.word	0x200001a8
 80001b4:	00000000 	.word	0x00000000
 80001b8:	0800bc48 	.word	0x0800bc48

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	200001ac 	.word	0x200001ac
 80001d4:	0800bc48 	.word	0x0800bc48

080001d8 <__aeabi_drsub>:
 80001d8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001dc:	e002      	b.n	80001e4 <__adddf3>
 80001de:	bf00      	nop

080001e0 <__aeabi_dsub>:
 80001e0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001e4 <__adddf3>:
 80001e4:	b530      	push	{r4, r5, lr}
 80001e6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001ea:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001ee:	ea94 0f05 	teq	r4, r5
 80001f2:	bf08      	it	eq
 80001f4:	ea90 0f02 	teqeq	r0, r2
 80001f8:	bf1f      	itttt	ne
 80001fa:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001fe:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000202:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000206:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800020a:	f000 80e2 	beq.w	80003d2 <__adddf3+0x1ee>
 800020e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000212:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000216:	bfb8      	it	lt
 8000218:	426d      	neglt	r5, r5
 800021a:	dd0c      	ble.n	8000236 <__adddf3+0x52>
 800021c:	442c      	add	r4, r5
 800021e:	ea80 0202 	eor.w	r2, r0, r2
 8000222:	ea81 0303 	eor.w	r3, r1, r3
 8000226:	ea82 0000 	eor.w	r0, r2, r0
 800022a:	ea83 0101 	eor.w	r1, r3, r1
 800022e:	ea80 0202 	eor.w	r2, r0, r2
 8000232:	ea81 0303 	eor.w	r3, r1, r3
 8000236:	2d36      	cmp	r5, #54	; 0x36
 8000238:	bf88      	it	hi
 800023a:	bd30      	pophi	{r4, r5, pc}
 800023c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000240:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000244:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000248:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800024c:	d002      	beq.n	8000254 <__adddf3+0x70>
 800024e:	4240      	negs	r0, r0
 8000250:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000254:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000258:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800025c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000260:	d002      	beq.n	8000268 <__adddf3+0x84>
 8000262:	4252      	negs	r2, r2
 8000264:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000268:	ea94 0f05 	teq	r4, r5
 800026c:	f000 80a7 	beq.w	80003be <__adddf3+0x1da>
 8000270:	f1a4 0401 	sub.w	r4, r4, #1
 8000274:	f1d5 0e20 	rsbs	lr, r5, #32
 8000278:	db0d      	blt.n	8000296 <__adddf3+0xb2>
 800027a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800027e:	fa22 f205 	lsr.w	r2, r2, r5
 8000282:	1880      	adds	r0, r0, r2
 8000284:	f141 0100 	adc.w	r1, r1, #0
 8000288:	fa03 f20e 	lsl.w	r2, r3, lr
 800028c:	1880      	adds	r0, r0, r2
 800028e:	fa43 f305 	asr.w	r3, r3, r5
 8000292:	4159      	adcs	r1, r3
 8000294:	e00e      	b.n	80002b4 <__adddf3+0xd0>
 8000296:	f1a5 0520 	sub.w	r5, r5, #32
 800029a:	f10e 0e20 	add.w	lr, lr, #32
 800029e:	2a01      	cmp	r2, #1
 80002a0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002a4:	bf28      	it	cs
 80002a6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002aa:	fa43 f305 	asr.w	r3, r3, r5
 80002ae:	18c0      	adds	r0, r0, r3
 80002b0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002b8:	d507      	bpl.n	80002ca <__adddf3+0xe6>
 80002ba:	f04f 0e00 	mov.w	lr, #0
 80002be:	f1dc 0c00 	rsbs	ip, ip, #0
 80002c2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002c6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002ca:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80002ce:	d31b      	bcc.n	8000308 <__adddf3+0x124>
 80002d0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002d4:	d30c      	bcc.n	80002f0 <__adddf3+0x10c>
 80002d6:	0849      	lsrs	r1, r1, #1
 80002d8:	ea5f 0030 	movs.w	r0, r0, rrx
 80002dc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002e0:	f104 0401 	add.w	r4, r4, #1
 80002e4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002e8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002ec:	f080 809a 	bcs.w	8000424 <__adddf3+0x240>
 80002f0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002f4:	bf08      	it	eq
 80002f6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002fa:	f150 0000 	adcs.w	r0, r0, #0
 80002fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000302:	ea41 0105 	orr.w	r1, r1, r5
 8000306:	bd30      	pop	{r4, r5, pc}
 8000308:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800030c:	4140      	adcs	r0, r0
 800030e:	eb41 0101 	adc.w	r1, r1, r1
 8000312:	3c01      	subs	r4, #1
 8000314:	bf28      	it	cs
 8000316:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800031a:	d2e9      	bcs.n	80002f0 <__adddf3+0x10c>
 800031c:	f091 0f00 	teq	r1, #0
 8000320:	bf04      	itt	eq
 8000322:	4601      	moveq	r1, r0
 8000324:	2000      	moveq	r0, #0
 8000326:	fab1 f381 	clz	r3, r1
 800032a:	bf08      	it	eq
 800032c:	3320      	addeq	r3, #32
 800032e:	f1a3 030b 	sub.w	r3, r3, #11
 8000332:	f1b3 0220 	subs.w	r2, r3, #32
 8000336:	da0c      	bge.n	8000352 <__adddf3+0x16e>
 8000338:	320c      	adds	r2, #12
 800033a:	dd08      	ble.n	800034e <__adddf3+0x16a>
 800033c:	f102 0c14 	add.w	ip, r2, #20
 8000340:	f1c2 020c 	rsb	r2, r2, #12
 8000344:	fa01 f00c 	lsl.w	r0, r1, ip
 8000348:	fa21 f102 	lsr.w	r1, r1, r2
 800034c:	e00c      	b.n	8000368 <__adddf3+0x184>
 800034e:	f102 0214 	add.w	r2, r2, #20
 8000352:	bfd8      	it	le
 8000354:	f1c2 0c20 	rsble	ip, r2, #32
 8000358:	fa01 f102 	lsl.w	r1, r1, r2
 800035c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000360:	bfdc      	itt	le
 8000362:	ea41 010c 	orrle.w	r1, r1, ip
 8000366:	4090      	lslle	r0, r2
 8000368:	1ae4      	subs	r4, r4, r3
 800036a:	bfa2      	ittt	ge
 800036c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000370:	4329      	orrge	r1, r5
 8000372:	bd30      	popge	{r4, r5, pc}
 8000374:	ea6f 0404 	mvn.w	r4, r4
 8000378:	3c1f      	subs	r4, #31
 800037a:	da1c      	bge.n	80003b6 <__adddf3+0x1d2>
 800037c:	340c      	adds	r4, #12
 800037e:	dc0e      	bgt.n	800039e <__adddf3+0x1ba>
 8000380:	f104 0414 	add.w	r4, r4, #20
 8000384:	f1c4 0220 	rsb	r2, r4, #32
 8000388:	fa20 f004 	lsr.w	r0, r0, r4
 800038c:	fa01 f302 	lsl.w	r3, r1, r2
 8000390:	ea40 0003 	orr.w	r0, r0, r3
 8000394:	fa21 f304 	lsr.w	r3, r1, r4
 8000398:	ea45 0103 	orr.w	r1, r5, r3
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	f1c4 040c 	rsb	r4, r4, #12
 80003a2:	f1c4 0220 	rsb	r2, r4, #32
 80003a6:	fa20 f002 	lsr.w	r0, r0, r2
 80003aa:	fa01 f304 	lsl.w	r3, r1, r4
 80003ae:	ea40 0003 	orr.w	r0, r0, r3
 80003b2:	4629      	mov	r1, r5
 80003b4:	bd30      	pop	{r4, r5, pc}
 80003b6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ba:	4629      	mov	r1, r5
 80003bc:	bd30      	pop	{r4, r5, pc}
 80003be:	f094 0f00 	teq	r4, #0
 80003c2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80003c6:	bf06      	itte	eq
 80003c8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80003cc:	3401      	addeq	r4, #1
 80003ce:	3d01      	subne	r5, #1
 80003d0:	e74e      	b.n	8000270 <__adddf3+0x8c>
 80003d2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003d6:	bf18      	it	ne
 80003d8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003dc:	d029      	beq.n	8000432 <__adddf3+0x24e>
 80003de:	ea94 0f05 	teq	r4, r5
 80003e2:	bf08      	it	eq
 80003e4:	ea90 0f02 	teqeq	r0, r2
 80003e8:	d005      	beq.n	80003f6 <__adddf3+0x212>
 80003ea:	ea54 0c00 	orrs.w	ip, r4, r0
 80003ee:	bf04      	itt	eq
 80003f0:	4619      	moveq	r1, r3
 80003f2:	4610      	moveq	r0, r2
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	ea91 0f03 	teq	r1, r3
 80003fa:	bf1e      	ittt	ne
 80003fc:	2100      	movne	r1, #0
 80003fe:	2000      	movne	r0, #0
 8000400:	bd30      	popne	{r4, r5, pc}
 8000402:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000406:	d105      	bne.n	8000414 <__adddf3+0x230>
 8000408:	0040      	lsls	r0, r0, #1
 800040a:	4149      	adcs	r1, r1
 800040c:	bf28      	it	cs
 800040e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000412:	bd30      	pop	{r4, r5, pc}
 8000414:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000418:	bf3c      	itt	cc
 800041a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800041e:	bd30      	popcc	{r4, r5, pc}
 8000420:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000424:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000428:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800042c:	f04f 0000 	mov.w	r0, #0
 8000430:	bd30      	pop	{r4, r5, pc}
 8000432:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000436:	bf1a      	itte	ne
 8000438:	4619      	movne	r1, r3
 800043a:	4610      	movne	r0, r2
 800043c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000440:	bf1c      	itt	ne
 8000442:	460b      	movne	r3, r1
 8000444:	4602      	movne	r2, r0
 8000446:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800044a:	bf06      	itte	eq
 800044c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000450:	ea91 0f03 	teqeq	r1, r3
 8000454:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000458:	bd30      	pop	{r4, r5, pc}
 800045a:	bf00      	nop

0800045c <__aeabi_ui2d>:
 800045c:	f090 0f00 	teq	r0, #0
 8000460:	bf04      	itt	eq
 8000462:	2100      	moveq	r1, #0
 8000464:	4770      	bxeq	lr
 8000466:	b530      	push	{r4, r5, lr}
 8000468:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800046c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000470:	f04f 0500 	mov.w	r5, #0
 8000474:	f04f 0100 	mov.w	r1, #0
 8000478:	e750      	b.n	800031c <__adddf3+0x138>
 800047a:	bf00      	nop

0800047c <__aeabi_i2d>:
 800047c:	f090 0f00 	teq	r0, #0
 8000480:	bf04      	itt	eq
 8000482:	2100      	moveq	r1, #0
 8000484:	4770      	bxeq	lr
 8000486:	b530      	push	{r4, r5, lr}
 8000488:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800048c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000490:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000494:	bf48      	it	mi
 8000496:	4240      	negmi	r0, r0
 8000498:	f04f 0100 	mov.w	r1, #0
 800049c:	e73e      	b.n	800031c <__adddf3+0x138>
 800049e:	bf00      	nop

080004a0 <__aeabi_f2d>:
 80004a0:	0042      	lsls	r2, r0, #1
 80004a2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004a6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004aa:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004ae:	bf1f      	itttt	ne
 80004b0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004b4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004b8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004bc:	4770      	bxne	lr
 80004be:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80004c2:	bf08      	it	eq
 80004c4:	4770      	bxeq	lr
 80004c6:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80004ca:	bf04      	itt	eq
 80004cc:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80004d0:	4770      	bxeq	lr
 80004d2:	b530      	push	{r4, r5, lr}
 80004d4:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004e0:	e71c      	b.n	800031c <__adddf3+0x138>
 80004e2:	bf00      	nop

080004e4 <__aeabi_ul2d>:
 80004e4:	ea50 0201 	orrs.w	r2, r0, r1
 80004e8:	bf08      	it	eq
 80004ea:	4770      	bxeq	lr
 80004ec:	b530      	push	{r4, r5, lr}
 80004ee:	f04f 0500 	mov.w	r5, #0
 80004f2:	e00a      	b.n	800050a <__aeabi_l2d+0x16>

080004f4 <__aeabi_l2d>:
 80004f4:	ea50 0201 	orrs.w	r2, r0, r1
 80004f8:	bf08      	it	eq
 80004fa:	4770      	bxeq	lr
 80004fc:	b530      	push	{r4, r5, lr}
 80004fe:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000502:	d502      	bpl.n	800050a <__aeabi_l2d+0x16>
 8000504:	4240      	negs	r0, r0
 8000506:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800050a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800050e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000512:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000516:	f43f aed8 	beq.w	80002ca <__adddf3+0xe6>
 800051a:	f04f 0203 	mov.w	r2, #3
 800051e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000522:	bf18      	it	ne
 8000524:	3203      	addne	r2, #3
 8000526:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800052a:	bf18      	it	ne
 800052c:	3203      	addne	r2, #3
 800052e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000532:	f1c2 0320 	rsb	r3, r2, #32
 8000536:	fa00 fc03 	lsl.w	ip, r0, r3
 800053a:	fa20 f002 	lsr.w	r0, r0, r2
 800053e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000542:	ea40 000e 	orr.w	r0, r0, lr
 8000546:	fa21 f102 	lsr.w	r1, r1, r2
 800054a:	4414      	add	r4, r2
 800054c:	e6bd      	b.n	80002ca <__adddf3+0xe6>
 800054e:	bf00      	nop

08000550 <__aeabi_dmul>:
 8000550:	b570      	push	{r4, r5, r6, lr}
 8000552:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000556:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800055a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800055e:	bf1d      	ittte	ne
 8000560:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000564:	ea94 0f0c 	teqne	r4, ip
 8000568:	ea95 0f0c 	teqne	r5, ip
 800056c:	f000 f8de 	bleq	800072c <__aeabi_dmul+0x1dc>
 8000570:	442c      	add	r4, r5
 8000572:	ea81 0603 	eor.w	r6, r1, r3
 8000576:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800057a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800057e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000582:	bf18      	it	ne
 8000584:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000588:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800058c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000590:	d038      	beq.n	8000604 <__aeabi_dmul+0xb4>
 8000592:	fba0 ce02 	umull	ip, lr, r0, r2
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800059e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005a6:	f04f 0600 	mov.w	r6, #0
 80005aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005ae:	f09c 0f00 	teq	ip, #0
 80005b2:	bf18      	it	ne
 80005b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80005c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80005c4:	d204      	bcs.n	80005d0 <__aeabi_dmul+0x80>
 80005c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005ca:	416d      	adcs	r5, r5
 80005cc:	eb46 0606 	adc.w	r6, r6, r6
 80005d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80005e8:	bf88      	it	hi
 80005ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80005ee:	d81e      	bhi.n	800062e <__aeabi_dmul+0xde>
 80005f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80005f4:	bf08      	it	eq
 80005f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005fa:	f150 0000 	adcs.w	r0, r0, #0
 80005fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000602:	bd70      	pop	{r4, r5, r6, pc}
 8000604:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000608:	ea46 0101 	orr.w	r1, r6, r1
 800060c:	ea40 0002 	orr.w	r0, r0, r2
 8000610:	ea81 0103 	eor.w	r1, r1, r3
 8000614:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000618:	bfc2      	ittt	gt
 800061a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800061e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000622:	bd70      	popgt	{r4, r5, r6, pc}
 8000624:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000628:	f04f 0e00 	mov.w	lr, #0
 800062c:	3c01      	subs	r4, #1
 800062e:	f300 80ab 	bgt.w	8000788 <__aeabi_dmul+0x238>
 8000632:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000636:	bfde      	ittt	le
 8000638:	2000      	movle	r0, #0
 800063a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800063e:	bd70      	pople	{r4, r5, r6, pc}
 8000640:	f1c4 0400 	rsb	r4, r4, #0
 8000644:	3c20      	subs	r4, #32
 8000646:	da35      	bge.n	80006b4 <__aeabi_dmul+0x164>
 8000648:	340c      	adds	r4, #12
 800064a:	dc1b      	bgt.n	8000684 <__aeabi_dmul+0x134>
 800064c:	f104 0414 	add.w	r4, r4, #20
 8000650:	f1c4 0520 	rsb	r5, r4, #32
 8000654:	fa00 f305 	lsl.w	r3, r0, r5
 8000658:	fa20 f004 	lsr.w	r0, r0, r4
 800065c:	fa01 f205 	lsl.w	r2, r1, r5
 8000660:	ea40 0002 	orr.w	r0, r0, r2
 8000664:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000668:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800066c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000670:	fa21 f604 	lsr.w	r6, r1, r4
 8000674:	eb42 0106 	adc.w	r1, r2, r6
 8000678:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800067c:	bf08      	it	eq
 800067e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000682:	bd70      	pop	{r4, r5, r6, pc}
 8000684:	f1c4 040c 	rsb	r4, r4, #12
 8000688:	f1c4 0520 	rsb	r5, r4, #32
 800068c:	fa00 f304 	lsl.w	r3, r0, r4
 8000690:	fa20 f005 	lsr.w	r0, r0, r5
 8000694:	fa01 f204 	lsl.w	r2, r1, r4
 8000698:	ea40 0002 	orr.w	r0, r0, r2
 800069c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006a4:	f141 0100 	adc.w	r1, r1, #0
 80006a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ac:	bf08      	it	eq
 80006ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f1c4 0520 	rsb	r5, r4, #32
 80006b8:	fa00 f205 	lsl.w	r2, r0, r5
 80006bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80006c0:	fa20 f304 	lsr.w	r3, r0, r4
 80006c4:	fa01 f205 	lsl.w	r2, r1, r5
 80006c8:	ea43 0302 	orr.w	r3, r3, r2
 80006cc:	fa21 f004 	lsr.w	r0, r1, r4
 80006d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d4:	fa21 f204 	lsr.w	r2, r1, r4
 80006d8:	ea20 0002 	bic.w	r0, r0, r2
 80006dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006e4:	bf08      	it	eq
 80006e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f094 0f00 	teq	r4, #0
 80006f0:	d10f      	bne.n	8000712 <__aeabi_dmul+0x1c2>
 80006f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80006f6:	0040      	lsls	r0, r0, #1
 80006f8:	eb41 0101 	adc.w	r1, r1, r1
 80006fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000700:	bf08      	it	eq
 8000702:	3c01      	subeq	r4, #1
 8000704:	d0f7      	beq.n	80006f6 <__aeabi_dmul+0x1a6>
 8000706:	ea41 0106 	orr.w	r1, r1, r6
 800070a:	f095 0f00 	teq	r5, #0
 800070e:	bf18      	it	ne
 8000710:	4770      	bxne	lr
 8000712:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000716:	0052      	lsls	r2, r2, #1
 8000718:	eb43 0303 	adc.w	r3, r3, r3
 800071c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000720:	bf08      	it	eq
 8000722:	3d01      	subeq	r5, #1
 8000724:	d0f7      	beq.n	8000716 <__aeabi_dmul+0x1c6>
 8000726:	ea43 0306 	orr.w	r3, r3, r6
 800072a:	4770      	bx	lr
 800072c:	ea94 0f0c 	teq	r4, ip
 8000730:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000734:	bf18      	it	ne
 8000736:	ea95 0f0c 	teqne	r5, ip
 800073a:	d00c      	beq.n	8000756 <__aeabi_dmul+0x206>
 800073c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000740:	bf18      	it	ne
 8000742:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000746:	d1d1      	bne.n	80006ec <__aeabi_dmul+0x19c>
 8000748:	ea81 0103 	eor.w	r1, r1, r3
 800074c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000750:	f04f 0000 	mov.w	r0, #0
 8000754:	bd70      	pop	{r4, r5, r6, pc}
 8000756:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800075a:	bf06      	itte	eq
 800075c:	4610      	moveq	r0, r2
 800075e:	4619      	moveq	r1, r3
 8000760:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000764:	d019      	beq.n	800079a <__aeabi_dmul+0x24a>
 8000766:	ea94 0f0c 	teq	r4, ip
 800076a:	d102      	bne.n	8000772 <__aeabi_dmul+0x222>
 800076c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000770:	d113      	bne.n	800079a <__aeabi_dmul+0x24a>
 8000772:	ea95 0f0c 	teq	r5, ip
 8000776:	d105      	bne.n	8000784 <__aeabi_dmul+0x234>
 8000778:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800077c:	bf1c      	itt	ne
 800077e:	4610      	movne	r0, r2
 8000780:	4619      	movne	r1, r3
 8000782:	d10a      	bne.n	800079a <__aeabi_dmul+0x24a>
 8000784:	ea81 0103 	eor.w	r1, r1, r3
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000790:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000794:	f04f 0000 	mov.w	r0, #0
 8000798:	bd70      	pop	{r4, r5, r6, pc}
 800079a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800079e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007a2:	bd70      	pop	{r4, r5, r6, pc}

080007a4 <__aeabi_ddiv>:
 80007a4:	b570      	push	{r4, r5, r6, lr}
 80007a6:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007aa:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007ae:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007b2:	bf1d      	ittte	ne
 80007b4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007b8:	ea94 0f0c 	teqne	r4, ip
 80007bc:	ea95 0f0c 	teqne	r5, ip
 80007c0:	f000 f8a7 	bleq	8000912 <__aeabi_ddiv+0x16e>
 80007c4:	eba4 0405 	sub.w	r4, r4, r5
 80007c8:	ea81 0e03 	eor.w	lr, r1, r3
 80007cc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80007d0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007d4:	f000 8088 	beq.w	80008e8 <__aeabi_ddiv+0x144>
 80007d8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007dc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80007e0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007e4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007e8:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007ec:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007f0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007f4:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007f8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007fc:	429d      	cmp	r5, r3
 80007fe:	bf08      	it	eq
 8000800:	4296      	cmpeq	r6, r2
 8000802:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000806:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800080a:	d202      	bcs.n	8000812 <__aeabi_ddiv+0x6e>
 800080c:	085b      	lsrs	r3, r3, #1
 800080e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000812:	1ab6      	subs	r6, r6, r2
 8000814:	eb65 0503 	sbc.w	r5, r5, r3
 8000818:	085b      	lsrs	r3, r3, #1
 800081a:	ea4f 0232 	mov.w	r2, r2, rrx
 800081e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000822:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000826:	ebb6 0e02 	subs.w	lr, r6, r2
 800082a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800082e:	bf22      	ittt	cs
 8000830:	1ab6      	subcs	r6, r6, r2
 8000832:	4675      	movcs	r5, lr
 8000834:	ea40 000c 	orrcs.w	r0, r0, ip
 8000838:	085b      	lsrs	r3, r3, #1
 800083a:	ea4f 0232 	mov.w	r2, r2, rrx
 800083e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000842:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000846:	bf22      	ittt	cs
 8000848:	1ab6      	subcs	r6, r6, r2
 800084a:	4675      	movcs	r5, lr
 800084c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000850:	085b      	lsrs	r3, r3, #1
 8000852:	ea4f 0232 	mov.w	r2, r2, rrx
 8000856:	ebb6 0e02 	subs.w	lr, r6, r2
 800085a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800085e:	bf22      	ittt	cs
 8000860:	1ab6      	subcs	r6, r6, r2
 8000862:	4675      	movcs	r5, lr
 8000864:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000880:	ea55 0e06 	orrs.w	lr, r5, r6
 8000884:	d018      	beq.n	80008b8 <__aeabi_ddiv+0x114>
 8000886:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800088a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800088e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000892:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000896:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800089a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800089e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008a2:	d1c0      	bne.n	8000826 <__aeabi_ddiv+0x82>
 80008a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008a8:	d10b      	bne.n	80008c2 <__aeabi_ddiv+0x11e>
 80008aa:	ea41 0100 	orr.w	r1, r1, r0
 80008ae:	f04f 0000 	mov.w	r0, #0
 80008b2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008b6:	e7b6      	b.n	8000826 <__aeabi_ddiv+0x82>
 80008b8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008bc:	bf04      	itt	eq
 80008be:	4301      	orreq	r1, r0
 80008c0:	2000      	moveq	r0, #0
 80008c2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80008c6:	bf88      	it	hi
 80008c8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80008cc:	f63f aeaf 	bhi.w	800062e <__aeabi_dmul+0xde>
 80008d0:	ebb5 0c03 	subs.w	ip, r5, r3
 80008d4:	bf04      	itt	eq
 80008d6:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008da:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008de:	f150 0000 	adcs.w	r0, r0, #0
 80008e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008e6:	bd70      	pop	{r4, r5, r6, pc}
 80008e8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80008ec:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008f0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008f4:	bfc2      	ittt	gt
 80008f6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008fa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008fe:	bd70      	popgt	{r4, r5, r6, pc}
 8000900:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000904:	f04f 0e00 	mov.w	lr, #0
 8000908:	3c01      	subs	r4, #1
 800090a:	e690      	b.n	800062e <__aeabi_dmul+0xde>
 800090c:	ea45 0e06 	orr.w	lr, r5, r6
 8000910:	e68d      	b.n	800062e <__aeabi_dmul+0xde>
 8000912:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000916:	ea94 0f0c 	teq	r4, ip
 800091a:	bf08      	it	eq
 800091c:	ea95 0f0c 	teqeq	r5, ip
 8000920:	f43f af3b 	beq.w	800079a <__aeabi_dmul+0x24a>
 8000924:	ea94 0f0c 	teq	r4, ip
 8000928:	d10a      	bne.n	8000940 <__aeabi_ddiv+0x19c>
 800092a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800092e:	f47f af34 	bne.w	800079a <__aeabi_dmul+0x24a>
 8000932:	ea95 0f0c 	teq	r5, ip
 8000936:	f47f af25 	bne.w	8000784 <__aeabi_dmul+0x234>
 800093a:	4610      	mov	r0, r2
 800093c:	4619      	mov	r1, r3
 800093e:	e72c      	b.n	800079a <__aeabi_dmul+0x24a>
 8000940:	ea95 0f0c 	teq	r5, ip
 8000944:	d106      	bne.n	8000954 <__aeabi_ddiv+0x1b0>
 8000946:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800094a:	f43f aefd 	beq.w	8000748 <__aeabi_dmul+0x1f8>
 800094e:	4610      	mov	r0, r2
 8000950:	4619      	mov	r1, r3
 8000952:	e722      	b.n	800079a <__aeabi_dmul+0x24a>
 8000954:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000958:	bf18      	it	ne
 800095a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800095e:	f47f aec5 	bne.w	80006ec <__aeabi_dmul+0x19c>
 8000962:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000966:	f47f af0d 	bne.w	8000784 <__aeabi_dmul+0x234>
 800096a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800096e:	f47f aeeb 	bne.w	8000748 <__aeabi_dmul+0x1f8>
 8000972:	e712      	b.n	800079a <__aeabi_dmul+0x24a>

08000974 <__gedf2>:
 8000974:	f04f 3cff 	mov.w	ip, #4294967295
 8000978:	e006      	b.n	8000988 <__cmpdf2+0x4>
 800097a:	bf00      	nop

0800097c <__ledf2>:
 800097c:	f04f 0c01 	mov.w	ip, #1
 8000980:	e002      	b.n	8000988 <__cmpdf2+0x4>
 8000982:	bf00      	nop

08000984 <__cmpdf2>:
 8000984:	f04f 0c01 	mov.w	ip, #1
 8000988:	f84d cd04 	str.w	ip, [sp, #-4]!
 800098c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000990:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000994:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000998:	bf18      	it	ne
 800099a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800099e:	d01b      	beq.n	80009d8 <__cmpdf2+0x54>
 80009a0:	b001      	add	sp, #4
 80009a2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009a6:	bf0c      	ite	eq
 80009a8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009ac:	ea91 0f03 	teqne	r1, r3
 80009b0:	bf02      	ittt	eq
 80009b2:	ea90 0f02 	teqeq	r0, r2
 80009b6:	2000      	moveq	r0, #0
 80009b8:	4770      	bxeq	lr
 80009ba:	f110 0f00 	cmn.w	r0, #0
 80009be:	ea91 0f03 	teq	r1, r3
 80009c2:	bf58      	it	pl
 80009c4:	4299      	cmppl	r1, r3
 80009c6:	bf08      	it	eq
 80009c8:	4290      	cmpeq	r0, r2
 80009ca:	bf2c      	ite	cs
 80009cc:	17d8      	asrcs	r0, r3, #31
 80009ce:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80009d2:	f040 0001 	orr.w	r0, r0, #1
 80009d6:	4770      	bx	lr
 80009d8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009e0:	d102      	bne.n	80009e8 <__cmpdf2+0x64>
 80009e2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009e6:	d107      	bne.n	80009f8 <__cmpdf2+0x74>
 80009e8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009ec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009f0:	d1d6      	bne.n	80009a0 <__cmpdf2+0x1c>
 80009f2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009f6:	d0d3      	beq.n	80009a0 <__cmpdf2+0x1c>
 80009f8:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009fc:	4770      	bx	lr
 80009fe:	bf00      	nop

08000a00 <__aeabi_cdrcmple>:
 8000a00:	4684      	mov	ip, r0
 8000a02:	4610      	mov	r0, r2
 8000a04:	4662      	mov	r2, ip
 8000a06:	468c      	mov	ip, r1
 8000a08:	4619      	mov	r1, r3
 8000a0a:	4663      	mov	r3, ip
 8000a0c:	e000      	b.n	8000a10 <__aeabi_cdcmpeq>
 8000a0e:	bf00      	nop

08000a10 <__aeabi_cdcmpeq>:
 8000a10:	b501      	push	{r0, lr}
 8000a12:	f7ff ffb7 	bl	8000984 <__cmpdf2>
 8000a16:	2800      	cmp	r0, #0
 8000a18:	bf48      	it	mi
 8000a1a:	f110 0f00 	cmnmi.w	r0, #0
 8000a1e:	bd01      	pop	{r0, pc}

08000a20 <__aeabi_dcmpeq>:
 8000a20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a24:	f7ff fff4 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a28:	bf0c      	ite	eq
 8000a2a:	2001      	moveq	r0, #1
 8000a2c:	2000      	movne	r0, #0
 8000a2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a32:	bf00      	nop

08000a34 <__aeabi_dcmplt>:
 8000a34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a38:	f7ff ffea 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a3c:	bf34      	ite	cc
 8000a3e:	2001      	movcc	r0, #1
 8000a40:	2000      	movcs	r0, #0
 8000a42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a46:	bf00      	nop

08000a48 <__aeabi_dcmple>:
 8000a48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a4c:	f7ff ffe0 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a50:	bf94      	ite	ls
 8000a52:	2001      	movls	r0, #1
 8000a54:	2000      	movhi	r0, #0
 8000a56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a5a:	bf00      	nop

08000a5c <__aeabi_dcmpge>:
 8000a5c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a60:	f7ff ffce 	bl	8000a00 <__aeabi_cdrcmple>
 8000a64:	bf94      	ite	ls
 8000a66:	2001      	movls	r0, #1
 8000a68:	2000      	movhi	r0, #0
 8000a6a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a6e:	bf00      	nop

08000a70 <__aeabi_dcmpgt>:
 8000a70:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a74:	f7ff ffc4 	bl	8000a00 <__aeabi_cdrcmple>
 8000a78:	bf34      	ite	cc
 8000a7a:	2001      	movcc	r0, #1
 8000a7c:	2000      	movcs	r0, #0
 8000a7e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a82:	bf00      	nop

08000a84 <__aeabi_dcmpun>:
 8000a84:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a8c:	d102      	bne.n	8000a94 <__aeabi_dcmpun+0x10>
 8000a8e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a92:	d10a      	bne.n	8000aaa <__aeabi_dcmpun+0x26>
 8000a94:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a9c:	d102      	bne.n	8000aa4 <__aeabi_dcmpun+0x20>
 8000a9e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aa2:	d102      	bne.n	8000aaa <__aeabi_dcmpun+0x26>
 8000aa4:	f04f 0000 	mov.w	r0, #0
 8000aa8:	4770      	bx	lr
 8000aaa:	f04f 0001 	mov.w	r0, #1
 8000aae:	4770      	bx	lr

08000ab0 <__aeabi_d2uiz>:
 8000ab0:	004a      	lsls	r2, r1, #1
 8000ab2:	d211      	bcs.n	8000ad8 <__aeabi_d2uiz+0x28>
 8000ab4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ab8:	d211      	bcs.n	8000ade <__aeabi_d2uiz+0x2e>
 8000aba:	d50d      	bpl.n	8000ad8 <__aeabi_d2uiz+0x28>
 8000abc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ac0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ac4:	d40e      	bmi.n	8000ae4 <__aeabi_d2uiz+0x34>
 8000ac6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aca:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ace:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000ad2:	fa23 f002 	lsr.w	r0, r3, r2
 8000ad6:	4770      	bx	lr
 8000ad8:	f04f 0000 	mov.w	r0, #0
 8000adc:	4770      	bx	lr
 8000ade:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ae2:	d102      	bne.n	8000aea <__aeabi_d2uiz+0x3a>
 8000ae4:	f04f 30ff 	mov.w	r0, #4294967295
 8000ae8:	4770      	bx	lr
 8000aea:	f04f 0000 	mov.w	r0, #0
 8000aee:	4770      	bx	lr

08000af0 <__aeabi_d2f>:
 8000af0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000af4:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000af8:	bf24      	itt	cs
 8000afa:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000afe:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b02:	d90d      	bls.n	8000b20 <__aeabi_d2f+0x30>
 8000b04:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b08:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b0c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b10:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b14:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b18:	bf08      	it	eq
 8000b1a:	f020 0001 	biceq.w	r0, r0, #1
 8000b1e:	4770      	bx	lr
 8000b20:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b24:	d121      	bne.n	8000b6a <__aeabi_d2f+0x7a>
 8000b26:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b2a:	bfbc      	itt	lt
 8000b2c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b30:	4770      	bxlt	lr
 8000b32:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b36:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b3a:	f1c2 0218 	rsb	r2, r2, #24
 8000b3e:	f1c2 0c20 	rsb	ip, r2, #32
 8000b42:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b46:	fa20 f002 	lsr.w	r0, r0, r2
 8000b4a:	bf18      	it	ne
 8000b4c:	f040 0001 	orrne.w	r0, r0, #1
 8000b50:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b54:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b58:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b5c:	ea40 000c 	orr.w	r0, r0, ip
 8000b60:	fa23 f302 	lsr.w	r3, r3, r2
 8000b64:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b68:	e7cc      	b.n	8000b04 <__aeabi_d2f+0x14>
 8000b6a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b6e:	d107      	bne.n	8000b80 <__aeabi_d2f+0x90>
 8000b70:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b74:	bf1e      	ittt	ne
 8000b76:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b7a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b7e:	4770      	bxne	lr
 8000b80:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b84:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b88:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b8c:	4770      	bx	lr
 8000b8e:	bf00      	nop

08000b90 <__aeabi_uldivmod>:
 8000b90:	b953      	cbnz	r3, 8000ba8 <__aeabi_uldivmod+0x18>
 8000b92:	b94a      	cbnz	r2, 8000ba8 <__aeabi_uldivmod+0x18>
 8000b94:	2900      	cmp	r1, #0
 8000b96:	bf08      	it	eq
 8000b98:	2800      	cmpeq	r0, #0
 8000b9a:	bf1c      	itt	ne
 8000b9c:	f04f 31ff 	movne.w	r1, #4294967295
 8000ba0:	f04f 30ff 	movne.w	r0, #4294967295
 8000ba4:	f000 b974 	b.w	8000e90 <__aeabi_idiv0>
 8000ba8:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bb0:	f000 f806 	bl	8000bc0 <__udivmoddi4>
 8000bb4:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bb8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bbc:	b004      	add	sp, #16
 8000bbe:	4770      	bx	lr

08000bc0 <__udivmoddi4>:
 8000bc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bc4:	9d08      	ldr	r5, [sp, #32]
 8000bc6:	4604      	mov	r4, r0
 8000bc8:	468e      	mov	lr, r1
 8000bca:	2b00      	cmp	r3, #0
 8000bcc:	d14d      	bne.n	8000c6a <__udivmoddi4+0xaa>
 8000bce:	428a      	cmp	r2, r1
 8000bd0:	4694      	mov	ip, r2
 8000bd2:	d969      	bls.n	8000ca8 <__udivmoddi4+0xe8>
 8000bd4:	fab2 f282 	clz	r2, r2
 8000bd8:	b152      	cbz	r2, 8000bf0 <__udivmoddi4+0x30>
 8000bda:	fa01 f302 	lsl.w	r3, r1, r2
 8000bde:	f1c2 0120 	rsb	r1, r2, #32
 8000be2:	fa20 f101 	lsr.w	r1, r0, r1
 8000be6:	fa0c fc02 	lsl.w	ip, ip, r2
 8000bea:	ea41 0e03 	orr.w	lr, r1, r3
 8000bee:	4094      	lsls	r4, r2
 8000bf0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000bf4:	0c21      	lsrs	r1, r4, #16
 8000bf6:	fbbe f6f8 	udiv	r6, lr, r8
 8000bfa:	fa1f f78c 	uxth.w	r7, ip
 8000bfe:	fb08 e316 	mls	r3, r8, r6, lr
 8000c02:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000c06:	fb06 f107 	mul.w	r1, r6, r7
 8000c0a:	4299      	cmp	r1, r3
 8000c0c:	d90a      	bls.n	8000c24 <__udivmoddi4+0x64>
 8000c0e:	eb1c 0303 	adds.w	r3, ip, r3
 8000c12:	f106 30ff 	add.w	r0, r6, #4294967295
 8000c16:	f080 811f 	bcs.w	8000e58 <__udivmoddi4+0x298>
 8000c1a:	4299      	cmp	r1, r3
 8000c1c:	f240 811c 	bls.w	8000e58 <__udivmoddi4+0x298>
 8000c20:	3e02      	subs	r6, #2
 8000c22:	4463      	add	r3, ip
 8000c24:	1a5b      	subs	r3, r3, r1
 8000c26:	b2a4      	uxth	r4, r4
 8000c28:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c2c:	fb08 3310 	mls	r3, r8, r0, r3
 8000c30:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c34:	fb00 f707 	mul.w	r7, r0, r7
 8000c38:	42a7      	cmp	r7, r4
 8000c3a:	d90a      	bls.n	8000c52 <__udivmoddi4+0x92>
 8000c3c:	eb1c 0404 	adds.w	r4, ip, r4
 8000c40:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c44:	f080 810a 	bcs.w	8000e5c <__udivmoddi4+0x29c>
 8000c48:	42a7      	cmp	r7, r4
 8000c4a:	f240 8107 	bls.w	8000e5c <__udivmoddi4+0x29c>
 8000c4e:	4464      	add	r4, ip
 8000c50:	3802      	subs	r0, #2
 8000c52:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000c56:	1be4      	subs	r4, r4, r7
 8000c58:	2600      	movs	r6, #0
 8000c5a:	b11d      	cbz	r5, 8000c64 <__udivmoddi4+0xa4>
 8000c5c:	40d4      	lsrs	r4, r2
 8000c5e:	2300      	movs	r3, #0
 8000c60:	e9c5 4300 	strd	r4, r3, [r5]
 8000c64:	4631      	mov	r1, r6
 8000c66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c6a:	428b      	cmp	r3, r1
 8000c6c:	d909      	bls.n	8000c82 <__udivmoddi4+0xc2>
 8000c6e:	2d00      	cmp	r5, #0
 8000c70:	f000 80ef 	beq.w	8000e52 <__udivmoddi4+0x292>
 8000c74:	2600      	movs	r6, #0
 8000c76:	e9c5 0100 	strd	r0, r1, [r5]
 8000c7a:	4630      	mov	r0, r6
 8000c7c:	4631      	mov	r1, r6
 8000c7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c82:	fab3 f683 	clz	r6, r3
 8000c86:	2e00      	cmp	r6, #0
 8000c88:	d14a      	bne.n	8000d20 <__udivmoddi4+0x160>
 8000c8a:	428b      	cmp	r3, r1
 8000c8c:	d302      	bcc.n	8000c94 <__udivmoddi4+0xd4>
 8000c8e:	4282      	cmp	r2, r0
 8000c90:	f200 80f9 	bhi.w	8000e86 <__udivmoddi4+0x2c6>
 8000c94:	1a84      	subs	r4, r0, r2
 8000c96:	eb61 0303 	sbc.w	r3, r1, r3
 8000c9a:	2001      	movs	r0, #1
 8000c9c:	469e      	mov	lr, r3
 8000c9e:	2d00      	cmp	r5, #0
 8000ca0:	d0e0      	beq.n	8000c64 <__udivmoddi4+0xa4>
 8000ca2:	e9c5 4e00 	strd	r4, lr, [r5]
 8000ca6:	e7dd      	b.n	8000c64 <__udivmoddi4+0xa4>
 8000ca8:	b902      	cbnz	r2, 8000cac <__udivmoddi4+0xec>
 8000caa:	deff      	udf	#255	; 0xff
 8000cac:	fab2 f282 	clz	r2, r2
 8000cb0:	2a00      	cmp	r2, #0
 8000cb2:	f040 8092 	bne.w	8000dda <__udivmoddi4+0x21a>
 8000cb6:	eba1 010c 	sub.w	r1, r1, ip
 8000cba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cbe:	fa1f fe8c 	uxth.w	lr, ip
 8000cc2:	2601      	movs	r6, #1
 8000cc4:	0c20      	lsrs	r0, r4, #16
 8000cc6:	fbb1 f3f7 	udiv	r3, r1, r7
 8000cca:	fb07 1113 	mls	r1, r7, r3, r1
 8000cce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000cd2:	fb0e f003 	mul.w	r0, lr, r3
 8000cd6:	4288      	cmp	r0, r1
 8000cd8:	d908      	bls.n	8000cec <__udivmoddi4+0x12c>
 8000cda:	eb1c 0101 	adds.w	r1, ip, r1
 8000cde:	f103 38ff 	add.w	r8, r3, #4294967295
 8000ce2:	d202      	bcs.n	8000cea <__udivmoddi4+0x12a>
 8000ce4:	4288      	cmp	r0, r1
 8000ce6:	f200 80cb 	bhi.w	8000e80 <__udivmoddi4+0x2c0>
 8000cea:	4643      	mov	r3, r8
 8000cec:	1a09      	subs	r1, r1, r0
 8000cee:	b2a4      	uxth	r4, r4
 8000cf0:	fbb1 f0f7 	udiv	r0, r1, r7
 8000cf4:	fb07 1110 	mls	r1, r7, r0, r1
 8000cf8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000cfc:	fb0e fe00 	mul.w	lr, lr, r0
 8000d00:	45a6      	cmp	lr, r4
 8000d02:	d908      	bls.n	8000d16 <__udivmoddi4+0x156>
 8000d04:	eb1c 0404 	adds.w	r4, ip, r4
 8000d08:	f100 31ff 	add.w	r1, r0, #4294967295
 8000d0c:	d202      	bcs.n	8000d14 <__udivmoddi4+0x154>
 8000d0e:	45a6      	cmp	lr, r4
 8000d10:	f200 80bb 	bhi.w	8000e8a <__udivmoddi4+0x2ca>
 8000d14:	4608      	mov	r0, r1
 8000d16:	eba4 040e 	sub.w	r4, r4, lr
 8000d1a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000d1e:	e79c      	b.n	8000c5a <__udivmoddi4+0x9a>
 8000d20:	f1c6 0720 	rsb	r7, r6, #32
 8000d24:	40b3      	lsls	r3, r6
 8000d26:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d2a:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d2e:	fa20 f407 	lsr.w	r4, r0, r7
 8000d32:	fa01 f306 	lsl.w	r3, r1, r6
 8000d36:	431c      	orrs	r4, r3
 8000d38:	40f9      	lsrs	r1, r7
 8000d3a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d3e:	fa00 f306 	lsl.w	r3, r0, r6
 8000d42:	fbb1 f8f9 	udiv	r8, r1, r9
 8000d46:	0c20      	lsrs	r0, r4, #16
 8000d48:	fa1f fe8c 	uxth.w	lr, ip
 8000d4c:	fb09 1118 	mls	r1, r9, r8, r1
 8000d50:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000d54:	fb08 f00e 	mul.w	r0, r8, lr
 8000d58:	4288      	cmp	r0, r1
 8000d5a:	fa02 f206 	lsl.w	r2, r2, r6
 8000d5e:	d90b      	bls.n	8000d78 <__udivmoddi4+0x1b8>
 8000d60:	eb1c 0101 	adds.w	r1, ip, r1
 8000d64:	f108 3aff 	add.w	sl, r8, #4294967295
 8000d68:	f080 8088 	bcs.w	8000e7c <__udivmoddi4+0x2bc>
 8000d6c:	4288      	cmp	r0, r1
 8000d6e:	f240 8085 	bls.w	8000e7c <__udivmoddi4+0x2bc>
 8000d72:	f1a8 0802 	sub.w	r8, r8, #2
 8000d76:	4461      	add	r1, ip
 8000d78:	1a09      	subs	r1, r1, r0
 8000d7a:	b2a4      	uxth	r4, r4
 8000d7c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000d80:	fb09 1110 	mls	r1, r9, r0, r1
 8000d84:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000d88:	fb00 fe0e 	mul.w	lr, r0, lr
 8000d8c:	458e      	cmp	lr, r1
 8000d8e:	d908      	bls.n	8000da2 <__udivmoddi4+0x1e2>
 8000d90:	eb1c 0101 	adds.w	r1, ip, r1
 8000d94:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d98:	d26c      	bcs.n	8000e74 <__udivmoddi4+0x2b4>
 8000d9a:	458e      	cmp	lr, r1
 8000d9c:	d96a      	bls.n	8000e74 <__udivmoddi4+0x2b4>
 8000d9e:	3802      	subs	r0, #2
 8000da0:	4461      	add	r1, ip
 8000da2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000da6:	fba0 9402 	umull	r9, r4, r0, r2
 8000daa:	eba1 010e 	sub.w	r1, r1, lr
 8000dae:	42a1      	cmp	r1, r4
 8000db0:	46c8      	mov	r8, r9
 8000db2:	46a6      	mov	lr, r4
 8000db4:	d356      	bcc.n	8000e64 <__udivmoddi4+0x2a4>
 8000db6:	d053      	beq.n	8000e60 <__udivmoddi4+0x2a0>
 8000db8:	b15d      	cbz	r5, 8000dd2 <__udivmoddi4+0x212>
 8000dba:	ebb3 0208 	subs.w	r2, r3, r8
 8000dbe:	eb61 010e 	sbc.w	r1, r1, lr
 8000dc2:	fa01 f707 	lsl.w	r7, r1, r7
 8000dc6:	fa22 f306 	lsr.w	r3, r2, r6
 8000dca:	40f1      	lsrs	r1, r6
 8000dcc:	431f      	orrs	r7, r3
 8000dce:	e9c5 7100 	strd	r7, r1, [r5]
 8000dd2:	2600      	movs	r6, #0
 8000dd4:	4631      	mov	r1, r6
 8000dd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dda:	f1c2 0320 	rsb	r3, r2, #32
 8000dde:	40d8      	lsrs	r0, r3
 8000de0:	fa0c fc02 	lsl.w	ip, ip, r2
 8000de4:	fa21 f303 	lsr.w	r3, r1, r3
 8000de8:	4091      	lsls	r1, r2
 8000dea:	4301      	orrs	r1, r0
 8000dec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000df0:	fa1f fe8c 	uxth.w	lr, ip
 8000df4:	fbb3 f0f7 	udiv	r0, r3, r7
 8000df8:	fb07 3610 	mls	r6, r7, r0, r3
 8000dfc:	0c0b      	lsrs	r3, r1, #16
 8000dfe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000e02:	fb00 f60e 	mul.w	r6, r0, lr
 8000e06:	429e      	cmp	r6, r3
 8000e08:	fa04 f402 	lsl.w	r4, r4, r2
 8000e0c:	d908      	bls.n	8000e20 <__udivmoddi4+0x260>
 8000e0e:	eb1c 0303 	adds.w	r3, ip, r3
 8000e12:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e16:	d22f      	bcs.n	8000e78 <__udivmoddi4+0x2b8>
 8000e18:	429e      	cmp	r6, r3
 8000e1a:	d92d      	bls.n	8000e78 <__udivmoddi4+0x2b8>
 8000e1c:	3802      	subs	r0, #2
 8000e1e:	4463      	add	r3, ip
 8000e20:	1b9b      	subs	r3, r3, r6
 8000e22:	b289      	uxth	r1, r1
 8000e24:	fbb3 f6f7 	udiv	r6, r3, r7
 8000e28:	fb07 3316 	mls	r3, r7, r6, r3
 8000e2c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e30:	fb06 f30e 	mul.w	r3, r6, lr
 8000e34:	428b      	cmp	r3, r1
 8000e36:	d908      	bls.n	8000e4a <__udivmoddi4+0x28a>
 8000e38:	eb1c 0101 	adds.w	r1, ip, r1
 8000e3c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000e40:	d216      	bcs.n	8000e70 <__udivmoddi4+0x2b0>
 8000e42:	428b      	cmp	r3, r1
 8000e44:	d914      	bls.n	8000e70 <__udivmoddi4+0x2b0>
 8000e46:	3e02      	subs	r6, #2
 8000e48:	4461      	add	r1, ip
 8000e4a:	1ac9      	subs	r1, r1, r3
 8000e4c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000e50:	e738      	b.n	8000cc4 <__udivmoddi4+0x104>
 8000e52:	462e      	mov	r6, r5
 8000e54:	4628      	mov	r0, r5
 8000e56:	e705      	b.n	8000c64 <__udivmoddi4+0xa4>
 8000e58:	4606      	mov	r6, r0
 8000e5a:	e6e3      	b.n	8000c24 <__udivmoddi4+0x64>
 8000e5c:	4618      	mov	r0, r3
 8000e5e:	e6f8      	b.n	8000c52 <__udivmoddi4+0x92>
 8000e60:	454b      	cmp	r3, r9
 8000e62:	d2a9      	bcs.n	8000db8 <__udivmoddi4+0x1f8>
 8000e64:	ebb9 0802 	subs.w	r8, r9, r2
 8000e68:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000e6c:	3801      	subs	r0, #1
 8000e6e:	e7a3      	b.n	8000db8 <__udivmoddi4+0x1f8>
 8000e70:	4646      	mov	r6, r8
 8000e72:	e7ea      	b.n	8000e4a <__udivmoddi4+0x28a>
 8000e74:	4620      	mov	r0, r4
 8000e76:	e794      	b.n	8000da2 <__udivmoddi4+0x1e2>
 8000e78:	4640      	mov	r0, r8
 8000e7a:	e7d1      	b.n	8000e20 <__udivmoddi4+0x260>
 8000e7c:	46d0      	mov	r8, sl
 8000e7e:	e77b      	b.n	8000d78 <__udivmoddi4+0x1b8>
 8000e80:	3b02      	subs	r3, #2
 8000e82:	4461      	add	r1, ip
 8000e84:	e732      	b.n	8000cec <__udivmoddi4+0x12c>
 8000e86:	4630      	mov	r0, r6
 8000e88:	e709      	b.n	8000c9e <__udivmoddi4+0xde>
 8000e8a:	4464      	add	r4, ip
 8000e8c:	3802      	subs	r0, #2
 8000e8e:	e742      	b.n	8000d16 <__udivmoddi4+0x156>

08000e90 <__aeabi_idiv0>:
 8000e90:	4770      	bx	lr
 8000e92:	bf00      	nop
 8000e94:	0000      	movs	r0, r0
	...

08000e98 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000e98:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8000e9c:	b082      	sub	sp, #8
 8000e9e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
   HAL_Init();
 8000ea0:	f003 fdc4 	bl	8004a2c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ea4:	f000 fb80 	bl	80015a8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000ea8:	f000 fd52 	bl	8001950 <MX_GPIO_Init>
  MX_DMA_Init();
 8000eac:	f000 fd18 	bl	80018e0 <MX_DMA_Init>
  MX_USART2_UART_Init();
 8000eb0:	f000 fcea 	bl	8001888 <MX_USART2_UART_Init>
  MX_TIM11_Init();
 8000eb4:	f000 fcc4 	bl	8001840 <MX_TIM11_Init>
  MX_SPI3_Init();
 8000eb8:	f000 fc0c 	bl	80016d4 <MX_SPI3_Init>
  MX_TIM2_Init();
 8000ebc:	f000 fc40 	bl	8001740 <MX_TIM2_Init>
  MX_I2C1_Init();
 8000ec0:	f000 fbda 	bl	8001678 <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */

  HAL_TIM_Base_Start_IT(&htim11);
 8000ec4:	4892      	ldr	r0, [pc, #584]	; (8001110 <main+0x278>)
 8000ec6:	f008 fbd5 	bl	8009674 <HAL_TIM_Base_Start_IT>
  HAL_UART_Receive_DMA(&huart2, Receive, nbyte);
 8000eca:	4b92      	ldr	r3, [pc, #584]	; (8001114 <main+0x27c>)
 8000ecc:	781b      	ldrb	r3, [r3, #0]
 8000ece:	b29b      	uxth	r3, r3
 8000ed0:	461a      	mov	r2, r3
 8000ed2:	4991      	ldr	r1, [pc, #580]	; (8001118 <main+0x280>)
 8000ed4:	4891      	ldr	r0, [pc, #580]	; (800111c <main+0x284>)
 8000ed6:	f009 fc0d 	bl	800a6f4 <HAL_UART_Receive_DMA>
  NFgetstate();
 8000eda:	f002 f99f 	bl	800321c <NFgetstate>
  NFstate = 0x78;
 8000ede:	4b90      	ldr	r3, [pc, #576]	; (8001120 <main+0x288>)
 8000ee0:	2278      	movs	r2, #120	; 0x78
 8000ee2:	701a      	strb	r2, [r3, #0]
  //PWM Generator set
  HAL_TIM_Base_Start(&htim2);
 8000ee4:	488f      	ldr	r0, [pc, #572]	; (8001124 <main+0x28c>)
 8000ee6:	f008 fb6b 	bl	80095c0 <HAL_TIM_Base_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8000eea:	2100      	movs	r1, #0
 8000eec:	488d      	ldr	r0, [pc, #564]	; (8001124 <main+0x28c>)
 8000eee:	f008 fc7d 	bl	80097ec <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8000ef2:	2104      	movs	r1, #4
 8000ef4:	488b      	ldr	r0, [pc, #556]	; (8001124 <main+0x28c>)
 8000ef6:	f008 fc79 	bl	80097ec <HAL_TIM_PWM_Start>

  //Encoder set
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 8000efa:	2201      	movs	r2, #1
 8000efc:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000f00:	4889      	ldr	r0, [pc, #548]	; (8001128 <main+0x290>)
 8000f02:	f004 fcc3 	bl	800588c <HAL_GPIO_WritePin>
  {
	  static uint64_t timeset = 0;
	  static uint64_t timeset3 = 0;
	  static uint64_t timeStamp = 0;
	  static GPIO_PinState B1State2[2] = {0};
	  B1State2[0]= HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8);
 8000f06:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000f0a:	4888      	ldr	r0, [pc, #544]	; (800112c <main+0x294>)
 8000f0c:	f004 fca6 	bl	800585c <HAL_GPIO_ReadPin>
 8000f10:	4603      	mov	r3, r0
 8000f12:	461a      	mov	r2, r3
 8000f14:	4b86      	ldr	r3, [pc, #536]	; (8001130 <main+0x298>)
 8000f16:	701a      	strb	r2, [r3, #0]

	  if(AMTcomplete || micros()-timeStamp>dt*1000000){
 8000f18:	4b86      	ldr	r3, [pc, #536]	; (8001134 <main+0x29c>)
 8000f1a:	781b      	ldrb	r3, [r3, #0]
 8000f1c:	2b00      	cmp	r3, #0
 8000f1e:	d114      	bne.n	8000f4a <main+0xb2>
 8000f20:	f002 fc58 	bl	80037d4 <micros>
 8000f24:	4b84      	ldr	r3, [pc, #528]	; (8001138 <main+0x2a0>)
 8000f26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f2a:	ebb0 0802 	subs.w	r8, r0, r2
 8000f2e:	eb61 0903 	sbc.w	r9, r1, r3
 8000f32:	4640      	mov	r0, r8
 8000f34:	4649      	mov	r1, r9
 8000f36:	f7ff fad5 	bl	80004e4 <__aeabi_ul2d>
 8000f3a:	a36f      	add	r3, pc, #444	; (adr r3, 80010f8 <main+0x260>)
 8000f3c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f40:	f7ff fd96 	bl	8000a70 <__aeabi_dcmpgt>
 8000f44:	4603      	mov	r3, r0
 8000f46:	2b00      	cmp	r3, #0
 8000f48:	d002      	beq.n	8000f50 <main+0xb8>
	  		 AMT222getpos(&rawPos);
 8000f4a:	487c      	ldr	r0, [pc, #496]	; (800113c <main+0x2a4>)
 8000f4c:	f002 f9a0 	bl	8003290 <AMT222getpos>
	  	  }

	  switch(State){
 8000f50:	4b7b      	ldr	r3, [pc, #492]	; (8001140 <main+0x2a8>)
 8000f52:	781b      	ldrb	r3, [r3, #0]
 8000f54:	2b03      	cmp	r3, #3
 8000f56:	f000 8246 	beq.w	80013e6 <main+0x54e>
 8000f5a:	2b03      	cmp	r3, #3
 8000f5c:	dc04      	bgt.n	8000f68 <main+0xd0>
 8000f5e:	2b01      	cmp	r3, #1
 8000f60:	d05f      	beq.n	8001022 <main+0x18a>
 8000f62:	2b02      	cmp	r3, #2
 8000f64:	f000 82a6 	beq.w	80014b4 <main+0x61c>
	  default:
		  case Idle:
			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_RESET);
 8000f68:	2200      	movs	r2, #0
 8000f6a:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000f6e:	486f      	ldr	r0, [pc, #444]	; (800112c <main+0x294>)
 8000f70:	f004 fc8c 	bl	800588c <HAL_GPIO_WritePin>
			  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_SET);
 8000f74:	2201      	movs	r2, #1
 8000f76:	2180      	movs	r1, #128	; 0x80
 8000f78:	4872      	ldr	r0, [pc, #456]	; (8001144 <main+0x2ac>)
 8000f7a:	f004 fc87 	bl	800588c <HAL_GPIO_WritePin>
			  stop = 0;
 8000f7e:	4b72      	ldr	r3, [pc, #456]	; (8001148 <main+0x2b0>)
 8000f80:	2200      	movs	r2, #0
 8000f82:	701a      	strb	r2, [r3, #0]
			  if (micros() - timeset3 > dt*1000000){ //Read Value while Idle
 8000f84:	f002 fc26 	bl	80037d4 <micros>
 8000f88:	4b70      	ldr	r3, [pc, #448]	; (800114c <main+0x2b4>)
 8000f8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f8e:	ebb0 0a02 	subs.w	sl, r0, r2
 8000f92:	eb61 0b03 	sbc.w	fp, r1, r3
 8000f96:	4650      	mov	r0, sl
 8000f98:	4659      	mov	r1, fp
 8000f9a:	f7ff faa3 	bl	80004e4 <__aeabi_ul2d>
 8000f9e:	a356      	add	r3, pc, #344	; (adr r3, 80010f8 <main+0x260>)
 8000fa0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000fa4:	f7ff fd64 	bl	8000a70 <__aeabi_dcmpgt>
 8000fa8:	4603      	mov	r3, r0
 8000faa:	2b00      	cmp	r3, #0
 8000fac:	d00c      	beq.n	8000fc8 <main+0x130>
				  lowpass();
 8000fae:	f001 fa3f 	bl	8002430 <lowpass>
				  Diff_velo();
 8000fb2:	f001 fadd 	bl	8002570 <Diff_velo>
				  Kalman_filter();
 8000fb6:	f001 fb0f 	bl	80025d8 <Kalman_filter>
				  timeset3 = micros();
 8000fba:	f002 fc0b 	bl	80037d4 <micros>
 8000fbe:	4602      	mov	r2, r0
 8000fc0:	460b      	mov	r3, r1
 8000fc2:	4962      	ldr	r1, [pc, #392]	; (800114c <main+0x2b4>)
 8000fc4:	e9c1 2300 	strd	r2, r3, [r1]
			  }

			  if(setzero == 1){ // Condition for Set home
 8000fc8:	4b61      	ldr	r3, [pc, #388]	; (8001150 <main+0x2b8>)
 8000fca:	781b      	ldrb	r3, [r3, #0]
 8000fcc:	2b01      	cmp	r3, #1
 8000fce:	d101      	bne.n	8000fd4 <main+0x13c>
				  set_home();
 8000fd0:	f001 f866 	bl	80020a0 <set_home>
			  }

			  if(nDestination != 0){
 8000fd4:	4b5f      	ldr	r3, [pc, #380]	; (8001154 <main+0x2bc>)
 8000fd6:	781b      	ldrb	r3, [r3, #0]
 8000fd8:	2b00      	cmp	r3, #0
 8000fda:	d003      	beq.n	8000fe4 <main+0x14c>
				  update = 1;
 8000fdc:	4b5e      	ldr	r3, [pc, #376]	; (8001158 <main+0x2c0>)
 8000fde:	2201      	movs	r2, #1
 8000fe0:	701a      	strb	r2, [r3, #0]
 8000fe2:	e002      	b.n	8000fea <main+0x152>
			  }
			  else{
				  update = 0;
 8000fe4:	4b5c      	ldr	r3, [pc, #368]	; (8001158 <main+0x2c0>)
 8000fe6:	2200      	movs	r2, #0
 8000fe8:	701a      	strb	r2, [r3, #0]
			  }

			  if(update == 1){ //UART Update
 8000fea:	4b5b      	ldr	r3, [pc, #364]	; (8001158 <main+0x2c0>)
 8000fec:	781b      	ldrb	r3, [r3, #0]
 8000fee:	2b01      	cmp	r3, #1
 8000ff0:	d101      	bne.n	8000ff6 <main+0x15e>
				  MoveToStation();
 8000ff2:	f001 f8d5 	bl	80021a0 <MoveToStation>
			  }

			  if(blue == 1){ // Blue Button Switch
 8000ff6:	4b59      	ldr	r3, [pc, #356]	; (800115c <main+0x2c4>)
 8000ff8:	781b      	ldrb	r3, [r3, #0]
 8000ffa:	2b01      	cmp	r3, #1
 8000ffc:	f040 82b2 	bne.w	8001564 <main+0x6cc>
				  postotra = 3.14;
 8001000:	4b57      	ldr	r3, [pc, #348]	; (8001160 <main+0x2c8>)
 8001002:	4a58      	ldr	r2, [pc, #352]	; (8001164 <main+0x2cc>)
 8001004:	601a      	str	r2, [r3, #0]
				  limitOmega = 5;
 8001006:	4b58      	ldr	r3, [pc, #352]	; (8001168 <main+0x2d0>)
 8001008:	4a58      	ldr	r2, [pc, #352]	; (800116c <main+0x2d4>)
 800100a:	601a      	str	r2, [r3, #0]
				  direct = 1;
 800100c:	4b58      	ldr	r3, [pc, #352]	; (8001170 <main+0x2d8>)
 800100e:	2201      	movs	r2, #1
 8001010:	701a      	strb	r2, [r3, #0]
				  rad_before = current_rad;
 8001012:	4b58      	ldr	r3, [pc, #352]	; (8001174 <main+0x2dc>)
 8001014:	681b      	ldr	r3, [r3, #0]
 8001016:	4a58      	ldr	r2, [pc, #352]	; (8001178 <main+0x2e0>)
 8001018:	6013      	str	r3, [r2, #0]
				  State = Working;
 800101a:	4b49      	ldr	r3, [pc, #292]	; (8001140 <main+0x2a8>)
 800101c:	2201      	movs	r2, #1
 800101e:	701a      	strb	r2, [r3, #0]
			  }
			  break;
 8001020:	e2a0      	b.n	8001564 <main+0x6cc>

		  case Working:
			blue = 0;
 8001022:	4b4e      	ldr	r3, [pc, #312]	; (800115c <main+0x2c4>)
 8001024:	2200      	movs	r2, #0
 8001026:	701a      	strb	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_SET);
 8001028:	2201      	movs	r2, #1
 800102a:	f44f 7100 	mov.w	r1, #512	; 0x200
 800102e:	483f      	ldr	r0, [pc, #252]	; (800112c <main+0x294>)
 8001030:	f004 fc2c 	bl	800588c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 8001034:	2200      	movs	r2, #0
 8001036:	2180      	movs	r1, #128	; 0x80
 8001038:	4842      	ldr	r0, [pc, #264]	; (8001144 <main+0x2ac>)
 800103a:	f004 fc27 	bl	800588c <HAL_GPIO_WritePin>
			if (micros() - timeset > dt*1000000) { //1000 Hz
 800103e:	f002 fbc9 	bl	80037d4 <micros>
 8001042:	4b4e      	ldr	r3, [pc, #312]	; (800117c <main+0x2e4>)
 8001044:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001048:	1a84      	subs	r4, r0, r2
 800104a:	603c      	str	r4, [r7, #0]
 800104c:	eb61 0303 	sbc.w	r3, r1, r3
 8001050:	607b      	str	r3, [r7, #4]
 8001052:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001056:	f7ff fa45 	bl	80004e4 <__aeabi_ul2d>
 800105a:	a327      	add	r3, pc, #156	; (adr r3, 80010f8 <main+0x260>)
 800105c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001060:	f7ff fd06 	bl	8000a70 <__aeabi_dcmpgt>
 8001064:	4603      	mov	r3, r0
 8001066:	2b00      	cmp	r3, #0
 8001068:	f000 80be 	beq.w	80011e8 <main+0x350>
				lowpass();
 800106c:	f001 f9e0 	bl	8002430 <lowpass>
				Diff_velo();
 8001070:	f001 fa7e 	bl	8002570 <Diff_velo>
				Kalman_filter();
 8001074:	f001 fab0 	bl	80025d8 <Kalman_filter>
				if(postotra > 0.2){
 8001078:	4b39      	ldr	r3, [pc, #228]	; (8001160 <main+0x2c8>)
 800107a:	681b      	ldr	r3, [r3, #0]
 800107c:	4618      	mov	r0, r3
 800107e:	f7ff fa0f 	bl	80004a0 <__aeabi_f2d>
 8001082:	a31f      	add	r3, pc, #124	; (adr r3, 8001100 <main+0x268>)
 8001084:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001088:	f7ff fcf2 	bl	8000a70 <__aeabi_dcmpgt>
 800108c:	4603      	mov	r3, r0
 800108e:	2b00      	cmp	r3, #0
 8001090:	d010      	beq.n	80010b4 <main+0x21c>
					Trajectory(postotra,limitOmega);
 8001092:	4b33      	ldr	r3, [pc, #204]	; (8001160 <main+0x2c8>)
 8001094:	edd3 7a00 	vldr	s15, [r3]
 8001098:	4b33      	ldr	r3, [pc, #204]	; (8001168 <main+0x2d0>)
 800109a:	ed93 7a00 	vldr	s14, [r3]
 800109e:	eef0 0a47 	vmov.f32	s1, s14
 80010a2:	eeb0 0a67 	vmov.f32	s0, s15
 80010a6:	f001 fd6f 	bl	8002b88 <Trajectory>
					inverse_tran();
 80010aa:	f001 f93d 	bl	8002328 <inverse_tran>
					CascadeController();
 80010ae:	f000 fd07 	bl	8001ac0 <CascadeController>
 80010b2:	e076      	b.n	80011a2 <main+0x30a>
						error = tra_velo - velo_diff;
						prevError = error;
					}*/
				}
				else{
					if(tuaall < 0.1){ //short distant 5,10 degree
 80010b4:	4b32      	ldr	r3, [pc, #200]	; (8001180 <main+0x2e8>)
 80010b6:	681b      	ldr	r3, [r3, #0]
 80010b8:	4618      	mov	r0, r3
 80010ba:	f7ff f9f1 	bl	80004a0 <__aeabi_f2d>
 80010be:	a312      	add	r3, pc, #72	; (adr r3, 8001108 <main+0x270>)
 80010c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010c4:	f7ff fcb6 	bl	8000a34 <__aeabi_dcmplt>
 80010c8:	4603      	mov	r3, r0
 80010ca:	2b00      	cmp	r3, #0
 80010cc:	d00b      	beq.n	80010e6 <main+0x24e>
						if(direct == 1){
 80010ce:	4b28      	ldr	r3, [pc, #160]	; (8001170 <main+0x2d8>)
 80010d0:	781b      	ldrb	r3, [r3, #0]
 80010d2:	2b01      	cmp	r3, #1
 80010d4:	d103      	bne.n	80010de <main+0x246>
							PIDout = 2100;}
 80010d6:	4b2b      	ldr	r3, [pc, #172]	; (8001184 <main+0x2ec>)
 80010d8:	4a2b      	ldr	r2, [pc, #172]	; (8001188 <main+0x2f0>)
 80010da:	601a      	str	r2, [r3, #0]
 80010dc:	e05d      	b.n	800119a <main+0x302>
						else{
							PIDout = -2100;}
 80010de:	4b29      	ldr	r3, [pc, #164]	; (8001184 <main+0x2ec>)
 80010e0:	4a2a      	ldr	r2, [pc, #168]	; (800118c <main+0x2f4>)
 80010e2:	601a      	str	r2, [r3, #0]
 80010e4:	e059      	b.n	800119a <main+0x302>
					}
					else{
						if(direct == 1){
 80010e6:	4b22      	ldr	r3, [pc, #136]	; (8001170 <main+0x2d8>)
 80010e8:	781b      	ldrb	r3, [r3, #0]
 80010ea:	2b01      	cmp	r3, #1
 80010ec:	d152      	bne.n	8001194 <main+0x2fc>
							PIDout = 1300;}
 80010ee:	4b25      	ldr	r3, [pc, #148]	; (8001184 <main+0x2ec>)
 80010f0:	4a27      	ldr	r2, [pc, #156]	; (8001190 <main+0x2f8>)
 80010f2:	601a      	str	r2, [r3, #0]
 80010f4:	e051      	b.n	800119a <main+0x302>
 80010f6:	bf00      	nop
 80010f8:	00000000 	.word	0x00000000
 80010fc:	40c38800 	.word	0x40c38800
 8001100:	9999999a 	.word	0x9999999a
 8001104:	3fc99999 	.word	0x3fc99999
 8001108:	9999999a 	.word	0x9999999a
 800110c:	3fb99999 	.word	0x3fb99999
 8001110:	20000378 	.word	0x20000378
 8001114:	2000001e 	.word	0x2000001e
 8001118:	20000554 	.word	0x20000554
 800111c:	200003c0 	.word	0x200003c0
 8001120:	2000056e 	.word	0x2000056e
 8001124:	20000330 	.word	0x20000330
 8001128:	40020400 	.word	0x40020400
 800112c:	40020000 	.word	0x40020000
 8001130:	200007e0 	.word	0x200007e0
 8001134:	20000023 	.word	0x20000023
 8001138:	200007e8 	.word	0x200007e8
 800113c:	2000057a 	.word	0x2000057a
 8001140:	200005e7 	.word	0x200005e7
 8001144:	40020800 	.word	0x40020800
 8001148:	200005a8 	.word	0x200005a8
 800114c:	200007f0 	.word	0x200007f0
 8001150:	2000000c 	.word	0x2000000c
 8001154:	200004d0 	.word	0x200004d0
 8001158:	200005e4 	.word	0x200005e4
 800115c:	200005e5 	.word	0x200005e5
 8001160:	200005dc 	.word	0x200005dc
 8001164:	4048f5c3 	.word	0x4048f5c3
 8001168:	20000014 	.word	0x20000014
 800116c:	40a00000 	.word	0x40a00000
 8001170:	2000002c 	.word	0x2000002c
 8001174:	2000057c 	.word	0x2000057c
 8001178:	200005e0 	.word	0x200005e0
 800117c:	200007f8 	.word	0x200007f8
 8001180:	200005d4 	.word	0x200005d4
 8001184:	20000614 	.word	0x20000614
 8001188:	45034000 	.word	0x45034000
 800118c:	c5034000 	.word	0xc5034000
 8001190:	44a28000 	.word	0x44a28000
						else{
							PIDout = -1300;}
 8001194:	4bb0      	ldr	r3, [pc, #704]	; (8001458 <main+0x5c0>)
 8001196:	4ab1      	ldr	r2, [pc, #708]	; (800145c <main+0x5c4>)
 8001198:	601a      	str	r2, [r3, #0]
					}
					tf = 0;
 800119a:	4bb1      	ldr	r3, [pc, #708]	; (8001460 <main+0x5c8>)
 800119c:	f04f 0200 	mov.w	r2, #0
 80011a0:	601a      	str	r2, [r3, #0]
				}
				Drivemotor(PIDout);
 80011a2:	4bad      	ldr	r3, [pc, #692]	; (8001458 <main+0x5c0>)
 80011a4:	edd3 7a00 	vldr	s15, [r3]
 80011a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80011ac:	ee17 0a90 	vmov	r0, s15
 80011b0:	f001 ffbe 	bl	8003130 <Drivemotor>
				tuaall += dt;
 80011b4:	4bab      	ldr	r3, [pc, #684]	; (8001464 <main+0x5cc>)
 80011b6:	681b      	ldr	r3, [r3, #0]
 80011b8:	4618      	mov	r0, r3
 80011ba:	f7ff f971 	bl	80004a0 <__aeabi_f2d>
 80011be:	a39e      	add	r3, pc, #632	; (adr r3, 8001438 <main+0x5a0>)
 80011c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80011c4:	f7ff f80e 	bl	80001e4 <__adddf3>
 80011c8:	4602      	mov	r2, r0
 80011ca:	460b      	mov	r3, r1
 80011cc:	4610      	mov	r0, r2
 80011ce:	4619      	mov	r1, r3
 80011d0:	f7ff fc8e 	bl	8000af0 <__aeabi_d2f>
 80011d4:	4603      	mov	r3, r0
 80011d6:	4aa3      	ldr	r2, [pc, #652]	; (8001464 <main+0x5cc>)
 80011d8:	6013      	str	r3, [r2, #0]
				timeset = micros();
 80011da:	f002 fafb 	bl	80037d4 <micros>
 80011de:	4602      	mov	r2, r0
 80011e0:	460b      	mov	r3, r1
 80011e2:	49a1      	ldr	r1, [pc, #644]	; (8001468 <main+0x5d0>)
 80011e4:	e9c1 2300 	strd	r2, r3, [r1]
			}

			if(tuaall > tf && setzero == 0){ //End of working should do this condition
 80011e8:	4b9e      	ldr	r3, [pc, #632]	; (8001464 <main+0x5cc>)
 80011ea:	ed93 7a00 	vldr	s14, [r3]
 80011ee:	4b9c      	ldr	r3, [pc, #624]	; (8001460 <main+0x5c8>)
 80011f0:	edd3 7a00 	vldr	s15, [r3]
 80011f4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80011f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80011fc:	f340 8086 	ble.w	800130c <main+0x474>
 8001200:	4b9a      	ldr	r3, [pc, #616]	; (800146c <main+0x5d4>)
 8001202:	781b      	ldrb	r3, [r3, #0]
 8001204:	2b00      	cmp	r3, #0
 8001206:	f040 8081 	bne.w	800130c <main+0x474>
				if(direct == 1){
 800120a:	4b99      	ldr	r3, [pc, #612]	; (8001470 <main+0x5d8>)
 800120c:	781b      	ldrb	r3, [r3, #0]
 800120e:	2b01      	cmp	r3, #1
 8001210:	d122      	bne.n	8001258 <main+0x3c0>
					if(deg > Destination[n]-0.1){
 8001212:	4b98      	ldr	r3, [pc, #608]	; (8001474 <main+0x5dc>)
 8001214:	681b      	ldr	r3, [r3, #0]
 8001216:	4618      	mov	r0, r3
 8001218:	f7ff f942 	bl	80004a0 <__aeabi_f2d>
 800121c:	4604      	mov	r4, r0
 800121e:	460d      	mov	r5, r1
 8001220:	4b95      	ldr	r3, [pc, #596]	; (8001478 <main+0x5e0>)
 8001222:	781b      	ldrb	r3, [r3, #0]
 8001224:	461a      	mov	r2, r3
 8001226:	4b95      	ldr	r3, [pc, #596]	; (800147c <main+0x5e4>)
 8001228:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800122c:	4618      	mov	r0, r3
 800122e:	f7ff f925 	bl	800047c <__aeabi_i2d>
 8001232:	a383      	add	r3, pc, #524	; (adr r3, 8001440 <main+0x5a8>)
 8001234:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001238:	f7fe ffd2 	bl	80001e0 <__aeabi_dsub>
 800123c:	4602      	mov	r2, r0
 800123e:	460b      	mov	r3, r1
 8001240:	4620      	mov	r0, r4
 8001242:	4629      	mov	r1, r5
 8001244:	f7ff fc14 	bl	8000a70 <__aeabi_dcmpgt>
 8001248:	4603      	mov	r3, r0
 800124a:	2b00      	cmp	r3, #0
 800124c:	d026      	beq.n	800129c <main+0x404>
						finish = 1;
 800124e:	4b8c      	ldr	r3, [pc, #560]	; (8001480 <main+0x5e8>)
 8001250:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8001254:	601a      	str	r2, [r3, #0]
 8001256:	e021      	b.n	800129c <main+0x404>
					}
				}
				else
				{
					if(deg < Destination[n]+0.7){
 8001258:	4b86      	ldr	r3, [pc, #536]	; (8001474 <main+0x5dc>)
 800125a:	681b      	ldr	r3, [r3, #0]
 800125c:	4618      	mov	r0, r3
 800125e:	f7ff f91f 	bl	80004a0 <__aeabi_f2d>
 8001262:	4604      	mov	r4, r0
 8001264:	460d      	mov	r5, r1
 8001266:	4b84      	ldr	r3, [pc, #528]	; (8001478 <main+0x5e0>)
 8001268:	781b      	ldrb	r3, [r3, #0]
 800126a:	461a      	mov	r2, r3
 800126c:	4b83      	ldr	r3, [pc, #524]	; (800147c <main+0x5e4>)
 800126e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8001272:	4618      	mov	r0, r3
 8001274:	f7ff f902 	bl	800047c <__aeabi_i2d>
 8001278:	a373      	add	r3, pc, #460	; (adr r3, 8001448 <main+0x5b0>)
 800127a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800127e:	f7fe ffb1 	bl	80001e4 <__adddf3>
 8001282:	4602      	mov	r2, r0
 8001284:	460b      	mov	r3, r1
 8001286:	4620      	mov	r0, r4
 8001288:	4629      	mov	r1, r5
 800128a:	f7ff fbd3 	bl	8000a34 <__aeabi_dcmplt>
 800128e:	4603      	mov	r3, r0
 8001290:	2b00      	cmp	r3, #0
 8001292:	d003      	beq.n	800129c <main+0x404>
						finish = 1;
 8001294:	4b7a      	ldr	r3, [pc, #488]	; (8001480 <main+0x5e8>)
 8001296:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800129a:	601a      	str	r2, [r3, #0]
					}
				}
				if(finish == 1){
 800129c:	4b78      	ldr	r3, [pc, #480]	; (8001480 <main+0x5e8>)
 800129e:	edd3 7a00 	vldr	s15, [r3]
 80012a2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80012a6:	eef4 7a47 	vcmp.f32	s15, s14
 80012aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012ae:	d12d      	bne.n	800130c <main+0x474>
					n++;
 80012b0:	4b71      	ldr	r3, [pc, #452]	; (8001478 <main+0x5e0>)
 80012b2:	781b      	ldrb	r3, [r3, #0]
 80012b4:	3301      	adds	r3, #1
 80012b6:	b2da      	uxtb	r2, r3
 80012b8:	4b6f      	ldr	r3, [pc, #444]	; (8001478 <main+0x5e0>)
 80012ba:	701a      	strb	r2, [r3, #0]
					if(n < nDestination){
 80012bc:	4b6e      	ldr	r3, [pc, #440]	; (8001478 <main+0x5e0>)
 80012be:	781a      	ldrb	r2, [r3, #0]
 80012c0:	4b70      	ldr	r3, [pc, #448]	; (8001484 <main+0x5ec>)
 80012c2:	781b      	ldrb	r3, [r3, #0]
 80012c4:	429a      	cmp	r2, r3
 80012c6:	d203      	bcs.n	80012d0 <main+0x438>
						update = 1;}
 80012c8:	4b6f      	ldr	r3, [pc, #444]	; (8001488 <main+0x5f0>)
 80012ca:	2201      	movs	r2, #1
 80012cc:	701a      	strb	r2, [r3, #0]
 80012ce:	e017      	b.n	8001300 <main+0x468>
					else{
						update = 0;
 80012d0:	4b6d      	ldr	r3, [pc, #436]	; (8001488 <main+0x5f0>)
 80012d2:	2200      	movs	r2, #0
 80012d4:	701a      	strb	r2, [r3, #0]
						if(n == nStation || n == nDestination){
 80012d6:	4b68      	ldr	r3, [pc, #416]	; (8001478 <main+0x5e0>)
 80012d8:	781a      	ldrb	r2, [r3, #0]
 80012da:	4b6c      	ldr	r3, [pc, #432]	; (800148c <main+0x5f4>)
 80012dc:	781b      	ldrb	r3, [r3, #0]
 80012de:	429a      	cmp	r2, r3
 80012e0:	d005      	beq.n	80012ee <main+0x456>
 80012e2:	4b65      	ldr	r3, [pc, #404]	; (8001478 <main+0x5e0>)
 80012e4:	781a      	ldrb	r2, [r3, #0]
 80012e6:	4b67      	ldr	r3, [pc, #412]	; (8001484 <main+0x5ec>)
 80012e8:	781b      	ldrb	r3, [r3, #0]
 80012ea:	429a      	cmp	r2, r3
 80012ec:	d102      	bne.n	80012f4 <main+0x45c>
							Reached = 1;
 80012ee:	4b68      	ldr	r3, [pc, #416]	; (8001490 <main+0x5f8>)
 80012f0:	2201      	movs	r2, #1
 80012f2:	701a      	strb	r2, [r3, #0]
						}
						nDestination = 0;
 80012f4:	4b63      	ldr	r3, [pc, #396]	; (8001484 <main+0x5ec>)
 80012f6:	2200      	movs	r2, #0
 80012f8:	701a      	strb	r2, [r3, #0]
						n = 0;
 80012fa:	4b5f      	ldr	r3, [pc, #380]	; (8001478 <main+0x5e0>)
 80012fc:	2200      	movs	r2, #0
 80012fe:	701a      	strb	r2, [r3, #0]
					}
					State = Laser;
 8001300:	4b64      	ldr	r3, [pc, #400]	; (8001494 <main+0x5fc>)
 8001302:	2202      	movs	r2, #2
 8001304:	701a      	strb	r2, [r3, #0]
					NFwriteFlag = 1;
 8001306:	4b64      	ldr	r3, [pc, #400]	; (8001498 <main+0x600>)
 8001308:	2201      	movs	r2, #1
 800130a:	701a      	strb	r2, [r3, #0]
				}
			}

			if(tuaall > 15 && tuaall > tf){ //Condition when moving error
 800130c:	4b55      	ldr	r3, [pc, #340]	; (8001464 <main+0x5cc>)
 800130e:	edd3 7a00 	vldr	s15, [r3]
 8001312:	eeb2 7a0e 	vmov.f32	s14, #46	; 0x41700000  15.0
 8001316:	eef4 7ac7 	vcmpe.f32	s15, s14
 800131a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800131e:	dd38      	ble.n	8001392 <main+0x4fa>
 8001320:	4b50      	ldr	r3, [pc, #320]	; (8001464 <main+0x5cc>)
 8001322:	ed93 7a00 	vldr	s14, [r3]
 8001326:	4b4e      	ldr	r3, [pc, #312]	; (8001460 <main+0x5c8>)
 8001328:	edd3 7a00 	vldr	s15, [r3]
 800132c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001330:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001334:	dd2d      	ble.n	8001392 <main+0x4fa>
				n++;
 8001336:	4b50      	ldr	r3, [pc, #320]	; (8001478 <main+0x5e0>)
 8001338:	781b      	ldrb	r3, [r3, #0]
 800133a:	3301      	adds	r3, #1
 800133c:	b2da      	uxtb	r2, r3
 800133e:	4b4e      	ldr	r3, [pc, #312]	; (8001478 <main+0x5e0>)
 8001340:	701a      	strb	r2, [r3, #0]
				if(n < nDestination){
 8001342:	4b4d      	ldr	r3, [pc, #308]	; (8001478 <main+0x5e0>)
 8001344:	781a      	ldrb	r2, [r3, #0]
 8001346:	4b4f      	ldr	r3, [pc, #316]	; (8001484 <main+0x5ec>)
 8001348:	781b      	ldrb	r3, [r3, #0]
 800134a:	429a      	cmp	r2, r3
 800134c:	d203      	bcs.n	8001356 <main+0x4be>
					update = 1;}
 800134e:	4b4e      	ldr	r3, [pc, #312]	; (8001488 <main+0x5f0>)
 8001350:	2201      	movs	r2, #1
 8001352:	701a      	strb	r2, [r3, #0]
 8001354:	e017      	b.n	8001386 <main+0x4ee>
				else{
					update = 0;
 8001356:	4b4c      	ldr	r3, [pc, #304]	; (8001488 <main+0x5f0>)
 8001358:	2200      	movs	r2, #0
 800135a:	701a      	strb	r2, [r3, #0]
					if(n == nStation || n == nDestination){
 800135c:	4b46      	ldr	r3, [pc, #280]	; (8001478 <main+0x5e0>)
 800135e:	781a      	ldrb	r2, [r3, #0]
 8001360:	4b4a      	ldr	r3, [pc, #296]	; (800148c <main+0x5f4>)
 8001362:	781b      	ldrb	r3, [r3, #0]
 8001364:	429a      	cmp	r2, r3
 8001366:	d005      	beq.n	8001374 <main+0x4dc>
 8001368:	4b43      	ldr	r3, [pc, #268]	; (8001478 <main+0x5e0>)
 800136a:	781a      	ldrb	r2, [r3, #0]
 800136c:	4b45      	ldr	r3, [pc, #276]	; (8001484 <main+0x5ec>)
 800136e:	781b      	ldrb	r3, [r3, #0]
 8001370:	429a      	cmp	r2, r3
 8001372:	d102      	bne.n	800137a <main+0x4e2>
						Reached = 1;
 8001374:	4b46      	ldr	r3, [pc, #280]	; (8001490 <main+0x5f8>)
 8001376:	2201      	movs	r2, #1
 8001378:	701a      	strb	r2, [r3, #0]
					}
					nDestination = 0;
 800137a:	4b42      	ldr	r3, [pc, #264]	; (8001484 <main+0x5ec>)
 800137c:	2200      	movs	r2, #0
 800137e:	701a      	strb	r2, [r3, #0]
					n = 0;
 8001380:	4b3d      	ldr	r3, [pc, #244]	; (8001478 <main+0x5e0>)
 8001382:	2200      	movs	r2, #0
 8001384:	701a      	strb	r2, [r3, #0]
				}
				State = Laser;
 8001386:	4b43      	ldr	r3, [pc, #268]	; (8001494 <main+0x5fc>)
 8001388:	2202      	movs	r2, #2
 800138a:	701a      	strb	r2, [r3, #0]
				NFwriteFlag = 1;
 800138c:	4b42      	ldr	r3, [pc, #264]	; (8001498 <main+0x600>)
 800138e:	2201      	movs	r2, #1
 8001390:	701a      	strb	r2, [r3, #0]
			}

			if(velo_diff > topOmega){
 8001392:	4b42      	ldr	r3, [pc, #264]	; (800149c <main+0x604>)
 8001394:	ed93 7a00 	vldr	s14, [r3]
 8001398:	4b41      	ldr	r3, [pc, #260]	; (80014a0 <main+0x608>)
 800139a:	edd3 7a00 	vldr	s15, [r3]
 800139e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80013a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80013a6:	dd12      	ble.n	80013ce <main+0x536>
				topOmega = velo_diff*9.5493;
 80013a8:	4b3c      	ldr	r3, [pc, #240]	; (800149c <main+0x604>)
 80013aa:	681b      	ldr	r3, [r3, #0]
 80013ac:	4618      	mov	r0, r3
 80013ae:	f7ff f877 	bl	80004a0 <__aeabi_f2d>
 80013b2:	a327      	add	r3, pc, #156	; (adr r3, 8001450 <main+0x5b8>)
 80013b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013b8:	f7ff f8ca 	bl	8000550 <__aeabi_dmul>
 80013bc:	4602      	mov	r2, r0
 80013be:	460b      	mov	r3, r1
 80013c0:	4610      	mov	r0, r2
 80013c2:	4619      	mov	r1, r3
 80013c4:	f7ff fb94 	bl	8000af0 <__aeabi_d2f>
 80013c8:	4603      	mov	r3, r0
 80013ca:	4a35      	ldr	r2, [pc, #212]	; (80014a0 <main+0x608>)
 80013cc:	6013      	str	r3, [r2, #0]
			}

			if(stop == 1){
 80013ce:	4b35      	ldr	r3, [pc, #212]	; (80014a4 <main+0x60c>)
 80013d0:	781b      	ldrb	r3, [r3, #0]
 80013d2:	2b01      	cmp	r3, #1
 80013d4:	f040 80c8 	bne.w	8001568 <main+0x6d0>
				State = Emerstop;
 80013d8:	4b2e      	ldr	r3, [pc, #184]	; (8001494 <main+0x5fc>)
 80013da:	2203      	movs	r2, #3
 80013dc:	701a      	strb	r2, [r3, #0]
				Drivemotor(0);
 80013de:	2000      	movs	r0, #0
 80013e0:	f001 fea6 	bl	8003130 <Drivemotor>
			}
			break;
 80013e4:	e0c0      	b.n	8001568 <main+0x6d0>

		  case Emerstop:
			HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_RESET);
 80013e6:	2200      	movs	r2, #0
 80013e8:	f44f 7100 	mov.w	r1, #512	; 0x200
 80013ec:	482e      	ldr	r0, [pc, #184]	; (80014a8 <main+0x610>)
 80013ee:	f004 fa4d 	bl	800588c <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 80013f2:	2200      	movs	r2, #0
 80013f4:	2180      	movs	r1, #128	; 0x80
 80013f6:	482d      	ldr	r0, [pc, #180]	; (80014ac <main+0x614>)
 80013f8:	f004 fa48 	bl	800588c <HAL_GPIO_WritePin>
			if(B1State2[1] == GPIO_PIN_SET && B1State2[0] == GPIO_PIN_RESET){
 80013fc:	4b2c      	ldr	r3, [pc, #176]	; (80014b0 <main+0x618>)
 80013fe:	785b      	ldrb	r3, [r3, #1]
 8001400:	2b01      	cmp	r3, #1
 8001402:	d111      	bne.n	8001428 <main+0x590>
 8001404:	4b2a      	ldr	r3, [pc, #168]	; (80014b0 <main+0x618>)
 8001406:	781b      	ldrb	r3, [r3, #0]
 8001408:	2b00      	cmp	r3, #0
 800140a:	d10d      	bne.n	8001428 <main+0x590>
				reset();
 800140c:	f000 fe2a 	bl	8002064 <reset>
				nDestination = 0;
 8001410:	4b1c      	ldr	r3, [pc, #112]	; (8001484 <main+0x5ec>)
 8001412:	2200      	movs	r2, #0
 8001414:	701a      	strb	r2, [r3, #0]
				n = 0;
 8001416:	4b18      	ldr	r3, [pc, #96]	; (8001478 <main+0x5e0>)
 8001418:	2200      	movs	r2, #0
 800141a:	701a      	strb	r2, [r3, #0]
				State = Idle;
 800141c:	4b1d      	ldr	r3, [pc, #116]	; (8001494 <main+0x5fc>)
 800141e:	2200      	movs	r2, #0
 8001420:	701a      	strb	r2, [r3, #0]
				setzero = 1;
 8001422:	4b12      	ldr	r3, [pc, #72]	; (800146c <main+0x5d4>)
 8001424:	2201      	movs	r2, #1
 8001426:	701a      	strb	r2, [r3, #0]
			}
			B1State2[1] = B1State2[0];
 8001428:	4b21      	ldr	r3, [pc, #132]	; (80014b0 <main+0x618>)
 800142a:	781a      	ldrb	r2, [r3, #0]
 800142c:	4b20      	ldr	r3, [pc, #128]	; (80014b0 <main+0x618>)
 800142e:	705a      	strb	r2, [r3, #1]
			break;
 8001430:	e09f      	b.n	8001572 <main+0x6da>
 8001432:	bf00      	nop
 8001434:	f3af 8000 	nop.w
 8001438:	47ae147b 	.word	0x47ae147b
 800143c:	3f847ae1 	.word	0x3f847ae1
 8001440:	9999999a 	.word	0x9999999a
 8001444:	3fb99999 	.word	0x3fb99999
 8001448:	66666666 	.word	0x66666666
 800144c:	3fe66666 	.word	0x3fe66666
 8001450:	d97f62b7 	.word	0xd97f62b7
 8001454:	4023193d 	.word	0x4023193d
 8001458:	20000614 	.word	0x20000614
 800145c:	c4a28000 	.word	0xc4a28000
 8001460:	200005cc 	.word	0x200005cc
 8001464:	200005d4 	.word	0x200005d4
 8001468:	200007f8 	.word	0x200007f8
 800146c:	2000000c 	.word	0x2000000c
 8001470:	2000002c 	.word	0x2000002c
 8001474:	20000584 	.word	0x20000584
 8001478:	20000548 	.word	0x20000548
 800147c:	200004d4 	.word	0x200004d4
 8001480:	200005f0 	.word	0x200005f0
 8001484:	200004d0 	.word	0x200004d0
 8001488:	200005e4 	.word	0x200005e4
 800148c:	20000538 	.word	0x20000538
 8001490:	2000053b 	.word	0x2000053b
 8001494:	200005e7 	.word	0x200005e7
 8001498:	20000022 	.word	0x20000022
 800149c:	200007b8 	.word	0x200007b8
 80014a0:	20000544 	.word	0x20000544
 80014a4:	200005a8 	.word	0x200005a8
 80014a8:	40020000 	.word	0x40020000
 80014ac:	40020800 	.word	0x40020800
 80014b0:	200007e0 	.word	0x200007e0

		  case Laser:
			  if(setzero == 1){
 80014b4:	4b33      	ldr	r3, [pc, #204]	; (8001584 <main+0x6ec>)
 80014b6:	781b      	ldrb	r3, [r3, #0]
 80014b8:	2b01      	cmp	r3, #1
 80014ba:	d105      	bne.n	80014c8 <main+0x630>
				  State= Idle;
 80014bc:	4b32      	ldr	r3, [pc, #200]	; (8001588 <main+0x6f0>)
 80014be:	2200      	movs	r2, #0
 80014c0:	701a      	strb	r2, [r3, #0]
				  reset();
 80014c2:	f000 fdcf 	bl	8002064 <reset>
				  break;
 80014c6:	e054      	b.n	8001572 <main+0x6da>
			  }
			  reset();
 80014c8:	f000 fdcc 	bl	8002064 <reset>
			  //State= Idle;
			  switch(stateI2C){
 80014cc:	4b2f      	ldr	r3, [pc, #188]	; (800158c <main+0x6f4>)
 80014ce:	781b      	ldrb	r3, [r3, #0]
 80014d0:	2b00      	cmp	r3, #0
 80014d2:	d002      	beq.n	80014da <main+0x642>
 80014d4:	2b01      	cmp	r3, #1
 80014d6:	d038      	beq.n	800154a <main+0x6b2>
 80014d8:	e04b      	b.n	8001572 <main+0x6da>
			  // Reached state
			  case 0:
				  switch(NFenable){
 80014da:	4b2d      	ldr	r3, [pc, #180]	; (8001590 <main+0x6f8>)
 80014dc:	781b      	ldrb	r3, [r3, #0]
 80014de:	2b00      	cmp	r3, #0
 80014e0:	d02a      	beq.n	8001538 <main+0x6a0>
 80014e2:	2b01      	cmp	r3, #1
 80014e4:	d142      	bne.n	800156c <main+0x6d4>
				  case 1:
					  NFgetstate();
 80014e6:	f001 fe99 	bl	800321c <NFgetstate>
					  if( NFwriteFlag && NFstate == 0x78 && (hi2c1.State == HAL_I2C_STATE_READY) ){
 80014ea:	4b2a      	ldr	r3, [pc, #168]	; (8001594 <main+0x6fc>)
 80014ec:	781b      	ldrb	r3, [r3, #0]
 80014ee:	2b00      	cmp	r3, #0
 80014f0:	d00f      	beq.n	8001512 <main+0x67a>
 80014f2:	4b29      	ldr	r3, [pc, #164]	; (8001598 <main+0x700>)
 80014f4:	781b      	ldrb	r3, [r3, #0]
 80014f6:	2b78      	cmp	r3, #120	; 0x78
 80014f8:	d10b      	bne.n	8001512 <main+0x67a>
 80014fa:	4b28      	ldr	r3, [pc, #160]	; (800159c <main+0x704>)
 80014fc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001500:	b2db      	uxtb	r3, r3
 8001502:	2b20      	cmp	r3, #32
 8001504:	d105      	bne.n	8001512 <main+0x67a>
						  NFcontacton();
 8001506:	f001 fe73 	bl	80031f0 <NFcontacton>
						  NFwriteFlag = 0;		// Reached var
 800150a:	4b22      	ldr	r3, [pc, #136]	; (8001594 <main+0x6fc>)
 800150c:	2200      	movs	r2, #0
 800150e:	701a      	strb	r2, [r3, #0]
					  }else if(NFstate == 0x12 || NFstate == 0x34 || NFstate == 0x56){
						  stateI2C = 1;
						  NFstate = 0;
					  }
					  break;
 8001510:	e019      	b.n	8001546 <main+0x6ae>
					  }else if(NFstate == 0x12 || NFstate == 0x34 || NFstate == 0x56){
 8001512:	4b21      	ldr	r3, [pc, #132]	; (8001598 <main+0x700>)
 8001514:	781b      	ldrb	r3, [r3, #0]
 8001516:	2b12      	cmp	r3, #18
 8001518:	d007      	beq.n	800152a <main+0x692>
 800151a:	4b1f      	ldr	r3, [pc, #124]	; (8001598 <main+0x700>)
 800151c:	781b      	ldrb	r3, [r3, #0]
 800151e:	2b34      	cmp	r3, #52	; 0x34
 8001520:	d003      	beq.n	800152a <main+0x692>
 8001522:	4b1d      	ldr	r3, [pc, #116]	; (8001598 <main+0x700>)
 8001524:	781b      	ldrb	r3, [r3, #0]
 8001526:	2b56      	cmp	r3, #86	; 0x56
 8001528:	d10d      	bne.n	8001546 <main+0x6ae>
						  stateI2C = 1;
 800152a:	4b18      	ldr	r3, [pc, #96]	; (800158c <main+0x6f4>)
 800152c:	2201      	movs	r2, #1
 800152e:	701a      	strb	r2, [r3, #0]
						  NFstate = 0;
 8001530:	4b19      	ldr	r3, [pc, #100]	; (8001598 <main+0x700>)
 8001532:	2200      	movs	r2, #0
 8001534:	701a      	strb	r2, [r3, #0]
					  break;
 8001536:	e006      	b.n	8001546 <main+0x6ae>
				  case 0:
					  NFwriteFlag = 0;
 8001538:	4b16      	ldr	r3, [pc, #88]	; (8001594 <main+0x6fc>)
 800153a:	2200      	movs	r2, #0
 800153c:	701a      	strb	r2, [r3, #0]
					  State = Idle;
 800153e:	4b12      	ldr	r3, [pc, #72]	; (8001588 <main+0x6f0>)
 8001540:	2200      	movs	r2, #0
 8001542:	701a      	strb	r2, [r3, #0]
					  // state = start;
					  break;
 8001544:	e000      	b.n	8001548 <main+0x6b0>
					  break;
 8001546:	bf00      	nop
				  }
				  break;
 8001548:	e010      	b.n	800156c <main+0x6d4>
			  case 1:
				  NFgetstate();
 800154a:	f001 fe67 	bl	800321c <NFgetstate>
				  if(NFstate == 0x78){
 800154e:	4b12      	ldr	r3, [pc, #72]	; (8001598 <main+0x700>)
 8001550:	781b      	ldrb	r3, [r3, #0]
 8001552:	2b78      	cmp	r3, #120	; 0x78
 8001554:	d10c      	bne.n	8001570 <main+0x6d8>
					  stateI2C = 0;
 8001556:	4b0d      	ldr	r3, [pc, #52]	; (800158c <main+0x6f4>)
 8001558:	2200      	movs	r2, #0
 800155a:	701a      	strb	r2, [r3, #0]
					  State = Idle;
 800155c:	4b0a      	ldr	r3, [pc, #40]	; (8001588 <main+0x6f0>)
 800155e:	2200      	movs	r2, #0
 8001560:	701a      	strb	r2, [r3, #0]
				  }
				  break;
 8001562:	e005      	b.n	8001570 <main+0x6d8>
			  break;
 8001564:	bf00      	nop
 8001566:	e004      	b.n	8001572 <main+0x6da>
			break;
 8001568:	bf00      	nop
 800156a:	e002      	b.n	8001572 <main+0x6da>
				  break;
 800156c:	bf00      	nop
 800156e:	e000      	b.n	8001572 <main+0x6da>
				  break;
 8001570:	bf00      	nop
			  }
	  }

	  responseUART();
 8001572:	f002 fa95 	bl	8003aa0 <responseUART>
	  rad = current_rad_wrap;
 8001576:	4b0a      	ldr	r3, [pc, #40]	; (80015a0 <main+0x708>)
 8001578:	681b      	ldr	r3, [r3, #0]
 800157a:	4a0a      	ldr	r2, [pc, #40]	; (80015a4 <main+0x70c>)
 800157c:	6013      	str	r3, [r2, #0]

	  // Keep this work flow at the bottom of while loop. bo Reached will be reset here.
	  destinationACK();
 800157e:	f002 fe57 	bl	8004230 <destinationACK>
  {
 8001582:	e4c0      	b.n	8000f06 <main+0x6e>
 8001584:	2000000c 	.word	0x2000000c
 8001588:	200005e7 	.word	0x200005e7
 800158c:	20000572 	.word	0x20000572
 8001590:	20000021 	.word	0x20000021
 8001594:	20000022 	.word	0x20000022
 8001598:	2000056e 	.word	0x2000056e
 800159c:	200001c4 	.word	0x200001c4
 80015a0:	20000580 	.word	0x20000580
 80015a4:	20000540 	.word	0x20000540

080015a8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80015a8:	b580      	push	{r7, lr}
 80015aa:	b094      	sub	sp, #80	; 0x50
 80015ac:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80015ae:	f107 0320 	add.w	r3, r7, #32
 80015b2:	2230      	movs	r2, #48	; 0x30
 80015b4:	2100      	movs	r1, #0
 80015b6:	4618      	mov	r0, r3
 80015b8:	f00a fa60 	bl	800ba7c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80015bc:	f107 030c 	add.w	r3, r7, #12
 80015c0:	2200      	movs	r2, #0
 80015c2:	601a      	str	r2, [r3, #0]
 80015c4:	605a      	str	r2, [r3, #4]
 80015c6:	609a      	str	r2, [r3, #8]
 80015c8:	60da      	str	r2, [r3, #12]
 80015ca:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80015cc:	2300      	movs	r3, #0
 80015ce:	60bb      	str	r3, [r7, #8]
 80015d0:	4b27      	ldr	r3, [pc, #156]	; (8001670 <SystemClock_Config+0xc8>)
 80015d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015d4:	4a26      	ldr	r2, [pc, #152]	; (8001670 <SystemClock_Config+0xc8>)
 80015d6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80015da:	6413      	str	r3, [r2, #64]	; 0x40
 80015dc:	4b24      	ldr	r3, [pc, #144]	; (8001670 <SystemClock_Config+0xc8>)
 80015de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015e0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80015e4:	60bb      	str	r3, [r7, #8]
 80015e6:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80015e8:	2300      	movs	r3, #0
 80015ea:	607b      	str	r3, [r7, #4]
 80015ec:	4b21      	ldr	r3, [pc, #132]	; (8001674 <SystemClock_Config+0xcc>)
 80015ee:	681b      	ldr	r3, [r3, #0]
 80015f0:	4a20      	ldr	r2, [pc, #128]	; (8001674 <SystemClock_Config+0xcc>)
 80015f2:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80015f6:	6013      	str	r3, [r2, #0]
 80015f8:	4b1e      	ldr	r3, [pc, #120]	; (8001674 <SystemClock_Config+0xcc>)
 80015fa:	681b      	ldr	r3, [r3, #0]
 80015fc:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001600:	607b      	str	r3, [r7, #4]
 8001602:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001604:	2302      	movs	r3, #2
 8001606:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001608:	2301      	movs	r3, #1
 800160a:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800160c:	2310      	movs	r3, #16
 800160e:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001610:	2302      	movs	r3, #2
 8001612:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001614:	2300      	movs	r3, #0
 8001616:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001618:	2308      	movs	r3, #8
 800161a:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 100;
 800161c:	2364      	movs	r3, #100	; 0x64
 800161e:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001620:	2302      	movs	r3, #2
 8001622:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001624:	2304      	movs	r3, #4
 8001626:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001628:	f107 0320 	add.w	r3, r7, #32
 800162c:	4618      	mov	r0, r3
 800162e:	f006 fdcf 	bl	80081d0 <HAL_RCC_OscConfig>
 8001632:	4603      	mov	r3, r0
 8001634:	2b00      	cmp	r3, #0
 8001636:	d001      	beq.n	800163c <SystemClock_Config+0x94>
  {
    Error_Handler();
 8001638:	f002 feb2 	bl	80043a0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800163c:	230f      	movs	r3, #15
 800163e:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001640:	2302      	movs	r3, #2
 8001642:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001644:	2300      	movs	r3, #0
 8001646:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001648:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800164c:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800164e:	2300      	movs	r3, #0
 8001650:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8001652:	f107 030c 	add.w	r3, r7, #12
 8001656:	2103      	movs	r1, #3
 8001658:	4618      	mov	r0, r3
 800165a:	f007 f831 	bl	80086c0 <HAL_RCC_ClockConfig>
 800165e:	4603      	mov	r3, r0
 8001660:	2b00      	cmp	r3, #0
 8001662:	d001      	beq.n	8001668 <SystemClock_Config+0xc0>
  {
    Error_Handler();
 8001664:	f002 fe9c 	bl	80043a0 <Error_Handler>
  }
}
 8001668:	bf00      	nop
 800166a:	3750      	adds	r7, #80	; 0x50
 800166c:	46bd      	mov	sp, r7
 800166e:	bd80      	pop	{r7, pc}
 8001670:	40023800 	.word	0x40023800
 8001674:	40007000 	.word	0x40007000

08001678 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001678:	b580      	push	{r7, lr}
 800167a:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 800167c:	4b12      	ldr	r3, [pc, #72]	; (80016c8 <MX_I2C1_Init+0x50>)
 800167e:	4a13      	ldr	r2, [pc, #76]	; (80016cc <MX_I2C1_Init+0x54>)
 8001680:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 8001682:	4b11      	ldr	r3, [pc, #68]	; (80016c8 <MX_I2C1_Init+0x50>)
 8001684:	4a12      	ldr	r2, [pc, #72]	; (80016d0 <MX_I2C1_Init+0x58>)
 8001686:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001688:	4b0f      	ldr	r3, [pc, #60]	; (80016c8 <MX_I2C1_Init+0x50>)
 800168a:	2200      	movs	r2, #0
 800168c:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 800168e:	4b0e      	ldr	r3, [pc, #56]	; (80016c8 <MX_I2C1_Init+0x50>)
 8001690:	2200      	movs	r2, #0
 8001692:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001694:	4b0c      	ldr	r3, [pc, #48]	; (80016c8 <MX_I2C1_Init+0x50>)
 8001696:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 800169a:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800169c:	4b0a      	ldr	r3, [pc, #40]	; (80016c8 <MX_I2C1_Init+0x50>)
 800169e:	2200      	movs	r2, #0
 80016a0:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 80016a2:	4b09      	ldr	r3, [pc, #36]	; (80016c8 <MX_I2C1_Init+0x50>)
 80016a4:	2200      	movs	r2, #0
 80016a6:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80016a8:	4b07      	ldr	r3, [pc, #28]	; (80016c8 <MX_I2C1_Init+0x50>)
 80016aa:	2200      	movs	r2, #0
 80016ac:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80016ae:	4b06      	ldr	r3, [pc, #24]	; (80016c8 <MX_I2C1_Init+0x50>)
 80016b0:	2200      	movs	r2, #0
 80016b2:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80016b4:	4804      	ldr	r0, [pc, #16]	; (80016c8 <MX_I2C1_Init+0x50>)
 80016b6:	f004 f91b 	bl	80058f0 <HAL_I2C_Init>
 80016ba:	4603      	mov	r3, r0
 80016bc:	2b00      	cmp	r3, #0
 80016be:	d001      	beq.n	80016c4 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 80016c0:	f002 fe6e 	bl	80043a0 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 80016c4:	bf00      	nop
 80016c6:	bd80      	pop	{r7, pc}
 80016c8:	200001c4 	.word	0x200001c4
 80016cc:	40005400 	.word	0x40005400
 80016d0:	00061a80 	.word	0x00061a80

080016d4 <MX_SPI3_Init>:
  * @brief SPI3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI3_Init(void)
{
 80016d4:	b580      	push	{r7, lr}
 80016d6:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  /* SPI3 parameter configuration*/
  hspi3.Instance = SPI3;
 80016d8:	4b17      	ldr	r3, [pc, #92]	; (8001738 <MX_SPI3_Init+0x64>)
 80016da:	4a18      	ldr	r2, [pc, #96]	; (800173c <MX_SPI3_Init+0x68>)
 80016dc:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 80016de:	4b16      	ldr	r3, [pc, #88]	; (8001738 <MX_SPI3_Init+0x64>)
 80016e0:	f44f 7282 	mov.w	r2, #260	; 0x104
 80016e4:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 80016e6:	4b14      	ldr	r3, [pc, #80]	; (8001738 <MX_SPI3_Init+0x64>)
 80016e8:	2200      	movs	r2, #0
 80016ea:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 80016ec:	4b12      	ldr	r3, [pc, #72]	; (8001738 <MX_SPI3_Init+0x64>)
 80016ee:	2200      	movs	r2, #0
 80016f0:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 80016f2:	4b11      	ldr	r3, [pc, #68]	; (8001738 <MX_SPI3_Init+0x64>)
 80016f4:	2200      	movs	r2, #0
 80016f6:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 80016f8:	4b0f      	ldr	r3, [pc, #60]	; (8001738 <MX_SPI3_Init+0x64>)
 80016fa:	2200      	movs	r2, #0
 80016fc:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 80016fe:	4b0e      	ldr	r3, [pc, #56]	; (8001738 <MX_SPI3_Init+0x64>)
 8001700:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001704:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 8001706:	4b0c      	ldr	r3, [pc, #48]	; (8001738 <MX_SPI3_Init+0x64>)
 8001708:	2220      	movs	r2, #32
 800170a:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800170c:	4b0a      	ldr	r3, [pc, #40]	; (8001738 <MX_SPI3_Init+0x64>)
 800170e:	2200      	movs	r2, #0
 8001710:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 8001712:	4b09      	ldr	r3, [pc, #36]	; (8001738 <MX_SPI3_Init+0x64>)
 8001714:	2200      	movs	r2, #0
 8001716:	625a      	str	r2, [r3, #36]	; 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001718:	4b07      	ldr	r3, [pc, #28]	; (8001738 <MX_SPI3_Init+0x64>)
 800171a:	2200      	movs	r2, #0
 800171c:	629a      	str	r2, [r3, #40]	; 0x28
  hspi3.Init.CRCPolynomial = 10;
 800171e:	4b06      	ldr	r3, [pc, #24]	; (8001738 <MX_SPI3_Init+0x64>)
 8001720:	220a      	movs	r2, #10
 8001722:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 8001724:	4804      	ldr	r0, [pc, #16]	; (8001738 <MX_SPI3_Init+0x64>)
 8001726:	f007 f9eb 	bl	8008b00 <HAL_SPI_Init>
 800172a:	4603      	mov	r3, r0
 800172c:	2b00      	cmp	r3, #0
 800172e:	d001      	beq.n	8001734 <MX_SPI3_Init+0x60>
  {
    Error_Handler();
 8001730:	f002 fe36 	bl	80043a0 <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 8001734:	bf00      	nop
 8001736:	bd80      	pop	{r7, pc}
 8001738:	20000218 	.word	0x20000218
 800173c:	40003c00 	.word	0x40003c00

08001740 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001740:	b580      	push	{r7, lr}
 8001742:	b08e      	sub	sp, #56	; 0x38
 8001744:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001746:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800174a:	2200      	movs	r2, #0
 800174c:	601a      	str	r2, [r3, #0]
 800174e:	605a      	str	r2, [r3, #4]
 8001750:	609a      	str	r2, [r3, #8]
 8001752:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001754:	f107 0320 	add.w	r3, r7, #32
 8001758:	2200      	movs	r2, #0
 800175a:	601a      	str	r2, [r3, #0]
 800175c:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800175e:	1d3b      	adds	r3, r7, #4
 8001760:	2200      	movs	r2, #0
 8001762:	601a      	str	r2, [r3, #0]
 8001764:	605a      	str	r2, [r3, #4]
 8001766:	609a      	str	r2, [r3, #8]
 8001768:	60da      	str	r2, [r3, #12]
 800176a:	611a      	str	r2, [r3, #16]
 800176c:	615a      	str	r2, [r3, #20]
 800176e:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001770:	4b32      	ldr	r3, [pc, #200]	; (800183c <MX_TIM2_Init+0xfc>)
 8001772:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001776:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 99;
 8001778:	4b30      	ldr	r3, [pc, #192]	; (800183c <MX_TIM2_Init+0xfc>)
 800177a:	2263      	movs	r2, #99	; 0x63
 800177c:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800177e:	4b2f      	ldr	r3, [pc, #188]	; (800183c <MX_TIM2_Init+0xfc>)
 8001780:	2200      	movs	r2, #0
 8001782:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9999;
 8001784:	4b2d      	ldr	r3, [pc, #180]	; (800183c <MX_TIM2_Init+0xfc>)
 8001786:	f242 720f 	movw	r2, #9999	; 0x270f
 800178a:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800178c:	4b2b      	ldr	r3, [pc, #172]	; (800183c <MX_TIM2_Init+0xfc>)
 800178e:	2200      	movs	r2, #0
 8001790:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001792:	4b2a      	ldr	r3, [pc, #168]	; (800183c <MX_TIM2_Init+0xfc>)
 8001794:	2200      	movs	r2, #0
 8001796:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001798:	4828      	ldr	r0, [pc, #160]	; (800183c <MX_TIM2_Init+0xfc>)
 800179a:	f007 fec1 	bl	8009520 <HAL_TIM_Base_Init>
 800179e:	4603      	mov	r3, r0
 80017a0:	2b00      	cmp	r3, #0
 80017a2:	d001      	beq.n	80017a8 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 80017a4:	f002 fdfc 	bl	80043a0 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80017a8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80017ac:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80017ae:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80017b2:	4619      	mov	r1, r3
 80017b4:	4821      	ldr	r0, [pc, #132]	; (800183c <MX_TIM2_Init+0xfc>)
 80017b6:	f008 fa93 	bl	8009ce0 <HAL_TIM_ConfigClockSource>
 80017ba:	4603      	mov	r3, r0
 80017bc:	2b00      	cmp	r3, #0
 80017be:	d001      	beq.n	80017c4 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 80017c0:	f002 fdee 	bl	80043a0 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80017c4:	481d      	ldr	r0, [pc, #116]	; (800183c <MX_TIM2_Init+0xfc>)
 80017c6:	f007 ffb7 	bl	8009738 <HAL_TIM_PWM_Init>
 80017ca:	4603      	mov	r3, r0
 80017cc:	2b00      	cmp	r3, #0
 80017ce:	d001      	beq.n	80017d4 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 80017d0:	f002 fde6 	bl	80043a0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80017d4:	2300      	movs	r3, #0
 80017d6:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80017d8:	2300      	movs	r3, #0
 80017da:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80017dc:	f107 0320 	add.w	r3, r7, #32
 80017e0:	4619      	mov	r1, r3
 80017e2:	4816      	ldr	r0, [pc, #88]	; (800183c <MX_TIM2_Init+0xfc>)
 80017e4:	f008 fe38 	bl	800a458 <HAL_TIMEx_MasterConfigSynchronization>
 80017e8:	4603      	mov	r3, r0
 80017ea:	2b00      	cmp	r3, #0
 80017ec:	d001      	beq.n	80017f2 <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 80017ee:	f002 fdd7 	bl	80043a0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80017f2:	2360      	movs	r3, #96	; 0x60
 80017f4:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80017f6:	2300      	movs	r3, #0
 80017f8:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80017fa:	2300      	movs	r3, #0
 80017fc:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80017fe:	2300      	movs	r3, #0
 8001800:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001802:	1d3b      	adds	r3, r7, #4
 8001804:	2200      	movs	r2, #0
 8001806:	4619      	mov	r1, r3
 8001808:	480c      	ldr	r0, [pc, #48]	; (800183c <MX_TIM2_Init+0xfc>)
 800180a:	f008 f9a7 	bl	8009b5c <HAL_TIM_PWM_ConfigChannel>
 800180e:	4603      	mov	r3, r0
 8001810:	2b00      	cmp	r3, #0
 8001812:	d001      	beq.n	8001818 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 8001814:	f002 fdc4 	bl	80043a0 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001818:	1d3b      	adds	r3, r7, #4
 800181a:	2204      	movs	r2, #4
 800181c:	4619      	mov	r1, r3
 800181e:	4807      	ldr	r0, [pc, #28]	; (800183c <MX_TIM2_Init+0xfc>)
 8001820:	f008 f99c 	bl	8009b5c <HAL_TIM_PWM_ConfigChannel>
 8001824:	4603      	mov	r3, r0
 8001826:	2b00      	cmp	r3, #0
 8001828:	d001      	beq.n	800182e <MX_TIM2_Init+0xee>
  {
    Error_Handler();
 800182a:	f002 fdb9 	bl	80043a0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 800182e:	4803      	ldr	r0, [pc, #12]	; (800183c <MX_TIM2_Init+0xfc>)
 8001830:	f002 ff34 	bl	800469c <HAL_TIM_MspPostInit>

}
 8001834:	bf00      	nop
 8001836:	3738      	adds	r7, #56	; 0x38
 8001838:	46bd      	mov	sp, r7
 800183a:	bd80      	pop	{r7, pc}
 800183c:	20000330 	.word	0x20000330

08001840 <MX_TIM11_Init>:
  * @brief TIM11 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM11_Init(void)
{
 8001840:	b580      	push	{r7, lr}
 8001842:	af00      	add	r7, sp, #0
  /* USER CODE END TIM11_Init 0 */

  /* USER CODE BEGIN TIM11_Init 1 */

  /* USER CODE END TIM11_Init 1 */
  htim11.Instance = TIM11;
 8001844:	4b0e      	ldr	r3, [pc, #56]	; (8001880 <MX_TIM11_Init+0x40>)
 8001846:	4a0f      	ldr	r2, [pc, #60]	; (8001884 <MX_TIM11_Init+0x44>)
 8001848:	601a      	str	r2, [r3, #0]
  htim11.Init.Prescaler = 99;
 800184a:	4b0d      	ldr	r3, [pc, #52]	; (8001880 <MX_TIM11_Init+0x40>)
 800184c:	2263      	movs	r2, #99	; 0x63
 800184e:	605a      	str	r2, [r3, #4]
  htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001850:	4b0b      	ldr	r3, [pc, #44]	; (8001880 <MX_TIM11_Init+0x40>)
 8001852:	2200      	movs	r2, #0
 8001854:	609a      	str	r2, [r3, #8]
  htim11.Init.Period = 65535;
 8001856:	4b0a      	ldr	r3, [pc, #40]	; (8001880 <MX_TIM11_Init+0x40>)
 8001858:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800185c:	60da      	str	r2, [r3, #12]
  htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800185e:	4b08      	ldr	r3, [pc, #32]	; (8001880 <MX_TIM11_Init+0x40>)
 8001860:	2200      	movs	r2, #0
 8001862:	611a      	str	r2, [r3, #16]
  htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001864:	4b06      	ldr	r3, [pc, #24]	; (8001880 <MX_TIM11_Init+0x40>)
 8001866:	2200      	movs	r2, #0
 8001868:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim11) != HAL_OK)
 800186a:	4805      	ldr	r0, [pc, #20]	; (8001880 <MX_TIM11_Init+0x40>)
 800186c:	f007 fe58 	bl	8009520 <HAL_TIM_Base_Init>
 8001870:	4603      	mov	r3, r0
 8001872:	2b00      	cmp	r3, #0
 8001874:	d001      	beq.n	800187a <MX_TIM11_Init+0x3a>
  {
    Error_Handler();
 8001876:	f002 fd93 	bl	80043a0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM11_Init 2 */

  /* USER CODE END TIM11_Init 2 */

}
 800187a:	bf00      	nop
 800187c:	bd80      	pop	{r7, pc}
 800187e:	bf00      	nop
 8001880:	20000378 	.word	0x20000378
 8001884:	40014800 	.word	0x40014800

08001888 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001888:	b580      	push	{r7, lr}
 800188a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800188c:	4b12      	ldr	r3, [pc, #72]	; (80018d8 <MX_USART2_UART_Init+0x50>)
 800188e:	4a13      	ldr	r2, [pc, #76]	; (80018dc <MX_USART2_UART_Init+0x54>)
 8001890:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 512000;
 8001892:	4b11      	ldr	r3, [pc, #68]	; (80018d8 <MX_USART2_UART_Init+0x50>)
 8001894:	f44f 22fa 	mov.w	r2, #512000	; 0x7d000
 8001898:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_9B;
 800189a:	4b0f      	ldr	r3, [pc, #60]	; (80018d8 <MX_USART2_UART_Init+0x50>)
 800189c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80018a0:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80018a2:	4b0d      	ldr	r3, [pc, #52]	; (80018d8 <MX_USART2_UART_Init+0x50>)
 80018a4:	2200      	movs	r2, #0
 80018a6:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_EVEN;
 80018a8:	4b0b      	ldr	r3, [pc, #44]	; (80018d8 <MX_USART2_UART_Init+0x50>)
 80018aa:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80018ae:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80018b0:	4b09      	ldr	r3, [pc, #36]	; (80018d8 <MX_USART2_UART_Init+0x50>)
 80018b2:	220c      	movs	r2, #12
 80018b4:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80018b6:	4b08      	ldr	r3, [pc, #32]	; (80018d8 <MX_USART2_UART_Init+0x50>)
 80018b8:	2200      	movs	r2, #0
 80018ba:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80018bc:	4b06      	ldr	r3, [pc, #24]	; (80018d8 <MX_USART2_UART_Init+0x50>)
 80018be:	2200      	movs	r2, #0
 80018c0:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80018c2:	4805      	ldr	r0, [pc, #20]	; (80018d8 <MX_USART2_UART_Init+0x50>)
 80018c4:	f008 fe4a 	bl	800a55c <HAL_UART_Init>
 80018c8:	4603      	mov	r3, r0
 80018ca:	2b00      	cmp	r3, #0
 80018cc:	d001      	beq.n	80018d2 <MX_USART2_UART_Init+0x4a>
  {
    Error_Handler();
 80018ce:	f002 fd67 	bl	80043a0 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80018d2:	bf00      	nop
 80018d4:	bd80      	pop	{r7, pc}
 80018d6:	bf00      	nop
 80018d8:	200003c0 	.word	0x200003c0
 80018dc:	40004400 	.word	0x40004400

080018e0 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80018e0:	b580      	push	{r7, lr}
 80018e2:	b082      	sub	sp, #8
 80018e4:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80018e6:	2300      	movs	r3, #0
 80018e8:	607b      	str	r3, [r7, #4]
 80018ea:	4b18      	ldr	r3, [pc, #96]	; (800194c <MX_DMA_Init+0x6c>)
 80018ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018ee:	4a17      	ldr	r2, [pc, #92]	; (800194c <MX_DMA_Init+0x6c>)
 80018f0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80018f4:	6313      	str	r3, [r2, #48]	; 0x30
 80018f6:	4b15      	ldr	r3, [pc, #84]	; (800194c <MX_DMA_Init+0x6c>)
 80018f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018fa:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80018fe:	607b      	str	r3, [r7, #4]
 8001900:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 8001902:	2200      	movs	r2, #0
 8001904:	2100      	movs	r1, #0
 8001906:	200b      	movs	r0, #11
 8001908:	f003 f9dd 	bl	8004cc6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 800190c:	200b      	movs	r0, #11
 800190e:	f003 f9f6 	bl	8004cfe <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 8001912:	2200      	movs	r2, #0
 8001914:	2100      	movs	r1, #0
 8001916:	2010      	movs	r0, #16
 8001918:	f003 f9d5 	bl	8004cc6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 800191c:	2010      	movs	r0, #16
 800191e:	f003 f9ee 	bl	8004cfe <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream6_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 8001922:	2200      	movs	r2, #0
 8001924:	2100      	movs	r1, #0
 8001926:	2011      	movs	r0, #17
 8001928:	f003 f9cd 	bl	8004cc6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 800192c:	2011      	movs	r0, #17
 800192e:	f003 f9e6 	bl	8004cfe <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 0, 0);
 8001932:	2200      	movs	r2, #0
 8001934:	2100      	movs	r1, #0
 8001936:	202f      	movs	r0, #47	; 0x2f
 8001938:	f003 f9c5 	bl	8004cc6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 800193c:	202f      	movs	r0, #47	; 0x2f
 800193e:	f003 f9de 	bl	8004cfe <HAL_NVIC_EnableIRQ>

}
 8001942:	bf00      	nop
 8001944:	3708      	adds	r7, #8
 8001946:	46bd      	mov	sp, r7
 8001948:	bd80      	pop	{r7, pc}
 800194a:	bf00      	nop
 800194c:	40023800 	.word	0x40023800

08001950 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001950:	b580      	push	{r7, lr}
 8001952:	b08a      	sub	sp, #40	; 0x28
 8001954:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001956:	f107 0314 	add.w	r3, r7, #20
 800195a:	2200      	movs	r2, #0
 800195c:	601a      	str	r2, [r3, #0]
 800195e:	605a      	str	r2, [r3, #4]
 8001960:	609a      	str	r2, [r3, #8]
 8001962:	60da      	str	r2, [r3, #12]
 8001964:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001966:	2300      	movs	r3, #0
 8001968:	613b      	str	r3, [r7, #16]
 800196a:	4b51      	ldr	r3, [pc, #324]	; (8001ab0 <MX_GPIO_Init+0x160>)
 800196c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800196e:	4a50      	ldr	r2, [pc, #320]	; (8001ab0 <MX_GPIO_Init+0x160>)
 8001970:	f043 0304 	orr.w	r3, r3, #4
 8001974:	6313      	str	r3, [r2, #48]	; 0x30
 8001976:	4b4e      	ldr	r3, [pc, #312]	; (8001ab0 <MX_GPIO_Init+0x160>)
 8001978:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800197a:	f003 0304 	and.w	r3, r3, #4
 800197e:	613b      	str	r3, [r7, #16]
 8001980:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001982:	2300      	movs	r3, #0
 8001984:	60fb      	str	r3, [r7, #12]
 8001986:	4b4a      	ldr	r3, [pc, #296]	; (8001ab0 <MX_GPIO_Init+0x160>)
 8001988:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800198a:	4a49      	ldr	r2, [pc, #292]	; (8001ab0 <MX_GPIO_Init+0x160>)
 800198c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001990:	6313      	str	r3, [r2, #48]	; 0x30
 8001992:	4b47      	ldr	r3, [pc, #284]	; (8001ab0 <MX_GPIO_Init+0x160>)
 8001994:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001996:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800199a:	60fb      	str	r3, [r7, #12]
 800199c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800199e:	2300      	movs	r3, #0
 80019a0:	60bb      	str	r3, [r7, #8]
 80019a2:	4b43      	ldr	r3, [pc, #268]	; (8001ab0 <MX_GPIO_Init+0x160>)
 80019a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019a6:	4a42      	ldr	r2, [pc, #264]	; (8001ab0 <MX_GPIO_Init+0x160>)
 80019a8:	f043 0301 	orr.w	r3, r3, #1
 80019ac:	6313      	str	r3, [r2, #48]	; 0x30
 80019ae:	4b40      	ldr	r3, [pc, #256]	; (8001ab0 <MX_GPIO_Init+0x160>)
 80019b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019b2:	f003 0301 	and.w	r3, r3, #1
 80019b6:	60bb      	str	r3, [r7, #8]
 80019b8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80019ba:	2300      	movs	r3, #0
 80019bc:	607b      	str	r3, [r7, #4]
 80019be:	4b3c      	ldr	r3, [pc, #240]	; (8001ab0 <MX_GPIO_Init+0x160>)
 80019c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019c2:	4a3b      	ldr	r2, [pc, #236]	; (8001ab0 <MX_GPIO_Init+0x160>)
 80019c4:	f043 0302 	orr.w	r3, r3, #2
 80019c8:	6313      	str	r3, [r2, #48]	; 0x30
 80019ca:	4b39      	ldr	r3, [pc, #228]	; (8001ab0 <MX_GPIO_Init+0x160>)
 80019cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019ce:	f003 0302 	and.w	r3, r3, #2
 80019d2:	607b      	str	r3, [r7, #4]
 80019d4:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|GPIO_PIN_9, GPIO_PIN_RESET);
 80019d6:	2200      	movs	r2, #0
 80019d8:	f44f 7108 	mov.w	r1, #544	; 0x220
 80019dc:	4835      	ldr	r0, [pc, #212]	; (8001ab4 <MX_GPIO_Init+0x164>)
 80019de:	f003 ff55 	bl	800588c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SS_GPIO_Port, SS_Pin, GPIO_PIN_RESET);
 80019e2:	2200      	movs	r2, #0
 80019e4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80019e8:	4833      	ldr	r0, [pc, #204]	; (8001ab8 <MX_GPIO_Init+0x168>)
 80019ea:	f003 ff4f 	bl	800588c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 80019ee:	2200      	movs	r2, #0
 80019f0:	2180      	movs	r1, #128	; 0x80
 80019f2:	4832      	ldr	r0, [pc, #200]	; (8001abc <MX_GPIO_Init+0x16c>)
 80019f4:	f003 ff4a 	bl	800588c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 80019f8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80019fc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 80019fe:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8001a02:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a04:	2300      	movs	r3, #0
 8001a06:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8001a08:	f107 0314 	add.w	r3, r7, #20
 8001a0c:	4619      	mov	r1, r3
 8001a0e:	482b      	ldr	r0, [pc, #172]	; (8001abc <MX_GPIO_Init+0x16c>)
 8001a10:	f003 fda0 	bl	8005554 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin PA9 */
  GPIO_InitStruct.Pin = LD2_Pin|GPIO_PIN_9;
 8001a14:	f44f 7308 	mov.w	r3, #544	; 0x220
 8001a18:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a1a:	2301      	movs	r3, #1
 8001a1c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a1e:	2300      	movs	r3, #0
 8001a20:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a22:	2300      	movs	r3, #0
 8001a24:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a26:	f107 0314 	add.w	r3, r7, #20
 8001a2a:	4619      	mov	r1, r3
 8001a2c:	4821      	ldr	r0, [pc, #132]	; (8001ab4 <MX_GPIO_Init+0x164>)
 8001a2e:	f003 fd91 	bl	8005554 <HAL_GPIO_Init>

  /*Configure GPIO pin : SS_Pin */
  GPIO_InitStruct.Pin = SS_Pin;
 8001a32:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001a36:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a38:	2301      	movs	r3, #1
 8001a3a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a3c:	2300      	movs	r3, #0
 8001a3e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a40:	2300      	movs	r3, #0
 8001a42:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SS_GPIO_Port, &GPIO_InitStruct);
 8001a44:	f107 0314 	add.w	r3, r7, #20
 8001a48:	4619      	mov	r1, r3
 8001a4a:	481b      	ldr	r0, [pc, #108]	; (8001ab8 <MX_GPIO_Init+0x168>)
 8001a4c:	f003 fd82 	bl	8005554 <HAL_GPIO_Init>

  /*Configure GPIO pin : PC7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001a50:	2380      	movs	r3, #128	; 0x80
 8001a52:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a54:	2301      	movs	r3, #1
 8001a56:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a58:	2300      	movs	r3, #0
 8001a5a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a5c:	2300      	movs	r3, #0
 8001a5e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a60:	f107 0314 	add.w	r3, r7, #20
 8001a64:	4619      	mov	r1, r3
 8001a66:	4815      	ldr	r0, [pc, #84]	; (8001abc <MX_GPIO_Init+0x16c>)
 8001a68:	f003 fd74 	bl	8005554 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001a6c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001a70:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001a72:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8001a76:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a78:	2300      	movs	r3, #0
 8001a7a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a7c:	f107 0314 	add.w	r3, r7, #20
 8001a80:	4619      	mov	r1, r3
 8001a82:	480c      	ldr	r0, [pc, #48]	; (8001ab4 <MX_GPIO_Init+0x164>)
 8001a84:	f003 fd66 	bl	8005554 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8001a88:	2200      	movs	r2, #0
 8001a8a:	2100      	movs	r1, #0
 8001a8c:	2017      	movs	r0, #23
 8001a8e:	f003 f91a 	bl	8004cc6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001a92:	2017      	movs	r0, #23
 8001a94:	f003 f933 	bl	8004cfe <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8001a98:	2200      	movs	r2, #0
 8001a9a:	2100      	movs	r1, #0
 8001a9c:	2028      	movs	r0, #40	; 0x28
 8001a9e:	f003 f912 	bl	8004cc6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001aa2:	2028      	movs	r0, #40	; 0x28
 8001aa4:	f003 f92b 	bl	8004cfe <HAL_NVIC_EnableIRQ>

}
 8001aa8:	bf00      	nop
 8001aaa:	3728      	adds	r7, #40	; 0x28
 8001aac:	46bd      	mov	sp, r7
 8001aae:	bd80      	pop	{r7, pc}
 8001ab0:	40023800 	.word	0x40023800
 8001ab4:	40020000 	.word	0x40020000
 8001ab8:	40020400 	.word	0x40020400
 8001abc:	40020800 	.word	0x40020800

08001ac0 <CascadeController>:

/* USER CODE BEGIN 4 */

//----------------------------------------------------------------< CONTROL >
void CascadeController()
{
 8001ac0:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8001ac4:	b088      	sub	sp, #32
 8001ac6:	af00      	add	r7, sp, #0
			if(kal_velocity < tra_velo){
				kal_velocity = tra_velo;
			}
		}
	}*/
	if(start_tra == 2){
 8001ac8:	4b93      	ldr	r3, [pc, #588]	; (8001d18 <CascadeController+0x258>)
 8001aca:	781b      	ldrb	r3, [r3, #0]
 8001acc:	2b02      	cmp	r3, #2
 8001ace:	d115      	bne.n	8001afc <CascadeController+0x3c>
		pos_Kp = 4.07697250571067;
 8001ad0:	4b92      	ldr	r3, [pc, #584]	; (8001d1c <CascadeController+0x25c>)
 8001ad2:	4a93      	ldr	r2, [pc, #588]	; (8001d20 <CascadeController+0x260>)
 8001ad4:	601a      	str	r2, [r3, #0]
		pos_Ki = 3.71617437483172;
 8001ad6:	4b93      	ldr	r3, [pc, #588]	; (8001d24 <CascadeController+0x264>)
 8001ad8:	4a93      	ldr	r2, [pc, #588]	; (8001d28 <CascadeController+0x268>)
 8001ada:	601a      	str	r2, [r3, #0]
		pos_Kd = 0.75445435315971;
 8001adc:	4b93      	ldr	r3, [pc, #588]	; (8001d2c <CascadeController+0x26c>)
 8001ade:	4a94      	ldr	r2, [pc, #592]	; (8001d30 <CascadeController+0x270>)
 8001ae0:	601a      	str	r2, [r3, #0]
		velo_Kp = 1.5;
 8001ae2:	4b94      	ldr	r3, [pc, #592]	; (8001d34 <CascadeController+0x274>)
 8001ae4:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 8001ae8:	601a      	str	r2, [r3, #0]
		velo_Ki = 0;
 8001aea:	4b93      	ldr	r3, [pc, #588]	; (8001d38 <CascadeController+0x278>)
 8001aec:	f04f 0200 	mov.w	r2, #0
 8001af0:	601a      	str	r2, [r3, #0]
		velo_Kd = 0;
 8001af2:	4b92      	ldr	r3, [pc, #584]	; (8001d3c <CascadeController+0x27c>)
 8001af4:	f04f 0200 	mov.w	r2, #0
 8001af8:	601a      	str	r2, [r3, #0]
 8001afa:	e014      	b.n	8001b26 <CascadeController+0x66>
	}
	else{
		pos_Kp = 4.07697250571067;
 8001afc:	4b87      	ldr	r3, [pc, #540]	; (8001d1c <CascadeController+0x25c>)
 8001afe:	4a88      	ldr	r2, [pc, #544]	; (8001d20 <CascadeController+0x260>)
 8001b00:	601a      	str	r2, [r3, #0]
		pos_Ki = 3.71617437483172;
 8001b02:	4b88      	ldr	r3, [pc, #544]	; (8001d24 <CascadeController+0x264>)
 8001b04:	4a88      	ldr	r2, [pc, #544]	; (8001d28 <CascadeController+0x268>)
 8001b06:	601a      	str	r2, [r3, #0]
		pos_Kd = 0.75445435315971;
 8001b08:	4b88      	ldr	r3, [pc, #544]	; (8001d2c <CascadeController+0x26c>)
 8001b0a:	4a89      	ldr	r2, [pc, #548]	; (8001d30 <CascadeController+0x270>)
 8001b0c:	601a      	str	r2, [r3, #0]
		velo_Kp = 1.5;
 8001b0e:	4b89      	ldr	r3, [pc, #548]	; (8001d34 <CascadeController+0x274>)
 8001b10:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 8001b14:	601a      	str	r2, [r3, #0]
		velo_Ki = 0;
 8001b16:	4b88      	ldr	r3, [pc, #544]	; (8001d38 <CascadeController+0x278>)
 8001b18:	f04f 0200 	mov.w	r2, #0
 8001b1c:	601a      	str	r2, [r3, #0]
		velo_Kd = 0;
 8001b1e:	4b87      	ldr	r3, [pc, #540]	; (8001d3c <CascadeController+0x27c>)
 8001b20:	f04f 0200 	mov.w	r2, #0
 8001b24:	601a      	str	r2, [r3, #0]
	}
	//position control******
	float error2 = tra_pos - current_rad_wrap; //setpoint - new_Data
 8001b26:	4b86      	ldr	r3, [pc, #536]	; (8001d40 <CascadeController+0x280>)
 8001b28:	ed93 7a00 	vldr	s14, [r3]
 8001b2c:	4b85      	ldr	r3, [pc, #532]	; (8001d44 <CascadeController+0x284>)
 8001b2e:	edd3 7a00 	vldr	s15, [r3]
 8001b32:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001b36:	edc7 7a03 	vstr	s15, [r7, #12]
	float proportional2 = pos_Kp * error2;
 8001b3a:	4b78      	ldr	r3, [pc, #480]	; (8001d1c <CascadeController+0x25c>)
 8001b3c:	edd3 7a00 	vldr	s15, [r3]
 8001b40:	ed97 7a03 	vldr	s14, [r7, #12]
 8001b44:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001b48:	edc7 7a02 	vstr	s15, [r7, #8]
	integrator2 = integrator2 + (0.5*pos_Ki*dt*(error2+prevError2));
 8001b4c:	4b7e      	ldr	r3, [pc, #504]	; (8001d48 <CascadeController+0x288>)
 8001b4e:	681b      	ldr	r3, [r3, #0]
 8001b50:	4618      	mov	r0, r3
 8001b52:	f7fe fca5 	bl	80004a0 <__aeabi_f2d>
 8001b56:	4604      	mov	r4, r0
 8001b58:	460d      	mov	r5, r1
 8001b5a:	4b72      	ldr	r3, [pc, #456]	; (8001d24 <CascadeController+0x264>)
 8001b5c:	681b      	ldr	r3, [r3, #0]
 8001b5e:	4618      	mov	r0, r3
 8001b60:	f7fe fc9e 	bl	80004a0 <__aeabi_f2d>
 8001b64:	f04f 0200 	mov.w	r2, #0
 8001b68:	4b78      	ldr	r3, [pc, #480]	; (8001d4c <CascadeController+0x28c>)
 8001b6a:	f7fe fcf1 	bl	8000550 <__aeabi_dmul>
 8001b6e:	4602      	mov	r2, r0
 8001b70:	460b      	mov	r3, r1
 8001b72:	4610      	mov	r0, r2
 8001b74:	4619      	mov	r1, r3
 8001b76:	a364      	add	r3, pc, #400	; (adr r3, 8001d08 <CascadeController+0x248>)
 8001b78:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001b7c:	f7fe fce8 	bl	8000550 <__aeabi_dmul>
 8001b80:	4602      	mov	r2, r0
 8001b82:	460b      	mov	r3, r1
 8001b84:	4690      	mov	r8, r2
 8001b86:	4699      	mov	r9, r3
 8001b88:	4b71      	ldr	r3, [pc, #452]	; (8001d50 <CascadeController+0x290>)
 8001b8a:	ed93 7a00 	vldr	s14, [r3]
 8001b8e:	edd7 7a03 	vldr	s15, [r7, #12]
 8001b92:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b96:	ee17 0a90 	vmov	r0, s15
 8001b9a:	f7fe fc81 	bl	80004a0 <__aeabi_f2d>
 8001b9e:	4602      	mov	r2, r0
 8001ba0:	460b      	mov	r3, r1
 8001ba2:	4640      	mov	r0, r8
 8001ba4:	4649      	mov	r1, r9
 8001ba6:	f7fe fcd3 	bl	8000550 <__aeabi_dmul>
 8001baa:	4602      	mov	r2, r0
 8001bac:	460b      	mov	r3, r1
 8001bae:	4620      	mov	r0, r4
 8001bb0:	4629      	mov	r1, r5
 8001bb2:	f7fe fb17 	bl	80001e4 <__adddf3>
 8001bb6:	4602      	mov	r2, r0
 8001bb8:	460b      	mov	r3, r1
 8001bba:	4610      	mov	r0, r2
 8001bbc:	4619      	mov	r1, r3
 8001bbe:	f7fe ff97 	bl	8000af0 <__aeabi_d2f>
 8001bc2:	4603      	mov	r3, r0
 8001bc4:	4a60      	ldr	r2, [pc, #384]	; (8001d48 <CascadeController+0x288>)
 8001bc6:	6013      	str	r3, [r2, #0]
	float limMinInt2, limMaxInt2;
	if(limMax > proportional2){
 8001bc8:	4b62      	ldr	r3, [pc, #392]	; (8001d54 <CascadeController+0x294>)
 8001bca:	edd3 7a00 	vldr	s15, [r3]
 8001bce:	ed97 7a02 	vldr	s14, [r7, #8]
 8001bd2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001bd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001bda:	d509      	bpl.n	8001bf0 <CascadeController+0x130>
		limMaxInt2 = limMax - proportional2;}
 8001bdc:	4b5d      	ldr	r3, [pc, #372]	; (8001d54 <CascadeController+0x294>)
 8001bde:	ed93 7a00 	vldr	s14, [r3]
 8001be2:	edd7 7a02 	vldr	s15, [r7, #8]
 8001be6:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001bea:	edc7 7a06 	vstr	s15, [r7, #24]
 8001bee:	e002      	b.n	8001bf6 <CascadeController+0x136>
	else{
		limMaxInt2 = 0.0;}
 8001bf0:	f04f 0300 	mov.w	r3, #0
 8001bf4:	61bb      	str	r3, [r7, #24]
	if(limMin < proportional2){
 8001bf6:	4b58      	ldr	r3, [pc, #352]	; (8001d58 <CascadeController+0x298>)
 8001bf8:	edd3 7a00 	vldr	s15, [r3]
 8001bfc:	ed97 7a02 	vldr	s14, [r7, #8]
 8001c00:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001c04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001c08:	dd09      	ble.n	8001c1e <CascadeController+0x15e>
		limMinInt2 = limMin - proportional2;}
 8001c0a:	4b53      	ldr	r3, [pc, #332]	; (8001d58 <CascadeController+0x298>)
 8001c0c:	ed93 7a00 	vldr	s14, [r3]
 8001c10:	edd7 7a02 	vldr	s15, [r7, #8]
 8001c14:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001c18:	edc7 7a07 	vstr	s15, [r7, #28]
 8001c1c:	e002      	b.n	8001c24 <CascadeController+0x164>
	else{
		limMinInt2 = 0.0;}
 8001c1e:	f04f 0300 	mov.w	r3, #0
 8001c22:	61fb      	str	r3, [r7, #28]
	//Clamp integrator
	if(integrator2 > limMaxInt2){
 8001c24:	4b48      	ldr	r3, [pc, #288]	; (8001d48 <CascadeController+0x288>)
 8001c26:	edd3 7a00 	vldr	s15, [r3]
 8001c2a:	ed97 7a06 	vldr	s14, [r7, #24]
 8001c2e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001c32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001c36:	d503      	bpl.n	8001c40 <CascadeController+0x180>
		integrator2 = limMaxInt2;}
 8001c38:	4a43      	ldr	r2, [pc, #268]	; (8001d48 <CascadeController+0x288>)
 8001c3a:	69bb      	ldr	r3, [r7, #24]
 8001c3c:	6013      	str	r3, [r2, #0]
 8001c3e:	e00c      	b.n	8001c5a <CascadeController+0x19a>
	else if(integrator2 < limMinInt2){
 8001c40:	4b41      	ldr	r3, [pc, #260]	; (8001d48 <CascadeController+0x288>)
 8001c42:	edd3 7a00 	vldr	s15, [r3]
 8001c46:	ed97 7a07 	vldr	s14, [r7, #28]
 8001c4a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001c4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001c52:	dd02      	ble.n	8001c5a <CascadeController+0x19a>
		integrator2 = limMinInt2;}
 8001c54:	4a3c      	ldr	r2, [pc, #240]	; (8001d48 <CascadeController+0x288>)
 8001c56:	69fb      	ldr	r3, [r7, #28]
 8001c58:	6013      	str	r3, [r2, #0]

	//differentiator2 = (2*pos_Kd*(kal_position-prevMeasurement2)+(2*tuaall-dt)*differentiator2)/(2*tuaall+dt);
	differentiator2 = error2 - prevError2;
 8001c5a:	4b3d      	ldr	r3, [pc, #244]	; (8001d50 <CascadeController+0x290>)
 8001c5c:	edd3 7a00 	vldr	s15, [r3]
 8001c60:	ed97 7a03 	vldr	s14, [r7, #12]
 8001c64:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001c68:	4b3c      	ldr	r3, [pc, #240]	; (8001d5c <CascadeController+0x29c>)
 8001c6a:	edc3 7a00 	vstr	s15, [r3]
	poscommand = proportional2 + integrator2 + (pos_Kd*differentiator2);
 8001c6e:	4b36      	ldr	r3, [pc, #216]	; (8001d48 <CascadeController+0x288>)
 8001c70:	ed93 7a00 	vldr	s14, [r3]
 8001c74:	edd7 7a02 	vldr	s15, [r7, #8]
 8001c78:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001c7c:	4b2b      	ldr	r3, [pc, #172]	; (8001d2c <CascadeController+0x26c>)
 8001c7e:	edd3 6a00 	vldr	s13, [r3]
 8001c82:	4b36      	ldr	r3, [pc, #216]	; (8001d5c <CascadeController+0x29c>)
 8001c84:	edd3 7a00 	vldr	s15, [r3]
 8001c88:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001c8c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001c90:	4b33      	ldr	r3, [pc, #204]	; (8001d60 <CascadeController+0x2a0>)
 8001c92:	edc3 7a00 	vstr	s15, [r3]

	//velocity control*******

	if(direct == 1){
 8001c96:	4b33      	ldr	r3, [pc, #204]	; (8001d64 <CascadeController+0x2a4>)
 8001c98:	781b      	ldrb	r3, [r3, #0]
 8001c9a:	2b01      	cmp	r3, #1
 8001c9c:	d16a      	bne.n	8001d74 <CascadeController+0x2b4>
		ch_velo = kal_velocity;
 8001c9e:	4b32      	ldr	r3, [pc, #200]	; (8001d68 <CascadeController+0x2a8>)
 8001ca0:	681b      	ldr	r3, [r3, #0]
 8001ca2:	4a32      	ldr	r2, [pc, #200]	; (8001d6c <CascadeController+0x2ac>)
 8001ca4:	6013      	str	r3, [r2, #0]
		if(ch_velo > limitOmega/9.5493){
 8001ca6:	4b31      	ldr	r3, [pc, #196]	; (8001d6c <CascadeController+0x2ac>)
 8001ca8:	681b      	ldr	r3, [r3, #0]
 8001caa:	4618      	mov	r0, r3
 8001cac:	f7fe fbf8 	bl	80004a0 <__aeabi_f2d>
 8001cb0:	4604      	mov	r4, r0
 8001cb2:	460d      	mov	r5, r1
 8001cb4:	4b2e      	ldr	r3, [pc, #184]	; (8001d70 <CascadeController+0x2b0>)
 8001cb6:	681b      	ldr	r3, [r3, #0]
 8001cb8:	4618      	mov	r0, r3
 8001cba:	f7fe fbf1 	bl	80004a0 <__aeabi_f2d>
 8001cbe:	a314      	add	r3, pc, #80	; (adr r3, 8001d10 <CascadeController+0x250>)
 8001cc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001cc4:	f7fe fd6e 	bl	80007a4 <__aeabi_ddiv>
 8001cc8:	4602      	mov	r2, r0
 8001cca:	460b      	mov	r3, r1
 8001ccc:	4620      	mov	r0, r4
 8001cce:	4629      	mov	r1, r5
 8001cd0:	f7fe fece 	bl	8000a70 <__aeabi_dcmpgt>
 8001cd4:	4603      	mov	r3, r0
 8001cd6:	2b00      	cmp	r3, #0
 8001cd8:	f000 8086 	beq.w	8001de8 <CascadeController+0x328>
			kal_velocity = limitOmega/9.5493;
 8001cdc:	4b24      	ldr	r3, [pc, #144]	; (8001d70 <CascadeController+0x2b0>)
 8001cde:	681b      	ldr	r3, [r3, #0]
 8001ce0:	4618      	mov	r0, r3
 8001ce2:	f7fe fbdd 	bl	80004a0 <__aeabi_f2d>
 8001ce6:	a30a      	add	r3, pc, #40	; (adr r3, 8001d10 <CascadeController+0x250>)
 8001ce8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001cec:	f7fe fd5a 	bl	80007a4 <__aeabi_ddiv>
 8001cf0:	4602      	mov	r2, r0
 8001cf2:	460b      	mov	r3, r1
 8001cf4:	4610      	mov	r0, r2
 8001cf6:	4619      	mov	r1, r3
 8001cf8:	f7fe fefa 	bl	8000af0 <__aeabi_d2f>
 8001cfc:	4603      	mov	r3, r0
 8001cfe:	4a1a      	ldr	r2, [pc, #104]	; (8001d68 <CascadeController+0x2a8>)
 8001d00:	6013      	str	r3, [r2, #0]
 8001d02:	e071      	b.n	8001de8 <CascadeController+0x328>
 8001d04:	f3af 8000 	nop.w
 8001d08:	47ae147b 	.word	0x47ae147b
 8001d0c:	3f847ae1 	.word	0x3f847ae1
 8001d10:	d97f62b7 	.word	0xd97f62b7
 8001d14:	4023193d 	.word	0x4023193d
 8001d18:	200005e6 	.word	0x200005e6
 8001d1c:	20000000 	.word	0x20000000
 8001d20:	4082768f 	.word	0x4082768f
 8001d24:	20000004 	.word	0x20000004
 8001d28:	406dd5cd 	.word	0x406dd5cd
 8001d2c:	20000008 	.word	0x20000008
 8001d30:	3f4123ec 	.word	0x3f4123ec
 8001d34:	200004c4 	.word	0x200004c4
 8001d38:	200004c8 	.word	0x200004c8
 8001d3c:	200004cc 	.word	0x200004cc
 8001d40:	200005b8 	.word	0x200005b8
 8001d44:	20000580 	.word	0x20000580
 8001d48:	20000604 	.word	0x20000604
 8001d4c:	3fe00000 	.word	0x3fe00000
 8001d50:	20000608 	.word	0x20000608
 8001d54:	20000038 	.word	0x20000038
 8001d58:	20000034 	.word	0x20000034
 8001d5c:	2000060c 	.word	0x2000060c
 8001d60:	20000618 	.word	0x20000618
 8001d64:	2000002c 	.word	0x2000002c
 8001d68:	200005b0 	.word	0x200005b0
 8001d6c:	200005ec 	.word	0x200005ec
 8001d70:	20000014 	.word	0x20000014
		}
	}
	else{
		ch_velo = kal_velocity*-1;
 8001d74:	4ba2      	ldr	r3, [pc, #648]	; (8002000 <CascadeController+0x540>)
 8001d76:	edd3 7a00 	vldr	s15, [r3]
 8001d7a:	eef1 7a67 	vneg.f32	s15, s15
 8001d7e:	4ba1      	ldr	r3, [pc, #644]	; (8002004 <CascadeController+0x544>)
 8001d80:	edc3 7a00 	vstr	s15, [r3]
		if(ch_velo > limitOmega/9.5493){
 8001d84:	4b9f      	ldr	r3, [pc, #636]	; (8002004 <CascadeController+0x544>)
 8001d86:	681b      	ldr	r3, [r3, #0]
 8001d88:	4618      	mov	r0, r3
 8001d8a:	f7fe fb89 	bl	80004a0 <__aeabi_f2d>
 8001d8e:	4604      	mov	r4, r0
 8001d90:	460d      	mov	r5, r1
 8001d92:	4b9d      	ldr	r3, [pc, #628]	; (8002008 <CascadeController+0x548>)
 8001d94:	681b      	ldr	r3, [r3, #0]
 8001d96:	4618      	mov	r0, r3
 8001d98:	f7fe fb82 	bl	80004a0 <__aeabi_f2d>
 8001d9c:	a394      	add	r3, pc, #592	; (adr r3, 8001ff0 <CascadeController+0x530>)
 8001d9e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001da2:	f7fe fcff 	bl	80007a4 <__aeabi_ddiv>
 8001da6:	4602      	mov	r2, r0
 8001da8:	460b      	mov	r3, r1
 8001daa:	4620      	mov	r0, r4
 8001dac:	4629      	mov	r1, r5
 8001dae:	f7fe fe5f 	bl	8000a70 <__aeabi_dcmpgt>
 8001db2:	4603      	mov	r3, r0
 8001db4:	2b00      	cmp	r3, #0
 8001db6:	d017      	beq.n	8001de8 <CascadeController+0x328>
			kal_velocity = (limitOmega/9.5493)*-1;
 8001db8:	4b93      	ldr	r3, [pc, #588]	; (8002008 <CascadeController+0x548>)
 8001dba:	681b      	ldr	r3, [r3, #0]
 8001dbc:	4618      	mov	r0, r3
 8001dbe:	f7fe fb6f 	bl	80004a0 <__aeabi_f2d>
 8001dc2:	a38b      	add	r3, pc, #556	; (adr r3, 8001ff0 <CascadeController+0x530>)
 8001dc4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001dc8:	f7fe fcec 	bl	80007a4 <__aeabi_ddiv>
 8001dcc:	4602      	mov	r2, r0
 8001dce:	460b      	mov	r3, r1
 8001dd0:	4610      	mov	r0, r2
 8001dd2:	4619      	mov	r1, r3
 8001dd4:	f7fe fe8c 	bl	8000af0 <__aeabi_d2f>
 8001dd8:	4603      	mov	r3, r0
 8001dda:	ee07 3a90 	vmov	s15, r3
 8001dde:	eef1 7a67 	vneg.f32	s15, s15
 8001de2:	4b87      	ldr	r3, [pc, #540]	; (8002000 <CascadeController+0x540>)
 8001de4:	edc3 7a00 	vstr	s15, [r3]
		}
	}

	error = tra_velo+poscommand - kal_velocity; //setpoint+poscom - new_Data
 8001de8:	4b88      	ldr	r3, [pc, #544]	; (800200c <CascadeController+0x54c>)
 8001dea:	ed93 7a00 	vldr	s14, [r3]
 8001dee:	4b88      	ldr	r3, [pc, #544]	; (8002010 <CascadeController+0x550>)
 8001df0:	edd3 7a00 	vldr	s15, [r3]
 8001df4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001df8:	4b81      	ldr	r3, [pc, #516]	; (8002000 <CascadeController+0x540>)
 8001dfa:	edd3 7a00 	vldr	s15, [r3]
 8001dfe:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001e02:	4b84      	ldr	r3, [pc, #528]	; (8002014 <CascadeController+0x554>)
 8001e04:	edc3 7a00 	vstr	s15, [r3]
	float proportional = velo_Kp * error;
 8001e08:	4b83      	ldr	r3, [pc, #524]	; (8002018 <CascadeController+0x558>)
 8001e0a:	ed93 7a00 	vldr	s14, [r3]
 8001e0e:	4b81      	ldr	r3, [pc, #516]	; (8002014 <CascadeController+0x554>)
 8001e10:	edd3 7a00 	vldr	s15, [r3]
 8001e14:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001e18:	edc7 7a01 	vstr	s15, [r7, #4]
	integrator = integrator + (0.5*velo_Ki*dt*(error+prevError));
 8001e1c:	4b7f      	ldr	r3, [pc, #508]	; (800201c <CascadeController+0x55c>)
 8001e1e:	681b      	ldr	r3, [r3, #0]
 8001e20:	4618      	mov	r0, r3
 8001e22:	f7fe fb3d 	bl	80004a0 <__aeabi_f2d>
 8001e26:	4604      	mov	r4, r0
 8001e28:	460d      	mov	r5, r1
 8001e2a:	4b7d      	ldr	r3, [pc, #500]	; (8002020 <CascadeController+0x560>)
 8001e2c:	681b      	ldr	r3, [r3, #0]
 8001e2e:	4618      	mov	r0, r3
 8001e30:	f7fe fb36 	bl	80004a0 <__aeabi_f2d>
 8001e34:	f04f 0200 	mov.w	r2, #0
 8001e38:	4b7a      	ldr	r3, [pc, #488]	; (8002024 <CascadeController+0x564>)
 8001e3a:	f7fe fb89 	bl	8000550 <__aeabi_dmul>
 8001e3e:	4602      	mov	r2, r0
 8001e40:	460b      	mov	r3, r1
 8001e42:	4610      	mov	r0, r2
 8001e44:	4619      	mov	r1, r3
 8001e46:	a36c      	add	r3, pc, #432	; (adr r3, 8001ff8 <CascadeController+0x538>)
 8001e48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e4c:	f7fe fb80 	bl	8000550 <__aeabi_dmul>
 8001e50:	4602      	mov	r2, r0
 8001e52:	460b      	mov	r3, r1
 8001e54:	4690      	mov	r8, r2
 8001e56:	4699      	mov	r9, r3
 8001e58:	4b6e      	ldr	r3, [pc, #440]	; (8002014 <CascadeController+0x554>)
 8001e5a:	ed93 7a00 	vldr	s14, [r3]
 8001e5e:	4b72      	ldr	r3, [pc, #456]	; (8002028 <CascadeController+0x568>)
 8001e60:	edd3 7a00 	vldr	s15, [r3]
 8001e64:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001e68:	ee17 0a90 	vmov	r0, s15
 8001e6c:	f7fe fb18 	bl	80004a0 <__aeabi_f2d>
 8001e70:	4602      	mov	r2, r0
 8001e72:	460b      	mov	r3, r1
 8001e74:	4640      	mov	r0, r8
 8001e76:	4649      	mov	r1, r9
 8001e78:	f7fe fb6a 	bl	8000550 <__aeabi_dmul>
 8001e7c:	4602      	mov	r2, r0
 8001e7e:	460b      	mov	r3, r1
 8001e80:	4620      	mov	r0, r4
 8001e82:	4629      	mov	r1, r5
 8001e84:	f7fe f9ae 	bl	80001e4 <__adddf3>
 8001e88:	4602      	mov	r2, r0
 8001e8a:	460b      	mov	r3, r1
 8001e8c:	4610      	mov	r0, r2
 8001e8e:	4619      	mov	r1, r3
 8001e90:	f7fe fe2e 	bl	8000af0 <__aeabi_d2f>
 8001e94:	4603      	mov	r3, r0
 8001e96:	4a61      	ldr	r2, [pc, #388]	; (800201c <CascadeController+0x55c>)
 8001e98:	6013      	str	r3, [r2, #0]
	float limMinInt, limMaxInt;
	if(limMax > proportional){
 8001e9a:	4b64      	ldr	r3, [pc, #400]	; (800202c <CascadeController+0x56c>)
 8001e9c:	edd3 7a00 	vldr	s15, [r3]
 8001ea0:	ed97 7a01 	vldr	s14, [r7, #4]
 8001ea4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001ea8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001eac:	d509      	bpl.n	8001ec2 <CascadeController+0x402>
		limMaxInt = limMax - proportional;}
 8001eae:	4b5f      	ldr	r3, [pc, #380]	; (800202c <CascadeController+0x56c>)
 8001eb0:	ed93 7a00 	vldr	s14, [r3]
 8001eb4:	edd7 7a01 	vldr	s15, [r7, #4]
 8001eb8:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001ebc:	edc7 7a04 	vstr	s15, [r7, #16]
 8001ec0:	e002      	b.n	8001ec8 <CascadeController+0x408>
	else{
		limMaxInt = 0.0;}
 8001ec2:	f04f 0300 	mov.w	r3, #0
 8001ec6:	613b      	str	r3, [r7, #16]
	if(limMin < proportional){
 8001ec8:	4b59      	ldr	r3, [pc, #356]	; (8002030 <CascadeController+0x570>)
 8001eca:	edd3 7a00 	vldr	s15, [r3]
 8001ece:	ed97 7a01 	vldr	s14, [r7, #4]
 8001ed2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001ed6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001eda:	dd09      	ble.n	8001ef0 <CascadeController+0x430>
		limMinInt = limMin - proportional;}
 8001edc:	4b54      	ldr	r3, [pc, #336]	; (8002030 <CascadeController+0x570>)
 8001ede:	ed93 7a00 	vldr	s14, [r3]
 8001ee2:	edd7 7a01 	vldr	s15, [r7, #4]
 8001ee6:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001eea:	edc7 7a05 	vstr	s15, [r7, #20]
 8001eee:	e002      	b.n	8001ef6 <CascadeController+0x436>
	else{
		limMinInt = 0.0;}
 8001ef0:	f04f 0300 	mov.w	r3, #0
 8001ef4:	617b      	str	r3, [r7, #20]
	//Clamp integrator
	if(integrator > limMaxInt){
 8001ef6:	4b49      	ldr	r3, [pc, #292]	; (800201c <CascadeController+0x55c>)
 8001ef8:	edd3 7a00 	vldr	s15, [r3]
 8001efc:	ed97 7a04 	vldr	s14, [r7, #16]
 8001f00:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001f04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f08:	d503      	bpl.n	8001f12 <CascadeController+0x452>
		integrator = limMaxInt;}
 8001f0a:	4a44      	ldr	r2, [pc, #272]	; (800201c <CascadeController+0x55c>)
 8001f0c:	693b      	ldr	r3, [r7, #16]
 8001f0e:	6013      	str	r3, [r2, #0]
 8001f10:	e00c      	b.n	8001f2c <CascadeController+0x46c>
	else if(integrator < limMinInt){
 8001f12:	4b42      	ldr	r3, [pc, #264]	; (800201c <CascadeController+0x55c>)
 8001f14:	edd3 7a00 	vldr	s15, [r3]
 8001f18:	ed97 7a05 	vldr	s14, [r7, #20]
 8001f1c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001f20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f24:	dd02      	ble.n	8001f2c <CascadeController+0x46c>
		integrator = limMinInt;}
 8001f26:	4a3d      	ldr	r2, [pc, #244]	; (800201c <CascadeController+0x55c>)
 8001f28:	697b      	ldr	r3, [r7, #20]
 8001f2a:	6013      	str	r3, [r2, #0]

	//differentiator = (2*velo_Kd*(kal_velocity-prevMeasurement)+(2*tuaall-dt)*differentiator)/(2*tuaall+dt);
	differentiator = error - prevError;
 8001f2c:	4b39      	ldr	r3, [pc, #228]	; (8002014 <CascadeController+0x554>)
 8001f2e:	ed93 7a00 	vldr	s14, [r3]
 8001f32:	4b3d      	ldr	r3, [pc, #244]	; (8002028 <CascadeController+0x568>)
 8001f34:	edd3 7a00 	vldr	s15, [r3]
 8001f38:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001f3c:	4b3d      	ldr	r3, [pc, #244]	; (8002034 <CascadeController+0x574>)
 8001f3e:	edc3 7a00 	vstr	s15, [r3]
	volt_controller = proportional + integrator + (velo_Kd*differentiator);
 8001f42:	4b36      	ldr	r3, [pc, #216]	; (800201c <CascadeController+0x55c>)
 8001f44:	ed93 7a00 	vldr	s14, [r3]
 8001f48:	edd7 7a01 	vldr	s15, [r7, #4]
 8001f4c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001f50:	4b39      	ldr	r3, [pc, #228]	; (8002038 <CascadeController+0x578>)
 8001f52:	edd3 6a00 	vldr	s13, [r3]
 8001f56:	4b37      	ldr	r3, [pc, #220]	; (8002034 <CascadeController+0x574>)
 8001f58:	edd3 7a00 	vldr	s15, [r3]
 8001f5c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001f60:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001f64:	4b35      	ldr	r3, [pc, #212]	; (800203c <CascadeController+0x57c>)
 8001f66:	edc3 7a00 	vstr	s15, [r3]
	if(volt_controller > 12.0){
 8001f6a:	4b34      	ldr	r3, [pc, #208]	; (800203c <CascadeController+0x57c>)
 8001f6c:	edd3 7a00 	vldr	s15, [r3]
 8001f70:	eeb2 7a08 	vmov.f32	s14, #40	; 0x41400000  12.0
 8001f74:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001f78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f7c:	dd03      	ble.n	8001f86 <CascadeController+0x4c6>
		volt_controller = 12.0;}
 8001f7e:	4b2f      	ldr	r3, [pc, #188]	; (800203c <CascadeController+0x57c>)
 8001f80:	4a2f      	ldr	r2, [pc, #188]	; (8002040 <CascadeController+0x580>)
 8001f82:	601a      	str	r2, [r3, #0]
 8001f84:	e00c      	b.n	8001fa0 <CascadeController+0x4e0>
	else if(volt_controller < -12.0){
 8001f86:	4b2d      	ldr	r3, [pc, #180]	; (800203c <CascadeController+0x57c>)
 8001f88:	edd3 7a00 	vldr	s15, [r3]
 8001f8c:	eeba 7a08 	vmov.f32	s14, #168	; 0xc1400000 -12.0
 8001f90:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001f94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f98:	d502      	bpl.n	8001fa0 <CascadeController+0x4e0>
		volt_controller = -12.0;}
 8001f9a:	4b28      	ldr	r3, [pc, #160]	; (800203c <CascadeController+0x57c>)
 8001f9c:	4a29      	ldr	r2, [pc, #164]	; (8002044 <CascadeController+0x584>)
 8001f9e:	601a      	str	r2, [r3, #0]

	//PIDout = PIDout*10000/12.0;
	PIDout = (volt_inverse+volt_controller)*10000/12.0;
 8001fa0:	4b29      	ldr	r3, [pc, #164]	; (8002048 <CascadeController+0x588>)
 8001fa2:	ed93 7a00 	vldr	s14, [r3]
 8001fa6:	4b25      	ldr	r3, [pc, #148]	; (800203c <CascadeController+0x57c>)
 8001fa8:	edd3 7a00 	vldr	s15, [r3]
 8001fac:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001fb0:	ed9f 7a26 	vldr	s14, [pc, #152]	; 800204c <CascadeController+0x58c>
 8001fb4:	ee27 7a87 	vmul.f32	s14, s15, s14
 8001fb8:	eef2 6a08 	vmov.f32	s13, #40	; 0x41400000  12.0
 8001fbc:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001fc0:	4b23      	ldr	r3, [pc, #140]	; (8002050 <CascadeController+0x590>)
 8001fc2:	edc3 7a00 	vstr	s15, [r3]
			if(PIDout < 0){
				PIDout = 0;
			}
		}
	}*/
	prevError2 = error2;
 8001fc6:	4a23      	ldr	r2, [pc, #140]	; (8002054 <CascadeController+0x594>)
 8001fc8:	68fb      	ldr	r3, [r7, #12]
 8001fca:	6013      	str	r3, [r2, #0]
	prevMeasurement2 = current_rad_wrap;
 8001fcc:	4b22      	ldr	r3, [pc, #136]	; (8002058 <CascadeController+0x598>)
 8001fce:	681b      	ldr	r3, [r3, #0]
 8001fd0:	4a22      	ldr	r2, [pc, #136]	; (800205c <CascadeController+0x59c>)
 8001fd2:	6013      	str	r3, [r2, #0]
	prevError = error;
 8001fd4:	4b0f      	ldr	r3, [pc, #60]	; (8002014 <CascadeController+0x554>)
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	4a13      	ldr	r2, [pc, #76]	; (8002028 <CascadeController+0x568>)
 8001fda:	6013      	str	r3, [r2, #0]
	prevMeasurement = kal_velocity;
 8001fdc:	4b08      	ldr	r3, [pc, #32]	; (8002000 <CascadeController+0x540>)
 8001fde:	681b      	ldr	r3, [r3, #0]
 8001fe0:	4a1f      	ldr	r2, [pc, #124]	; (8002060 <CascadeController+0x5a0>)
 8001fe2:	6013      	str	r3, [r2, #0]
}
 8001fe4:	bf00      	nop
 8001fe6:	3720      	adds	r7, #32
 8001fe8:	46bd      	mov	sp, r7
 8001fea:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8001fee:	bf00      	nop
 8001ff0:	d97f62b7 	.word	0xd97f62b7
 8001ff4:	4023193d 	.word	0x4023193d
 8001ff8:	47ae147b 	.word	0x47ae147b
 8001ffc:	3f847ae1 	.word	0x3f847ae1
 8002000:	200005b0 	.word	0x200005b0
 8002004:	200005ec 	.word	0x200005ec
 8002008:	20000014 	.word	0x20000014
 800200c:	200005bc 	.word	0x200005bc
 8002010:	20000618 	.word	0x20000618
 8002014:	2000061c 	.word	0x2000061c
 8002018:	200004c4 	.word	0x200004c4
 800201c:	200005f4 	.word	0x200005f4
 8002020:	200004c8 	.word	0x200004c8
 8002024:	3fe00000 	.word	0x3fe00000
 8002028:	200005f8 	.word	0x200005f8
 800202c:	20000038 	.word	0x20000038
 8002030:	20000034 	.word	0x20000034
 8002034:	200005fc 	.word	0x200005fc
 8002038:	200004cc 	.word	0x200004cc
 800203c:	20000620 	.word	0x20000620
 8002040:	41400000 	.word	0x41400000
 8002044:	c1400000 	.word	0xc1400000
 8002048:	200007cc 	.word	0x200007cc
 800204c:	461c4000 	.word	0x461c4000
 8002050:	20000614 	.word	0x20000614
 8002054:	20000608 	.word	0x20000608
 8002058:	20000580 	.word	0x20000580
 800205c:	20000610 	.word	0x20000610
 8002060:	20000600 	.word	0x20000600

08002064 <reset>:

void reset()
{
 8002064:	b580      	push	{r7, lr}
 8002066:	af00      	add	r7, sp, #0
	tuaall = 0;
 8002068:	4b09      	ldr	r3, [pc, #36]	; (8002090 <reset+0x2c>)
 800206a:	f04f 0200 	mov.w	r2, #0
 800206e:	601a      	str	r2, [r3, #0]
	Drivemotor(0);
 8002070:	2000      	movs	r0, #0
 8002072:	f001 f85d 	bl	8003130 <Drivemotor>
	PIDon = 0;
 8002076:	4b07      	ldr	r3, [pc, #28]	; (8002094 <reset+0x30>)
 8002078:	2200      	movs	r2, #0
 800207a:	701a      	strb	r2, [r3, #0]
	PIDout = 0;
 800207c:	4b06      	ldr	r3, [pc, #24]	; (8002098 <reset+0x34>)
 800207e:	f04f 0200 	mov.w	r2, #0
 8002082:	601a      	str	r2, [r3, #0]
	finish = 0;
 8002084:	4b05      	ldr	r3, [pc, #20]	; (800209c <reset+0x38>)
 8002086:	f04f 0200 	mov.w	r2, #0
 800208a:	601a      	str	r2, [r3, #0]
}
 800208c:	bf00      	nop
 800208e:	bd80      	pop	{r7, pc}
 8002090:	200005d4 	.word	0x200005d4
 8002094:	200005e8 	.word	0x200005e8
 8002098:	20000614 	.word	0x20000614
 800209c:	200005f0 	.word	0x200005f0

080020a0 <set_home>:

void set_home()
{
 80020a0:	b580      	push	{r7, lr}
 80020a2:	af00      	add	r7, sp, #0
	  static uint64_t timeset2 = 0;
	  if (timeset2 < 500000) {
 80020a4:	4b32      	ldr	r3, [pc, #200]	; (8002170 <set_home+0xd0>)
 80020a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020aa:	4932      	ldr	r1, [pc, #200]	; (8002174 <set_home+0xd4>)
 80020ac:	428a      	cmp	r2, r1
 80020ae:	f173 0300 	sbcs.w	r3, r3, #0
 80020b2:	d203      	bcs.n	80020bc <set_home+0x1c>
		  Drivemotor(-2500);
 80020b4:	4830      	ldr	r0, [pc, #192]	; (8002178 <set_home+0xd8>)
 80020b6:	f001 f83b 	bl	8003130 <Drivemotor>
 80020ba:	e046      	b.n	800214a <set_home+0xaa>
		  ;}
	  else if (timeset2 < 1500000) {
 80020bc:	4b2c      	ldr	r3, [pc, #176]	; (8002170 <set_home+0xd0>)
 80020be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020c2:	492e      	ldr	r1, [pc, #184]	; (800217c <set_home+0xdc>)
 80020c4:	428a      	cmp	r2, r1
 80020c6:	f173 0300 	sbcs.w	r3, r3, #0
 80020ca:	d204      	bcs.n	80020d6 <set_home+0x36>
		  Drivemotor(2500);
 80020cc:	f640 10c4 	movw	r0, #2500	; 0x9c4
 80020d0:	f001 f82e 	bl	8003130 <Drivemotor>
 80020d4:	e039      	b.n	800214a <set_home+0xaa>
		  ;}
	  else{
		  postotra = 0 - current_rad_wrap;
 80020d6:	4b2a      	ldr	r3, [pc, #168]	; (8002180 <set_home+0xe0>)
 80020d8:	edd3 7a00 	vldr	s15, [r3]
 80020dc:	ed9f 7a29 	vldr	s14, [pc, #164]	; 8002184 <set_home+0xe4>
 80020e0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80020e4:	4b28      	ldr	r3, [pc, #160]	; (8002188 <set_home+0xe8>)
 80020e6:	edc3 7a00 	vstr	s15, [r3]
		  rad_before = current_rad_wrap;
 80020ea:	4b25      	ldr	r3, [pc, #148]	; (8002180 <set_home+0xe0>)
 80020ec:	681b      	ldr	r3, [r3, #0]
 80020ee:	4a27      	ldr	r2, [pc, #156]	; (800218c <set_home+0xec>)
 80020f0:	6013      	str	r3, [r2, #0]
		  Drivemotor(-2500);
 80020f2:	4821      	ldr	r0, [pc, #132]	; (8002178 <set_home+0xd8>)
 80020f4:	f001 f81c 	bl	8003130 <Drivemotor>
		  if(current_rad >= 1.55 && current_rad <= 1.6){
 80020f8:	4b25      	ldr	r3, [pc, #148]	; (8002190 <set_home+0xf0>)
 80020fa:	681b      	ldr	r3, [r3, #0]
 80020fc:	4618      	mov	r0, r3
 80020fe:	f7fe f9cf 	bl	80004a0 <__aeabi_f2d>
 8002102:	a317      	add	r3, pc, #92	; (adr r3, 8002160 <set_home+0xc0>)
 8002104:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002108:	f7fe fca8 	bl	8000a5c <__aeabi_dcmpge>
 800210c:	4603      	mov	r3, r0
 800210e:	2b00      	cmp	r3, #0
 8002110:	d01b      	beq.n	800214a <set_home+0xaa>
 8002112:	4b1f      	ldr	r3, [pc, #124]	; (8002190 <set_home+0xf0>)
 8002114:	681b      	ldr	r3, [r3, #0]
 8002116:	4618      	mov	r0, r3
 8002118:	f7fe f9c2 	bl	80004a0 <__aeabi_f2d>
 800211c:	a312      	add	r3, pc, #72	; (adr r3, 8002168 <set_home+0xc8>)
 800211e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002122:	f7fe fc91 	bl	8000a48 <__aeabi_dcmple>
 8002126:	4603      	mov	r3, r0
 8002128:	2b00      	cmp	r3, #0
 800212a:	d00e      	beq.n	800214a <set_home+0xaa>
			  Reached = 1;
 800212c:	4b19      	ldr	r3, [pc, #100]	; (8002194 <set_home+0xf4>)
 800212e:	2201      	movs	r2, #1
 8002130:	701a      	strb	r2, [r3, #0]
			  HMEtimeStamp = HAL_GetTick();
 8002132:	f002 fce1 	bl	8004af8 <HAL_GetTick>
 8002136:	4603      	mov	r3, r0
 8002138:	b29a      	uxth	r2, r3
 800213a:	4b17      	ldr	r3, [pc, #92]	; (8002198 <set_home+0xf8>)
 800213c:	801a      	strh	r2, [r3, #0]
			  setzero = 0;
 800213e:	4b17      	ldr	r3, [pc, #92]	; (800219c <set_home+0xfc>)
 8002140:	2200      	movs	r2, #0
 8002142:	701a      	strb	r2, [r3, #0]
			  Drivemotor(0);
 8002144:	2000      	movs	r0, #0
 8002146:	f000 fff3 	bl	8003130 <Drivemotor>
		  }
	  }
	  timeset2 = micros();
 800214a:	f001 fb43 	bl	80037d4 <micros>
 800214e:	4602      	mov	r2, r0
 8002150:	460b      	mov	r3, r1
 8002152:	4907      	ldr	r1, [pc, #28]	; (8002170 <set_home+0xd0>)
 8002154:	e9c1 2300 	strd	r2, r3, [r1]
}
 8002158:	bf00      	nop
 800215a:	bd80      	pop	{r7, pc}
 800215c:	f3af 8000 	nop.w
 8002160:	cccccccd 	.word	0xcccccccd
 8002164:	3ff8cccc 	.word	0x3ff8cccc
 8002168:	9999999a 	.word	0x9999999a
 800216c:	3ff99999 	.word	0x3ff99999
 8002170:	20000800 	.word	0x20000800
 8002174:	0007a120 	.word	0x0007a120
 8002178:	fffff63c 	.word	0xfffff63c
 800217c:	0016e360 	.word	0x0016e360
 8002180:	20000580 	.word	0x20000580
 8002184:	00000000 	.word	0x00000000
 8002188:	200005dc 	.word	0x200005dc
 800218c:	200005e0 	.word	0x200005e0
 8002190:	2000057c 	.word	0x2000057c
 8002194:	2000053b 	.word	0x2000053b
 8002198:	2000056c 	.word	0x2000056c
 800219c:	2000000c 	.word	0x2000000c

080021a0 <MoveToStation>:

void MoveToStation()
{
 80021a0:	b580      	push	{r7, lr}
 80021a2:	af00      	add	r7, sp, #0
	  topOmega = 0;
 80021a4:	4b54      	ldr	r3, [pc, #336]	; (80022f8 <MoveToStation+0x158>)
 80021a6:	f04f 0200 	mov.w	r2, #0
 80021aa:	601a      	str	r2, [r3, #0]
	  if(firstcheck == 1){
 80021ac:	4b53      	ldr	r3, [pc, #332]	; (80022fc <MoveToStation+0x15c>)
 80021ae:	edd3 7a00 	vldr	s15, [r3]
 80021b2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80021b6:	eef4 7a47 	vcmp.f32	s15, s14
 80021ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80021be:	d150      	bne.n	8002262 <MoveToStation+0xc2>
		  if(Destination[n] != 0){
 80021c0:	4b4f      	ldr	r3, [pc, #316]	; (8002300 <MoveToStation+0x160>)
 80021c2:	781b      	ldrb	r3, [r3, #0]
 80021c4:	461a      	mov	r2, r3
 80021c6:	4b4f      	ldr	r3, [pc, #316]	; (8002304 <MoveToStation+0x164>)
 80021c8:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80021cc:	2b00      	cmp	r3, #0
 80021ce:	f000 808b 	beq.w	80022e8 <MoveToStation+0x148>
			  inputpos = Destination[n]/57.2957795;
 80021d2:	4b4b      	ldr	r3, [pc, #300]	; (8002300 <MoveToStation+0x160>)
 80021d4:	781b      	ldrb	r3, [r3, #0]
 80021d6:	461a      	mov	r2, r3
 80021d8:	4b4a      	ldr	r3, [pc, #296]	; (8002304 <MoveToStation+0x164>)
 80021da:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80021de:	4618      	mov	r0, r3
 80021e0:	f7fe f94c 	bl	800047c <__aeabi_i2d>
 80021e4:	a342      	add	r3, pc, #264	; (adr r3, 80022f0 <MoveToStation+0x150>)
 80021e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80021ea:	f7fe fadb 	bl	80007a4 <__aeabi_ddiv>
 80021ee:	4602      	mov	r2, r0
 80021f0:	460b      	mov	r3, r1
 80021f2:	4610      	mov	r0, r2
 80021f4:	4619      	mov	r1, r3
 80021f6:	f7fe fc7b 	bl	8000af0 <__aeabi_d2f>
 80021fa:	4603      	mov	r3, r0
 80021fc:	4a42      	ldr	r2, [pc, #264]	; (8002308 <MoveToStation+0x168>)
 80021fe:	6013      	str	r3, [r2, #0]
			  postotra = inputpos-current_rad_wrap;
 8002200:	4b41      	ldr	r3, [pc, #260]	; (8002308 <MoveToStation+0x168>)
 8002202:	ed93 7a00 	vldr	s14, [r3]
 8002206:	4b41      	ldr	r3, [pc, #260]	; (800230c <MoveToStation+0x16c>)
 8002208:	edd3 7a00 	vldr	s15, [r3]
 800220c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002210:	4b3f      	ldr	r3, [pc, #252]	; (8002310 <MoveToStation+0x170>)
 8002212:	edc3 7a00 	vstr	s15, [r3]
			  rad_before = current_rad_wrap;
 8002216:	4b3d      	ldr	r3, [pc, #244]	; (800230c <MoveToStation+0x16c>)
 8002218:	681b      	ldr	r3, [r3, #0]
 800221a:	4a3e      	ldr	r2, [pc, #248]	; (8002314 <MoveToStation+0x174>)
 800221c:	6013      	str	r3, [r2, #0]
			  if(postotra >= 0){
 800221e:	4b3c      	ldr	r3, [pc, #240]	; (8002310 <MoveToStation+0x170>)
 8002220:	edd3 7a00 	vldr	s15, [r3]
 8002224:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002228:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800222c:	db03      	blt.n	8002236 <MoveToStation+0x96>
				  direct = 1;}
 800222e:	4b3a      	ldr	r3, [pc, #232]	; (8002318 <MoveToStation+0x178>)
 8002230:	2201      	movs	r2, #1
 8002232:	701a      	strb	r2, [r3, #0]
 8002234:	e00a      	b.n	800224c <MoveToStation+0xac>
			  else{
				  postotra = postotra*-1;
 8002236:	4b36      	ldr	r3, [pc, #216]	; (8002310 <MoveToStation+0x170>)
 8002238:	edd3 7a00 	vldr	s15, [r3]
 800223c:	eef1 7a67 	vneg.f32	s15, s15
 8002240:	4b33      	ldr	r3, [pc, #204]	; (8002310 <MoveToStation+0x170>)
 8002242:	edc3 7a00 	vstr	s15, [r3]
				  direct = 0;}
 8002246:	4b34      	ldr	r3, [pc, #208]	; (8002318 <MoveToStation+0x178>)
 8002248:	2200      	movs	r2, #0
 800224a:	701a      	strb	r2, [r3, #0]
			  State = Working;
 800224c:	4b33      	ldr	r3, [pc, #204]	; (800231c <MoveToStation+0x17c>)
 800224e:	2201      	movs	r2, #1
 8002250:	701a      	strb	r2, [r3, #0]
			  firstcheck = 0;
 8002252:	4b2a      	ldr	r3, [pc, #168]	; (80022fc <MoveToStation+0x15c>)
 8002254:	f04f 0200 	mov.w	r2, #0
 8002258:	601a      	str	r2, [r3, #0]
			  update = 0;
 800225a:	4b31      	ldr	r3, [pc, #196]	; (8002320 <MoveToStation+0x180>)
 800225c:	2200      	movs	r2, #0
 800225e:	701a      	strb	r2, [r3, #0]
			  postotra = postotra*-1;
			  direct = 0;}
		  State = Working;
		  update = 0;
	  }
}
 8002260:	e042      	b.n	80022e8 <MoveToStation+0x148>
		  inputpos = Destination[n]/57.2957795;
 8002262:	4b27      	ldr	r3, [pc, #156]	; (8002300 <MoveToStation+0x160>)
 8002264:	781b      	ldrb	r3, [r3, #0]
 8002266:	461a      	mov	r2, r3
 8002268:	4b26      	ldr	r3, [pc, #152]	; (8002304 <MoveToStation+0x164>)
 800226a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800226e:	4618      	mov	r0, r3
 8002270:	f7fe f904 	bl	800047c <__aeabi_i2d>
 8002274:	a31e      	add	r3, pc, #120	; (adr r3, 80022f0 <MoveToStation+0x150>)
 8002276:	e9d3 2300 	ldrd	r2, r3, [r3]
 800227a:	f7fe fa93 	bl	80007a4 <__aeabi_ddiv>
 800227e:	4602      	mov	r2, r0
 8002280:	460b      	mov	r3, r1
 8002282:	4610      	mov	r0, r2
 8002284:	4619      	mov	r1, r3
 8002286:	f7fe fc33 	bl	8000af0 <__aeabi_d2f>
 800228a:	4603      	mov	r3, r0
 800228c:	4a1e      	ldr	r2, [pc, #120]	; (8002308 <MoveToStation+0x168>)
 800228e:	6013      	str	r3, [r2, #0]
		  postotra = inputpos-current_rad_wrap;
 8002290:	4b1d      	ldr	r3, [pc, #116]	; (8002308 <MoveToStation+0x168>)
 8002292:	ed93 7a00 	vldr	s14, [r3]
 8002296:	4b1d      	ldr	r3, [pc, #116]	; (800230c <MoveToStation+0x16c>)
 8002298:	edd3 7a00 	vldr	s15, [r3]
 800229c:	ee77 7a67 	vsub.f32	s15, s14, s15
 80022a0:	4b1b      	ldr	r3, [pc, #108]	; (8002310 <MoveToStation+0x170>)
 80022a2:	edc3 7a00 	vstr	s15, [r3]
		  rad_before = current_rad_wrap;
 80022a6:	4b19      	ldr	r3, [pc, #100]	; (800230c <MoveToStation+0x16c>)
 80022a8:	681b      	ldr	r3, [r3, #0]
 80022aa:	4a1a      	ldr	r2, [pc, #104]	; (8002314 <MoveToStation+0x174>)
 80022ac:	6013      	str	r3, [r2, #0]
		  if(postotra >= 0){
 80022ae:	4b18      	ldr	r3, [pc, #96]	; (8002310 <MoveToStation+0x170>)
 80022b0:	edd3 7a00 	vldr	s15, [r3]
 80022b4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80022b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80022bc:	db03      	blt.n	80022c6 <MoveToStation+0x126>
			  direct = 1;}
 80022be:	4b16      	ldr	r3, [pc, #88]	; (8002318 <MoveToStation+0x178>)
 80022c0:	2201      	movs	r2, #1
 80022c2:	701a      	strb	r2, [r3, #0]
 80022c4:	e00a      	b.n	80022dc <MoveToStation+0x13c>
			  postotra = postotra*-1;
 80022c6:	4b12      	ldr	r3, [pc, #72]	; (8002310 <MoveToStation+0x170>)
 80022c8:	edd3 7a00 	vldr	s15, [r3]
 80022cc:	eef1 7a67 	vneg.f32	s15, s15
 80022d0:	4b0f      	ldr	r3, [pc, #60]	; (8002310 <MoveToStation+0x170>)
 80022d2:	edc3 7a00 	vstr	s15, [r3]
			  direct = 0;}
 80022d6:	4b10      	ldr	r3, [pc, #64]	; (8002318 <MoveToStation+0x178>)
 80022d8:	2200      	movs	r2, #0
 80022da:	701a      	strb	r2, [r3, #0]
		  State = Working;
 80022dc:	4b0f      	ldr	r3, [pc, #60]	; (800231c <MoveToStation+0x17c>)
 80022de:	2201      	movs	r2, #1
 80022e0:	701a      	strb	r2, [r3, #0]
		  update = 0;
 80022e2:	4b0f      	ldr	r3, [pc, #60]	; (8002320 <MoveToStation+0x180>)
 80022e4:	2200      	movs	r2, #0
 80022e6:	701a      	strb	r2, [r3, #0]
}
 80022e8:	bf00      	nop
 80022ea:	bd80      	pop	{r7, pc}
 80022ec:	f3af 8000 	nop.w
 80022f0:	1a47a9e3 	.word	0x1a47a9e3
 80022f4:	404ca5dc 	.word	0x404ca5dc
 80022f8:	20000544 	.word	0x20000544
 80022fc:	20000030 	.word	0x20000030
 8002300:	20000548 	.word	0x20000548
 8002304:	200004d4 	.word	0x200004d4
 8002308:	200005d8 	.word	0x200005d8
 800230c:	20000580 	.word	0x20000580
 8002310:	200005dc 	.word	0x200005dc
 8002314:	200005e0 	.word	0x200005e0
 8002318:	2000002c 	.word	0x2000002c
 800231c:	200005e7 	.word	0x200005e7
 8002320:	200005e4 	.word	0x200005e4
 8002324:	00000000 	.word	0x00000000

08002328 <inverse_tran>:

void inverse_tran(){
 8002328:	b5b0      	push	{r4, r5, r7, lr}
 800232a:	af00      	add	r7, sp, #0
	x_n = tra_velo;
 800232c:	4b3a      	ldr	r3, [pc, #232]	; (8002418 <inverse_tran+0xf0>)
 800232e:	681b      	ldr	r3, [r3, #0]
 8002330:	4a3a      	ldr	r2, [pc, #232]	; (800241c <inverse_tran+0xf4>)
 8002332:	6013      	str	r3, [r2, #0]
	volt_inverse = (x_n - (0.9724*x_n_1) + (0.003346*x_n_2) - (0.0004612*y_n_1))/0.002803;
 8002334:	4b39      	ldr	r3, [pc, #228]	; (800241c <inverse_tran+0xf4>)
 8002336:	681b      	ldr	r3, [r3, #0]
 8002338:	4618      	mov	r0, r3
 800233a:	f7fe f8b1 	bl	80004a0 <__aeabi_f2d>
 800233e:	4604      	mov	r4, r0
 8002340:	460d      	mov	r5, r1
 8002342:	4b37      	ldr	r3, [pc, #220]	; (8002420 <inverse_tran+0xf8>)
 8002344:	681b      	ldr	r3, [r3, #0]
 8002346:	4618      	mov	r0, r3
 8002348:	f7fe f8aa 	bl	80004a0 <__aeabi_f2d>
 800234c:	a32a      	add	r3, pc, #168	; (adr r3, 80023f8 <inverse_tran+0xd0>)
 800234e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002352:	f7fe f8fd 	bl	8000550 <__aeabi_dmul>
 8002356:	4602      	mov	r2, r0
 8002358:	460b      	mov	r3, r1
 800235a:	4620      	mov	r0, r4
 800235c:	4629      	mov	r1, r5
 800235e:	f7fd ff3f 	bl	80001e0 <__aeabi_dsub>
 8002362:	4602      	mov	r2, r0
 8002364:	460b      	mov	r3, r1
 8002366:	4614      	mov	r4, r2
 8002368:	461d      	mov	r5, r3
 800236a:	4b2e      	ldr	r3, [pc, #184]	; (8002424 <inverse_tran+0xfc>)
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	4618      	mov	r0, r3
 8002370:	f7fe f896 	bl	80004a0 <__aeabi_f2d>
 8002374:	a322      	add	r3, pc, #136	; (adr r3, 8002400 <inverse_tran+0xd8>)
 8002376:	e9d3 2300 	ldrd	r2, r3, [r3]
 800237a:	f7fe f8e9 	bl	8000550 <__aeabi_dmul>
 800237e:	4602      	mov	r2, r0
 8002380:	460b      	mov	r3, r1
 8002382:	4620      	mov	r0, r4
 8002384:	4629      	mov	r1, r5
 8002386:	f7fd ff2d 	bl	80001e4 <__adddf3>
 800238a:	4602      	mov	r2, r0
 800238c:	460b      	mov	r3, r1
 800238e:	4614      	mov	r4, r2
 8002390:	461d      	mov	r5, r3
 8002392:	4b25      	ldr	r3, [pc, #148]	; (8002428 <inverse_tran+0x100>)
 8002394:	681b      	ldr	r3, [r3, #0]
 8002396:	4618      	mov	r0, r3
 8002398:	f7fe f882 	bl	80004a0 <__aeabi_f2d>
 800239c:	a31a      	add	r3, pc, #104	; (adr r3, 8002408 <inverse_tran+0xe0>)
 800239e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023a2:	f7fe f8d5 	bl	8000550 <__aeabi_dmul>
 80023a6:	4602      	mov	r2, r0
 80023a8:	460b      	mov	r3, r1
 80023aa:	4620      	mov	r0, r4
 80023ac:	4629      	mov	r1, r5
 80023ae:	f7fd ff17 	bl	80001e0 <__aeabi_dsub>
 80023b2:	4602      	mov	r2, r0
 80023b4:	460b      	mov	r3, r1
 80023b6:	4610      	mov	r0, r2
 80023b8:	4619      	mov	r1, r3
 80023ba:	a315      	add	r3, pc, #84	; (adr r3, 8002410 <inverse_tran+0xe8>)
 80023bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023c0:	f7fe f9f0 	bl	80007a4 <__aeabi_ddiv>
 80023c4:	4602      	mov	r2, r0
 80023c6:	460b      	mov	r3, r1
 80023c8:	4610      	mov	r0, r2
 80023ca:	4619      	mov	r1, r3
 80023cc:	f7fe fb90 	bl	8000af0 <__aeabi_d2f>
 80023d0:	4603      	mov	r3, r0
 80023d2:	4a16      	ldr	r2, [pc, #88]	; (800242c <inverse_tran+0x104>)
 80023d4:	6013      	str	r3, [r2, #0]
	x_n_2 = x_n_1;
 80023d6:	4b12      	ldr	r3, [pc, #72]	; (8002420 <inverse_tran+0xf8>)
 80023d8:	681b      	ldr	r3, [r3, #0]
 80023da:	4a12      	ldr	r2, [pc, #72]	; (8002424 <inverse_tran+0xfc>)
 80023dc:	6013      	str	r3, [r2, #0]
	x_n_1 = x_n;
 80023de:	4b0f      	ldr	r3, [pc, #60]	; (800241c <inverse_tran+0xf4>)
 80023e0:	681b      	ldr	r3, [r3, #0]
 80023e2:	4a0f      	ldr	r2, [pc, #60]	; (8002420 <inverse_tran+0xf8>)
 80023e4:	6013      	str	r3, [r2, #0]
	y_n_1 = volt_inverse;
 80023e6:	4b11      	ldr	r3, [pc, #68]	; (800242c <inverse_tran+0x104>)
 80023e8:	681b      	ldr	r3, [r3, #0]
 80023ea:	4a0f      	ldr	r2, [pc, #60]	; (8002428 <inverse_tran+0x100>)
 80023ec:	6013      	str	r3, [r2, #0]
}
 80023ee:	bf00      	nop
 80023f0:	bdb0      	pop	{r4, r5, r7, pc}
 80023f2:	bf00      	nop
 80023f4:	f3af 8000 	nop.w
 80023f8:	9ad42c3d 	.word	0x9ad42c3d
 80023fc:	3fef1de6 	.word	0x3fef1de6
 8002400:	12513b5c 	.word	0x12513b5c
 8002404:	3f6b6912 	.word	0x3f6b6912
 8002408:	eabaf45d 	.word	0xeabaf45d
 800240c:	3f3e39a6 	.word	0x3f3e39a6
 8002410:	2a94ff00 	.word	0x2a94ff00
 8002414:	3f66f651 	.word	0x3f66f651
 8002418:	200005bc 	.word	0x200005bc
 800241c:	200007d0 	.word	0x200007d0
 8002420:	200007d4 	.word	0x200007d4
 8002424:	200007d8 	.word	0x200007d8
 8002428:	200007dc 	.word	0x200007dc
 800242c:	200007cc 	.word	0x200007cc

08002430 <lowpass>:
void lowpass()
{
 8002430:	b5b0      	push	{r4, r5, r7, lr}
 8002432:	af00      	add	r7, sp, #0
	velo_lowpass = 0.99529869*velo_lowpass + 0.00235066*kal_velocity + 0.00235066*prevlowpass;
 8002434:	4b48      	ldr	r3, [pc, #288]	; (8002558 <lowpass+0x128>)
 8002436:	681b      	ldr	r3, [r3, #0]
 8002438:	4618      	mov	r0, r3
 800243a:	f7fe f831 	bl	80004a0 <__aeabi_f2d>
 800243e:	a33e      	add	r3, pc, #248	; (adr r3, 8002538 <lowpass+0x108>)
 8002440:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002444:	f7fe f884 	bl	8000550 <__aeabi_dmul>
 8002448:	4602      	mov	r2, r0
 800244a:	460b      	mov	r3, r1
 800244c:	4614      	mov	r4, r2
 800244e:	461d      	mov	r5, r3
 8002450:	4b42      	ldr	r3, [pc, #264]	; (800255c <lowpass+0x12c>)
 8002452:	681b      	ldr	r3, [r3, #0]
 8002454:	4618      	mov	r0, r3
 8002456:	f7fe f823 	bl	80004a0 <__aeabi_f2d>
 800245a:	a339      	add	r3, pc, #228	; (adr r3, 8002540 <lowpass+0x110>)
 800245c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002460:	f7fe f876 	bl	8000550 <__aeabi_dmul>
 8002464:	4602      	mov	r2, r0
 8002466:	460b      	mov	r3, r1
 8002468:	4620      	mov	r0, r4
 800246a:	4629      	mov	r1, r5
 800246c:	f7fd feba 	bl	80001e4 <__adddf3>
 8002470:	4602      	mov	r2, r0
 8002472:	460b      	mov	r3, r1
 8002474:	4614      	mov	r4, r2
 8002476:	461d      	mov	r5, r3
 8002478:	4b39      	ldr	r3, [pc, #228]	; (8002560 <lowpass+0x130>)
 800247a:	681b      	ldr	r3, [r3, #0]
 800247c:	4618      	mov	r0, r3
 800247e:	f7fe f80f 	bl	80004a0 <__aeabi_f2d>
 8002482:	a32f      	add	r3, pc, #188	; (adr r3, 8002540 <lowpass+0x110>)
 8002484:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002488:	f7fe f862 	bl	8000550 <__aeabi_dmul>
 800248c:	4602      	mov	r2, r0
 800248e:	460b      	mov	r3, r1
 8002490:	4620      	mov	r0, r4
 8002492:	4629      	mov	r1, r5
 8002494:	f7fd fea6 	bl	80001e4 <__adddf3>
 8002498:	4602      	mov	r2, r0
 800249a:	460b      	mov	r3, r1
 800249c:	4610      	mov	r0, r2
 800249e:	4619      	mov	r1, r3
 80024a0:	f7fe fb26 	bl	8000af0 <__aeabi_d2f>
 80024a4:	4603      	mov	r3, r0
 80024a6:	4a2c      	ldr	r2, [pc, #176]	; (8002558 <lowpass+0x128>)
 80024a8:	6013      	str	r3, [r2, #0]
	prevlowpass = kal_velocity;
 80024aa:	4b2c      	ldr	r3, [pc, #176]	; (800255c <lowpass+0x12c>)
 80024ac:	681b      	ldr	r3, [r3, #0]
 80024ae:	4a2c      	ldr	r2, [pc, #176]	; (8002560 <lowpass+0x130>)
 80024b0:	6013      	str	r3, [r2, #0]
	pos_lowpass = 0.96906992*pos_lowpass + 0.01546504*current_rad_wrap + 0.01546504*prevposlowpass;
 80024b2:	4b2c      	ldr	r3, [pc, #176]	; (8002564 <lowpass+0x134>)
 80024b4:	681b      	ldr	r3, [r3, #0]
 80024b6:	4618      	mov	r0, r3
 80024b8:	f7fd fff2 	bl	80004a0 <__aeabi_f2d>
 80024bc:	a322      	add	r3, pc, #136	; (adr r3, 8002548 <lowpass+0x118>)
 80024be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024c2:	f7fe f845 	bl	8000550 <__aeabi_dmul>
 80024c6:	4602      	mov	r2, r0
 80024c8:	460b      	mov	r3, r1
 80024ca:	4614      	mov	r4, r2
 80024cc:	461d      	mov	r5, r3
 80024ce:	4b26      	ldr	r3, [pc, #152]	; (8002568 <lowpass+0x138>)
 80024d0:	681b      	ldr	r3, [r3, #0]
 80024d2:	4618      	mov	r0, r3
 80024d4:	f7fd ffe4 	bl	80004a0 <__aeabi_f2d>
 80024d8:	a31d      	add	r3, pc, #116	; (adr r3, 8002550 <lowpass+0x120>)
 80024da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024de:	f7fe f837 	bl	8000550 <__aeabi_dmul>
 80024e2:	4602      	mov	r2, r0
 80024e4:	460b      	mov	r3, r1
 80024e6:	4620      	mov	r0, r4
 80024e8:	4629      	mov	r1, r5
 80024ea:	f7fd fe7b 	bl	80001e4 <__adddf3>
 80024ee:	4602      	mov	r2, r0
 80024f0:	460b      	mov	r3, r1
 80024f2:	4614      	mov	r4, r2
 80024f4:	461d      	mov	r5, r3
 80024f6:	4b1d      	ldr	r3, [pc, #116]	; (800256c <lowpass+0x13c>)
 80024f8:	681b      	ldr	r3, [r3, #0]
 80024fa:	4618      	mov	r0, r3
 80024fc:	f7fd ffd0 	bl	80004a0 <__aeabi_f2d>
 8002500:	a313      	add	r3, pc, #76	; (adr r3, 8002550 <lowpass+0x120>)
 8002502:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002506:	f7fe f823 	bl	8000550 <__aeabi_dmul>
 800250a:	4602      	mov	r2, r0
 800250c:	460b      	mov	r3, r1
 800250e:	4620      	mov	r0, r4
 8002510:	4629      	mov	r1, r5
 8002512:	f7fd fe67 	bl	80001e4 <__adddf3>
 8002516:	4602      	mov	r2, r0
 8002518:	460b      	mov	r3, r1
 800251a:	4610      	mov	r0, r2
 800251c:	4619      	mov	r1, r3
 800251e:	f7fe fae7 	bl	8000af0 <__aeabi_d2f>
 8002522:	4603      	mov	r3, r0
 8002524:	4a0f      	ldr	r2, [pc, #60]	; (8002564 <lowpass+0x134>)
 8002526:	6013      	str	r3, [r2, #0]
	prevposlowpass = current_rad_wrap;
 8002528:	4b0f      	ldr	r3, [pc, #60]	; (8002568 <lowpass+0x138>)
 800252a:	681b      	ldr	r3, [r3, #0]
 800252c:	4a0f      	ldr	r2, [pc, #60]	; (800256c <lowpass+0x13c>)
 800252e:	6013      	str	r3, [r2, #0]
}
 8002530:	bf00      	nop
 8002532:	bdb0      	pop	{r4, r5, r7, pc}
 8002534:	f3af 8000 	nop.w
 8002538:	a369a70e 	.word	0xa369a70e
 800253c:	3fefd97c 	.word	0x3fefd97c
 8002540:	fa5e5576 	.word	0xfa5e5576
 8002544:	3f6341b0 	.word	0x3f6341b0
 8002548:	ebbdfea9 	.word	0xebbdfea9
 800254c:	3fef029e 	.word	0x3fef029e
 8002550:	88402ae8 	.word	0x88402ae8
 8002554:	3f8fac22 	.word	0x3f8fac22
 8002558:	200007b0 	.word	0x200007b0
 800255c:	200005b0 	.word	0x200005b0
 8002560:	200007b4 	.word	0x200007b4
 8002564:	200007c0 	.word	0x200007c0
 8002568:	20000580 	.word	0x20000580
 800256c:	200007c4 	.word	0x200007c4

08002570 <Diff_velo>:
void Diff_velo(){
 8002570:	b580      	push	{r7, lr}
 8002572:	af00      	add	r7, sp, #0
	velo_diff =  (pos_lowpass - prevPos)/dt;
 8002574:	4b14      	ldr	r3, [pc, #80]	; (80025c8 <Diff_velo+0x58>)
 8002576:	ed93 7a00 	vldr	s14, [r3]
 800257a:	4b14      	ldr	r3, [pc, #80]	; (80025cc <Diff_velo+0x5c>)
 800257c:	edd3 7a00 	vldr	s15, [r3]
 8002580:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002584:	ee17 0a90 	vmov	r0, s15
 8002588:	f7fd ff8a 	bl	80004a0 <__aeabi_f2d>
 800258c:	a30c      	add	r3, pc, #48	; (adr r3, 80025c0 <Diff_velo+0x50>)
 800258e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002592:	f7fe f907 	bl	80007a4 <__aeabi_ddiv>
 8002596:	4602      	mov	r2, r0
 8002598:	460b      	mov	r3, r1
 800259a:	4610      	mov	r0, r2
 800259c:	4619      	mov	r1, r3
 800259e:	f7fe faa7 	bl	8000af0 <__aeabi_d2f>
 80025a2:	4603      	mov	r3, r0
 80025a4:	4a0a      	ldr	r2, [pc, #40]	; (80025d0 <Diff_velo+0x60>)
 80025a6:	6013      	str	r3, [r2, #0]
	//velo_diff2 = (current_rad_wrap -  prevPos2)/dt;
	DegAbs[0][0] = velo_diff;
 80025a8:	4b09      	ldr	r3, [pc, #36]	; (80025d0 <Diff_velo+0x60>)
 80025aa:	681b      	ldr	r3, [r3, #0]
 80025ac:	4a09      	ldr	r2, [pc, #36]	; (80025d4 <Diff_velo+0x64>)
 80025ae:	6013      	str	r3, [r2, #0]
	prevPos = pos_lowpass;
 80025b0:	4b05      	ldr	r3, [pc, #20]	; (80025c8 <Diff_velo+0x58>)
 80025b2:	681b      	ldr	r3, [r3, #0]
 80025b4:	4a05      	ldr	r2, [pc, #20]	; (80025cc <Diff_velo+0x5c>)
 80025b6:	6013      	str	r3, [r2, #0]
}
 80025b8:	bf00      	nop
 80025ba:	bd80      	pop	{r7, pc}
 80025bc:	f3af 8000 	nop.w
 80025c0:	47ae147b 	.word	0x47ae147b
 80025c4:	3f847ae1 	.word	0x3f847ae1
 80025c8:	200007c0 	.word	0x200007c0
 80025cc:	200007bc 	.word	0x200007bc
 80025d0:	200007b8 	.word	0x200007b8
 80025d4:	20000624 	.word	0x20000624

080025d8 <Kalman_filter>:
void Kalman_filter()
{
 80025d8:	b580      	push	{r7, lr}
 80025da:	b082      	sub	sp, #8
 80025dc:	af02      	add	r7, sp, #8
	prediction(X_hat_t,P_t,F_t,Q_t);
 80025de:	4b14      	ldr	r3, [pc, #80]	; (8002630 <Kalman_filter+0x58>)
 80025e0:	4a14      	ldr	r2, [pc, #80]	; (8002634 <Kalman_filter+0x5c>)
 80025e2:	4915      	ldr	r1, [pc, #84]	; (8002638 <Kalman_filter+0x60>)
 80025e4:	4815      	ldr	r0, [pc, #84]	; (800263c <Kalman_filter+0x64>)
 80025e6:	f000 f83b 	bl	8002660 <prediction>
	Update(X_hat_t,P_hat_t,DegAbs,R_t,H_t);
 80025ea:	4b15      	ldr	r3, [pc, #84]	; (8002640 <Kalman_filter+0x68>)
 80025ec:	9300      	str	r3, [sp, #0]
 80025ee:	4b15      	ldr	r3, [pc, #84]	; (8002644 <Kalman_filter+0x6c>)
 80025f0:	4a15      	ldr	r2, [pc, #84]	; (8002648 <Kalman_filter+0x70>)
 80025f2:	4916      	ldr	r1, [pc, #88]	; (800264c <Kalman_filter+0x74>)
 80025f4:	4811      	ldr	r0, [pc, #68]	; (800263c <Kalman_filter+0x64>)
 80025f6:	f000 f889 	bl	800270c <Update>
	kal_position = X_t[0][0];
 80025fa:	4b15      	ldr	r3, [pc, #84]	; (8002650 <Kalman_filter+0x78>)
 80025fc:	681b      	ldr	r3, [r3, #0]
 80025fe:	4a15      	ldr	r2, [pc, #84]	; (8002654 <Kalman_filter+0x7c>)
 8002600:	6013      	str	r3, [r2, #0]
	kal_velocity = X_t[1][0];
 8002602:	4b13      	ldr	r3, [pc, #76]	; (8002650 <Kalman_filter+0x78>)
 8002604:	68db      	ldr	r3, [r3, #12]
 8002606:	4a14      	ldr	r2, [pc, #80]	; (8002658 <Kalman_filter+0x80>)
 8002608:	6013      	str	r3, [r2, #0]
	kal_acceleration = X_t[2][0];
 800260a:	4b11      	ldr	r3, [pc, #68]	; (8002650 <Kalman_filter+0x78>)
 800260c:	699b      	ldr	r3, [r3, #24]
 800260e:	4a13      	ldr	r2, [pc, #76]	; (800265c <Kalman_filter+0x84>)
 8002610:	6013      	str	r3, [r2, #0]
	equal(X_hat_t,X_t,3,3);  //X_hat_t = X_t
 8002612:	2303      	movs	r3, #3
 8002614:	2203      	movs	r2, #3
 8002616:	490e      	ldr	r1, [pc, #56]	; (8002650 <Kalman_filter+0x78>)
 8002618:	4808      	ldr	r0, [pc, #32]	; (800263c <Kalman_filter+0x64>)
 800261a:	f000 fa79 	bl	8002b10 <equal>
	equal(P_hat_t,P_t,3,3); //P_hat_t = P_t
 800261e:	2303      	movs	r3, #3
 8002620:	2203      	movs	r2, #3
 8002622:	4905      	ldr	r1, [pc, #20]	; (8002638 <Kalman_filter+0x60>)
 8002624:	4809      	ldr	r0, [pc, #36]	; (800264c <Kalman_filter+0x74>)
 8002626:	f000 fa73 	bl	8002b10 <equal>
}
 800262a:	bf00      	nop
 800262c:	46bd      	mov	sp, r7
 800262e:	bd80      	pop	{r7, pc}
 8002630:	20000114 	.word	0x20000114
 8002634:	20000060 	.word	0x20000060
 8002638:	20000768 	.word	0x20000768
 800263c:	20000744 	.word	0x20000744
 8002640:	200000a8 	.word	0x200000a8
 8002644:	200000f0 	.word	0x200000f0
 8002648:	20000624 	.word	0x20000624
 800264c:	2000078c 	.word	0x2000078c
 8002650:	20000720 	.word	0x20000720
 8002654:	200005ac 	.word	0x200005ac
 8002658:	200005b0 	.word	0x200005b0
 800265c:	200005b4 	.word	0x200005b4

08002660 <prediction>:
void prediction(X_hat_t_1, P_t_1, F_t, Q_t)
{
 8002660:	b580      	push	{r7, lr}
 8002662:	b088      	sub	sp, #32
 8002664:	af04      	add	r7, sp, #16
 8002666:	60f8      	str	r0, [r7, #12]
 8002668:	60b9      	str	r1, [r7, #8]
 800266a:	607a      	str	r2, [r7, #4]
 800266c:	603b      	str	r3, [r7, #0]
	Multiply_matrix(F_t,X_hat_t_1,multiply, 3,3,3,3);
 800266e:	6878      	ldr	r0, [r7, #4]
 8002670:	68f9      	ldr	r1, [r7, #12]
 8002672:	2303      	movs	r3, #3
 8002674:	9302      	str	r3, [sp, #8]
 8002676:	2303      	movs	r3, #3
 8002678:	9301      	str	r3, [sp, #4]
 800267a:	2303      	movs	r3, #3
 800267c:	9300      	str	r3, [sp, #0]
 800267e:	2303      	movs	r3, #3
 8002680:	4a1c      	ldr	r2, [pc, #112]	; (80026f4 <prediction+0x94>)
 8002682:	f000 f917 	bl	80028b4 <Multiply_matrix>
	equal(X_hat_t,multiply,3,3);
 8002686:	2303      	movs	r3, #3
 8002688:	2203      	movs	r2, #3
 800268a:	491a      	ldr	r1, [pc, #104]	; (80026f4 <prediction+0x94>)
 800268c:	481a      	ldr	r0, [pc, #104]	; (80026f8 <prediction+0x98>)
 800268e:	f000 fa3f 	bl	8002b10 <equal>

	Multiply_matrix(F_t,P_t_1,multiply, 3,3,3,3);
 8002692:	6878      	ldr	r0, [r7, #4]
 8002694:	68b9      	ldr	r1, [r7, #8]
 8002696:	2303      	movs	r3, #3
 8002698:	9302      	str	r3, [sp, #8]
 800269a:	2303      	movs	r3, #3
 800269c:	9301      	str	r3, [sp, #4]
 800269e:	2303      	movs	r3, #3
 80026a0:	9300      	str	r3, [sp, #0]
 80026a2:	2303      	movs	r3, #3
 80026a4:	4a13      	ldr	r2, [pc, #76]	; (80026f4 <prediction+0x94>)
 80026a6:	f000 f905 	bl	80028b4 <Multiply_matrix>
	equal(collect3_3,multiply,3,3);
 80026aa:	2303      	movs	r3, #3
 80026ac:	2203      	movs	r2, #3
 80026ae:	4911      	ldr	r1, [pc, #68]	; (80026f4 <prediction+0x94>)
 80026b0:	4812      	ldr	r0, [pc, #72]	; (80026fc <prediction+0x9c>)
 80026b2:	f000 fa2d 	bl	8002b10 <equal>
	Multiply_matrix(collect3_3,F_t_tran,multiply, 3,3,3,3);
 80026b6:	2303      	movs	r3, #3
 80026b8:	9302      	str	r3, [sp, #8]
 80026ba:	2303      	movs	r3, #3
 80026bc:	9301      	str	r3, [sp, #4]
 80026be:	2303      	movs	r3, #3
 80026c0:	9300      	str	r3, [sp, #0]
 80026c2:	2303      	movs	r3, #3
 80026c4:	4a0b      	ldr	r2, [pc, #44]	; (80026f4 <prediction+0x94>)
 80026c6:	490e      	ldr	r1, [pc, #56]	; (8002700 <prediction+0xa0>)
 80026c8:	480c      	ldr	r0, [pc, #48]	; (80026fc <prediction+0x9c>)
 80026ca:	f000 f8f3 	bl	80028b4 <Multiply_matrix>
	PlusOrMinus(multiply,Q_t,3,3,1);
 80026ce:	6839      	ldr	r1, [r7, #0]
 80026d0:	2301      	movs	r3, #1
 80026d2:	9300      	str	r3, [sp, #0]
 80026d4:	2303      	movs	r3, #3
 80026d6:	2203      	movs	r2, #3
 80026d8:	4806      	ldr	r0, [pc, #24]	; (80026f4 <prediction+0x94>)
 80026da:	f000 f96f 	bl	80029bc <PlusOrMinus>
	equal(P_hat_t,pm3_3,3,3);
 80026de:	2303      	movs	r3, #3
 80026e0:	2203      	movs	r2, #3
 80026e2:	4908      	ldr	r1, [pc, #32]	; (8002704 <prediction+0xa4>)
 80026e4:	4808      	ldr	r0, [pc, #32]	; (8002708 <prediction+0xa8>)
 80026e6:	f000 fa13 	bl	8002b10 <equal>
}
 80026ea:	bf00      	nop
 80026ec:	3710      	adds	r7, #16
 80026ee:	46bd      	mov	sp, r7
 80026f0:	bd80      	pop	{r7, pc}
 80026f2:	bf00      	nop
 80026f4:	20000648 	.word	0x20000648
 80026f8:	20000744 	.word	0x20000744
 80026fc:	20000690 	.word	0x20000690
 8002700:	20000084 	.word	0x20000084
 8002704:	2000066c 	.word	0x2000066c
 8002708:	2000078c 	.word	0x2000078c

0800270c <Update>:

void Update(X_hat_t, P_hat_t, DegAbs, R_t, H_t)
{
 800270c:	b580      	push	{r7, lr}
 800270e:	b088      	sub	sp, #32
 8002710:	af04      	add	r7, sp, #16
 8002712:	60f8      	str	r0, [r7, #12]
 8002714:	60b9      	str	r1, [r7, #8]
 8002716:	607a      	str	r2, [r7, #4]
 8002718:	603b      	str	r3, [r7, #0]
	Multiply_matrix(H_t,X_hat_t,multiply,3,3,3,3);
 800271a:	69b8      	ldr	r0, [r7, #24]
 800271c:	68f9      	ldr	r1, [r7, #12]
 800271e:	2303      	movs	r3, #3
 8002720:	9302      	str	r3, [sp, #8]
 8002722:	2303      	movs	r3, #3
 8002724:	9301      	str	r3, [sp, #4]
 8002726:	2303      	movs	r3, #3
 8002728:	9300      	str	r3, [sp, #0]
 800272a:	2303      	movs	r3, #3
 800272c:	4a57      	ldr	r2, [pc, #348]	; (800288c <Update+0x180>)
 800272e:	f000 f8c1 	bl	80028b4 <Multiply_matrix>
	PlusOrMinus(DegAbs,multiply,3,3,2);
 8002732:	6878      	ldr	r0, [r7, #4]
 8002734:	2302      	movs	r3, #2
 8002736:	9300      	str	r3, [sp, #0]
 8002738:	2303      	movs	r3, #3
 800273a:	2203      	movs	r2, #3
 800273c:	4953      	ldr	r1, [pc, #332]	; (800288c <Update+0x180>)
 800273e:	f000 f93d 	bl	80029bc <PlusOrMinus>
	equal(y_k,pm3_3,3,3);
 8002742:	2303      	movs	r3, #3
 8002744:	2203      	movs	r2, #3
 8002746:	4952      	ldr	r1, [pc, #328]	; (8002890 <Update+0x184>)
 8002748:	4852      	ldr	r0, [pc, #328]	; (8002894 <Update+0x188>)
 800274a:	f000 f9e1 	bl	8002b10 <equal>

	Multiply_matrix(H_t,P_hat_t,multiply,3,3,3,3);
 800274e:	69b8      	ldr	r0, [r7, #24]
 8002750:	68b9      	ldr	r1, [r7, #8]
 8002752:	2303      	movs	r3, #3
 8002754:	9302      	str	r3, [sp, #8]
 8002756:	2303      	movs	r3, #3
 8002758:	9301      	str	r3, [sp, #4]
 800275a:	2303      	movs	r3, #3
 800275c:	9300      	str	r3, [sp, #0]
 800275e:	2303      	movs	r3, #3
 8002760:	4a4a      	ldr	r2, [pc, #296]	; (800288c <Update+0x180>)
 8002762:	f000 f8a7 	bl	80028b4 <Multiply_matrix>
	equal(collect3_3,multiply,3,3);
 8002766:	2303      	movs	r3, #3
 8002768:	2203      	movs	r2, #3
 800276a:	4948      	ldr	r1, [pc, #288]	; (800288c <Update+0x180>)
 800276c:	484a      	ldr	r0, [pc, #296]	; (8002898 <Update+0x18c>)
 800276e:	f000 f9cf 	bl	8002b10 <equal>
	Multiply_matrix(collect3_3,H_t_tran,multiply, 3,3,3,3);
 8002772:	2303      	movs	r3, #3
 8002774:	9302      	str	r3, [sp, #8]
 8002776:	2303      	movs	r3, #3
 8002778:	9301      	str	r3, [sp, #4]
 800277a:	2303      	movs	r3, #3
 800277c:	9300      	str	r3, [sp, #0]
 800277e:	2303      	movs	r3, #3
 8002780:	4a42      	ldr	r2, [pc, #264]	; (800288c <Update+0x180>)
 8002782:	4946      	ldr	r1, [pc, #280]	; (800289c <Update+0x190>)
 8002784:	4844      	ldr	r0, [pc, #272]	; (8002898 <Update+0x18c>)
 8002786:	f000 f895 	bl	80028b4 <Multiply_matrix>
	PlusOrMinus(multiply,R_t,3,3,1);
 800278a:	6839      	ldr	r1, [r7, #0]
 800278c:	2301      	movs	r3, #1
 800278e:	9300      	str	r3, [sp, #0]
 8002790:	2303      	movs	r3, #3
 8002792:	2203      	movs	r2, #3
 8002794:	483d      	ldr	r0, [pc, #244]	; (800288c <Update+0x180>)
 8002796:	f000 f911 	bl	80029bc <PlusOrMinus>
	equal(S_k,pm3_3,3,3);
 800279a:	2303      	movs	r3, #3
 800279c:	2203      	movs	r2, #3
 800279e:	493c      	ldr	r1, [pc, #240]	; (8002890 <Update+0x184>)
 80027a0:	483f      	ldr	r0, [pc, #252]	; (80028a0 <Update+0x194>)
 80027a2:	f000 f9b5 	bl	8002b10 <equal>

	S_k[0][0] = 1/S_k[0][0];
 80027a6:	4b3e      	ldr	r3, [pc, #248]	; (80028a0 <Update+0x194>)
 80027a8:	ed93 7a00 	vldr	s14, [r3]
 80027ac:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80027b0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80027b4:	4b3a      	ldr	r3, [pc, #232]	; (80028a0 <Update+0x194>)
 80027b6:	edc3 7a00 	vstr	s15, [r3]
	Multiply_matrix(P_hat_t,H_t_tran,multiply,3,3,3,3);
 80027ba:	68b8      	ldr	r0, [r7, #8]
 80027bc:	2303      	movs	r3, #3
 80027be:	9302      	str	r3, [sp, #8]
 80027c0:	2303      	movs	r3, #3
 80027c2:	9301      	str	r3, [sp, #4]
 80027c4:	2303      	movs	r3, #3
 80027c6:	9300      	str	r3, [sp, #0]
 80027c8:	2303      	movs	r3, #3
 80027ca:	4a30      	ldr	r2, [pc, #192]	; (800288c <Update+0x180>)
 80027cc:	4933      	ldr	r1, [pc, #204]	; (800289c <Update+0x190>)
 80027ce:	f000 f871 	bl	80028b4 <Multiply_matrix>
	equal(collect3_3,multiply,3,3);
 80027d2:	2303      	movs	r3, #3
 80027d4:	2203      	movs	r2, #3
 80027d6:	492d      	ldr	r1, [pc, #180]	; (800288c <Update+0x180>)
 80027d8:	482f      	ldr	r0, [pc, #188]	; (8002898 <Update+0x18c>)
 80027da:	f000 f999 	bl	8002b10 <equal>
	Multiply_matrix(collect3_3,S_k,multiply, 3,3,3,3);
 80027de:	2303      	movs	r3, #3
 80027e0:	9302      	str	r3, [sp, #8]
 80027e2:	2303      	movs	r3, #3
 80027e4:	9301      	str	r3, [sp, #4]
 80027e6:	2303      	movs	r3, #3
 80027e8:	9300      	str	r3, [sp, #0]
 80027ea:	2303      	movs	r3, #3
 80027ec:	4a27      	ldr	r2, [pc, #156]	; (800288c <Update+0x180>)
 80027ee:	492c      	ldr	r1, [pc, #176]	; (80028a0 <Update+0x194>)
 80027f0:	4829      	ldr	r0, [pc, #164]	; (8002898 <Update+0x18c>)
 80027f2:	f000 f85f 	bl	80028b4 <Multiply_matrix>
	equal(K_k,multiply,3,3);
 80027f6:	2303      	movs	r3, #3
 80027f8:	2203      	movs	r2, #3
 80027fa:	4924      	ldr	r1, [pc, #144]	; (800288c <Update+0x180>)
 80027fc:	4829      	ldr	r0, [pc, #164]	; (80028a4 <Update+0x198>)
 80027fe:	f000 f987 	bl	8002b10 <equal>

	Multiply_matrix(K_k,y_k,multiply,3,3,3,3);
 8002802:	2303      	movs	r3, #3
 8002804:	9302      	str	r3, [sp, #8]
 8002806:	2303      	movs	r3, #3
 8002808:	9301      	str	r3, [sp, #4]
 800280a:	2303      	movs	r3, #3
 800280c:	9300      	str	r3, [sp, #0]
 800280e:	2303      	movs	r3, #3
 8002810:	4a1e      	ldr	r2, [pc, #120]	; (800288c <Update+0x180>)
 8002812:	4920      	ldr	r1, [pc, #128]	; (8002894 <Update+0x188>)
 8002814:	4823      	ldr	r0, [pc, #140]	; (80028a4 <Update+0x198>)
 8002816:	f000 f84d 	bl	80028b4 <Multiply_matrix>
	PlusOrMinus(X_hat_t,multiply,3,3,1);
 800281a:	68f8      	ldr	r0, [r7, #12]
 800281c:	2301      	movs	r3, #1
 800281e:	9300      	str	r3, [sp, #0]
 8002820:	2303      	movs	r3, #3
 8002822:	2203      	movs	r2, #3
 8002824:	4919      	ldr	r1, [pc, #100]	; (800288c <Update+0x180>)
 8002826:	f000 f8c9 	bl	80029bc <PlusOrMinus>
	equal(X_t,pm3_3,3,3);
 800282a:	2303      	movs	r3, #3
 800282c:	2203      	movs	r2, #3
 800282e:	4918      	ldr	r1, [pc, #96]	; (8002890 <Update+0x184>)
 8002830:	481d      	ldr	r0, [pc, #116]	; (80028a8 <Update+0x19c>)
 8002832:	f000 f96d 	bl	8002b10 <equal>

	Multiply_matrix(K_k,H_t,multiply,3,3,3,3);
 8002836:	69b9      	ldr	r1, [r7, #24]
 8002838:	2303      	movs	r3, #3
 800283a:	9302      	str	r3, [sp, #8]
 800283c:	2303      	movs	r3, #3
 800283e:	9301      	str	r3, [sp, #4]
 8002840:	2303      	movs	r3, #3
 8002842:	9300      	str	r3, [sp, #0]
 8002844:	2303      	movs	r3, #3
 8002846:	4a11      	ldr	r2, [pc, #68]	; (800288c <Update+0x180>)
 8002848:	4816      	ldr	r0, [pc, #88]	; (80028a4 <Update+0x198>)
 800284a:	f000 f833 	bl	80028b4 <Multiply_matrix>
	PlusOrMinus(I,multiply,3,3,2);
 800284e:	2302      	movs	r3, #2
 8002850:	9300      	str	r3, [sp, #0]
 8002852:	2303      	movs	r3, #3
 8002854:	2203      	movs	r2, #3
 8002856:	490d      	ldr	r1, [pc, #52]	; (800288c <Update+0x180>)
 8002858:	4814      	ldr	r0, [pc, #80]	; (80028ac <Update+0x1a0>)
 800285a:	f000 f8af 	bl	80029bc <PlusOrMinus>
	Multiply_matrix(pm3_3,P_hat_t,multiply,3,3,3,3);
 800285e:	68b9      	ldr	r1, [r7, #8]
 8002860:	2303      	movs	r3, #3
 8002862:	9302      	str	r3, [sp, #8]
 8002864:	2303      	movs	r3, #3
 8002866:	9301      	str	r3, [sp, #4]
 8002868:	2303      	movs	r3, #3
 800286a:	9300      	str	r3, [sp, #0]
 800286c:	2303      	movs	r3, #3
 800286e:	4a07      	ldr	r2, [pc, #28]	; (800288c <Update+0x180>)
 8002870:	4807      	ldr	r0, [pc, #28]	; (8002890 <Update+0x184>)
 8002872:	f000 f81f 	bl	80028b4 <Multiply_matrix>
	equal(P_t,multiply,3,3);
 8002876:	2303      	movs	r3, #3
 8002878:	2203      	movs	r2, #3
 800287a:	4904      	ldr	r1, [pc, #16]	; (800288c <Update+0x180>)
 800287c:	480c      	ldr	r0, [pc, #48]	; (80028b0 <Update+0x1a4>)
 800287e:	f000 f947 	bl	8002b10 <equal>
}
 8002882:	bf00      	nop
 8002884:	3710      	adds	r7, #16
 8002886:	46bd      	mov	sp, r7
 8002888:	bd80      	pop	{r7, pc}
 800288a:	bf00      	nop
 800288c:	20000648 	.word	0x20000648
 8002890:	2000066c 	.word	0x2000066c
 8002894:	200006b4 	.word	0x200006b4
 8002898:	20000690 	.word	0x20000690
 800289c:	200000cc 	.word	0x200000cc
 80028a0:	200006d8 	.word	0x200006d8
 80028a4:	200006fc 	.word	0x200006fc
 80028a8:	20000720 	.word	0x20000720
 80028ac:	2000003c 	.word	0x2000003c
 80028b0:	20000768 	.word	0x20000768

080028b4 <Multiply_matrix>:

void Multiply_matrix(float A[][3], float B[][3],float multiply[][3],int row1,int col1,int row2,int col2)
{
 80028b4:	b480      	push	{r7}
 80028b6:	b087      	sub	sp, #28
 80028b8:	af00      	add	r7, sp, #0
 80028ba:	60f8      	str	r0, [r7, #12]
 80028bc:	60b9      	str	r1, [r7, #8]
 80028be:	607a      	str	r2, [r7, #4]
 80028c0:	603b      	str	r3, [r7, #0]
	uint8_t i,j,k;
	//set zero
	for(i=0; i<3 ;i++){
 80028c2:	2300      	movs	r3, #0
 80028c4:	75fb      	strb	r3, [r7, #23]
 80028c6:	e019      	b.n	80028fc <Multiply_matrix+0x48>
		for(j=0; j<3;j++){
 80028c8:	2300      	movs	r3, #0
 80028ca:	75bb      	strb	r3, [r7, #22]
 80028cc:	e010      	b.n	80028f0 <Multiply_matrix+0x3c>
			multiply[i][j] = 0;
 80028ce:	7dfa      	ldrb	r2, [r7, #23]
 80028d0:	4613      	mov	r3, r2
 80028d2:	005b      	lsls	r3, r3, #1
 80028d4:	4413      	add	r3, r2
 80028d6:	009b      	lsls	r3, r3, #2
 80028d8:	461a      	mov	r2, r3
 80028da:	687b      	ldr	r3, [r7, #4]
 80028dc:	441a      	add	r2, r3
 80028de:	7dbb      	ldrb	r3, [r7, #22]
 80028e0:	009b      	lsls	r3, r3, #2
 80028e2:	4413      	add	r3, r2
 80028e4:	f04f 0200 	mov.w	r2, #0
 80028e8:	601a      	str	r2, [r3, #0]
		for(j=0; j<3;j++){
 80028ea:	7dbb      	ldrb	r3, [r7, #22]
 80028ec:	3301      	adds	r3, #1
 80028ee:	75bb      	strb	r3, [r7, #22]
 80028f0:	7dbb      	ldrb	r3, [r7, #22]
 80028f2:	2b02      	cmp	r3, #2
 80028f4:	d9eb      	bls.n	80028ce <Multiply_matrix+0x1a>
	for(i=0; i<3 ;i++){
 80028f6:	7dfb      	ldrb	r3, [r7, #23]
 80028f8:	3301      	adds	r3, #1
 80028fa:	75fb      	strb	r3, [r7, #23]
 80028fc:	7dfb      	ldrb	r3, [r7, #23]
 80028fe:	2b02      	cmp	r3, #2
 8002900:	d9e2      	bls.n	80028c8 <Multiply_matrix+0x14>
		}
	}

	for(i=0;i<row1;i++){
 8002902:	2300      	movs	r3, #0
 8002904:	75fb      	strb	r3, [r7, #23]
 8002906:	e04e      	b.n	80029a6 <Multiply_matrix+0xf2>
		for(j=0;j<col2;j++){
 8002908:	2300      	movs	r3, #0
 800290a:	75bb      	strb	r3, [r7, #22]
 800290c:	e044      	b.n	8002998 <Multiply_matrix+0xe4>
			for(k=0;k<col1;k++){
 800290e:	2300      	movs	r3, #0
 8002910:	757b      	strb	r3, [r7, #21]
 8002912:	e03a      	b.n	800298a <Multiply_matrix+0xd6>
				multiply[i][j] += A[i][k]*B[k][j];
 8002914:	7dfa      	ldrb	r2, [r7, #23]
 8002916:	4613      	mov	r3, r2
 8002918:	005b      	lsls	r3, r3, #1
 800291a:	4413      	add	r3, r2
 800291c:	009b      	lsls	r3, r3, #2
 800291e:	461a      	mov	r2, r3
 8002920:	687b      	ldr	r3, [r7, #4]
 8002922:	441a      	add	r2, r3
 8002924:	7dbb      	ldrb	r3, [r7, #22]
 8002926:	009b      	lsls	r3, r3, #2
 8002928:	4413      	add	r3, r2
 800292a:	ed93 7a00 	vldr	s14, [r3]
 800292e:	7dfa      	ldrb	r2, [r7, #23]
 8002930:	4613      	mov	r3, r2
 8002932:	005b      	lsls	r3, r3, #1
 8002934:	4413      	add	r3, r2
 8002936:	009b      	lsls	r3, r3, #2
 8002938:	461a      	mov	r2, r3
 800293a:	68fb      	ldr	r3, [r7, #12]
 800293c:	441a      	add	r2, r3
 800293e:	7d7b      	ldrb	r3, [r7, #21]
 8002940:	009b      	lsls	r3, r3, #2
 8002942:	4413      	add	r3, r2
 8002944:	edd3 6a00 	vldr	s13, [r3]
 8002948:	7d7a      	ldrb	r2, [r7, #21]
 800294a:	4613      	mov	r3, r2
 800294c:	005b      	lsls	r3, r3, #1
 800294e:	4413      	add	r3, r2
 8002950:	009b      	lsls	r3, r3, #2
 8002952:	461a      	mov	r2, r3
 8002954:	68bb      	ldr	r3, [r7, #8]
 8002956:	441a      	add	r2, r3
 8002958:	7dbb      	ldrb	r3, [r7, #22]
 800295a:	009b      	lsls	r3, r3, #2
 800295c:	4413      	add	r3, r2
 800295e:	edd3 7a00 	vldr	s15, [r3]
 8002962:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002966:	7dfa      	ldrb	r2, [r7, #23]
 8002968:	4613      	mov	r3, r2
 800296a:	005b      	lsls	r3, r3, #1
 800296c:	4413      	add	r3, r2
 800296e:	009b      	lsls	r3, r3, #2
 8002970:	461a      	mov	r2, r3
 8002972:	687b      	ldr	r3, [r7, #4]
 8002974:	441a      	add	r2, r3
 8002976:	7dbb      	ldrb	r3, [r7, #22]
 8002978:	ee77 7a27 	vadd.f32	s15, s14, s15
 800297c:	009b      	lsls	r3, r3, #2
 800297e:	4413      	add	r3, r2
 8002980:	edc3 7a00 	vstr	s15, [r3]
			for(k=0;k<col1;k++){
 8002984:	7d7b      	ldrb	r3, [r7, #21]
 8002986:	3301      	adds	r3, #1
 8002988:	757b      	strb	r3, [r7, #21]
 800298a:	7d7b      	ldrb	r3, [r7, #21]
 800298c:	6a3a      	ldr	r2, [r7, #32]
 800298e:	429a      	cmp	r2, r3
 8002990:	dcc0      	bgt.n	8002914 <Multiply_matrix+0x60>
		for(j=0;j<col2;j++){
 8002992:	7dbb      	ldrb	r3, [r7, #22]
 8002994:	3301      	adds	r3, #1
 8002996:	75bb      	strb	r3, [r7, #22]
 8002998:	7dbb      	ldrb	r3, [r7, #22]
 800299a:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800299c:	429a      	cmp	r2, r3
 800299e:	dcb6      	bgt.n	800290e <Multiply_matrix+0x5a>
	for(i=0;i<row1;i++){
 80029a0:	7dfb      	ldrb	r3, [r7, #23]
 80029a2:	3301      	adds	r3, #1
 80029a4:	75fb      	strb	r3, [r7, #23]
 80029a6:	7dfb      	ldrb	r3, [r7, #23]
 80029a8:	683a      	ldr	r2, [r7, #0]
 80029aa:	429a      	cmp	r2, r3
 80029ac:	dcac      	bgt.n	8002908 <Multiply_matrix+0x54>
			}
		}
	}
}
 80029ae:	bf00      	nop
 80029b0:	bf00      	nop
 80029b2:	371c      	adds	r7, #28
 80029b4:	46bd      	mov	sp, r7
 80029b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029ba:	4770      	bx	lr

080029bc <PlusOrMinus>:

void PlusOrMinus(float A[][3], float B[][3],int row,int col,int con)
{
 80029bc:	b480      	push	{r7}
 80029be:	b087      	sub	sp, #28
 80029c0:	af00      	add	r7, sp, #0
 80029c2:	60f8      	str	r0, [r7, #12]
 80029c4:	60b9      	str	r1, [r7, #8]
 80029c6:	607a      	str	r2, [r7, #4]
 80029c8:	603b      	str	r3, [r7, #0]
	uint8_t i,j;
	//set zeros
	for(i=0; i<3 ;i++){
 80029ca:	2300      	movs	r3, #0
 80029cc:	75fb      	strb	r3, [r7, #23]
 80029ce:	e017      	b.n	8002a00 <PlusOrMinus+0x44>
			for(j=0; j<3;j++){
 80029d0:	2300      	movs	r3, #0
 80029d2:	75bb      	strb	r3, [r7, #22]
 80029d4:	e00e      	b.n	80029f4 <PlusOrMinus+0x38>
				pm3_3[i][j] = 0;
 80029d6:	7dfa      	ldrb	r2, [r7, #23]
 80029d8:	7db9      	ldrb	r1, [r7, #22]
 80029da:	484c      	ldr	r0, [pc, #304]	; (8002b0c <PlusOrMinus+0x150>)
 80029dc:	4613      	mov	r3, r2
 80029de:	005b      	lsls	r3, r3, #1
 80029e0:	4413      	add	r3, r2
 80029e2:	440b      	add	r3, r1
 80029e4:	009b      	lsls	r3, r3, #2
 80029e6:	4403      	add	r3, r0
 80029e8:	f04f 0200 	mov.w	r2, #0
 80029ec:	601a      	str	r2, [r3, #0]
			for(j=0; j<3;j++){
 80029ee:	7dbb      	ldrb	r3, [r7, #22]
 80029f0:	3301      	adds	r3, #1
 80029f2:	75bb      	strb	r3, [r7, #22]
 80029f4:	7dbb      	ldrb	r3, [r7, #22]
 80029f6:	2b02      	cmp	r3, #2
 80029f8:	d9ed      	bls.n	80029d6 <PlusOrMinus+0x1a>
	for(i=0; i<3 ;i++){
 80029fa:	7dfb      	ldrb	r3, [r7, #23]
 80029fc:	3301      	adds	r3, #1
 80029fe:	75fb      	strb	r3, [r7, #23]
 8002a00:	7dfb      	ldrb	r3, [r7, #23]
 8002a02:	2b02      	cmp	r3, #2
 8002a04:	d9e4      	bls.n	80029d0 <PlusOrMinus+0x14>
			}
		}
	//condition for plus
	if(con == 1){
 8002a06:	6a3b      	ldr	r3, [r7, #32]
 8002a08:	2b01      	cmp	r3, #1
 8002a0a:	d13b      	bne.n	8002a84 <PlusOrMinus+0xc8>
		for(i = 0; i < row; ++i){
 8002a0c:	2300      	movs	r3, #0
 8002a0e:	75fb      	strb	r3, [r7, #23]
 8002a10:	e033      	b.n	8002a7a <PlusOrMinus+0xbe>
			for (j = 0; j < col; ++j){
 8002a12:	2300      	movs	r3, #0
 8002a14:	75bb      	strb	r3, [r7, #22]
 8002a16:	e029      	b.n	8002a6c <PlusOrMinus+0xb0>
				pm3_3[i][j] = A[i][j] + B[i][j];
 8002a18:	7dfa      	ldrb	r2, [r7, #23]
 8002a1a:	4613      	mov	r3, r2
 8002a1c:	005b      	lsls	r3, r3, #1
 8002a1e:	4413      	add	r3, r2
 8002a20:	009b      	lsls	r3, r3, #2
 8002a22:	461a      	mov	r2, r3
 8002a24:	68fb      	ldr	r3, [r7, #12]
 8002a26:	441a      	add	r2, r3
 8002a28:	7dbb      	ldrb	r3, [r7, #22]
 8002a2a:	009b      	lsls	r3, r3, #2
 8002a2c:	4413      	add	r3, r2
 8002a2e:	ed93 7a00 	vldr	s14, [r3]
 8002a32:	7dfa      	ldrb	r2, [r7, #23]
 8002a34:	4613      	mov	r3, r2
 8002a36:	005b      	lsls	r3, r3, #1
 8002a38:	4413      	add	r3, r2
 8002a3a:	009b      	lsls	r3, r3, #2
 8002a3c:	461a      	mov	r2, r3
 8002a3e:	68bb      	ldr	r3, [r7, #8]
 8002a40:	441a      	add	r2, r3
 8002a42:	7dbb      	ldrb	r3, [r7, #22]
 8002a44:	009b      	lsls	r3, r3, #2
 8002a46:	4413      	add	r3, r2
 8002a48:	edd3 7a00 	vldr	s15, [r3]
 8002a4c:	7dfa      	ldrb	r2, [r7, #23]
 8002a4e:	7db9      	ldrb	r1, [r7, #22]
 8002a50:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002a54:	482d      	ldr	r0, [pc, #180]	; (8002b0c <PlusOrMinus+0x150>)
 8002a56:	4613      	mov	r3, r2
 8002a58:	005b      	lsls	r3, r3, #1
 8002a5a:	4413      	add	r3, r2
 8002a5c:	440b      	add	r3, r1
 8002a5e:	009b      	lsls	r3, r3, #2
 8002a60:	4403      	add	r3, r0
 8002a62:	edc3 7a00 	vstr	s15, [r3]
			for (j = 0; j < col; ++j){
 8002a66:	7dbb      	ldrb	r3, [r7, #22]
 8002a68:	3301      	adds	r3, #1
 8002a6a:	75bb      	strb	r3, [r7, #22]
 8002a6c:	7dbb      	ldrb	r3, [r7, #22]
 8002a6e:	683a      	ldr	r2, [r7, #0]
 8002a70:	429a      	cmp	r2, r3
 8002a72:	dcd1      	bgt.n	8002a18 <PlusOrMinus+0x5c>
		for(i = 0; i < row; ++i){
 8002a74:	7dfb      	ldrb	r3, [r7, #23]
 8002a76:	3301      	adds	r3, #1
 8002a78:	75fb      	strb	r3, [r7, #23]
 8002a7a:	7dfb      	ldrb	r3, [r7, #23]
 8002a7c:	687a      	ldr	r2, [r7, #4]
 8002a7e:	429a      	cmp	r2, r3
 8002a80:	dcc7      	bgt.n	8002a12 <PlusOrMinus+0x56>
			for (j = 0; j < col; ++j){
				pm3_3[i][j] = A[i][j] - B[i][j];
			}
		}
	}
}
 8002a82:	e03d      	b.n	8002b00 <PlusOrMinus+0x144>
	else if(con == 2){
 8002a84:	6a3b      	ldr	r3, [r7, #32]
 8002a86:	2b02      	cmp	r3, #2
 8002a88:	d13a      	bne.n	8002b00 <PlusOrMinus+0x144>
		for(i = 0; i < row; ++i){
 8002a8a:	2300      	movs	r3, #0
 8002a8c:	75fb      	strb	r3, [r7, #23]
 8002a8e:	e033      	b.n	8002af8 <PlusOrMinus+0x13c>
			for (j = 0; j < col; ++j){
 8002a90:	2300      	movs	r3, #0
 8002a92:	75bb      	strb	r3, [r7, #22]
 8002a94:	e029      	b.n	8002aea <PlusOrMinus+0x12e>
				pm3_3[i][j] = A[i][j] - B[i][j];
 8002a96:	7dfa      	ldrb	r2, [r7, #23]
 8002a98:	4613      	mov	r3, r2
 8002a9a:	005b      	lsls	r3, r3, #1
 8002a9c:	4413      	add	r3, r2
 8002a9e:	009b      	lsls	r3, r3, #2
 8002aa0:	461a      	mov	r2, r3
 8002aa2:	68fb      	ldr	r3, [r7, #12]
 8002aa4:	441a      	add	r2, r3
 8002aa6:	7dbb      	ldrb	r3, [r7, #22]
 8002aa8:	009b      	lsls	r3, r3, #2
 8002aaa:	4413      	add	r3, r2
 8002aac:	ed93 7a00 	vldr	s14, [r3]
 8002ab0:	7dfa      	ldrb	r2, [r7, #23]
 8002ab2:	4613      	mov	r3, r2
 8002ab4:	005b      	lsls	r3, r3, #1
 8002ab6:	4413      	add	r3, r2
 8002ab8:	009b      	lsls	r3, r3, #2
 8002aba:	461a      	mov	r2, r3
 8002abc:	68bb      	ldr	r3, [r7, #8]
 8002abe:	441a      	add	r2, r3
 8002ac0:	7dbb      	ldrb	r3, [r7, #22]
 8002ac2:	009b      	lsls	r3, r3, #2
 8002ac4:	4413      	add	r3, r2
 8002ac6:	edd3 7a00 	vldr	s15, [r3]
 8002aca:	7dfa      	ldrb	r2, [r7, #23]
 8002acc:	7db9      	ldrb	r1, [r7, #22]
 8002ace:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002ad2:	480e      	ldr	r0, [pc, #56]	; (8002b0c <PlusOrMinus+0x150>)
 8002ad4:	4613      	mov	r3, r2
 8002ad6:	005b      	lsls	r3, r3, #1
 8002ad8:	4413      	add	r3, r2
 8002ada:	440b      	add	r3, r1
 8002adc:	009b      	lsls	r3, r3, #2
 8002ade:	4403      	add	r3, r0
 8002ae0:	edc3 7a00 	vstr	s15, [r3]
			for (j = 0; j < col; ++j){
 8002ae4:	7dbb      	ldrb	r3, [r7, #22]
 8002ae6:	3301      	adds	r3, #1
 8002ae8:	75bb      	strb	r3, [r7, #22]
 8002aea:	7dbb      	ldrb	r3, [r7, #22]
 8002aec:	683a      	ldr	r2, [r7, #0]
 8002aee:	429a      	cmp	r2, r3
 8002af0:	dcd1      	bgt.n	8002a96 <PlusOrMinus+0xda>
		for(i = 0; i < row; ++i){
 8002af2:	7dfb      	ldrb	r3, [r7, #23]
 8002af4:	3301      	adds	r3, #1
 8002af6:	75fb      	strb	r3, [r7, #23]
 8002af8:	7dfb      	ldrb	r3, [r7, #23]
 8002afa:	687a      	ldr	r2, [r7, #4]
 8002afc:	429a      	cmp	r2, r3
 8002afe:	dcc7      	bgt.n	8002a90 <PlusOrMinus+0xd4>
}
 8002b00:	bf00      	nop
 8002b02:	371c      	adds	r7, #28
 8002b04:	46bd      	mov	sp, r7
 8002b06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b0a:	4770      	bx	lr
 8002b0c:	2000066c 	.word	0x2000066c

08002b10 <equal>:

void equal(float A[][3],float B[][3],int row,int col)
{
 8002b10:	b490      	push	{r4, r7}
 8002b12:	b086      	sub	sp, #24
 8002b14:	af00      	add	r7, sp, #0
 8002b16:	60f8      	str	r0, [r7, #12]
 8002b18:	60b9      	str	r1, [r7, #8]
 8002b1a:	607a      	str	r2, [r7, #4]
 8002b1c:	603b      	str	r3, [r7, #0]
	uint8_t i,j;
	for(i = 0; i < row; ++i){
 8002b1e:	2300      	movs	r3, #0
 8002b20:	75fb      	strb	r3, [r7, #23]
 8002b22:	e024      	b.n	8002b6e <equal+0x5e>
		for (j = 0; j < col; ++j){
 8002b24:	2300      	movs	r3, #0
 8002b26:	75bb      	strb	r3, [r7, #22]
 8002b28:	e01a      	b.n	8002b60 <equal+0x50>
			A[i][j] = B[i][j];
 8002b2a:	7dfa      	ldrb	r2, [r7, #23]
 8002b2c:	4613      	mov	r3, r2
 8002b2e:	005b      	lsls	r3, r3, #1
 8002b30:	4413      	add	r3, r2
 8002b32:	009b      	lsls	r3, r3, #2
 8002b34:	461a      	mov	r2, r3
 8002b36:	68bb      	ldr	r3, [r7, #8]
 8002b38:	1898      	adds	r0, r3, r2
 8002b3a:	7dbc      	ldrb	r4, [r7, #22]
 8002b3c:	7dfa      	ldrb	r2, [r7, #23]
 8002b3e:	4613      	mov	r3, r2
 8002b40:	005b      	lsls	r3, r3, #1
 8002b42:	4413      	add	r3, r2
 8002b44:	009b      	lsls	r3, r3, #2
 8002b46:	461a      	mov	r2, r3
 8002b48:	68fb      	ldr	r3, [r7, #12]
 8002b4a:	1899      	adds	r1, r3, r2
 8002b4c:	7dbb      	ldrb	r3, [r7, #22]
 8002b4e:	00a2      	lsls	r2, r4, #2
 8002b50:	4402      	add	r2, r0
 8002b52:	6812      	ldr	r2, [r2, #0]
 8002b54:	009b      	lsls	r3, r3, #2
 8002b56:	440b      	add	r3, r1
 8002b58:	601a      	str	r2, [r3, #0]
		for (j = 0; j < col; ++j){
 8002b5a:	7dbb      	ldrb	r3, [r7, #22]
 8002b5c:	3301      	adds	r3, #1
 8002b5e:	75bb      	strb	r3, [r7, #22]
 8002b60:	7dbb      	ldrb	r3, [r7, #22]
 8002b62:	683a      	ldr	r2, [r7, #0]
 8002b64:	429a      	cmp	r2, r3
 8002b66:	dce0      	bgt.n	8002b2a <equal+0x1a>
	for(i = 0; i < row; ++i){
 8002b68:	7dfb      	ldrb	r3, [r7, #23]
 8002b6a:	3301      	adds	r3, #1
 8002b6c:	75fb      	strb	r3, [r7, #23]
 8002b6e:	7dfb      	ldrb	r3, [r7, #23]
 8002b70:	687a      	ldr	r2, [r7, #4]
 8002b72:	429a      	cmp	r2, r3
 8002b74:	dcd6      	bgt.n	8002b24 <equal+0x14>
		}
	}
}
 8002b76:	bf00      	nop
 8002b78:	bf00      	nop
 8002b7a:	3718      	adds	r7, #24
 8002b7c:	46bd      	mov	sp, r7
 8002b7e:	bc90      	pop	{r4, r7}
 8002b80:	4770      	bx	lr
 8002b82:	0000      	movs	r0, r0
 8002b84:	0000      	movs	r0, r0
	...

08002b88 <Trajectory>:


void Trajectory(float qf,float vb)
{
 8002b88:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8002b8c:	b084      	sub	sp, #16
 8002b8e:	af00      	add	r7, sp, #0
 8002b90:	ed87 0a01 	vstr	s0, [r7, #4]
 8002b94:	edc7 0a00 	vstr	s1, [r7]
	vb = vb/9.5493;
 8002b98:	6838      	ldr	r0, [r7, #0]
 8002b9a:	f7fd fc81 	bl	80004a0 <__aeabi_f2d>
 8002b9e:	a3b4      	add	r3, pc, #720	; (adr r3, 8002e70 <Trajectory+0x2e8>)
 8002ba0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ba4:	f7fd fdfe 	bl	80007a4 <__aeabi_ddiv>
 8002ba8:	4602      	mov	r2, r0
 8002baa:	460b      	mov	r3, r1
 8002bac:	4610      	mov	r0, r2
 8002bae:	4619      	mov	r1, r3
 8002bb0:	f7fd ff9e 	bl	8000af0 <__aeabi_d2f>
 8002bb4:	4603      	mov	r3, r0
 8002bb6:	603b      	str	r3, [r7, #0]
	float ab = 0.3;
 8002bb8:	4ba1      	ldr	r3, [pc, #644]	; (8002e40 <Trajectory+0x2b8>)
 8002bba:	60fb      	str	r3, [r7, #12]
	if(qf < 0.1){
 8002bbc:	6878      	ldr	r0, [r7, #4]
 8002bbe:	f7fd fc6f 	bl	80004a0 <__aeabi_f2d>
 8002bc2:	a39d      	add	r3, pc, #628	; (adr r3, 8002e38 <Trajectory+0x2b0>)
 8002bc4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bc8:	f7fd ff34 	bl	8000a34 <__aeabi_dcmplt>
 8002bcc:	4603      	mov	r3, r0
 8002bce:	2b00      	cmp	r3, #0
 8002bd0:	d003      	beq.n	8002bda <Trajectory+0x52>
		ab = 0.3;
 8002bd2:	4b9b      	ldr	r3, [pc, #620]	; (8002e40 <Trajectory+0x2b8>)
 8002bd4:	60fb      	str	r3, [r7, #12]
		vb = 1.5/9.5493;
 8002bd6:	4b9b      	ldr	r3, [pc, #620]	; (8002e44 <Trajectory+0x2bc>)
 8002bd8:	603b      	str	r3, [r7, #0]
	}
	if(tuaall >= 0){
 8002bda:	4b9b      	ldr	r3, [pc, #620]	; (8002e48 <Trajectory+0x2c0>)
 8002bdc:	edd3 7a00 	vldr	s15, [r3]
 8002be0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002be4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002be8:	f2c0 827a 	blt.w	80030e0 <Trajectory+0x558>
		tua = tuaall - 0;
 8002bec:	4b96      	ldr	r3, [pc, #600]	; (8002e48 <Trajectory+0x2c0>)
 8002bee:	681b      	ldr	r3, [r3, #0]
 8002bf0:	4a96      	ldr	r2, [pc, #600]	; (8002e4c <Trajectory+0x2c4>)
 8002bf2:	6013      	str	r3, [r2, #0]
		if(qf/vb > vb/ab){
 8002bf4:	edd7 6a01 	vldr	s13, [r7, #4]
 8002bf8:	edd7 7a00 	vldr	s15, [r7]
 8002bfc:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8002c00:	ed97 6a00 	vldr	s12, [r7]
 8002c04:	edd7 6a03 	vldr	s13, [r7, #12]
 8002c08:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8002c0c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002c10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c14:	dd0c      	ble.n	8002c30 <Trajectory+0xa8>
			tb = vb/ab;
 8002c16:	edd7 6a00 	vldr	s13, [r7]
 8002c1a:	ed97 7a03 	vldr	s14, [r7, #12]
 8002c1e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8002c22:	4b8b      	ldr	r3, [pc, #556]	; (8002e50 <Trajectory+0x2c8>)
 8002c24:	edc3 7a00 	vstr	s15, [r3]
			vb_n = vb;
 8002c28:	4a8a      	ldr	r2, [pc, #552]	; (8002e54 <Trajectory+0x2cc>)
 8002c2a:	683b      	ldr	r3, [r7, #0]
 8002c2c:	6013      	str	r3, [r2, #0]
 8002c2e:	e031      	b.n	8002c94 <Trajectory+0x10c>

		}
		else{
			tb = sqrt(qf/ab);
 8002c30:	ed97 7a01 	vldr	s14, [r7, #4]
 8002c34:	edd7 7a03 	vldr	s15, [r7, #12]
 8002c38:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8002c3c:	ee16 0a90 	vmov	r0, s13
 8002c40:	f7fd fc2e 	bl	80004a0 <__aeabi_f2d>
 8002c44:	4602      	mov	r2, r0
 8002c46:	460b      	mov	r3, r1
 8002c48:	ec43 2b10 	vmov	d0, r2, r3
 8002c4c:	f008 ff1e 	bl	800ba8c <sqrt>
 8002c50:	ec53 2b10 	vmov	r2, r3, d0
 8002c54:	4610      	mov	r0, r2
 8002c56:	4619      	mov	r1, r3
 8002c58:	f7fd ff4a 	bl	8000af0 <__aeabi_d2f>
 8002c5c:	4603      	mov	r3, r0
 8002c5e:	4a7c      	ldr	r2, [pc, #496]	; (8002e50 <Trajectory+0x2c8>)
 8002c60:	6013      	str	r3, [r2, #0]
			vb_n = sqrt(qf*ab);
 8002c62:	ed97 7a01 	vldr	s14, [r7, #4]
 8002c66:	edd7 7a03 	vldr	s15, [r7, #12]
 8002c6a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002c6e:	ee17 0a90 	vmov	r0, s15
 8002c72:	f7fd fc15 	bl	80004a0 <__aeabi_f2d>
 8002c76:	4602      	mov	r2, r0
 8002c78:	460b      	mov	r3, r1
 8002c7a:	ec43 2b10 	vmov	d0, r2, r3
 8002c7e:	f008 ff05 	bl	800ba8c <sqrt>
 8002c82:	ec53 2b10 	vmov	r2, r3, d0
 8002c86:	4610      	mov	r0, r2
 8002c88:	4619      	mov	r1, r3
 8002c8a:	f7fd ff31 	bl	8000af0 <__aeabi_d2f>
 8002c8e:	4603      	mov	r3, r0
 8002c90:	4a70      	ldr	r2, [pc, #448]	; (8002e54 <Trajectory+0x2cc>)
 8002c92:	6013      	str	r3, [r2, #0]
		}
		tf = (2*tb) + ((qf-(vb_n*vb_n/ab))/vb_n);
 8002c94:	4b6e      	ldr	r3, [pc, #440]	; (8002e50 <Trajectory+0x2c8>)
 8002c96:	edd3 7a00 	vldr	s15, [r3]
 8002c9a:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8002c9e:	4b6d      	ldr	r3, [pc, #436]	; (8002e54 <Trajectory+0x2cc>)
 8002ca0:	edd3 6a00 	vldr	s13, [r3]
 8002ca4:	4b6b      	ldr	r3, [pc, #428]	; (8002e54 <Trajectory+0x2cc>)
 8002ca6:	edd3 7a00 	vldr	s15, [r3]
 8002caa:	ee26 6aa7 	vmul.f32	s12, s13, s15
 8002cae:	edd7 6a03 	vldr	s13, [r7, #12]
 8002cb2:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8002cb6:	edd7 6a01 	vldr	s13, [r7, #4]
 8002cba:	ee36 6ae7 	vsub.f32	s12, s13, s15
 8002cbe:	4b65      	ldr	r3, [pc, #404]	; (8002e54 <Trajectory+0x2cc>)
 8002cc0:	edd3 6a00 	vldr	s13, [r3]
 8002cc4:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8002cc8:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002ccc:	4b62      	ldr	r3, [pc, #392]	; (8002e58 <Trajectory+0x2d0>)
 8002cce:	edc3 7a00 	vstr	s15, [r3]
		if(tua <= tb){
 8002cd2:	4b5e      	ldr	r3, [pc, #376]	; (8002e4c <Trajectory+0x2c4>)
 8002cd4:	ed93 7a00 	vldr	s14, [r3]
 8002cd8:	4b5d      	ldr	r3, [pc, #372]	; (8002e50 <Trajectory+0x2c8>)
 8002cda:	edd3 7a00 	vldr	s15, [r3]
 8002cde:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002ce2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002ce6:	d83f      	bhi.n	8002d68 <Trajectory+0x1e0>
			tra_pos = 0.5*ab*tua*tua;
 8002ce8:	68f8      	ldr	r0, [r7, #12]
 8002cea:	f7fd fbd9 	bl	80004a0 <__aeabi_f2d>
 8002cee:	f04f 0200 	mov.w	r2, #0
 8002cf2:	4b5a      	ldr	r3, [pc, #360]	; (8002e5c <Trajectory+0x2d4>)
 8002cf4:	f7fd fc2c 	bl	8000550 <__aeabi_dmul>
 8002cf8:	4602      	mov	r2, r0
 8002cfa:	460b      	mov	r3, r1
 8002cfc:	4614      	mov	r4, r2
 8002cfe:	461d      	mov	r5, r3
 8002d00:	4b52      	ldr	r3, [pc, #328]	; (8002e4c <Trajectory+0x2c4>)
 8002d02:	681b      	ldr	r3, [r3, #0]
 8002d04:	4618      	mov	r0, r3
 8002d06:	f7fd fbcb 	bl	80004a0 <__aeabi_f2d>
 8002d0a:	4602      	mov	r2, r0
 8002d0c:	460b      	mov	r3, r1
 8002d0e:	4620      	mov	r0, r4
 8002d10:	4629      	mov	r1, r5
 8002d12:	f7fd fc1d 	bl	8000550 <__aeabi_dmul>
 8002d16:	4602      	mov	r2, r0
 8002d18:	460b      	mov	r3, r1
 8002d1a:	4614      	mov	r4, r2
 8002d1c:	461d      	mov	r5, r3
 8002d1e:	4b4b      	ldr	r3, [pc, #300]	; (8002e4c <Trajectory+0x2c4>)
 8002d20:	681b      	ldr	r3, [r3, #0]
 8002d22:	4618      	mov	r0, r3
 8002d24:	f7fd fbbc 	bl	80004a0 <__aeabi_f2d>
 8002d28:	4602      	mov	r2, r0
 8002d2a:	460b      	mov	r3, r1
 8002d2c:	4620      	mov	r0, r4
 8002d2e:	4629      	mov	r1, r5
 8002d30:	f7fd fc0e 	bl	8000550 <__aeabi_dmul>
 8002d34:	4602      	mov	r2, r0
 8002d36:	460b      	mov	r3, r1
 8002d38:	4610      	mov	r0, r2
 8002d3a:	4619      	mov	r1, r3
 8002d3c:	f7fd fed8 	bl	8000af0 <__aeabi_d2f>
 8002d40:	4603      	mov	r3, r0
 8002d42:	4a47      	ldr	r2, [pc, #284]	; (8002e60 <Trajectory+0x2d8>)
 8002d44:	6013      	str	r3, [r2, #0]
			tra_velo = ab*tua;
 8002d46:	4b41      	ldr	r3, [pc, #260]	; (8002e4c <Trajectory+0x2c4>)
 8002d48:	ed93 7a00 	vldr	s14, [r3]
 8002d4c:	edd7 7a03 	vldr	s15, [r7, #12]
 8002d50:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002d54:	4b43      	ldr	r3, [pc, #268]	; (8002e64 <Trajectory+0x2dc>)
 8002d56:	edc3 7a00 	vstr	s15, [r3]
			tra_acc = ab;
 8002d5a:	4a43      	ldr	r2, [pc, #268]	; (8002e68 <Trajectory+0x2e0>)
 8002d5c:	68fb      	ldr	r3, [r7, #12]
 8002d5e:	6013      	str	r3, [r2, #0]
			/*if(tra_velo < velostart){
				tra_velo = velostart;
			}*/
			start_tra = 1;
 8002d60:	4b42      	ldr	r3, [pc, #264]	; (8002e6c <Trajectory+0x2e4>)
 8002d62:	2201      	movs	r2, #1
 8002d64:	701a      	strb	r2, [r3, #0]
 8002d66:	e17b      	b.n	8003060 <Trajectory+0x4d8>
		}
		else if(tua < (tf-tb)){
 8002d68:	4b3b      	ldr	r3, [pc, #236]	; (8002e58 <Trajectory+0x2d0>)
 8002d6a:	ed93 7a00 	vldr	s14, [r3]
 8002d6e:	4b38      	ldr	r3, [pc, #224]	; (8002e50 <Trajectory+0x2c8>)
 8002d70:	edd3 7a00 	vldr	s15, [r3]
 8002d74:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002d78:	4b34      	ldr	r3, [pc, #208]	; (8002e4c <Trajectory+0x2c4>)
 8002d7a:	edd3 7a00 	vldr	s15, [r3]
 8002d7e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002d82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002d86:	dd77      	ble.n	8002e78 <Trajectory+0x2f0>
			tra_pos = (0.5*ab*tb*tb) + (vb_n*(tua-tb));
 8002d88:	68f8      	ldr	r0, [r7, #12]
 8002d8a:	f7fd fb89 	bl	80004a0 <__aeabi_f2d>
 8002d8e:	f04f 0200 	mov.w	r2, #0
 8002d92:	4b32      	ldr	r3, [pc, #200]	; (8002e5c <Trajectory+0x2d4>)
 8002d94:	f7fd fbdc 	bl	8000550 <__aeabi_dmul>
 8002d98:	4602      	mov	r2, r0
 8002d9a:	460b      	mov	r3, r1
 8002d9c:	4614      	mov	r4, r2
 8002d9e:	461d      	mov	r5, r3
 8002da0:	4b2b      	ldr	r3, [pc, #172]	; (8002e50 <Trajectory+0x2c8>)
 8002da2:	681b      	ldr	r3, [r3, #0]
 8002da4:	4618      	mov	r0, r3
 8002da6:	f7fd fb7b 	bl	80004a0 <__aeabi_f2d>
 8002daa:	4602      	mov	r2, r0
 8002dac:	460b      	mov	r3, r1
 8002dae:	4620      	mov	r0, r4
 8002db0:	4629      	mov	r1, r5
 8002db2:	f7fd fbcd 	bl	8000550 <__aeabi_dmul>
 8002db6:	4602      	mov	r2, r0
 8002db8:	460b      	mov	r3, r1
 8002dba:	4614      	mov	r4, r2
 8002dbc:	461d      	mov	r5, r3
 8002dbe:	4b24      	ldr	r3, [pc, #144]	; (8002e50 <Trajectory+0x2c8>)
 8002dc0:	681b      	ldr	r3, [r3, #0]
 8002dc2:	4618      	mov	r0, r3
 8002dc4:	f7fd fb6c 	bl	80004a0 <__aeabi_f2d>
 8002dc8:	4602      	mov	r2, r0
 8002dca:	460b      	mov	r3, r1
 8002dcc:	4620      	mov	r0, r4
 8002dce:	4629      	mov	r1, r5
 8002dd0:	f7fd fbbe 	bl	8000550 <__aeabi_dmul>
 8002dd4:	4602      	mov	r2, r0
 8002dd6:	460b      	mov	r3, r1
 8002dd8:	4614      	mov	r4, r2
 8002dda:	461d      	mov	r5, r3
 8002ddc:	4b1b      	ldr	r3, [pc, #108]	; (8002e4c <Trajectory+0x2c4>)
 8002dde:	ed93 7a00 	vldr	s14, [r3]
 8002de2:	4b1b      	ldr	r3, [pc, #108]	; (8002e50 <Trajectory+0x2c8>)
 8002de4:	edd3 7a00 	vldr	s15, [r3]
 8002de8:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002dec:	4b19      	ldr	r3, [pc, #100]	; (8002e54 <Trajectory+0x2cc>)
 8002dee:	edd3 7a00 	vldr	s15, [r3]
 8002df2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002df6:	ee17 0a90 	vmov	r0, s15
 8002dfa:	f7fd fb51 	bl	80004a0 <__aeabi_f2d>
 8002dfe:	4602      	mov	r2, r0
 8002e00:	460b      	mov	r3, r1
 8002e02:	4620      	mov	r0, r4
 8002e04:	4629      	mov	r1, r5
 8002e06:	f7fd f9ed 	bl	80001e4 <__adddf3>
 8002e0a:	4602      	mov	r2, r0
 8002e0c:	460b      	mov	r3, r1
 8002e0e:	4610      	mov	r0, r2
 8002e10:	4619      	mov	r1, r3
 8002e12:	f7fd fe6d 	bl	8000af0 <__aeabi_d2f>
 8002e16:	4603      	mov	r3, r0
 8002e18:	4a11      	ldr	r2, [pc, #68]	; (8002e60 <Trajectory+0x2d8>)
 8002e1a:	6013      	str	r3, [r2, #0]
			tra_velo = vb_n;
 8002e1c:	4b0d      	ldr	r3, [pc, #52]	; (8002e54 <Trajectory+0x2cc>)
 8002e1e:	681b      	ldr	r3, [r3, #0]
 8002e20:	4a10      	ldr	r2, [pc, #64]	; (8002e64 <Trajectory+0x2dc>)
 8002e22:	6013      	str	r3, [r2, #0]
			tra_acc = 0;
 8002e24:	4b10      	ldr	r3, [pc, #64]	; (8002e68 <Trajectory+0x2e0>)
 8002e26:	f04f 0200 	mov.w	r2, #0
 8002e2a:	601a      	str	r2, [r3, #0]
			start_tra = 0;
 8002e2c:	4b0f      	ldr	r3, [pc, #60]	; (8002e6c <Trajectory+0x2e4>)
 8002e2e:	2200      	movs	r2, #0
 8002e30:	701a      	strb	r2, [r3, #0]
 8002e32:	e115      	b.n	8003060 <Trajectory+0x4d8>
 8002e34:	f3af 8000 	nop.w
 8002e38:	9999999a 	.word	0x9999999a
 8002e3c:	3fb99999 	.word	0x3fb99999
 8002e40:	3e99999a 	.word	0x3e99999a
 8002e44:	3e20d978 	.word	0x3e20d978
 8002e48:	200005d4 	.word	0x200005d4
 8002e4c:	200005d0 	.word	0x200005d0
 8002e50:	200005c4 	.word	0x200005c4
 8002e54:	200005c8 	.word	0x200005c8
 8002e58:	200005cc 	.word	0x200005cc
 8002e5c:	3fe00000 	.word	0x3fe00000
 8002e60:	200005b8 	.word	0x200005b8
 8002e64:	200005bc 	.word	0x200005bc
 8002e68:	200005c0 	.word	0x200005c0
 8002e6c:	200005e6 	.word	0x200005e6
 8002e70:	d97f62b7 	.word	0xd97f62b7
 8002e74:	4023193d 	.word	0x4023193d

		}
		else if(tua >= tf-tb && tua <= tf){
 8002e78:	4ba2      	ldr	r3, [pc, #648]	; (8003104 <Trajectory+0x57c>)
 8002e7a:	ed93 7a00 	vldr	s14, [r3]
 8002e7e:	4ba2      	ldr	r3, [pc, #648]	; (8003108 <Trajectory+0x580>)
 8002e80:	edd3 7a00 	vldr	s15, [r3]
 8002e84:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002e88:	4ba0      	ldr	r3, [pc, #640]	; (800310c <Trajectory+0x584>)
 8002e8a:	edd3 7a00 	vldr	s15, [r3]
 8002e8e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002e92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002e96:	f200 80e3 	bhi.w	8003060 <Trajectory+0x4d8>
 8002e9a:	4b9c      	ldr	r3, [pc, #624]	; (800310c <Trajectory+0x584>)
 8002e9c:	ed93 7a00 	vldr	s14, [r3]
 8002ea0:	4b98      	ldr	r3, [pc, #608]	; (8003104 <Trajectory+0x57c>)
 8002ea2:	edd3 7a00 	vldr	s15, [r3]
 8002ea6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002eaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002eae:	f200 80d7 	bhi.w	8003060 <Trajectory+0x4d8>
			tra_pos = (0.5*ab*tb*tb) + (vb_n*(tua-(tf-tb))) + (vb_n*(tf-(2*tb))) - (0.5*ab*(tua-(tf-tb))*(tua-(tf-tb)));
 8002eb2:	68f8      	ldr	r0, [r7, #12]
 8002eb4:	f7fd faf4 	bl	80004a0 <__aeabi_f2d>
 8002eb8:	f04f 0200 	mov.w	r2, #0
 8002ebc:	4b94      	ldr	r3, [pc, #592]	; (8003110 <Trajectory+0x588>)
 8002ebe:	f7fd fb47 	bl	8000550 <__aeabi_dmul>
 8002ec2:	4602      	mov	r2, r0
 8002ec4:	460b      	mov	r3, r1
 8002ec6:	4614      	mov	r4, r2
 8002ec8:	461d      	mov	r5, r3
 8002eca:	4b8f      	ldr	r3, [pc, #572]	; (8003108 <Trajectory+0x580>)
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	4618      	mov	r0, r3
 8002ed0:	f7fd fae6 	bl	80004a0 <__aeabi_f2d>
 8002ed4:	4602      	mov	r2, r0
 8002ed6:	460b      	mov	r3, r1
 8002ed8:	4620      	mov	r0, r4
 8002eda:	4629      	mov	r1, r5
 8002edc:	f7fd fb38 	bl	8000550 <__aeabi_dmul>
 8002ee0:	4602      	mov	r2, r0
 8002ee2:	460b      	mov	r3, r1
 8002ee4:	4614      	mov	r4, r2
 8002ee6:	461d      	mov	r5, r3
 8002ee8:	4b87      	ldr	r3, [pc, #540]	; (8003108 <Trajectory+0x580>)
 8002eea:	681b      	ldr	r3, [r3, #0]
 8002eec:	4618      	mov	r0, r3
 8002eee:	f7fd fad7 	bl	80004a0 <__aeabi_f2d>
 8002ef2:	4602      	mov	r2, r0
 8002ef4:	460b      	mov	r3, r1
 8002ef6:	4620      	mov	r0, r4
 8002ef8:	4629      	mov	r1, r5
 8002efa:	f7fd fb29 	bl	8000550 <__aeabi_dmul>
 8002efe:	4602      	mov	r2, r0
 8002f00:	460b      	mov	r3, r1
 8002f02:	4614      	mov	r4, r2
 8002f04:	461d      	mov	r5, r3
 8002f06:	4b81      	ldr	r3, [pc, #516]	; (800310c <Trajectory+0x584>)
 8002f08:	ed93 7a00 	vldr	s14, [r3]
 8002f0c:	4b7d      	ldr	r3, [pc, #500]	; (8003104 <Trajectory+0x57c>)
 8002f0e:	edd3 6a00 	vldr	s13, [r3]
 8002f12:	4b7d      	ldr	r3, [pc, #500]	; (8003108 <Trajectory+0x580>)
 8002f14:	edd3 7a00 	vldr	s15, [r3]
 8002f18:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8002f1c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002f20:	4b7c      	ldr	r3, [pc, #496]	; (8003114 <Trajectory+0x58c>)
 8002f22:	edd3 7a00 	vldr	s15, [r3]
 8002f26:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002f2a:	ee17 0a90 	vmov	r0, s15
 8002f2e:	f7fd fab7 	bl	80004a0 <__aeabi_f2d>
 8002f32:	4602      	mov	r2, r0
 8002f34:	460b      	mov	r3, r1
 8002f36:	4620      	mov	r0, r4
 8002f38:	4629      	mov	r1, r5
 8002f3a:	f7fd f953 	bl	80001e4 <__adddf3>
 8002f3e:	4602      	mov	r2, r0
 8002f40:	460b      	mov	r3, r1
 8002f42:	4614      	mov	r4, r2
 8002f44:	461d      	mov	r5, r3
 8002f46:	4b6f      	ldr	r3, [pc, #444]	; (8003104 <Trajectory+0x57c>)
 8002f48:	ed93 7a00 	vldr	s14, [r3]
 8002f4c:	4b6e      	ldr	r3, [pc, #440]	; (8003108 <Trajectory+0x580>)
 8002f4e:	edd3 7a00 	vldr	s15, [r3]
 8002f52:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8002f56:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002f5a:	4b6e      	ldr	r3, [pc, #440]	; (8003114 <Trajectory+0x58c>)
 8002f5c:	edd3 7a00 	vldr	s15, [r3]
 8002f60:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002f64:	ee17 0a90 	vmov	r0, s15
 8002f68:	f7fd fa9a 	bl	80004a0 <__aeabi_f2d>
 8002f6c:	4602      	mov	r2, r0
 8002f6e:	460b      	mov	r3, r1
 8002f70:	4620      	mov	r0, r4
 8002f72:	4629      	mov	r1, r5
 8002f74:	f7fd f936 	bl	80001e4 <__adddf3>
 8002f78:	4602      	mov	r2, r0
 8002f7a:	460b      	mov	r3, r1
 8002f7c:	4614      	mov	r4, r2
 8002f7e:	461d      	mov	r5, r3
 8002f80:	68f8      	ldr	r0, [r7, #12]
 8002f82:	f7fd fa8d 	bl	80004a0 <__aeabi_f2d>
 8002f86:	f04f 0200 	mov.w	r2, #0
 8002f8a:	4b61      	ldr	r3, [pc, #388]	; (8003110 <Trajectory+0x588>)
 8002f8c:	f7fd fae0 	bl	8000550 <__aeabi_dmul>
 8002f90:	4602      	mov	r2, r0
 8002f92:	460b      	mov	r3, r1
 8002f94:	4690      	mov	r8, r2
 8002f96:	4699      	mov	r9, r3
 8002f98:	4b5c      	ldr	r3, [pc, #368]	; (800310c <Trajectory+0x584>)
 8002f9a:	ed93 7a00 	vldr	s14, [r3]
 8002f9e:	4b59      	ldr	r3, [pc, #356]	; (8003104 <Trajectory+0x57c>)
 8002fa0:	edd3 6a00 	vldr	s13, [r3]
 8002fa4:	4b58      	ldr	r3, [pc, #352]	; (8003108 <Trajectory+0x580>)
 8002fa6:	edd3 7a00 	vldr	s15, [r3]
 8002faa:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8002fae:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002fb2:	ee17 0a90 	vmov	r0, s15
 8002fb6:	f7fd fa73 	bl	80004a0 <__aeabi_f2d>
 8002fba:	4602      	mov	r2, r0
 8002fbc:	460b      	mov	r3, r1
 8002fbe:	4640      	mov	r0, r8
 8002fc0:	4649      	mov	r1, r9
 8002fc2:	f7fd fac5 	bl	8000550 <__aeabi_dmul>
 8002fc6:	4602      	mov	r2, r0
 8002fc8:	460b      	mov	r3, r1
 8002fca:	4690      	mov	r8, r2
 8002fcc:	4699      	mov	r9, r3
 8002fce:	4b4f      	ldr	r3, [pc, #316]	; (800310c <Trajectory+0x584>)
 8002fd0:	ed93 7a00 	vldr	s14, [r3]
 8002fd4:	4b4b      	ldr	r3, [pc, #300]	; (8003104 <Trajectory+0x57c>)
 8002fd6:	edd3 6a00 	vldr	s13, [r3]
 8002fda:	4b4b      	ldr	r3, [pc, #300]	; (8003108 <Trajectory+0x580>)
 8002fdc:	edd3 7a00 	vldr	s15, [r3]
 8002fe0:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8002fe4:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002fe8:	ee17 0a90 	vmov	r0, s15
 8002fec:	f7fd fa58 	bl	80004a0 <__aeabi_f2d>
 8002ff0:	4602      	mov	r2, r0
 8002ff2:	460b      	mov	r3, r1
 8002ff4:	4640      	mov	r0, r8
 8002ff6:	4649      	mov	r1, r9
 8002ff8:	f7fd faaa 	bl	8000550 <__aeabi_dmul>
 8002ffc:	4602      	mov	r2, r0
 8002ffe:	460b      	mov	r3, r1
 8003000:	4620      	mov	r0, r4
 8003002:	4629      	mov	r1, r5
 8003004:	f7fd f8ec 	bl	80001e0 <__aeabi_dsub>
 8003008:	4602      	mov	r2, r0
 800300a:	460b      	mov	r3, r1
 800300c:	4610      	mov	r0, r2
 800300e:	4619      	mov	r1, r3
 8003010:	f7fd fd6e 	bl	8000af0 <__aeabi_d2f>
 8003014:	4603      	mov	r3, r0
 8003016:	4a40      	ldr	r2, [pc, #256]	; (8003118 <Trajectory+0x590>)
 8003018:	6013      	str	r3, [r2, #0]
			tra_velo = vb_n - (ab*(tua-(tf-tb)));
 800301a:	4b3e      	ldr	r3, [pc, #248]	; (8003114 <Trajectory+0x58c>)
 800301c:	ed93 7a00 	vldr	s14, [r3]
 8003020:	4b3a      	ldr	r3, [pc, #232]	; (800310c <Trajectory+0x584>)
 8003022:	edd3 6a00 	vldr	s13, [r3]
 8003026:	4b37      	ldr	r3, [pc, #220]	; (8003104 <Trajectory+0x57c>)
 8003028:	ed93 6a00 	vldr	s12, [r3]
 800302c:	4b36      	ldr	r3, [pc, #216]	; (8003108 <Trajectory+0x580>)
 800302e:	edd3 7a00 	vldr	s15, [r3]
 8003032:	ee76 7a67 	vsub.f32	s15, s12, s15
 8003036:	ee76 6ae7 	vsub.f32	s13, s13, s15
 800303a:	edd7 7a03 	vldr	s15, [r7, #12]
 800303e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8003042:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003046:	4b35      	ldr	r3, [pc, #212]	; (800311c <Trajectory+0x594>)
 8003048:	edc3 7a00 	vstr	s15, [r3]
			tra_acc = -ab;
 800304c:	edd7 7a03 	vldr	s15, [r7, #12]
 8003050:	eef1 7a67 	vneg.f32	s15, s15
 8003054:	4b32      	ldr	r3, [pc, #200]	; (8003120 <Trajectory+0x598>)
 8003056:	edc3 7a00 	vstr	s15, [r3]
			start_tra = 2;
 800305a:	4b32      	ldr	r3, [pc, #200]	; (8003124 <Trajectory+0x59c>)
 800305c:	2202      	movs	r2, #2
 800305e:	701a      	strb	r2, [r3, #0]
		}
		if(tua <= tf){
 8003060:	4b2a      	ldr	r3, [pc, #168]	; (800310c <Trajectory+0x584>)
 8003062:	ed93 7a00 	vldr	s14, [r3]
 8003066:	4b27      	ldr	r3, [pc, #156]	; (8003104 <Trajectory+0x57c>)
 8003068:	edd3 7a00 	vldr	s15, [r3]
 800306c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8003070:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003074:	d900      	bls.n	8003078 <Trajectory+0x4f0>
		tra_velo = 0;
		tra_acc = 0;
	}


}
 8003076:	e03f      	b.n	80030f8 <Trajectory+0x570>
			if(direct == 0){
 8003078:	4b2b      	ldr	r3, [pc, #172]	; (8003128 <Trajectory+0x5a0>)
 800307a:	781b      	ldrb	r3, [r3, #0]
 800307c:	2b00      	cmp	r3, #0
 800307e:	d123      	bne.n	80030c8 <Trajectory+0x540>
				tra_pos = tra_pos*-1;
 8003080:	4b25      	ldr	r3, [pc, #148]	; (8003118 <Trajectory+0x590>)
 8003082:	edd3 7a00 	vldr	s15, [r3]
 8003086:	eef1 7a67 	vneg.f32	s15, s15
 800308a:	4b23      	ldr	r3, [pc, #140]	; (8003118 <Trajectory+0x590>)
 800308c:	edc3 7a00 	vstr	s15, [r3]
				tra_velo = tra_velo *-1;
 8003090:	4b22      	ldr	r3, [pc, #136]	; (800311c <Trajectory+0x594>)
 8003092:	edd3 7a00 	vldr	s15, [r3]
 8003096:	eef1 7a67 	vneg.f32	s15, s15
 800309a:	4b20      	ldr	r3, [pc, #128]	; (800311c <Trajectory+0x594>)
 800309c:	edc3 7a00 	vstr	s15, [r3]
				tra_acc = tra_acc *-1;
 80030a0:	4b1f      	ldr	r3, [pc, #124]	; (8003120 <Trajectory+0x598>)
 80030a2:	edd3 7a00 	vldr	s15, [r3]
 80030a6:	eef1 7a67 	vneg.f32	s15, s15
 80030aa:	4b1d      	ldr	r3, [pc, #116]	; (8003120 <Trajectory+0x598>)
 80030ac:	edc3 7a00 	vstr	s15, [r3]
				tra_pos += rad_before;
 80030b0:	4b19      	ldr	r3, [pc, #100]	; (8003118 <Trajectory+0x590>)
 80030b2:	ed93 7a00 	vldr	s14, [r3]
 80030b6:	4b1d      	ldr	r3, [pc, #116]	; (800312c <Trajectory+0x5a4>)
 80030b8:	edd3 7a00 	vldr	s15, [r3]
 80030bc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80030c0:	4b15      	ldr	r3, [pc, #84]	; (8003118 <Trajectory+0x590>)
 80030c2:	edc3 7a00 	vstr	s15, [r3]
}
 80030c6:	e017      	b.n	80030f8 <Trajectory+0x570>
				tra_pos += rad_before;
 80030c8:	4b13      	ldr	r3, [pc, #76]	; (8003118 <Trajectory+0x590>)
 80030ca:	ed93 7a00 	vldr	s14, [r3]
 80030ce:	4b17      	ldr	r3, [pc, #92]	; (800312c <Trajectory+0x5a4>)
 80030d0:	edd3 7a00 	vldr	s15, [r3]
 80030d4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80030d8:	4b0f      	ldr	r3, [pc, #60]	; (8003118 <Trajectory+0x590>)
 80030da:	edc3 7a00 	vstr	s15, [r3]
}
 80030de:	e00b      	b.n	80030f8 <Trajectory+0x570>
		tra_pos = 0;
 80030e0:	4b0d      	ldr	r3, [pc, #52]	; (8003118 <Trajectory+0x590>)
 80030e2:	f04f 0200 	mov.w	r2, #0
 80030e6:	601a      	str	r2, [r3, #0]
		tra_velo = 0;
 80030e8:	4b0c      	ldr	r3, [pc, #48]	; (800311c <Trajectory+0x594>)
 80030ea:	f04f 0200 	mov.w	r2, #0
 80030ee:	601a      	str	r2, [r3, #0]
		tra_acc = 0;
 80030f0:	4b0b      	ldr	r3, [pc, #44]	; (8003120 <Trajectory+0x598>)
 80030f2:	f04f 0200 	mov.w	r2, #0
 80030f6:	601a      	str	r2, [r3, #0]
}
 80030f8:	bf00      	nop
 80030fa:	3710      	adds	r7, #16
 80030fc:	46bd      	mov	sp, r7
 80030fe:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8003102:	bf00      	nop
 8003104:	200005cc 	.word	0x200005cc
 8003108:	200005c4 	.word	0x200005c4
 800310c:	200005d0 	.word	0x200005d0
 8003110:	3fe00000 	.word	0x3fe00000
 8003114:	200005c8 	.word	0x200005c8
 8003118:	200005b8 	.word	0x200005b8
 800311c:	200005bc 	.word	0x200005bc
 8003120:	200005c0 	.word	0x200005c0
 8003124:	200005e6 	.word	0x200005e6
 8003128:	2000002c 	.word	0x2000002c
 800312c:	200005e0 	.word	0x200005e0

08003130 <Drivemotor>:
void Drivemotor(int PWM){
 8003130:	b590      	push	{r4, r7, lr}
 8003132:	b083      	sub	sp, #12
 8003134:	af00      	add	r7, sp, #0
 8003136:	6078      	str	r0, [r7, #4]
	if(PWM<=0 && PWM>=-10000){
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	2b00      	cmp	r3, #0
 800313c:	dc18      	bgt.n	8003170 <Drivemotor+0x40>
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	4a29      	ldr	r2, [pc, #164]	; (80031e8 <Drivemotor+0xb8>)
 8003142:	4293      	cmp	r3, r2
 8003144:	db14      	blt.n	8003170 <Drivemotor+0x40>
		PWM = 10000-aaabs(PWM);
 8003146:	6878      	ldr	r0, [r7, #4]
 8003148:	f000 fae2 	bl	8003710 <aaabs>
 800314c:	4603      	mov	r3, r0
 800314e:	f5c3 531c 	rsb	r3, r3, #9984	; 0x2700
 8003152:	3310      	adds	r3, #16
 8003154:	607b      	str	r3, [r7, #4]
		htim2.Instance->CCR1=aaabs(PWM);
 8003156:	4b25      	ldr	r3, [pc, #148]	; (80031ec <Drivemotor+0xbc>)
 8003158:	681c      	ldr	r4, [r3, #0]
 800315a:	6878      	ldr	r0, [r7, #4]
 800315c:	f000 fad8 	bl	8003710 <aaabs>
 8003160:	4603      	mov	r3, r0
 8003162:	6363      	str	r3, [r4, #52]	; 0x34
		htim2.Instance->CCR2=10000;
 8003164:	4b21      	ldr	r3, [pc, #132]	; (80031ec <Drivemotor+0xbc>)
 8003166:	681b      	ldr	r3, [r3, #0]
 8003168:	f242 7210 	movw	r2, #10000	; 0x2710
 800316c:	639a      	str	r2, [r3, #56]	; 0x38
 800316e:	e036      	b.n	80031de <Drivemotor+0xae>
		}
	else if (PWM<-10000){
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	4a1d      	ldr	r2, [pc, #116]	; (80031e8 <Drivemotor+0xb8>)
 8003174:	4293      	cmp	r3, r2
 8003176:	da09      	bge.n	800318c <Drivemotor+0x5c>
		htim2.Instance->CCR1=0;
 8003178:	4b1c      	ldr	r3, [pc, #112]	; (80031ec <Drivemotor+0xbc>)
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	2200      	movs	r2, #0
 800317e:	635a      	str	r2, [r3, #52]	; 0x34
		htim2.Instance->CCR2=10000;
 8003180:	4b1a      	ldr	r3, [pc, #104]	; (80031ec <Drivemotor+0xbc>)
 8003182:	681b      	ldr	r3, [r3, #0]
 8003184:	f242 7210 	movw	r2, #10000	; 0x2710
 8003188:	639a      	str	r2, [r3, #56]	; 0x38
		htim2.Instance->CCR2=aaabs(PWM);
	}else if(PWM>10000){
		htim2.Instance->CCR1=10000;
		htim2.Instance->CCR2=0;
	}
}
 800318a:	e028      	b.n	80031de <Drivemotor+0xae>
	}else if(PWM>0 && PWM<=10000){
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	2b00      	cmp	r3, #0
 8003190:	dd16      	ble.n	80031c0 <Drivemotor+0x90>
 8003192:	687b      	ldr	r3, [r7, #4]
 8003194:	f242 7210 	movw	r2, #10000	; 0x2710
 8003198:	4293      	cmp	r3, r2
 800319a:	dc11      	bgt.n	80031c0 <Drivemotor+0x90>
		PWM = 10000-PWM;
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	f5c3 531c 	rsb	r3, r3, #9984	; 0x2700
 80031a2:	3310      	adds	r3, #16
 80031a4:	607b      	str	r3, [r7, #4]
		htim2.Instance->CCR1=10000;
 80031a6:	4b11      	ldr	r3, [pc, #68]	; (80031ec <Drivemotor+0xbc>)
 80031a8:	681b      	ldr	r3, [r3, #0]
 80031aa:	f242 7210 	movw	r2, #10000	; 0x2710
 80031ae:	635a      	str	r2, [r3, #52]	; 0x34
		htim2.Instance->CCR2=aaabs(PWM);
 80031b0:	4b0e      	ldr	r3, [pc, #56]	; (80031ec <Drivemotor+0xbc>)
 80031b2:	681c      	ldr	r4, [r3, #0]
 80031b4:	6878      	ldr	r0, [r7, #4]
 80031b6:	f000 faab 	bl	8003710 <aaabs>
 80031ba:	4603      	mov	r3, r0
 80031bc:	63a3      	str	r3, [r4, #56]	; 0x38
 80031be:	e00e      	b.n	80031de <Drivemotor+0xae>
	}else if(PWM>10000){
 80031c0:	687b      	ldr	r3, [r7, #4]
 80031c2:	f242 7210 	movw	r2, #10000	; 0x2710
 80031c6:	4293      	cmp	r3, r2
 80031c8:	dd09      	ble.n	80031de <Drivemotor+0xae>
		htim2.Instance->CCR1=10000;
 80031ca:	4b08      	ldr	r3, [pc, #32]	; (80031ec <Drivemotor+0xbc>)
 80031cc:	681b      	ldr	r3, [r3, #0]
 80031ce:	f242 7210 	movw	r2, #10000	; 0x2710
 80031d2:	635a      	str	r2, [r3, #52]	; 0x34
		htim2.Instance->CCR2=0;
 80031d4:	4b05      	ldr	r3, [pc, #20]	; (80031ec <Drivemotor+0xbc>)
 80031d6:	681b      	ldr	r3, [r3, #0]
 80031d8:	2200      	movs	r2, #0
 80031da:	639a      	str	r2, [r3, #56]	; 0x38
}
 80031dc:	e7ff      	b.n	80031de <Drivemotor+0xae>
 80031de:	bf00      	nop
 80031e0:	370c      	adds	r7, #12
 80031e2:	46bd      	mov	sp, r7
 80031e4:	bd90      	pop	{r4, r7, pc}
 80031e6:	bf00      	nop
 80031e8:	ffffd8f0 	.word	0xffffd8f0
 80031ec:	20000330 	.word	0x20000330

080031f0 <NFcontacton>:

void NFcontacton(){
 80031f0:	b580      	push	{r7, lr}
 80031f2:	b082      	sub	sp, #8
 80031f4:	af02      	add	r7, sp, #8
	HAL_I2C_Master_Transmit(&hi2c1, NFW_ADDR, &NFREG_ON, 1, 10);
 80031f6:	230a      	movs	r3, #10
 80031f8:	9300      	str	r3, [sp, #0]
 80031fa:	2301      	movs	r3, #1
 80031fc:	4a05      	ldr	r2, [pc, #20]	; (8003214 <NFcontacton+0x24>)
 80031fe:	2146      	movs	r1, #70	; 0x46
 8003200:	4805      	ldr	r0, [pc, #20]	; (8003218 <NFcontacton+0x28>)
 8003202:	f002 fcb9 	bl	8005b78 <HAL_I2C_Master_Transmit>
	microsecDelay(60);
 8003206:	203c      	movs	r0, #60	; 0x3c
 8003208:	f000 fa64 	bl	80036d4 <microsecDelay>
	//NFwriteFlag = 0;
}
 800320c:	bf00      	nop
 800320e:	46bd      	mov	sp, r7
 8003210:	bd80      	pop	{r7, pc}
 8003212:	bf00      	nop
 8003214:	2000001f 	.word	0x2000001f
 8003218:	200001c4 	.word	0x200001c4

0800321c <NFgetstate>:

void NFgetstate(){
 800321c:	b580      	push	{r7, lr}
 800321e:	b082      	sub	sp, #8
 8003220:	af02      	add	r7, sp, #8
	if( (hi2c1.State == HAL_I2C_STATE_READY && (HAL_GetTick()-NFtimest>500))){
 8003222:	4b17      	ldr	r3, [pc, #92]	; (8003280 <NFgetstate+0x64>)
 8003224:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003228:	b2db      	uxtb	r3, r3
 800322a:	2b20      	cmp	r3, #32
 800322c:	d124      	bne.n	8003278 <NFgetstate+0x5c>
 800322e:	f001 fc63 	bl	8004af8 <HAL_GetTick>
 8003232:	4603      	mov	r3, r0
 8003234:	4a13      	ldr	r2, [pc, #76]	; (8003284 <NFgetstate+0x68>)
 8003236:	8812      	ldrh	r2, [r2, #0]
 8003238:	1a9b      	subs	r3, r3, r2
 800323a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800323e:	d91b      	bls.n	8003278 <NFgetstate+0x5c>
		NFtimest = HAL_GetTick();
 8003240:	f001 fc5a 	bl	8004af8 <HAL_GetTick>
 8003244:	4603      	mov	r3, r0
 8003246:	b29a      	uxth	r2, r3
 8003248:	4b0e      	ldr	r3, [pc, #56]	; (8003284 <NFgetstate+0x68>)
 800324a:	801a      	strh	r2, [r3, #0]
		HAL_I2C_Master_Transmit(&hi2c1, NFW_ADDR, &NFREG_INIT, 1, 10);
 800324c:	230a      	movs	r3, #10
 800324e:	9300      	str	r3, [sp, #0]
 8003250:	2301      	movs	r3, #1
 8003252:	4a0d      	ldr	r2, [pc, #52]	; (8003288 <NFgetstate+0x6c>)
 8003254:	2146      	movs	r1, #70	; 0x46
 8003256:	480a      	ldr	r0, [pc, #40]	; (8003280 <NFgetstate+0x64>)
 8003258:	f002 fc8e 	bl	8005b78 <HAL_I2C_Master_Transmit>
		microsecDelay(100);
 800325c:	2064      	movs	r0, #100	; 0x64
 800325e:	f000 fa39 	bl	80036d4 <microsecDelay>
		HAL_I2C_Master_Receive(&hi2c1, NFR_ADDR, &NFstate, 1, 10);
 8003262:	230a      	movs	r3, #10
 8003264:	9300      	str	r3, [sp, #0]
 8003266:	2301      	movs	r3, #1
 8003268:	4a08      	ldr	r2, [pc, #32]	; (800328c <NFgetstate+0x70>)
 800326a:	2147      	movs	r1, #71	; 0x47
 800326c:	4804      	ldr	r0, [pc, #16]	; (8003280 <NFgetstate+0x64>)
 800326e:	f002 fd81 	bl	8005d74 <HAL_I2C_Master_Receive>
		microsecDelay(100);
 8003272:	2064      	movs	r0, #100	; 0x64
 8003274:	f000 fa2e 	bl	80036d4 <microsecDelay>
		//NFreadFlag = 0;
	}
}
 8003278:	bf00      	nop
 800327a:	46bd      	mov	sp, r7
 800327c:	bd80      	pop	{r7, pc}
 800327e:	bf00      	nop
 8003280:	200001c4 	.word	0x200001c4
 8003284:	20000570 	.word	0x20000570
 8003288:	20000020 	.word	0x20000020
 800328c:	2000056e 	.word	0x2000056e

08003290 <AMT222getpos>:

void AMT222getpos(uint16_t *data){
 8003290:	b580      	push	{r7, lr}
 8003292:	b082      	sub	sp, #8
 8003294:	af00      	add	r7, sp, #0
 8003296:	6078      	str	r0, [r7, #4]

	switch(AMTstate){
 8003298:	4b6b      	ldr	r3, [pc, #428]	; (8003448 <AMT222getpos+0x1b8>)
 800329a:	781b      	ldrb	r3, [r3, #0]
 800329c:	2b03      	cmp	r3, #3
 800329e:	f200 80c1 	bhi.w	8003424 <AMT222getpos+0x194>
 80032a2:	a201      	add	r2, pc, #4	; (adr r2, 80032a8 <AMT222getpos+0x18>)
 80032a4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80032a8:	080032b9 	.word	0x080032b9
 80032ac:	080032e5 	.word	0x080032e5
 80032b0:	080032f9 	.word	0x080032f9
 80032b4:	0800330d 	.word	0x0800330d
	case 0:
		timeStamp = micros();
 80032b8:	f000 fa8c 	bl	80037d4 <micros>
 80032bc:	4602      	mov	r2, r0
 80032be:	460b      	mov	r3, r1
 80032c0:	4b62      	ldr	r3, [pc, #392]	; (800344c <AMT222getpos+0x1bc>)
 80032c2:	601a      	str	r2, [r3, #0]
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 80032c4:	2200      	movs	r2, #0
 80032c6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80032ca:	4861      	ldr	r0, [pc, #388]	; (8003450 <AMT222getpos+0x1c0>)
 80032cc:	f002 fade 	bl	800588c <HAL_GPIO_WritePin>
	    HAL_SPI_TransmitReceive_DMA(&hspi3, &AMTGETPOS[0], &AMTHbyte, 1);
 80032d0:	2301      	movs	r3, #1
 80032d2:	4a60      	ldr	r2, [pc, #384]	; (8003454 <AMT222getpos+0x1c4>)
 80032d4:	4960      	ldr	r1, [pc, #384]	; (8003458 <AMT222getpos+0x1c8>)
 80032d6:	4861      	ldr	r0, [pc, #388]	; (800345c <AMT222getpos+0x1cc>)
 80032d8:	f005 fc9c 	bl	8008c14 <HAL_SPI_TransmitReceive_DMA>
	    AMTcomplete = 0;
 80032dc:	4b60      	ldr	r3, [pc, #384]	; (8003460 <AMT222getpos+0x1d0>)
 80032de:	2200      	movs	r2, #0
 80032e0:	701a      	strb	r2, [r3, #0]
		break;
 80032e2:	e09f      	b.n	8003424 <AMT222getpos+0x194>
	case 1:
		//microsecDelay(5);
		AMTstate+=1;
 80032e4:	4b58      	ldr	r3, [pc, #352]	; (8003448 <AMT222getpos+0x1b8>)
 80032e6:	781b      	ldrb	r3, [r3, #0]
 80032e8:	3301      	adds	r3, #1
 80032ea:	b2da      	uxtb	r2, r3
 80032ec:	4b56      	ldr	r3, [pc, #344]	; (8003448 <AMT222getpos+0x1b8>)
 80032ee:	701a      	strb	r2, [r3, #0]
		AMTcomplete = 1;
 80032f0:	4b5b      	ldr	r3, [pc, #364]	; (8003460 <AMT222getpos+0x1d0>)
 80032f2:	2201      	movs	r2, #1
 80032f4:	701a      	strb	r2, [r3, #0]
		break;
 80032f6:	e095      	b.n	8003424 <AMT222getpos+0x194>
	case 2:
		HAL_SPI_TransmitReceive_DMA(&hspi3, &AMTGETPOS[1], &AMTLbyte, 1);
 80032f8:	2301      	movs	r3, #1
 80032fa:	4a5a      	ldr	r2, [pc, #360]	; (8003464 <AMT222getpos+0x1d4>)
 80032fc:	495a      	ldr	r1, [pc, #360]	; (8003468 <AMT222getpos+0x1d8>)
 80032fe:	4857      	ldr	r0, [pc, #348]	; (800345c <AMT222getpos+0x1cc>)
 8003300:	f005 fc88 	bl	8008c14 <HAL_SPI_TransmitReceive_DMA>
		AMTcomplete = 0;
 8003304:	4b56      	ldr	r3, [pc, #344]	; (8003460 <AMT222getpos+0x1d0>)
 8003306:	2200      	movs	r2, #0
 8003308:	701a      	strb	r2, [r3, #0]
		break;
 800330a:	e08b      	b.n	8003424 <AMT222getpos+0x194>
	case 3:
		AMTlogic_checkbit = AMT222checkbit( AMTHbyte, AMTLbyte);
 800330c:	4b51      	ldr	r3, [pc, #324]	; (8003454 <AMT222getpos+0x1c4>)
 800330e:	781b      	ldrb	r3, [r3, #0]
 8003310:	461a      	mov	r2, r3
 8003312:	4b54      	ldr	r3, [pc, #336]	; (8003464 <AMT222getpos+0x1d4>)
 8003314:	781b      	ldrb	r3, [r3, #0]
 8003316:	4619      	mov	r1, r3
 8003318:	4610      	mov	r0, r2
 800331a:	f000 f8ed 	bl	80034f8 <AMT222checkbit>
 800331e:	4603      	mov	r3, r0
 8003320:	461a      	mov	r2, r3
 8003322:	4b52      	ldr	r3, [pc, #328]	; (800346c <AMT222getpos+0x1dc>)
 8003324:	701a      	strb	r2, [r3, #0]
	    if( AMTlogic_checkbit){
 8003326:	4b51      	ldr	r3, [pc, #324]	; (800346c <AMT222getpos+0x1dc>)
 8003328:	781b      	ldrb	r3, [r3, #0]
 800332a:	2b00      	cmp	r3, #0
 800332c:	d073      	beq.n	8003416 <AMT222getpos+0x186>
		    // Shift high bit to correct position and sum them.
		    rawPos = AMTLbyte + ((AMTHbyte & 0b00111111)<<8);
 800332e:	4b4d      	ldr	r3, [pc, #308]	; (8003464 <AMT222getpos+0x1d4>)
 8003330:	781b      	ldrb	r3, [r3, #0]
 8003332:	b29a      	uxth	r2, r3
 8003334:	4b47      	ldr	r3, [pc, #284]	; (8003454 <AMT222getpos+0x1c4>)
 8003336:	781b      	ldrb	r3, [r3, #0]
 8003338:	021b      	lsls	r3, r3, #8
 800333a:	b29b      	uxth	r3, r3
 800333c:	f403 537c 	and.w	r3, r3, #16128	; 0x3f00
 8003340:	b29b      	uxth	r3, r3
 8003342:	4413      	add	r3, r2
 8003344:	b29a      	uxth	r2, r3
 8003346:	4b4a      	ldr	r3, [pc, #296]	; (8003470 <AMT222getpos+0x1e0>)
 8003348:	801a      	strh	r2, [r3, #0]
		     // Convert uint16 to angle variable.
		    current_rad = (((rawPos)*2*PI)/(16384));
 800334a:	4b49      	ldr	r3, [pc, #292]	; (8003470 <AMT222getpos+0x1e0>)
 800334c:	881b      	ldrh	r3, [r3, #0]
 800334e:	005b      	lsls	r3, r3, #1
 8003350:	ee07 3a90 	vmov	s15, r3
 8003354:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003358:	ed9f 7a46 	vldr	s14, [pc, #280]	; 8003474 <AMT222getpos+0x1e4>
 800335c:	ee27 7a87 	vmul.f32	s14, s15, s14
 8003360:	eddf 6a45 	vldr	s13, [pc, #276]	; 8003478 <AMT222getpos+0x1e8>
 8003364:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8003368:	4b44      	ldr	r3, [pc, #272]	; (800347c <AMT222getpos+0x1ec>)
 800336a:	edc3 7a00 	vstr	s15, [r3]
		    if(setzero == 0){
 800336e:	4b44      	ldr	r3, [pc, #272]	; (8003480 <AMT222getpos+0x1f0>)
 8003370:	781b      	ldrb	r3, [r3, #0]
 8003372:	2b00      	cmp	r3, #0
 8003374:	d14f      	bne.n	8003416 <AMT222getpos+0x186>
		    current_rad = offset - current_rad;
 8003376:	4b43      	ldr	r3, [pc, #268]	; (8003484 <AMT222getpos+0x1f4>)
 8003378:	ed93 7a00 	vldr	s14, [r3]
 800337c:	4b3f      	ldr	r3, [pc, #252]	; (800347c <AMT222getpos+0x1ec>)
 800337e:	edd3 7a00 	vldr	s15, [r3]
 8003382:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003386:	4b3d      	ldr	r3, [pc, #244]	; (800347c <AMT222getpos+0x1ec>)
 8003388:	edc3 7a00 	vstr	s15, [r3]
		    unwrapping();
 800338c:	f000 f936 	bl	80035fc <unwrapping>
			if(current_rad_wrap-prevPos2 > 0.1 || current_rad_wrap-prevPos2 < -0.1){
 8003390:	4b3d      	ldr	r3, [pc, #244]	; (8003488 <AMT222getpos+0x1f8>)
 8003392:	ed93 7a00 	vldr	s14, [r3]
 8003396:	4b3d      	ldr	r3, [pc, #244]	; (800348c <AMT222getpos+0x1fc>)
 8003398:	edd3 7a00 	vldr	s15, [r3]
 800339c:	ee77 7a67 	vsub.f32	s15, s14, s15
 80033a0:	ee17 0a90 	vmov	r0, s15
 80033a4:	f7fd f87c 	bl	80004a0 <__aeabi_f2d>
 80033a8:	a321      	add	r3, pc, #132	; (adr r3, 8003430 <AMT222getpos+0x1a0>)
 80033aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80033ae:	f7fd fb5f 	bl	8000a70 <__aeabi_dcmpgt>
 80033b2:	4603      	mov	r3, r0
 80033b4:	2b00      	cmp	r3, #0
 80033b6:	d113      	bne.n	80033e0 <AMT222getpos+0x150>
 80033b8:	4b33      	ldr	r3, [pc, #204]	; (8003488 <AMT222getpos+0x1f8>)
 80033ba:	ed93 7a00 	vldr	s14, [r3]
 80033be:	4b33      	ldr	r3, [pc, #204]	; (800348c <AMT222getpos+0x1fc>)
 80033c0:	edd3 7a00 	vldr	s15, [r3]
 80033c4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80033c8:	ee17 0a90 	vmov	r0, s15
 80033cc:	f7fd f868 	bl	80004a0 <__aeabi_f2d>
 80033d0:	a319      	add	r3, pc, #100	; (adr r3, 8003438 <AMT222getpos+0x1a8>)
 80033d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80033d6:	f7fd fb2d 	bl	8000a34 <__aeabi_dcmplt>
 80033da:	4603      	mov	r3, r0
 80033dc:	2b00      	cmp	r3, #0
 80033de:	d003      	beq.n	80033e8 <AMT222getpos+0x158>
				current_rad_wrap = prevPos2;
 80033e0:	4b2a      	ldr	r3, [pc, #168]	; (800348c <AMT222getpos+0x1fc>)
 80033e2:	681b      	ldr	r3, [r3, #0]
 80033e4:	4a28      	ldr	r2, [pc, #160]	; (8003488 <AMT222getpos+0x1f8>)
 80033e6:	6013      	str	r3, [r2, #0]
			}
		    prevPos2 = current_rad_wrap;
 80033e8:	4b27      	ldr	r3, [pc, #156]	; (8003488 <AMT222getpos+0x1f8>)
 80033ea:	681b      	ldr	r3, [r3, #0]
 80033ec:	4a27      	ldr	r2, [pc, #156]	; (800348c <AMT222getpos+0x1fc>)
 80033ee:	6013      	str	r3, [r2, #0]
		    deg = current_rad_wrap*57.2957795;
 80033f0:	4b25      	ldr	r3, [pc, #148]	; (8003488 <AMT222getpos+0x1f8>)
 80033f2:	681b      	ldr	r3, [r3, #0]
 80033f4:	4618      	mov	r0, r3
 80033f6:	f7fd f853 	bl	80004a0 <__aeabi_f2d>
 80033fa:	a311      	add	r3, pc, #68	; (adr r3, 8003440 <AMT222getpos+0x1b0>)
 80033fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003400:	f7fd f8a6 	bl	8000550 <__aeabi_dmul>
 8003404:	4602      	mov	r2, r0
 8003406:	460b      	mov	r3, r1
 8003408:	4610      	mov	r0, r2
 800340a:	4619      	mov	r1, r3
 800340c:	f7fd fb70 	bl	8000af0 <__aeabi_d2f>
 8003410:	4603      	mov	r3, r0
 8003412:	4a1f      	ldr	r2, [pc, #124]	; (8003490 <AMT222getpos+0x200>)
 8003414:	6013      	str	r3, [r2, #0]
		    }
			  /*if(current_rad <= 0){
				  current_rad = 6.28-(current_rad*-1);
			  }*/
	    }
		AMTstate = 0;
 8003416:	4b0c      	ldr	r3, [pc, #48]	; (8003448 <AMT222getpos+0x1b8>)
 8003418:	2200      	movs	r2, #0
 800341a:	701a      	strb	r2, [r3, #0]
		AMTcomplete = 0;
 800341c:	4b10      	ldr	r3, [pc, #64]	; (8003460 <AMT222getpos+0x1d0>)
 800341e:	2200      	movs	r2, #0
 8003420:	701a      	strb	r2, [r3, #0]
		break;
 8003422:	bf00      	nop
	}
}
 8003424:	bf00      	nop
 8003426:	3708      	adds	r7, #8
 8003428:	46bd      	mov	sp, r7
 800342a:	bd80      	pop	{r7, pc}
 800342c:	f3af 8000 	nop.w
 8003430:	9999999a 	.word	0x9999999a
 8003434:	3fb99999 	.word	0x3fb99999
 8003438:	9999999a 	.word	0x9999999a
 800343c:	bfb99999 	.word	0xbfb99999
 8003440:	1a47a9e3 	.word	0x1a47a9e3
 8003444:	404ca5dc 	.word	0x404ca5dc
 8003448:	20000588 	.word	0x20000588
 800344c:	20000568 	.word	0x20000568
 8003450:	40020400 	.word	0x40020400
 8003454:	20000576 	.word	0x20000576
 8003458:	20000574 	.word	0x20000574
 800345c:	20000218 	.word	0x20000218
 8003460:	20000023 	.word	0x20000023
 8003464:	20000577 	.word	0x20000577
 8003468:	20000575 	.word	0x20000575
 800346c:	20000578 	.word	0x20000578
 8003470:	2000057a 	.word	0x2000057a
 8003474:	40490fdb 	.word	0x40490fdb
 8003478:	46800000 	.word	0x46800000
 800347c:	2000057c 	.word	0x2000057c
 8003480:	2000000c 	.word	0x2000000c
 8003484:	20000010 	.word	0x20000010
 8003488:	20000580 	.word	0x20000580
 800348c:	200007c8 	.word	0x200007c8
 8003490:	20000584 	.word	0x20000584

08003494 <HAL_SPI_TxRxCpltCallback>:
void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi){
 8003494:	b580      	push	{r7, lr}
 8003496:	b082      	sub	sp, #8
 8003498:	af00      	add	r7, sp, #0
 800349a:	6078      	str	r0, [r7, #4]
	if(hspi == &hspi3){
 800349c:	687b      	ldr	r3, [r7, #4]
 800349e:	4a12      	ldr	r2, [pc, #72]	; (80034e8 <HAL_SPI_TxRxCpltCallback+0x54>)
 80034a0:	4293      	cmp	r3, r2
 80034a2:	d11d      	bne.n	80034e0 <HAL_SPI_TxRxCpltCallback+0x4c>
		AMTstate+=1;
 80034a4:	4b11      	ldr	r3, [pc, #68]	; (80034ec <HAL_SPI_TxRxCpltCallback+0x58>)
 80034a6:	781b      	ldrb	r3, [r3, #0]
 80034a8:	3301      	adds	r3, #1
 80034aa:	b2da      	uxtb	r2, r3
 80034ac:	4b0f      	ldr	r3, [pc, #60]	; (80034ec <HAL_SPI_TxRxCpltCallback+0x58>)
 80034ae:	701a      	strb	r2, [r3, #0]
		AMTcomplete = 1;
 80034b0:	4b0f      	ldr	r3, [pc, #60]	; (80034f0 <HAL_SPI_TxRxCpltCallback+0x5c>)
 80034b2:	2201      	movs	r2, #1
 80034b4:	701a      	strb	r2, [r3, #0]
		if(AMTstate == 1){
 80034b6:	4b0d      	ldr	r3, [pc, #52]	; (80034ec <HAL_SPI_TxRxCpltCallback+0x58>)
 80034b8:	781b      	ldrb	r3, [r3, #0]
 80034ba:	2b01      	cmp	r3, #1
 80034bc:	d103      	bne.n	80034c6 <HAL_SPI_TxRxCpltCallback+0x32>
			HAL_SPI_DMAStop(&hspi3);
 80034be:	480a      	ldr	r0, [pc, #40]	; (80034e8 <HAL_SPI_TxRxCpltCallback+0x54>)
 80034c0:	f005 fcaa 	bl	8008e18 <HAL_SPI_DMAStop>
			//microsecDelay(5);
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
			HAL_SPI_DMAStop(&hspi3);
		}
	}
}
 80034c4:	e00c      	b.n	80034e0 <HAL_SPI_TxRxCpltCallback+0x4c>
		else if(AMTstate == 3){
 80034c6:	4b09      	ldr	r3, [pc, #36]	; (80034ec <HAL_SPI_TxRxCpltCallback+0x58>)
 80034c8:	781b      	ldrb	r3, [r3, #0]
 80034ca:	2b03      	cmp	r3, #3
 80034cc:	d108      	bne.n	80034e0 <HAL_SPI_TxRxCpltCallback+0x4c>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 80034ce:	2201      	movs	r2, #1
 80034d0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80034d4:	4807      	ldr	r0, [pc, #28]	; (80034f4 <HAL_SPI_TxRxCpltCallback+0x60>)
 80034d6:	f002 f9d9 	bl	800588c <HAL_GPIO_WritePin>
			HAL_SPI_DMAStop(&hspi3);
 80034da:	4803      	ldr	r0, [pc, #12]	; (80034e8 <HAL_SPI_TxRxCpltCallback+0x54>)
 80034dc:	f005 fc9c 	bl	8008e18 <HAL_SPI_DMAStop>
}
 80034e0:	bf00      	nop
 80034e2:	3708      	adds	r7, #8
 80034e4:	46bd      	mov	sp, r7
 80034e6:	bd80      	pop	{r7, pc}
 80034e8:	20000218 	.word	0x20000218
 80034ec:	20000588 	.word	0x20000588
 80034f0:	20000023 	.word	0x20000023
 80034f4:	40020400 	.word	0x40020400

080034f8 <AMT222checkbit>:

uint8_t AMT222checkbit( uint8_t *H, uint8_t *L){
 80034f8:	b480      	push	{r7}
 80034fa:	b085      	sub	sp, #20
 80034fc:	af00      	add	r7, sp, #0
 80034fe:	6078      	str	r0, [r7, #4]
 8003500:	6039      	str	r1, [r7, #0]

	uint8_t K1 = 0;
 8003502:	2300      	movs	r3, #0
 8003504:	73fb      	strb	r3, [r7, #15]
	uint8_t K0 = 0;
 8003506:	2300      	movs	r3, #0
 8003508:	73bb      	strb	r3, [r7, #14]

	K1 = !( ((*H>>5) & 0x01) ^ ((*H>>3) & 0x01) ^ ((*H>>1) & 0x01) ^
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	781b      	ldrb	r3, [r3, #0]
 800350e:	095b      	lsrs	r3, r3, #5
 8003510:	b2da      	uxtb	r2, r3
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	781b      	ldrb	r3, [r3, #0]
 8003516:	08db      	lsrs	r3, r3, #3
 8003518:	b2db      	uxtb	r3, r3
 800351a:	4053      	eors	r3, r2
 800351c:	b2da      	uxtb	r2, r3
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	781b      	ldrb	r3, [r3, #0]
 8003522:	085b      	lsrs	r3, r3, #1
 8003524:	b2db      	uxtb	r3, r3
 8003526:	4053      	eors	r3, r2
 8003528:	b2da      	uxtb	r2, r3
			((*L>>7) & 0x01) ^ ((*L>>5) & 0x01) ^ ((*L>>7) & 0x03) ^
 800352a:	683b      	ldr	r3, [r7, #0]
 800352c:	781b      	ldrb	r3, [r3, #0]
	K1 = !( ((*H>>5) & 0x01) ^ ((*H>>3) & 0x01) ^ ((*H>>1) & 0x01) ^
 800352e:	09db      	lsrs	r3, r3, #7
 8003530:	b2db      	uxtb	r3, r3
 8003532:	4053      	eors	r3, r2
 8003534:	b2da      	uxtb	r2, r3
			((*L>>7) & 0x01) ^ ((*L>>5) & 0x01) ^ ((*L>>7) & 0x03) ^
 8003536:	683b      	ldr	r3, [r7, #0]
 8003538:	781b      	ldrb	r3, [r3, #0]
 800353a:	095b      	lsrs	r3, r3, #5
 800353c:	b2db      	uxtb	r3, r3
 800353e:	4053      	eors	r3, r2
 8003540:	b2db      	uxtb	r3, r3
 8003542:	f003 0201 	and.w	r2, r3, #1
 8003546:	683b      	ldr	r3, [r7, #0]
 8003548:	781b      	ldrb	r3, [r3, #0]
 800354a:	09db      	lsrs	r3, r3, #7
 800354c:	b2db      	uxtb	r3, r3
 800354e:	f003 0303 	and.w	r3, r3, #3
 8003552:	405a      	eors	r2, r3
			((*L>>1) & 0x01) );
 8003554:	683b      	ldr	r3, [r7, #0]
 8003556:	781b      	ldrb	r3, [r3, #0]
 8003558:	085b      	lsrs	r3, r3, #1
 800355a:	b2db      	uxtb	r3, r3
 800355c:	f003 0301 	and.w	r3, r3, #1
	K1 = !( ((*H>>5) & 0x01) ^ ((*H>>3) & 0x01) ^ ((*H>>1) & 0x01) ^
 8003560:	429a      	cmp	r2, r3
 8003562:	bf0c      	ite	eq
 8003564:	2301      	moveq	r3, #1
 8003566:	2300      	movne	r3, #0
 8003568:	b2db      	uxtb	r3, r3
 800356a:	73fb      	strb	r3, [r7, #15]

	K0 = !( ((*H>>4) & 0x01) ^ ((*H>>2) & 0x01) ^ ((*H>>0) & 0x01) ^
 800356c:	687b      	ldr	r3, [r7, #4]
 800356e:	781b      	ldrb	r3, [r3, #0]
 8003570:	091b      	lsrs	r3, r3, #4
 8003572:	b2da      	uxtb	r2, r3
 8003574:	687b      	ldr	r3, [r7, #4]
 8003576:	781b      	ldrb	r3, [r3, #0]
 8003578:	089b      	lsrs	r3, r3, #2
 800357a:	b2db      	uxtb	r3, r3
 800357c:	4053      	eors	r3, r2
 800357e:	b2da      	uxtb	r2, r3
 8003580:	687b      	ldr	r3, [r7, #4]
 8003582:	781b      	ldrb	r3, [r3, #0]
 8003584:	4053      	eors	r3, r2
 8003586:	b2da      	uxtb	r2, r3
			((*L>>6) & 0x01) ^ ((*L>>4) & 0x01) ^ ((*L>>2) & 0x03) ^
 8003588:	683b      	ldr	r3, [r7, #0]
 800358a:	781b      	ldrb	r3, [r3, #0]
	K0 = !( ((*H>>4) & 0x01) ^ ((*H>>2) & 0x01) ^ ((*H>>0) & 0x01) ^
 800358c:	099b      	lsrs	r3, r3, #6
 800358e:	b2db      	uxtb	r3, r3
 8003590:	4053      	eors	r3, r2
 8003592:	b2da      	uxtb	r2, r3
			((*L>>6) & 0x01) ^ ((*L>>4) & 0x01) ^ ((*L>>2) & 0x03) ^
 8003594:	683b      	ldr	r3, [r7, #0]
 8003596:	781b      	ldrb	r3, [r3, #0]
 8003598:	091b      	lsrs	r3, r3, #4
 800359a:	b2db      	uxtb	r3, r3
 800359c:	4053      	eors	r3, r2
 800359e:	b2db      	uxtb	r3, r3
 80035a0:	f003 0201 	and.w	r2, r3, #1
 80035a4:	683b      	ldr	r3, [r7, #0]
 80035a6:	781b      	ldrb	r3, [r3, #0]
 80035a8:	089b      	lsrs	r3, r3, #2
 80035aa:	b2db      	uxtb	r3, r3
 80035ac:	f003 0303 	and.w	r3, r3, #3
 80035b0:	405a      	eors	r2, r3
			((*L>>0) & 0x01) );
 80035b2:	683b      	ldr	r3, [r7, #0]
 80035b4:	781b      	ldrb	r3, [r3, #0]
 80035b6:	f003 0301 	and.w	r3, r3, #1
	K0 = !( ((*H>>4) & 0x01) ^ ((*H>>2) & 0x01) ^ ((*H>>0) & 0x01) ^
 80035ba:	429a      	cmp	r2, r3
 80035bc:	bf0c      	ite	eq
 80035be:	2301      	moveq	r3, #1
 80035c0:	2300      	movne	r3, #0
 80035c2:	b2db      	uxtb	r3, r3
 80035c4:	73bb      	strb	r3, [r7, #14]

	if( (K1 == ((*H>>7) & 0x01)) && (K0 == ((*H>>6) & 0x01)) ){
 80035c6:	7bfa      	ldrb	r2, [r7, #15]
 80035c8:	687b      	ldr	r3, [r7, #4]
 80035ca:	781b      	ldrb	r3, [r3, #0]
 80035cc:	09db      	lsrs	r3, r3, #7
 80035ce:	b2db      	uxtb	r3, r3
 80035d0:	f003 0301 	and.w	r3, r3, #1
 80035d4:	429a      	cmp	r2, r3
 80035d6:	d10a      	bne.n	80035ee <AMT222checkbit+0xf6>
 80035d8:	7bba      	ldrb	r2, [r7, #14]
 80035da:	687b      	ldr	r3, [r7, #4]
 80035dc:	781b      	ldrb	r3, [r3, #0]
 80035de:	099b      	lsrs	r3, r3, #6
 80035e0:	b2db      	uxtb	r3, r3
 80035e2:	f003 0301 	and.w	r3, r3, #1
 80035e6:	429a      	cmp	r2, r3
 80035e8:	d101      	bne.n	80035ee <AMT222checkbit+0xf6>
		return 1;
 80035ea:	2301      	movs	r3, #1
 80035ec:	e000      	b.n	80035f0 <AMT222checkbit+0xf8>
	}
	else{
		return 0;
 80035ee:	2300      	movs	r3, #0
	}
}
 80035f0:	4618      	mov	r0, r3
 80035f2:	3714      	adds	r7, #20
 80035f4:	46bd      	mov	sp, r7
 80035f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035fa:	4770      	bx	lr

080035fc <unwrapping>:
void unwrapping(){
 80035fc:	b480      	push	{r7}
 80035fe:	af00      	add	r7, sp, #0
	  p_n = current_rad;
 8003600:	4b2c      	ldr	r3, [pc, #176]	; (80036b4 <unwrapping+0xb8>)
 8003602:	681b      	ldr	r3, [r3, #0]
 8003604:	4a2c      	ldr	r2, [pc, #176]	; (80036b8 <unwrapping+0xbc>)
 8003606:	6013      	str	r3, [r2, #0]
		if (p_n - p_n_1 <= -1*e)
 8003608:	4b2b      	ldr	r3, [pc, #172]	; (80036b8 <unwrapping+0xbc>)
 800360a:	ed93 7a00 	vldr	s14, [r3]
 800360e:	4b2b      	ldr	r3, [pc, #172]	; (80036bc <unwrapping+0xc0>)
 8003610:	edd3 7a00 	vldr	s15, [r3]
 8003614:	ee37 7a67 	vsub.f32	s14, s14, s15
 8003618:	4b29      	ldr	r3, [pc, #164]	; (80036c0 <unwrapping+0xc4>)
 800361a:	edd3 7a00 	vldr	s15, [r3]
 800361e:	eef1 7a67 	vneg.f32	s15, s15
 8003622:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8003626:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800362a:	d80b      	bhi.n	8003644 <unwrapping+0x48>
		{
			p_0 = p_0_1 + p_max;
 800362c:	4b25      	ldr	r3, [pc, #148]	; (80036c4 <unwrapping+0xc8>)
 800362e:	ed93 7a00 	vldr	s14, [r3]
 8003632:	4b25      	ldr	r3, [pc, #148]	; (80036c8 <unwrapping+0xcc>)
 8003634:	edd3 7a00 	vldr	s15, [r3]
 8003638:	ee77 7a27 	vadd.f32	s15, s14, s15
 800363c:	4b23      	ldr	r3, [pc, #140]	; (80036cc <unwrapping+0xd0>)
 800363e:	edc3 7a00 	vstr	s15, [r3]
 8003642:	e01f      	b.n	8003684 <unwrapping+0x88>
		}
		else if(p_n - p_n_1 >= e)
 8003644:	4b1c      	ldr	r3, [pc, #112]	; (80036b8 <unwrapping+0xbc>)
 8003646:	ed93 7a00 	vldr	s14, [r3]
 800364a:	4b1c      	ldr	r3, [pc, #112]	; (80036bc <unwrapping+0xc0>)
 800364c:	edd3 7a00 	vldr	s15, [r3]
 8003650:	ee37 7a67 	vsub.f32	s14, s14, s15
 8003654:	4b1a      	ldr	r3, [pc, #104]	; (80036c0 <unwrapping+0xc4>)
 8003656:	edd3 7a00 	vldr	s15, [r3]
 800365a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800365e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003662:	db0b      	blt.n	800367c <unwrapping+0x80>
		{
			p_0 = p_0_1 - p_max;
 8003664:	4b17      	ldr	r3, [pc, #92]	; (80036c4 <unwrapping+0xc8>)
 8003666:	ed93 7a00 	vldr	s14, [r3]
 800366a:	4b17      	ldr	r3, [pc, #92]	; (80036c8 <unwrapping+0xcc>)
 800366c:	edd3 7a00 	vldr	s15, [r3]
 8003670:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003674:	4b15      	ldr	r3, [pc, #84]	; (80036cc <unwrapping+0xd0>)
 8003676:	edc3 7a00 	vstr	s15, [r3]
 800367a:	e003      	b.n	8003684 <unwrapping+0x88>
		}
		else
		{
			p_0 = p_0_1;
 800367c:	4b11      	ldr	r3, [pc, #68]	; (80036c4 <unwrapping+0xc8>)
 800367e:	681b      	ldr	r3, [r3, #0]
 8003680:	4a12      	ldr	r2, [pc, #72]	; (80036cc <unwrapping+0xd0>)
 8003682:	6013      	str	r3, [r2, #0]
		}
		//DegAbs[0][0] = (p_n + p_0); //สั�?�?าณที่ผ่าน�?าร unwrap �?ล้ว
		current_rad_wrap = (p_n + p_0);
 8003684:	4b0c      	ldr	r3, [pc, #48]	; (80036b8 <unwrapping+0xbc>)
 8003686:	ed93 7a00 	vldr	s14, [r3]
 800368a:	4b10      	ldr	r3, [pc, #64]	; (80036cc <unwrapping+0xd0>)
 800368c:	edd3 7a00 	vldr	s15, [r3]
 8003690:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003694:	4b0e      	ldr	r3, [pc, #56]	; (80036d0 <unwrapping+0xd4>)
 8003696:	edc3 7a00 	vstr	s15, [r3]
		//Memory ให้�?ับตัว�?ปร p[n-1] �?ละ p0[n-1]
		p_n_1 = p_n;
 800369a:	4b07      	ldr	r3, [pc, #28]	; (80036b8 <unwrapping+0xbc>)
 800369c:	681b      	ldr	r3, [r3, #0]
 800369e:	4a07      	ldr	r2, [pc, #28]	; (80036bc <unwrapping+0xc0>)
 80036a0:	6013      	str	r3, [r2, #0]
		p_0_1 = p_0;
 80036a2:	4b0a      	ldr	r3, [pc, #40]	; (80036cc <unwrapping+0xd0>)
 80036a4:	681b      	ldr	r3, [r3, #0]
 80036a6:	4a07      	ldr	r2, [pc, #28]	; (80036c4 <unwrapping+0xc8>)
 80036a8:	6013      	str	r3, [r2, #0]
}
 80036aa:	bf00      	nop
 80036ac:	46bd      	mov	sp, r7
 80036ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036b2:	4770      	bx	lr
 80036b4:	2000057c 	.word	0x2000057c
 80036b8:	2000058c 	.word	0x2000058c
 80036bc:	20000590 	.word	0x20000590
 80036c0:	20000028 	.word	0x20000028
 80036c4:	20000598 	.word	0x20000598
 80036c8:	20000024 	.word	0x20000024
 80036cc:	20000594 	.word	0x20000594
 80036d0:	20000580 	.word	0x20000580

080036d4 <microsecDelay>:
void microsecDelay(uint8_t delayTime){
 80036d4:	b580      	push	{r7, lr}
 80036d6:	b084      	sub	sp, #16
 80036d8:	af00      	add	r7, sp, #0
 80036da:	4603      	mov	r3, r0
 80036dc:	71fb      	strb	r3, [r7, #7]
	uint32_t startTime = micros(); 	//reference point to count passed time
 80036de:	f000 f879 	bl	80037d4 <micros>
 80036e2:	4602      	mov	r2, r0
 80036e4:	460b      	mov	r3, r1
 80036e6:	4613      	mov	r3, r2
 80036e8:	60bb      	str	r3, [r7, #8]
	uint32_t passedTime  = 0;
 80036ea:	2300      	movs	r3, #0
 80036ec:	60fb      	str	r3, [r7, #12]
	while (passedTime<delayTime){
 80036ee:	e006      	b.n	80036fe <microsecDelay+0x2a>
		passedTime = micros() - startTime;
 80036f0:	f000 f870 	bl	80037d4 <micros>
 80036f4:	4602      	mov	r2, r0
 80036f6:	460b      	mov	r3, r1
 80036f8:	68bb      	ldr	r3, [r7, #8]
 80036fa:	1ad3      	subs	r3, r2, r3
 80036fc:	60fb      	str	r3, [r7, #12]
	while (passedTime<delayTime){
 80036fe:	79fb      	ldrb	r3, [r7, #7]
 8003700:	68fa      	ldr	r2, [r7, #12]
 8003702:	429a      	cmp	r2, r3
 8003704:	d3f4      	bcc.n	80036f0 <microsecDelay+0x1c>
	}
}
 8003706:	bf00      	nop
 8003708:	bf00      	nop
 800370a:	3710      	adds	r7, #16
 800370c:	46bd      	mov	sp, r7
 800370e:	bd80      	pop	{r7, pc}

08003710 <aaabs>:


uint32_t aaabs(int x){
 8003710:	b480      	push	{r7}
 8003712:	b083      	sub	sp, #12
 8003714:	af00      	add	r7, sp, #0
 8003716:	6078      	str	r0, [r7, #4]

	if(x<0){
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	2b00      	cmp	r3, #0
 800371c:	da02      	bge.n	8003724 <aaabs+0x14>
		return x*-1;
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	425b      	negs	r3, r3
 8003722:	e000      	b.n	8003726 <aaabs+0x16>
	}else{
		return x;
 8003724:	687b      	ldr	r3, [r7, #4]
	}
}
 8003726:	4618      	mov	r0, r3
 8003728:	370c      	adds	r7, #12
 800372a:	46bd      	mov	sp, r7
 800372c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003730:	4770      	bx	lr
	...

08003734 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8003734:	b580      	push	{r7, lr}
 8003736:	b082      	sub	sp, #8
 8003738:	af00      	add	r7, sp, #0
 800373a:	4603      	mov	r3, r0
 800373c:	80fb      	strh	r3, [r7, #6]
	if(GPIO_Pin == GPIO_PIN_13){
 800373e:	88fb      	ldrh	r3, [r7, #6]
 8003740:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003744:	d102      	bne.n	800374c <HAL_GPIO_EXTI_Callback+0x18>
		blue = 1; // 0% duty cycle
 8003746:	4b11      	ldr	r3, [pc, #68]	; (800378c <HAL_GPIO_EXTI_Callback+0x58>)
 8003748:	2201      	movs	r2, #1
 800374a:	701a      	strb	r2, [r3, #0]
	}

	if(GPIO_Pin == GPIO_PIN_8){
 800374c:	88fb      	ldrh	r3, [r7, #6]
 800374e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8003752:	d117      	bne.n	8003784 <HAL_GPIO_EXTI_Callback+0x50>
		static GPIO_PinState B1State[2] = {0};
		B1State[0]= HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8);
 8003754:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003758:	480d      	ldr	r0, [pc, #52]	; (8003790 <HAL_GPIO_EXTI_Callback+0x5c>)
 800375a:	f002 f87f 	bl	800585c <HAL_GPIO_ReadPin>
 800375e:	4603      	mov	r3, r0
 8003760:	461a      	mov	r2, r3
 8003762:	4b0c      	ldr	r3, [pc, #48]	; (8003794 <HAL_GPIO_EXTI_Callback+0x60>)
 8003764:	701a      	strb	r2, [r3, #0]
		if(B1State[1] == GPIO_PIN_RESET && B1State[0] == GPIO_PIN_SET){
 8003766:	4b0b      	ldr	r3, [pc, #44]	; (8003794 <HAL_GPIO_EXTI_Callback+0x60>)
 8003768:	785b      	ldrb	r3, [r3, #1]
 800376a:	2b00      	cmp	r3, #0
 800376c:	d106      	bne.n	800377c <HAL_GPIO_EXTI_Callback+0x48>
 800376e:	4b09      	ldr	r3, [pc, #36]	; (8003794 <HAL_GPIO_EXTI_Callback+0x60>)
 8003770:	781b      	ldrb	r3, [r3, #0]
 8003772:	2b01      	cmp	r3, #1
 8003774:	d102      	bne.n	800377c <HAL_GPIO_EXTI_Callback+0x48>
			stop = 1;
 8003776:	4b08      	ldr	r3, [pc, #32]	; (8003798 <HAL_GPIO_EXTI_Callback+0x64>)
 8003778:	2201      	movs	r2, #1
 800377a:	701a      	strb	r2, [r3, #0]
		}
		B1State[1] = B1State[0];
 800377c:	4b05      	ldr	r3, [pc, #20]	; (8003794 <HAL_GPIO_EXTI_Callback+0x60>)
 800377e:	781a      	ldrb	r2, [r3, #0]
 8003780:	4b04      	ldr	r3, [pc, #16]	; (8003794 <HAL_GPIO_EXTI_Callback+0x60>)
 8003782:	705a      	strb	r2, [r3, #1]


	}
}
 8003784:	bf00      	nop
 8003786:	3708      	adds	r7, #8
 8003788:	46bd      	mov	sp, r7
 800378a:	bd80      	pop	{r7, pc}
 800378c:	200005e5 	.word	0x200005e5
 8003790:	40020000 	.word	0x40020000
 8003794:	20000808 	.word	0x20000808
 8003798:	200005a8 	.word	0x200005a8

0800379c <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 800379c:	b4b0      	push	{r4, r5, r7}
 800379e:	b083      	sub	sp, #12
 80037a0:	af00      	add	r7, sp, #0
 80037a2:	6078      	str	r0, [r7, #4]
	if (htim == &htim11) {
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	4a09      	ldr	r2, [pc, #36]	; (80037cc <HAL_TIM_PeriodElapsedCallback+0x30>)
 80037a8:	4293      	cmp	r3, r2
 80037aa:	d10a      	bne.n	80037c2 <HAL_TIM_PeriodElapsedCallback+0x26>
		_micro += 65535;
 80037ac:	4b08      	ldr	r3, [pc, #32]	; (80037d0 <HAL_TIM_PeriodElapsedCallback+0x34>)
 80037ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037b2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80037b6:	1854      	adds	r4, r2, r1
 80037b8:	f143 0500 	adc.w	r5, r3, #0
 80037bc:	4b04      	ldr	r3, [pc, #16]	; (80037d0 <HAL_TIM_PeriodElapsedCallback+0x34>)
 80037be:	e9c3 4500 	strd	r4, r5, [r3]
	}
}
 80037c2:	bf00      	nop
 80037c4:	370c      	adds	r7, #12
 80037c6:	46bd      	mov	sp, r7
 80037c8:	bcb0      	pop	{r4, r5, r7}
 80037ca:	4770      	bx	lr
 80037cc:	20000378 	.word	0x20000378
 80037d0:	200005a0 	.word	0x200005a0

080037d4 <micros>:

uint64_t micros()
{
 80037d4:	b4b0      	push	{r4, r5, r7}
 80037d6:	af00      	add	r7, sp, #0
	return _micro + htim11.Instance->CNT;
 80037d8:	4b09      	ldr	r3, [pc, #36]	; (8003800 <micros+0x2c>)
 80037da:	681b      	ldr	r3, [r3, #0]
 80037dc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80037de:	2200      	movs	r2, #0
 80037e0:	4618      	mov	r0, r3
 80037e2:	4611      	mov	r1, r2
 80037e4:	4b07      	ldr	r3, [pc, #28]	; (8003804 <micros+0x30>)
 80037e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037ea:	1884      	adds	r4, r0, r2
 80037ec:	eb41 0503 	adc.w	r5, r1, r3
 80037f0:	4622      	mov	r2, r4
 80037f2:	462b      	mov	r3, r5
}
 80037f4:	4610      	mov	r0, r2
 80037f6:	4619      	mov	r1, r3
 80037f8:	46bd      	mov	sp, r7
 80037fa:	bcb0      	pop	{r4, r5, r7}
 80037fc:	4770      	bx	lr
 80037fe:	bf00      	nop
 8003800:	20000378 	.word	0x20000378
 8003804:	200005a0 	.word	0x200005a0

08003808 <callUART>:

//----------------------------------------------------------------< UART >

void callUART(){
 8003808:	b598      	push	{r3, r4, r7, lr}
 800380a:	af00      	add	r7, sp, #0
	HAL_UART_DMAStop(&huart2);
 800380c:	4896      	ldr	r0, [pc, #600]	; (8003a68 <callUART+0x260>)
 800380e:	f006 ffa1 	bl	800a754 <HAL_UART_DMAStop>
	switch(RxState){
 8003812:	4b96      	ldr	r3, [pc, #600]	; (8003a6c <callUART+0x264>)
 8003814:	781b      	ldrb	r3, [r3, #0]
 8003816:	2b03      	cmp	r3, #3
 8003818:	f200 8113 	bhi.w	8003a42 <callUART+0x23a>
 800381c:	a201      	add	r2, pc, #4	; (adr r2, 8003824 <callUART+0x1c>)
 800381e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003822:	bf00      	nop
 8003824:	08003835 	.word	0x08003835
 8003828:	08003899 	.word	0x08003899
 800382c:	0800390f 	.word	0x0800390f
 8003830:	0800396d 	.word	0x0800396d
	case 0:											// Receive 1 byte first by default.
		Start = (Receive[0] & 0xF0)>>4;
 8003834:	4b8e      	ldr	r3, [pc, #568]	; (8003a70 <callUART+0x268>)
 8003836:	781b      	ldrb	r3, [r3, #0]
 8003838:	091b      	lsrs	r3, r3, #4
 800383a:	b2da      	uxtb	r2, r3
 800383c:	4b8d      	ldr	r3, [pc, #564]	; (8003a74 <callUART+0x26c>)
 800383e:	701a      	strb	r2, [r3, #0]
		Mode = (Receive[0] & 0x0F);
 8003840:	4b8b      	ldr	r3, [pc, #556]	; (8003a70 <callUART+0x268>)
 8003842:	781b      	ldrb	r3, [r3, #0]
 8003844:	f003 030f 	and.w	r3, r3, #15
 8003848:	b2da      	uxtb	r2, r3
 800384a:	4b8b      	ldr	r3, [pc, #556]	; (8003a78 <callUART+0x270>)
 800384c:	701a      	strb	r2, [r3, #0]
		if(Start == 0b1001){
 800384e:	4b89      	ldr	r3, [pc, #548]	; (8003a74 <callUART+0x26c>)
 8003850:	781b      	ldrb	r3, [r3, #0]
 8003852:	2b09      	cmp	r3, #9
 8003854:	f040 80f2 	bne.w	8003a3c <callUART+0x234>
			// 0b1001, 0b0100]
			sum = 0;
 8003858:	4b88      	ldr	r3, [pc, #544]	; (8003a7c <callUART+0x274>)
 800385a:	2200      	movs	r2, #0
 800385c:	701a      	strb	r2, [r3, #0]
			sum += (Receive[0]);					// Sum the START & MODE bit.
 800385e:	4b84      	ldr	r3, [pc, #528]	; (8003a70 <callUART+0x268>)
 8003860:	781a      	ldrb	r2, [r3, #0]
 8003862:	4b86      	ldr	r3, [pc, #536]	; (8003a7c <callUART+0x274>)
 8003864:	781b      	ldrb	r3, [r3, #0]
 8003866:	4413      	add	r3, r2
 8003868:	b2da      	uxtb	r2, r3
 800386a:	4b84      	ldr	r3, [pc, #528]	; (8003a7c <callUART+0x274>)
 800386c:	701a      	strb	r2, [r3, #0]
			if(Mode == 0b0111){						// Mode7
 800386e:	4b82      	ldr	r3, [pc, #520]	; (8003a78 <callUART+0x270>)
 8003870:	781b      	ldrb	r3, [r3, #0]
 8003872:	2b07      	cmp	r3, #7
 8003874:	d103      	bne.n	800387e <callUART+0x76>
				RxState = 2;
 8003876:	4b7d      	ldr	r3, [pc, #500]	; (8003a6c <callUART+0x264>)
 8003878:	2202      	movs	r2, #2
 800387a:	701a      	strb	r2, [r3, #0]
 800387c:	e002      	b.n	8003884 <callUART+0x7c>
			}
			else{
				RxState = 1;						// Go to Interrupt Receive next round.
 800387e:	4b7b      	ldr	r3, [pc, #492]	; (8003a6c <callUART+0x264>)
 8003880:	2201      	movs	r2, #1
 8003882:	701a      	strb	r2, [r3, #0]
			}
			nbyte = frameConfig(Mode);				// Set a new size of buffer.
 8003884:	4b7c      	ldr	r3, [pc, #496]	; (8003a78 <callUART+0x270>)
 8003886:	781b      	ldrb	r3, [r3, #0]
 8003888:	4618      	mov	r0, r3
 800388a:	f000 fd01 	bl	8004290 <frameConfig>
 800388e:	4603      	mov	r3, r0
 8003890:	461a      	mov	r2, r3
 8003892:	4b7b      	ldr	r3, [pc, #492]	; (8003a80 <callUART+0x278>)
 8003894:	701a      	strb	r2, [r3, #0]
		}
		break;
 8003896:	e0d1      	b.n	8003a3c <callUART+0x234>
	case 1:
		sum += frameSum( Receive, nbyte-1);			// (nbyte-1) Minus checksum out.
 8003898:	4b79      	ldr	r3, [pc, #484]	; (8003a80 <callUART+0x278>)
 800389a:	781b      	ldrb	r3, [r3, #0]
 800389c:	3b01      	subs	r3, #1
 800389e:	b2db      	uxtb	r3, r3
 80038a0:	4619      	mov	r1, r3
 80038a2:	4873      	ldr	r0, [pc, #460]	; (8003a70 <callUART+0x268>)
 80038a4:	f000 fd43 	bl	800432e <frameSum>
 80038a8:	4603      	mov	r3, r0
 80038aa:	461a      	mov	r2, r3
 80038ac:	4b73      	ldr	r3, [pc, #460]	; (8003a7c <callUART+0x274>)
 80038ae:	781b      	ldrb	r3, [r3, #0]
 80038b0:	4413      	add	r3, r2
 80038b2:	b2da      	uxtb	r2, r3
 80038b4:	4b71      	ldr	r3, [pc, #452]	; (8003a7c <callUART+0x274>)
 80038b6:	701a      	strb	r2, [r3, #0]
		if(Receive[nbyte-1] == checkSum(sum)){		// Corrected.
 80038b8:	4b71      	ldr	r3, [pc, #452]	; (8003a80 <callUART+0x278>)
 80038ba:	781b      	ldrb	r3, [r3, #0]
 80038bc:	3b01      	subs	r3, #1
 80038be:	4a6c      	ldr	r2, [pc, #432]	; (8003a70 <callUART+0x268>)
 80038c0:	5cd4      	ldrb	r4, [r2, r3]
 80038c2:	4b6e      	ldr	r3, [pc, #440]	; (8003a7c <callUART+0x274>)
 80038c4:	781b      	ldrb	r3, [r3, #0]
 80038c6:	4618      	mov	r0, r3
 80038c8:	f000 fd1e 	bl	8004308 <checkSum>
 80038cc:	4603      	mov	r3, r0
 80038ce:	429c      	cmp	r4, r3
 80038d0:	d102      	bne.n	80038d8 <callUART+0xd0>
			// Receive[nbyte-1] == checkSum(sum)
			TxState = 1;
 80038d2:	4b6c      	ldr	r3, [pc, #432]	; (8003a84 <callUART+0x27c>)
 80038d4:	2201      	movs	r2, #1
 80038d6:	701a      	strb	r2, [r3, #0]
		}
		if(Mode == 1 || Mode == 9 || Mode == 10 || Mode == 11){
 80038d8:	4b67      	ldr	r3, [pc, #412]	; (8003a78 <callUART+0x270>)
 80038da:	781b      	ldrb	r3, [r3, #0]
 80038dc:	2b01      	cmp	r3, #1
 80038de:	d00b      	beq.n	80038f8 <callUART+0xf0>
 80038e0:	4b65      	ldr	r3, [pc, #404]	; (8003a78 <callUART+0x270>)
 80038e2:	781b      	ldrb	r3, [r3, #0]
 80038e4:	2b09      	cmp	r3, #9
 80038e6:	d007      	beq.n	80038f8 <callUART+0xf0>
 80038e8:	4b63      	ldr	r3, [pc, #396]	; (8003a78 <callUART+0x270>)
 80038ea:	781b      	ldrb	r3, [r3, #0]
 80038ec:	2b0a      	cmp	r3, #10
 80038ee:	d003      	beq.n	80038f8 <callUART+0xf0>
 80038f0:	4b61      	ldr	r3, [pc, #388]	; (8003a78 <callUART+0x270>)
 80038f2:	781b      	ldrb	r3, [r3, #0]
 80038f4:	2b0b      	cmp	r3, #11
 80038f6:	d106      	bne.n	8003906 <callUART+0xfe>
			nbyte = 1;								// For receive ACK
 80038f8:	4b61      	ldr	r3, [pc, #388]	; (8003a80 <callUART+0x278>)
 80038fa:	2201      	movs	r2, #1
 80038fc:	701a      	strb	r2, [r3, #0]
			RxState = 3;
 80038fe:	4b5b      	ldr	r3, [pc, #364]	; (8003a6c <callUART+0x264>)
 8003900:	2203      	movs	r2, #3
 8003902:	701a      	strb	r2, [r3, #0]
		}
		else{
			endReceive = 1;
		}

		break;
 8003904:	e09d      	b.n	8003a42 <callUART+0x23a>
			endReceive = 1;
 8003906:	4b60      	ldr	r3, [pc, #384]	; (8003a88 <callUART+0x280>)
 8003908:	2201      	movs	r2, #1
 800390a:	701a      	strb	r2, [r3, #0]
		break;
 800390c:	e099      	b.n	8003a42 <callUART+0x23a>
	case 2:
		sum += (Receive[0]);
 800390e:	4b58      	ldr	r3, [pc, #352]	; (8003a70 <callUART+0x268>)
 8003910:	781a      	ldrb	r2, [r3, #0]
 8003912:	4b5a      	ldr	r3, [pc, #360]	; (8003a7c <callUART+0x274>)
 8003914:	781b      	ldrb	r3, [r3, #0]
 8003916:	4413      	add	r3, r2
 8003918:	b2da      	uxtb	r2, r3
 800391a:	4b58      	ldr	r3, [pc, #352]	; (8003a7c <callUART+0x274>)
 800391c:	701a      	strb	r2, [r3, #0]
		nStation = Receive[0];					// Set received station.
 800391e:	4b54      	ldr	r3, [pc, #336]	; (8003a70 <callUART+0x268>)
 8003920:	781a      	ldrb	r2, [r3, #0]
 8003922:	4b5a      	ldr	r3, [pc, #360]	; (8003a8c <callUART+0x284>)
 8003924:	701a      	strb	r2, [r3, #0]
		nDestination = Receive[0];				// Set received station.
 8003926:	4b52      	ldr	r3, [pc, #328]	; (8003a70 <callUART+0x268>)
 8003928:	781a      	ldrb	r2, [r3, #0]
 800392a:	4b59      	ldr	r3, [pc, #356]	; (8003a90 <callUART+0x288>)
 800392c:	701a      	strb	r2, [r3, #0]
		if(Receive[0] % 2 == 1){
 800392e:	4b50      	ldr	r3, [pc, #320]	; (8003a70 <callUART+0x268>)
 8003930:	781b      	ldrb	r3, [r3, #0]
 8003932:	f003 0301 	and.w	r3, r3, #1
 8003936:	b2db      	uxtb	r3, r3
 8003938:	2b00      	cmp	r3, #0
 800393a:	d00b      	beq.n	8003954 <callUART+0x14c>
			nbyte = ((Receive[0] + 1)/2)+1;
 800393c:	4b4c      	ldr	r3, [pc, #304]	; (8003a70 <callUART+0x268>)
 800393e:	781b      	ldrb	r3, [r3, #0]
 8003940:	3301      	adds	r3, #1
 8003942:	0fda      	lsrs	r2, r3, #31
 8003944:	4413      	add	r3, r2
 8003946:	105b      	asrs	r3, r3, #1
 8003948:	b2db      	uxtb	r3, r3
 800394a:	3301      	adds	r3, #1
 800394c:	b2da      	uxtb	r2, r3
 800394e:	4b4c      	ldr	r3, [pc, #304]	; (8003a80 <callUART+0x278>)
 8003950:	701a      	strb	r2, [r3, #0]
 8003952:	e007      	b.n	8003964 <callUART+0x15c>
		}
		else{
			nbyte = (Receive[0]/2)+1;
 8003954:	4b46      	ldr	r3, [pc, #280]	; (8003a70 <callUART+0x268>)
 8003956:	781b      	ldrb	r3, [r3, #0]
 8003958:	085b      	lsrs	r3, r3, #1
 800395a:	b2db      	uxtb	r3, r3
 800395c:	3301      	adds	r3, #1
 800395e:	b2da      	uxtb	r2, r3
 8003960:	4b47      	ldr	r3, [pc, #284]	; (8003a80 <callUART+0x278>)
 8003962:	701a      	strb	r2, [r3, #0]
		}
		RxState = 1;
 8003964:	4b41      	ldr	r3, [pc, #260]	; (8003a6c <callUART+0x264>)
 8003966:	2201      	movs	r2, #1
 8003968:	701a      	strb	r2, [r3, #0]
		break;
 800396a:	e06a      	b.n	8003a42 <callUART+0x23a>
	case 3:						// For Receive ACK frame
		if(Receive[0] == ACK1[0]){
 800396c:	4b40      	ldr	r3, [pc, #256]	; (8003a70 <callUART+0x268>)
 800396e:	781a      	ldrb	r2, [r3, #0]
 8003970:	4b48      	ldr	r3, [pc, #288]	; (8003a94 <callUART+0x28c>)
 8003972:	781b      	ldrb	r3, [r3, #0]
 8003974:	429a      	cmp	r2, r3
 8003976:	d104      	bne.n	8003982 <callUART+0x17a>
			keepACK[0] = Receive[0];
 8003978:	4b3d      	ldr	r3, [pc, #244]	; (8003a70 <callUART+0x268>)
 800397a:	781a      	ldrb	r2, [r3, #0]
 800397c:	4b46      	ldr	r3, [pc, #280]	; (8003a98 <callUART+0x290>)
 800397e:	701a      	strb	r2, [r3, #0]
 8003980:	e040      	b.n	8003a04 <callUART+0x1fc>
		}
		else if(Receive[0] == ACK1[1]){
 8003982:	4b3b      	ldr	r3, [pc, #236]	; (8003a70 <callUART+0x268>)
 8003984:	781a      	ldrb	r2, [r3, #0]
 8003986:	4b43      	ldr	r3, [pc, #268]	; (8003a94 <callUART+0x28c>)
 8003988:	785b      	ldrb	r3, [r3, #1]
 800398a:	429a      	cmp	r2, r3
 800398c:	d104      	bne.n	8003998 <callUART+0x190>
			keepACK[1] = Receive[0];
 800398e:	4b38      	ldr	r3, [pc, #224]	; (8003a70 <callUART+0x268>)
 8003990:	781a      	ldrb	r2, [r3, #0]
 8003992:	4b41      	ldr	r3, [pc, #260]	; (8003a98 <callUART+0x290>)
 8003994:	705a      	strb	r2, [r3, #1]
 8003996:	e035      	b.n	8003a04 <callUART+0x1fc>
		}
		else{
			Start = (Receive[0] & 0xF0)>>4;
 8003998:	4b35      	ldr	r3, [pc, #212]	; (8003a70 <callUART+0x268>)
 800399a:	781b      	ldrb	r3, [r3, #0]
 800399c:	091b      	lsrs	r3, r3, #4
 800399e:	b2da      	uxtb	r2, r3
 80039a0:	4b34      	ldr	r3, [pc, #208]	; (8003a74 <callUART+0x26c>)
 80039a2:	701a      	strb	r2, [r3, #0]
			Mode = (Receive[0] & 0x0F);
 80039a4:	4b32      	ldr	r3, [pc, #200]	; (8003a70 <callUART+0x268>)
 80039a6:	781b      	ldrb	r3, [r3, #0]
 80039a8:	f003 030f 	and.w	r3, r3, #15
 80039ac:	b2da      	uxtb	r2, r3
 80039ae:	4b32      	ldr	r3, [pc, #200]	; (8003a78 <callUART+0x270>)
 80039b0:	701a      	strb	r2, [r3, #0]
			if(Start == 0b1001){
 80039b2:	4b30      	ldr	r3, [pc, #192]	; (8003a74 <callUART+0x26c>)
 80039b4:	781b      	ldrb	r3, [r3, #0]
 80039b6:	2b09      	cmp	r3, #9
 80039b8:	d11e      	bne.n	80039f8 <callUART+0x1f0>
				// 0b1001, 0b0100
				sum = 0;
 80039ba:	4b30      	ldr	r3, [pc, #192]	; (8003a7c <callUART+0x274>)
 80039bc:	2200      	movs	r2, #0
 80039be:	701a      	strb	r2, [r3, #0]
				sum += (Receive[0]);				// Sum the START & MODE bit.
 80039c0:	4b2b      	ldr	r3, [pc, #172]	; (8003a70 <callUART+0x268>)
 80039c2:	781a      	ldrb	r2, [r3, #0]
 80039c4:	4b2d      	ldr	r3, [pc, #180]	; (8003a7c <callUART+0x274>)
 80039c6:	781b      	ldrb	r3, [r3, #0]
 80039c8:	4413      	add	r3, r2
 80039ca:	b2da      	uxtb	r2, r3
 80039cc:	4b2b      	ldr	r3, [pc, #172]	; (8003a7c <callUART+0x274>)
 80039ce:	701a      	strb	r2, [r3, #0]
				if(Mode == 0b0111){					// Mode7
 80039d0:	4b29      	ldr	r3, [pc, #164]	; (8003a78 <callUART+0x270>)
 80039d2:	781b      	ldrb	r3, [r3, #0]
 80039d4:	2b07      	cmp	r3, #7
 80039d6:	d103      	bne.n	80039e0 <callUART+0x1d8>
					RxState = 2;
 80039d8:	4b24      	ldr	r3, [pc, #144]	; (8003a6c <callUART+0x264>)
 80039da:	2202      	movs	r2, #2
 80039dc:	701a      	strb	r2, [r3, #0]
 80039de:	e002      	b.n	80039e6 <callUART+0x1de>
				}
				else{
					RxState = 1;					// Go to Interrupt Receive next round.
 80039e0:	4b22      	ldr	r3, [pc, #136]	; (8003a6c <callUART+0x264>)
 80039e2:	2201      	movs	r2, #1
 80039e4:	701a      	strb	r2, [r3, #0]
				}
				nbyte = frameConfig(Mode);			// Set a new size of buffer.
 80039e6:	4b24      	ldr	r3, [pc, #144]	; (8003a78 <callUART+0x270>)
 80039e8:	781b      	ldrb	r3, [r3, #0]
 80039ea:	4618      	mov	r0, r3
 80039ec:	f000 fc50 	bl	8004290 <frameConfig>
 80039f0:	4603      	mov	r3, r0
 80039f2:	461a      	mov	r2, r3
 80039f4:	4b22      	ldr	r3, [pc, #136]	; (8003a80 <callUART+0x278>)
 80039f6:	701a      	strb	r2, [r3, #0]
			}
			TxState = 0;
 80039f8:	4b22      	ldr	r3, [pc, #136]	; (8003a84 <callUART+0x27c>)
 80039fa:	2200      	movs	r2, #0
 80039fc:	701a      	strb	r2, [r3, #0]
			RxState = 1;
 80039fe:	4b1b      	ldr	r3, [pc, #108]	; (8003a6c <callUART+0x264>)
 8003a00:	2201      	movs	r2, #1
 8003a02:	701a      	strb	r2, [r3, #0]
		}
		if(keepACK[0] == ACK1[0] && keepACK[1] == ACK1[1]){			// It's ACK
 8003a04:	4b24      	ldr	r3, [pc, #144]	; (8003a98 <callUART+0x290>)
 8003a06:	781a      	ldrb	r2, [r3, #0]
 8003a08:	4b22      	ldr	r3, [pc, #136]	; (8003a94 <callUART+0x28c>)
 8003a0a:	781b      	ldrb	r3, [r3, #0]
 8003a0c:	429a      	cmp	r2, r3
 8003a0e:	d117      	bne.n	8003a40 <callUART+0x238>
 8003a10:	4b21      	ldr	r3, [pc, #132]	; (8003a98 <callUART+0x290>)
 8003a12:	785a      	ldrb	r2, [r3, #1]
 8003a14:	4b1f      	ldr	r3, [pc, #124]	; (8003a94 <callUART+0x28c>)
 8003a16:	785b      	ldrb	r3, [r3, #1]
 8003a18:	429a      	cmp	r2, r3
 8003a1a:	d111      	bne.n	8003a40 <callUART+0x238>
			keepACK[0] = 0;
 8003a1c:	4b1e      	ldr	r3, [pc, #120]	; (8003a98 <callUART+0x290>)
 8003a1e:	2200      	movs	r2, #0
 8003a20:	701a      	strb	r2, [r3, #0]
			keepACK[1] = 0;
 8003a22:	4b1d      	ldr	r3, [pc, #116]	; (8003a98 <callUART+0x290>)
 8003a24:	2200      	movs	r2, #0
 8003a26:	705a      	strb	r2, [r3, #1]
			ACKFlag = 1;
 8003a28:	4b1c      	ldr	r3, [pc, #112]	; (8003a9c <callUART+0x294>)
 8003a2a:	2201      	movs	r2, #1
 8003a2c:	701a      	strb	r2, [r3, #0]
			RxState = 0;
 8003a2e:	4b0f      	ldr	r3, [pc, #60]	; (8003a6c <callUART+0x264>)
 8003a30:	2200      	movs	r2, #0
 8003a32:	701a      	strb	r2, [r3, #0]
			endReceive = 1;
 8003a34:	4b14      	ldr	r3, [pc, #80]	; (8003a88 <callUART+0x280>)
 8003a36:	2201      	movs	r2, #1
 8003a38:	701a      	strb	r2, [r3, #0]
		}
		break;
 8003a3a:	e001      	b.n	8003a40 <callUART+0x238>
		break;
 8003a3c:	bf00      	nop
 8003a3e:	e000      	b.n	8003a42 <callUART+0x23a>
		break;
 8003a40:	bf00      	nop
	}
	// if complete or fail -> reset communication rxstate=0, sum=0, mode=0, nbyte=1,
	if(endReceive){
 8003a42:	4b11      	ldr	r3, [pc, #68]	; (8003a88 <callUART+0x280>)
 8003a44:	781b      	ldrb	r3, [r3, #0]
 8003a46:	2b00      	cmp	r3, #0
 8003a48:	d00b      	beq.n	8003a62 <callUART+0x25a>
		RxState = 0;
 8003a4a:	4b08      	ldr	r3, [pc, #32]	; (8003a6c <callUART+0x264>)
 8003a4c:	2200      	movs	r2, #0
 8003a4e:	701a      	strb	r2, [r3, #0]
		nbyte = 1;
 8003a50:	4b0b      	ldr	r3, [pc, #44]	; (8003a80 <callUART+0x278>)
 8003a52:	2201      	movs	r2, #1
 8003a54:	701a      	strb	r2, [r3, #0]
		sum = 0;
 8003a56:	4b09      	ldr	r3, [pc, #36]	; (8003a7c <callUART+0x274>)
 8003a58:	2200      	movs	r2, #0
 8003a5a:	701a      	strb	r2, [r3, #0]
		endReceive = 0;
 8003a5c:	4b0a      	ldr	r3, [pc, #40]	; (8003a88 <callUART+0x280>)
 8003a5e:	2200      	movs	r2, #0
 8003a60:	701a      	strb	r2, [r3, #0]
	}

	//RxComplete = 0;
}
 8003a62:	bf00      	nop
 8003a64:	bd98      	pop	{r3, r4, r7, pc}
 8003a66:	bf00      	nop
 8003a68:	200003c0 	.word	0x200003c0
 8003a6c:	2000054a 	.word	0x2000054a
 8003a70:	20000554 	.word	0x20000554
 8003a74:	2000054b 	.word	0x2000054b
 8003a78:	2000054c 	.word	0x2000054c
 8003a7c:	2000054d 	.word	0x2000054d
 8003a80:	2000001e 	.word	0x2000001e
 8003a84:	20000549 	.word	0x20000549
 8003a88:	20000566 	.word	0x20000566
 8003a8c:	20000538 	.word	0x20000538
 8003a90:	200004d0 	.word	0x200004d0
 8003a94:	20000018 	.word	0x20000018
 8003a98:	20000564 	.word	0x20000564
 8003a9c:	20000567 	.word	0x20000567

08003aa0 <responseUART>:

void responseUART(){
 8003aa0:	b590      	push	{r4, r7, lr}
 8003aa2:	b085      	sub	sp, #20
 8003aa4:	af00      	add	r7, sp, #0

	switch(Mode){
 8003aa6:	4ba2      	ldr	r3, [pc, #648]	; (8003d30 <responseUART+0x290>)
 8003aa8:	781b      	ldrb	r3, [r3, #0]
 8003aaa:	2b0e      	cmp	r3, #14
 8003aac:	f200 8369 	bhi.w	8004182 <responseUART+0x6e2>
 8003ab0:	a201      	add	r2, pc, #4	; (adr r2, 8003ab8 <responseUART+0x18>)
 8003ab2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003ab6:	bf00      	nop
 8003ab8:	0800414d 	.word	0x0800414d
 8003abc:	08003af5 	.word	0x08003af5
 8003ac0:	08003ba7 	.word	0x08003ba7
 8003ac4:	08003bd7 	.word	0x08003bd7
 8003ac8:	08003c07 	.word	0x08003c07
 8003acc:	08003c63 	.word	0x08003c63
 8003ad0:	08003cc3 	.word	0x08003cc3
 8003ad4:	08003d05 	.word	0x08003d05
 8003ad8:	08003deb 	.word	0x08003deb
 8003adc:	08003e15 	.word	0x08003e15
 8003ae0:	08003ec5 	.word	0x08003ec5
 8003ae4:	08003fc5 	.word	0x08003fc5
 8003ae8:	080040d1 	.word	0x080040d1
 8003aec:	08004101 	.word	0x08004101
 8003af0:	08004129 	.word	0x08004129

	case 0:
		break;

	case 1:	// <<<< 95% COMPLETE >>>>
		switch(TxState){
 8003af4:	4b8f      	ldr	r3, [pc, #572]	; (8003d34 <responseUART+0x294>)
 8003af6:	781b      	ldrb	r3, [r3, #0]
 8003af8:	2b04      	cmp	r3, #4
 8003afa:	f200 8329 	bhi.w	8004150 <responseUART+0x6b0>
 8003afe:	a201      	add	r2, pc, #4	; (adr r2, 8003b04 <responseUART+0x64>)
 8003b00:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003b04:	08003b9b 	.word	0x08003b9b
 8003b08:	08003b19 	.word	0x08003b19
 8003b0c:	08003b2b 	.word	0x08003b2b
 8003b10:	08003b67 	.word	0x08003b67
 8003b14:	08003b85 	.word	0x08003b85
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003b18:	2202      	movs	r2, #2
 8003b1a:	4987      	ldr	r1, [pc, #540]	; (8003d38 <responseUART+0x298>)
 8003b1c:	4887      	ldr	r0, [pc, #540]	; (8003d3c <responseUART+0x29c>)
 8003b1e:	f006 fd6b 	bl	800a5f8 <HAL_UART_Transmit_DMA>
			TxState = 2;
 8003b22:	4b84      	ldr	r3, [pc, #528]	; (8003d34 <responseUART+0x294>)
 8003b24:	2202      	movs	r2, #2
 8003b26:	701a      	strb	r2, [r3, #0]
			break;
 8003b28:	e03c      	b.n	8003ba4 <responseUART+0x104>
		case 2:
			Transmit[0] = 0b10010001;								// Store byte to Transmit.
 8003b2a:	4b85      	ldr	r3, [pc, #532]	; (8003d40 <responseUART+0x2a0>)
 8003b2c:	2291      	movs	r2, #145	; 0x91
 8003b2e:	701a      	strb	r2, [r3, #0]
			Transmit[1] = Receive[0];
 8003b30:	4b84      	ldr	r3, [pc, #528]	; (8003d44 <responseUART+0x2a4>)
 8003b32:	781a      	ldrb	r2, [r3, #0]
 8003b34:	4b82      	ldr	r3, [pc, #520]	; (8003d40 <responseUART+0x2a0>)
 8003b36:	705a      	strb	r2, [r3, #1]
			Transmit[2] = Receive[1];
 8003b38:	4b82      	ldr	r3, [pc, #520]	; (8003d44 <responseUART+0x2a4>)
 8003b3a:	785a      	ldrb	r2, [r3, #1]
 8003b3c:	4b80      	ldr	r3, [pc, #512]	; (8003d40 <responseUART+0x2a0>)
 8003b3e:	709a      	strb	r2, [r3, #2]
			Transmit[3] = checkSum(frameSum(Transmit, 3));			// Let the last byte equal to checksum of 1st-3rd byte.
 8003b40:	2103      	movs	r1, #3
 8003b42:	487f      	ldr	r0, [pc, #508]	; (8003d40 <responseUART+0x2a0>)
 8003b44:	f000 fbf3 	bl	800432e <frameSum>
 8003b48:	4603      	mov	r3, r0
 8003b4a:	4618      	mov	r0, r3
 8003b4c:	f000 fbdc 	bl	8004308 <checkSum>
 8003b50:	4603      	mov	r3, r0
 8003b52:	461a      	mov	r2, r3
 8003b54:	4b7a      	ldr	r3, [pc, #488]	; (8003d40 <responseUART+0x2a0>)
 8003b56:	70da      	strb	r2, [r3, #3]
			RxState = 3;
 8003b58:	4b7b      	ldr	r3, [pc, #492]	; (8003d48 <responseUART+0x2a8>)
 8003b5a:	2203      	movs	r2, #3
 8003b5c:	701a      	strb	r2, [r3, #0]
			TxState = 3;
 8003b5e:	4b75      	ldr	r3, [pc, #468]	; (8003d34 <responseUART+0x294>)
 8003b60:	2203      	movs	r2, #3
 8003b62:	701a      	strb	r2, [r3, #0]
			break;
 8003b64:	e01e      	b.n	8003ba4 <responseUART+0x104>
		case 3:
			if(huart2.gState == HAL_UART_STATE_READY){
 8003b66:	4b75      	ldr	r3, [pc, #468]	; (8003d3c <responseUART+0x29c>)
 8003b68:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003b6c:	b2db      	uxtb	r3, r3
 8003b6e:	2b20      	cmp	r3, #32
 8003b70:	d115      	bne.n	8003b9e <responseUART+0xfe>
				HAL_UART_Transmit_DMA(&huart2, Transmit, 4);		// Transmit command back.
 8003b72:	2204      	movs	r2, #4
 8003b74:	4972      	ldr	r1, [pc, #456]	; (8003d40 <responseUART+0x2a0>)
 8003b76:	4871      	ldr	r0, [pc, #452]	; (8003d3c <responseUART+0x29c>)
 8003b78:	f006 fd3e 	bl	800a5f8 <HAL_UART_Transmit_DMA>
				TxState = 4;
 8003b7c:	4b6d      	ldr	r3, [pc, #436]	; (8003d34 <responseUART+0x294>)
 8003b7e:	2204      	movs	r2, #4
 8003b80:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003b82:	e00c      	b.n	8003b9e <responseUART+0xfe>
		case 4:
			if(ACKFlag){
 8003b84:	4b71      	ldr	r3, [pc, #452]	; (8003d4c <responseUART+0x2ac>)
 8003b86:	781b      	ldrb	r3, [r3, #0]
 8003b88:	2b00      	cmp	r3, #0
 8003b8a:	d00a      	beq.n	8003ba2 <responseUART+0x102>
				ACKFlag = 0;
 8003b8c:	4b6f      	ldr	r3, [pc, #444]	; (8003d4c <responseUART+0x2ac>)
 8003b8e:	2200      	movs	r2, #0
 8003b90:	701a      	strb	r2, [r3, #0]
				TxState = 0;
 8003b92:	4b68      	ldr	r3, [pc, #416]	; (8003d34 <responseUART+0x294>)
 8003b94:	2200      	movs	r2, #0
 8003b96:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003b98:	e003      	b.n	8003ba2 <responseUART+0x102>
			break;
 8003b9a:	bf00      	nop
 8003b9c:	e2d8      	b.n	8004150 <responseUART+0x6b0>
			break;
 8003b9e:	bf00      	nop
 8003ba0:	e2d6      	b.n	8004150 <responseUART+0x6b0>
			break;
 8003ba2:	bf00      	nop
		}
		break;
 8003ba4:	e2d4      	b.n	8004150 <responseUART+0x6b0>

	case 2:	// <<<< COMPLETE >>>>
		// Connect
		switch(TxState){
 8003ba6:	4b63      	ldr	r3, [pc, #396]	; (8003d34 <responseUART+0x294>)
 8003ba8:	781b      	ldrb	r3, [r3, #0]
 8003baa:	2b00      	cmp	r3, #0
 8003bac:	d011      	beq.n	8003bd2 <responseUART+0x132>
 8003bae:	2b01      	cmp	r3, #1
 8003bb0:	f040 82d0 	bne.w	8004154 <responseUART+0x6b4>
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003bb4:	2202      	movs	r2, #2
 8003bb6:	4960      	ldr	r1, [pc, #384]	; (8003d38 <responseUART+0x298>)
 8003bb8:	4860      	ldr	r0, [pc, #384]	; (8003d3c <responseUART+0x29c>)
 8003bba:	f006 fd1d 	bl	800a5f8 <HAL_UART_Transmit_DMA>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 8003bbe:	2201      	movs	r2, #1
 8003bc0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003bc4:	4862      	ldr	r0, [pc, #392]	; (8003d50 <responseUART+0x2b0>)
 8003bc6:	f001 fe61 	bl	800588c <HAL_GPIO_WritePin>
			TxState = 0;
 8003bca:	4b5a      	ldr	r3, [pc, #360]	; (8003d34 <responseUART+0x294>)
 8003bcc:	2200      	movs	r2, #0
 8003bce:	701a      	strb	r2, [r3, #0]
			break;
 8003bd0:	e000      	b.n	8003bd4 <responseUART+0x134>
			break;
 8003bd2:	bf00      	nop
		}
		break;
 8003bd4:	e2be      	b.n	8004154 <responseUART+0x6b4>

	case 3:	// <<<< COMPLETE >>>>
		// Disconnect
		switch(TxState){
 8003bd6:	4b57      	ldr	r3, [pc, #348]	; (8003d34 <responseUART+0x294>)
 8003bd8:	781b      	ldrb	r3, [r3, #0]
 8003bda:	2b00      	cmp	r3, #0
 8003bdc:	d011      	beq.n	8003c02 <responseUART+0x162>
 8003bde:	2b01      	cmp	r3, #1
 8003be0:	f040 82ba 	bne.w	8004158 <responseUART+0x6b8>
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003be4:	2202      	movs	r2, #2
 8003be6:	4954      	ldr	r1, [pc, #336]	; (8003d38 <responseUART+0x298>)
 8003be8:	4854      	ldr	r0, [pc, #336]	; (8003d3c <responseUART+0x29c>)
 8003bea:	f006 fd05 	bl	800a5f8 <HAL_UART_Transmit_DMA>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 8003bee:	2200      	movs	r2, #0
 8003bf0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003bf4:	4856      	ldr	r0, [pc, #344]	; (8003d50 <responseUART+0x2b0>)
 8003bf6:	f001 fe49 	bl	800588c <HAL_GPIO_WritePin>
			TxState = 0;
 8003bfa:	4b4e      	ldr	r3, [pc, #312]	; (8003d34 <responseUART+0x294>)
 8003bfc:	2200      	movs	r2, #0
 8003bfe:	701a      	strb	r2, [r3, #0]
			break;
 8003c00:	e000      	b.n	8003c04 <responseUART+0x164>
			break;
 8003c02:	bf00      	nop
		}
		break;
 8003c04:	e2a8      	b.n	8004158 <responseUART+0x6b8>

	case 4:	// <<<< COMPLETE >>>>
		// Set limit of omega
		switch(TxState){
 8003c06:	4b4b      	ldr	r3, [pc, #300]	; (8003d34 <responseUART+0x294>)
 8003c08:	781b      	ldrb	r3, [r3, #0]
 8003c0a:	2b00      	cmp	r3, #0
 8003c0c:	d027      	beq.n	8003c5e <responseUART+0x1be>
 8003c0e:	2b01      	cmp	r3, #1
 8003c10:	f040 82a4 	bne.w	800415c <responseUART+0x6bc>
		case 0:
			break;
		case 1:
			limitOmega = (Receive[1]*10.0)/(255.0);
 8003c14:	4b4b      	ldr	r3, [pc, #300]	; (8003d44 <responseUART+0x2a4>)
 8003c16:	785b      	ldrb	r3, [r3, #1]
 8003c18:	4618      	mov	r0, r3
 8003c1a:	f7fc fc2f 	bl	800047c <__aeabi_i2d>
 8003c1e:	f04f 0200 	mov.w	r2, #0
 8003c22:	4b4c      	ldr	r3, [pc, #304]	; (8003d54 <responseUART+0x2b4>)
 8003c24:	f7fc fc94 	bl	8000550 <__aeabi_dmul>
 8003c28:	4602      	mov	r2, r0
 8003c2a:	460b      	mov	r3, r1
 8003c2c:	4610      	mov	r0, r2
 8003c2e:	4619      	mov	r1, r3
 8003c30:	a33b      	add	r3, pc, #236	; (adr r3, 8003d20 <responseUART+0x280>)
 8003c32:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003c36:	f7fc fdb5 	bl	80007a4 <__aeabi_ddiv>
 8003c3a:	4602      	mov	r2, r0
 8003c3c:	460b      	mov	r3, r1
 8003c3e:	4610      	mov	r0, r2
 8003c40:	4619      	mov	r1, r3
 8003c42:	f7fc ff55 	bl	8000af0 <__aeabi_d2f>
 8003c46:	4603      	mov	r3, r0
 8003c48:	4a43      	ldr	r2, [pc, #268]	; (8003d58 <responseUART+0x2b8>)
 8003c4a:	6013      	str	r3, [r2, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003c4c:	2202      	movs	r2, #2
 8003c4e:	493a      	ldr	r1, [pc, #232]	; (8003d38 <responseUART+0x298>)
 8003c50:	483a      	ldr	r0, [pc, #232]	; (8003d3c <responseUART+0x29c>)
 8003c52:	f006 fcd1 	bl	800a5f8 <HAL_UART_Transmit_DMA>
			TxState = 0;
 8003c56:	4b37      	ldr	r3, [pc, #220]	; (8003d34 <responseUART+0x294>)
 8003c58:	2200      	movs	r2, #0
 8003c5a:	701a      	strb	r2, [r3, #0]
			break;
 8003c5c:	e000      	b.n	8003c60 <responseUART+0x1c0>
			break;
 8003c5e:	bf00      	nop
		}
		break;
 8003c60:	e27c      	b.n	800415c <responseUART+0x6bc>

	case 5: // <<<< 95% COMPLETE >>>>
		// Set new position()
		switch(TxState){
 8003c62:	4b34      	ldr	r3, [pc, #208]	; (8003d34 <responseUART+0x294>)
 8003c64:	781b      	ldrb	r3, [r3, #0]
 8003c66:	2b00      	cmp	r3, #0
 8003c68:	d029      	beq.n	8003cbe <responseUART+0x21e>
 8003c6a:	2b01      	cmp	r3, #1
 8003c6c:	f040 8278 	bne.w	8004160 <responseUART+0x6c0>
		case 0:
			break;
		case 1:
			nDestination = 1;
 8003c70:	4b3a      	ldr	r3, [pc, #232]	; (8003d5c <responseUART+0x2bc>)
 8003c72:	2201      	movs	r2, #1
 8003c74:	701a      	strb	r2, [r3, #0]
			Destination[0] = ( ( (Receive[0]*256)+(Receive[1]) )*(180) )/(10000*3.14);
 8003c76:	4b33      	ldr	r3, [pc, #204]	; (8003d44 <responseUART+0x2a4>)
 8003c78:	781b      	ldrb	r3, [r3, #0]
 8003c7a:	021b      	lsls	r3, r3, #8
 8003c7c:	4a31      	ldr	r2, [pc, #196]	; (8003d44 <responseUART+0x2a4>)
 8003c7e:	7852      	ldrb	r2, [r2, #1]
 8003c80:	4413      	add	r3, r2
 8003c82:	22b4      	movs	r2, #180	; 0xb4
 8003c84:	fb02 f303 	mul.w	r3, r2, r3
 8003c88:	4618      	mov	r0, r3
 8003c8a:	f7fc fbf7 	bl	800047c <__aeabi_i2d>
 8003c8e:	a326      	add	r3, pc, #152	; (adr r3, 8003d28 <responseUART+0x288>)
 8003c90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003c94:	f7fc fd86 	bl	80007a4 <__aeabi_ddiv>
 8003c98:	4602      	mov	r2, r0
 8003c9a:	460b      	mov	r3, r1
 8003c9c:	4610      	mov	r0, r2
 8003c9e:	4619      	mov	r1, r3
 8003ca0:	f7fc ff06 	bl	8000ab0 <__aeabi_d2uiz>
 8003ca4:	4603      	mov	r3, r0
 8003ca6:	b29a      	uxth	r2, r3
 8003ca8:	4b2d      	ldr	r3, [pc, #180]	; (8003d60 <responseUART+0x2c0>)
 8003caa:	801a      	strh	r2, [r3, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003cac:	2202      	movs	r2, #2
 8003cae:	4922      	ldr	r1, [pc, #136]	; (8003d38 <responseUART+0x298>)
 8003cb0:	4822      	ldr	r0, [pc, #136]	; (8003d3c <responseUART+0x29c>)
 8003cb2:	f006 fca1 	bl	800a5f8 <HAL_UART_Transmit_DMA>
			TxState = 0;
 8003cb6:	4b1f      	ldr	r3, [pc, #124]	; (8003d34 <responseUART+0x294>)
 8003cb8:	2200      	movs	r2, #0
 8003cba:	701a      	strb	r2, [r3, #0]
			//timeStamp = HAL_GetTick();								// Optional
			break;
 8003cbc:	e000      	b.n	8003cc0 <responseUART+0x220>
			break;
 8003cbe:	bf00      	nop
		}
		break;
 8003cc0:	e24e      	b.n	8004160 <responseUART+0x6c0>

	case 6:	// <<<< 95% COMPLETE >>>>
		// Set 1 station
		switch(TxState){
 8003cc2:	4b1c      	ldr	r3, [pc, #112]	; (8003d34 <responseUART+0x294>)
 8003cc4:	781b      	ldrb	r3, [r3, #0]
 8003cc6:	2b00      	cmp	r3, #0
 8003cc8:	d01a      	beq.n	8003d00 <responseUART+0x260>
 8003cca:	2b01      	cmp	r3, #1
 8003ccc:	f040 824a 	bne.w	8004164 <responseUART+0x6c4>
		case 0:
			break;
		case 1:
			nStation = 1;
 8003cd0:	4b24      	ldr	r3, [pc, #144]	; (8003d64 <responseUART+0x2c4>)
 8003cd2:	2201      	movs	r2, #1
 8003cd4:	701a      	strb	r2, [r3, #0]
			nDestination = 1;
 8003cd6:	4b21      	ldr	r3, [pc, #132]	; (8003d5c <responseUART+0x2bc>)
 8003cd8:	2201      	movs	r2, #1
 8003cda:	701a      	strb	r2, [r3, #0]
			Destination[0] = tranStation(Receive[1]);
 8003cdc:	4b19      	ldr	r3, [pc, #100]	; (8003d44 <responseUART+0x2a4>)
 8003cde:	785b      	ldrb	r3, [r3, #1]
 8003ce0:	4618      	mov	r0, r3
 8003ce2:	f000 fa69 	bl	80041b8 <tranStation>
 8003ce6:	4603      	mov	r3, r0
 8003ce8:	461a      	mov	r2, r3
 8003cea:	4b1d      	ldr	r3, [pc, #116]	; (8003d60 <responseUART+0x2c0>)
 8003cec:	801a      	strh	r2, [r3, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003cee:	2202      	movs	r2, #2
 8003cf0:	4911      	ldr	r1, [pc, #68]	; (8003d38 <responseUART+0x298>)
 8003cf2:	4812      	ldr	r0, [pc, #72]	; (8003d3c <responseUART+0x29c>)
 8003cf4:	f006 fc80 	bl	800a5f8 <HAL_UART_Transmit_DMA>
			TxState = 0;
 8003cf8:	4b0e      	ldr	r3, [pc, #56]	; (8003d34 <responseUART+0x294>)
 8003cfa:	2200      	movs	r2, #0
 8003cfc:	701a      	strb	r2, [r3, #0]
			//timeStamp = HAL_GetTick();								// Optional
			break;
 8003cfe:	e000      	b.n	8003d02 <responseUART+0x262>
			break;
 8003d00:	bf00      	nop
		}
		break;
 8003d02:	e22f      	b.n	8004164 <responseUART+0x6c4>

	case 7:
		// set n station
		switch(TxState){
 8003d04:	4b0b      	ldr	r3, [pc, #44]	; (8003d34 <responseUART+0x294>)
 8003d06:	781b      	ldrb	r3, [r3, #0]
 8003d08:	2b00      	cmp	r3, #0
 8003d0a:	d06c      	beq.n	8003de6 <responseUART+0x346>
 8003d0c:	2b01      	cmp	r3, #1
 8003d0e:	f040 822b 	bne.w	8004168 <responseUART+0x6c8>
		case 0:
			break;
		case 1:
			nDestination = nStation;
 8003d12:	4b14      	ldr	r3, [pc, #80]	; (8003d64 <responseUART+0x2c4>)
 8003d14:	781a      	ldrb	r2, [r3, #0]
 8003d16:	4b11      	ldr	r3, [pc, #68]	; (8003d5c <responseUART+0x2bc>)
 8003d18:	701a      	strb	r2, [r3, #0]
			for(int i=0; i<(nStation+(nStation%2)); i+=2){
 8003d1a:	2300      	movs	r3, #0
 8003d1c:	60fb      	str	r3, [r7, #12]
 8003d1e:	e04e      	b.n	8003dbe <responseUART+0x31e>
 8003d20:	00000000 	.word	0x00000000
 8003d24:	406fe000 	.word	0x406fe000
 8003d28:	00000000 	.word	0x00000000
 8003d2c:	40deaa00 	.word	0x40deaa00
 8003d30:	2000054c 	.word	0x2000054c
 8003d34:	20000549 	.word	0x20000549
 8003d38:	20000018 	.word	0x20000018
 8003d3c:	200003c0 	.word	0x200003c0
 8003d40:	20000550 	.word	0x20000550
 8003d44:	20000554 	.word	0x20000554
 8003d48:	2000054a 	.word	0x2000054a
 8003d4c:	20000567 	.word	0x20000567
 8003d50:	40020400 	.word	0x40020400
 8003d54:	40240000 	.word	0x40240000
 8003d58:	20000014 	.word	0x20000014
 8003d5c:	200004d0 	.word	0x200004d0
 8003d60:	200004d4 	.word	0x200004d4
 8003d64:	20000538 	.word	0x20000538
				Destination[i] = tranStation(Receive[j] & 0x0F);
 8003d68:	4ba4      	ldr	r3, [pc, #656]	; (8003ffc <responseUART+0x55c>)
 8003d6a:	781b      	ldrb	r3, [r3, #0]
 8003d6c:	461a      	mov	r2, r3
 8003d6e:	4ba4      	ldr	r3, [pc, #656]	; (8004000 <responseUART+0x560>)
 8003d70:	5c9b      	ldrb	r3, [r3, r2]
 8003d72:	f003 030f 	and.w	r3, r3, #15
 8003d76:	b2db      	uxtb	r3, r3
 8003d78:	4618      	mov	r0, r3
 8003d7a:	f000 fa1d 	bl	80041b8 <tranStation>
 8003d7e:	4603      	mov	r3, r0
 8003d80:	4619      	mov	r1, r3
 8003d82:	4aa0      	ldr	r2, [pc, #640]	; (8004004 <responseUART+0x564>)
 8003d84:	68fb      	ldr	r3, [r7, #12]
 8003d86:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				Destination[i+1] = tranStation((Receive[j] & 0xF0)>>4);
 8003d8a:	4b9c      	ldr	r3, [pc, #624]	; (8003ffc <responseUART+0x55c>)
 8003d8c:	781b      	ldrb	r3, [r3, #0]
 8003d8e:	461a      	mov	r2, r3
 8003d90:	4b9b      	ldr	r3, [pc, #620]	; (8004000 <responseUART+0x560>)
 8003d92:	5c9b      	ldrb	r3, [r3, r2]
 8003d94:	091b      	lsrs	r3, r3, #4
 8003d96:	b2da      	uxtb	r2, r3
 8003d98:	68fb      	ldr	r3, [r7, #12]
 8003d9a:	1c5c      	adds	r4, r3, #1
 8003d9c:	4610      	mov	r0, r2
 8003d9e:	f000 fa0b 	bl	80041b8 <tranStation>
 8003da2:	4603      	mov	r3, r0
 8003da4:	461a      	mov	r2, r3
 8003da6:	4b97      	ldr	r3, [pc, #604]	; (8004004 <responseUART+0x564>)
 8003da8:	f823 2014 	strh.w	r2, [r3, r4, lsl #1]
				j+=1;
 8003dac:	4b93      	ldr	r3, [pc, #588]	; (8003ffc <responseUART+0x55c>)
 8003dae:	781b      	ldrb	r3, [r3, #0]
 8003db0:	3301      	adds	r3, #1
 8003db2:	b2da      	uxtb	r2, r3
 8003db4:	4b91      	ldr	r3, [pc, #580]	; (8003ffc <responseUART+0x55c>)
 8003db6:	701a      	strb	r2, [r3, #0]
			for(int i=0; i<(nStation+(nStation%2)); i+=2){
 8003db8:	68fb      	ldr	r3, [r7, #12]
 8003dba:	3302      	adds	r3, #2
 8003dbc:	60fb      	str	r3, [r7, #12]
 8003dbe:	4b92      	ldr	r3, [pc, #584]	; (8004008 <responseUART+0x568>)
 8003dc0:	781b      	ldrb	r3, [r3, #0]
 8003dc2:	3301      	adds	r3, #1
 8003dc4:	f023 0301 	bic.w	r3, r3, #1
 8003dc8:	68fa      	ldr	r2, [r7, #12]
 8003dca:	429a      	cmp	r2, r3
 8003dcc:	dbcc      	blt.n	8003d68 <responseUART+0x2c8>
			}
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003dce:	2202      	movs	r2, #2
 8003dd0:	498e      	ldr	r1, [pc, #568]	; (800400c <responseUART+0x56c>)
 8003dd2:	488f      	ldr	r0, [pc, #572]	; (8004010 <responseUART+0x570>)
 8003dd4:	f006 fc10 	bl	800a5f8 <HAL_UART_Transmit_DMA>
			j = 0;
 8003dd8:	4b88      	ldr	r3, [pc, #544]	; (8003ffc <responseUART+0x55c>)
 8003dda:	2200      	movs	r2, #0
 8003ddc:	701a      	strb	r2, [r3, #0]
			TxState = 0;
 8003dde:	4b8d      	ldr	r3, [pc, #564]	; (8004014 <responseUART+0x574>)
 8003de0:	2200      	movs	r2, #0
 8003de2:	701a      	strb	r2, [r3, #0]
			break;
 8003de4:	e000      	b.n	8003de8 <responseUART+0x348>
			break;
 8003de6:	bf00      	nop
		}
		break;
 8003de8:	e1be      	b.n	8004168 <responseUART+0x6c8>

	case 8:	// <<<< 95% COMPLETE >>>>
		// Go!
		switch(TxState){
 8003dea:	4b8a      	ldr	r3, [pc, #552]	; (8004014 <responseUART+0x574>)
 8003dec:	781b      	ldrb	r3, [r3, #0]
 8003dee:	2b00      	cmp	r3, #0
 8003df0:	d00e      	beq.n	8003e10 <responseUART+0x370>
 8003df2:	2b01      	cmp	r3, #1
 8003df4:	f040 81ba 	bne.w	800416c <responseUART+0x6cc>
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003df8:	2202      	movs	r2, #2
 8003dfa:	4984      	ldr	r1, [pc, #528]	; (800400c <responseUART+0x56c>)
 8003dfc:	4884      	ldr	r0, [pc, #528]	; (8004010 <responseUART+0x570>)
 8003dfe:	f006 fbfb 	bl	800a5f8 <HAL_UART_Transmit_DMA>
			movingFlag = 8;
 8003e02:	4b85      	ldr	r3, [pc, #532]	; (8004018 <responseUART+0x578>)
 8003e04:	2208      	movs	r2, #8
 8003e06:	701a      	strb	r2, [r3, #0]
			TxState = 0;
 8003e08:	4b82      	ldr	r3, [pc, #520]	; (8004014 <responseUART+0x574>)
 8003e0a:	2200      	movs	r2, #0
 8003e0c:	701a      	strb	r2, [r3, #0]
			//timeStamp = HAL_GetTick();								// Optional
			break;
 8003e0e:	e000      	b.n	8003e12 <responseUART+0x372>
			break;
 8003e10:	bf00      	nop
		}
		break;
 8003e12:	e1ab      	b.n	800416c <responseUART+0x6cc>

	case 9:	// <<<< 95% COMPLETE >>>>
		// transmit station
		switch(TxState){
 8003e14:	4b7f      	ldr	r3, [pc, #508]	; (8004014 <responseUART+0x574>)
 8003e16:	781b      	ldrb	r3, [r3, #0]
 8003e18:	2b04      	cmp	r3, #4
 8003e1a:	f200 81a9 	bhi.w	8004170 <responseUART+0x6d0>
 8003e1e:	a201      	add	r2, pc, #4	; (adr r2, 8003e24 <responseUART+0x384>)
 8003e20:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003e24:	08003eb9 	.word	0x08003eb9
 8003e28:	08003e39 	.word	0x08003e39
 8003e2c:	08003e4b 	.word	0x08003e4b
 8003e30:	08003e85 	.word	0x08003e85
 8003e34:	08003ea3 	.word	0x08003ea3
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003e38:	2202      	movs	r2, #2
 8003e3a:	4974      	ldr	r1, [pc, #464]	; (800400c <responseUART+0x56c>)
 8003e3c:	4874      	ldr	r0, [pc, #464]	; (8004010 <responseUART+0x570>)
 8003e3e:	f006 fbdb 	bl	800a5f8 <HAL_UART_Transmit_DMA>
			TxState = 2;
 8003e42:	4b74      	ldr	r3, [pc, #464]	; (8004014 <responseUART+0x574>)
 8003e44:	2202      	movs	r2, #2
 8003e46:	701a      	strb	r2, [r3, #0]
			break;
 8003e48:	e03b      	b.n	8003ec2 <responseUART+0x422>
		case 2:
			Transmit[0] = 0b10011001;								// Store byte to Transmit.
 8003e4a:	4b74      	ldr	r3, [pc, #464]	; (800401c <responseUART+0x57c>)
 8003e4c:	2299      	movs	r2, #153	; 0x99
 8003e4e:	701a      	strb	r2, [r3, #0]
			Transmit[1] = 0;
 8003e50:	4b72      	ldr	r3, [pc, #456]	; (800401c <responseUART+0x57c>)
 8003e52:	2200      	movs	r2, #0
 8003e54:	705a      	strb	r2, [r3, #1]
			Transmit[2] = nowStation;								// Value from state machine.
 8003e56:	4b72      	ldr	r3, [pc, #456]	; (8004020 <responseUART+0x580>)
 8003e58:	781a      	ldrb	r2, [r3, #0]
 8003e5a:	4b70      	ldr	r3, [pc, #448]	; (800401c <responseUART+0x57c>)
 8003e5c:	709a      	strb	r2, [r3, #2]
			Transmit[3] = checkSum(frameSum(Transmit, 3));			// Let the last byte equal to checksum of 1st-3rd byte.
 8003e5e:	2103      	movs	r1, #3
 8003e60:	486e      	ldr	r0, [pc, #440]	; (800401c <responseUART+0x57c>)
 8003e62:	f000 fa64 	bl	800432e <frameSum>
 8003e66:	4603      	mov	r3, r0
 8003e68:	4618      	mov	r0, r3
 8003e6a:	f000 fa4d 	bl	8004308 <checkSum>
 8003e6e:	4603      	mov	r3, r0
 8003e70:	461a      	mov	r2, r3
 8003e72:	4b6a      	ldr	r3, [pc, #424]	; (800401c <responseUART+0x57c>)
 8003e74:	70da      	strb	r2, [r3, #3]
			RxState = 3;
 8003e76:	4b6b      	ldr	r3, [pc, #428]	; (8004024 <responseUART+0x584>)
 8003e78:	2203      	movs	r2, #3
 8003e7a:	701a      	strb	r2, [r3, #0]
			TxState = 3;
 8003e7c:	4b65      	ldr	r3, [pc, #404]	; (8004014 <responseUART+0x574>)
 8003e7e:	2203      	movs	r2, #3
 8003e80:	701a      	strb	r2, [r3, #0]
			break;
 8003e82:	e01e      	b.n	8003ec2 <responseUART+0x422>
		case 3:
			if(huart2.gState == HAL_UART_STATE_READY){
 8003e84:	4b62      	ldr	r3, [pc, #392]	; (8004010 <responseUART+0x570>)
 8003e86:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003e8a:	b2db      	uxtb	r3, r3
 8003e8c:	2b20      	cmp	r3, #32
 8003e8e:	d115      	bne.n	8003ebc <responseUART+0x41c>
				HAL_UART_Transmit_DMA(&huart2, Transmit, 4);		// Transmit command back.
 8003e90:	2204      	movs	r2, #4
 8003e92:	4962      	ldr	r1, [pc, #392]	; (800401c <responseUART+0x57c>)
 8003e94:	485e      	ldr	r0, [pc, #376]	; (8004010 <responseUART+0x570>)
 8003e96:	f006 fbaf 	bl	800a5f8 <HAL_UART_Transmit_DMA>
				TxState = 4;
 8003e9a:	4b5e      	ldr	r3, [pc, #376]	; (8004014 <responseUART+0x574>)
 8003e9c:	2204      	movs	r2, #4
 8003e9e:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003ea0:	e00c      	b.n	8003ebc <responseUART+0x41c>
		case 4:
			if(ACKFlag){
 8003ea2:	4b61      	ldr	r3, [pc, #388]	; (8004028 <responseUART+0x588>)
 8003ea4:	781b      	ldrb	r3, [r3, #0]
 8003ea6:	2b00      	cmp	r3, #0
 8003ea8:	d00a      	beq.n	8003ec0 <responseUART+0x420>
				ACKFlag = 0;
 8003eaa:	4b5f      	ldr	r3, [pc, #380]	; (8004028 <responseUART+0x588>)
 8003eac:	2200      	movs	r2, #0
 8003eae:	701a      	strb	r2, [r3, #0]
				TxState = 0;
 8003eb0:	4b58      	ldr	r3, [pc, #352]	; (8004014 <responseUART+0x574>)
 8003eb2:	2200      	movs	r2, #0
 8003eb4:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003eb6:	e003      	b.n	8003ec0 <responseUART+0x420>
			break;
 8003eb8:	bf00      	nop
 8003eba:	e159      	b.n	8004170 <responseUART+0x6d0>
			break;
 8003ebc:	bf00      	nop
 8003ebe:	e157      	b.n	8004170 <responseUART+0x6d0>
			break;
 8003ec0:	bf00      	nop
		}
		break;
 8003ec2:	e155      	b.n	8004170 <responseUART+0x6d0>

	case 10:	// <<<< 95% COMPLETE >>>>
		// transmit theta (rad variable)
		switch(TxState){
 8003ec4:	4b53      	ldr	r3, [pc, #332]	; (8004014 <responseUART+0x574>)
 8003ec6:	781b      	ldrb	r3, [r3, #0]
 8003ec8:	2b04      	cmp	r3, #4
 8003eca:	f200 8153 	bhi.w	8004174 <responseUART+0x6d4>
 8003ece:	a201      	add	r2, pc, #4	; (adr r2, 8003ed4 <responseUART+0x434>)
 8003ed0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003ed4:	08003fb9 	.word	0x08003fb9
 8003ed8:	08003ee9 	.word	0x08003ee9
 8003edc:	08003efb 	.word	0x08003efb
 8003ee0:	08003f85 	.word	0x08003f85
 8003ee4:	08003fa3 	.word	0x08003fa3
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003ee8:	2202      	movs	r2, #2
 8003eea:	4948      	ldr	r1, [pc, #288]	; (800400c <responseUART+0x56c>)
 8003eec:	4848      	ldr	r0, [pc, #288]	; (8004010 <responseUART+0x570>)
 8003eee:	f006 fb83 	bl	800a5f8 <HAL_UART_Transmit_DMA>
			TxState = 2;
 8003ef2:	4b48      	ldr	r3, [pc, #288]	; (8004014 <responseUART+0x574>)
 8003ef4:	2202      	movs	r2, #2
 8003ef6:	701a      	strb	r2, [r3, #0]
			break;
 8003ef8:	e063      	b.n	8003fc2 <responseUART+0x522>
		case 2:
			Transmit[0] = 0b10011010;								// Store byte to Transmit.
 8003efa:	4b48      	ldr	r3, [pc, #288]	; (800401c <responseUART+0x57c>)
 8003efc:	229a      	movs	r2, #154	; 0x9a
 8003efe:	701a      	strb	r2, [r3, #0]
			Transmit[1] = ( (uint16_t)(current_rad_wrap*10000)) >> 8;									// 16bit value from encoder.
 8003f00:	4b4a      	ldr	r3, [pc, #296]	; (800402c <responseUART+0x58c>)
 8003f02:	edd3 7a00 	vldr	s15, [r3]
 8003f06:	ed9f 7a4a 	vldr	s14, [pc, #296]	; 8004030 <responseUART+0x590>
 8003f0a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003f0e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003f12:	ee17 3a90 	vmov	r3, s15
 8003f16:	b29b      	uxth	r3, r3
 8003f18:	0a1b      	lsrs	r3, r3, #8
 8003f1a:	b29b      	uxth	r3, r3
 8003f1c:	b2da      	uxtb	r2, r3
 8003f1e:	4b3f      	ldr	r3, [pc, #252]	; (800401c <responseUART+0x57c>)
 8003f20:	705a      	strb	r2, [r3, #1]
			Transmit[2] = ( (uint16_t)(current_rad_wrap*10000)) & 0xFF;
 8003f22:	4b42      	ldr	r3, [pc, #264]	; (800402c <responseUART+0x58c>)
 8003f24:	edd3 7a00 	vldr	s15, [r3]
 8003f28:	ed9f 7a41 	vldr	s14, [pc, #260]	; 8004030 <responseUART+0x590>
 8003f2c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003f30:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003f34:	ee17 3a90 	vmov	r3, s15
 8003f38:	b29b      	uxth	r3, r3
 8003f3a:	b2da      	uxtb	r2, r3
 8003f3c:	4b37      	ldr	r3, [pc, #220]	; (800401c <responseUART+0x57c>)
 8003f3e:	709a      	strb	r2, [r3, #2]
			if(HAL_GetTick()-HMEtimeStamp < 1000){
 8003f40:	f000 fdda 	bl	8004af8 <HAL_GetTick>
 8003f44:	4603      	mov	r3, r0
 8003f46:	4a3b      	ldr	r2, [pc, #236]	; (8004034 <responseUART+0x594>)
 8003f48:	8812      	ldrh	r2, [r2, #0]
 8003f4a:	1a9b      	subs	r3, r3, r2
 8003f4c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003f50:	d205      	bcs.n	8003f5e <responseUART+0x4be>
				Transmit[1] = 0;
 8003f52:	4b32      	ldr	r3, [pc, #200]	; (800401c <responseUART+0x57c>)
 8003f54:	2200      	movs	r2, #0
 8003f56:	705a      	strb	r2, [r3, #1]
				Transmit[2] = 0;
 8003f58:	4b30      	ldr	r3, [pc, #192]	; (800401c <responseUART+0x57c>)
 8003f5a:	2200      	movs	r2, #0
 8003f5c:	709a      	strb	r2, [r3, #2]
			}
			Transmit[3] = checkSum(frameSum(Transmit, 3));			// Let the last byte equal to checksum of 1st-3rd byte.
 8003f5e:	2103      	movs	r1, #3
 8003f60:	482e      	ldr	r0, [pc, #184]	; (800401c <responseUART+0x57c>)
 8003f62:	f000 f9e4 	bl	800432e <frameSum>
 8003f66:	4603      	mov	r3, r0
 8003f68:	4618      	mov	r0, r3
 8003f6a:	f000 f9cd 	bl	8004308 <checkSum>
 8003f6e:	4603      	mov	r3, r0
 8003f70:	461a      	mov	r2, r3
 8003f72:	4b2a      	ldr	r3, [pc, #168]	; (800401c <responseUART+0x57c>)
 8003f74:	70da      	strb	r2, [r3, #3]
			RxState = 3;
 8003f76:	4b2b      	ldr	r3, [pc, #172]	; (8004024 <responseUART+0x584>)
 8003f78:	2203      	movs	r2, #3
 8003f7a:	701a      	strb	r2, [r3, #0]
			TxState = 3;
 8003f7c:	4b25      	ldr	r3, [pc, #148]	; (8004014 <responseUART+0x574>)
 8003f7e:	2203      	movs	r2, #3
 8003f80:	701a      	strb	r2, [r3, #0]
			break;
 8003f82:	e01e      	b.n	8003fc2 <responseUART+0x522>
		case 3:
			if(huart2.gState == HAL_UART_STATE_READY){
 8003f84:	4b22      	ldr	r3, [pc, #136]	; (8004010 <responseUART+0x570>)
 8003f86:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003f8a:	b2db      	uxtb	r3, r3
 8003f8c:	2b20      	cmp	r3, #32
 8003f8e:	d115      	bne.n	8003fbc <responseUART+0x51c>
				HAL_UART_Transmit_DMA(&huart2, Transmit, 4);		// Transmit command back.
 8003f90:	2204      	movs	r2, #4
 8003f92:	4922      	ldr	r1, [pc, #136]	; (800401c <responseUART+0x57c>)
 8003f94:	481e      	ldr	r0, [pc, #120]	; (8004010 <responseUART+0x570>)
 8003f96:	f006 fb2f 	bl	800a5f8 <HAL_UART_Transmit_DMA>
				TxState = 4;
 8003f9a:	4b1e      	ldr	r3, [pc, #120]	; (8004014 <responseUART+0x574>)
 8003f9c:	2204      	movs	r2, #4
 8003f9e:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003fa0:	e00c      	b.n	8003fbc <responseUART+0x51c>
		case 4:
			if(ACKFlag){
 8003fa2:	4b21      	ldr	r3, [pc, #132]	; (8004028 <responseUART+0x588>)
 8003fa4:	781b      	ldrb	r3, [r3, #0]
 8003fa6:	2b00      	cmp	r3, #0
 8003fa8:	d00a      	beq.n	8003fc0 <responseUART+0x520>
				ACKFlag = 0;
 8003faa:	4b1f      	ldr	r3, [pc, #124]	; (8004028 <responseUART+0x588>)
 8003fac:	2200      	movs	r2, #0
 8003fae:	701a      	strb	r2, [r3, #0]
				TxState = 0;
 8003fb0:	4b18      	ldr	r3, [pc, #96]	; (8004014 <responseUART+0x574>)
 8003fb2:	2200      	movs	r2, #0
 8003fb4:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003fb6:	e003      	b.n	8003fc0 <responseUART+0x520>
			break;
 8003fb8:	bf00      	nop
 8003fba:	e0db      	b.n	8004174 <responseUART+0x6d4>
			break;
 8003fbc:	bf00      	nop
 8003fbe:	e0d9      	b.n	8004174 <responseUART+0x6d4>
			break;
 8003fc0:	bf00      	nop
		}
		break;
 8003fc2:	e0d7      	b.n	8004174 <responseUART+0x6d4>

	case 11:	// <<<< 95% COMPLETE >>>>
		// transmit top omega (rad variable)
		switch(TxState){
 8003fc4:	4b13      	ldr	r3, [pc, #76]	; (8004014 <responseUART+0x574>)
 8003fc6:	781b      	ldrb	r3, [r3, #0]
 8003fc8:	2b04      	cmp	r3, #4
 8003fca:	f200 80d5 	bhi.w	8004178 <responseUART+0x6d8>
 8003fce:	a201      	add	r2, pc, #4	; (adr r2, 8003fd4 <responseUART+0x534>)
 8003fd0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003fd4:	080040c5 	.word	0x080040c5
 8003fd8:	08003fe9 	.word	0x08003fe9
 8003fdc:	08004039 	.word	0x08004039
 8003fe0:	08004091 	.word	0x08004091
 8003fe4:	080040af 	.word	0x080040af
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003fe8:	2202      	movs	r2, #2
 8003fea:	4908      	ldr	r1, [pc, #32]	; (800400c <responseUART+0x56c>)
 8003fec:	4808      	ldr	r0, [pc, #32]	; (8004010 <responseUART+0x570>)
 8003fee:	f006 fb03 	bl	800a5f8 <HAL_UART_Transmit_DMA>
			TxState = 2;
 8003ff2:	4b08      	ldr	r3, [pc, #32]	; (8004014 <responseUART+0x574>)
 8003ff4:	2202      	movs	r2, #2
 8003ff6:	701a      	strb	r2, [r3, #0]
			break;
 8003ff8:	e069      	b.n	80040ce <responseUART+0x62e>
 8003ffa:	bf00      	nop
 8003ffc:	2000053a 	.word	0x2000053a
 8004000:	20000554 	.word	0x20000554
 8004004:	200004d4 	.word	0x200004d4
 8004008:	20000538 	.word	0x20000538
 800400c:	20000018 	.word	0x20000018
 8004010:	200003c0 	.word	0x200003c0
 8004014:	20000549 	.word	0x20000549
 8004018:	2000053c 	.word	0x2000053c
 800401c:	20000550 	.word	0x20000550
 8004020:	20000539 	.word	0x20000539
 8004024:	2000054a 	.word	0x2000054a
 8004028:	20000567 	.word	0x20000567
 800402c:	20000580 	.word	0x20000580
 8004030:	461c4000 	.word	0x461c4000
 8004034:	2000056c 	.word	0x2000056c
		case 2:
			Transmit[0] = 0b10011011;								// Store byte to Transmit.
 8004038:	4b54      	ldr	r3, [pc, #336]	; (800418c <responseUART+0x6ec>)
 800403a:	229b      	movs	r2, #155	; 0x9b
 800403c:	701a      	strb	r2, [r3, #0]
			Transmit[1] = 0;
 800403e:	4b53      	ldr	r3, [pc, #332]	; (800418c <responseUART+0x6ec>)
 8004040:	2200      	movs	r2, #0
 8004042:	705a      	strb	r2, [r3, #1]
			Transmit[2] = (topOmega*255)/(10);
 8004044:	4b52      	ldr	r3, [pc, #328]	; (8004190 <responseUART+0x6f0>)
 8004046:	edd3 7a00 	vldr	s15, [r3]
 800404a:	ed9f 7a52 	vldr	s14, [pc, #328]	; 8004194 <responseUART+0x6f4>
 800404e:	ee27 7a87 	vmul.f32	s14, s15, s14
 8004052:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8004056:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800405a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800405e:	edc7 7a01 	vstr	s15, [r7, #4]
 8004062:	793b      	ldrb	r3, [r7, #4]
 8004064:	b2da      	uxtb	r2, r3
 8004066:	4b49      	ldr	r3, [pc, #292]	; (800418c <responseUART+0x6ec>)
 8004068:	709a      	strb	r2, [r3, #2]
			// Transmit[2] = ((topOmega*255)/(10))
			Transmit[3] = checkSum(frameSum(Transmit, 3));			// Let the last byte equal to checksum of 1st-3rd byte.
 800406a:	2103      	movs	r1, #3
 800406c:	4847      	ldr	r0, [pc, #284]	; (800418c <responseUART+0x6ec>)
 800406e:	f000 f95e 	bl	800432e <frameSum>
 8004072:	4603      	mov	r3, r0
 8004074:	4618      	mov	r0, r3
 8004076:	f000 f947 	bl	8004308 <checkSum>
 800407a:	4603      	mov	r3, r0
 800407c:	461a      	mov	r2, r3
 800407e:	4b43      	ldr	r3, [pc, #268]	; (800418c <responseUART+0x6ec>)
 8004080:	70da      	strb	r2, [r3, #3]
			RxState = 3;
 8004082:	4b45      	ldr	r3, [pc, #276]	; (8004198 <responseUART+0x6f8>)
 8004084:	2203      	movs	r2, #3
 8004086:	701a      	strb	r2, [r3, #0]
			TxState = 3;
 8004088:	4b44      	ldr	r3, [pc, #272]	; (800419c <responseUART+0x6fc>)
 800408a:	2203      	movs	r2, #3
 800408c:	701a      	strb	r2, [r3, #0]
			break;
 800408e:	e01e      	b.n	80040ce <responseUART+0x62e>
		case 3:
			if(huart2.gState == HAL_UART_STATE_READY){
 8004090:	4b43      	ldr	r3, [pc, #268]	; (80041a0 <responseUART+0x700>)
 8004092:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004096:	b2db      	uxtb	r3, r3
 8004098:	2b20      	cmp	r3, #32
 800409a:	d115      	bne.n	80040c8 <responseUART+0x628>
				HAL_UART_Transmit_DMA(&huart2, Transmit, 4);		// Transmit command back.
 800409c:	2204      	movs	r2, #4
 800409e:	493b      	ldr	r1, [pc, #236]	; (800418c <responseUART+0x6ec>)
 80040a0:	483f      	ldr	r0, [pc, #252]	; (80041a0 <responseUART+0x700>)
 80040a2:	f006 faa9 	bl	800a5f8 <HAL_UART_Transmit_DMA>
				TxState = 4;
 80040a6:	4b3d      	ldr	r3, [pc, #244]	; (800419c <responseUART+0x6fc>)
 80040a8:	2204      	movs	r2, #4
 80040aa:	701a      	strb	r2, [r3, #0]
			}
			break;
 80040ac:	e00c      	b.n	80040c8 <responseUART+0x628>
		case 4:
			if(ACKFlag){
 80040ae:	4b3d      	ldr	r3, [pc, #244]	; (80041a4 <responseUART+0x704>)
 80040b0:	781b      	ldrb	r3, [r3, #0]
 80040b2:	2b00      	cmp	r3, #0
 80040b4:	d00a      	beq.n	80040cc <responseUART+0x62c>
				ACKFlag = 0;
 80040b6:	4b3b      	ldr	r3, [pc, #236]	; (80041a4 <responseUART+0x704>)
 80040b8:	2200      	movs	r2, #0
 80040ba:	701a      	strb	r2, [r3, #0]
				TxState = 0;
 80040bc:	4b37      	ldr	r3, [pc, #220]	; (800419c <responseUART+0x6fc>)
 80040be:	2200      	movs	r2, #0
 80040c0:	701a      	strb	r2, [r3, #0]
			}
			break;
 80040c2:	e003      	b.n	80040cc <responseUART+0x62c>
			break;
 80040c4:	bf00      	nop
 80040c6:	e057      	b.n	8004178 <responseUART+0x6d8>
			break;
 80040c8:	bf00      	nop
 80040ca:	e055      	b.n	8004178 <responseUART+0x6d8>
			break;
 80040cc:	bf00      	nop
		}
		break;
 80040ce:	e053      	b.n	8004178 <responseUART+0x6d8>

	case 12:
		// Enable end-effector
		switch(TxState){
 80040d0:	4b32      	ldr	r3, [pc, #200]	; (800419c <responseUART+0x6fc>)
 80040d2:	781b      	ldrb	r3, [r3, #0]
 80040d4:	2b00      	cmp	r3, #0
 80040d6:	d002      	beq.n	80040de <responseUART+0x63e>
 80040d8:	2b01      	cmp	r3, #1
 80040da:	d004      	beq.n	80040e6 <responseUART+0x646>
			NFenable = 1;
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
			TxState = 0;
			break;
		}
		break;
 80040dc:	e051      	b.n	8004182 <responseUART+0x6e2>
			if(huart2.gState == HAL_UART_STATE_READY){
 80040de:	4b30      	ldr	r3, [pc, #192]	; (80041a0 <responseUART+0x700>)
 80040e0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
			break;
 80040e4:	e00b      	b.n	80040fe <responseUART+0x65e>
			NFenable = 1;
 80040e6:	4b30      	ldr	r3, [pc, #192]	; (80041a8 <responseUART+0x708>)
 80040e8:	2201      	movs	r2, #1
 80040ea:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 80040ec:	2202      	movs	r2, #2
 80040ee:	492f      	ldr	r1, [pc, #188]	; (80041ac <responseUART+0x70c>)
 80040f0:	482b      	ldr	r0, [pc, #172]	; (80041a0 <responseUART+0x700>)
 80040f2:	f006 fa81 	bl	800a5f8 <HAL_UART_Transmit_DMA>
			TxState = 0;
 80040f6:	4b29      	ldr	r3, [pc, #164]	; (800419c <responseUART+0x6fc>)
 80040f8:	2200      	movs	r2, #0
 80040fa:	701a      	strb	r2, [r3, #0]
			break;
 80040fc:	bf00      	nop
		break;
 80040fe:	e040      	b.n	8004182 <responseUART+0x6e2>

	case 13:
		// Disable end-effector
		switch(TxState){
 8004100:	4b26      	ldr	r3, [pc, #152]	; (800419c <responseUART+0x6fc>)
 8004102:	781b      	ldrb	r3, [r3, #0]
 8004104:	2b00      	cmp	r3, #0
 8004106:	d00d      	beq.n	8004124 <responseUART+0x684>
 8004108:	2b01      	cmp	r3, #1
 800410a:	d137      	bne.n	800417c <responseUART+0x6dc>
		case 0:
			break;
		case 1:
			NFenable = 0;
 800410c:	4b26      	ldr	r3, [pc, #152]	; (80041a8 <responseUART+0x708>)
 800410e:	2200      	movs	r2, #0
 8004110:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8004112:	2202      	movs	r2, #2
 8004114:	4925      	ldr	r1, [pc, #148]	; (80041ac <responseUART+0x70c>)
 8004116:	4822      	ldr	r0, [pc, #136]	; (80041a0 <responseUART+0x700>)
 8004118:	f006 fa6e 	bl	800a5f8 <HAL_UART_Transmit_DMA>
			TxState = 0;
 800411c:	4b1f      	ldr	r3, [pc, #124]	; (800419c <responseUART+0x6fc>)
 800411e:	2200      	movs	r2, #0
 8004120:	701a      	strb	r2, [r3, #0]
			break;
 8004122:	e000      	b.n	8004126 <responseUART+0x686>
			break;
 8004124:	bf00      	nop
		}
		break;
 8004126:	e029      	b.n	800417c <responseUART+0x6dc>

	case 14:	// <<<< 95% COMPLETE >>>>
		// Set home
		switch(TxState){
 8004128:	4b1c      	ldr	r3, [pc, #112]	; (800419c <responseUART+0x6fc>)
 800412a:	781b      	ldrb	r3, [r3, #0]
 800412c:	2b00      	cmp	r3, #0
 800412e:	d00b      	beq.n	8004148 <responseUART+0x6a8>
 8004130:	2b01      	cmp	r3, #1
 8004132:	d125      	bne.n	8004180 <responseUART+0x6e0>
		case 0:
			break;
		case 1:
			//HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
			setzero = 1;
 8004134:	4b1e      	ldr	r3, [pc, #120]	; (80041b0 <responseUART+0x710>)
 8004136:	2201      	movs	r2, #1
 8004138:	701a      	strb	r2, [r3, #0]
			movingFlag = 14;
 800413a:	4b1e      	ldr	r3, [pc, #120]	; (80041b4 <responseUART+0x714>)
 800413c:	220e      	movs	r2, #14
 800413e:	701a      	strb	r2, [r3, #0]
			TxState = 0;
 8004140:	4b16      	ldr	r3, [pc, #88]	; (800419c <responseUART+0x6fc>)
 8004142:	2200      	movs	r2, #0
 8004144:	701a      	strb	r2, [r3, #0]
			//timeStamp = HAL_GetTick();								// Optional
			break;
 8004146:	e000      	b.n	800414a <responseUART+0x6aa>
			break;
 8004148:	bf00      	nop
		}
		break;
 800414a:	e019      	b.n	8004180 <responseUART+0x6e0>
		break;
 800414c:	bf00      	nop
 800414e:	e018      	b.n	8004182 <responseUART+0x6e2>
		break;
 8004150:	bf00      	nop
 8004152:	e016      	b.n	8004182 <responseUART+0x6e2>
		break;
 8004154:	bf00      	nop
 8004156:	e014      	b.n	8004182 <responseUART+0x6e2>
		break;
 8004158:	bf00      	nop
 800415a:	e012      	b.n	8004182 <responseUART+0x6e2>
		break;
 800415c:	bf00      	nop
 800415e:	e010      	b.n	8004182 <responseUART+0x6e2>
		break;
 8004160:	bf00      	nop
 8004162:	e00e      	b.n	8004182 <responseUART+0x6e2>
		break;
 8004164:	bf00      	nop
 8004166:	e00c      	b.n	8004182 <responseUART+0x6e2>
		break;
 8004168:	bf00      	nop
 800416a:	e00a      	b.n	8004182 <responseUART+0x6e2>
		break;
 800416c:	bf00      	nop
 800416e:	e008      	b.n	8004182 <responseUART+0x6e2>
		break;
 8004170:	bf00      	nop
 8004172:	e006      	b.n	8004182 <responseUART+0x6e2>
		break;
 8004174:	bf00      	nop
 8004176:	e004      	b.n	8004182 <responseUART+0x6e2>
		break;
 8004178:	bf00      	nop
 800417a:	e002      	b.n	8004182 <responseUART+0x6e2>
		break;
 800417c:	bf00      	nop
 800417e:	e000      	b.n	8004182 <responseUART+0x6e2>
		break;
 8004180:	bf00      	nop
	}
}
 8004182:	bf00      	nop
 8004184:	3714      	adds	r7, #20
 8004186:	46bd      	mov	sp, r7
 8004188:	bd90      	pop	{r4, r7, pc}
 800418a:	bf00      	nop
 800418c:	20000550 	.word	0x20000550
 8004190:	20000544 	.word	0x20000544
 8004194:	437f0000 	.word	0x437f0000
 8004198:	2000054a 	.word	0x2000054a
 800419c:	20000549 	.word	0x20000549
 80041a0:	200003c0 	.word	0x200003c0
 80041a4:	20000567 	.word	0x20000567
 80041a8:	20000021 	.word	0x20000021
 80041ac:	20000018 	.word	0x20000018
 80041b0:	2000000c 	.word	0x2000000c
 80041b4:	2000053c 	.word	0x2000053c

080041b8 <tranStation>:

uint16_t tranStation(uint8_t num){
 80041b8:	b480      	push	{r7}
 80041ba:	b083      	sub	sp, #12
 80041bc:	af00      	add	r7, sp, #0
 80041be:	4603      	mov	r3, r0
 80041c0:	71fb      	strb	r3, [r7, #7]
	switch(num){
 80041c2:	79fb      	ldrb	r3, [r7, #7]
 80041c4:	3b01      	subs	r3, #1
 80041c6:	2b09      	cmp	r3, #9
 80041c8:	d82b      	bhi.n	8004222 <tranStation+0x6a>
 80041ca:	a201      	add	r2, pc, #4	; (adr r2, 80041d0 <tranStation+0x18>)
 80041cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80041d0:	080041f9 	.word	0x080041f9
 80041d4:	080041fd 	.word	0x080041fd
 80041d8:	08004201 	.word	0x08004201
 80041dc:	08004207 	.word	0x08004207
 80041e0:	0800420b 	.word	0x0800420b
 80041e4:	0800420f 	.word	0x0800420f
 80041e8:	08004213 	.word	0x08004213
 80041ec:	08004217 	.word	0x08004217
 80041f0:	0800421b 	.word	0x0800421b
 80041f4:	0800421f 	.word	0x0800421f
	case 1:
		return 90;
 80041f8:	235a      	movs	r3, #90	; 0x5a
 80041fa:	e012      	b.n	8004222 <tranStation+0x6a>
		break;
	case 2:
		return 180;
 80041fc:	23b4      	movs	r3, #180	; 0xb4
 80041fe:	e010      	b.n	8004222 <tranStation+0x6a>
		break;
	case 3:
		return 270;
 8004200:	f44f 7387 	mov.w	r3, #270	; 0x10e
 8004204:	e00d      	b.n	8004222 <tranStation+0x6a>
		break;
	case 4:
		return 0;
 8004206:	2300      	movs	r3, #0
 8004208:	e00b      	b.n	8004222 <tranStation+0x6a>
		break;
	case 5:
		return 180;
 800420a:	23b4      	movs	r3, #180	; 0xb4
 800420c:	e009      	b.n	8004222 <tranStation+0x6a>
		break;
	case 6:
		return 210;
 800420e:	23d2      	movs	r3, #210	; 0xd2
 8004210:	e007      	b.n	8004222 <tranStation+0x6a>
		break;
	case 7:
		return 250;
 8004212:	23fa      	movs	r3, #250	; 0xfa
 8004214:	e005      	b.n	8004222 <tranStation+0x6a>
		break;
	case 8:
		return 180;
 8004216:	23b4      	movs	r3, #180	; 0xb4
 8004218:	e003      	b.n	8004222 <tranStation+0x6a>
		break;
	case 9:
		return 90;
 800421a:	235a      	movs	r3, #90	; 0x5a
 800421c:	e001      	b.n	8004222 <tranStation+0x6a>
		break;
	case 10:
		return 0;
 800421e:	2300      	movs	r3, #0
 8004220:	e7ff      	b.n	8004222 <tranStation+0x6a>
		break;
	}
}
 8004222:	4618      	mov	r0, r3
 8004224:	370c      	adds	r7, #12
 8004226:	46bd      	mov	sp, r7
 8004228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800422c:	4770      	bx	lr
 800422e:	bf00      	nop

08004230 <destinationACK>:

void destinationACK(){
 8004230:	b580      	push	{r7, lr}
 8004232:	af00      	add	r7, sp, #0
	if(movingFlag != 0 && Reached ){
 8004234:	4b11      	ldr	r3, [pc, #68]	; (800427c <destinationACK+0x4c>)
 8004236:	781b      	ldrb	r3, [r3, #0]
 8004238:	2b00      	cmp	r3, #0
 800423a:	d01c      	beq.n	8004276 <destinationACK+0x46>
 800423c:	4b10      	ldr	r3, [pc, #64]	; (8004280 <destinationACK+0x50>)
 800423e:	781b      	ldrb	r3, [r3, #0]
 8004240:	2b00      	cmp	r3, #0
 8004242:	d018      	beq.n	8004276 <destinationACK+0x46>
		//((HAL_GetTick()-timeStamp > 10000) || Reached)
	    switch(movingFlag){
 8004244:	4b0d      	ldr	r3, [pc, #52]	; (800427c <destinationACK+0x4c>)
 8004246:	781b      	ldrb	r3, [r3, #0]
 8004248:	2b08      	cmp	r3, #8
 800424a:	d002      	beq.n	8004252 <destinationACK+0x22>
 800424c:	2b0e      	cmp	r3, #14
 800424e:	d006      	beq.n	800425e <destinationACK+0x2e>
 8004250:	e00b      	b.n	800426a <destinationACK+0x3a>
	    case 8:
		  HAL_UART_Transmit_DMA(&huart2, ACK2, 2);
 8004252:	2202      	movs	r2, #2
 8004254:	490b      	ldr	r1, [pc, #44]	; (8004284 <destinationACK+0x54>)
 8004256:	480c      	ldr	r0, [pc, #48]	; (8004288 <destinationACK+0x58>)
 8004258:	f006 f9ce 	bl	800a5f8 <HAL_UART_Transmit_DMA>
		  break;
 800425c:	e005      	b.n	800426a <destinationACK+0x3a>
	    case 14:
	    	HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 800425e:	2202      	movs	r2, #2
 8004260:	490a      	ldr	r1, [pc, #40]	; (800428c <destinationACK+0x5c>)
 8004262:	4809      	ldr	r0, [pc, #36]	; (8004288 <destinationACK+0x58>)
 8004264:	f006 f9c8 	bl	800a5f8 <HAL_UART_Transmit_DMA>
		  break;
 8004268:	bf00      	nop
	    }
	    movingFlag = 0;
 800426a:	4b04      	ldr	r3, [pc, #16]	; (800427c <destinationACK+0x4c>)
 800426c:	2200      	movs	r2, #0
 800426e:	701a      	strb	r2, [r3, #0]
	    Reached = 0;
 8004270:	4b03      	ldr	r3, [pc, #12]	; (8004280 <destinationACK+0x50>)
 8004272:	2200      	movs	r2, #0
 8004274:	701a      	strb	r2, [r3, #0]
  }
}
 8004276:	bf00      	nop
 8004278:	bd80      	pop	{r7, pc}
 800427a:	bf00      	nop
 800427c:	2000053c 	.word	0x2000053c
 8004280:	2000053b 	.word	0x2000053b
 8004284:	2000001c 	.word	0x2000001c
 8004288:	200003c0 	.word	0x200003c0
 800428c:	20000018 	.word	0x20000018

08004290 <frameConfig>:

uint8_t frameConfig(uint8_t mode){
 8004290:	b480      	push	{r7}
 8004292:	b083      	sub	sp, #12
 8004294:	af00      	add	r7, sp, #0
 8004296:	4603      	mov	r3, r0
 8004298:	71fb      	strb	r3, [r7, #7]
	if(mode == 2 || mode == 3 || mode == 8 || mode == 9 || mode == 10 || mode == 11 || mode == 12 || mode == 13 || mode == 14){
 800429a:	79fb      	ldrb	r3, [r7, #7]
 800429c:	2b02      	cmp	r3, #2
 800429e:	d017      	beq.n	80042d0 <frameConfig+0x40>
 80042a0:	79fb      	ldrb	r3, [r7, #7]
 80042a2:	2b03      	cmp	r3, #3
 80042a4:	d014      	beq.n	80042d0 <frameConfig+0x40>
 80042a6:	79fb      	ldrb	r3, [r7, #7]
 80042a8:	2b08      	cmp	r3, #8
 80042aa:	d011      	beq.n	80042d0 <frameConfig+0x40>
 80042ac:	79fb      	ldrb	r3, [r7, #7]
 80042ae:	2b09      	cmp	r3, #9
 80042b0:	d00e      	beq.n	80042d0 <frameConfig+0x40>
 80042b2:	79fb      	ldrb	r3, [r7, #7]
 80042b4:	2b0a      	cmp	r3, #10
 80042b6:	d00b      	beq.n	80042d0 <frameConfig+0x40>
 80042b8:	79fb      	ldrb	r3, [r7, #7]
 80042ba:	2b0b      	cmp	r3, #11
 80042bc:	d008      	beq.n	80042d0 <frameConfig+0x40>
 80042be:	79fb      	ldrb	r3, [r7, #7]
 80042c0:	2b0c      	cmp	r3, #12
 80042c2:	d005      	beq.n	80042d0 <frameConfig+0x40>
 80042c4:	79fb      	ldrb	r3, [r7, #7]
 80042c6:	2b0d      	cmp	r3, #13
 80042c8:	d002      	beq.n	80042d0 <frameConfig+0x40>
 80042ca:	79fb      	ldrb	r3, [r7, #7]
 80042cc:	2b0e      	cmp	r3, #14
 80042ce:	d101      	bne.n	80042d4 <frameConfig+0x44>
		return 1;
 80042d0:	2301      	movs	r3, #1
 80042d2:	e013      	b.n	80042fc <frameConfig+0x6c>
	}
	else if(mode == 1 || mode == 4 || mode == 5 ||  mode == 6){
 80042d4:	79fb      	ldrb	r3, [r7, #7]
 80042d6:	2b01      	cmp	r3, #1
 80042d8:	d008      	beq.n	80042ec <frameConfig+0x5c>
 80042da:	79fb      	ldrb	r3, [r7, #7]
 80042dc:	2b04      	cmp	r3, #4
 80042de:	d005      	beq.n	80042ec <frameConfig+0x5c>
 80042e0:	79fb      	ldrb	r3, [r7, #7]
 80042e2:	2b05      	cmp	r3, #5
 80042e4:	d002      	beq.n	80042ec <frameConfig+0x5c>
 80042e6:	79fb      	ldrb	r3, [r7, #7]
 80042e8:	2b06      	cmp	r3, #6
 80042ea:	d101      	bne.n	80042f0 <frameConfig+0x60>
		return 3;
 80042ec:	2303      	movs	r3, #3
 80042ee:	e005      	b.n	80042fc <frameConfig+0x6c>
	}
	else if(mode == 7){
 80042f0:	79fb      	ldrb	r3, [r7, #7]
 80042f2:	2b07      	cmp	r3, #7
 80042f4:	d101      	bne.n	80042fa <frameConfig+0x6a>
		return 1;									// Keep the number of byte first. (nStation)
 80042f6:	2301      	movs	r3, #1
 80042f8:	e000      	b.n	80042fc <frameConfig+0x6c>
	}
	return 0;
 80042fa:	2300      	movs	r3, #0
}
 80042fc:	4618      	mov	r0, r3
 80042fe:	370c      	adds	r7, #12
 8004300:	46bd      	mov	sp, r7
 8004302:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004306:	4770      	bx	lr

08004308 <checkSum>:

uint8_t checkSum(uint8_t var){
 8004308:	b480      	push	{r7}
 800430a:	b083      	sub	sp, #12
 800430c:	af00      	add	r7, sp, #0
 800430e:	4603      	mov	r3, r0
 8004310:	71fb      	strb	r3, [r7, #7]
	//cSum = (~(var%256))%256;						// Spectrator variable
	return (~(var%256))%256;
 8004312:	79fb      	ldrb	r3, [r7, #7]
 8004314:	43db      	mvns	r3, r3
 8004316:	425a      	negs	r2, r3
 8004318:	b2db      	uxtb	r3, r3
 800431a:	b2d2      	uxtb	r2, r2
 800431c:	bf58      	it	pl
 800431e:	4253      	negpl	r3, r2
 8004320:	b2db      	uxtb	r3, r3
}
 8004322:	4618      	mov	r0, r3
 8004324:	370c      	adds	r7, #12
 8004326:	46bd      	mov	sp, r7
 8004328:	f85d 7b04 	ldr.w	r7, [sp], #4
 800432c:	4770      	bx	lr

0800432e <frameSum>:

uint8_t frameSum(uint8_t *frame, uint8_t num){
 800432e:	b480      	push	{r7}
 8004330:	b085      	sub	sp, #20
 8004332:	af00      	add	r7, sp, #0
 8004334:	6078      	str	r0, [r7, #4]
 8004336:	460b      	mov	r3, r1
 8004338:	70fb      	strb	r3, [r7, #3]
	uint8_t var = 0;
 800433a:	2300      	movs	r3, #0
 800433c:	73fb      	strb	r3, [r7, #15]
	for( int i=0; i<num; i+=1){
 800433e:	2300      	movs	r3, #0
 8004340:	60bb      	str	r3, [r7, #8]
 8004342:	e009      	b.n	8004358 <frameSum+0x2a>
		var += frame[i];							// Sum all the bits in buffer.
 8004344:	68bb      	ldr	r3, [r7, #8]
 8004346:	687a      	ldr	r2, [r7, #4]
 8004348:	4413      	add	r3, r2
 800434a:	781a      	ldrb	r2, [r3, #0]
 800434c:	7bfb      	ldrb	r3, [r7, #15]
 800434e:	4413      	add	r3, r2
 8004350:	73fb      	strb	r3, [r7, #15]
	for( int i=0; i<num; i+=1){
 8004352:	68bb      	ldr	r3, [r7, #8]
 8004354:	3301      	adds	r3, #1
 8004356:	60bb      	str	r3, [r7, #8]
 8004358:	78fb      	ldrb	r3, [r7, #3]
 800435a:	68ba      	ldr	r2, [r7, #8]
 800435c:	429a      	cmp	r2, r3
 800435e:	dbf1      	blt.n	8004344 <frameSum+0x16>
	}
	return var;
 8004360:	7bfb      	ldrb	r3, [r7, #15]
}
 8004362:	4618      	mov	r0, r3
 8004364:	3714      	adds	r7, #20
 8004366:	46bd      	mov	sp, r7
 8004368:	f85d 7b04 	ldr.w	r7, [sp], #4
 800436c:	4770      	bx	lr
	...

08004370 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 8004370:	b580      	push	{r7, lr}
 8004372:	b082      	sub	sp, #8
 8004374:	af00      	add	r7, sp, #0
 8004376:	6078      	str	r0, [r7, #4]
	//RxComplete = 1;
	callUART();
 8004378:	f7ff fa46 	bl	8003808 <callUART>
	HAL_UART_Receive_DMA(&huart2, Receive, nbyte);
 800437c:	4b05      	ldr	r3, [pc, #20]	; (8004394 <HAL_UART_RxCpltCallback+0x24>)
 800437e:	781b      	ldrb	r3, [r3, #0]
 8004380:	b29b      	uxth	r3, r3
 8004382:	461a      	mov	r2, r3
 8004384:	4904      	ldr	r1, [pc, #16]	; (8004398 <HAL_UART_RxCpltCallback+0x28>)
 8004386:	4805      	ldr	r0, [pc, #20]	; (800439c <HAL_UART_RxCpltCallback+0x2c>)
 8004388:	f006 f9b4 	bl	800a6f4 <HAL_UART_Receive_DMA>
}
 800438c:	bf00      	nop
 800438e:	3708      	adds	r7, #8
 8004390:	46bd      	mov	sp, r7
 8004392:	bd80      	pop	{r7, pc}
 8004394:	2000001e 	.word	0x2000001e
 8004398:	20000554 	.word	0x20000554
 800439c:	200003c0 	.word	0x200003c0

080043a0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80043a0:	b480      	push	{r7}
 80043a2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80043a4:	b672      	cpsid	i
}
 80043a6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80043a8:	e7fe      	b.n	80043a8 <Error_Handler+0x8>
	...

080043ac <HAL_MspInit>:
 80043ac:	b580      	push	{r7, lr}
 80043ae:	b082      	sub	sp, #8
 80043b0:	af00      	add	r7, sp, #0
 80043b2:	2300      	movs	r3, #0
 80043b4:	607b      	str	r3, [r7, #4]
 80043b6:	4b10      	ldr	r3, [pc, #64]	; (80043f8 <HAL_MspInit+0x4c>)
 80043b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80043ba:	4a0f      	ldr	r2, [pc, #60]	; (80043f8 <HAL_MspInit+0x4c>)
 80043bc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80043c0:	6453      	str	r3, [r2, #68]	; 0x44
 80043c2:	4b0d      	ldr	r3, [pc, #52]	; (80043f8 <HAL_MspInit+0x4c>)
 80043c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80043c6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80043ca:	607b      	str	r3, [r7, #4]
 80043cc:	687b      	ldr	r3, [r7, #4]
 80043ce:	2300      	movs	r3, #0
 80043d0:	603b      	str	r3, [r7, #0]
 80043d2:	4b09      	ldr	r3, [pc, #36]	; (80043f8 <HAL_MspInit+0x4c>)
 80043d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043d6:	4a08      	ldr	r2, [pc, #32]	; (80043f8 <HAL_MspInit+0x4c>)
 80043d8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80043dc:	6413      	str	r3, [r2, #64]	; 0x40
 80043de:	4b06      	ldr	r3, [pc, #24]	; (80043f8 <HAL_MspInit+0x4c>)
 80043e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043e2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80043e6:	603b      	str	r3, [r7, #0]
 80043e8:	683b      	ldr	r3, [r7, #0]
 80043ea:	2007      	movs	r0, #7
 80043ec:	f000 fc60 	bl	8004cb0 <HAL_NVIC_SetPriorityGrouping>
 80043f0:	bf00      	nop
 80043f2:	3708      	adds	r7, #8
 80043f4:	46bd      	mov	sp, r7
 80043f6:	bd80      	pop	{r7, pc}
 80043f8:	40023800 	.word	0x40023800

080043fc <HAL_I2C_MspInit>:
 80043fc:	b580      	push	{r7, lr}
 80043fe:	b08a      	sub	sp, #40	; 0x28
 8004400:	af00      	add	r7, sp, #0
 8004402:	6078      	str	r0, [r7, #4]
 8004404:	f107 0314 	add.w	r3, r7, #20
 8004408:	2200      	movs	r2, #0
 800440a:	601a      	str	r2, [r3, #0]
 800440c:	605a      	str	r2, [r3, #4]
 800440e:	609a      	str	r2, [r3, #8]
 8004410:	60da      	str	r2, [r3, #12]
 8004412:	611a      	str	r2, [r3, #16]
 8004414:	687b      	ldr	r3, [r7, #4]
 8004416:	681b      	ldr	r3, [r3, #0]
 8004418:	4a21      	ldr	r2, [pc, #132]	; (80044a0 <HAL_I2C_MspInit+0xa4>)
 800441a:	4293      	cmp	r3, r2
 800441c:	d13c      	bne.n	8004498 <HAL_I2C_MspInit+0x9c>
 800441e:	2300      	movs	r3, #0
 8004420:	613b      	str	r3, [r7, #16]
 8004422:	4b20      	ldr	r3, [pc, #128]	; (80044a4 <HAL_I2C_MspInit+0xa8>)
 8004424:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004426:	4a1f      	ldr	r2, [pc, #124]	; (80044a4 <HAL_I2C_MspInit+0xa8>)
 8004428:	f043 0302 	orr.w	r3, r3, #2
 800442c:	6313      	str	r3, [r2, #48]	; 0x30
 800442e:	4b1d      	ldr	r3, [pc, #116]	; (80044a4 <HAL_I2C_MspInit+0xa8>)
 8004430:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004432:	f003 0302 	and.w	r3, r3, #2
 8004436:	613b      	str	r3, [r7, #16]
 8004438:	693b      	ldr	r3, [r7, #16]
 800443a:	f44f 7340 	mov.w	r3, #768	; 0x300
 800443e:	617b      	str	r3, [r7, #20]
 8004440:	2312      	movs	r3, #18
 8004442:	61bb      	str	r3, [r7, #24]
 8004444:	2300      	movs	r3, #0
 8004446:	61fb      	str	r3, [r7, #28]
 8004448:	2303      	movs	r3, #3
 800444a:	623b      	str	r3, [r7, #32]
 800444c:	2304      	movs	r3, #4
 800444e:	627b      	str	r3, [r7, #36]	; 0x24
 8004450:	f107 0314 	add.w	r3, r7, #20
 8004454:	4619      	mov	r1, r3
 8004456:	4814      	ldr	r0, [pc, #80]	; (80044a8 <HAL_I2C_MspInit+0xac>)
 8004458:	f001 f87c 	bl	8005554 <HAL_GPIO_Init>
 800445c:	2300      	movs	r3, #0
 800445e:	60fb      	str	r3, [r7, #12]
 8004460:	4b10      	ldr	r3, [pc, #64]	; (80044a4 <HAL_I2C_MspInit+0xa8>)
 8004462:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004464:	4a0f      	ldr	r2, [pc, #60]	; (80044a4 <HAL_I2C_MspInit+0xa8>)
 8004466:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800446a:	6413      	str	r3, [r2, #64]	; 0x40
 800446c:	4b0d      	ldr	r3, [pc, #52]	; (80044a4 <HAL_I2C_MspInit+0xa8>)
 800446e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004470:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8004474:	60fb      	str	r3, [r7, #12]
 8004476:	68fb      	ldr	r3, [r7, #12]
 8004478:	2200      	movs	r2, #0
 800447a:	2100      	movs	r1, #0
 800447c:	201f      	movs	r0, #31
 800447e:	f000 fc22 	bl	8004cc6 <HAL_NVIC_SetPriority>
 8004482:	201f      	movs	r0, #31
 8004484:	f000 fc3b 	bl	8004cfe <HAL_NVIC_EnableIRQ>
 8004488:	2200      	movs	r2, #0
 800448a:	2100      	movs	r1, #0
 800448c:	2020      	movs	r0, #32
 800448e:	f000 fc1a 	bl	8004cc6 <HAL_NVIC_SetPriority>
 8004492:	2020      	movs	r0, #32
 8004494:	f000 fc33 	bl	8004cfe <HAL_NVIC_EnableIRQ>
 8004498:	bf00      	nop
 800449a:	3728      	adds	r7, #40	; 0x28
 800449c:	46bd      	mov	sp, r7
 800449e:	bd80      	pop	{r7, pc}
 80044a0:	40005400 	.word	0x40005400
 80044a4:	40023800 	.word	0x40023800
 80044a8:	40020400 	.word	0x40020400

080044ac <HAL_SPI_MspInit>:
 80044ac:	b580      	push	{r7, lr}
 80044ae:	b08a      	sub	sp, #40	; 0x28
 80044b0:	af00      	add	r7, sp, #0
 80044b2:	6078      	str	r0, [r7, #4]
 80044b4:	f107 0314 	add.w	r3, r7, #20
 80044b8:	2200      	movs	r2, #0
 80044ba:	601a      	str	r2, [r3, #0]
 80044bc:	605a      	str	r2, [r3, #4]
 80044be:	609a      	str	r2, [r3, #8]
 80044c0:	60da      	str	r2, [r3, #12]
 80044c2:	611a      	str	r2, [r3, #16]
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	681b      	ldr	r3, [r3, #0]
 80044c8:	4a4b      	ldr	r2, [pc, #300]	; (80045f8 <HAL_SPI_MspInit+0x14c>)
 80044ca:	4293      	cmp	r3, r2
 80044cc:	f040 8090 	bne.w	80045f0 <HAL_SPI_MspInit+0x144>
 80044d0:	2300      	movs	r3, #0
 80044d2:	613b      	str	r3, [r7, #16]
 80044d4:	4b49      	ldr	r3, [pc, #292]	; (80045fc <HAL_SPI_MspInit+0x150>)
 80044d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044d8:	4a48      	ldr	r2, [pc, #288]	; (80045fc <HAL_SPI_MspInit+0x150>)
 80044da:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80044de:	6413      	str	r3, [r2, #64]	; 0x40
 80044e0:	4b46      	ldr	r3, [pc, #280]	; (80045fc <HAL_SPI_MspInit+0x150>)
 80044e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044e4:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80044e8:	613b      	str	r3, [r7, #16]
 80044ea:	693b      	ldr	r3, [r7, #16]
 80044ec:	2300      	movs	r3, #0
 80044ee:	60fb      	str	r3, [r7, #12]
 80044f0:	4b42      	ldr	r3, [pc, #264]	; (80045fc <HAL_SPI_MspInit+0x150>)
 80044f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80044f4:	4a41      	ldr	r2, [pc, #260]	; (80045fc <HAL_SPI_MspInit+0x150>)
 80044f6:	f043 0302 	orr.w	r3, r3, #2
 80044fa:	6313      	str	r3, [r2, #48]	; 0x30
 80044fc:	4b3f      	ldr	r3, [pc, #252]	; (80045fc <HAL_SPI_MspInit+0x150>)
 80044fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004500:	f003 0302 	and.w	r3, r3, #2
 8004504:	60fb      	str	r3, [r7, #12]
 8004506:	68fb      	ldr	r3, [r7, #12]
 8004508:	2338      	movs	r3, #56	; 0x38
 800450a:	617b      	str	r3, [r7, #20]
 800450c:	2302      	movs	r3, #2
 800450e:	61bb      	str	r3, [r7, #24]
 8004510:	2300      	movs	r3, #0
 8004512:	61fb      	str	r3, [r7, #28]
 8004514:	2303      	movs	r3, #3
 8004516:	623b      	str	r3, [r7, #32]
 8004518:	2306      	movs	r3, #6
 800451a:	627b      	str	r3, [r7, #36]	; 0x24
 800451c:	f107 0314 	add.w	r3, r7, #20
 8004520:	4619      	mov	r1, r3
 8004522:	4837      	ldr	r0, [pc, #220]	; (8004600 <HAL_SPI_MspInit+0x154>)
 8004524:	f001 f816 	bl	8005554 <HAL_GPIO_Init>
 8004528:	4b36      	ldr	r3, [pc, #216]	; (8004604 <HAL_SPI_MspInit+0x158>)
 800452a:	4a37      	ldr	r2, [pc, #220]	; (8004608 <HAL_SPI_MspInit+0x15c>)
 800452c:	601a      	str	r2, [r3, #0]
 800452e:	4b35      	ldr	r3, [pc, #212]	; (8004604 <HAL_SPI_MspInit+0x158>)
 8004530:	2200      	movs	r2, #0
 8004532:	605a      	str	r2, [r3, #4]
 8004534:	4b33      	ldr	r3, [pc, #204]	; (8004604 <HAL_SPI_MspInit+0x158>)
 8004536:	2200      	movs	r2, #0
 8004538:	609a      	str	r2, [r3, #8]
 800453a:	4b32      	ldr	r3, [pc, #200]	; (8004604 <HAL_SPI_MspInit+0x158>)
 800453c:	2200      	movs	r2, #0
 800453e:	60da      	str	r2, [r3, #12]
 8004540:	4b30      	ldr	r3, [pc, #192]	; (8004604 <HAL_SPI_MspInit+0x158>)
 8004542:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004546:	611a      	str	r2, [r3, #16]
 8004548:	4b2e      	ldr	r3, [pc, #184]	; (8004604 <HAL_SPI_MspInit+0x158>)
 800454a:	2200      	movs	r2, #0
 800454c:	615a      	str	r2, [r3, #20]
 800454e:	4b2d      	ldr	r3, [pc, #180]	; (8004604 <HAL_SPI_MspInit+0x158>)
 8004550:	2200      	movs	r2, #0
 8004552:	619a      	str	r2, [r3, #24]
 8004554:	4b2b      	ldr	r3, [pc, #172]	; (8004604 <HAL_SPI_MspInit+0x158>)
 8004556:	f44f 7280 	mov.w	r2, #256	; 0x100
 800455a:	61da      	str	r2, [r3, #28]
 800455c:	4b29      	ldr	r3, [pc, #164]	; (8004604 <HAL_SPI_MspInit+0x158>)
 800455e:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 8004562:	621a      	str	r2, [r3, #32]
 8004564:	4b27      	ldr	r3, [pc, #156]	; (8004604 <HAL_SPI_MspInit+0x158>)
 8004566:	2200      	movs	r2, #0
 8004568:	625a      	str	r2, [r3, #36]	; 0x24
 800456a:	4826      	ldr	r0, [pc, #152]	; (8004604 <HAL_SPI_MspInit+0x158>)
 800456c:	f000 fbe2 	bl	8004d34 <HAL_DMA_Init>
 8004570:	4603      	mov	r3, r0
 8004572:	2b00      	cmp	r3, #0
 8004574:	d001      	beq.n	800457a <HAL_SPI_MspInit+0xce>
 8004576:	f7ff ff13 	bl	80043a0 <Error_Handler>
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	4a21      	ldr	r2, [pc, #132]	; (8004604 <HAL_SPI_MspInit+0x158>)
 800457e:	64da      	str	r2, [r3, #76]	; 0x4c
 8004580:	4a20      	ldr	r2, [pc, #128]	; (8004604 <HAL_SPI_MspInit+0x158>)
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	6393      	str	r3, [r2, #56]	; 0x38
 8004586:	4b21      	ldr	r3, [pc, #132]	; (800460c <HAL_SPI_MspInit+0x160>)
 8004588:	4a21      	ldr	r2, [pc, #132]	; (8004610 <HAL_SPI_MspInit+0x164>)
 800458a:	601a      	str	r2, [r3, #0]
 800458c:	4b1f      	ldr	r3, [pc, #124]	; (800460c <HAL_SPI_MspInit+0x160>)
 800458e:	2200      	movs	r2, #0
 8004590:	605a      	str	r2, [r3, #4]
 8004592:	4b1e      	ldr	r3, [pc, #120]	; (800460c <HAL_SPI_MspInit+0x160>)
 8004594:	2240      	movs	r2, #64	; 0x40
 8004596:	609a      	str	r2, [r3, #8]
 8004598:	4b1c      	ldr	r3, [pc, #112]	; (800460c <HAL_SPI_MspInit+0x160>)
 800459a:	2200      	movs	r2, #0
 800459c:	60da      	str	r2, [r3, #12]
 800459e:	4b1b      	ldr	r3, [pc, #108]	; (800460c <HAL_SPI_MspInit+0x160>)
 80045a0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80045a4:	611a      	str	r2, [r3, #16]
 80045a6:	4b19      	ldr	r3, [pc, #100]	; (800460c <HAL_SPI_MspInit+0x160>)
 80045a8:	2200      	movs	r2, #0
 80045aa:	615a      	str	r2, [r3, #20]
 80045ac:	4b17      	ldr	r3, [pc, #92]	; (800460c <HAL_SPI_MspInit+0x160>)
 80045ae:	2200      	movs	r2, #0
 80045b0:	619a      	str	r2, [r3, #24]
 80045b2:	4b16      	ldr	r3, [pc, #88]	; (800460c <HAL_SPI_MspInit+0x160>)
 80045b4:	2200      	movs	r2, #0
 80045b6:	61da      	str	r2, [r3, #28]
 80045b8:	4b14      	ldr	r3, [pc, #80]	; (800460c <HAL_SPI_MspInit+0x160>)
 80045ba:	2200      	movs	r2, #0
 80045bc:	621a      	str	r2, [r3, #32]
 80045be:	4b13      	ldr	r3, [pc, #76]	; (800460c <HAL_SPI_MspInit+0x160>)
 80045c0:	2200      	movs	r2, #0
 80045c2:	625a      	str	r2, [r3, #36]	; 0x24
 80045c4:	4811      	ldr	r0, [pc, #68]	; (800460c <HAL_SPI_MspInit+0x160>)
 80045c6:	f000 fbb5 	bl	8004d34 <HAL_DMA_Init>
 80045ca:	4603      	mov	r3, r0
 80045cc:	2b00      	cmp	r3, #0
 80045ce:	d001      	beq.n	80045d4 <HAL_SPI_MspInit+0x128>
 80045d0:	f7ff fee6 	bl	80043a0 <Error_Handler>
 80045d4:	687b      	ldr	r3, [r7, #4]
 80045d6:	4a0d      	ldr	r2, [pc, #52]	; (800460c <HAL_SPI_MspInit+0x160>)
 80045d8:	649a      	str	r2, [r3, #72]	; 0x48
 80045da:	4a0c      	ldr	r2, [pc, #48]	; (800460c <HAL_SPI_MspInit+0x160>)
 80045dc:	687b      	ldr	r3, [r7, #4]
 80045de:	6393      	str	r3, [r2, #56]	; 0x38
 80045e0:	2200      	movs	r2, #0
 80045e2:	2100      	movs	r1, #0
 80045e4:	2033      	movs	r0, #51	; 0x33
 80045e6:	f000 fb6e 	bl	8004cc6 <HAL_NVIC_SetPriority>
 80045ea:	2033      	movs	r0, #51	; 0x33
 80045ec:	f000 fb87 	bl	8004cfe <HAL_NVIC_EnableIRQ>
 80045f0:	bf00      	nop
 80045f2:	3728      	adds	r7, #40	; 0x28
 80045f4:	46bd      	mov	sp, r7
 80045f6:	bd80      	pop	{r7, pc}
 80045f8:	40003c00 	.word	0x40003c00
 80045fc:	40023800 	.word	0x40023800
 8004600:	40020400 	.word	0x40020400
 8004604:	20000270 	.word	0x20000270
 8004608:	40026010 	.word	0x40026010
 800460c:	200002d0 	.word	0x200002d0
 8004610:	400260b8 	.word	0x400260b8

08004614 <HAL_TIM_Base_MspInit>:
 8004614:	b580      	push	{r7, lr}
 8004616:	b084      	sub	sp, #16
 8004618:	af00      	add	r7, sp, #0
 800461a:	6078      	str	r0, [r7, #4]
 800461c:	687b      	ldr	r3, [r7, #4]
 800461e:	681b      	ldr	r3, [r3, #0]
 8004620:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004624:	d116      	bne.n	8004654 <HAL_TIM_Base_MspInit+0x40>
 8004626:	2300      	movs	r3, #0
 8004628:	60fb      	str	r3, [r7, #12]
 800462a:	4b1a      	ldr	r3, [pc, #104]	; (8004694 <HAL_TIM_Base_MspInit+0x80>)
 800462c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800462e:	4a19      	ldr	r2, [pc, #100]	; (8004694 <HAL_TIM_Base_MspInit+0x80>)
 8004630:	f043 0301 	orr.w	r3, r3, #1
 8004634:	6413      	str	r3, [r2, #64]	; 0x40
 8004636:	4b17      	ldr	r3, [pc, #92]	; (8004694 <HAL_TIM_Base_MspInit+0x80>)
 8004638:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800463a:	f003 0301 	and.w	r3, r3, #1
 800463e:	60fb      	str	r3, [r7, #12]
 8004640:	68fb      	ldr	r3, [r7, #12]
 8004642:	2200      	movs	r2, #0
 8004644:	2100      	movs	r1, #0
 8004646:	201c      	movs	r0, #28
 8004648:	f000 fb3d 	bl	8004cc6 <HAL_NVIC_SetPriority>
 800464c:	201c      	movs	r0, #28
 800464e:	f000 fb56 	bl	8004cfe <HAL_NVIC_EnableIRQ>
 8004652:	e01a      	b.n	800468a <HAL_TIM_Base_MspInit+0x76>
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	681b      	ldr	r3, [r3, #0]
 8004658:	4a0f      	ldr	r2, [pc, #60]	; (8004698 <HAL_TIM_Base_MspInit+0x84>)
 800465a:	4293      	cmp	r3, r2
 800465c:	d115      	bne.n	800468a <HAL_TIM_Base_MspInit+0x76>
 800465e:	2300      	movs	r3, #0
 8004660:	60bb      	str	r3, [r7, #8]
 8004662:	4b0c      	ldr	r3, [pc, #48]	; (8004694 <HAL_TIM_Base_MspInit+0x80>)
 8004664:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004666:	4a0b      	ldr	r2, [pc, #44]	; (8004694 <HAL_TIM_Base_MspInit+0x80>)
 8004668:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800466c:	6453      	str	r3, [r2, #68]	; 0x44
 800466e:	4b09      	ldr	r3, [pc, #36]	; (8004694 <HAL_TIM_Base_MspInit+0x80>)
 8004670:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004672:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004676:	60bb      	str	r3, [r7, #8]
 8004678:	68bb      	ldr	r3, [r7, #8]
 800467a:	2200      	movs	r2, #0
 800467c:	2100      	movs	r1, #0
 800467e:	201a      	movs	r0, #26
 8004680:	f000 fb21 	bl	8004cc6 <HAL_NVIC_SetPriority>
 8004684:	201a      	movs	r0, #26
 8004686:	f000 fb3a 	bl	8004cfe <HAL_NVIC_EnableIRQ>
 800468a:	bf00      	nop
 800468c:	3710      	adds	r7, #16
 800468e:	46bd      	mov	sp, r7
 8004690:	bd80      	pop	{r7, pc}
 8004692:	bf00      	nop
 8004694:	40023800 	.word	0x40023800
 8004698:	40014800 	.word	0x40014800

0800469c <HAL_TIM_MspPostInit>:
 800469c:	b580      	push	{r7, lr}
 800469e:	b088      	sub	sp, #32
 80046a0:	af00      	add	r7, sp, #0
 80046a2:	6078      	str	r0, [r7, #4]
 80046a4:	f107 030c 	add.w	r3, r7, #12
 80046a8:	2200      	movs	r2, #0
 80046aa:	601a      	str	r2, [r3, #0]
 80046ac:	605a      	str	r2, [r3, #4]
 80046ae:	609a      	str	r2, [r3, #8]
 80046b0:	60da      	str	r2, [r3, #12]
 80046b2:	611a      	str	r2, [r3, #16]
 80046b4:	687b      	ldr	r3, [r7, #4]
 80046b6:	681b      	ldr	r3, [r3, #0]
 80046b8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80046bc:	d11d      	bne.n	80046fa <HAL_TIM_MspPostInit+0x5e>
 80046be:	2300      	movs	r3, #0
 80046c0:	60bb      	str	r3, [r7, #8]
 80046c2:	4b10      	ldr	r3, [pc, #64]	; (8004704 <HAL_TIM_MspPostInit+0x68>)
 80046c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80046c6:	4a0f      	ldr	r2, [pc, #60]	; (8004704 <HAL_TIM_MspPostInit+0x68>)
 80046c8:	f043 0301 	orr.w	r3, r3, #1
 80046cc:	6313      	str	r3, [r2, #48]	; 0x30
 80046ce:	4b0d      	ldr	r3, [pc, #52]	; (8004704 <HAL_TIM_MspPostInit+0x68>)
 80046d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80046d2:	f003 0301 	and.w	r3, r3, #1
 80046d6:	60bb      	str	r3, [r7, #8]
 80046d8:	68bb      	ldr	r3, [r7, #8]
 80046da:	2303      	movs	r3, #3
 80046dc:	60fb      	str	r3, [r7, #12]
 80046de:	2302      	movs	r3, #2
 80046e0:	613b      	str	r3, [r7, #16]
 80046e2:	2300      	movs	r3, #0
 80046e4:	617b      	str	r3, [r7, #20]
 80046e6:	2300      	movs	r3, #0
 80046e8:	61bb      	str	r3, [r7, #24]
 80046ea:	2301      	movs	r3, #1
 80046ec:	61fb      	str	r3, [r7, #28]
 80046ee:	f107 030c 	add.w	r3, r7, #12
 80046f2:	4619      	mov	r1, r3
 80046f4:	4804      	ldr	r0, [pc, #16]	; (8004708 <HAL_TIM_MspPostInit+0x6c>)
 80046f6:	f000 ff2d 	bl	8005554 <HAL_GPIO_Init>
 80046fa:	bf00      	nop
 80046fc:	3720      	adds	r7, #32
 80046fe:	46bd      	mov	sp, r7
 8004700:	bd80      	pop	{r7, pc}
 8004702:	bf00      	nop
 8004704:	40023800 	.word	0x40023800
 8004708:	40020000 	.word	0x40020000

0800470c <HAL_UART_MspInit>:
 800470c:	b580      	push	{r7, lr}
 800470e:	b08a      	sub	sp, #40	; 0x28
 8004710:	af00      	add	r7, sp, #0
 8004712:	6078      	str	r0, [r7, #4]
 8004714:	f107 0314 	add.w	r3, r7, #20
 8004718:	2200      	movs	r2, #0
 800471a:	601a      	str	r2, [r3, #0]
 800471c:	605a      	str	r2, [r3, #4]
 800471e:	609a      	str	r2, [r3, #8]
 8004720:	60da      	str	r2, [r3, #12]
 8004722:	611a      	str	r2, [r3, #16]
 8004724:	687b      	ldr	r3, [r7, #4]
 8004726:	681b      	ldr	r3, [r3, #0]
 8004728:	4a4c      	ldr	r2, [pc, #304]	; (800485c <HAL_UART_MspInit+0x150>)
 800472a:	4293      	cmp	r3, r2
 800472c:	f040 8092 	bne.w	8004854 <HAL_UART_MspInit+0x148>
 8004730:	2300      	movs	r3, #0
 8004732:	613b      	str	r3, [r7, #16]
 8004734:	4b4a      	ldr	r3, [pc, #296]	; (8004860 <HAL_UART_MspInit+0x154>)
 8004736:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004738:	4a49      	ldr	r2, [pc, #292]	; (8004860 <HAL_UART_MspInit+0x154>)
 800473a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800473e:	6413      	str	r3, [r2, #64]	; 0x40
 8004740:	4b47      	ldr	r3, [pc, #284]	; (8004860 <HAL_UART_MspInit+0x154>)
 8004742:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004744:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8004748:	613b      	str	r3, [r7, #16]
 800474a:	693b      	ldr	r3, [r7, #16]
 800474c:	2300      	movs	r3, #0
 800474e:	60fb      	str	r3, [r7, #12]
 8004750:	4b43      	ldr	r3, [pc, #268]	; (8004860 <HAL_UART_MspInit+0x154>)
 8004752:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004754:	4a42      	ldr	r2, [pc, #264]	; (8004860 <HAL_UART_MspInit+0x154>)
 8004756:	f043 0301 	orr.w	r3, r3, #1
 800475a:	6313      	str	r3, [r2, #48]	; 0x30
 800475c:	4b40      	ldr	r3, [pc, #256]	; (8004860 <HAL_UART_MspInit+0x154>)
 800475e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004760:	f003 0301 	and.w	r3, r3, #1
 8004764:	60fb      	str	r3, [r7, #12]
 8004766:	68fb      	ldr	r3, [r7, #12]
 8004768:	230c      	movs	r3, #12
 800476a:	617b      	str	r3, [r7, #20]
 800476c:	2302      	movs	r3, #2
 800476e:	61bb      	str	r3, [r7, #24]
 8004770:	2300      	movs	r3, #0
 8004772:	61fb      	str	r3, [r7, #28]
 8004774:	2303      	movs	r3, #3
 8004776:	623b      	str	r3, [r7, #32]
 8004778:	2307      	movs	r3, #7
 800477a:	627b      	str	r3, [r7, #36]	; 0x24
 800477c:	f107 0314 	add.w	r3, r7, #20
 8004780:	4619      	mov	r1, r3
 8004782:	4838      	ldr	r0, [pc, #224]	; (8004864 <HAL_UART_MspInit+0x158>)
 8004784:	f000 fee6 	bl	8005554 <HAL_GPIO_Init>
 8004788:	4b37      	ldr	r3, [pc, #220]	; (8004868 <HAL_UART_MspInit+0x15c>)
 800478a:	4a38      	ldr	r2, [pc, #224]	; (800486c <HAL_UART_MspInit+0x160>)
 800478c:	601a      	str	r2, [r3, #0]
 800478e:	4b36      	ldr	r3, [pc, #216]	; (8004868 <HAL_UART_MspInit+0x15c>)
 8004790:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004794:	605a      	str	r2, [r3, #4]
 8004796:	4b34      	ldr	r3, [pc, #208]	; (8004868 <HAL_UART_MspInit+0x15c>)
 8004798:	2240      	movs	r2, #64	; 0x40
 800479a:	609a      	str	r2, [r3, #8]
 800479c:	4b32      	ldr	r3, [pc, #200]	; (8004868 <HAL_UART_MspInit+0x15c>)
 800479e:	2200      	movs	r2, #0
 80047a0:	60da      	str	r2, [r3, #12]
 80047a2:	4b31      	ldr	r3, [pc, #196]	; (8004868 <HAL_UART_MspInit+0x15c>)
 80047a4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80047a8:	611a      	str	r2, [r3, #16]
 80047aa:	4b2f      	ldr	r3, [pc, #188]	; (8004868 <HAL_UART_MspInit+0x15c>)
 80047ac:	2200      	movs	r2, #0
 80047ae:	615a      	str	r2, [r3, #20]
 80047b0:	4b2d      	ldr	r3, [pc, #180]	; (8004868 <HAL_UART_MspInit+0x15c>)
 80047b2:	2200      	movs	r2, #0
 80047b4:	619a      	str	r2, [r3, #24]
 80047b6:	4b2c      	ldr	r3, [pc, #176]	; (8004868 <HAL_UART_MspInit+0x15c>)
 80047b8:	2200      	movs	r2, #0
 80047ba:	61da      	str	r2, [r3, #28]
 80047bc:	4b2a      	ldr	r3, [pc, #168]	; (8004868 <HAL_UART_MspInit+0x15c>)
 80047be:	2200      	movs	r2, #0
 80047c0:	621a      	str	r2, [r3, #32]
 80047c2:	4b29      	ldr	r3, [pc, #164]	; (8004868 <HAL_UART_MspInit+0x15c>)
 80047c4:	2200      	movs	r2, #0
 80047c6:	625a      	str	r2, [r3, #36]	; 0x24
 80047c8:	4827      	ldr	r0, [pc, #156]	; (8004868 <HAL_UART_MspInit+0x15c>)
 80047ca:	f000 fab3 	bl	8004d34 <HAL_DMA_Init>
 80047ce:	4603      	mov	r3, r0
 80047d0:	2b00      	cmp	r3, #0
 80047d2:	d001      	beq.n	80047d8 <HAL_UART_MspInit+0xcc>
 80047d4:	f7ff fde4 	bl	80043a0 <Error_Handler>
 80047d8:	687b      	ldr	r3, [r7, #4]
 80047da:	4a23      	ldr	r2, [pc, #140]	; (8004868 <HAL_UART_MspInit+0x15c>)
 80047dc:	635a      	str	r2, [r3, #52]	; 0x34
 80047de:	4a22      	ldr	r2, [pc, #136]	; (8004868 <HAL_UART_MspInit+0x15c>)
 80047e0:	687b      	ldr	r3, [r7, #4]
 80047e2:	6393      	str	r3, [r2, #56]	; 0x38
 80047e4:	4b22      	ldr	r3, [pc, #136]	; (8004870 <HAL_UART_MspInit+0x164>)
 80047e6:	4a23      	ldr	r2, [pc, #140]	; (8004874 <HAL_UART_MspInit+0x168>)
 80047e8:	601a      	str	r2, [r3, #0]
 80047ea:	4b21      	ldr	r3, [pc, #132]	; (8004870 <HAL_UART_MspInit+0x164>)
 80047ec:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80047f0:	605a      	str	r2, [r3, #4]
 80047f2:	4b1f      	ldr	r3, [pc, #124]	; (8004870 <HAL_UART_MspInit+0x164>)
 80047f4:	2200      	movs	r2, #0
 80047f6:	609a      	str	r2, [r3, #8]
 80047f8:	4b1d      	ldr	r3, [pc, #116]	; (8004870 <HAL_UART_MspInit+0x164>)
 80047fa:	2200      	movs	r2, #0
 80047fc:	60da      	str	r2, [r3, #12]
 80047fe:	4b1c      	ldr	r3, [pc, #112]	; (8004870 <HAL_UART_MspInit+0x164>)
 8004800:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004804:	611a      	str	r2, [r3, #16]
 8004806:	4b1a      	ldr	r3, [pc, #104]	; (8004870 <HAL_UART_MspInit+0x164>)
 8004808:	2200      	movs	r2, #0
 800480a:	615a      	str	r2, [r3, #20]
 800480c:	4b18      	ldr	r3, [pc, #96]	; (8004870 <HAL_UART_MspInit+0x164>)
 800480e:	2200      	movs	r2, #0
 8004810:	619a      	str	r2, [r3, #24]
 8004812:	4b17      	ldr	r3, [pc, #92]	; (8004870 <HAL_UART_MspInit+0x164>)
 8004814:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004818:	61da      	str	r2, [r3, #28]
 800481a:	4b15      	ldr	r3, [pc, #84]	; (8004870 <HAL_UART_MspInit+0x164>)
 800481c:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8004820:	621a      	str	r2, [r3, #32]
 8004822:	4b13      	ldr	r3, [pc, #76]	; (8004870 <HAL_UART_MspInit+0x164>)
 8004824:	2200      	movs	r2, #0
 8004826:	625a      	str	r2, [r3, #36]	; 0x24
 8004828:	4811      	ldr	r0, [pc, #68]	; (8004870 <HAL_UART_MspInit+0x164>)
 800482a:	f000 fa83 	bl	8004d34 <HAL_DMA_Init>
 800482e:	4603      	mov	r3, r0
 8004830:	2b00      	cmp	r3, #0
 8004832:	d001      	beq.n	8004838 <HAL_UART_MspInit+0x12c>
 8004834:	f7ff fdb4 	bl	80043a0 <Error_Handler>
 8004838:	687b      	ldr	r3, [r7, #4]
 800483a:	4a0d      	ldr	r2, [pc, #52]	; (8004870 <HAL_UART_MspInit+0x164>)
 800483c:	639a      	str	r2, [r3, #56]	; 0x38
 800483e:	4a0c      	ldr	r2, [pc, #48]	; (8004870 <HAL_UART_MspInit+0x164>)
 8004840:	687b      	ldr	r3, [r7, #4]
 8004842:	6393      	str	r3, [r2, #56]	; 0x38
 8004844:	2200      	movs	r2, #0
 8004846:	2100      	movs	r1, #0
 8004848:	2026      	movs	r0, #38	; 0x26
 800484a:	f000 fa3c 	bl	8004cc6 <HAL_NVIC_SetPriority>
 800484e:	2026      	movs	r0, #38	; 0x26
 8004850:	f000 fa55 	bl	8004cfe <HAL_NVIC_EnableIRQ>
 8004854:	bf00      	nop
 8004856:	3728      	adds	r7, #40	; 0x28
 8004858:	46bd      	mov	sp, r7
 800485a:	bd80      	pop	{r7, pc}
 800485c:	40004400 	.word	0x40004400
 8004860:	40023800 	.word	0x40023800
 8004864:	40020000 	.word	0x40020000
 8004868:	20000404 	.word	0x20000404
 800486c:	400260a0 	.word	0x400260a0
 8004870:	20000464 	.word	0x20000464
 8004874:	40026088 	.word	0x40026088

08004878 <NMI_Handler>:
 8004878:	b480      	push	{r7}
 800487a:	af00      	add	r7, sp, #0
 800487c:	e7fe      	b.n	800487c <NMI_Handler+0x4>

0800487e <HardFault_Handler>:
 800487e:	b480      	push	{r7}
 8004880:	af00      	add	r7, sp, #0
 8004882:	e7fe      	b.n	8004882 <HardFault_Handler+0x4>

08004884 <MemManage_Handler>:
 8004884:	b480      	push	{r7}
 8004886:	af00      	add	r7, sp, #0
 8004888:	e7fe      	b.n	8004888 <MemManage_Handler+0x4>

0800488a <BusFault_Handler>:
 800488a:	b480      	push	{r7}
 800488c:	af00      	add	r7, sp, #0
 800488e:	e7fe      	b.n	800488e <BusFault_Handler+0x4>

08004890 <UsageFault_Handler>:
 8004890:	b480      	push	{r7}
 8004892:	af00      	add	r7, sp, #0
 8004894:	e7fe      	b.n	8004894 <UsageFault_Handler+0x4>

08004896 <SVC_Handler>:
 8004896:	b480      	push	{r7}
 8004898:	af00      	add	r7, sp, #0
 800489a:	bf00      	nop
 800489c:	46bd      	mov	sp, r7
 800489e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048a2:	4770      	bx	lr

080048a4 <DebugMon_Handler>:
 80048a4:	b480      	push	{r7}
 80048a6:	af00      	add	r7, sp, #0
 80048a8:	bf00      	nop
 80048aa:	46bd      	mov	sp, r7
 80048ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048b0:	4770      	bx	lr

080048b2 <PendSV_Handler>:
 80048b2:	b480      	push	{r7}
 80048b4:	af00      	add	r7, sp, #0
 80048b6:	bf00      	nop
 80048b8:	46bd      	mov	sp, r7
 80048ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048be:	4770      	bx	lr

080048c0 <SysTick_Handler>:
 80048c0:	b580      	push	{r7, lr}
 80048c2:	af00      	add	r7, sp, #0
 80048c4:	f000 f904 	bl	8004ad0 <HAL_IncTick>
 80048c8:	bf00      	nop
 80048ca:	bd80      	pop	{r7, pc}

080048cc <DMA1_Stream0_IRQHandler>:
 80048cc:	b580      	push	{r7, lr}
 80048ce:	af00      	add	r7, sp, #0
 80048d0:	4802      	ldr	r0, [pc, #8]	; (80048dc <DMA1_Stream0_IRQHandler+0x10>)
 80048d2:	f000 fbc7 	bl	8005064 <HAL_DMA_IRQHandler>
 80048d6:	bf00      	nop
 80048d8:	bd80      	pop	{r7, pc}
 80048da:	bf00      	nop
 80048dc:	20000270 	.word	0x20000270

080048e0 <DMA1_Stream5_IRQHandler>:
 80048e0:	b580      	push	{r7, lr}
 80048e2:	af00      	add	r7, sp, #0
 80048e4:	4802      	ldr	r0, [pc, #8]	; (80048f0 <DMA1_Stream5_IRQHandler+0x10>)
 80048e6:	f000 fbbd 	bl	8005064 <HAL_DMA_IRQHandler>
 80048ea:	bf00      	nop
 80048ec:	bd80      	pop	{r7, pc}
 80048ee:	bf00      	nop
 80048f0:	20000464 	.word	0x20000464

080048f4 <DMA1_Stream6_IRQHandler>:
 80048f4:	b580      	push	{r7, lr}
 80048f6:	af00      	add	r7, sp, #0
 80048f8:	4802      	ldr	r0, [pc, #8]	; (8004904 <DMA1_Stream6_IRQHandler+0x10>)
 80048fa:	f000 fbb3 	bl	8005064 <HAL_DMA_IRQHandler>
 80048fe:	bf00      	nop
 8004900:	bd80      	pop	{r7, pc}
 8004902:	bf00      	nop
 8004904:	20000404 	.word	0x20000404

08004908 <EXTI9_5_IRQHandler>:
 8004908:	b580      	push	{r7, lr}
 800490a:	af00      	add	r7, sp, #0
 800490c:	f44f 7080 	mov.w	r0, #256	; 0x100
 8004910:	f000 ffd6 	bl	80058c0 <HAL_GPIO_EXTI_IRQHandler>
 8004914:	bf00      	nop
 8004916:	bd80      	pop	{r7, pc}

08004918 <TIM1_TRG_COM_TIM11_IRQHandler>:
 8004918:	b580      	push	{r7, lr}
 800491a:	af00      	add	r7, sp, #0
 800491c:	4802      	ldr	r0, [pc, #8]	; (8004928 <TIM1_TRG_COM_TIM11_IRQHandler+0x10>)
 800491e:	f005 f815 	bl	800994c <HAL_TIM_IRQHandler>
 8004922:	bf00      	nop
 8004924:	bd80      	pop	{r7, pc}
 8004926:	bf00      	nop
 8004928:	20000378 	.word	0x20000378

0800492c <TIM2_IRQHandler>:
 800492c:	b580      	push	{r7, lr}
 800492e:	af00      	add	r7, sp, #0
 8004930:	4802      	ldr	r0, [pc, #8]	; (800493c <TIM2_IRQHandler+0x10>)
 8004932:	f005 f80b 	bl	800994c <HAL_TIM_IRQHandler>
 8004936:	bf00      	nop
 8004938:	bd80      	pop	{r7, pc}
 800493a:	bf00      	nop
 800493c:	20000330 	.word	0x20000330

08004940 <I2C1_EV_IRQHandler>:
 8004940:	b580      	push	{r7, lr}
 8004942:	af00      	add	r7, sp, #0
 8004944:	4802      	ldr	r0, [pc, #8]	; (8004950 <I2C1_EV_IRQHandler+0x10>)
 8004946:	f001 fc3b 	bl	80061c0 <HAL_I2C_EV_IRQHandler>
 800494a:	bf00      	nop
 800494c:	bd80      	pop	{r7, pc}
 800494e:	bf00      	nop
 8004950:	200001c4 	.word	0x200001c4

08004954 <I2C1_ER_IRQHandler>:
 8004954:	b580      	push	{r7, lr}
 8004956:	af00      	add	r7, sp, #0
 8004958:	4802      	ldr	r0, [pc, #8]	; (8004964 <I2C1_ER_IRQHandler+0x10>)
 800495a:	f001 fda2 	bl	80064a2 <HAL_I2C_ER_IRQHandler>
 800495e:	bf00      	nop
 8004960:	bd80      	pop	{r7, pc}
 8004962:	bf00      	nop
 8004964:	200001c4 	.word	0x200001c4

08004968 <USART2_IRQHandler>:
 8004968:	b580      	push	{r7, lr}
 800496a:	af00      	add	r7, sp, #0
 800496c:	4802      	ldr	r0, [pc, #8]	; (8004978 <USART2_IRQHandler+0x10>)
 800496e:	f005 ff71 	bl	800a854 <HAL_UART_IRQHandler>
 8004972:	bf00      	nop
 8004974:	bd80      	pop	{r7, pc}
 8004976:	bf00      	nop
 8004978:	200003c0 	.word	0x200003c0

0800497c <EXTI15_10_IRQHandler>:
 800497c:	b580      	push	{r7, lr}
 800497e:	af00      	add	r7, sp, #0
 8004980:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8004984:	f000 ff9c 	bl	80058c0 <HAL_GPIO_EXTI_IRQHandler>
 8004988:	bf00      	nop
 800498a:	bd80      	pop	{r7, pc}

0800498c <DMA1_Stream7_IRQHandler>:
 800498c:	b580      	push	{r7, lr}
 800498e:	af00      	add	r7, sp, #0
 8004990:	4802      	ldr	r0, [pc, #8]	; (800499c <DMA1_Stream7_IRQHandler+0x10>)
 8004992:	f000 fb67 	bl	8005064 <HAL_DMA_IRQHandler>
 8004996:	bf00      	nop
 8004998:	bd80      	pop	{r7, pc}
 800499a:	bf00      	nop
 800499c:	200002d0 	.word	0x200002d0

080049a0 <SPI3_IRQHandler>:
 80049a0:	b580      	push	{r7, lr}
 80049a2:	af00      	add	r7, sp, #0
 80049a4:	4802      	ldr	r0, [pc, #8]	; (80049b0 <SPI3_IRQHandler+0x10>)
 80049a6:	f004 fa77 	bl	8008e98 <HAL_SPI_IRQHandler>
 80049aa:	bf00      	nop
 80049ac:	bd80      	pop	{r7, pc}
 80049ae:	bf00      	nop
 80049b0:	20000218 	.word	0x20000218

080049b4 <SystemInit>:
 80049b4:	b480      	push	{r7}
 80049b6:	af00      	add	r7, sp, #0
 80049b8:	4b06      	ldr	r3, [pc, #24]	; (80049d4 <SystemInit+0x20>)
 80049ba:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80049be:	4a05      	ldr	r2, [pc, #20]	; (80049d4 <SystemInit+0x20>)
 80049c0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80049c4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80049c8:	bf00      	nop
 80049ca:	46bd      	mov	sp, r7
 80049cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049d0:	4770      	bx	lr
 80049d2:	bf00      	nop
 80049d4:	e000ed00 	.word	0xe000ed00

080049d8 <Reset_Handler>:
 80049d8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8004a10 <LoopFillZerobss+0x12>
 80049dc:	480d      	ldr	r0, [pc, #52]	; (8004a14 <LoopFillZerobss+0x16>)
 80049de:	490e      	ldr	r1, [pc, #56]	; (8004a18 <LoopFillZerobss+0x1a>)
 80049e0:	4a0e      	ldr	r2, [pc, #56]	; (8004a1c <LoopFillZerobss+0x1e>)
 80049e2:	2300      	movs	r3, #0
 80049e4:	e002      	b.n	80049ec <LoopCopyDataInit>

080049e6 <CopyDataInit>:
 80049e6:	58d4      	ldr	r4, [r2, r3]
 80049e8:	50c4      	str	r4, [r0, r3]
 80049ea:	3304      	adds	r3, #4

080049ec <LoopCopyDataInit>:
 80049ec:	18c4      	adds	r4, r0, r3
 80049ee:	428c      	cmp	r4, r1
 80049f0:	d3f9      	bcc.n	80049e6 <CopyDataInit>
 80049f2:	4a0b      	ldr	r2, [pc, #44]	; (8004a20 <LoopFillZerobss+0x22>)
 80049f4:	4c0b      	ldr	r4, [pc, #44]	; (8004a24 <LoopFillZerobss+0x26>)
 80049f6:	2300      	movs	r3, #0
 80049f8:	e001      	b.n	80049fe <LoopFillZerobss>

080049fa <FillZerobss>:
 80049fa:	6013      	str	r3, [r2, #0]
 80049fc:	3204      	adds	r2, #4

080049fe <LoopFillZerobss>:
 80049fe:	42a2      	cmp	r2, r4
 8004a00:	d3fb      	bcc.n	80049fa <FillZerobss>
 8004a02:	f7ff ffd7 	bl	80049b4 <SystemInit>
 8004a06:	f007 f815 	bl	800ba34 <__libc_init_array>
 8004a0a:	f7fc fa45 	bl	8000e98 <main>
 8004a0e:	4770      	bx	lr
 8004a10:	20020000 	.word	0x20020000
 8004a14:	20000000 	.word	0x20000000
 8004a18:	200001a8 	.word	0x200001a8
 8004a1c:	0800bc90 	.word	0x0800bc90
 8004a20:	200001a8 	.word	0x200001a8
 8004a24:	20000810 	.word	0x20000810

08004a28 <ADC_IRQHandler>:
 8004a28:	e7fe      	b.n	8004a28 <ADC_IRQHandler>
	...

08004a2c <HAL_Init>:
 8004a2c:	b580      	push	{r7, lr}
 8004a2e:	af00      	add	r7, sp, #0
 8004a30:	4b0e      	ldr	r3, [pc, #56]	; (8004a6c <HAL_Init+0x40>)
 8004a32:	681b      	ldr	r3, [r3, #0]
 8004a34:	4a0d      	ldr	r2, [pc, #52]	; (8004a6c <HAL_Init+0x40>)
 8004a36:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004a3a:	6013      	str	r3, [r2, #0]
 8004a3c:	4b0b      	ldr	r3, [pc, #44]	; (8004a6c <HAL_Init+0x40>)
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	4a0a      	ldr	r2, [pc, #40]	; (8004a6c <HAL_Init+0x40>)
 8004a42:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8004a46:	6013      	str	r3, [r2, #0]
 8004a48:	4b08      	ldr	r3, [pc, #32]	; (8004a6c <HAL_Init+0x40>)
 8004a4a:	681b      	ldr	r3, [r3, #0]
 8004a4c:	4a07      	ldr	r2, [pc, #28]	; (8004a6c <HAL_Init+0x40>)
 8004a4e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004a52:	6013      	str	r3, [r2, #0]
 8004a54:	2003      	movs	r0, #3
 8004a56:	f000 f92b 	bl	8004cb0 <HAL_NVIC_SetPriorityGrouping>
 8004a5a:	2000      	movs	r0, #0
 8004a5c:	f000 f808 	bl	8004a70 <HAL_InitTick>
 8004a60:	f7ff fca4 	bl	80043ac <HAL_MspInit>
 8004a64:	2300      	movs	r3, #0
 8004a66:	4618      	mov	r0, r3
 8004a68:	bd80      	pop	{r7, pc}
 8004a6a:	bf00      	nop
 8004a6c:	40023c00 	.word	0x40023c00

08004a70 <HAL_InitTick>:
 8004a70:	b580      	push	{r7, lr}
 8004a72:	b082      	sub	sp, #8
 8004a74:	af00      	add	r7, sp, #0
 8004a76:	6078      	str	r0, [r7, #4]
 8004a78:	4b12      	ldr	r3, [pc, #72]	; (8004ac4 <HAL_InitTick+0x54>)
 8004a7a:	681a      	ldr	r2, [r3, #0]
 8004a7c:	4b12      	ldr	r3, [pc, #72]	; (8004ac8 <HAL_InitTick+0x58>)
 8004a7e:	781b      	ldrb	r3, [r3, #0]
 8004a80:	4619      	mov	r1, r3
 8004a82:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004a86:	fbb3 f3f1 	udiv	r3, r3, r1
 8004a8a:	fbb2 f3f3 	udiv	r3, r2, r3
 8004a8e:	4618      	mov	r0, r3
 8004a90:	f000 f943 	bl	8004d1a <HAL_SYSTICK_Config>
 8004a94:	4603      	mov	r3, r0
 8004a96:	2b00      	cmp	r3, #0
 8004a98:	d001      	beq.n	8004a9e <HAL_InitTick+0x2e>
 8004a9a:	2301      	movs	r3, #1
 8004a9c:	e00e      	b.n	8004abc <HAL_InitTick+0x4c>
 8004a9e:	687b      	ldr	r3, [r7, #4]
 8004aa0:	2b0f      	cmp	r3, #15
 8004aa2:	d80a      	bhi.n	8004aba <HAL_InitTick+0x4a>
 8004aa4:	2200      	movs	r2, #0
 8004aa6:	6879      	ldr	r1, [r7, #4]
 8004aa8:	f04f 30ff 	mov.w	r0, #4294967295
 8004aac:	f000 f90b 	bl	8004cc6 <HAL_NVIC_SetPriority>
 8004ab0:	4a06      	ldr	r2, [pc, #24]	; (8004acc <HAL_InitTick+0x5c>)
 8004ab2:	687b      	ldr	r3, [r7, #4]
 8004ab4:	6013      	str	r3, [r2, #0]
 8004ab6:	2300      	movs	r3, #0
 8004ab8:	e000      	b.n	8004abc <HAL_InitTick+0x4c>
 8004aba:	2301      	movs	r3, #1
 8004abc:	4618      	mov	r0, r3
 8004abe:	3708      	adds	r7, #8
 8004ac0:	46bd      	mov	sp, r7
 8004ac2:	bd80      	pop	{r7, pc}
 8004ac4:	20000138 	.word	0x20000138
 8004ac8:	20000140 	.word	0x20000140
 8004acc:	2000013c 	.word	0x2000013c

08004ad0 <HAL_IncTick>:
 8004ad0:	b480      	push	{r7}
 8004ad2:	af00      	add	r7, sp, #0
 8004ad4:	4b06      	ldr	r3, [pc, #24]	; (8004af0 <HAL_IncTick+0x20>)
 8004ad6:	781b      	ldrb	r3, [r3, #0]
 8004ad8:	461a      	mov	r2, r3
 8004ada:	4b06      	ldr	r3, [pc, #24]	; (8004af4 <HAL_IncTick+0x24>)
 8004adc:	681b      	ldr	r3, [r3, #0]
 8004ade:	4413      	add	r3, r2
 8004ae0:	4a04      	ldr	r2, [pc, #16]	; (8004af4 <HAL_IncTick+0x24>)
 8004ae2:	6013      	str	r3, [r2, #0]
 8004ae4:	bf00      	nop
 8004ae6:	46bd      	mov	sp, r7
 8004ae8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004aec:	4770      	bx	lr
 8004aee:	bf00      	nop
 8004af0:	20000140 	.word	0x20000140
 8004af4:	2000080c 	.word	0x2000080c

08004af8 <HAL_GetTick>:
 8004af8:	b480      	push	{r7}
 8004afa:	af00      	add	r7, sp, #0
 8004afc:	4b03      	ldr	r3, [pc, #12]	; (8004b0c <HAL_GetTick+0x14>)
 8004afe:	681b      	ldr	r3, [r3, #0]
 8004b00:	4618      	mov	r0, r3
 8004b02:	46bd      	mov	sp, r7
 8004b04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b08:	4770      	bx	lr
 8004b0a:	bf00      	nop
 8004b0c:	2000080c 	.word	0x2000080c

08004b10 <__NVIC_SetPriorityGrouping>:
 8004b10:	b480      	push	{r7}
 8004b12:	b085      	sub	sp, #20
 8004b14:	af00      	add	r7, sp, #0
 8004b16:	6078      	str	r0, [r7, #4]
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	f003 0307 	and.w	r3, r3, #7
 8004b1e:	60fb      	str	r3, [r7, #12]
 8004b20:	4b0c      	ldr	r3, [pc, #48]	; (8004b54 <__NVIC_SetPriorityGrouping+0x44>)
 8004b22:	68db      	ldr	r3, [r3, #12]
 8004b24:	60bb      	str	r3, [r7, #8]
 8004b26:	68ba      	ldr	r2, [r7, #8]
 8004b28:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8004b2c:	4013      	ands	r3, r2
 8004b2e:	60bb      	str	r3, [r7, #8]
 8004b30:	68fb      	ldr	r3, [r7, #12]
 8004b32:	021a      	lsls	r2, r3, #8
 8004b34:	68bb      	ldr	r3, [r7, #8]
 8004b36:	4313      	orrs	r3, r2
 8004b38:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004b3c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004b40:	60bb      	str	r3, [r7, #8]
 8004b42:	4a04      	ldr	r2, [pc, #16]	; (8004b54 <__NVIC_SetPriorityGrouping+0x44>)
 8004b44:	68bb      	ldr	r3, [r7, #8]
 8004b46:	60d3      	str	r3, [r2, #12]
 8004b48:	bf00      	nop
 8004b4a:	3714      	adds	r7, #20
 8004b4c:	46bd      	mov	sp, r7
 8004b4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b52:	4770      	bx	lr
 8004b54:	e000ed00 	.word	0xe000ed00

08004b58 <__NVIC_GetPriorityGrouping>:
 8004b58:	b480      	push	{r7}
 8004b5a:	af00      	add	r7, sp, #0
 8004b5c:	4b04      	ldr	r3, [pc, #16]	; (8004b70 <__NVIC_GetPriorityGrouping+0x18>)
 8004b5e:	68db      	ldr	r3, [r3, #12]
 8004b60:	0a1b      	lsrs	r3, r3, #8
 8004b62:	f003 0307 	and.w	r3, r3, #7
 8004b66:	4618      	mov	r0, r3
 8004b68:	46bd      	mov	sp, r7
 8004b6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b6e:	4770      	bx	lr
 8004b70:	e000ed00 	.word	0xe000ed00

08004b74 <__NVIC_EnableIRQ>:
 8004b74:	b480      	push	{r7}
 8004b76:	b083      	sub	sp, #12
 8004b78:	af00      	add	r7, sp, #0
 8004b7a:	4603      	mov	r3, r0
 8004b7c:	71fb      	strb	r3, [r7, #7]
 8004b7e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004b82:	2b00      	cmp	r3, #0
 8004b84:	db0b      	blt.n	8004b9e <__NVIC_EnableIRQ+0x2a>
 8004b86:	79fb      	ldrb	r3, [r7, #7]
 8004b88:	f003 021f 	and.w	r2, r3, #31
 8004b8c:	4907      	ldr	r1, [pc, #28]	; (8004bac <__NVIC_EnableIRQ+0x38>)
 8004b8e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004b92:	095b      	lsrs	r3, r3, #5
 8004b94:	2001      	movs	r0, #1
 8004b96:	fa00 f202 	lsl.w	r2, r0, r2
 8004b9a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004b9e:	bf00      	nop
 8004ba0:	370c      	adds	r7, #12
 8004ba2:	46bd      	mov	sp, r7
 8004ba4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ba8:	4770      	bx	lr
 8004baa:	bf00      	nop
 8004bac:	e000e100 	.word	0xe000e100

08004bb0 <__NVIC_SetPriority>:
 8004bb0:	b480      	push	{r7}
 8004bb2:	b083      	sub	sp, #12
 8004bb4:	af00      	add	r7, sp, #0
 8004bb6:	4603      	mov	r3, r0
 8004bb8:	6039      	str	r1, [r7, #0]
 8004bba:	71fb      	strb	r3, [r7, #7]
 8004bbc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004bc0:	2b00      	cmp	r3, #0
 8004bc2:	db0a      	blt.n	8004bda <__NVIC_SetPriority+0x2a>
 8004bc4:	683b      	ldr	r3, [r7, #0]
 8004bc6:	b2da      	uxtb	r2, r3
 8004bc8:	490c      	ldr	r1, [pc, #48]	; (8004bfc <__NVIC_SetPriority+0x4c>)
 8004bca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004bce:	0112      	lsls	r2, r2, #4
 8004bd0:	b2d2      	uxtb	r2, r2
 8004bd2:	440b      	add	r3, r1
 8004bd4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8004bd8:	e00a      	b.n	8004bf0 <__NVIC_SetPriority+0x40>
 8004bda:	683b      	ldr	r3, [r7, #0]
 8004bdc:	b2da      	uxtb	r2, r3
 8004bde:	4908      	ldr	r1, [pc, #32]	; (8004c00 <__NVIC_SetPriority+0x50>)
 8004be0:	79fb      	ldrb	r3, [r7, #7]
 8004be2:	f003 030f 	and.w	r3, r3, #15
 8004be6:	3b04      	subs	r3, #4
 8004be8:	0112      	lsls	r2, r2, #4
 8004bea:	b2d2      	uxtb	r2, r2
 8004bec:	440b      	add	r3, r1
 8004bee:	761a      	strb	r2, [r3, #24]
 8004bf0:	bf00      	nop
 8004bf2:	370c      	adds	r7, #12
 8004bf4:	46bd      	mov	sp, r7
 8004bf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bfa:	4770      	bx	lr
 8004bfc:	e000e100 	.word	0xe000e100
 8004c00:	e000ed00 	.word	0xe000ed00

08004c04 <NVIC_EncodePriority>:
 8004c04:	b480      	push	{r7}
 8004c06:	b089      	sub	sp, #36	; 0x24
 8004c08:	af00      	add	r7, sp, #0
 8004c0a:	60f8      	str	r0, [r7, #12]
 8004c0c:	60b9      	str	r1, [r7, #8]
 8004c0e:	607a      	str	r2, [r7, #4]
 8004c10:	68fb      	ldr	r3, [r7, #12]
 8004c12:	f003 0307 	and.w	r3, r3, #7
 8004c16:	61fb      	str	r3, [r7, #28]
 8004c18:	69fb      	ldr	r3, [r7, #28]
 8004c1a:	f1c3 0307 	rsb	r3, r3, #7
 8004c1e:	2b04      	cmp	r3, #4
 8004c20:	bf28      	it	cs
 8004c22:	2304      	movcs	r3, #4
 8004c24:	61bb      	str	r3, [r7, #24]
 8004c26:	69fb      	ldr	r3, [r7, #28]
 8004c28:	3304      	adds	r3, #4
 8004c2a:	2b06      	cmp	r3, #6
 8004c2c:	d902      	bls.n	8004c34 <NVIC_EncodePriority+0x30>
 8004c2e:	69fb      	ldr	r3, [r7, #28]
 8004c30:	3b03      	subs	r3, #3
 8004c32:	e000      	b.n	8004c36 <NVIC_EncodePriority+0x32>
 8004c34:	2300      	movs	r3, #0
 8004c36:	617b      	str	r3, [r7, #20]
 8004c38:	f04f 32ff 	mov.w	r2, #4294967295
 8004c3c:	69bb      	ldr	r3, [r7, #24]
 8004c3e:	fa02 f303 	lsl.w	r3, r2, r3
 8004c42:	43da      	mvns	r2, r3
 8004c44:	68bb      	ldr	r3, [r7, #8]
 8004c46:	401a      	ands	r2, r3
 8004c48:	697b      	ldr	r3, [r7, #20]
 8004c4a:	409a      	lsls	r2, r3
 8004c4c:	f04f 31ff 	mov.w	r1, #4294967295
 8004c50:	697b      	ldr	r3, [r7, #20]
 8004c52:	fa01 f303 	lsl.w	r3, r1, r3
 8004c56:	43d9      	mvns	r1, r3
 8004c58:	687b      	ldr	r3, [r7, #4]
 8004c5a:	400b      	ands	r3, r1
 8004c5c:	4313      	orrs	r3, r2
 8004c5e:	4618      	mov	r0, r3
 8004c60:	3724      	adds	r7, #36	; 0x24
 8004c62:	46bd      	mov	sp, r7
 8004c64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c68:	4770      	bx	lr
	...

08004c6c <SysTick_Config>:
 8004c6c:	b580      	push	{r7, lr}
 8004c6e:	b082      	sub	sp, #8
 8004c70:	af00      	add	r7, sp, #0
 8004c72:	6078      	str	r0, [r7, #4]
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	3b01      	subs	r3, #1
 8004c78:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004c7c:	d301      	bcc.n	8004c82 <SysTick_Config+0x16>
 8004c7e:	2301      	movs	r3, #1
 8004c80:	e00f      	b.n	8004ca2 <SysTick_Config+0x36>
 8004c82:	4a0a      	ldr	r2, [pc, #40]	; (8004cac <SysTick_Config+0x40>)
 8004c84:	687b      	ldr	r3, [r7, #4]
 8004c86:	3b01      	subs	r3, #1
 8004c88:	6053      	str	r3, [r2, #4]
 8004c8a:	210f      	movs	r1, #15
 8004c8c:	f04f 30ff 	mov.w	r0, #4294967295
 8004c90:	f7ff ff8e 	bl	8004bb0 <__NVIC_SetPriority>
 8004c94:	4b05      	ldr	r3, [pc, #20]	; (8004cac <SysTick_Config+0x40>)
 8004c96:	2200      	movs	r2, #0
 8004c98:	609a      	str	r2, [r3, #8]
 8004c9a:	4b04      	ldr	r3, [pc, #16]	; (8004cac <SysTick_Config+0x40>)
 8004c9c:	2207      	movs	r2, #7
 8004c9e:	601a      	str	r2, [r3, #0]
 8004ca0:	2300      	movs	r3, #0
 8004ca2:	4618      	mov	r0, r3
 8004ca4:	3708      	adds	r7, #8
 8004ca6:	46bd      	mov	sp, r7
 8004ca8:	bd80      	pop	{r7, pc}
 8004caa:	bf00      	nop
 8004cac:	e000e010 	.word	0xe000e010

08004cb0 <HAL_NVIC_SetPriorityGrouping>:
 8004cb0:	b580      	push	{r7, lr}
 8004cb2:	b082      	sub	sp, #8
 8004cb4:	af00      	add	r7, sp, #0
 8004cb6:	6078      	str	r0, [r7, #4]
 8004cb8:	6878      	ldr	r0, [r7, #4]
 8004cba:	f7ff ff29 	bl	8004b10 <__NVIC_SetPriorityGrouping>
 8004cbe:	bf00      	nop
 8004cc0:	3708      	adds	r7, #8
 8004cc2:	46bd      	mov	sp, r7
 8004cc4:	bd80      	pop	{r7, pc}

08004cc6 <HAL_NVIC_SetPriority>:
 8004cc6:	b580      	push	{r7, lr}
 8004cc8:	b086      	sub	sp, #24
 8004cca:	af00      	add	r7, sp, #0
 8004ccc:	4603      	mov	r3, r0
 8004cce:	60b9      	str	r1, [r7, #8]
 8004cd0:	607a      	str	r2, [r7, #4]
 8004cd2:	73fb      	strb	r3, [r7, #15]
 8004cd4:	2300      	movs	r3, #0
 8004cd6:	617b      	str	r3, [r7, #20]
 8004cd8:	f7ff ff3e 	bl	8004b58 <__NVIC_GetPriorityGrouping>
 8004cdc:	6178      	str	r0, [r7, #20]
 8004cde:	687a      	ldr	r2, [r7, #4]
 8004ce0:	68b9      	ldr	r1, [r7, #8]
 8004ce2:	6978      	ldr	r0, [r7, #20]
 8004ce4:	f7ff ff8e 	bl	8004c04 <NVIC_EncodePriority>
 8004ce8:	4602      	mov	r2, r0
 8004cea:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004cee:	4611      	mov	r1, r2
 8004cf0:	4618      	mov	r0, r3
 8004cf2:	f7ff ff5d 	bl	8004bb0 <__NVIC_SetPriority>
 8004cf6:	bf00      	nop
 8004cf8:	3718      	adds	r7, #24
 8004cfa:	46bd      	mov	sp, r7
 8004cfc:	bd80      	pop	{r7, pc}

08004cfe <HAL_NVIC_EnableIRQ>:
 8004cfe:	b580      	push	{r7, lr}
 8004d00:	b082      	sub	sp, #8
 8004d02:	af00      	add	r7, sp, #0
 8004d04:	4603      	mov	r3, r0
 8004d06:	71fb      	strb	r3, [r7, #7]
 8004d08:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004d0c:	4618      	mov	r0, r3
 8004d0e:	f7ff ff31 	bl	8004b74 <__NVIC_EnableIRQ>
 8004d12:	bf00      	nop
 8004d14:	3708      	adds	r7, #8
 8004d16:	46bd      	mov	sp, r7
 8004d18:	bd80      	pop	{r7, pc}

08004d1a <HAL_SYSTICK_Config>:
 8004d1a:	b580      	push	{r7, lr}
 8004d1c:	b082      	sub	sp, #8
 8004d1e:	af00      	add	r7, sp, #0
 8004d20:	6078      	str	r0, [r7, #4]
 8004d22:	6878      	ldr	r0, [r7, #4]
 8004d24:	f7ff ffa2 	bl	8004c6c <SysTick_Config>
 8004d28:	4603      	mov	r3, r0
 8004d2a:	4618      	mov	r0, r3
 8004d2c:	3708      	adds	r7, #8
 8004d2e:	46bd      	mov	sp, r7
 8004d30:	bd80      	pop	{r7, pc}
	...

08004d34 <HAL_DMA_Init>:
 8004d34:	b580      	push	{r7, lr}
 8004d36:	b086      	sub	sp, #24
 8004d38:	af00      	add	r7, sp, #0
 8004d3a:	6078      	str	r0, [r7, #4]
 8004d3c:	2300      	movs	r3, #0
 8004d3e:	617b      	str	r3, [r7, #20]
 8004d40:	f7ff feda 	bl	8004af8 <HAL_GetTick>
 8004d44:	6138      	str	r0, [r7, #16]
 8004d46:	687b      	ldr	r3, [r7, #4]
 8004d48:	2b00      	cmp	r3, #0
 8004d4a:	d101      	bne.n	8004d50 <HAL_DMA_Init+0x1c>
 8004d4c:	2301      	movs	r3, #1
 8004d4e:	e099      	b.n	8004e84 <HAL_DMA_Init+0x150>
 8004d50:	687b      	ldr	r3, [r7, #4]
 8004d52:	2202      	movs	r2, #2
 8004d54:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004d58:	687b      	ldr	r3, [r7, #4]
 8004d5a:	2200      	movs	r2, #0
 8004d5c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	681b      	ldr	r3, [r3, #0]
 8004d64:	681a      	ldr	r2, [r3, #0]
 8004d66:	687b      	ldr	r3, [r7, #4]
 8004d68:	681b      	ldr	r3, [r3, #0]
 8004d6a:	f022 0201 	bic.w	r2, r2, #1
 8004d6e:	601a      	str	r2, [r3, #0]
 8004d70:	e00f      	b.n	8004d92 <HAL_DMA_Init+0x5e>
 8004d72:	f7ff fec1 	bl	8004af8 <HAL_GetTick>
 8004d76:	4602      	mov	r2, r0
 8004d78:	693b      	ldr	r3, [r7, #16]
 8004d7a:	1ad3      	subs	r3, r2, r3
 8004d7c:	2b05      	cmp	r3, #5
 8004d7e:	d908      	bls.n	8004d92 <HAL_DMA_Init+0x5e>
 8004d80:	687b      	ldr	r3, [r7, #4]
 8004d82:	2220      	movs	r2, #32
 8004d84:	655a      	str	r2, [r3, #84]	; 0x54
 8004d86:	687b      	ldr	r3, [r7, #4]
 8004d88:	2203      	movs	r2, #3
 8004d8a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004d8e:	2303      	movs	r3, #3
 8004d90:	e078      	b.n	8004e84 <HAL_DMA_Init+0x150>
 8004d92:	687b      	ldr	r3, [r7, #4]
 8004d94:	681b      	ldr	r3, [r3, #0]
 8004d96:	681b      	ldr	r3, [r3, #0]
 8004d98:	f003 0301 	and.w	r3, r3, #1
 8004d9c:	2b00      	cmp	r3, #0
 8004d9e:	d1e8      	bne.n	8004d72 <HAL_DMA_Init+0x3e>
 8004da0:	687b      	ldr	r3, [r7, #4]
 8004da2:	681b      	ldr	r3, [r3, #0]
 8004da4:	681b      	ldr	r3, [r3, #0]
 8004da6:	617b      	str	r3, [r7, #20]
 8004da8:	697a      	ldr	r2, [r7, #20]
 8004daa:	4b38      	ldr	r3, [pc, #224]	; (8004e8c <HAL_DMA_Init+0x158>)
 8004dac:	4013      	ands	r3, r2
 8004dae:	617b      	str	r3, [r7, #20]
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	685a      	ldr	r2, [r3, #4]
 8004db4:	687b      	ldr	r3, [r7, #4]
 8004db6:	689b      	ldr	r3, [r3, #8]
 8004db8:	431a      	orrs	r2, r3
 8004dba:	687b      	ldr	r3, [r7, #4]
 8004dbc:	68db      	ldr	r3, [r3, #12]
 8004dbe:	431a      	orrs	r2, r3
 8004dc0:	687b      	ldr	r3, [r7, #4]
 8004dc2:	691b      	ldr	r3, [r3, #16]
 8004dc4:	431a      	orrs	r2, r3
 8004dc6:	687b      	ldr	r3, [r7, #4]
 8004dc8:	695b      	ldr	r3, [r3, #20]
 8004dca:	431a      	orrs	r2, r3
 8004dcc:	687b      	ldr	r3, [r7, #4]
 8004dce:	699b      	ldr	r3, [r3, #24]
 8004dd0:	431a      	orrs	r2, r3
 8004dd2:	687b      	ldr	r3, [r7, #4]
 8004dd4:	69db      	ldr	r3, [r3, #28]
 8004dd6:	431a      	orrs	r2, r3
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	6a1b      	ldr	r3, [r3, #32]
 8004ddc:	4313      	orrs	r3, r2
 8004dde:	697a      	ldr	r2, [r7, #20]
 8004de0:	4313      	orrs	r3, r2
 8004de2:	617b      	str	r3, [r7, #20]
 8004de4:	687b      	ldr	r3, [r7, #4]
 8004de6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004de8:	2b04      	cmp	r3, #4
 8004dea:	d107      	bne.n	8004dfc <HAL_DMA_Init+0xc8>
 8004dec:	687b      	ldr	r3, [r7, #4]
 8004dee:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004df4:	4313      	orrs	r3, r2
 8004df6:	697a      	ldr	r2, [r7, #20]
 8004df8:	4313      	orrs	r3, r2
 8004dfa:	617b      	str	r3, [r7, #20]
 8004dfc:	687b      	ldr	r3, [r7, #4]
 8004dfe:	681b      	ldr	r3, [r3, #0]
 8004e00:	697a      	ldr	r2, [r7, #20]
 8004e02:	601a      	str	r2, [r3, #0]
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	681b      	ldr	r3, [r3, #0]
 8004e08:	695b      	ldr	r3, [r3, #20]
 8004e0a:	617b      	str	r3, [r7, #20]
 8004e0c:	697b      	ldr	r3, [r7, #20]
 8004e0e:	f023 0307 	bic.w	r3, r3, #7
 8004e12:	617b      	str	r3, [r7, #20]
 8004e14:	687b      	ldr	r3, [r7, #4]
 8004e16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e18:	697a      	ldr	r2, [r7, #20]
 8004e1a:	4313      	orrs	r3, r2
 8004e1c:	617b      	str	r3, [r7, #20]
 8004e1e:	687b      	ldr	r3, [r7, #4]
 8004e20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e22:	2b04      	cmp	r3, #4
 8004e24:	d117      	bne.n	8004e56 <HAL_DMA_Init+0x122>
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004e2a:	697a      	ldr	r2, [r7, #20]
 8004e2c:	4313      	orrs	r3, r2
 8004e2e:	617b      	str	r3, [r7, #20]
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004e34:	2b00      	cmp	r3, #0
 8004e36:	d00e      	beq.n	8004e56 <HAL_DMA_Init+0x122>
 8004e38:	6878      	ldr	r0, [r7, #4]
 8004e3a:	f000 fb0f 	bl	800545c <DMA_CheckFifoParam>
 8004e3e:	4603      	mov	r3, r0
 8004e40:	2b00      	cmp	r3, #0
 8004e42:	d008      	beq.n	8004e56 <HAL_DMA_Init+0x122>
 8004e44:	687b      	ldr	r3, [r7, #4]
 8004e46:	2240      	movs	r2, #64	; 0x40
 8004e48:	655a      	str	r2, [r3, #84]	; 0x54
 8004e4a:	687b      	ldr	r3, [r7, #4]
 8004e4c:	2201      	movs	r2, #1
 8004e4e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004e52:	2301      	movs	r3, #1
 8004e54:	e016      	b.n	8004e84 <HAL_DMA_Init+0x150>
 8004e56:	687b      	ldr	r3, [r7, #4]
 8004e58:	681b      	ldr	r3, [r3, #0]
 8004e5a:	697a      	ldr	r2, [r7, #20]
 8004e5c:	615a      	str	r2, [r3, #20]
 8004e5e:	6878      	ldr	r0, [r7, #4]
 8004e60:	f000 fac6 	bl	80053f0 <DMA_CalcBaseAndBitshift>
 8004e64:	4603      	mov	r3, r0
 8004e66:	60fb      	str	r3, [r7, #12]
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004e6c:	223f      	movs	r2, #63	; 0x3f
 8004e6e:	409a      	lsls	r2, r3
 8004e70:	68fb      	ldr	r3, [r7, #12]
 8004e72:	609a      	str	r2, [r3, #8]
 8004e74:	687b      	ldr	r3, [r7, #4]
 8004e76:	2200      	movs	r2, #0
 8004e78:	655a      	str	r2, [r3, #84]	; 0x54
 8004e7a:	687b      	ldr	r3, [r7, #4]
 8004e7c:	2201      	movs	r2, #1
 8004e7e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004e82:	2300      	movs	r3, #0
 8004e84:	4618      	mov	r0, r3
 8004e86:	3718      	adds	r7, #24
 8004e88:	46bd      	mov	sp, r7
 8004e8a:	bd80      	pop	{r7, pc}
 8004e8c:	f010803f 	.word	0xf010803f

08004e90 <HAL_DMA_Start_IT>:
 8004e90:	b580      	push	{r7, lr}
 8004e92:	b086      	sub	sp, #24
 8004e94:	af00      	add	r7, sp, #0
 8004e96:	60f8      	str	r0, [r7, #12]
 8004e98:	60b9      	str	r1, [r7, #8]
 8004e9a:	607a      	str	r2, [r7, #4]
 8004e9c:	603b      	str	r3, [r7, #0]
 8004e9e:	2300      	movs	r3, #0
 8004ea0:	75fb      	strb	r3, [r7, #23]
 8004ea2:	68fb      	ldr	r3, [r7, #12]
 8004ea4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004ea6:	613b      	str	r3, [r7, #16]
 8004ea8:	68fb      	ldr	r3, [r7, #12]
 8004eaa:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8004eae:	2b01      	cmp	r3, #1
 8004eb0:	d101      	bne.n	8004eb6 <HAL_DMA_Start_IT+0x26>
 8004eb2:	2302      	movs	r3, #2
 8004eb4:	e040      	b.n	8004f38 <HAL_DMA_Start_IT+0xa8>
 8004eb6:	68fb      	ldr	r3, [r7, #12]
 8004eb8:	2201      	movs	r2, #1
 8004eba:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004ebe:	68fb      	ldr	r3, [r7, #12]
 8004ec0:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004ec4:	b2db      	uxtb	r3, r3
 8004ec6:	2b01      	cmp	r3, #1
 8004ec8:	d12f      	bne.n	8004f2a <HAL_DMA_Start_IT+0x9a>
 8004eca:	68fb      	ldr	r3, [r7, #12]
 8004ecc:	2202      	movs	r2, #2
 8004ece:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004ed2:	68fb      	ldr	r3, [r7, #12]
 8004ed4:	2200      	movs	r2, #0
 8004ed6:	655a      	str	r2, [r3, #84]	; 0x54
 8004ed8:	683b      	ldr	r3, [r7, #0]
 8004eda:	687a      	ldr	r2, [r7, #4]
 8004edc:	68b9      	ldr	r1, [r7, #8]
 8004ede:	68f8      	ldr	r0, [r7, #12]
 8004ee0:	f000 fa58 	bl	8005394 <DMA_SetConfig>
 8004ee4:	68fb      	ldr	r3, [r7, #12]
 8004ee6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004ee8:	223f      	movs	r2, #63	; 0x3f
 8004eea:	409a      	lsls	r2, r3
 8004eec:	693b      	ldr	r3, [r7, #16]
 8004eee:	609a      	str	r2, [r3, #8]
 8004ef0:	68fb      	ldr	r3, [r7, #12]
 8004ef2:	681b      	ldr	r3, [r3, #0]
 8004ef4:	681a      	ldr	r2, [r3, #0]
 8004ef6:	68fb      	ldr	r3, [r7, #12]
 8004ef8:	681b      	ldr	r3, [r3, #0]
 8004efa:	f042 0216 	orr.w	r2, r2, #22
 8004efe:	601a      	str	r2, [r3, #0]
 8004f00:	68fb      	ldr	r3, [r7, #12]
 8004f02:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f04:	2b00      	cmp	r3, #0
 8004f06:	d007      	beq.n	8004f18 <HAL_DMA_Start_IT+0x88>
 8004f08:	68fb      	ldr	r3, [r7, #12]
 8004f0a:	681b      	ldr	r3, [r3, #0]
 8004f0c:	681a      	ldr	r2, [r3, #0]
 8004f0e:	68fb      	ldr	r3, [r7, #12]
 8004f10:	681b      	ldr	r3, [r3, #0]
 8004f12:	f042 0208 	orr.w	r2, r2, #8
 8004f16:	601a      	str	r2, [r3, #0]
 8004f18:	68fb      	ldr	r3, [r7, #12]
 8004f1a:	681b      	ldr	r3, [r3, #0]
 8004f1c:	681a      	ldr	r2, [r3, #0]
 8004f1e:	68fb      	ldr	r3, [r7, #12]
 8004f20:	681b      	ldr	r3, [r3, #0]
 8004f22:	f042 0201 	orr.w	r2, r2, #1
 8004f26:	601a      	str	r2, [r3, #0]
 8004f28:	e005      	b.n	8004f36 <HAL_DMA_Start_IT+0xa6>
 8004f2a:	68fb      	ldr	r3, [r7, #12]
 8004f2c:	2200      	movs	r2, #0
 8004f2e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004f32:	2302      	movs	r3, #2
 8004f34:	75fb      	strb	r3, [r7, #23]
 8004f36:	7dfb      	ldrb	r3, [r7, #23]
 8004f38:	4618      	mov	r0, r3
 8004f3a:	3718      	adds	r7, #24
 8004f3c:	46bd      	mov	sp, r7
 8004f3e:	bd80      	pop	{r7, pc}

08004f40 <HAL_DMA_Abort>:
 8004f40:	b580      	push	{r7, lr}
 8004f42:	b084      	sub	sp, #16
 8004f44:	af00      	add	r7, sp, #0
 8004f46:	6078      	str	r0, [r7, #4]
 8004f48:	687b      	ldr	r3, [r7, #4]
 8004f4a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004f4c:	60fb      	str	r3, [r7, #12]
 8004f4e:	f7ff fdd3 	bl	8004af8 <HAL_GetTick>
 8004f52:	60b8      	str	r0, [r7, #8]
 8004f54:	687b      	ldr	r3, [r7, #4]
 8004f56:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004f5a:	b2db      	uxtb	r3, r3
 8004f5c:	2b02      	cmp	r3, #2
 8004f5e:	d008      	beq.n	8004f72 <HAL_DMA_Abort+0x32>
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	2280      	movs	r2, #128	; 0x80
 8004f64:	655a      	str	r2, [r3, #84]	; 0x54
 8004f66:	687b      	ldr	r3, [r7, #4]
 8004f68:	2200      	movs	r2, #0
 8004f6a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004f6e:	2301      	movs	r3, #1
 8004f70:	e052      	b.n	8005018 <HAL_DMA_Abort+0xd8>
 8004f72:	687b      	ldr	r3, [r7, #4]
 8004f74:	681b      	ldr	r3, [r3, #0]
 8004f76:	681a      	ldr	r2, [r3, #0]
 8004f78:	687b      	ldr	r3, [r7, #4]
 8004f7a:	681b      	ldr	r3, [r3, #0]
 8004f7c:	f022 0216 	bic.w	r2, r2, #22
 8004f80:	601a      	str	r2, [r3, #0]
 8004f82:	687b      	ldr	r3, [r7, #4]
 8004f84:	681b      	ldr	r3, [r3, #0]
 8004f86:	695a      	ldr	r2, [r3, #20]
 8004f88:	687b      	ldr	r3, [r7, #4]
 8004f8a:	681b      	ldr	r3, [r3, #0]
 8004f8c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004f90:	615a      	str	r2, [r3, #20]
 8004f92:	687b      	ldr	r3, [r7, #4]
 8004f94:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f96:	2b00      	cmp	r3, #0
 8004f98:	d103      	bne.n	8004fa2 <HAL_DMA_Abort+0x62>
 8004f9a:	687b      	ldr	r3, [r7, #4]
 8004f9c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004f9e:	2b00      	cmp	r3, #0
 8004fa0:	d007      	beq.n	8004fb2 <HAL_DMA_Abort+0x72>
 8004fa2:	687b      	ldr	r3, [r7, #4]
 8004fa4:	681b      	ldr	r3, [r3, #0]
 8004fa6:	681a      	ldr	r2, [r3, #0]
 8004fa8:	687b      	ldr	r3, [r7, #4]
 8004faa:	681b      	ldr	r3, [r3, #0]
 8004fac:	f022 0208 	bic.w	r2, r2, #8
 8004fb0:	601a      	str	r2, [r3, #0]
 8004fb2:	687b      	ldr	r3, [r7, #4]
 8004fb4:	681b      	ldr	r3, [r3, #0]
 8004fb6:	681a      	ldr	r2, [r3, #0]
 8004fb8:	687b      	ldr	r3, [r7, #4]
 8004fba:	681b      	ldr	r3, [r3, #0]
 8004fbc:	f022 0201 	bic.w	r2, r2, #1
 8004fc0:	601a      	str	r2, [r3, #0]
 8004fc2:	e013      	b.n	8004fec <HAL_DMA_Abort+0xac>
 8004fc4:	f7ff fd98 	bl	8004af8 <HAL_GetTick>
 8004fc8:	4602      	mov	r2, r0
 8004fca:	68bb      	ldr	r3, [r7, #8]
 8004fcc:	1ad3      	subs	r3, r2, r3
 8004fce:	2b05      	cmp	r3, #5
 8004fd0:	d90c      	bls.n	8004fec <HAL_DMA_Abort+0xac>
 8004fd2:	687b      	ldr	r3, [r7, #4]
 8004fd4:	2220      	movs	r2, #32
 8004fd6:	655a      	str	r2, [r3, #84]	; 0x54
 8004fd8:	687b      	ldr	r3, [r7, #4]
 8004fda:	2203      	movs	r2, #3
 8004fdc:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004fe0:	687b      	ldr	r3, [r7, #4]
 8004fe2:	2200      	movs	r2, #0
 8004fe4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004fe8:	2303      	movs	r3, #3
 8004fea:	e015      	b.n	8005018 <HAL_DMA_Abort+0xd8>
 8004fec:	687b      	ldr	r3, [r7, #4]
 8004fee:	681b      	ldr	r3, [r3, #0]
 8004ff0:	681b      	ldr	r3, [r3, #0]
 8004ff2:	f003 0301 	and.w	r3, r3, #1
 8004ff6:	2b00      	cmp	r3, #0
 8004ff8:	d1e4      	bne.n	8004fc4 <HAL_DMA_Abort+0x84>
 8004ffa:	687b      	ldr	r3, [r7, #4]
 8004ffc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004ffe:	223f      	movs	r2, #63	; 0x3f
 8005000:	409a      	lsls	r2, r3
 8005002:	68fb      	ldr	r3, [r7, #12]
 8005004:	609a      	str	r2, [r3, #8]
 8005006:	687b      	ldr	r3, [r7, #4]
 8005008:	2201      	movs	r2, #1
 800500a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800500e:	687b      	ldr	r3, [r7, #4]
 8005010:	2200      	movs	r2, #0
 8005012:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8005016:	2300      	movs	r3, #0
 8005018:	4618      	mov	r0, r3
 800501a:	3710      	adds	r7, #16
 800501c:	46bd      	mov	sp, r7
 800501e:	bd80      	pop	{r7, pc}

08005020 <HAL_DMA_Abort_IT>:
 8005020:	b480      	push	{r7}
 8005022:	b083      	sub	sp, #12
 8005024:	af00      	add	r7, sp, #0
 8005026:	6078      	str	r0, [r7, #4]
 8005028:	687b      	ldr	r3, [r7, #4]
 800502a:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800502e:	b2db      	uxtb	r3, r3
 8005030:	2b02      	cmp	r3, #2
 8005032:	d004      	beq.n	800503e <HAL_DMA_Abort_IT+0x1e>
 8005034:	687b      	ldr	r3, [r7, #4]
 8005036:	2280      	movs	r2, #128	; 0x80
 8005038:	655a      	str	r2, [r3, #84]	; 0x54
 800503a:	2301      	movs	r3, #1
 800503c:	e00c      	b.n	8005058 <HAL_DMA_Abort_IT+0x38>
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	2205      	movs	r2, #5
 8005042:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005046:	687b      	ldr	r3, [r7, #4]
 8005048:	681b      	ldr	r3, [r3, #0]
 800504a:	681a      	ldr	r2, [r3, #0]
 800504c:	687b      	ldr	r3, [r7, #4]
 800504e:	681b      	ldr	r3, [r3, #0]
 8005050:	f022 0201 	bic.w	r2, r2, #1
 8005054:	601a      	str	r2, [r3, #0]
 8005056:	2300      	movs	r3, #0
 8005058:	4618      	mov	r0, r3
 800505a:	370c      	adds	r7, #12
 800505c:	46bd      	mov	sp, r7
 800505e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005062:	4770      	bx	lr

08005064 <HAL_DMA_IRQHandler>:
 8005064:	b580      	push	{r7, lr}
 8005066:	b086      	sub	sp, #24
 8005068:	af00      	add	r7, sp, #0
 800506a:	6078      	str	r0, [r7, #4]
 800506c:	2300      	movs	r3, #0
 800506e:	60bb      	str	r3, [r7, #8]
 8005070:	4b8e      	ldr	r3, [pc, #568]	; (80052ac <HAL_DMA_IRQHandler+0x248>)
 8005072:	681b      	ldr	r3, [r3, #0]
 8005074:	4a8e      	ldr	r2, [pc, #568]	; (80052b0 <HAL_DMA_IRQHandler+0x24c>)
 8005076:	fba2 2303 	umull	r2, r3, r2, r3
 800507a:	0a9b      	lsrs	r3, r3, #10
 800507c:	617b      	str	r3, [r7, #20]
 800507e:	687b      	ldr	r3, [r7, #4]
 8005080:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005082:	613b      	str	r3, [r7, #16]
 8005084:	693b      	ldr	r3, [r7, #16]
 8005086:	681b      	ldr	r3, [r3, #0]
 8005088:	60fb      	str	r3, [r7, #12]
 800508a:	687b      	ldr	r3, [r7, #4]
 800508c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800508e:	2208      	movs	r2, #8
 8005090:	409a      	lsls	r2, r3
 8005092:	68fb      	ldr	r3, [r7, #12]
 8005094:	4013      	ands	r3, r2
 8005096:	2b00      	cmp	r3, #0
 8005098:	d01a      	beq.n	80050d0 <HAL_DMA_IRQHandler+0x6c>
 800509a:	687b      	ldr	r3, [r7, #4]
 800509c:	681b      	ldr	r3, [r3, #0]
 800509e:	681b      	ldr	r3, [r3, #0]
 80050a0:	f003 0304 	and.w	r3, r3, #4
 80050a4:	2b00      	cmp	r3, #0
 80050a6:	d013      	beq.n	80050d0 <HAL_DMA_IRQHandler+0x6c>
 80050a8:	687b      	ldr	r3, [r7, #4]
 80050aa:	681b      	ldr	r3, [r3, #0]
 80050ac:	681a      	ldr	r2, [r3, #0]
 80050ae:	687b      	ldr	r3, [r7, #4]
 80050b0:	681b      	ldr	r3, [r3, #0]
 80050b2:	f022 0204 	bic.w	r2, r2, #4
 80050b6:	601a      	str	r2, [r3, #0]
 80050b8:	687b      	ldr	r3, [r7, #4]
 80050ba:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80050bc:	2208      	movs	r2, #8
 80050be:	409a      	lsls	r2, r3
 80050c0:	693b      	ldr	r3, [r7, #16]
 80050c2:	609a      	str	r2, [r3, #8]
 80050c4:	687b      	ldr	r3, [r7, #4]
 80050c6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80050c8:	f043 0201 	orr.w	r2, r3, #1
 80050cc:	687b      	ldr	r3, [r7, #4]
 80050ce:	655a      	str	r2, [r3, #84]	; 0x54
 80050d0:	687b      	ldr	r3, [r7, #4]
 80050d2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80050d4:	2201      	movs	r2, #1
 80050d6:	409a      	lsls	r2, r3
 80050d8:	68fb      	ldr	r3, [r7, #12]
 80050da:	4013      	ands	r3, r2
 80050dc:	2b00      	cmp	r3, #0
 80050de:	d012      	beq.n	8005106 <HAL_DMA_IRQHandler+0xa2>
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	681b      	ldr	r3, [r3, #0]
 80050e4:	695b      	ldr	r3, [r3, #20]
 80050e6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80050ea:	2b00      	cmp	r3, #0
 80050ec:	d00b      	beq.n	8005106 <HAL_DMA_IRQHandler+0xa2>
 80050ee:	687b      	ldr	r3, [r7, #4]
 80050f0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80050f2:	2201      	movs	r2, #1
 80050f4:	409a      	lsls	r2, r3
 80050f6:	693b      	ldr	r3, [r7, #16]
 80050f8:	609a      	str	r2, [r3, #8]
 80050fa:	687b      	ldr	r3, [r7, #4]
 80050fc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80050fe:	f043 0202 	orr.w	r2, r3, #2
 8005102:	687b      	ldr	r3, [r7, #4]
 8005104:	655a      	str	r2, [r3, #84]	; 0x54
 8005106:	687b      	ldr	r3, [r7, #4]
 8005108:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800510a:	2204      	movs	r2, #4
 800510c:	409a      	lsls	r2, r3
 800510e:	68fb      	ldr	r3, [r7, #12]
 8005110:	4013      	ands	r3, r2
 8005112:	2b00      	cmp	r3, #0
 8005114:	d012      	beq.n	800513c <HAL_DMA_IRQHandler+0xd8>
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	681b      	ldr	r3, [r3, #0]
 800511a:	681b      	ldr	r3, [r3, #0]
 800511c:	f003 0302 	and.w	r3, r3, #2
 8005120:	2b00      	cmp	r3, #0
 8005122:	d00b      	beq.n	800513c <HAL_DMA_IRQHandler+0xd8>
 8005124:	687b      	ldr	r3, [r7, #4]
 8005126:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005128:	2204      	movs	r2, #4
 800512a:	409a      	lsls	r2, r3
 800512c:	693b      	ldr	r3, [r7, #16]
 800512e:	609a      	str	r2, [r3, #8]
 8005130:	687b      	ldr	r3, [r7, #4]
 8005132:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005134:	f043 0204 	orr.w	r2, r3, #4
 8005138:	687b      	ldr	r3, [r7, #4]
 800513a:	655a      	str	r2, [r3, #84]	; 0x54
 800513c:	687b      	ldr	r3, [r7, #4]
 800513e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005140:	2210      	movs	r2, #16
 8005142:	409a      	lsls	r2, r3
 8005144:	68fb      	ldr	r3, [r7, #12]
 8005146:	4013      	ands	r3, r2
 8005148:	2b00      	cmp	r3, #0
 800514a:	d043      	beq.n	80051d4 <HAL_DMA_IRQHandler+0x170>
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	681b      	ldr	r3, [r3, #0]
 8005150:	681b      	ldr	r3, [r3, #0]
 8005152:	f003 0308 	and.w	r3, r3, #8
 8005156:	2b00      	cmp	r3, #0
 8005158:	d03c      	beq.n	80051d4 <HAL_DMA_IRQHandler+0x170>
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800515e:	2210      	movs	r2, #16
 8005160:	409a      	lsls	r2, r3
 8005162:	693b      	ldr	r3, [r7, #16]
 8005164:	609a      	str	r2, [r3, #8]
 8005166:	687b      	ldr	r3, [r7, #4]
 8005168:	681b      	ldr	r3, [r3, #0]
 800516a:	681b      	ldr	r3, [r3, #0]
 800516c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005170:	2b00      	cmp	r3, #0
 8005172:	d018      	beq.n	80051a6 <HAL_DMA_IRQHandler+0x142>
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	681b      	ldr	r3, [r3, #0]
 8005178:	681b      	ldr	r3, [r3, #0]
 800517a:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800517e:	2b00      	cmp	r3, #0
 8005180:	d108      	bne.n	8005194 <HAL_DMA_IRQHandler+0x130>
 8005182:	687b      	ldr	r3, [r7, #4]
 8005184:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005186:	2b00      	cmp	r3, #0
 8005188:	d024      	beq.n	80051d4 <HAL_DMA_IRQHandler+0x170>
 800518a:	687b      	ldr	r3, [r7, #4]
 800518c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800518e:	6878      	ldr	r0, [r7, #4]
 8005190:	4798      	blx	r3
 8005192:	e01f      	b.n	80051d4 <HAL_DMA_IRQHandler+0x170>
 8005194:	687b      	ldr	r3, [r7, #4]
 8005196:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005198:	2b00      	cmp	r3, #0
 800519a:	d01b      	beq.n	80051d4 <HAL_DMA_IRQHandler+0x170>
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80051a0:	6878      	ldr	r0, [r7, #4]
 80051a2:	4798      	blx	r3
 80051a4:	e016      	b.n	80051d4 <HAL_DMA_IRQHandler+0x170>
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	681b      	ldr	r3, [r3, #0]
 80051aa:	681b      	ldr	r3, [r3, #0]
 80051ac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80051b0:	2b00      	cmp	r3, #0
 80051b2:	d107      	bne.n	80051c4 <HAL_DMA_IRQHandler+0x160>
 80051b4:	687b      	ldr	r3, [r7, #4]
 80051b6:	681b      	ldr	r3, [r3, #0]
 80051b8:	681a      	ldr	r2, [r3, #0]
 80051ba:	687b      	ldr	r3, [r7, #4]
 80051bc:	681b      	ldr	r3, [r3, #0]
 80051be:	f022 0208 	bic.w	r2, r2, #8
 80051c2:	601a      	str	r2, [r3, #0]
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80051c8:	2b00      	cmp	r3, #0
 80051ca:	d003      	beq.n	80051d4 <HAL_DMA_IRQHandler+0x170>
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80051d0:	6878      	ldr	r0, [r7, #4]
 80051d2:	4798      	blx	r3
 80051d4:	687b      	ldr	r3, [r7, #4]
 80051d6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80051d8:	2220      	movs	r2, #32
 80051da:	409a      	lsls	r2, r3
 80051dc:	68fb      	ldr	r3, [r7, #12]
 80051de:	4013      	ands	r3, r2
 80051e0:	2b00      	cmp	r3, #0
 80051e2:	f000 808f 	beq.w	8005304 <HAL_DMA_IRQHandler+0x2a0>
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	681b      	ldr	r3, [r3, #0]
 80051ea:	681b      	ldr	r3, [r3, #0]
 80051ec:	f003 0310 	and.w	r3, r3, #16
 80051f0:	2b00      	cmp	r3, #0
 80051f2:	f000 8087 	beq.w	8005304 <HAL_DMA_IRQHandler+0x2a0>
 80051f6:	687b      	ldr	r3, [r7, #4]
 80051f8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80051fa:	2220      	movs	r2, #32
 80051fc:	409a      	lsls	r2, r3
 80051fe:	693b      	ldr	r3, [r7, #16]
 8005200:	609a      	str	r2, [r3, #8]
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8005208:	b2db      	uxtb	r3, r3
 800520a:	2b05      	cmp	r3, #5
 800520c:	d136      	bne.n	800527c <HAL_DMA_IRQHandler+0x218>
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	681b      	ldr	r3, [r3, #0]
 8005212:	681a      	ldr	r2, [r3, #0]
 8005214:	687b      	ldr	r3, [r7, #4]
 8005216:	681b      	ldr	r3, [r3, #0]
 8005218:	f022 0216 	bic.w	r2, r2, #22
 800521c:	601a      	str	r2, [r3, #0]
 800521e:	687b      	ldr	r3, [r7, #4]
 8005220:	681b      	ldr	r3, [r3, #0]
 8005222:	695a      	ldr	r2, [r3, #20]
 8005224:	687b      	ldr	r3, [r7, #4]
 8005226:	681b      	ldr	r3, [r3, #0]
 8005228:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800522c:	615a      	str	r2, [r3, #20]
 800522e:	687b      	ldr	r3, [r7, #4]
 8005230:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005232:	2b00      	cmp	r3, #0
 8005234:	d103      	bne.n	800523e <HAL_DMA_IRQHandler+0x1da>
 8005236:	687b      	ldr	r3, [r7, #4]
 8005238:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800523a:	2b00      	cmp	r3, #0
 800523c:	d007      	beq.n	800524e <HAL_DMA_IRQHandler+0x1ea>
 800523e:	687b      	ldr	r3, [r7, #4]
 8005240:	681b      	ldr	r3, [r3, #0]
 8005242:	681a      	ldr	r2, [r3, #0]
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	681b      	ldr	r3, [r3, #0]
 8005248:	f022 0208 	bic.w	r2, r2, #8
 800524c:	601a      	str	r2, [r3, #0]
 800524e:	687b      	ldr	r3, [r7, #4]
 8005250:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005252:	223f      	movs	r2, #63	; 0x3f
 8005254:	409a      	lsls	r2, r3
 8005256:	693b      	ldr	r3, [r7, #16]
 8005258:	609a      	str	r2, [r3, #8]
 800525a:	687b      	ldr	r3, [r7, #4]
 800525c:	2201      	movs	r2, #1
 800525e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005262:	687b      	ldr	r3, [r7, #4]
 8005264:	2200      	movs	r2, #0
 8005266:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800526a:	687b      	ldr	r3, [r7, #4]
 800526c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800526e:	2b00      	cmp	r3, #0
 8005270:	d07e      	beq.n	8005370 <HAL_DMA_IRQHandler+0x30c>
 8005272:	687b      	ldr	r3, [r7, #4]
 8005274:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005276:	6878      	ldr	r0, [r7, #4]
 8005278:	4798      	blx	r3
 800527a:	e079      	b.n	8005370 <HAL_DMA_IRQHandler+0x30c>
 800527c:	687b      	ldr	r3, [r7, #4]
 800527e:	681b      	ldr	r3, [r3, #0]
 8005280:	681b      	ldr	r3, [r3, #0]
 8005282:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005286:	2b00      	cmp	r3, #0
 8005288:	d01d      	beq.n	80052c6 <HAL_DMA_IRQHandler+0x262>
 800528a:	687b      	ldr	r3, [r7, #4]
 800528c:	681b      	ldr	r3, [r3, #0]
 800528e:	681b      	ldr	r3, [r3, #0]
 8005290:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8005294:	2b00      	cmp	r3, #0
 8005296:	d10d      	bne.n	80052b4 <HAL_DMA_IRQHandler+0x250>
 8005298:	687b      	ldr	r3, [r7, #4]
 800529a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800529c:	2b00      	cmp	r3, #0
 800529e:	d031      	beq.n	8005304 <HAL_DMA_IRQHandler+0x2a0>
 80052a0:	687b      	ldr	r3, [r7, #4]
 80052a2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80052a4:	6878      	ldr	r0, [r7, #4]
 80052a6:	4798      	blx	r3
 80052a8:	e02c      	b.n	8005304 <HAL_DMA_IRQHandler+0x2a0>
 80052aa:	bf00      	nop
 80052ac:	20000138 	.word	0x20000138
 80052b0:	1b4e81b5 	.word	0x1b4e81b5
 80052b4:	687b      	ldr	r3, [r7, #4]
 80052b6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80052b8:	2b00      	cmp	r3, #0
 80052ba:	d023      	beq.n	8005304 <HAL_DMA_IRQHandler+0x2a0>
 80052bc:	687b      	ldr	r3, [r7, #4]
 80052be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80052c0:	6878      	ldr	r0, [r7, #4]
 80052c2:	4798      	blx	r3
 80052c4:	e01e      	b.n	8005304 <HAL_DMA_IRQHandler+0x2a0>
 80052c6:	687b      	ldr	r3, [r7, #4]
 80052c8:	681b      	ldr	r3, [r3, #0]
 80052ca:	681b      	ldr	r3, [r3, #0]
 80052cc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80052d0:	2b00      	cmp	r3, #0
 80052d2:	d10f      	bne.n	80052f4 <HAL_DMA_IRQHandler+0x290>
 80052d4:	687b      	ldr	r3, [r7, #4]
 80052d6:	681b      	ldr	r3, [r3, #0]
 80052d8:	681a      	ldr	r2, [r3, #0]
 80052da:	687b      	ldr	r3, [r7, #4]
 80052dc:	681b      	ldr	r3, [r3, #0]
 80052de:	f022 0210 	bic.w	r2, r2, #16
 80052e2:	601a      	str	r2, [r3, #0]
 80052e4:	687b      	ldr	r3, [r7, #4]
 80052e6:	2201      	movs	r2, #1
 80052e8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80052ec:	687b      	ldr	r3, [r7, #4]
 80052ee:	2200      	movs	r2, #0
 80052f0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80052f4:	687b      	ldr	r3, [r7, #4]
 80052f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80052f8:	2b00      	cmp	r3, #0
 80052fa:	d003      	beq.n	8005304 <HAL_DMA_IRQHandler+0x2a0>
 80052fc:	687b      	ldr	r3, [r7, #4]
 80052fe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005300:	6878      	ldr	r0, [r7, #4]
 8005302:	4798      	blx	r3
 8005304:	687b      	ldr	r3, [r7, #4]
 8005306:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005308:	2b00      	cmp	r3, #0
 800530a:	d032      	beq.n	8005372 <HAL_DMA_IRQHandler+0x30e>
 800530c:	687b      	ldr	r3, [r7, #4]
 800530e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005310:	f003 0301 	and.w	r3, r3, #1
 8005314:	2b00      	cmp	r3, #0
 8005316:	d022      	beq.n	800535e <HAL_DMA_IRQHandler+0x2fa>
 8005318:	687b      	ldr	r3, [r7, #4]
 800531a:	2205      	movs	r2, #5
 800531c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005320:	687b      	ldr	r3, [r7, #4]
 8005322:	681b      	ldr	r3, [r3, #0]
 8005324:	681a      	ldr	r2, [r3, #0]
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	681b      	ldr	r3, [r3, #0]
 800532a:	f022 0201 	bic.w	r2, r2, #1
 800532e:	601a      	str	r2, [r3, #0]
 8005330:	68bb      	ldr	r3, [r7, #8]
 8005332:	3301      	adds	r3, #1
 8005334:	60bb      	str	r3, [r7, #8]
 8005336:	697a      	ldr	r2, [r7, #20]
 8005338:	429a      	cmp	r2, r3
 800533a:	d307      	bcc.n	800534c <HAL_DMA_IRQHandler+0x2e8>
 800533c:	687b      	ldr	r3, [r7, #4]
 800533e:	681b      	ldr	r3, [r3, #0]
 8005340:	681b      	ldr	r3, [r3, #0]
 8005342:	f003 0301 	and.w	r3, r3, #1
 8005346:	2b00      	cmp	r3, #0
 8005348:	d1f2      	bne.n	8005330 <HAL_DMA_IRQHandler+0x2cc>
 800534a:	e000      	b.n	800534e <HAL_DMA_IRQHandler+0x2ea>
 800534c:	bf00      	nop
 800534e:	687b      	ldr	r3, [r7, #4]
 8005350:	2201      	movs	r2, #1
 8005352:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005356:	687b      	ldr	r3, [r7, #4]
 8005358:	2200      	movs	r2, #0
 800535a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800535e:	687b      	ldr	r3, [r7, #4]
 8005360:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005362:	2b00      	cmp	r3, #0
 8005364:	d005      	beq.n	8005372 <HAL_DMA_IRQHandler+0x30e>
 8005366:	687b      	ldr	r3, [r7, #4]
 8005368:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800536a:	6878      	ldr	r0, [r7, #4]
 800536c:	4798      	blx	r3
 800536e:	e000      	b.n	8005372 <HAL_DMA_IRQHandler+0x30e>
 8005370:	bf00      	nop
 8005372:	3718      	adds	r7, #24
 8005374:	46bd      	mov	sp, r7
 8005376:	bd80      	pop	{r7, pc}

08005378 <HAL_DMA_GetState>:
 8005378:	b480      	push	{r7}
 800537a:	b083      	sub	sp, #12
 800537c:	af00      	add	r7, sp, #0
 800537e:	6078      	str	r0, [r7, #4]
 8005380:	687b      	ldr	r3, [r7, #4]
 8005382:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8005386:	b2db      	uxtb	r3, r3
 8005388:	4618      	mov	r0, r3
 800538a:	370c      	adds	r7, #12
 800538c:	46bd      	mov	sp, r7
 800538e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005392:	4770      	bx	lr

08005394 <DMA_SetConfig>:
 8005394:	b480      	push	{r7}
 8005396:	b085      	sub	sp, #20
 8005398:	af00      	add	r7, sp, #0
 800539a:	60f8      	str	r0, [r7, #12]
 800539c:	60b9      	str	r1, [r7, #8]
 800539e:	607a      	str	r2, [r7, #4]
 80053a0:	603b      	str	r3, [r7, #0]
 80053a2:	68fb      	ldr	r3, [r7, #12]
 80053a4:	681b      	ldr	r3, [r3, #0]
 80053a6:	681a      	ldr	r2, [r3, #0]
 80053a8:	68fb      	ldr	r3, [r7, #12]
 80053aa:	681b      	ldr	r3, [r3, #0]
 80053ac:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80053b0:	601a      	str	r2, [r3, #0]
 80053b2:	68fb      	ldr	r3, [r7, #12]
 80053b4:	681b      	ldr	r3, [r3, #0]
 80053b6:	683a      	ldr	r2, [r7, #0]
 80053b8:	605a      	str	r2, [r3, #4]
 80053ba:	68fb      	ldr	r3, [r7, #12]
 80053bc:	689b      	ldr	r3, [r3, #8]
 80053be:	2b40      	cmp	r3, #64	; 0x40
 80053c0:	d108      	bne.n	80053d4 <DMA_SetConfig+0x40>
 80053c2:	68fb      	ldr	r3, [r7, #12]
 80053c4:	681b      	ldr	r3, [r3, #0]
 80053c6:	687a      	ldr	r2, [r7, #4]
 80053c8:	609a      	str	r2, [r3, #8]
 80053ca:	68fb      	ldr	r3, [r7, #12]
 80053cc:	681b      	ldr	r3, [r3, #0]
 80053ce:	68ba      	ldr	r2, [r7, #8]
 80053d0:	60da      	str	r2, [r3, #12]
 80053d2:	e007      	b.n	80053e4 <DMA_SetConfig+0x50>
 80053d4:	68fb      	ldr	r3, [r7, #12]
 80053d6:	681b      	ldr	r3, [r3, #0]
 80053d8:	68ba      	ldr	r2, [r7, #8]
 80053da:	609a      	str	r2, [r3, #8]
 80053dc:	68fb      	ldr	r3, [r7, #12]
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	687a      	ldr	r2, [r7, #4]
 80053e2:	60da      	str	r2, [r3, #12]
 80053e4:	bf00      	nop
 80053e6:	3714      	adds	r7, #20
 80053e8:	46bd      	mov	sp, r7
 80053ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053ee:	4770      	bx	lr

080053f0 <DMA_CalcBaseAndBitshift>:
 80053f0:	b480      	push	{r7}
 80053f2:	b085      	sub	sp, #20
 80053f4:	af00      	add	r7, sp, #0
 80053f6:	6078      	str	r0, [r7, #4]
 80053f8:	687b      	ldr	r3, [r7, #4]
 80053fa:	681b      	ldr	r3, [r3, #0]
 80053fc:	b2db      	uxtb	r3, r3
 80053fe:	3b10      	subs	r3, #16
 8005400:	4a14      	ldr	r2, [pc, #80]	; (8005454 <DMA_CalcBaseAndBitshift+0x64>)
 8005402:	fba2 2303 	umull	r2, r3, r2, r3
 8005406:	091b      	lsrs	r3, r3, #4
 8005408:	60fb      	str	r3, [r7, #12]
 800540a:	4a13      	ldr	r2, [pc, #76]	; (8005458 <DMA_CalcBaseAndBitshift+0x68>)
 800540c:	68fb      	ldr	r3, [r7, #12]
 800540e:	4413      	add	r3, r2
 8005410:	781b      	ldrb	r3, [r3, #0]
 8005412:	461a      	mov	r2, r3
 8005414:	687b      	ldr	r3, [r7, #4]
 8005416:	65da      	str	r2, [r3, #92]	; 0x5c
 8005418:	68fb      	ldr	r3, [r7, #12]
 800541a:	2b03      	cmp	r3, #3
 800541c:	d909      	bls.n	8005432 <DMA_CalcBaseAndBitshift+0x42>
 800541e:	687b      	ldr	r3, [r7, #4]
 8005420:	681b      	ldr	r3, [r3, #0]
 8005422:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8005426:	f023 0303 	bic.w	r3, r3, #3
 800542a:	1d1a      	adds	r2, r3, #4
 800542c:	687b      	ldr	r3, [r7, #4]
 800542e:	659a      	str	r2, [r3, #88]	; 0x58
 8005430:	e007      	b.n	8005442 <DMA_CalcBaseAndBitshift+0x52>
 8005432:	687b      	ldr	r3, [r7, #4]
 8005434:	681b      	ldr	r3, [r3, #0]
 8005436:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 800543a:	f023 0303 	bic.w	r3, r3, #3
 800543e:	687a      	ldr	r2, [r7, #4]
 8005440:	6593      	str	r3, [r2, #88]	; 0x58
 8005442:	687b      	ldr	r3, [r7, #4]
 8005444:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005446:	4618      	mov	r0, r3
 8005448:	3714      	adds	r7, #20
 800544a:	46bd      	mov	sp, r7
 800544c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005450:	4770      	bx	lr
 8005452:	bf00      	nop
 8005454:	aaaaaaab 	.word	0xaaaaaaab
 8005458:	0800bc78 	.word	0x0800bc78

0800545c <DMA_CheckFifoParam>:
 800545c:	b480      	push	{r7}
 800545e:	b085      	sub	sp, #20
 8005460:	af00      	add	r7, sp, #0
 8005462:	6078      	str	r0, [r7, #4]
 8005464:	2300      	movs	r3, #0
 8005466:	73fb      	strb	r3, [r7, #15]
 8005468:	687b      	ldr	r3, [r7, #4]
 800546a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800546c:	60bb      	str	r3, [r7, #8]
 800546e:	687b      	ldr	r3, [r7, #4]
 8005470:	699b      	ldr	r3, [r3, #24]
 8005472:	2b00      	cmp	r3, #0
 8005474:	d11f      	bne.n	80054b6 <DMA_CheckFifoParam+0x5a>
 8005476:	68bb      	ldr	r3, [r7, #8]
 8005478:	2b03      	cmp	r3, #3
 800547a:	d856      	bhi.n	800552a <DMA_CheckFifoParam+0xce>
 800547c:	a201      	add	r2, pc, #4	; (adr r2, 8005484 <DMA_CheckFifoParam+0x28>)
 800547e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005482:	bf00      	nop
 8005484:	08005495 	.word	0x08005495
 8005488:	080054a7 	.word	0x080054a7
 800548c:	08005495 	.word	0x08005495
 8005490:	0800552b 	.word	0x0800552b
 8005494:	687b      	ldr	r3, [r7, #4]
 8005496:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005498:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800549c:	2b00      	cmp	r3, #0
 800549e:	d046      	beq.n	800552e <DMA_CheckFifoParam+0xd2>
 80054a0:	2301      	movs	r3, #1
 80054a2:	73fb      	strb	r3, [r7, #15]
 80054a4:	e043      	b.n	800552e <DMA_CheckFifoParam+0xd2>
 80054a6:	687b      	ldr	r3, [r7, #4]
 80054a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80054aa:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80054ae:	d140      	bne.n	8005532 <DMA_CheckFifoParam+0xd6>
 80054b0:	2301      	movs	r3, #1
 80054b2:	73fb      	strb	r3, [r7, #15]
 80054b4:	e03d      	b.n	8005532 <DMA_CheckFifoParam+0xd6>
 80054b6:	687b      	ldr	r3, [r7, #4]
 80054b8:	699b      	ldr	r3, [r3, #24]
 80054ba:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80054be:	d121      	bne.n	8005504 <DMA_CheckFifoParam+0xa8>
 80054c0:	68bb      	ldr	r3, [r7, #8]
 80054c2:	2b03      	cmp	r3, #3
 80054c4:	d837      	bhi.n	8005536 <DMA_CheckFifoParam+0xda>
 80054c6:	a201      	add	r2, pc, #4	; (adr r2, 80054cc <DMA_CheckFifoParam+0x70>)
 80054c8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80054cc:	080054dd 	.word	0x080054dd
 80054d0:	080054e3 	.word	0x080054e3
 80054d4:	080054dd 	.word	0x080054dd
 80054d8:	080054f5 	.word	0x080054f5
 80054dc:	2301      	movs	r3, #1
 80054de:	73fb      	strb	r3, [r7, #15]
 80054e0:	e030      	b.n	8005544 <DMA_CheckFifoParam+0xe8>
 80054e2:	687b      	ldr	r3, [r7, #4]
 80054e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80054e6:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80054ea:	2b00      	cmp	r3, #0
 80054ec:	d025      	beq.n	800553a <DMA_CheckFifoParam+0xde>
 80054ee:	2301      	movs	r3, #1
 80054f0:	73fb      	strb	r3, [r7, #15]
 80054f2:	e022      	b.n	800553a <DMA_CheckFifoParam+0xde>
 80054f4:	687b      	ldr	r3, [r7, #4]
 80054f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80054f8:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80054fc:	d11f      	bne.n	800553e <DMA_CheckFifoParam+0xe2>
 80054fe:	2301      	movs	r3, #1
 8005500:	73fb      	strb	r3, [r7, #15]
 8005502:	e01c      	b.n	800553e <DMA_CheckFifoParam+0xe2>
 8005504:	68bb      	ldr	r3, [r7, #8]
 8005506:	2b02      	cmp	r3, #2
 8005508:	d903      	bls.n	8005512 <DMA_CheckFifoParam+0xb6>
 800550a:	68bb      	ldr	r3, [r7, #8]
 800550c:	2b03      	cmp	r3, #3
 800550e:	d003      	beq.n	8005518 <DMA_CheckFifoParam+0xbc>
 8005510:	e018      	b.n	8005544 <DMA_CheckFifoParam+0xe8>
 8005512:	2301      	movs	r3, #1
 8005514:	73fb      	strb	r3, [r7, #15]
 8005516:	e015      	b.n	8005544 <DMA_CheckFifoParam+0xe8>
 8005518:	687b      	ldr	r3, [r7, #4]
 800551a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800551c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005520:	2b00      	cmp	r3, #0
 8005522:	d00e      	beq.n	8005542 <DMA_CheckFifoParam+0xe6>
 8005524:	2301      	movs	r3, #1
 8005526:	73fb      	strb	r3, [r7, #15]
 8005528:	e00b      	b.n	8005542 <DMA_CheckFifoParam+0xe6>
 800552a:	bf00      	nop
 800552c:	e00a      	b.n	8005544 <DMA_CheckFifoParam+0xe8>
 800552e:	bf00      	nop
 8005530:	e008      	b.n	8005544 <DMA_CheckFifoParam+0xe8>
 8005532:	bf00      	nop
 8005534:	e006      	b.n	8005544 <DMA_CheckFifoParam+0xe8>
 8005536:	bf00      	nop
 8005538:	e004      	b.n	8005544 <DMA_CheckFifoParam+0xe8>
 800553a:	bf00      	nop
 800553c:	e002      	b.n	8005544 <DMA_CheckFifoParam+0xe8>
 800553e:	bf00      	nop
 8005540:	e000      	b.n	8005544 <DMA_CheckFifoParam+0xe8>
 8005542:	bf00      	nop
 8005544:	7bfb      	ldrb	r3, [r7, #15]
 8005546:	4618      	mov	r0, r3
 8005548:	3714      	adds	r7, #20
 800554a:	46bd      	mov	sp, r7
 800554c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005550:	4770      	bx	lr
 8005552:	bf00      	nop

08005554 <HAL_GPIO_Init>:
 8005554:	b480      	push	{r7}
 8005556:	b089      	sub	sp, #36	; 0x24
 8005558:	af00      	add	r7, sp, #0
 800555a:	6078      	str	r0, [r7, #4]
 800555c:	6039      	str	r1, [r7, #0]
 800555e:	2300      	movs	r3, #0
 8005560:	617b      	str	r3, [r7, #20]
 8005562:	2300      	movs	r3, #0
 8005564:	613b      	str	r3, [r7, #16]
 8005566:	2300      	movs	r3, #0
 8005568:	61bb      	str	r3, [r7, #24]
 800556a:	2300      	movs	r3, #0
 800556c:	61fb      	str	r3, [r7, #28]
 800556e:	e159      	b.n	8005824 <HAL_GPIO_Init+0x2d0>
 8005570:	2201      	movs	r2, #1
 8005572:	69fb      	ldr	r3, [r7, #28]
 8005574:	fa02 f303 	lsl.w	r3, r2, r3
 8005578:	617b      	str	r3, [r7, #20]
 800557a:	683b      	ldr	r3, [r7, #0]
 800557c:	681b      	ldr	r3, [r3, #0]
 800557e:	697a      	ldr	r2, [r7, #20]
 8005580:	4013      	ands	r3, r2
 8005582:	613b      	str	r3, [r7, #16]
 8005584:	693a      	ldr	r2, [r7, #16]
 8005586:	697b      	ldr	r3, [r7, #20]
 8005588:	429a      	cmp	r2, r3
 800558a:	f040 8148 	bne.w	800581e <HAL_GPIO_Init+0x2ca>
 800558e:	683b      	ldr	r3, [r7, #0]
 8005590:	685b      	ldr	r3, [r3, #4]
 8005592:	f003 0303 	and.w	r3, r3, #3
 8005596:	2b01      	cmp	r3, #1
 8005598:	d005      	beq.n	80055a6 <HAL_GPIO_Init+0x52>
 800559a:	683b      	ldr	r3, [r7, #0]
 800559c:	685b      	ldr	r3, [r3, #4]
 800559e:	f003 0303 	and.w	r3, r3, #3
 80055a2:	2b02      	cmp	r3, #2
 80055a4:	d130      	bne.n	8005608 <HAL_GPIO_Init+0xb4>
 80055a6:	687b      	ldr	r3, [r7, #4]
 80055a8:	689b      	ldr	r3, [r3, #8]
 80055aa:	61bb      	str	r3, [r7, #24]
 80055ac:	69fb      	ldr	r3, [r7, #28]
 80055ae:	005b      	lsls	r3, r3, #1
 80055b0:	2203      	movs	r2, #3
 80055b2:	fa02 f303 	lsl.w	r3, r2, r3
 80055b6:	43db      	mvns	r3, r3
 80055b8:	69ba      	ldr	r2, [r7, #24]
 80055ba:	4013      	ands	r3, r2
 80055bc:	61bb      	str	r3, [r7, #24]
 80055be:	683b      	ldr	r3, [r7, #0]
 80055c0:	68da      	ldr	r2, [r3, #12]
 80055c2:	69fb      	ldr	r3, [r7, #28]
 80055c4:	005b      	lsls	r3, r3, #1
 80055c6:	fa02 f303 	lsl.w	r3, r2, r3
 80055ca:	69ba      	ldr	r2, [r7, #24]
 80055cc:	4313      	orrs	r3, r2
 80055ce:	61bb      	str	r3, [r7, #24]
 80055d0:	687b      	ldr	r3, [r7, #4]
 80055d2:	69ba      	ldr	r2, [r7, #24]
 80055d4:	609a      	str	r2, [r3, #8]
 80055d6:	687b      	ldr	r3, [r7, #4]
 80055d8:	685b      	ldr	r3, [r3, #4]
 80055da:	61bb      	str	r3, [r7, #24]
 80055dc:	2201      	movs	r2, #1
 80055de:	69fb      	ldr	r3, [r7, #28]
 80055e0:	fa02 f303 	lsl.w	r3, r2, r3
 80055e4:	43db      	mvns	r3, r3
 80055e6:	69ba      	ldr	r2, [r7, #24]
 80055e8:	4013      	ands	r3, r2
 80055ea:	61bb      	str	r3, [r7, #24]
 80055ec:	683b      	ldr	r3, [r7, #0]
 80055ee:	685b      	ldr	r3, [r3, #4]
 80055f0:	091b      	lsrs	r3, r3, #4
 80055f2:	f003 0201 	and.w	r2, r3, #1
 80055f6:	69fb      	ldr	r3, [r7, #28]
 80055f8:	fa02 f303 	lsl.w	r3, r2, r3
 80055fc:	69ba      	ldr	r2, [r7, #24]
 80055fe:	4313      	orrs	r3, r2
 8005600:	61bb      	str	r3, [r7, #24]
 8005602:	687b      	ldr	r3, [r7, #4]
 8005604:	69ba      	ldr	r2, [r7, #24]
 8005606:	605a      	str	r2, [r3, #4]
 8005608:	683b      	ldr	r3, [r7, #0]
 800560a:	685b      	ldr	r3, [r3, #4]
 800560c:	f003 0303 	and.w	r3, r3, #3
 8005610:	2b03      	cmp	r3, #3
 8005612:	d017      	beq.n	8005644 <HAL_GPIO_Init+0xf0>
 8005614:	687b      	ldr	r3, [r7, #4]
 8005616:	68db      	ldr	r3, [r3, #12]
 8005618:	61bb      	str	r3, [r7, #24]
 800561a:	69fb      	ldr	r3, [r7, #28]
 800561c:	005b      	lsls	r3, r3, #1
 800561e:	2203      	movs	r2, #3
 8005620:	fa02 f303 	lsl.w	r3, r2, r3
 8005624:	43db      	mvns	r3, r3
 8005626:	69ba      	ldr	r2, [r7, #24]
 8005628:	4013      	ands	r3, r2
 800562a:	61bb      	str	r3, [r7, #24]
 800562c:	683b      	ldr	r3, [r7, #0]
 800562e:	689a      	ldr	r2, [r3, #8]
 8005630:	69fb      	ldr	r3, [r7, #28]
 8005632:	005b      	lsls	r3, r3, #1
 8005634:	fa02 f303 	lsl.w	r3, r2, r3
 8005638:	69ba      	ldr	r2, [r7, #24]
 800563a:	4313      	orrs	r3, r2
 800563c:	61bb      	str	r3, [r7, #24]
 800563e:	687b      	ldr	r3, [r7, #4]
 8005640:	69ba      	ldr	r2, [r7, #24]
 8005642:	60da      	str	r2, [r3, #12]
 8005644:	683b      	ldr	r3, [r7, #0]
 8005646:	685b      	ldr	r3, [r3, #4]
 8005648:	f003 0303 	and.w	r3, r3, #3
 800564c:	2b02      	cmp	r3, #2
 800564e:	d123      	bne.n	8005698 <HAL_GPIO_Init+0x144>
 8005650:	69fb      	ldr	r3, [r7, #28]
 8005652:	08da      	lsrs	r2, r3, #3
 8005654:	687b      	ldr	r3, [r7, #4]
 8005656:	3208      	adds	r2, #8
 8005658:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800565c:	61bb      	str	r3, [r7, #24]
 800565e:	69fb      	ldr	r3, [r7, #28]
 8005660:	f003 0307 	and.w	r3, r3, #7
 8005664:	009b      	lsls	r3, r3, #2
 8005666:	220f      	movs	r2, #15
 8005668:	fa02 f303 	lsl.w	r3, r2, r3
 800566c:	43db      	mvns	r3, r3
 800566e:	69ba      	ldr	r2, [r7, #24]
 8005670:	4013      	ands	r3, r2
 8005672:	61bb      	str	r3, [r7, #24]
 8005674:	683b      	ldr	r3, [r7, #0]
 8005676:	691a      	ldr	r2, [r3, #16]
 8005678:	69fb      	ldr	r3, [r7, #28]
 800567a:	f003 0307 	and.w	r3, r3, #7
 800567e:	009b      	lsls	r3, r3, #2
 8005680:	fa02 f303 	lsl.w	r3, r2, r3
 8005684:	69ba      	ldr	r2, [r7, #24]
 8005686:	4313      	orrs	r3, r2
 8005688:	61bb      	str	r3, [r7, #24]
 800568a:	69fb      	ldr	r3, [r7, #28]
 800568c:	08da      	lsrs	r2, r3, #3
 800568e:	687b      	ldr	r3, [r7, #4]
 8005690:	3208      	adds	r2, #8
 8005692:	69b9      	ldr	r1, [r7, #24]
 8005694:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8005698:	687b      	ldr	r3, [r7, #4]
 800569a:	681b      	ldr	r3, [r3, #0]
 800569c:	61bb      	str	r3, [r7, #24]
 800569e:	69fb      	ldr	r3, [r7, #28]
 80056a0:	005b      	lsls	r3, r3, #1
 80056a2:	2203      	movs	r2, #3
 80056a4:	fa02 f303 	lsl.w	r3, r2, r3
 80056a8:	43db      	mvns	r3, r3
 80056aa:	69ba      	ldr	r2, [r7, #24]
 80056ac:	4013      	ands	r3, r2
 80056ae:	61bb      	str	r3, [r7, #24]
 80056b0:	683b      	ldr	r3, [r7, #0]
 80056b2:	685b      	ldr	r3, [r3, #4]
 80056b4:	f003 0203 	and.w	r2, r3, #3
 80056b8:	69fb      	ldr	r3, [r7, #28]
 80056ba:	005b      	lsls	r3, r3, #1
 80056bc:	fa02 f303 	lsl.w	r3, r2, r3
 80056c0:	69ba      	ldr	r2, [r7, #24]
 80056c2:	4313      	orrs	r3, r2
 80056c4:	61bb      	str	r3, [r7, #24]
 80056c6:	687b      	ldr	r3, [r7, #4]
 80056c8:	69ba      	ldr	r2, [r7, #24]
 80056ca:	601a      	str	r2, [r3, #0]
 80056cc:	683b      	ldr	r3, [r7, #0]
 80056ce:	685b      	ldr	r3, [r3, #4]
 80056d0:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80056d4:	2b00      	cmp	r3, #0
 80056d6:	f000 80a2 	beq.w	800581e <HAL_GPIO_Init+0x2ca>
 80056da:	2300      	movs	r3, #0
 80056dc:	60fb      	str	r3, [r7, #12]
 80056de:	4b57      	ldr	r3, [pc, #348]	; (800583c <HAL_GPIO_Init+0x2e8>)
 80056e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80056e2:	4a56      	ldr	r2, [pc, #344]	; (800583c <HAL_GPIO_Init+0x2e8>)
 80056e4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80056e8:	6453      	str	r3, [r2, #68]	; 0x44
 80056ea:	4b54      	ldr	r3, [pc, #336]	; (800583c <HAL_GPIO_Init+0x2e8>)
 80056ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80056ee:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80056f2:	60fb      	str	r3, [r7, #12]
 80056f4:	68fb      	ldr	r3, [r7, #12]
 80056f6:	4a52      	ldr	r2, [pc, #328]	; (8005840 <HAL_GPIO_Init+0x2ec>)
 80056f8:	69fb      	ldr	r3, [r7, #28]
 80056fa:	089b      	lsrs	r3, r3, #2
 80056fc:	3302      	adds	r3, #2
 80056fe:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005702:	61bb      	str	r3, [r7, #24]
 8005704:	69fb      	ldr	r3, [r7, #28]
 8005706:	f003 0303 	and.w	r3, r3, #3
 800570a:	009b      	lsls	r3, r3, #2
 800570c:	220f      	movs	r2, #15
 800570e:	fa02 f303 	lsl.w	r3, r2, r3
 8005712:	43db      	mvns	r3, r3
 8005714:	69ba      	ldr	r2, [r7, #24]
 8005716:	4013      	ands	r3, r2
 8005718:	61bb      	str	r3, [r7, #24]
 800571a:	687b      	ldr	r3, [r7, #4]
 800571c:	4a49      	ldr	r2, [pc, #292]	; (8005844 <HAL_GPIO_Init+0x2f0>)
 800571e:	4293      	cmp	r3, r2
 8005720:	d019      	beq.n	8005756 <HAL_GPIO_Init+0x202>
 8005722:	687b      	ldr	r3, [r7, #4]
 8005724:	4a48      	ldr	r2, [pc, #288]	; (8005848 <HAL_GPIO_Init+0x2f4>)
 8005726:	4293      	cmp	r3, r2
 8005728:	d013      	beq.n	8005752 <HAL_GPIO_Init+0x1fe>
 800572a:	687b      	ldr	r3, [r7, #4]
 800572c:	4a47      	ldr	r2, [pc, #284]	; (800584c <HAL_GPIO_Init+0x2f8>)
 800572e:	4293      	cmp	r3, r2
 8005730:	d00d      	beq.n	800574e <HAL_GPIO_Init+0x1fa>
 8005732:	687b      	ldr	r3, [r7, #4]
 8005734:	4a46      	ldr	r2, [pc, #280]	; (8005850 <HAL_GPIO_Init+0x2fc>)
 8005736:	4293      	cmp	r3, r2
 8005738:	d007      	beq.n	800574a <HAL_GPIO_Init+0x1f6>
 800573a:	687b      	ldr	r3, [r7, #4]
 800573c:	4a45      	ldr	r2, [pc, #276]	; (8005854 <HAL_GPIO_Init+0x300>)
 800573e:	4293      	cmp	r3, r2
 8005740:	d101      	bne.n	8005746 <HAL_GPIO_Init+0x1f2>
 8005742:	2304      	movs	r3, #4
 8005744:	e008      	b.n	8005758 <HAL_GPIO_Init+0x204>
 8005746:	2307      	movs	r3, #7
 8005748:	e006      	b.n	8005758 <HAL_GPIO_Init+0x204>
 800574a:	2303      	movs	r3, #3
 800574c:	e004      	b.n	8005758 <HAL_GPIO_Init+0x204>
 800574e:	2302      	movs	r3, #2
 8005750:	e002      	b.n	8005758 <HAL_GPIO_Init+0x204>
 8005752:	2301      	movs	r3, #1
 8005754:	e000      	b.n	8005758 <HAL_GPIO_Init+0x204>
 8005756:	2300      	movs	r3, #0
 8005758:	69fa      	ldr	r2, [r7, #28]
 800575a:	f002 0203 	and.w	r2, r2, #3
 800575e:	0092      	lsls	r2, r2, #2
 8005760:	4093      	lsls	r3, r2
 8005762:	69ba      	ldr	r2, [r7, #24]
 8005764:	4313      	orrs	r3, r2
 8005766:	61bb      	str	r3, [r7, #24]
 8005768:	4935      	ldr	r1, [pc, #212]	; (8005840 <HAL_GPIO_Init+0x2ec>)
 800576a:	69fb      	ldr	r3, [r7, #28]
 800576c:	089b      	lsrs	r3, r3, #2
 800576e:	3302      	adds	r3, #2
 8005770:	69ba      	ldr	r2, [r7, #24]
 8005772:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8005776:	4b38      	ldr	r3, [pc, #224]	; (8005858 <HAL_GPIO_Init+0x304>)
 8005778:	689b      	ldr	r3, [r3, #8]
 800577a:	61bb      	str	r3, [r7, #24]
 800577c:	693b      	ldr	r3, [r7, #16]
 800577e:	43db      	mvns	r3, r3
 8005780:	69ba      	ldr	r2, [r7, #24]
 8005782:	4013      	ands	r3, r2
 8005784:	61bb      	str	r3, [r7, #24]
 8005786:	683b      	ldr	r3, [r7, #0]
 8005788:	685b      	ldr	r3, [r3, #4]
 800578a:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800578e:	2b00      	cmp	r3, #0
 8005790:	d003      	beq.n	800579a <HAL_GPIO_Init+0x246>
 8005792:	69ba      	ldr	r2, [r7, #24]
 8005794:	693b      	ldr	r3, [r7, #16]
 8005796:	4313      	orrs	r3, r2
 8005798:	61bb      	str	r3, [r7, #24]
 800579a:	4a2f      	ldr	r2, [pc, #188]	; (8005858 <HAL_GPIO_Init+0x304>)
 800579c:	69bb      	ldr	r3, [r7, #24]
 800579e:	6093      	str	r3, [r2, #8]
 80057a0:	4b2d      	ldr	r3, [pc, #180]	; (8005858 <HAL_GPIO_Init+0x304>)
 80057a2:	68db      	ldr	r3, [r3, #12]
 80057a4:	61bb      	str	r3, [r7, #24]
 80057a6:	693b      	ldr	r3, [r7, #16]
 80057a8:	43db      	mvns	r3, r3
 80057aa:	69ba      	ldr	r2, [r7, #24]
 80057ac:	4013      	ands	r3, r2
 80057ae:	61bb      	str	r3, [r7, #24]
 80057b0:	683b      	ldr	r3, [r7, #0]
 80057b2:	685b      	ldr	r3, [r3, #4]
 80057b4:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80057b8:	2b00      	cmp	r3, #0
 80057ba:	d003      	beq.n	80057c4 <HAL_GPIO_Init+0x270>
 80057bc:	69ba      	ldr	r2, [r7, #24]
 80057be:	693b      	ldr	r3, [r7, #16]
 80057c0:	4313      	orrs	r3, r2
 80057c2:	61bb      	str	r3, [r7, #24]
 80057c4:	4a24      	ldr	r2, [pc, #144]	; (8005858 <HAL_GPIO_Init+0x304>)
 80057c6:	69bb      	ldr	r3, [r7, #24]
 80057c8:	60d3      	str	r3, [r2, #12]
 80057ca:	4b23      	ldr	r3, [pc, #140]	; (8005858 <HAL_GPIO_Init+0x304>)
 80057cc:	685b      	ldr	r3, [r3, #4]
 80057ce:	61bb      	str	r3, [r7, #24]
 80057d0:	693b      	ldr	r3, [r7, #16]
 80057d2:	43db      	mvns	r3, r3
 80057d4:	69ba      	ldr	r2, [r7, #24]
 80057d6:	4013      	ands	r3, r2
 80057d8:	61bb      	str	r3, [r7, #24]
 80057da:	683b      	ldr	r3, [r7, #0]
 80057dc:	685b      	ldr	r3, [r3, #4]
 80057de:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80057e2:	2b00      	cmp	r3, #0
 80057e4:	d003      	beq.n	80057ee <HAL_GPIO_Init+0x29a>
 80057e6:	69ba      	ldr	r2, [r7, #24]
 80057e8:	693b      	ldr	r3, [r7, #16]
 80057ea:	4313      	orrs	r3, r2
 80057ec:	61bb      	str	r3, [r7, #24]
 80057ee:	4a1a      	ldr	r2, [pc, #104]	; (8005858 <HAL_GPIO_Init+0x304>)
 80057f0:	69bb      	ldr	r3, [r7, #24]
 80057f2:	6053      	str	r3, [r2, #4]
 80057f4:	4b18      	ldr	r3, [pc, #96]	; (8005858 <HAL_GPIO_Init+0x304>)
 80057f6:	681b      	ldr	r3, [r3, #0]
 80057f8:	61bb      	str	r3, [r7, #24]
 80057fa:	693b      	ldr	r3, [r7, #16]
 80057fc:	43db      	mvns	r3, r3
 80057fe:	69ba      	ldr	r2, [r7, #24]
 8005800:	4013      	ands	r3, r2
 8005802:	61bb      	str	r3, [r7, #24]
 8005804:	683b      	ldr	r3, [r7, #0]
 8005806:	685b      	ldr	r3, [r3, #4]
 8005808:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800580c:	2b00      	cmp	r3, #0
 800580e:	d003      	beq.n	8005818 <HAL_GPIO_Init+0x2c4>
 8005810:	69ba      	ldr	r2, [r7, #24]
 8005812:	693b      	ldr	r3, [r7, #16]
 8005814:	4313      	orrs	r3, r2
 8005816:	61bb      	str	r3, [r7, #24]
 8005818:	4a0f      	ldr	r2, [pc, #60]	; (8005858 <HAL_GPIO_Init+0x304>)
 800581a:	69bb      	ldr	r3, [r7, #24]
 800581c:	6013      	str	r3, [r2, #0]
 800581e:	69fb      	ldr	r3, [r7, #28]
 8005820:	3301      	adds	r3, #1
 8005822:	61fb      	str	r3, [r7, #28]
 8005824:	69fb      	ldr	r3, [r7, #28]
 8005826:	2b0f      	cmp	r3, #15
 8005828:	f67f aea2 	bls.w	8005570 <HAL_GPIO_Init+0x1c>
 800582c:	bf00      	nop
 800582e:	bf00      	nop
 8005830:	3724      	adds	r7, #36	; 0x24
 8005832:	46bd      	mov	sp, r7
 8005834:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005838:	4770      	bx	lr
 800583a:	bf00      	nop
 800583c:	40023800 	.word	0x40023800
 8005840:	40013800 	.word	0x40013800
 8005844:	40020000 	.word	0x40020000
 8005848:	40020400 	.word	0x40020400
 800584c:	40020800 	.word	0x40020800
 8005850:	40020c00 	.word	0x40020c00
 8005854:	40021000 	.word	0x40021000
 8005858:	40013c00 	.word	0x40013c00

0800585c <HAL_GPIO_ReadPin>:
 800585c:	b480      	push	{r7}
 800585e:	b085      	sub	sp, #20
 8005860:	af00      	add	r7, sp, #0
 8005862:	6078      	str	r0, [r7, #4]
 8005864:	460b      	mov	r3, r1
 8005866:	807b      	strh	r3, [r7, #2]
 8005868:	687b      	ldr	r3, [r7, #4]
 800586a:	691a      	ldr	r2, [r3, #16]
 800586c:	887b      	ldrh	r3, [r7, #2]
 800586e:	4013      	ands	r3, r2
 8005870:	2b00      	cmp	r3, #0
 8005872:	d002      	beq.n	800587a <HAL_GPIO_ReadPin+0x1e>
 8005874:	2301      	movs	r3, #1
 8005876:	73fb      	strb	r3, [r7, #15]
 8005878:	e001      	b.n	800587e <HAL_GPIO_ReadPin+0x22>
 800587a:	2300      	movs	r3, #0
 800587c:	73fb      	strb	r3, [r7, #15]
 800587e:	7bfb      	ldrb	r3, [r7, #15]
 8005880:	4618      	mov	r0, r3
 8005882:	3714      	adds	r7, #20
 8005884:	46bd      	mov	sp, r7
 8005886:	f85d 7b04 	ldr.w	r7, [sp], #4
 800588a:	4770      	bx	lr

0800588c <HAL_GPIO_WritePin>:
 800588c:	b480      	push	{r7}
 800588e:	b083      	sub	sp, #12
 8005890:	af00      	add	r7, sp, #0
 8005892:	6078      	str	r0, [r7, #4]
 8005894:	460b      	mov	r3, r1
 8005896:	807b      	strh	r3, [r7, #2]
 8005898:	4613      	mov	r3, r2
 800589a:	707b      	strb	r3, [r7, #1]
 800589c:	787b      	ldrb	r3, [r7, #1]
 800589e:	2b00      	cmp	r3, #0
 80058a0:	d003      	beq.n	80058aa <HAL_GPIO_WritePin+0x1e>
 80058a2:	887a      	ldrh	r2, [r7, #2]
 80058a4:	687b      	ldr	r3, [r7, #4]
 80058a6:	619a      	str	r2, [r3, #24]
 80058a8:	e003      	b.n	80058b2 <HAL_GPIO_WritePin+0x26>
 80058aa:	887b      	ldrh	r3, [r7, #2]
 80058ac:	041a      	lsls	r2, r3, #16
 80058ae:	687b      	ldr	r3, [r7, #4]
 80058b0:	619a      	str	r2, [r3, #24]
 80058b2:	bf00      	nop
 80058b4:	370c      	adds	r7, #12
 80058b6:	46bd      	mov	sp, r7
 80058b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058bc:	4770      	bx	lr
	...

080058c0 <HAL_GPIO_EXTI_IRQHandler>:
 80058c0:	b580      	push	{r7, lr}
 80058c2:	b082      	sub	sp, #8
 80058c4:	af00      	add	r7, sp, #0
 80058c6:	4603      	mov	r3, r0
 80058c8:	80fb      	strh	r3, [r7, #6]
 80058ca:	4b08      	ldr	r3, [pc, #32]	; (80058ec <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80058cc:	695a      	ldr	r2, [r3, #20]
 80058ce:	88fb      	ldrh	r3, [r7, #6]
 80058d0:	4013      	ands	r3, r2
 80058d2:	2b00      	cmp	r3, #0
 80058d4:	d006      	beq.n	80058e4 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80058d6:	4a05      	ldr	r2, [pc, #20]	; (80058ec <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80058d8:	88fb      	ldrh	r3, [r7, #6]
 80058da:	6153      	str	r3, [r2, #20]
 80058dc:	88fb      	ldrh	r3, [r7, #6]
 80058de:	4618      	mov	r0, r3
 80058e0:	f7fd ff28 	bl	8003734 <HAL_GPIO_EXTI_Callback>
 80058e4:	bf00      	nop
 80058e6:	3708      	adds	r7, #8
 80058e8:	46bd      	mov	sp, r7
 80058ea:	bd80      	pop	{r7, pc}
 80058ec:	40013c00 	.word	0x40013c00

080058f0 <HAL_I2C_Init>:
 80058f0:	b580      	push	{r7, lr}
 80058f2:	b084      	sub	sp, #16
 80058f4:	af00      	add	r7, sp, #0
 80058f6:	6078      	str	r0, [r7, #4]
 80058f8:	687b      	ldr	r3, [r7, #4]
 80058fa:	2b00      	cmp	r3, #0
 80058fc:	d101      	bne.n	8005902 <HAL_I2C_Init+0x12>
 80058fe:	2301      	movs	r3, #1
 8005900:	e12b      	b.n	8005b5a <HAL_I2C_Init+0x26a>
 8005902:	687b      	ldr	r3, [r7, #4]
 8005904:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005908:	b2db      	uxtb	r3, r3
 800590a:	2b00      	cmp	r3, #0
 800590c:	d106      	bne.n	800591c <HAL_I2C_Init+0x2c>
 800590e:	687b      	ldr	r3, [r7, #4]
 8005910:	2200      	movs	r2, #0
 8005912:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005916:	6878      	ldr	r0, [r7, #4]
 8005918:	f7fe fd70 	bl	80043fc <HAL_I2C_MspInit>
 800591c:	687b      	ldr	r3, [r7, #4]
 800591e:	2224      	movs	r2, #36	; 0x24
 8005920:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005924:	687b      	ldr	r3, [r7, #4]
 8005926:	681b      	ldr	r3, [r3, #0]
 8005928:	681a      	ldr	r2, [r3, #0]
 800592a:	687b      	ldr	r3, [r7, #4]
 800592c:	681b      	ldr	r3, [r3, #0]
 800592e:	f022 0201 	bic.w	r2, r2, #1
 8005932:	601a      	str	r2, [r3, #0]
 8005934:	687b      	ldr	r3, [r7, #4]
 8005936:	681b      	ldr	r3, [r3, #0]
 8005938:	681a      	ldr	r2, [r3, #0]
 800593a:	687b      	ldr	r3, [r7, #4]
 800593c:	681b      	ldr	r3, [r3, #0]
 800593e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005942:	601a      	str	r2, [r3, #0]
 8005944:	687b      	ldr	r3, [r7, #4]
 8005946:	681b      	ldr	r3, [r3, #0]
 8005948:	681a      	ldr	r2, [r3, #0]
 800594a:	687b      	ldr	r3, [r7, #4]
 800594c:	681b      	ldr	r3, [r3, #0]
 800594e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005952:	601a      	str	r2, [r3, #0]
 8005954:	f003 f8ac 	bl	8008ab0 <HAL_RCC_GetPCLK1Freq>
 8005958:	60f8      	str	r0, [r7, #12]
 800595a:	687b      	ldr	r3, [r7, #4]
 800595c:	685b      	ldr	r3, [r3, #4]
 800595e:	4a81      	ldr	r2, [pc, #516]	; (8005b64 <HAL_I2C_Init+0x274>)
 8005960:	4293      	cmp	r3, r2
 8005962:	d807      	bhi.n	8005974 <HAL_I2C_Init+0x84>
 8005964:	68fb      	ldr	r3, [r7, #12]
 8005966:	4a80      	ldr	r2, [pc, #512]	; (8005b68 <HAL_I2C_Init+0x278>)
 8005968:	4293      	cmp	r3, r2
 800596a:	bf94      	ite	ls
 800596c:	2301      	movls	r3, #1
 800596e:	2300      	movhi	r3, #0
 8005970:	b2db      	uxtb	r3, r3
 8005972:	e006      	b.n	8005982 <HAL_I2C_Init+0x92>
 8005974:	68fb      	ldr	r3, [r7, #12]
 8005976:	4a7d      	ldr	r2, [pc, #500]	; (8005b6c <HAL_I2C_Init+0x27c>)
 8005978:	4293      	cmp	r3, r2
 800597a:	bf94      	ite	ls
 800597c:	2301      	movls	r3, #1
 800597e:	2300      	movhi	r3, #0
 8005980:	b2db      	uxtb	r3, r3
 8005982:	2b00      	cmp	r3, #0
 8005984:	d001      	beq.n	800598a <HAL_I2C_Init+0x9a>
 8005986:	2301      	movs	r3, #1
 8005988:	e0e7      	b.n	8005b5a <HAL_I2C_Init+0x26a>
 800598a:	68fb      	ldr	r3, [r7, #12]
 800598c:	4a78      	ldr	r2, [pc, #480]	; (8005b70 <HAL_I2C_Init+0x280>)
 800598e:	fba2 2303 	umull	r2, r3, r2, r3
 8005992:	0c9b      	lsrs	r3, r3, #18
 8005994:	60bb      	str	r3, [r7, #8]
 8005996:	687b      	ldr	r3, [r7, #4]
 8005998:	681b      	ldr	r3, [r3, #0]
 800599a:	685b      	ldr	r3, [r3, #4]
 800599c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 80059a0:	687b      	ldr	r3, [r7, #4]
 80059a2:	681b      	ldr	r3, [r3, #0]
 80059a4:	68ba      	ldr	r2, [r7, #8]
 80059a6:	430a      	orrs	r2, r1
 80059a8:	605a      	str	r2, [r3, #4]
 80059aa:	687b      	ldr	r3, [r7, #4]
 80059ac:	681b      	ldr	r3, [r3, #0]
 80059ae:	6a1b      	ldr	r3, [r3, #32]
 80059b0:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 80059b4:	687b      	ldr	r3, [r7, #4]
 80059b6:	685b      	ldr	r3, [r3, #4]
 80059b8:	4a6a      	ldr	r2, [pc, #424]	; (8005b64 <HAL_I2C_Init+0x274>)
 80059ba:	4293      	cmp	r3, r2
 80059bc:	d802      	bhi.n	80059c4 <HAL_I2C_Init+0xd4>
 80059be:	68bb      	ldr	r3, [r7, #8]
 80059c0:	3301      	adds	r3, #1
 80059c2:	e009      	b.n	80059d8 <HAL_I2C_Init+0xe8>
 80059c4:	68bb      	ldr	r3, [r7, #8]
 80059c6:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80059ca:	fb02 f303 	mul.w	r3, r2, r3
 80059ce:	4a69      	ldr	r2, [pc, #420]	; (8005b74 <HAL_I2C_Init+0x284>)
 80059d0:	fba2 2303 	umull	r2, r3, r2, r3
 80059d4:	099b      	lsrs	r3, r3, #6
 80059d6:	3301      	adds	r3, #1
 80059d8:	687a      	ldr	r2, [r7, #4]
 80059da:	6812      	ldr	r2, [r2, #0]
 80059dc:	430b      	orrs	r3, r1
 80059de:	6213      	str	r3, [r2, #32]
 80059e0:	687b      	ldr	r3, [r7, #4]
 80059e2:	681b      	ldr	r3, [r3, #0]
 80059e4:	69db      	ldr	r3, [r3, #28]
 80059e6:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 80059ea:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 80059ee:	687b      	ldr	r3, [r7, #4]
 80059f0:	685b      	ldr	r3, [r3, #4]
 80059f2:	495c      	ldr	r1, [pc, #368]	; (8005b64 <HAL_I2C_Init+0x274>)
 80059f4:	428b      	cmp	r3, r1
 80059f6:	d819      	bhi.n	8005a2c <HAL_I2C_Init+0x13c>
 80059f8:	68fb      	ldr	r3, [r7, #12]
 80059fa:	1e59      	subs	r1, r3, #1
 80059fc:	687b      	ldr	r3, [r7, #4]
 80059fe:	685b      	ldr	r3, [r3, #4]
 8005a00:	005b      	lsls	r3, r3, #1
 8005a02:	fbb1 f3f3 	udiv	r3, r1, r3
 8005a06:	1c59      	adds	r1, r3, #1
 8005a08:	f640 73fc 	movw	r3, #4092	; 0xffc
 8005a0c:	400b      	ands	r3, r1
 8005a0e:	2b00      	cmp	r3, #0
 8005a10:	d00a      	beq.n	8005a28 <HAL_I2C_Init+0x138>
 8005a12:	68fb      	ldr	r3, [r7, #12]
 8005a14:	1e59      	subs	r1, r3, #1
 8005a16:	687b      	ldr	r3, [r7, #4]
 8005a18:	685b      	ldr	r3, [r3, #4]
 8005a1a:	005b      	lsls	r3, r3, #1
 8005a1c:	fbb1 f3f3 	udiv	r3, r1, r3
 8005a20:	3301      	adds	r3, #1
 8005a22:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005a26:	e051      	b.n	8005acc <HAL_I2C_Init+0x1dc>
 8005a28:	2304      	movs	r3, #4
 8005a2a:	e04f      	b.n	8005acc <HAL_I2C_Init+0x1dc>
 8005a2c:	687b      	ldr	r3, [r7, #4]
 8005a2e:	689b      	ldr	r3, [r3, #8]
 8005a30:	2b00      	cmp	r3, #0
 8005a32:	d111      	bne.n	8005a58 <HAL_I2C_Init+0x168>
 8005a34:	68fb      	ldr	r3, [r7, #12]
 8005a36:	1e58      	subs	r0, r3, #1
 8005a38:	687b      	ldr	r3, [r7, #4]
 8005a3a:	6859      	ldr	r1, [r3, #4]
 8005a3c:	460b      	mov	r3, r1
 8005a3e:	005b      	lsls	r3, r3, #1
 8005a40:	440b      	add	r3, r1
 8005a42:	fbb0 f3f3 	udiv	r3, r0, r3
 8005a46:	3301      	adds	r3, #1
 8005a48:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005a4c:	2b00      	cmp	r3, #0
 8005a4e:	bf0c      	ite	eq
 8005a50:	2301      	moveq	r3, #1
 8005a52:	2300      	movne	r3, #0
 8005a54:	b2db      	uxtb	r3, r3
 8005a56:	e012      	b.n	8005a7e <HAL_I2C_Init+0x18e>
 8005a58:	68fb      	ldr	r3, [r7, #12]
 8005a5a:	1e58      	subs	r0, r3, #1
 8005a5c:	687b      	ldr	r3, [r7, #4]
 8005a5e:	6859      	ldr	r1, [r3, #4]
 8005a60:	460b      	mov	r3, r1
 8005a62:	009b      	lsls	r3, r3, #2
 8005a64:	440b      	add	r3, r1
 8005a66:	0099      	lsls	r1, r3, #2
 8005a68:	440b      	add	r3, r1
 8005a6a:	fbb0 f3f3 	udiv	r3, r0, r3
 8005a6e:	3301      	adds	r3, #1
 8005a70:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005a74:	2b00      	cmp	r3, #0
 8005a76:	bf0c      	ite	eq
 8005a78:	2301      	moveq	r3, #1
 8005a7a:	2300      	movne	r3, #0
 8005a7c:	b2db      	uxtb	r3, r3
 8005a7e:	2b00      	cmp	r3, #0
 8005a80:	d001      	beq.n	8005a86 <HAL_I2C_Init+0x196>
 8005a82:	2301      	movs	r3, #1
 8005a84:	e022      	b.n	8005acc <HAL_I2C_Init+0x1dc>
 8005a86:	687b      	ldr	r3, [r7, #4]
 8005a88:	689b      	ldr	r3, [r3, #8]
 8005a8a:	2b00      	cmp	r3, #0
 8005a8c:	d10e      	bne.n	8005aac <HAL_I2C_Init+0x1bc>
 8005a8e:	68fb      	ldr	r3, [r7, #12]
 8005a90:	1e58      	subs	r0, r3, #1
 8005a92:	687b      	ldr	r3, [r7, #4]
 8005a94:	6859      	ldr	r1, [r3, #4]
 8005a96:	460b      	mov	r3, r1
 8005a98:	005b      	lsls	r3, r3, #1
 8005a9a:	440b      	add	r3, r1
 8005a9c:	fbb0 f3f3 	udiv	r3, r0, r3
 8005aa0:	3301      	adds	r3, #1
 8005aa2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005aa6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005aaa:	e00f      	b.n	8005acc <HAL_I2C_Init+0x1dc>
 8005aac:	68fb      	ldr	r3, [r7, #12]
 8005aae:	1e58      	subs	r0, r3, #1
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	6859      	ldr	r1, [r3, #4]
 8005ab4:	460b      	mov	r3, r1
 8005ab6:	009b      	lsls	r3, r3, #2
 8005ab8:	440b      	add	r3, r1
 8005aba:	0099      	lsls	r1, r3, #2
 8005abc:	440b      	add	r3, r1
 8005abe:	fbb0 f3f3 	udiv	r3, r0, r3
 8005ac2:	3301      	adds	r3, #1
 8005ac4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005ac8:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005acc:	6879      	ldr	r1, [r7, #4]
 8005ace:	6809      	ldr	r1, [r1, #0]
 8005ad0:	4313      	orrs	r3, r2
 8005ad2:	61cb      	str	r3, [r1, #28]
 8005ad4:	687b      	ldr	r3, [r7, #4]
 8005ad6:	681b      	ldr	r3, [r3, #0]
 8005ad8:	681b      	ldr	r3, [r3, #0]
 8005ada:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8005ade:	687b      	ldr	r3, [r7, #4]
 8005ae0:	69da      	ldr	r2, [r3, #28]
 8005ae2:	687b      	ldr	r3, [r7, #4]
 8005ae4:	6a1b      	ldr	r3, [r3, #32]
 8005ae6:	431a      	orrs	r2, r3
 8005ae8:	687b      	ldr	r3, [r7, #4]
 8005aea:	681b      	ldr	r3, [r3, #0]
 8005aec:	430a      	orrs	r2, r1
 8005aee:	601a      	str	r2, [r3, #0]
 8005af0:	687b      	ldr	r3, [r7, #4]
 8005af2:	681b      	ldr	r3, [r3, #0]
 8005af4:	689b      	ldr	r3, [r3, #8]
 8005af6:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8005afa:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8005afe:	687a      	ldr	r2, [r7, #4]
 8005b00:	6911      	ldr	r1, [r2, #16]
 8005b02:	687a      	ldr	r2, [r7, #4]
 8005b04:	68d2      	ldr	r2, [r2, #12]
 8005b06:	4311      	orrs	r1, r2
 8005b08:	687a      	ldr	r2, [r7, #4]
 8005b0a:	6812      	ldr	r2, [r2, #0]
 8005b0c:	430b      	orrs	r3, r1
 8005b0e:	6093      	str	r3, [r2, #8]
 8005b10:	687b      	ldr	r3, [r7, #4]
 8005b12:	681b      	ldr	r3, [r3, #0]
 8005b14:	68db      	ldr	r3, [r3, #12]
 8005b16:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8005b1a:	687b      	ldr	r3, [r7, #4]
 8005b1c:	695a      	ldr	r2, [r3, #20]
 8005b1e:	687b      	ldr	r3, [r7, #4]
 8005b20:	699b      	ldr	r3, [r3, #24]
 8005b22:	431a      	orrs	r2, r3
 8005b24:	687b      	ldr	r3, [r7, #4]
 8005b26:	681b      	ldr	r3, [r3, #0]
 8005b28:	430a      	orrs	r2, r1
 8005b2a:	60da      	str	r2, [r3, #12]
 8005b2c:	687b      	ldr	r3, [r7, #4]
 8005b2e:	681b      	ldr	r3, [r3, #0]
 8005b30:	681a      	ldr	r2, [r3, #0]
 8005b32:	687b      	ldr	r3, [r7, #4]
 8005b34:	681b      	ldr	r3, [r3, #0]
 8005b36:	f042 0201 	orr.w	r2, r2, #1
 8005b3a:	601a      	str	r2, [r3, #0]
 8005b3c:	687b      	ldr	r3, [r7, #4]
 8005b3e:	2200      	movs	r2, #0
 8005b40:	641a      	str	r2, [r3, #64]	; 0x40
 8005b42:	687b      	ldr	r3, [r7, #4]
 8005b44:	2220      	movs	r2, #32
 8005b46:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005b4a:	687b      	ldr	r3, [r7, #4]
 8005b4c:	2200      	movs	r2, #0
 8005b4e:	631a      	str	r2, [r3, #48]	; 0x30
 8005b50:	687b      	ldr	r3, [r7, #4]
 8005b52:	2200      	movs	r2, #0
 8005b54:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005b58:	2300      	movs	r3, #0
 8005b5a:	4618      	mov	r0, r3
 8005b5c:	3710      	adds	r7, #16
 8005b5e:	46bd      	mov	sp, r7
 8005b60:	bd80      	pop	{r7, pc}
 8005b62:	bf00      	nop
 8005b64:	000186a0 	.word	0x000186a0
 8005b68:	001e847f 	.word	0x001e847f
 8005b6c:	003d08ff 	.word	0x003d08ff
 8005b70:	431bde83 	.word	0x431bde83
 8005b74:	10624dd3 	.word	0x10624dd3

08005b78 <HAL_I2C_Master_Transmit>:
 8005b78:	b580      	push	{r7, lr}
 8005b7a:	b088      	sub	sp, #32
 8005b7c:	af02      	add	r7, sp, #8
 8005b7e:	60f8      	str	r0, [r7, #12]
 8005b80:	607a      	str	r2, [r7, #4]
 8005b82:	461a      	mov	r2, r3
 8005b84:	460b      	mov	r3, r1
 8005b86:	817b      	strh	r3, [r7, #10]
 8005b88:	4613      	mov	r3, r2
 8005b8a:	813b      	strh	r3, [r7, #8]
 8005b8c:	f7fe ffb4 	bl	8004af8 <HAL_GetTick>
 8005b90:	6178      	str	r0, [r7, #20]
 8005b92:	68fb      	ldr	r3, [r7, #12]
 8005b94:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005b98:	b2db      	uxtb	r3, r3
 8005b9a:	2b20      	cmp	r3, #32
 8005b9c:	f040 80e0 	bne.w	8005d60 <HAL_I2C_Master_Transmit+0x1e8>
 8005ba0:	697b      	ldr	r3, [r7, #20]
 8005ba2:	9300      	str	r3, [sp, #0]
 8005ba4:	2319      	movs	r3, #25
 8005ba6:	2201      	movs	r2, #1
 8005ba8:	4970      	ldr	r1, [pc, #448]	; (8005d6c <HAL_I2C_Master_Transmit+0x1f4>)
 8005baa:	68f8      	ldr	r0, [r7, #12]
 8005bac:	f002 f8e6 	bl	8007d7c <I2C_WaitOnFlagUntilTimeout>
 8005bb0:	4603      	mov	r3, r0
 8005bb2:	2b00      	cmp	r3, #0
 8005bb4:	d001      	beq.n	8005bba <HAL_I2C_Master_Transmit+0x42>
 8005bb6:	2302      	movs	r3, #2
 8005bb8:	e0d3      	b.n	8005d62 <HAL_I2C_Master_Transmit+0x1ea>
 8005bba:	68fb      	ldr	r3, [r7, #12]
 8005bbc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005bc0:	2b01      	cmp	r3, #1
 8005bc2:	d101      	bne.n	8005bc8 <HAL_I2C_Master_Transmit+0x50>
 8005bc4:	2302      	movs	r3, #2
 8005bc6:	e0cc      	b.n	8005d62 <HAL_I2C_Master_Transmit+0x1ea>
 8005bc8:	68fb      	ldr	r3, [r7, #12]
 8005bca:	2201      	movs	r2, #1
 8005bcc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005bd0:	68fb      	ldr	r3, [r7, #12]
 8005bd2:	681b      	ldr	r3, [r3, #0]
 8005bd4:	681b      	ldr	r3, [r3, #0]
 8005bd6:	f003 0301 	and.w	r3, r3, #1
 8005bda:	2b01      	cmp	r3, #1
 8005bdc:	d007      	beq.n	8005bee <HAL_I2C_Master_Transmit+0x76>
 8005bde:	68fb      	ldr	r3, [r7, #12]
 8005be0:	681b      	ldr	r3, [r3, #0]
 8005be2:	681a      	ldr	r2, [r3, #0]
 8005be4:	68fb      	ldr	r3, [r7, #12]
 8005be6:	681b      	ldr	r3, [r3, #0]
 8005be8:	f042 0201 	orr.w	r2, r2, #1
 8005bec:	601a      	str	r2, [r3, #0]
 8005bee:	68fb      	ldr	r3, [r7, #12]
 8005bf0:	681b      	ldr	r3, [r3, #0]
 8005bf2:	681a      	ldr	r2, [r3, #0]
 8005bf4:	68fb      	ldr	r3, [r7, #12]
 8005bf6:	681b      	ldr	r3, [r3, #0]
 8005bf8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005bfc:	601a      	str	r2, [r3, #0]
 8005bfe:	68fb      	ldr	r3, [r7, #12]
 8005c00:	2221      	movs	r2, #33	; 0x21
 8005c02:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005c06:	68fb      	ldr	r3, [r7, #12]
 8005c08:	2210      	movs	r2, #16
 8005c0a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005c0e:	68fb      	ldr	r3, [r7, #12]
 8005c10:	2200      	movs	r2, #0
 8005c12:	641a      	str	r2, [r3, #64]	; 0x40
 8005c14:	68fb      	ldr	r3, [r7, #12]
 8005c16:	687a      	ldr	r2, [r7, #4]
 8005c18:	625a      	str	r2, [r3, #36]	; 0x24
 8005c1a:	68fb      	ldr	r3, [r7, #12]
 8005c1c:	893a      	ldrh	r2, [r7, #8]
 8005c1e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005c20:	68fb      	ldr	r3, [r7, #12]
 8005c22:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005c24:	b29a      	uxth	r2, r3
 8005c26:	68fb      	ldr	r3, [r7, #12]
 8005c28:	851a      	strh	r2, [r3, #40]	; 0x28
 8005c2a:	68fb      	ldr	r3, [r7, #12]
 8005c2c:	4a50      	ldr	r2, [pc, #320]	; (8005d70 <HAL_I2C_Master_Transmit+0x1f8>)
 8005c2e:	62da      	str	r2, [r3, #44]	; 0x2c
 8005c30:	8979      	ldrh	r1, [r7, #10]
 8005c32:	697b      	ldr	r3, [r7, #20]
 8005c34:	6a3a      	ldr	r2, [r7, #32]
 8005c36:	68f8      	ldr	r0, [r7, #12]
 8005c38:	f001 fea8 	bl	800798c <I2C_MasterRequestWrite>
 8005c3c:	4603      	mov	r3, r0
 8005c3e:	2b00      	cmp	r3, #0
 8005c40:	d001      	beq.n	8005c46 <HAL_I2C_Master_Transmit+0xce>
 8005c42:	2301      	movs	r3, #1
 8005c44:	e08d      	b.n	8005d62 <HAL_I2C_Master_Transmit+0x1ea>
 8005c46:	2300      	movs	r3, #0
 8005c48:	613b      	str	r3, [r7, #16]
 8005c4a:	68fb      	ldr	r3, [r7, #12]
 8005c4c:	681b      	ldr	r3, [r3, #0]
 8005c4e:	695b      	ldr	r3, [r3, #20]
 8005c50:	613b      	str	r3, [r7, #16]
 8005c52:	68fb      	ldr	r3, [r7, #12]
 8005c54:	681b      	ldr	r3, [r3, #0]
 8005c56:	699b      	ldr	r3, [r3, #24]
 8005c58:	613b      	str	r3, [r7, #16]
 8005c5a:	693b      	ldr	r3, [r7, #16]
 8005c5c:	e066      	b.n	8005d2c <HAL_I2C_Master_Transmit+0x1b4>
 8005c5e:	697a      	ldr	r2, [r7, #20]
 8005c60:	6a39      	ldr	r1, [r7, #32]
 8005c62:	68f8      	ldr	r0, [r7, #12]
 8005c64:	f002 f960 	bl	8007f28 <I2C_WaitOnTXEFlagUntilTimeout>
 8005c68:	4603      	mov	r3, r0
 8005c6a:	2b00      	cmp	r3, #0
 8005c6c:	d00d      	beq.n	8005c8a <HAL_I2C_Master_Transmit+0x112>
 8005c6e:	68fb      	ldr	r3, [r7, #12]
 8005c70:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005c72:	2b04      	cmp	r3, #4
 8005c74:	d107      	bne.n	8005c86 <HAL_I2C_Master_Transmit+0x10e>
 8005c76:	68fb      	ldr	r3, [r7, #12]
 8005c78:	681b      	ldr	r3, [r3, #0]
 8005c7a:	681a      	ldr	r2, [r3, #0]
 8005c7c:	68fb      	ldr	r3, [r7, #12]
 8005c7e:	681b      	ldr	r3, [r3, #0]
 8005c80:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005c84:	601a      	str	r2, [r3, #0]
 8005c86:	2301      	movs	r3, #1
 8005c88:	e06b      	b.n	8005d62 <HAL_I2C_Master_Transmit+0x1ea>
 8005c8a:	68fb      	ldr	r3, [r7, #12]
 8005c8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c8e:	781a      	ldrb	r2, [r3, #0]
 8005c90:	68fb      	ldr	r3, [r7, #12]
 8005c92:	681b      	ldr	r3, [r3, #0]
 8005c94:	611a      	str	r2, [r3, #16]
 8005c96:	68fb      	ldr	r3, [r7, #12]
 8005c98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005c9a:	1c5a      	adds	r2, r3, #1
 8005c9c:	68fb      	ldr	r3, [r7, #12]
 8005c9e:	625a      	str	r2, [r3, #36]	; 0x24
 8005ca0:	68fb      	ldr	r3, [r7, #12]
 8005ca2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005ca4:	b29b      	uxth	r3, r3
 8005ca6:	3b01      	subs	r3, #1
 8005ca8:	b29a      	uxth	r2, r3
 8005caa:	68fb      	ldr	r3, [r7, #12]
 8005cac:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005cae:	68fb      	ldr	r3, [r7, #12]
 8005cb0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005cb2:	3b01      	subs	r3, #1
 8005cb4:	b29a      	uxth	r2, r3
 8005cb6:	68fb      	ldr	r3, [r7, #12]
 8005cb8:	851a      	strh	r2, [r3, #40]	; 0x28
 8005cba:	68fb      	ldr	r3, [r7, #12]
 8005cbc:	681b      	ldr	r3, [r3, #0]
 8005cbe:	695b      	ldr	r3, [r3, #20]
 8005cc0:	f003 0304 	and.w	r3, r3, #4
 8005cc4:	2b04      	cmp	r3, #4
 8005cc6:	d11b      	bne.n	8005d00 <HAL_I2C_Master_Transmit+0x188>
 8005cc8:	68fb      	ldr	r3, [r7, #12]
 8005cca:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005ccc:	2b00      	cmp	r3, #0
 8005cce:	d017      	beq.n	8005d00 <HAL_I2C_Master_Transmit+0x188>
 8005cd0:	68fb      	ldr	r3, [r7, #12]
 8005cd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005cd4:	781a      	ldrb	r2, [r3, #0]
 8005cd6:	68fb      	ldr	r3, [r7, #12]
 8005cd8:	681b      	ldr	r3, [r3, #0]
 8005cda:	611a      	str	r2, [r3, #16]
 8005cdc:	68fb      	ldr	r3, [r7, #12]
 8005cde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ce0:	1c5a      	adds	r2, r3, #1
 8005ce2:	68fb      	ldr	r3, [r7, #12]
 8005ce4:	625a      	str	r2, [r3, #36]	; 0x24
 8005ce6:	68fb      	ldr	r3, [r7, #12]
 8005ce8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005cea:	b29b      	uxth	r3, r3
 8005cec:	3b01      	subs	r3, #1
 8005cee:	b29a      	uxth	r2, r3
 8005cf0:	68fb      	ldr	r3, [r7, #12]
 8005cf2:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005cf4:	68fb      	ldr	r3, [r7, #12]
 8005cf6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005cf8:	3b01      	subs	r3, #1
 8005cfa:	b29a      	uxth	r2, r3
 8005cfc:	68fb      	ldr	r3, [r7, #12]
 8005cfe:	851a      	strh	r2, [r3, #40]	; 0x28
 8005d00:	697a      	ldr	r2, [r7, #20]
 8005d02:	6a39      	ldr	r1, [r7, #32]
 8005d04:	68f8      	ldr	r0, [r7, #12]
 8005d06:	f002 f950 	bl	8007faa <I2C_WaitOnBTFFlagUntilTimeout>
 8005d0a:	4603      	mov	r3, r0
 8005d0c:	2b00      	cmp	r3, #0
 8005d0e:	d00d      	beq.n	8005d2c <HAL_I2C_Master_Transmit+0x1b4>
 8005d10:	68fb      	ldr	r3, [r7, #12]
 8005d12:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d14:	2b04      	cmp	r3, #4
 8005d16:	d107      	bne.n	8005d28 <HAL_I2C_Master_Transmit+0x1b0>
 8005d18:	68fb      	ldr	r3, [r7, #12]
 8005d1a:	681b      	ldr	r3, [r3, #0]
 8005d1c:	681a      	ldr	r2, [r3, #0]
 8005d1e:	68fb      	ldr	r3, [r7, #12]
 8005d20:	681b      	ldr	r3, [r3, #0]
 8005d22:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005d26:	601a      	str	r2, [r3, #0]
 8005d28:	2301      	movs	r3, #1
 8005d2a:	e01a      	b.n	8005d62 <HAL_I2C_Master_Transmit+0x1ea>
 8005d2c:	68fb      	ldr	r3, [r7, #12]
 8005d2e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005d30:	2b00      	cmp	r3, #0
 8005d32:	d194      	bne.n	8005c5e <HAL_I2C_Master_Transmit+0xe6>
 8005d34:	68fb      	ldr	r3, [r7, #12]
 8005d36:	681b      	ldr	r3, [r3, #0]
 8005d38:	681a      	ldr	r2, [r3, #0]
 8005d3a:	68fb      	ldr	r3, [r7, #12]
 8005d3c:	681b      	ldr	r3, [r3, #0]
 8005d3e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005d42:	601a      	str	r2, [r3, #0]
 8005d44:	68fb      	ldr	r3, [r7, #12]
 8005d46:	2220      	movs	r2, #32
 8005d48:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005d4c:	68fb      	ldr	r3, [r7, #12]
 8005d4e:	2200      	movs	r2, #0
 8005d50:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005d54:	68fb      	ldr	r3, [r7, #12]
 8005d56:	2200      	movs	r2, #0
 8005d58:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005d5c:	2300      	movs	r3, #0
 8005d5e:	e000      	b.n	8005d62 <HAL_I2C_Master_Transmit+0x1ea>
 8005d60:	2302      	movs	r3, #2
 8005d62:	4618      	mov	r0, r3
 8005d64:	3718      	adds	r7, #24
 8005d66:	46bd      	mov	sp, r7
 8005d68:	bd80      	pop	{r7, pc}
 8005d6a:	bf00      	nop
 8005d6c:	00100002 	.word	0x00100002
 8005d70:	ffff0000 	.word	0xffff0000

08005d74 <HAL_I2C_Master_Receive>:
 8005d74:	b580      	push	{r7, lr}
 8005d76:	b08c      	sub	sp, #48	; 0x30
 8005d78:	af02      	add	r7, sp, #8
 8005d7a:	60f8      	str	r0, [r7, #12]
 8005d7c:	607a      	str	r2, [r7, #4]
 8005d7e:	461a      	mov	r2, r3
 8005d80:	460b      	mov	r3, r1
 8005d82:	817b      	strh	r3, [r7, #10]
 8005d84:	4613      	mov	r3, r2
 8005d86:	813b      	strh	r3, [r7, #8]
 8005d88:	f7fe feb6 	bl	8004af8 <HAL_GetTick>
 8005d8c:	6278      	str	r0, [r7, #36]	; 0x24
 8005d8e:	68fb      	ldr	r3, [r7, #12]
 8005d90:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005d94:	b2db      	uxtb	r3, r3
 8005d96:	2b20      	cmp	r3, #32
 8005d98:	f040 820b 	bne.w	80061b2 <HAL_I2C_Master_Receive+0x43e>
 8005d9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005d9e:	9300      	str	r3, [sp, #0]
 8005da0:	2319      	movs	r3, #25
 8005da2:	2201      	movs	r2, #1
 8005da4:	497c      	ldr	r1, [pc, #496]	; (8005f98 <HAL_I2C_Master_Receive+0x224>)
 8005da6:	68f8      	ldr	r0, [r7, #12]
 8005da8:	f001 ffe8 	bl	8007d7c <I2C_WaitOnFlagUntilTimeout>
 8005dac:	4603      	mov	r3, r0
 8005dae:	2b00      	cmp	r3, #0
 8005db0:	d001      	beq.n	8005db6 <HAL_I2C_Master_Receive+0x42>
 8005db2:	2302      	movs	r3, #2
 8005db4:	e1fe      	b.n	80061b4 <HAL_I2C_Master_Receive+0x440>
 8005db6:	68fb      	ldr	r3, [r7, #12]
 8005db8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005dbc:	2b01      	cmp	r3, #1
 8005dbe:	d101      	bne.n	8005dc4 <HAL_I2C_Master_Receive+0x50>
 8005dc0:	2302      	movs	r3, #2
 8005dc2:	e1f7      	b.n	80061b4 <HAL_I2C_Master_Receive+0x440>
 8005dc4:	68fb      	ldr	r3, [r7, #12]
 8005dc6:	2201      	movs	r2, #1
 8005dc8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005dcc:	68fb      	ldr	r3, [r7, #12]
 8005dce:	681b      	ldr	r3, [r3, #0]
 8005dd0:	681b      	ldr	r3, [r3, #0]
 8005dd2:	f003 0301 	and.w	r3, r3, #1
 8005dd6:	2b01      	cmp	r3, #1
 8005dd8:	d007      	beq.n	8005dea <HAL_I2C_Master_Receive+0x76>
 8005dda:	68fb      	ldr	r3, [r7, #12]
 8005ddc:	681b      	ldr	r3, [r3, #0]
 8005dde:	681a      	ldr	r2, [r3, #0]
 8005de0:	68fb      	ldr	r3, [r7, #12]
 8005de2:	681b      	ldr	r3, [r3, #0]
 8005de4:	f042 0201 	orr.w	r2, r2, #1
 8005de8:	601a      	str	r2, [r3, #0]
 8005dea:	68fb      	ldr	r3, [r7, #12]
 8005dec:	681b      	ldr	r3, [r3, #0]
 8005dee:	681a      	ldr	r2, [r3, #0]
 8005df0:	68fb      	ldr	r3, [r7, #12]
 8005df2:	681b      	ldr	r3, [r3, #0]
 8005df4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005df8:	601a      	str	r2, [r3, #0]
 8005dfa:	68fb      	ldr	r3, [r7, #12]
 8005dfc:	2222      	movs	r2, #34	; 0x22
 8005dfe:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005e02:	68fb      	ldr	r3, [r7, #12]
 8005e04:	2210      	movs	r2, #16
 8005e06:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005e0a:	68fb      	ldr	r3, [r7, #12]
 8005e0c:	2200      	movs	r2, #0
 8005e0e:	641a      	str	r2, [r3, #64]	; 0x40
 8005e10:	68fb      	ldr	r3, [r7, #12]
 8005e12:	687a      	ldr	r2, [r7, #4]
 8005e14:	625a      	str	r2, [r3, #36]	; 0x24
 8005e16:	68fb      	ldr	r3, [r7, #12]
 8005e18:	893a      	ldrh	r2, [r7, #8]
 8005e1a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005e1c:	68fb      	ldr	r3, [r7, #12]
 8005e1e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005e20:	b29a      	uxth	r2, r3
 8005e22:	68fb      	ldr	r3, [r7, #12]
 8005e24:	851a      	strh	r2, [r3, #40]	; 0x28
 8005e26:	68fb      	ldr	r3, [r7, #12]
 8005e28:	4a5c      	ldr	r2, [pc, #368]	; (8005f9c <HAL_I2C_Master_Receive+0x228>)
 8005e2a:	62da      	str	r2, [r3, #44]	; 0x2c
 8005e2c:	8979      	ldrh	r1, [r7, #10]
 8005e2e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005e30:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005e32:	68f8      	ldr	r0, [r7, #12]
 8005e34:	f001 fe2c 	bl	8007a90 <I2C_MasterRequestRead>
 8005e38:	4603      	mov	r3, r0
 8005e3a:	2b00      	cmp	r3, #0
 8005e3c:	d001      	beq.n	8005e42 <HAL_I2C_Master_Receive+0xce>
 8005e3e:	2301      	movs	r3, #1
 8005e40:	e1b8      	b.n	80061b4 <HAL_I2C_Master_Receive+0x440>
 8005e42:	68fb      	ldr	r3, [r7, #12]
 8005e44:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005e46:	2b00      	cmp	r3, #0
 8005e48:	d113      	bne.n	8005e72 <HAL_I2C_Master_Receive+0xfe>
 8005e4a:	2300      	movs	r3, #0
 8005e4c:	623b      	str	r3, [r7, #32]
 8005e4e:	68fb      	ldr	r3, [r7, #12]
 8005e50:	681b      	ldr	r3, [r3, #0]
 8005e52:	695b      	ldr	r3, [r3, #20]
 8005e54:	623b      	str	r3, [r7, #32]
 8005e56:	68fb      	ldr	r3, [r7, #12]
 8005e58:	681b      	ldr	r3, [r3, #0]
 8005e5a:	699b      	ldr	r3, [r3, #24]
 8005e5c:	623b      	str	r3, [r7, #32]
 8005e5e:	6a3b      	ldr	r3, [r7, #32]
 8005e60:	68fb      	ldr	r3, [r7, #12]
 8005e62:	681b      	ldr	r3, [r3, #0]
 8005e64:	681a      	ldr	r2, [r3, #0]
 8005e66:	68fb      	ldr	r3, [r7, #12]
 8005e68:	681b      	ldr	r3, [r3, #0]
 8005e6a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005e6e:	601a      	str	r2, [r3, #0]
 8005e70:	e18c      	b.n	800618c <HAL_I2C_Master_Receive+0x418>
 8005e72:	68fb      	ldr	r3, [r7, #12]
 8005e74:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005e76:	2b01      	cmp	r3, #1
 8005e78:	d11b      	bne.n	8005eb2 <HAL_I2C_Master_Receive+0x13e>
 8005e7a:	68fb      	ldr	r3, [r7, #12]
 8005e7c:	681b      	ldr	r3, [r3, #0]
 8005e7e:	681a      	ldr	r2, [r3, #0]
 8005e80:	68fb      	ldr	r3, [r7, #12]
 8005e82:	681b      	ldr	r3, [r3, #0]
 8005e84:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005e88:	601a      	str	r2, [r3, #0]
 8005e8a:	2300      	movs	r3, #0
 8005e8c:	61fb      	str	r3, [r7, #28]
 8005e8e:	68fb      	ldr	r3, [r7, #12]
 8005e90:	681b      	ldr	r3, [r3, #0]
 8005e92:	695b      	ldr	r3, [r3, #20]
 8005e94:	61fb      	str	r3, [r7, #28]
 8005e96:	68fb      	ldr	r3, [r7, #12]
 8005e98:	681b      	ldr	r3, [r3, #0]
 8005e9a:	699b      	ldr	r3, [r3, #24]
 8005e9c:	61fb      	str	r3, [r7, #28]
 8005e9e:	69fb      	ldr	r3, [r7, #28]
 8005ea0:	68fb      	ldr	r3, [r7, #12]
 8005ea2:	681b      	ldr	r3, [r3, #0]
 8005ea4:	681a      	ldr	r2, [r3, #0]
 8005ea6:	68fb      	ldr	r3, [r7, #12]
 8005ea8:	681b      	ldr	r3, [r3, #0]
 8005eaa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005eae:	601a      	str	r2, [r3, #0]
 8005eb0:	e16c      	b.n	800618c <HAL_I2C_Master_Receive+0x418>
 8005eb2:	68fb      	ldr	r3, [r7, #12]
 8005eb4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005eb6:	2b02      	cmp	r3, #2
 8005eb8:	d11b      	bne.n	8005ef2 <HAL_I2C_Master_Receive+0x17e>
 8005eba:	68fb      	ldr	r3, [r7, #12]
 8005ebc:	681b      	ldr	r3, [r3, #0]
 8005ebe:	681a      	ldr	r2, [r3, #0]
 8005ec0:	68fb      	ldr	r3, [r7, #12]
 8005ec2:	681b      	ldr	r3, [r3, #0]
 8005ec4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005ec8:	601a      	str	r2, [r3, #0]
 8005eca:	68fb      	ldr	r3, [r7, #12]
 8005ecc:	681b      	ldr	r3, [r3, #0]
 8005ece:	681a      	ldr	r2, [r3, #0]
 8005ed0:	68fb      	ldr	r3, [r7, #12]
 8005ed2:	681b      	ldr	r3, [r3, #0]
 8005ed4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005ed8:	601a      	str	r2, [r3, #0]
 8005eda:	2300      	movs	r3, #0
 8005edc:	61bb      	str	r3, [r7, #24]
 8005ede:	68fb      	ldr	r3, [r7, #12]
 8005ee0:	681b      	ldr	r3, [r3, #0]
 8005ee2:	695b      	ldr	r3, [r3, #20]
 8005ee4:	61bb      	str	r3, [r7, #24]
 8005ee6:	68fb      	ldr	r3, [r7, #12]
 8005ee8:	681b      	ldr	r3, [r3, #0]
 8005eea:	699b      	ldr	r3, [r3, #24]
 8005eec:	61bb      	str	r3, [r7, #24]
 8005eee:	69bb      	ldr	r3, [r7, #24]
 8005ef0:	e14c      	b.n	800618c <HAL_I2C_Master_Receive+0x418>
 8005ef2:	68fb      	ldr	r3, [r7, #12]
 8005ef4:	681b      	ldr	r3, [r3, #0]
 8005ef6:	681a      	ldr	r2, [r3, #0]
 8005ef8:	68fb      	ldr	r3, [r7, #12]
 8005efa:	681b      	ldr	r3, [r3, #0]
 8005efc:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005f00:	601a      	str	r2, [r3, #0]
 8005f02:	2300      	movs	r3, #0
 8005f04:	617b      	str	r3, [r7, #20]
 8005f06:	68fb      	ldr	r3, [r7, #12]
 8005f08:	681b      	ldr	r3, [r3, #0]
 8005f0a:	695b      	ldr	r3, [r3, #20]
 8005f0c:	617b      	str	r3, [r7, #20]
 8005f0e:	68fb      	ldr	r3, [r7, #12]
 8005f10:	681b      	ldr	r3, [r3, #0]
 8005f12:	699b      	ldr	r3, [r3, #24]
 8005f14:	617b      	str	r3, [r7, #20]
 8005f16:	697b      	ldr	r3, [r7, #20]
 8005f18:	e138      	b.n	800618c <HAL_I2C_Master_Receive+0x418>
 8005f1a:	68fb      	ldr	r3, [r7, #12]
 8005f1c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005f1e:	2b03      	cmp	r3, #3
 8005f20:	f200 80f1 	bhi.w	8006106 <HAL_I2C_Master_Receive+0x392>
 8005f24:	68fb      	ldr	r3, [r7, #12]
 8005f26:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005f28:	2b01      	cmp	r3, #1
 8005f2a:	d123      	bne.n	8005f74 <HAL_I2C_Master_Receive+0x200>
 8005f2c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005f2e:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8005f30:	68f8      	ldr	r0, [r7, #12]
 8005f32:	f002 f8ad 	bl	8008090 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005f36:	4603      	mov	r3, r0
 8005f38:	2b00      	cmp	r3, #0
 8005f3a:	d001      	beq.n	8005f40 <HAL_I2C_Master_Receive+0x1cc>
 8005f3c:	2301      	movs	r3, #1
 8005f3e:	e139      	b.n	80061b4 <HAL_I2C_Master_Receive+0x440>
 8005f40:	68fb      	ldr	r3, [r7, #12]
 8005f42:	681b      	ldr	r3, [r3, #0]
 8005f44:	691a      	ldr	r2, [r3, #16]
 8005f46:	68fb      	ldr	r3, [r7, #12]
 8005f48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f4a:	b2d2      	uxtb	r2, r2
 8005f4c:	701a      	strb	r2, [r3, #0]
 8005f4e:	68fb      	ldr	r3, [r7, #12]
 8005f50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005f52:	1c5a      	adds	r2, r3, #1
 8005f54:	68fb      	ldr	r3, [r7, #12]
 8005f56:	625a      	str	r2, [r3, #36]	; 0x24
 8005f58:	68fb      	ldr	r3, [r7, #12]
 8005f5a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005f5c:	3b01      	subs	r3, #1
 8005f5e:	b29a      	uxth	r2, r3
 8005f60:	68fb      	ldr	r3, [r7, #12]
 8005f62:	851a      	strh	r2, [r3, #40]	; 0x28
 8005f64:	68fb      	ldr	r3, [r7, #12]
 8005f66:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005f68:	b29b      	uxth	r3, r3
 8005f6a:	3b01      	subs	r3, #1
 8005f6c:	b29a      	uxth	r2, r3
 8005f6e:	68fb      	ldr	r3, [r7, #12]
 8005f70:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005f72:	e10b      	b.n	800618c <HAL_I2C_Master_Receive+0x418>
 8005f74:	68fb      	ldr	r3, [r7, #12]
 8005f76:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005f78:	2b02      	cmp	r3, #2
 8005f7a:	d14e      	bne.n	800601a <HAL_I2C_Master_Receive+0x2a6>
 8005f7c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005f7e:	9300      	str	r3, [sp, #0]
 8005f80:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f82:	2200      	movs	r2, #0
 8005f84:	4906      	ldr	r1, [pc, #24]	; (8005fa0 <HAL_I2C_Master_Receive+0x22c>)
 8005f86:	68f8      	ldr	r0, [r7, #12]
 8005f88:	f001 fef8 	bl	8007d7c <I2C_WaitOnFlagUntilTimeout>
 8005f8c:	4603      	mov	r3, r0
 8005f8e:	2b00      	cmp	r3, #0
 8005f90:	d008      	beq.n	8005fa4 <HAL_I2C_Master_Receive+0x230>
 8005f92:	2301      	movs	r3, #1
 8005f94:	e10e      	b.n	80061b4 <HAL_I2C_Master_Receive+0x440>
 8005f96:	bf00      	nop
 8005f98:	00100002 	.word	0x00100002
 8005f9c:	ffff0000 	.word	0xffff0000
 8005fa0:	00010004 	.word	0x00010004
 8005fa4:	68fb      	ldr	r3, [r7, #12]
 8005fa6:	681b      	ldr	r3, [r3, #0]
 8005fa8:	681a      	ldr	r2, [r3, #0]
 8005faa:	68fb      	ldr	r3, [r7, #12]
 8005fac:	681b      	ldr	r3, [r3, #0]
 8005fae:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005fb2:	601a      	str	r2, [r3, #0]
 8005fb4:	68fb      	ldr	r3, [r7, #12]
 8005fb6:	681b      	ldr	r3, [r3, #0]
 8005fb8:	691a      	ldr	r2, [r3, #16]
 8005fba:	68fb      	ldr	r3, [r7, #12]
 8005fbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fbe:	b2d2      	uxtb	r2, r2
 8005fc0:	701a      	strb	r2, [r3, #0]
 8005fc2:	68fb      	ldr	r3, [r7, #12]
 8005fc4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fc6:	1c5a      	adds	r2, r3, #1
 8005fc8:	68fb      	ldr	r3, [r7, #12]
 8005fca:	625a      	str	r2, [r3, #36]	; 0x24
 8005fcc:	68fb      	ldr	r3, [r7, #12]
 8005fce:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005fd0:	3b01      	subs	r3, #1
 8005fd2:	b29a      	uxth	r2, r3
 8005fd4:	68fb      	ldr	r3, [r7, #12]
 8005fd6:	851a      	strh	r2, [r3, #40]	; 0x28
 8005fd8:	68fb      	ldr	r3, [r7, #12]
 8005fda:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005fdc:	b29b      	uxth	r3, r3
 8005fde:	3b01      	subs	r3, #1
 8005fe0:	b29a      	uxth	r2, r3
 8005fe2:	68fb      	ldr	r3, [r7, #12]
 8005fe4:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005fe6:	68fb      	ldr	r3, [r7, #12]
 8005fe8:	681b      	ldr	r3, [r3, #0]
 8005fea:	691a      	ldr	r2, [r3, #16]
 8005fec:	68fb      	ldr	r3, [r7, #12]
 8005fee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ff0:	b2d2      	uxtb	r2, r2
 8005ff2:	701a      	strb	r2, [r3, #0]
 8005ff4:	68fb      	ldr	r3, [r7, #12]
 8005ff6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005ff8:	1c5a      	adds	r2, r3, #1
 8005ffa:	68fb      	ldr	r3, [r7, #12]
 8005ffc:	625a      	str	r2, [r3, #36]	; 0x24
 8005ffe:	68fb      	ldr	r3, [r7, #12]
 8006000:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006002:	3b01      	subs	r3, #1
 8006004:	b29a      	uxth	r2, r3
 8006006:	68fb      	ldr	r3, [r7, #12]
 8006008:	851a      	strh	r2, [r3, #40]	; 0x28
 800600a:	68fb      	ldr	r3, [r7, #12]
 800600c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800600e:	b29b      	uxth	r3, r3
 8006010:	3b01      	subs	r3, #1
 8006012:	b29a      	uxth	r2, r3
 8006014:	68fb      	ldr	r3, [r7, #12]
 8006016:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006018:	e0b8      	b.n	800618c <HAL_I2C_Master_Receive+0x418>
 800601a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800601c:	9300      	str	r3, [sp, #0]
 800601e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006020:	2200      	movs	r2, #0
 8006022:	4966      	ldr	r1, [pc, #408]	; (80061bc <HAL_I2C_Master_Receive+0x448>)
 8006024:	68f8      	ldr	r0, [r7, #12]
 8006026:	f001 fea9 	bl	8007d7c <I2C_WaitOnFlagUntilTimeout>
 800602a:	4603      	mov	r3, r0
 800602c:	2b00      	cmp	r3, #0
 800602e:	d001      	beq.n	8006034 <HAL_I2C_Master_Receive+0x2c0>
 8006030:	2301      	movs	r3, #1
 8006032:	e0bf      	b.n	80061b4 <HAL_I2C_Master_Receive+0x440>
 8006034:	68fb      	ldr	r3, [r7, #12]
 8006036:	681b      	ldr	r3, [r3, #0]
 8006038:	681a      	ldr	r2, [r3, #0]
 800603a:	68fb      	ldr	r3, [r7, #12]
 800603c:	681b      	ldr	r3, [r3, #0]
 800603e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006042:	601a      	str	r2, [r3, #0]
 8006044:	68fb      	ldr	r3, [r7, #12]
 8006046:	681b      	ldr	r3, [r3, #0]
 8006048:	691a      	ldr	r2, [r3, #16]
 800604a:	68fb      	ldr	r3, [r7, #12]
 800604c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800604e:	b2d2      	uxtb	r2, r2
 8006050:	701a      	strb	r2, [r3, #0]
 8006052:	68fb      	ldr	r3, [r7, #12]
 8006054:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006056:	1c5a      	adds	r2, r3, #1
 8006058:	68fb      	ldr	r3, [r7, #12]
 800605a:	625a      	str	r2, [r3, #36]	; 0x24
 800605c:	68fb      	ldr	r3, [r7, #12]
 800605e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006060:	3b01      	subs	r3, #1
 8006062:	b29a      	uxth	r2, r3
 8006064:	68fb      	ldr	r3, [r7, #12]
 8006066:	851a      	strh	r2, [r3, #40]	; 0x28
 8006068:	68fb      	ldr	r3, [r7, #12]
 800606a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800606c:	b29b      	uxth	r3, r3
 800606e:	3b01      	subs	r3, #1
 8006070:	b29a      	uxth	r2, r3
 8006072:	68fb      	ldr	r3, [r7, #12]
 8006074:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006076:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006078:	9300      	str	r3, [sp, #0]
 800607a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800607c:	2200      	movs	r2, #0
 800607e:	494f      	ldr	r1, [pc, #316]	; (80061bc <HAL_I2C_Master_Receive+0x448>)
 8006080:	68f8      	ldr	r0, [r7, #12]
 8006082:	f001 fe7b 	bl	8007d7c <I2C_WaitOnFlagUntilTimeout>
 8006086:	4603      	mov	r3, r0
 8006088:	2b00      	cmp	r3, #0
 800608a:	d001      	beq.n	8006090 <HAL_I2C_Master_Receive+0x31c>
 800608c:	2301      	movs	r3, #1
 800608e:	e091      	b.n	80061b4 <HAL_I2C_Master_Receive+0x440>
 8006090:	68fb      	ldr	r3, [r7, #12]
 8006092:	681b      	ldr	r3, [r3, #0]
 8006094:	681a      	ldr	r2, [r3, #0]
 8006096:	68fb      	ldr	r3, [r7, #12]
 8006098:	681b      	ldr	r3, [r3, #0]
 800609a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800609e:	601a      	str	r2, [r3, #0]
 80060a0:	68fb      	ldr	r3, [r7, #12]
 80060a2:	681b      	ldr	r3, [r3, #0]
 80060a4:	691a      	ldr	r2, [r3, #16]
 80060a6:	68fb      	ldr	r3, [r7, #12]
 80060a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060aa:	b2d2      	uxtb	r2, r2
 80060ac:	701a      	strb	r2, [r3, #0]
 80060ae:	68fb      	ldr	r3, [r7, #12]
 80060b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060b2:	1c5a      	adds	r2, r3, #1
 80060b4:	68fb      	ldr	r3, [r7, #12]
 80060b6:	625a      	str	r2, [r3, #36]	; 0x24
 80060b8:	68fb      	ldr	r3, [r7, #12]
 80060ba:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80060bc:	3b01      	subs	r3, #1
 80060be:	b29a      	uxth	r2, r3
 80060c0:	68fb      	ldr	r3, [r7, #12]
 80060c2:	851a      	strh	r2, [r3, #40]	; 0x28
 80060c4:	68fb      	ldr	r3, [r7, #12]
 80060c6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80060c8:	b29b      	uxth	r3, r3
 80060ca:	3b01      	subs	r3, #1
 80060cc:	b29a      	uxth	r2, r3
 80060ce:	68fb      	ldr	r3, [r7, #12]
 80060d0:	855a      	strh	r2, [r3, #42]	; 0x2a
 80060d2:	68fb      	ldr	r3, [r7, #12]
 80060d4:	681b      	ldr	r3, [r3, #0]
 80060d6:	691a      	ldr	r2, [r3, #16]
 80060d8:	68fb      	ldr	r3, [r7, #12]
 80060da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060dc:	b2d2      	uxtb	r2, r2
 80060de:	701a      	strb	r2, [r3, #0]
 80060e0:	68fb      	ldr	r3, [r7, #12]
 80060e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060e4:	1c5a      	adds	r2, r3, #1
 80060e6:	68fb      	ldr	r3, [r7, #12]
 80060e8:	625a      	str	r2, [r3, #36]	; 0x24
 80060ea:	68fb      	ldr	r3, [r7, #12]
 80060ec:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80060ee:	3b01      	subs	r3, #1
 80060f0:	b29a      	uxth	r2, r3
 80060f2:	68fb      	ldr	r3, [r7, #12]
 80060f4:	851a      	strh	r2, [r3, #40]	; 0x28
 80060f6:	68fb      	ldr	r3, [r7, #12]
 80060f8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80060fa:	b29b      	uxth	r3, r3
 80060fc:	3b01      	subs	r3, #1
 80060fe:	b29a      	uxth	r2, r3
 8006100:	68fb      	ldr	r3, [r7, #12]
 8006102:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006104:	e042      	b.n	800618c <HAL_I2C_Master_Receive+0x418>
 8006106:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006108:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800610a:	68f8      	ldr	r0, [r7, #12]
 800610c:	f001 ffc0 	bl	8008090 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006110:	4603      	mov	r3, r0
 8006112:	2b00      	cmp	r3, #0
 8006114:	d001      	beq.n	800611a <HAL_I2C_Master_Receive+0x3a6>
 8006116:	2301      	movs	r3, #1
 8006118:	e04c      	b.n	80061b4 <HAL_I2C_Master_Receive+0x440>
 800611a:	68fb      	ldr	r3, [r7, #12]
 800611c:	681b      	ldr	r3, [r3, #0]
 800611e:	691a      	ldr	r2, [r3, #16]
 8006120:	68fb      	ldr	r3, [r7, #12]
 8006122:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006124:	b2d2      	uxtb	r2, r2
 8006126:	701a      	strb	r2, [r3, #0]
 8006128:	68fb      	ldr	r3, [r7, #12]
 800612a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800612c:	1c5a      	adds	r2, r3, #1
 800612e:	68fb      	ldr	r3, [r7, #12]
 8006130:	625a      	str	r2, [r3, #36]	; 0x24
 8006132:	68fb      	ldr	r3, [r7, #12]
 8006134:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006136:	3b01      	subs	r3, #1
 8006138:	b29a      	uxth	r2, r3
 800613a:	68fb      	ldr	r3, [r7, #12]
 800613c:	851a      	strh	r2, [r3, #40]	; 0x28
 800613e:	68fb      	ldr	r3, [r7, #12]
 8006140:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006142:	b29b      	uxth	r3, r3
 8006144:	3b01      	subs	r3, #1
 8006146:	b29a      	uxth	r2, r3
 8006148:	68fb      	ldr	r3, [r7, #12]
 800614a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800614c:	68fb      	ldr	r3, [r7, #12]
 800614e:	681b      	ldr	r3, [r3, #0]
 8006150:	695b      	ldr	r3, [r3, #20]
 8006152:	f003 0304 	and.w	r3, r3, #4
 8006156:	2b04      	cmp	r3, #4
 8006158:	d118      	bne.n	800618c <HAL_I2C_Master_Receive+0x418>
 800615a:	68fb      	ldr	r3, [r7, #12]
 800615c:	681b      	ldr	r3, [r3, #0]
 800615e:	691a      	ldr	r2, [r3, #16]
 8006160:	68fb      	ldr	r3, [r7, #12]
 8006162:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006164:	b2d2      	uxtb	r2, r2
 8006166:	701a      	strb	r2, [r3, #0]
 8006168:	68fb      	ldr	r3, [r7, #12]
 800616a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800616c:	1c5a      	adds	r2, r3, #1
 800616e:	68fb      	ldr	r3, [r7, #12]
 8006170:	625a      	str	r2, [r3, #36]	; 0x24
 8006172:	68fb      	ldr	r3, [r7, #12]
 8006174:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006176:	3b01      	subs	r3, #1
 8006178:	b29a      	uxth	r2, r3
 800617a:	68fb      	ldr	r3, [r7, #12]
 800617c:	851a      	strh	r2, [r3, #40]	; 0x28
 800617e:	68fb      	ldr	r3, [r7, #12]
 8006180:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006182:	b29b      	uxth	r3, r3
 8006184:	3b01      	subs	r3, #1
 8006186:	b29a      	uxth	r2, r3
 8006188:	68fb      	ldr	r3, [r7, #12]
 800618a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800618c:	68fb      	ldr	r3, [r7, #12]
 800618e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006190:	2b00      	cmp	r3, #0
 8006192:	f47f aec2 	bne.w	8005f1a <HAL_I2C_Master_Receive+0x1a6>
 8006196:	68fb      	ldr	r3, [r7, #12]
 8006198:	2220      	movs	r2, #32
 800619a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800619e:	68fb      	ldr	r3, [r7, #12]
 80061a0:	2200      	movs	r2, #0
 80061a2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80061a6:	68fb      	ldr	r3, [r7, #12]
 80061a8:	2200      	movs	r2, #0
 80061aa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80061ae:	2300      	movs	r3, #0
 80061b0:	e000      	b.n	80061b4 <HAL_I2C_Master_Receive+0x440>
 80061b2:	2302      	movs	r3, #2
 80061b4:	4618      	mov	r0, r3
 80061b6:	3728      	adds	r7, #40	; 0x28
 80061b8:	46bd      	mov	sp, r7
 80061ba:	bd80      	pop	{r7, pc}
 80061bc:	00010004 	.word	0x00010004

080061c0 <HAL_I2C_EV_IRQHandler>:
 80061c0:	b580      	push	{r7, lr}
 80061c2:	b088      	sub	sp, #32
 80061c4:	af00      	add	r7, sp, #0
 80061c6:	6078      	str	r0, [r7, #4]
 80061c8:	2300      	movs	r3, #0
 80061ca:	61bb      	str	r3, [r7, #24]
 80061cc:	687b      	ldr	r3, [r7, #4]
 80061ce:	681b      	ldr	r3, [r3, #0]
 80061d0:	685b      	ldr	r3, [r3, #4]
 80061d2:	617b      	str	r3, [r7, #20]
 80061d4:	687b      	ldr	r3, [r7, #4]
 80061d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80061d8:	613b      	str	r3, [r7, #16]
 80061da:	687b      	ldr	r3, [r7, #4]
 80061dc:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80061e0:	73fb      	strb	r3, [r7, #15]
 80061e2:	687b      	ldr	r3, [r7, #4]
 80061e4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80061e8:	73bb      	strb	r3, [r7, #14]
 80061ea:	7bfb      	ldrb	r3, [r7, #15]
 80061ec:	2b10      	cmp	r3, #16
 80061ee:	d003      	beq.n	80061f8 <HAL_I2C_EV_IRQHandler+0x38>
 80061f0:	7bfb      	ldrb	r3, [r7, #15]
 80061f2:	2b40      	cmp	r3, #64	; 0x40
 80061f4:	f040 80c1 	bne.w	800637a <HAL_I2C_EV_IRQHandler+0x1ba>
 80061f8:	687b      	ldr	r3, [r7, #4]
 80061fa:	681b      	ldr	r3, [r3, #0]
 80061fc:	699b      	ldr	r3, [r3, #24]
 80061fe:	61bb      	str	r3, [r7, #24]
 8006200:	687b      	ldr	r3, [r7, #4]
 8006202:	681b      	ldr	r3, [r3, #0]
 8006204:	695b      	ldr	r3, [r3, #20]
 8006206:	61fb      	str	r3, [r7, #28]
 8006208:	69fb      	ldr	r3, [r7, #28]
 800620a:	f003 0301 	and.w	r3, r3, #1
 800620e:	2b00      	cmp	r3, #0
 8006210:	d10d      	bne.n	800622e <HAL_I2C_EV_IRQHandler+0x6e>
 8006212:	693b      	ldr	r3, [r7, #16]
 8006214:	f5b3 0f2a 	cmp.w	r3, #11141120	; 0xaa0000
 8006218:	d003      	beq.n	8006222 <HAL_I2C_EV_IRQHandler+0x62>
 800621a:	693b      	ldr	r3, [r7, #16]
 800621c:	f1b3 4f2a 	cmp.w	r3, #2852126720	; 0xaa000000
 8006220:	d101      	bne.n	8006226 <HAL_I2C_EV_IRQHandler+0x66>
 8006222:	2301      	movs	r3, #1
 8006224:	e000      	b.n	8006228 <HAL_I2C_EV_IRQHandler+0x68>
 8006226:	2300      	movs	r3, #0
 8006228:	2b01      	cmp	r3, #1
 800622a:	f000 8132 	beq.w	8006492 <HAL_I2C_EV_IRQHandler+0x2d2>
 800622e:	69fb      	ldr	r3, [r7, #28]
 8006230:	f003 0301 	and.w	r3, r3, #1
 8006234:	2b00      	cmp	r3, #0
 8006236:	d00c      	beq.n	8006252 <HAL_I2C_EV_IRQHandler+0x92>
 8006238:	697b      	ldr	r3, [r7, #20]
 800623a:	0a5b      	lsrs	r3, r3, #9
 800623c:	f003 0301 	and.w	r3, r3, #1
 8006240:	2b00      	cmp	r3, #0
 8006242:	d006      	beq.n	8006252 <HAL_I2C_EV_IRQHandler+0x92>
 8006244:	6878      	ldr	r0, [r7, #4]
 8006246:	f001 ffa8 	bl	800819a <I2C_ConvertOtherXferOptions>
 800624a:	6878      	ldr	r0, [r7, #4]
 800624c:	f000 fd83 	bl	8006d56 <I2C_Master_SB>
 8006250:	e092      	b.n	8006378 <HAL_I2C_EV_IRQHandler+0x1b8>
 8006252:	69fb      	ldr	r3, [r7, #28]
 8006254:	08db      	lsrs	r3, r3, #3
 8006256:	f003 0301 	and.w	r3, r3, #1
 800625a:	2b00      	cmp	r3, #0
 800625c:	d009      	beq.n	8006272 <HAL_I2C_EV_IRQHandler+0xb2>
 800625e:	697b      	ldr	r3, [r7, #20]
 8006260:	0a5b      	lsrs	r3, r3, #9
 8006262:	f003 0301 	and.w	r3, r3, #1
 8006266:	2b00      	cmp	r3, #0
 8006268:	d003      	beq.n	8006272 <HAL_I2C_EV_IRQHandler+0xb2>
 800626a:	6878      	ldr	r0, [r7, #4]
 800626c:	f000 fdf9 	bl	8006e62 <I2C_Master_ADD10>
 8006270:	e082      	b.n	8006378 <HAL_I2C_EV_IRQHandler+0x1b8>
 8006272:	69fb      	ldr	r3, [r7, #28]
 8006274:	085b      	lsrs	r3, r3, #1
 8006276:	f003 0301 	and.w	r3, r3, #1
 800627a:	2b00      	cmp	r3, #0
 800627c:	d009      	beq.n	8006292 <HAL_I2C_EV_IRQHandler+0xd2>
 800627e:	697b      	ldr	r3, [r7, #20]
 8006280:	0a5b      	lsrs	r3, r3, #9
 8006282:	f003 0301 	and.w	r3, r3, #1
 8006286:	2b00      	cmp	r3, #0
 8006288:	d003      	beq.n	8006292 <HAL_I2C_EV_IRQHandler+0xd2>
 800628a:	6878      	ldr	r0, [r7, #4]
 800628c:	f000 fe13 	bl	8006eb6 <I2C_Master_ADDR>
 8006290:	e072      	b.n	8006378 <HAL_I2C_EV_IRQHandler+0x1b8>
 8006292:	69bb      	ldr	r3, [r7, #24]
 8006294:	089b      	lsrs	r3, r3, #2
 8006296:	f003 0301 	and.w	r3, r3, #1
 800629a:	2b00      	cmp	r3, #0
 800629c:	d03b      	beq.n	8006316 <HAL_I2C_EV_IRQHandler+0x156>
 800629e:	687b      	ldr	r3, [r7, #4]
 80062a0:	681b      	ldr	r3, [r3, #0]
 80062a2:	685b      	ldr	r3, [r3, #4]
 80062a4:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80062a8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80062ac:	f000 80f3 	beq.w	8006496 <HAL_I2C_EV_IRQHandler+0x2d6>
 80062b0:	69fb      	ldr	r3, [r7, #28]
 80062b2:	09db      	lsrs	r3, r3, #7
 80062b4:	f003 0301 	and.w	r3, r3, #1
 80062b8:	2b00      	cmp	r3, #0
 80062ba:	d00f      	beq.n	80062dc <HAL_I2C_EV_IRQHandler+0x11c>
 80062bc:	697b      	ldr	r3, [r7, #20]
 80062be:	0a9b      	lsrs	r3, r3, #10
 80062c0:	f003 0301 	and.w	r3, r3, #1
 80062c4:	2b00      	cmp	r3, #0
 80062c6:	d009      	beq.n	80062dc <HAL_I2C_EV_IRQHandler+0x11c>
 80062c8:	69fb      	ldr	r3, [r7, #28]
 80062ca:	089b      	lsrs	r3, r3, #2
 80062cc:	f003 0301 	and.w	r3, r3, #1
 80062d0:	2b00      	cmp	r3, #0
 80062d2:	d103      	bne.n	80062dc <HAL_I2C_EV_IRQHandler+0x11c>
 80062d4:	6878      	ldr	r0, [r7, #4]
 80062d6:	f000 f9f3 	bl	80066c0 <I2C_MasterTransmit_TXE>
 80062da:	e04d      	b.n	8006378 <HAL_I2C_EV_IRQHandler+0x1b8>
 80062dc:	69fb      	ldr	r3, [r7, #28]
 80062de:	089b      	lsrs	r3, r3, #2
 80062e0:	f003 0301 	and.w	r3, r3, #1
 80062e4:	2b00      	cmp	r3, #0
 80062e6:	f000 80d6 	beq.w	8006496 <HAL_I2C_EV_IRQHandler+0x2d6>
 80062ea:	697b      	ldr	r3, [r7, #20]
 80062ec:	0a5b      	lsrs	r3, r3, #9
 80062ee:	f003 0301 	and.w	r3, r3, #1
 80062f2:	2b00      	cmp	r3, #0
 80062f4:	f000 80cf 	beq.w	8006496 <HAL_I2C_EV_IRQHandler+0x2d6>
 80062f8:	7bbb      	ldrb	r3, [r7, #14]
 80062fa:	2b21      	cmp	r3, #33	; 0x21
 80062fc:	d103      	bne.n	8006306 <HAL_I2C_EV_IRQHandler+0x146>
 80062fe:	6878      	ldr	r0, [r7, #4]
 8006300:	f000 fa7a 	bl	80067f8 <I2C_MasterTransmit_BTF>
 8006304:	e0c7      	b.n	8006496 <HAL_I2C_EV_IRQHandler+0x2d6>
 8006306:	7bfb      	ldrb	r3, [r7, #15]
 8006308:	2b40      	cmp	r3, #64	; 0x40
 800630a:	f040 80c4 	bne.w	8006496 <HAL_I2C_EV_IRQHandler+0x2d6>
 800630e:	6878      	ldr	r0, [r7, #4]
 8006310:	f000 fae8 	bl	80068e4 <I2C_MemoryTransmit_TXE_BTF>
 8006314:	e0bf      	b.n	8006496 <HAL_I2C_EV_IRQHandler+0x2d6>
 8006316:	687b      	ldr	r3, [r7, #4]
 8006318:	681b      	ldr	r3, [r3, #0]
 800631a:	685b      	ldr	r3, [r3, #4]
 800631c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8006320:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006324:	f000 80b7 	beq.w	8006496 <HAL_I2C_EV_IRQHandler+0x2d6>
 8006328:	69fb      	ldr	r3, [r7, #28]
 800632a:	099b      	lsrs	r3, r3, #6
 800632c:	f003 0301 	and.w	r3, r3, #1
 8006330:	2b00      	cmp	r3, #0
 8006332:	d00f      	beq.n	8006354 <HAL_I2C_EV_IRQHandler+0x194>
 8006334:	697b      	ldr	r3, [r7, #20]
 8006336:	0a9b      	lsrs	r3, r3, #10
 8006338:	f003 0301 	and.w	r3, r3, #1
 800633c:	2b00      	cmp	r3, #0
 800633e:	d009      	beq.n	8006354 <HAL_I2C_EV_IRQHandler+0x194>
 8006340:	69fb      	ldr	r3, [r7, #28]
 8006342:	089b      	lsrs	r3, r3, #2
 8006344:	f003 0301 	and.w	r3, r3, #1
 8006348:	2b00      	cmp	r3, #0
 800634a:	d103      	bne.n	8006354 <HAL_I2C_EV_IRQHandler+0x194>
 800634c:	6878      	ldr	r0, [r7, #4]
 800634e:	f000 fb5d 	bl	8006a0c <I2C_MasterReceive_RXNE>
 8006352:	e011      	b.n	8006378 <HAL_I2C_EV_IRQHandler+0x1b8>
 8006354:	69fb      	ldr	r3, [r7, #28]
 8006356:	089b      	lsrs	r3, r3, #2
 8006358:	f003 0301 	and.w	r3, r3, #1
 800635c:	2b00      	cmp	r3, #0
 800635e:	f000 809a 	beq.w	8006496 <HAL_I2C_EV_IRQHandler+0x2d6>
 8006362:	697b      	ldr	r3, [r7, #20]
 8006364:	0a5b      	lsrs	r3, r3, #9
 8006366:	f003 0301 	and.w	r3, r3, #1
 800636a:	2b00      	cmp	r3, #0
 800636c:	f000 8093 	beq.w	8006496 <HAL_I2C_EV_IRQHandler+0x2d6>
 8006370:	6878      	ldr	r0, [r7, #4]
 8006372:	f000 fc06 	bl	8006b82 <I2C_MasterReceive_BTF>
 8006376:	e08e      	b.n	8006496 <HAL_I2C_EV_IRQHandler+0x2d6>
 8006378:	e08d      	b.n	8006496 <HAL_I2C_EV_IRQHandler+0x2d6>
 800637a:	687b      	ldr	r3, [r7, #4]
 800637c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800637e:	2b00      	cmp	r3, #0
 8006380:	d004      	beq.n	800638c <HAL_I2C_EV_IRQHandler+0x1cc>
 8006382:	687b      	ldr	r3, [r7, #4]
 8006384:	681b      	ldr	r3, [r3, #0]
 8006386:	695b      	ldr	r3, [r3, #20]
 8006388:	61fb      	str	r3, [r7, #28]
 800638a:	e007      	b.n	800639c <HAL_I2C_EV_IRQHandler+0x1dc>
 800638c:	687b      	ldr	r3, [r7, #4]
 800638e:	681b      	ldr	r3, [r3, #0]
 8006390:	699b      	ldr	r3, [r3, #24]
 8006392:	61bb      	str	r3, [r7, #24]
 8006394:	687b      	ldr	r3, [r7, #4]
 8006396:	681b      	ldr	r3, [r3, #0]
 8006398:	695b      	ldr	r3, [r3, #20]
 800639a:	61fb      	str	r3, [r7, #28]
 800639c:	69fb      	ldr	r3, [r7, #28]
 800639e:	085b      	lsrs	r3, r3, #1
 80063a0:	f003 0301 	and.w	r3, r3, #1
 80063a4:	2b00      	cmp	r3, #0
 80063a6:	d012      	beq.n	80063ce <HAL_I2C_EV_IRQHandler+0x20e>
 80063a8:	697b      	ldr	r3, [r7, #20]
 80063aa:	0a5b      	lsrs	r3, r3, #9
 80063ac:	f003 0301 	and.w	r3, r3, #1
 80063b0:	2b00      	cmp	r3, #0
 80063b2:	d00c      	beq.n	80063ce <HAL_I2C_EV_IRQHandler+0x20e>
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80063b8:	2b00      	cmp	r3, #0
 80063ba:	d003      	beq.n	80063c4 <HAL_I2C_EV_IRQHandler+0x204>
 80063bc:	687b      	ldr	r3, [r7, #4]
 80063be:	681b      	ldr	r3, [r3, #0]
 80063c0:	699b      	ldr	r3, [r3, #24]
 80063c2:	61bb      	str	r3, [r7, #24]
 80063c4:	69b9      	ldr	r1, [r7, #24]
 80063c6:	6878      	ldr	r0, [r7, #4]
 80063c8:	f000 ffc4 	bl	8007354 <I2C_Slave_ADDR>
 80063cc:	e066      	b.n	800649c <HAL_I2C_EV_IRQHandler+0x2dc>
 80063ce:	69fb      	ldr	r3, [r7, #28]
 80063d0:	091b      	lsrs	r3, r3, #4
 80063d2:	f003 0301 	and.w	r3, r3, #1
 80063d6:	2b00      	cmp	r3, #0
 80063d8:	d009      	beq.n	80063ee <HAL_I2C_EV_IRQHandler+0x22e>
 80063da:	697b      	ldr	r3, [r7, #20]
 80063dc:	0a5b      	lsrs	r3, r3, #9
 80063de:	f003 0301 	and.w	r3, r3, #1
 80063e2:	2b00      	cmp	r3, #0
 80063e4:	d003      	beq.n	80063ee <HAL_I2C_EV_IRQHandler+0x22e>
 80063e6:	6878      	ldr	r0, [r7, #4]
 80063e8:	f000 fffe 	bl	80073e8 <I2C_Slave_STOPF>
 80063ec:	e056      	b.n	800649c <HAL_I2C_EV_IRQHandler+0x2dc>
 80063ee:	7bbb      	ldrb	r3, [r7, #14]
 80063f0:	2b21      	cmp	r3, #33	; 0x21
 80063f2:	d002      	beq.n	80063fa <HAL_I2C_EV_IRQHandler+0x23a>
 80063f4:	7bbb      	ldrb	r3, [r7, #14]
 80063f6:	2b29      	cmp	r3, #41	; 0x29
 80063f8:	d125      	bne.n	8006446 <HAL_I2C_EV_IRQHandler+0x286>
 80063fa:	69fb      	ldr	r3, [r7, #28]
 80063fc:	09db      	lsrs	r3, r3, #7
 80063fe:	f003 0301 	and.w	r3, r3, #1
 8006402:	2b00      	cmp	r3, #0
 8006404:	d00f      	beq.n	8006426 <HAL_I2C_EV_IRQHandler+0x266>
 8006406:	697b      	ldr	r3, [r7, #20]
 8006408:	0a9b      	lsrs	r3, r3, #10
 800640a:	f003 0301 	and.w	r3, r3, #1
 800640e:	2b00      	cmp	r3, #0
 8006410:	d009      	beq.n	8006426 <HAL_I2C_EV_IRQHandler+0x266>
 8006412:	69fb      	ldr	r3, [r7, #28]
 8006414:	089b      	lsrs	r3, r3, #2
 8006416:	f003 0301 	and.w	r3, r3, #1
 800641a:	2b00      	cmp	r3, #0
 800641c:	d103      	bne.n	8006426 <HAL_I2C_EV_IRQHandler+0x266>
 800641e:	6878      	ldr	r0, [r7, #4]
 8006420:	f000 feda 	bl	80071d8 <I2C_SlaveTransmit_TXE>
 8006424:	e039      	b.n	800649a <HAL_I2C_EV_IRQHandler+0x2da>
 8006426:	69fb      	ldr	r3, [r7, #28]
 8006428:	089b      	lsrs	r3, r3, #2
 800642a:	f003 0301 	and.w	r3, r3, #1
 800642e:	2b00      	cmp	r3, #0
 8006430:	d033      	beq.n	800649a <HAL_I2C_EV_IRQHandler+0x2da>
 8006432:	697b      	ldr	r3, [r7, #20]
 8006434:	0a5b      	lsrs	r3, r3, #9
 8006436:	f003 0301 	and.w	r3, r3, #1
 800643a:	2b00      	cmp	r3, #0
 800643c:	d02d      	beq.n	800649a <HAL_I2C_EV_IRQHandler+0x2da>
 800643e:	6878      	ldr	r0, [r7, #4]
 8006440:	f000 ff07 	bl	8007252 <I2C_SlaveTransmit_BTF>
 8006444:	e029      	b.n	800649a <HAL_I2C_EV_IRQHandler+0x2da>
 8006446:	69fb      	ldr	r3, [r7, #28]
 8006448:	099b      	lsrs	r3, r3, #6
 800644a:	f003 0301 	and.w	r3, r3, #1
 800644e:	2b00      	cmp	r3, #0
 8006450:	d00f      	beq.n	8006472 <HAL_I2C_EV_IRQHandler+0x2b2>
 8006452:	697b      	ldr	r3, [r7, #20]
 8006454:	0a9b      	lsrs	r3, r3, #10
 8006456:	f003 0301 	and.w	r3, r3, #1
 800645a:	2b00      	cmp	r3, #0
 800645c:	d009      	beq.n	8006472 <HAL_I2C_EV_IRQHandler+0x2b2>
 800645e:	69fb      	ldr	r3, [r7, #28]
 8006460:	089b      	lsrs	r3, r3, #2
 8006462:	f003 0301 	and.w	r3, r3, #1
 8006466:	2b00      	cmp	r3, #0
 8006468:	d103      	bne.n	8006472 <HAL_I2C_EV_IRQHandler+0x2b2>
 800646a:	6878      	ldr	r0, [r7, #4]
 800646c:	f000 ff12 	bl	8007294 <I2C_SlaveReceive_RXNE>
 8006470:	e014      	b.n	800649c <HAL_I2C_EV_IRQHandler+0x2dc>
 8006472:	69fb      	ldr	r3, [r7, #28]
 8006474:	089b      	lsrs	r3, r3, #2
 8006476:	f003 0301 	and.w	r3, r3, #1
 800647a:	2b00      	cmp	r3, #0
 800647c:	d00e      	beq.n	800649c <HAL_I2C_EV_IRQHandler+0x2dc>
 800647e:	697b      	ldr	r3, [r7, #20]
 8006480:	0a5b      	lsrs	r3, r3, #9
 8006482:	f003 0301 	and.w	r3, r3, #1
 8006486:	2b00      	cmp	r3, #0
 8006488:	d008      	beq.n	800649c <HAL_I2C_EV_IRQHandler+0x2dc>
 800648a:	6878      	ldr	r0, [r7, #4]
 800648c:	f000 ff40 	bl	8007310 <I2C_SlaveReceive_BTF>
 8006490:	e004      	b.n	800649c <HAL_I2C_EV_IRQHandler+0x2dc>
 8006492:	bf00      	nop
 8006494:	e002      	b.n	800649c <HAL_I2C_EV_IRQHandler+0x2dc>
 8006496:	bf00      	nop
 8006498:	e000      	b.n	800649c <HAL_I2C_EV_IRQHandler+0x2dc>
 800649a:	bf00      	nop
 800649c:	3720      	adds	r7, #32
 800649e:	46bd      	mov	sp, r7
 80064a0:	bd80      	pop	{r7, pc}

080064a2 <HAL_I2C_ER_IRQHandler>:
 80064a2:	b580      	push	{r7, lr}
 80064a4:	b08a      	sub	sp, #40	; 0x28
 80064a6:	af00      	add	r7, sp, #0
 80064a8:	6078      	str	r0, [r7, #4]
 80064aa:	687b      	ldr	r3, [r7, #4]
 80064ac:	681b      	ldr	r3, [r3, #0]
 80064ae:	695b      	ldr	r3, [r3, #20]
 80064b0:	623b      	str	r3, [r7, #32]
 80064b2:	687b      	ldr	r3, [r7, #4]
 80064b4:	681b      	ldr	r3, [r3, #0]
 80064b6:	685b      	ldr	r3, [r3, #4]
 80064b8:	61fb      	str	r3, [r7, #28]
 80064ba:	2300      	movs	r3, #0
 80064bc:	627b      	str	r3, [r7, #36]	; 0x24
 80064be:	687b      	ldr	r3, [r7, #4]
 80064c0:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80064c4:	76fb      	strb	r3, [r7, #27]
 80064c6:	6a3b      	ldr	r3, [r7, #32]
 80064c8:	0a1b      	lsrs	r3, r3, #8
 80064ca:	f003 0301 	and.w	r3, r3, #1
 80064ce:	2b00      	cmp	r3, #0
 80064d0:	d00e      	beq.n	80064f0 <HAL_I2C_ER_IRQHandler+0x4e>
 80064d2:	69fb      	ldr	r3, [r7, #28]
 80064d4:	0a1b      	lsrs	r3, r3, #8
 80064d6:	f003 0301 	and.w	r3, r3, #1
 80064da:	2b00      	cmp	r3, #0
 80064dc:	d008      	beq.n	80064f0 <HAL_I2C_ER_IRQHandler+0x4e>
 80064de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80064e0:	f043 0301 	orr.w	r3, r3, #1
 80064e4:	627b      	str	r3, [r7, #36]	; 0x24
 80064e6:	687b      	ldr	r3, [r7, #4]
 80064e8:	681b      	ldr	r3, [r3, #0]
 80064ea:	f46f 7280 	mvn.w	r2, #256	; 0x100
 80064ee:	615a      	str	r2, [r3, #20]
 80064f0:	6a3b      	ldr	r3, [r7, #32]
 80064f2:	0a5b      	lsrs	r3, r3, #9
 80064f4:	f003 0301 	and.w	r3, r3, #1
 80064f8:	2b00      	cmp	r3, #0
 80064fa:	d00e      	beq.n	800651a <HAL_I2C_ER_IRQHandler+0x78>
 80064fc:	69fb      	ldr	r3, [r7, #28]
 80064fe:	0a1b      	lsrs	r3, r3, #8
 8006500:	f003 0301 	and.w	r3, r3, #1
 8006504:	2b00      	cmp	r3, #0
 8006506:	d008      	beq.n	800651a <HAL_I2C_ER_IRQHandler+0x78>
 8006508:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800650a:	f043 0302 	orr.w	r3, r3, #2
 800650e:	627b      	str	r3, [r7, #36]	; 0x24
 8006510:	687b      	ldr	r3, [r7, #4]
 8006512:	681b      	ldr	r3, [r3, #0]
 8006514:	f46f 7200 	mvn.w	r2, #512	; 0x200
 8006518:	615a      	str	r2, [r3, #20]
 800651a:	6a3b      	ldr	r3, [r7, #32]
 800651c:	0a9b      	lsrs	r3, r3, #10
 800651e:	f003 0301 	and.w	r3, r3, #1
 8006522:	2b00      	cmp	r3, #0
 8006524:	d03f      	beq.n	80065a6 <HAL_I2C_ER_IRQHandler+0x104>
 8006526:	69fb      	ldr	r3, [r7, #28]
 8006528:	0a1b      	lsrs	r3, r3, #8
 800652a:	f003 0301 	and.w	r3, r3, #1
 800652e:	2b00      	cmp	r3, #0
 8006530:	d039      	beq.n	80065a6 <HAL_I2C_ER_IRQHandler+0x104>
 8006532:	7efb      	ldrb	r3, [r7, #27]
 8006534:	76bb      	strb	r3, [r7, #26]
 8006536:	687b      	ldr	r3, [r7, #4]
 8006538:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800653a:	b29b      	uxth	r3, r3
 800653c:	617b      	str	r3, [r7, #20]
 800653e:	687b      	ldr	r3, [r7, #4]
 8006540:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006544:	74fb      	strb	r3, [r7, #19]
 8006546:	687b      	ldr	r3, [r7, #4]
 8006548:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800654a:	60fb      	str	r3, [r7, #12]
 800654c:	7ebb      	ldrb	r3, [r7, #26]
 800654e:	2b20      	cmp	r3, #32
 8006550:	d112      	bne.n	8006578 <HAL_I2C_ER_IRQHandler+0xd6>
 8006552:	697b      	ldr	r3, [r7, #20]
 8006554:	2b00      	cmp	r3, #0
 8006556:	d10f      	bne.n	8006578 <HAL_I2C_ER_IRQHandler+0xd6>
 8006558:	7cfb      	ldrb	r3, [r7, #19]
 800655a:	2b21      	cmp	r3, #33	; 0x21
 800655c:	d008      	beq.n	8006570 <HAL_I2C_ER_IRQHandler+0xce>
 800655e:	7cfb      	ldrb	r3, [r7, #19]
 8006560:	2b29      	cmp	r3, #41	; 0x29
 8006562:	d005      	beq.n	8006570 <HAL_I2C_ER_IRQHandler+0xce>
 8006564:	7cfb      	ldrb	r3, [r7, #19]
 8006566:	2b28      	cmp	r3, #40	; 0x28
 8006568:	d106      	bne.n	8006578 <HAL_I2C_ER_IRQHandler+0xd6>
 800656a:	68fb      	ldr	r3, [r7, #12]
 800656c:	2b21      	cmp	r3, #33	; 0x21
 800656e:	d103      	bne.n	8006578 <HAL_I2C_ER_IRQHandler+0xd6>
 8006570:	6878      	ldr	r0, [r7, #4]
 8006572:	f001 f869 	bl	8007648 <I2C_Slave_AF>
 8006576:	e016      	b.n	80065a6 <HAL_I2C_ER_IRQHandler+0x104>
 8006578:	687b      	ldr	r3, [r7, #4]
 800657a:	681b      	ldr	r3, [r3, #0]
 800657c:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8006580:	615a      	str	r2, [r3, #20]
 8006582:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006584:	f043 0304 	orr.w	r3, r3, #4
 8006588:	627b      	str	r3, [r7, #36]	; 0x24
 800658a:	7efb      	ldrb	r3, [r7, #27]
 800658c:	2b10      	cmp	r3, #16
 800658e:	d002      	beq.n	8006596 <HAL_I2C_ER_IRQHandler+0xf4>
 8006590:	7efb      	ldrb	r3, [r7, #27]
 8006592:	2b40      	cmp	r3, #64	; 0x40
 8006594:	d107      	bne.n	80065a6 <HAL_I2C_ER_IRQHandler+0x104>
 8006596:	687b      	ldr	r3, [r7, #4]
 8006598:	681b      	ldr	r3, [r3, #0]
 800659a:	681a      	ldr	r2, [r3, #0]
 800659c:	687b      	ldr	r3, [r7, #4]
 800659e:	681b      	ldr	r3, [r3, #0]
 80065a0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80065a4:	601a      	str	r2, [r3, #0]
 80065a6:	6a3b      	ldr	r3, [r7, #32]
 80065a8:	0adb      	lsrs	r3, r3, #11
 80065aa:	f003 0301 	and.w	r3, r3, #1
 80065ae:	2b00      	cmp	r3, #0
 80065b0:	d00e      	beq.n	80065d0 <HAL_I2C_ER_IRQHandler+0x12e>
 80065b2:	69fb      	ldr	r3, [r7, #28]
 80065b4:	0a1b      	lsrs	r3, r3, #8
 80065b6:	f003 0301 	and.w	r3, r3, #1
 80065ba:	2b00      	cmp	r3, #0
 80065bc:	d008      	beq.n	80065d0 <HAL_I2C_ER_IRQHandler+0x12e>
 80065be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80065c0:	f043 0308 	orr.w	r3, r3, #8
 80065c4:	627b      	str	r3, [r7, #36]	; 0x24
 80065c6:	687b      	ldr	r3, [r7, #4]
 80065c8:	681b      	ldr	r3, [r3, #0]
 80065ca:	f46f 6200 	mvn.w	r2, #2048	; 0x800
 80065ce:	615a      	str	r2, [r3, #20]
 80065d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80065d2:	2b00      	cmp	r3, #0
 80065d4:	d008      	beq.n	80065e8 <HAL_I2C_ER_IRQHandler+0x146>
 80065d6:	687b      	ldr	r3, [r7, #4]
 80065d8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80065da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80065dc:	431a      	orrs	r2, r3
 80065de:	687b      	ldr	r3, [r7, #4]
 80065e0:	641a      	str	r2, [r3, #64]	; 0x40
 80065e2:	6878      	ldr	r0, [r7, #4]
 80065e4:	f001 f8a0 	bl	8007728 <I2C_ITError>
 80065e8:	bf00      	nop
 80065ea:	3728      	adds	r7, #40	; 0x28
 80065ec:	46bd      	mov	sp, r7
 80065ee:	bd80      	pop	{r7, pc}

080065f0 <HAL_I2C_MasterTxCpltCallback>:
 80065f0:	b480      	push	{r7}
 80065f2:	b083      	sub	sp, #12
 80065f4:	af00      	add	r7, sp, #0
 80065f6:	6078      	str	r0, [r7, #4]
 80065f8:	bf00      	nop
 80065fa:	370c      	adds	r7, #12
 80065fc:	46bd      	mov	sp, r7
 80065fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006602:	4770      	bx	lr

08006604 <HAL_I2C_MasterRxCpltCallback>:
 8006604:	b480      	push	{r7}
 8006606:	b083      	sub	sp, #12
 8006608:	af00      	add	r7, sp, #0
 800660a:	6078      	str	r0, [r7, #4]
 800660c:	bf00      	nop
 800660e:	370c      	adds	r7, #12
 8006610:	46bd      	mov	sp, r7
 8006612:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006616:	4770      	bx	lr

08006618 <HAL_I2C_SlaveTxCpltCallback>:
 8006618:	b480      	push	{r7}
 800661a:	b083      	sub	sp, #12
 800661c:	af00      	add	r7, sp, #0
 800661e:	6078      	str	r0, [r7, #4]
 8006620:	bf00      	nop
 8006622:	370c      	adds	r7, #12
 8006624:	46bd      	mov	sp, r7
 8006626:	f85d 7b04 	ldr.w	r7, [sp], #4
 800662a:	4770      	bx	lr

0800662c <HAL_I2C_SlaveRxCpltCallback>:
 800662c:	b480      	push	{r7}
 800662e:	b083      	sub	sp, #12
 8006630:	af00      	add	r7, sp, #0
 8006632:	6078      	str	r0, [r7, #4]
 8006634:	bf00      	nop
 8006636:	370c      	adds	r7, #12
 8006638:	46bd      	mov	sp, r7
 800663a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800663e:	4770      	bx	lr

08006640 <HAL_I2C_AddrCallback>:
 8006640:	b480      	push	{r7}
 8006642:	b083      	sub	sp, #12
 8006644:	af00      	add	r7, sp, #0
 8006646:	6078      	str	r0, [r7, #4]
 8006648:	460b      	mov	r3, r1
 800664a:	70fb      	strb	r3, [r7, #3]
 800664c:	4613      	mov	r3, r2
 800664e:	803b      	strh	r3, [r7, #0]
 8006650:	bf00      	nop
 8006652:	370c      	adds	r7, #12
 8006654:	46bd      	mov	sp, r7
 8006656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800665a:	4770      	bx	lr

0800665c <HAL_I2C_ListenCpltCallback>:
 800665c:	b480      	push	{r7}
 800665e:	b083      	sub	sp, #12
 8006660:	af00      	add	r7, sp, #0
 8006662:	6078      	str	r0, [r7, #4]
 8006664:	bf00      	nop
 8006666:	370c      	adds	r7, #12
 8006668:	46bd      	mov	sp, r7
 800666a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800666e:	4770      	bx	lr

08006670 <HAL_I2C_MemTxCpltCallback>:
 8006670:	b480      	push	{r7}
 8006672:	b083      	sub	sp, #12
 8006674:	af00      	add	r7, sp, #0
 8006676:	6078      	str	r0, [r7, #4]
 8006678:	bf00      	nop
 800667a:	370c      	adds	r7, #12
 800667c:	46bd      	mov	sp, r7
 800667e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006682:	4770      	bx	lr

08006684 <HAL_I2C_MemRxCpltCallback>:
 8006684:	b480      	push	{r7}
 8006686:	b083      	sub	sp, #12
 8006688:	af00      	add	r7, sp, #0
 800668a:	6078      	str	r0, [r7, #4]
 800668c:	bf00      	nop
 800668e:	370c      	adds	r7, #12
 8006690:	46bd      	mov	sp, r7
 8006692:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006696:	4770      	bx	lr

08006698 <HAL_I2C_ErrorCallback>:
 8006698:	b480      	push	{r7}
 800669a:	b083      	sub	sp, #12
 800669c:	af00      	add	r7, sp, #0
 800669e:	6078      	str	r0, [r7, #4]
 80066a0:	bf00      	nop
 80066a2:	370c      	adds	r7, #12
 80066a4:	46bd      	mov	sp, r7
 80066a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066aa:	4770      	bx	lr

080066ac <HAL_I2C_AbortCpltCallback>:
 80066ac:	b480      	push	{r7}
 80066ae:	b083      	sub	sp, #12
 80066b0:	af00      	add	r7, sp, #0
 80066b2:	6078      	str	r0, [r7, #4]
 80066b4:	bf00      	nop
 80066b6:	370c      	adds	r7, #12
 80066b8:	46bd      	mov	sp, r7
 80066ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066be:	4770      	bx	lr

080066c0 <I2C_MasterTransmit_TXE>:
 80066c0:	b580      	push	{r7, lr}
 80066c2:	b084      	sub	sp, #16
 80066c4:	af00      	add	r7, sp, #0
 80066c6:	6078      	str	r0, [r7, #4]
 80066c8:	687b      	ldr	r3, [r7, #4]
 80066ca:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80066ce:	73fb      	strb	r3, [r7, #15]
 80066d0:	687b      	ldr	r3, [r7, #4]
 80066d2:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80066d6:	73bb      	strb	r3, [r7, #14]
 80066d8:	687b      	ldr	r3, [r7, #4]
 80066da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80066dc:	60bb      	str	r3, [r7, #8]
 80066de:	687b      	ldr	r3, [r7, #4]
 80066e0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80066e2:	2b00      	cmp	r3, #0
 80066e4:	d150      	bne.n	8006788 <I2C_MasterTransmit_TXE+0xc8>
 80066e6:	7bfb      	ldrb	r3, [r7, #15]
 80066e8:	2b21      	cmp	r3, #33	; 0x21
 80066ea:	d14d      	bne.n	8006788 <I2C_MasterTransmit_TXE+0xc8>
 80066ec:	68bb      	ldr	r3, [r7, #8]
 80066ee:	2b08      	cmp	r3, #8
 80066f0:	d01d      	beq.n	800672e <I2C_MasterTransmit_TXE+0x6e>
 80066f2:	68bb      	ldr	r3, [r7, #8]
 80066f4:	2b20      	cmp	r3, #32
 80066f6:	d01a      	beq.n	800672e <I2C_MasterTransmit_TXE+0x6e>
 80066f8:	68bb      	ldr	r3, [r7, #8]
 80066fa:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80066fe:	d016      	beq.n	800672e <I2C_MasterTransmit_TXE+0x6e>
 8006700:	687b      	ldr	r3, [r7, #4]
 8006702:	681b      	ldr	r3, [r3, #0]
 8006704:	685a      	ldr	r2, [r3, #4]
 8006706:	687b      	ldr	r3, [r7, #4]
 8006708:	681b      	ldr	r3, [r3, #0]
 800670a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800670e:	605a      	str	r2, [r3, #4]
 8006710:	687b      	ldr	r3, [r7, #4]
 8006712:	2211      	movs	r2, #17
 8006714:	631a      	str	r2, [r3, #48]	; 0x30
 8006716:	687b      	ldr	r3, [r7, #4]
 8006718:	2200      	movs	r2, #0
 800671a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800671e:	687b      	ldr	r3, [r7, #4]
 8006720:	2220      	movs	r2, #32
 8006722:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006726:	6878      	ldr	r0, [r7, #4]
 8006728:	f7ff ff62 	bl	80065f0 <HAL_I2C_MasterTxCpltCallback>
 800672c:	e060      	b.n	80067f0 <I2C_MasterTransmit_TXE+0x130>
 800672e:	687b      	ldr	r3, [r7, #4]
 8006730:	681b      	ldr	r3, [r3, #0]
 8006732:	685a      	ldr	r2, [r3, #4]
 8006734:	687b      	ldr	r3, [r7, #4]
 8006736:	681b      	ldr	r3, [r3, #0]
 8006738:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800673c:	605a      	str	r2, [r3, #4]
 800673e:	687b      	ldr	r3, [r7, #4]
 8006740:	681b      	ldr	r3, [r3, #0]
 8006742:	681a      	ldr	r2, [r3, #0]
 8006744:	687b      	ldr	r3, [r7, #4]
 8006746:	681b      	ldr	r3, [r3, #0]
 8006748:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800674c:	601a      	str	r2, [r3, #0]
 800674e:	687b      	ldr	r3, [r7, #4]
 8006750:	2200      	movs	r2, #0
 8006752:	631a      	str	r2, [r3, #48]	; 0x30
 8006754:	687b      	ldr	r3, [r7, #4]
 8006756:	2220      	movs	r2, #32
 8006758:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800675c:	687b      	ldr	r3, [r7, #4]
 800675e:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006762:	b2db      	uxtb	r3, r3
 8006764:	2b40      	cmp	r3, #64	; 0x40
 8006766:	d107      	bne.n	8006778 <I2C_MasterTransmit_TXE+0xb8>
 8006768:	687b      	ldr	r3, [r7, #4]
 800676a:	2200      	movs	r2, #0
 800676c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006770:	6878      	ldr	r0, [r7, #4]
 8006772:	f7ff ff7d 	bl	8006670 <HAL_I2C_MemTxCpltCallback>
 8006776:	e03b      	b.n	80067f0 <I2C_MasterTransmit_TXE+0x130>
 8006778:	687b      	ldr	r3, [r7, #4]
 800677a:	2200      	movs	r2, #0
 800677c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006780:	6878      	ldr	r0, [r7, #4]
 8006782:	f7ff ff35 	bl	80065f0 <HAL_I2C_MasterTxCpltCallback>
 8006786:	e033      	b.n	80067f0 <I2C_MasterTransmit_TXE+0x130>
 8006788:	7bfb      	ldrb	r3, [r7, #15]
 800678a:	2b21      	cmp	r3, #33	; 0x21
 800678c:	d005      	beq.n	800679a <I2C_MasterTransmit_TXE+0xda>
 800678e:	7bbb      	ldrb	r3, [r7, #14]
 8006790:	2b40      	cmp	r3, #64	; 0x40
 8006792:	d12d      	bne.n	80067f0 <I2C_MasterTransmit_TXE+0x130>
 8006794:	7bfb      	ldrb	r3, [r7, #15]
 8006796:	2b22      	cmp	r3, #34	; 0x22
 8006798:	d12a      	bne.n	80067f0 <I2C_MasterTransmit_TXE+0x130>
 800679a:	687b      	ldr	r3, [r7, #4]
 800679c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800679e:	b29b      	uxth	r3, r3
 80067a0:	2b00      	cmp	r3, #0
 80067a2:	d108      	bne.n	80067b6 <I2C_MasterTransmit_TXE+0xf6>
 80067a4:	687b      	ldr	r3, [r7, #4]
 80067a6:	681b      	ldr	r3, [r3, #0]
 80067a8:	685a      	ldr	r2, [r3, #4]
 80067aa:	687b      	ldr	r3, [r7, #4]
 80067ac:	681b      	ldr	r3, [r3, #0]
 80067ae:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80067b2:	605a      	str	r2, [r3, #4]
 80067b4:	e01c      	b.n	80067f0 <I2C_MasterTransmit_TXE+0x130>
 80067b6:	687b      	ldr	r3, [r7, #4]
 80067b8:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80067bc:	b2db      	uxtb	r3, r3
 80067be:	2b40      	cmp	r3, #64	; 0x40
 80067c0:	d103      	bne.n	80067ca <I2C_MasterTransmit_TXE+0x10a>
 80067c2:	6878      	ldr	r0, [r7, #4]
 80067c4:	f000 f88e 	bl	80068e4 <I2C_MemoryTransmit_TXE_BTF>
 80067c8:	e012      	b.n	80067f0 <I2C_MasterTransmit_TXE+0x130>
 80067ca:	687b      	ldr	r3, [r7, #4]
 80067cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80067ce:	781a      	ldrb	r2, [r3, #0]
 80067d0:	687b      	ldr	r3, [r7, #4]
 80067d2:	681b      	ldr	r3, [r3, #0]
 80067d4:	611a      	str	r2, [r3, #16]
 80067d6:	687b      	ldr	r3, [r7, #4]
 80067d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80067da:	1c5a      	adds	r2, r3, #1
 80067dc:	687b      	ldr	r3, [r7, #4]
 80067de:	625a      	str	r2, [r3, #36]	; 0x24
 80067e0:	687b      	ldr	r3, [r7, #4]
 80067e2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80067e4:	b29b      	uxth	r3, r3
 80067e6:	3b01      	subs	r3, #1
 80067e8:	b29a      	uxth	r2, r3
 80067ea:	687b      	ldr	r3, [r7, #4]
 80067ec:	855a      	strh	r2, [r3, #42]	; 0x2a
 80067ee:	e7ff      	b.n	80067f0 <I2C_MasterTransmit_TXE+0x130>
 80067f0:	bf00      	nop
 80067f2:	3710      	adds	r7, #16
 80067f4:	46bd      	mov	sp, r7
 80067f6:	bd80      	pop	{r7, pc}

080067f8 <I2C_MasterTransmit_BTF>:
 80067f8:	b580      	push	{r7, lr}
 80067fa:	b084      	sub	sp, #16
 80067fc:	af00      	add	r7, sp, #0
 80067fe:	6078      	str	r0, [r7, #4]
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006804:	60fb      	str	r3, [r7, #12]
 8006806:	687b      	ldr	r3, [r7, #4]
 8006808:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800680c:	b2db      	uxtb	r3, r3
 800680e:	2b21      	cmp	r3, #33	; 0x21
 8006810:	d164      	bne.n	80068dc <I2C_MasterTransmit_BTF+0xe4>
 8006812:	687b      	ldr	r3, [r7, #4]
 8006814:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006816:	b29b      	uxth	r3, r3
 8006818:	2b00      	cmp	r3, #0
 800681a:	d012      	beq.n	8006842 <I2C_MasterTransmit_BTF+0x4a>
 800681c:	687b      	ldr	r3, [r7, #4]
 800681e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006820:	781a      	ldrb	r2, [r3, #0]
 8006822:	687b      	ldr	r3, [r7, #4]
 8006824:	681b      	ldr	r3, [r3, #0]
 8006826:	611a      	str	r2, [r3, #16]
 8006828:	687b      	ldr	r3, [r7, #4]
 800682a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800682c:	1c5a      	adds	r2, r3, #1
 800682e:	687b      	ldr	r3, [r7, #4]
 8006830:	625a      	str	r2, [r3, #36]	; 0x24
 8006832:	687b      	ldr	r3, [r7, #4]
 8006834:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006836:	b29b      	uxth	r3, r3
 8006838:	3b01      	subs	r3, #1
 800683a:	b29a      	uxth	r2, r3
 800683c:	687b      	ldr	r3, [r7, #4]
 800683e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006840:	e04c      	b.n	80068dc <I2C_MasterTransmit_BTF+0xe4>
 8006842:	68fb      	ldr	r3, [r7, #12]
 8006844:	2b08      	cmp	r3, #8
 8006846:	d01d      	beq.n	8006884 <I2C_MasterTransmit_BTF+0x8c>
 8006848:	68fb      	ldr	r3, [r7, #12]
 800684a:	2b20      	cmp	r3, #32
 800684c:	d01a      	beq.n	8006884 <I2C_MasterTransmit_BTF+0x8c>
 800684e:	68fb      	ldr	r3, [r7, #12]
 8006850:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8006854:	d016      	beq.n	8006884 <I2C_MasterTransmit_BTF+0x8c>
 8006856:	687b      	ldr	r3, [r7, #4]
 8006858:	681b      	ldr	r3, [r3, #0]
 800685a:	685a      	ldr	r2, [r3, #4]
 800685c:	687b      	ldr	r3, [r7, #4]
 800685e:	681b      	ldr	r3, [r3, #0]
 8006860:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006864:	605a      	str	r2, [r3, #4]
 8006866:	687b      	ldr	r3, [r7, #4]
 8006868:	2211      	movs	r2, #17
 800686a:	631a      	str	r2, [r3, #48]	; 0x30
 800686c:	687b      	ldr	r3, [r7, #4]
 800686e:	2200      	movs	r2, #0
 8006870:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006874:	687b      	ldr	r3, [r7, #4]
 8006876:	2220      	movs	r2, #32
 8006878:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800687c:	6878      	ldr	r0, [r7, #4]
 800687e:	f7ff feb7 	bl	80065f0 <HAL_I2C_MasterTxCpltCallback>
 8006882:	e02b      	b.n	80068dc <I2C_MasterTransmit_BTF+0xe4>
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	681b      	ldr	r3, [r3, #0]
 8006888:	685a      	ldr	r2, [r3, #4]
 800688a:	687b      	ldr	r3, [r7, #4]
 800688c:	681b      	ldr	r3, [r3, #0]
 800688e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006892:	605a      	str	r2, [r3, #4]
 8006894:	687b      	ldr	r3, [r7, #4]
 8006896:	681b      	ldr	r3, [r3, #0]
 8006898:	681a      	ldr	r2, [r3, #0]
 800689a:	687b      	ldr	r3, [r7, #4]
 800689c:	681b      	ldr	r3, [r3, #0]
 800689e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80068a2:	601a      	str	r2, [r3, #0]
 80068a4:	687b      	ldr	r3, [r7, #4]
 80068a6:	2200      	movs	r2, #0
 80068a8:	631a      	str	r2, [r3, #48]	; 0x30
 80068aa:	687b      	ldr	r3, [r7, #4]
 80068ac:	2220      	movs	r2, #32
 80068ae:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80068b2:	687b      	ldr	r3, [r7, #4]
 80068b4:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80068b8:	b2db      	uxtb	r3, r3
 80068ba:	2b40      	cmp	r3, #64	; 0x40
 80068bc:	d107      	bne.n	80068ce <I2C_MasterTransmit_BTF+0xd6>
 80068be:	687b      	ldr	r3, [r7, #4]
 80068c0:	2200      	movs	r2, #0
 80068c2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80068c6:	6878      	ldr	r0, [r7, #4]
 80068c8:	f7ff fed2 	bl	8006670 <HAL_I2C_MemTxCpltCallback>
 80068cc:	e006      	b.n	80068dc <I2C_MasterTransmit_BTF+0xe4>
 80068ce:	687b      	ldr	r3, [r7, #4]
 80068d0:	2200      	movs	r2, #0
 80068d2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80068d6:	6878      	ldr	r0, [r7, #4]
 80068d8:	f7ff fe8a 	bl	80065f0 <HAL_I2C_MasterTxCpltCallback>
 80068dc:	bf00      	nop
 80068de:	3710      	adds	r7, #16
 80068e0:	46bd      	mov	sp, r7
 80068e2:	bd80      	pop	{r7, pc}

080068e4 <I2C_MemoryTransmit_TXE_BTF>:
 80068e4:	b580      	push	{r7, lr}
 80068e6:	b084      	sub	sp, #16
 80068e8:	af00      	add	r7, sp, #0
 80068ea:	6078      	str	r0, [r7, #4]
 80068ec:	687b      	ldr	r3, [r7, #4]
 80068ee:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80068f2:	73fb      	strb	r3, [r7, #15]
 80068f4:	687b      	ldr	r3, [r7, #4]
 80068f6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80068f8:	2b00      	cmp	r3, #0
 80068fa:	d11d      	bne.n	8006938 <I2C_MemoryTransmit_TXE_BTF+0x54>
 80068fc:	687b      	ldr	r3, [r7, #4]
 80068fe:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006900:	2b01      	cmp	r3, #1
 8006902:	d10b      	bne.n	800691c <I2C_MemoryTransmit_TXE_BTF+0x38>
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006908:	b2da      	uxtb	r2, r3
 800690a:	687b      	ldr	r3, [r7, #4]
 800690c:	681b      	ldr	r3, [r3, #0]
 800690e:	611a      	str	r2, [r3, #16]
 8006910:	687b      	ldr	r3, [r7, #4]
 8006912:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006914:	1c9a      	adds	r2, r3, #2
 8006916:	687b      	ldr	r3, [r7, #4]
 8006918:	651a      	str	r2, [r3, #80]	; 0x50
 800691a:	e073      	b.n	8006a04 <I2C_MemoryTransmit_TXE_BTF+0x120>
 800691c:	687b      	ldr	r3, [r7, #4]
 800691e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006920:	b29b      	uxth	r3, r3
 8006922:	121b      	asrs	r3, r3, #8
 8006924:	b2da      	uxtb	r2, r3
 8006926:	687b      	ldr	r3, [r7, #4]
 8006928:	681b      	ldr	r3, [r3, #0]
 800692a:	611a      	str	r2, [r3, #16]
 800692c:	687b      	ldr	r3, [r7, #4]
 800692e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006930:	1c5a      	adds	r2, r3, #1
 8006932:	687b      	ldr	r3, [r7, #4]
 8006934:	651a      	str	r2, [r3, #80]	; 0x50
 8006936:	e065      	b.n	8006a04 <I2C_MemoryTransmit_TXE_BTF+0x120>
 8006938:	687b      	ldr	r3, [r7, #4]
 800693a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800693c:	2b01      	cmp	r3, #1
 800693e:	d10b      	bne.n	8006958 <I2C_MemoryTransmit_TXE_BTF+0x74>
 8006940:	687b      	ldr	r3, [r7, #4]
 8006942:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006944:	b2da      	uxtb	r2, r3
 8006946:	687b      	ldr	r3, [r7, #4]
 8006948:	681b      	ldr	r3, [r3, #0]
 800694a:	611a      	str	r2, [r3, #16]
 800694c:	687b      	ldr	r3, [r7, #4]
 800694e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006950:	1c5a      	adds	r2, r3, #1
 8006952:	687b      	ldr	r3, [r7, #4]
 8006954:	651a      	str	r2, [r3, #80]	; 0x50
 8006956:	e055      	b.n	8006a04 <I2C_MemoryTransmit_TXE_BTF+0x120>
 8006958:	687b      	ldr	r3, [r7, #4]
 800695a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800695c:	2b02      	cmp	r3, #2
 800695e:	d151      	bne.n	8006a04 <I2C_MemoryTransmit_TXE_BTF+0x120>
 8006960:	7bfb      	ldrb	r3, [r7, #15]
 8006962:	2b22      	cmp	r3, #34	; 0x22
 8006964:	d10d      	bne.n	8006982 <I2C_MemoryTransmit_TXE_BTF+0x9e>
 8006966:	687b      	ldr	r3, [r7, #4]
 8006968:	681b      	ldr	r3, [r3, #0]
 800696a:	681a      	ldr	r2, [r3, #0]
 800696c:	687b      	ldr	r3, [r7, #4]
 800696e:	681b      	ldr	r3, [r3, #0]
 8006970:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006974:	601a      	str	r2, [r3, #0]
 8006976:	687b      	ldr	r3, [r7, #4]
 8006978:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800697a:	1c5a      	adds	r2, r3, #1
 800697c:	687b      	ldr	r3, [r7, #4]
 800697e:	651a      	str	r2, [r3, #80]	; 0x50
 8006980:	e040      	b.n	8006a04 <I2C_MemoryTransmit_TXE_BTF+0x120>
 8006982:	687b      	ldr	r3, [r7, #4]
 8006984:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006986:	b29b      	uxth	r3, r3
 8006988:	2b00      	cmp	r3, #0
 800698a:	d015      	beq.n	80069b8 <I2C_MemoryTransmit_TXE_BTF+0xd4>
 800698c:	7bfb      	ldrb	r3, [r7, #15]
 800698e:	2b21      	cmp	r3, #33	; 0x21
 8006990:	d112      	bne.n	80069b8 <I2C_MemoryTransmit_TXE_BTF+0xd4>
 8006992:	687b      	ldr	r3, [r7, #4]
 8006994:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006996:	781a      	ldrb	r2, [r3, #0]
 8006998:	687b      	ldr	r3, [r7, #4]
 800699a:	681b      	ldr	r3, [r3, #0]
 800699c:	611a      	str	r2, [r3, #16]
 800699e:	687b      	ldr	r3, [r7, #4]
 80069a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80069a2:	1c5a      	adds	r2, r3, #1
 80069a4:	687b      	ldr	r3, [r7, #4]
 80069a6:	625a      	str	r2, [r3, #36]	; 0x24
 80069a8:	687b      	ldr	r3, [r7, #4]
 80069aa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80069ac:	b29b      	uxth	r3, r3
 80069ae:	3b01      	subs	r3, #1
 80069b0:	b29a      	uxth	r2, r3
 80069b2:	687b      	ldr	r3, [r7, #4]
 80069b4:	855a      	strh	r2, [r3, #42]	; 0x2a
 80069b6:	e025      	b.n	8006a04 <I2C_MemoryTransmit_TXE_BTF+0x120>
 80069b8:	687b      	ldr	r3, [r7, #4]
 80069ba:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80069bc:	b29b      	uxth	r3, r3
 80069be:	2b00      	cmp	r3, #0
 80069c0:	d120      	bne.n	8006a04 <I2C_MemoryTransmit_TXE_BTF+0x120>
 80069c2:	7bfb      	ldrb	r3, [r7, #15]
 80069c4:	2b21      	cmp	r3, #33	; 0x21
 80069c6:	d11d      	bne.n	8006a04 <I2C_MemoryTransmit_TXE_BTF+0x120>
 80069c8:	687b      	ldr	r3, [r7, #4]
 80069ca:	681b      	ldr	r3, [r3, #0]
 80069cc:	685a      	ldr	r2, [r3, #4]
 80069ce:	687b      	ldr	r3, [r7, #4]
 80069d0:	681b      	ldr	r3, [r3, #0]
 80069d2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80069d6:	605a      	str	r2, [r3, #4]
 80069d8:	687b      	ldr	r3, [r7, #4]
 80069da:	681b      	ldr	r3, [r3, #0]
 80069dc:	681a      	ldr	r2, [r3, #0]
 80069de:	687b      	ldr	r3, [r7, #4]
 80069e0:	681b      	ldr	r3, [r3, #0]
 80069e2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80069e6:	601a      	str	r2, [r3, #0]
 80069e8:	687b      	ldr	r3, [r7, #4]
 80069ea:	2200      	movs	r2, #0
 80069ec:	631a      	str	r2, [r3, #48]	; 0x30
 80069ee:	687b      	ldr	r3, [r7, #4]
 80069f0:	2220      	movs	r2, #32
 80069f2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80069f6:	687b      	ldr	r3, [r7, #4]
 80069f8:	2200      	movs	r2, #0
 80069fa:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80069fe:	6878      	ldr	r0, [r7, #4]
 8006a00:	f7ff fe36 	bl	8006670 <HAL_I2C_MemTxCpltCallback>
 8006a04:	bf00      	nop
 8006a06:	3710      	adds	r7, #16
 8006a08:	46bd      	mov	sp, r7
 8006a0a:	bd80      	pop	{r7, pc}

08006a0c <I2C_MasterReceive_RXNE>:
 8006a0c:	b580      	push	{r7, lr}
 8006a0e:	b084      	sub	sp, #16
 8006a10:	af00      	add	r7, sp, #0
 8006a12:	6078      	str	r0, [r7, #4]
 8006a14:	687b      	ldr	r3, [r7, #4]
 8006a16:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006a1a:	b2db      	uxtb	r3, r3
 8006a1c:	2b22      	cmp	r3, #34	; 0x22
 8006a1e:	f040 80ac 	bne.w	8006b7a <I2C_MasterReceive_RXNE+0x16e>
 8006a22:	687b      	ldr	r3, [r7, #4]
 8006a24:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006a26:	b29b      	uxth	r3, r3
 8006a28:	60fb      	str	r3, [r7, #12]
 8006a2a:	68fb      	ldr	r3, [r7, #12]
 8006a2c:	2b03      	cmp	r3, #3
 8006a2e:	d921      	bls.n	8006a74 <I2C_MasterReceive_RXNE+0x68>
 8006a30:	687b      	ldr	r3, [r7, #4]
 8006a32:	681b      	ldr	r3, [r3, #0]
 8006a34:	691a      	ldr	r2, [r3, #16]
 8006a36:	687b      	ldr	r3, [r7, #4]
 8006a38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006a3a:	b2d2      	uxtb	r2, r2
 8006a3c:	701a      	strb	r2, [r3, #0]
 8006a3e:	687b      	ldr	r3, [r7, #4]
 8006a40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006a42:	1c5a      	adds	r2, r3, #1
 8006a44:	687b      	ldr	r3, [r7, #4]
 8006a46:	625a      	str	r2, [r3, #36]	; 0x24
 8006a48:	687b      	ldr	r3, [r7, #4]
 8006a4a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006a4c:	b29b      	uxth	r3, r3
 8006a4e:	3b01      	subs	r3, #1
 8006a50:	b29a      	uxth	r2, r3
 8006a52:	687b      	ldr	r3, [r7, #4]
 8006a54:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006a56:	687b      	ldr	r3, [r7, #4]
 8006a58:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006a5a:	b29b      	uxth	r3, r3
 8006a5c:	2b03      	cmp	r3, #3
 8006a5e:	f040 808c 	bne.w	8006b7a <I2C_MasterReceive_RXNE+0x16e>
 8006a62:	687b      	ldr	r3, [r7, #4]
 8006a64:	681b      	ldr	r3, [r3, #0]
 8006a66:	685a      	ldr	r2, [r3, #4]
 8006a68:	687b      	ldr	r3, [r7, #4]
 8006a6a:	681b      	ldr	r3, [r3, #0]
 8006a6c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006a70:	605a      	str	r2, [r3, #4]
 8006a72:	e082      	b.n	8006b7a <I2C_MasterReceive_RXNE+0x16e>
 8006a74:	687b      	ldr	r3, [r7, #4]
 8006a76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006a78:	2b02      	cmp	r3, #2
 8006a7a:	d075      	beq.n	8006b68 <I2C_MasterReceive_RXNE+0x15c>
 8006a7c:	68fb      	ldr	r3, [r7, #12]
 8006a7e:	2b01      	cmp	r3, #1
 8006a80:	d002      	beq.n	8006a88 <I2C_MasterReceive_RXNE+0x7c>
 8006a82:	68fb      	ldr	r3, [r7, #12]
 8006a84:	2b00      	cmp	r3, #0
 8006a86:	d16f      	bne.n	8006b68 <I2C_MasterReceive_RXNE+0x15c>
 8006a88:	6878      	ldr	r0, [r7, #4]
 8006a8a:	f001 facf 	bl	800802c <I2C_WaitOnSTOPRequestThroughIT>
 8006a8e:	4603      	mov	r3, r0
 8006a90:	2b00      	cmp	r3, #0
 8006a92:	d142      	bne.n	8006b1a <I2C_MasterReceive_RXNE+0x10e>
 8006a94:	687b      	ldr	r3, [r7, #4]
 8006a96:	681b      	ldr	r3, [r3, #0]
 8006a98:	681a      	ldr	r2, [r3, #0]
 8006a9a:	687b      	ldr	r3, [r7, #4]
 8006a9c:	681b      	ldr	r3, [r3, #0]
 8006a9e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006aa2:	601a      	str	r2, [r3, #0]
 8006aa4:	687b      	ldr	r3, [r7, #4]
 8006aa6:	681b      	ldr	r3, [r3, #0]
 8006aa8:	685a      	ldr	r2, [r3, #4]
 8006aaa:	687b      	ldr	r3, [r7, #4]
 8006aac:	681b      	ldr	r3, [r3, #0]
 8006aae:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006ab2:	605a      	str	r2, [r3, #4]
 8006ab4:	687b      	ldr	r3, [r7, #4]
 8006ab6:	681b      	ldr	r3, [r3, #0]
 8006ab8:	691a      	ldr	r2, [r3, #16]
 8006aba:	687b      	ldr	r3, [r7, #4]
 8006abc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006abe:	b2d2      	uxtb	r2, r2
 8006ac0:	701a      	strb	r2, [r3, #0]
 8006ac2:	687b      	ldr	r3, [r7, #4]
 8006ac4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006ac6:	1c5a      	adds	r2, r3, #1
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	625a      	str	r2, [r3, #36]	; 0x24
 8006acc:	687b      	ldr	r3, [r7, #4]
 8006ace:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006ad0:	b29b      	uxth	r3, r3
 8006ad2:	3b01      	subs	r3, #1
 8006ad4:	b29a      	uxth	r2, r3
 8006ad6:	687b      	ldr	r3, [r7, #4]
 8006ad8:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006ada:	687b      	ldr	r3, [r7, #4]
 8006adc:	2220      	movs	r2, #32
 8006ade:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006ae2:	687b      	ldr	r3, [r7, #4]
 8006ae4:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006ae8:	b2db      	uxtb	r3, r3
 8006aea:	2b40      	cmp	r3, #64	; 0x40
 8006aec:	d10a      	bne.n	8006b04 <I2C_MasterReceive_RXNE+0xf8>
 8006aee:	687b      	ldr	r3, [r7, #4]
 8006af0:	2200      	movs	r2, #0
 8006af2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006af6:	687b      	ldr	r3, [r7, #4]
 8006af8:	2200      	movs	r2, #0
 8006afa:	631a      	str	r2, [r3, #48]	; 0x30
 8006afc:	6878      	ldr	r0, [r7, #4]
 8006afe:	f7ff fdc1 	bl	8006684 <HAL_I2C_MemRxCpltCallback>
 8006b02:	e03a      	b.n	8006b7a <I2C_MasterReceive_RXNE+0x16e>
 8006b04:	687b      	ldr	r3, [r7, #4]
 8006b06:	2200      	movs	r2, #0
 8006b08:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006b0c:	687b      	ldr	r3, [r7, #4]
 8006b0e:	2212      	movs	r2, #18
 8006b10:	631a      	str	r2, [r3, #48]	; 0x30
 8006b12:	6878      	ldr	r0, [r7, #4]
 8006b14:	f7ff fd76 	bl	8006604 <HAL_I2C_MasterRxCpltCallback>
 8006b18:	e02f      	b.n	8006b7a <I2C_MasterReceive_RXNE+0x16e>
 8006b1a:	687b      	ldr	r3, [r7, #4]
 8006b1c:	681b      	ldr	r3, [r3, #0]
 8006b1e:	685a      	ldr	r2, [r3, #4]
 8006b20:	687b      	ldr	r3, [r7, #4]
 8006b22:	681b      	ldr	r3, [r3, #0]
 8006b24:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006b28:	605a      	str	r2, [r3, #4]
 8006b2a:	687b      	ldr	r3, [r7, #4]
 8006b2c:	681b      	ldr	r3, [r3, #0]
 8006b2e:	691a      	ldr	r2, [r3, #16]
 8006b30:	687b      	ldr	r3, [r7, #4]
 8006b32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006b34:	b2d2      	uxtb	r2, r2
 8006b36:	701a      	strb	r2, [r3, #0]
 8006b38:	687b      	ldr	r3, [r7, #4]
 8006b3a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006b3c:	1c5a      	adds	r2, r3, #1
 8006b3e:	687b      	ldr	r3, [r7, #4]
 8006b40:	625a      	str	r2, [r3, #36]	; 0x24
 8006b42:	687b      	ldr	r3, [r7, #4]
 8006b44:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006b46:	b29b      	uxth	r3, r3
 8006b48:	3b01      	subs	r3, #1
 8006b4a:	b29a      	uxth	r2, r3
 8006b4c:	687b      	ldr	r3, [r7, #4]
 8006b4e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006b50:	687b      	ldr	r3, [r7, #4]
 8006b52:	2220      	movs	r2, #32
 8006b54:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006b58:	687b      	ldr	r3, [r7, #4]
 8006b5a:	2200      	movs	r2, #0
 8006b5c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006b60:	6878      	ldr	r0, [r7, #4]
 8006b62:	f7ff fd99 	bl	8006698 <HAL_I2C_ErrorCallback>
 8006b66:	e008      	b.n	8006b7a <I2C_MasterReceive_RXNE+0x16e>
 8006b68:	687b      	ldr	r3, [r7, #4]
 8006b6a:	681b      	ldr	r3, [r3, #0]
 8006b6c:	685a      	ldr	r2, [r3, #4]
 8006b6e:	687b      	ldr	r3, [r7, #4]
 8006b70:	681b      	ldr	r3, [r3, #0]
 8006b72:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006b76:	605a      	str	r2, [r3, #4]
 8006b78:	e7ff      	b.n	8006b7a <I2C_MasterReceive_RXNE+0x16e>
 8006b7a:	bf00      	nop
 8006b7c:	3710      	adds	r7, #16
 8006b7e:	46bd      	mov	sp, r7
 8006b80:	bd80      	pop	{r7, pc}

08006b82 <I2C_MasterReceive_BTF>:
 8006b82:	b580      	push	{r7, lr}
 8006b84:	b084      	sub	sp, #16
 8006b86:	af00      	add	r7, sp, #0
 8006b88:	6078      	str	r0, [r7, #4]
 8006b8a:	687b      	ldr	r3, [r7, #4]
 8006b8c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b8e:	60fb      	str	r3, [r7, #12]
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006b94:	b29b      	uxth	r3, r3
 8006b96:	2b04      	cmp	r3, #4
 8006b98:	d11b      	bne.n	8006bd2 <I2C_MasterReceive_BTF+0x50>
 8006b9a:	687b      	ldr	r3, [r7, #4]
 8006b9c:	681b      	ldr	r3, [r3, #0]
 8006b9e:	685a      	ldr	r2, [r3, #4]
 8006ba0:	687b      	ldr	r3, [r7, #4]
 8006ba2:	681b      	ldr	r3, [r3, #0]
 8006ba4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006ba8:	605a      	str	r2, [r3, #4]
 8006baa:	687b      	ldr	r3, [r7, #4]
 8006bac:	681b      	ldr	r3, [r3, #0]
 8006bae:	691a      	ldr	r2, [r3, #16]
 8006bb0:	687b      	ldr	r3, [r7, #4]
 8006bb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006bb4:	b2d2      	uxtb	r2, r2
 8006bb6:	701a      	strb	r2, [r3, #0]
 8006bb8:	687b      	ldr	r3, [r7, #4]
 8006bba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006bbc:	1c5a      	adds	r2, r3, #1
 8006bbe:	687b      	ldr	r3, [r7, #4]
 8006bc0:	625a      	str	r2, [r3, #36]	; 0x24
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006bc6:	b29b      	uxth	r3, r3
 8006bc8:	3b01      	subs	r3, #1
 8006bca:	b29a      	uxth	r2, r3
 8006bcc:	687b      	ldr	r3, [r7, #4]
 8006bce:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006bd0:	e0bd      	b.n	8006d4e <I2C_MasterReceive_BTF+0x1cc>
 8006bd2:	687b      	ldr	r3, [r7, #4]
 8006bd4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006bd6:	b29b      	uxth	r3, r3
 8006bd8:	2b03      	cmp	r3, #3
 8006bda:	d129      	bne.n	8006c30 <I2C_MasterReceive_BTF+0xae>
 8006bdc:	687b      	ldr	r3, [r7, #4]
 8006bde:	681b      	ldr	r3, [r3, #0]
 8006be0:	685a      	ldr	r2, [r3, #4]
 8006be2:	687b      	ldr	r3, [r7, #4]
 8006be4:	681b      	ldr	r3, [r3, #0]
 8006be6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006bea:	605a      	str	r2, [r3, #4]
 8006bec:	68fb      	ldr	r3, [r7, #12]
 8006bee:	2b04      	cmp	r3, #4
 8006bf0:	d00a      	beq.n	8006c08 <I2C_MasterReceive_BTF+0x86>
 8006bf2:	68fb      	ldr	r3, [r7, #12]
 8006bf4:	2b02      	cmp	r3, #2
 8006bf6:	d007      	beq.n	8006c08 <I2C_MasterReceive_BTF+0x86>
 8006bf8:	687b      	ldr	r3, [r7, #4]
 8006bfa:	681b      	ldr	r3, [r3, #0]
 8006bfc:	681a      	ldr	r2, [r3, #0]
 8006bfe:	687b      	ldr	r3, [r7, #4]
 8006c00:	681b      	ldr	r3, [r3, #0]
 8006c02:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006c06:	601a      	str	r2, [r3, #0]
 8006c08:	687b      	ldr	r3, [r7, #4]
 8006c0a:	681b      	ldr	r3, [r3, #0]
 8006c0c:	691a      	ldr	r2, [r3, #16]
 8006c0e:	687b      	ldr	r3, [r7, #4]
 8006c10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006c12:	b2d2      	uxtb	r2, r2
 8006c14:	701a      	strb	r2, [r3, #0]
 8006c16:	687b      	ldr	r3, [r7, #4]
 8006c18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006c1a:	1c5a      	adds	r2, r3, #1
 8006c1c:	687b      	ldr	r3, [r7, #4]
 8006c1e:	625a      	str	r2, [r3, #36]	; 0x24
 8006c20:	687b      	ldr	r3, [r7, #4]
 8006c22:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006c24:	b29b      	uxth	r3, r3
 8006c26:	3b01      	subs	r3, #1
 8006c28:	b29a      	uxth	r2, r3
 8006c2a:	687b      	ldr	r3, [r7, #4]
 8006c2c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006c2e:	e08e      	b.n	8006d4e <I2C_MasterReceive_BTF+0x1cc>
 8006c30:	687b      	ldr	r3, [r7, #4]
 8006c32:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006c34:	b29b      	uxth	r3, r3
 8006c36:	2b02      	cmp	r3, #2
 8006c38:	d176      	bne.n	8006d28 <I2C_MasterReceive_BTF+0x1a6>
 8006c3a:	68fb      	ldr	r3, [r7, #12]
 8006c3c:	2b01      	cmp	r3, #1
 8006c3e:	d002      	beq.n	8006c46 <I2C_MasterReceive_BTF+0xc4>
 8006c40:	68fb      	ldr	r3, [r7, #12]
 8006c42:	2b10      	cmp	r3, #16
 8006c44:	d108      	bne.n	8006c58 <I2C_MasterReceive_BTF+0xd6>
 8006c46:	687b      	ldr	r3, [r7, #4]
 8006c48:	681b      	ldr	r3, [r3, #0]
 8006c4a:	681a      	ldr	r2, [r3, #0]
 8006c4c:	687b      	ldr	r3, [r7, #4]
 8006c4e:	681b      	ldr	r3, [r3, #0]
 8006c50:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006c54:	601a      	str	r2, [r3, #0]
 8006c56:	e019      	b.n	8006c8c <I2C_MasterReceive_BTF+0x10a>
 8006c58:	68fb      	ldr	r3, [r7, #12]
 8006c5a:	2b04      	cmp	r3, #4
 8006c5c:	d002      	beq.n	8006c64 <I2C_MasterReceive_BTF+0xe2>
 8006c5e:	68fb      	ldr	r3, [r7, #12]
 8006c60:	2b02      	cmp	r3, #2
 8006c62:	d108      	bne.n	8006c76 <I2C_MasterReceive_BTF+0xf4>
 8006c64:	687b      	ldr	r3, [r7, #4]
 8006c66:	681b      	ldr	r3, [r3, #0]
 8006c68:	681a      	ldr	r2, [r3, #0]
 8006c6a:	687b      	ldr	r3, [r7, #4]
 8006c6c:	681b      	ldr	r3, [r3, #0]
 8006c6e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006c72:	601a      	str	r2, [r3, #0]
 8006c74:	e00a      	b.n	8006c8c <I2C_MasterReceive_BTF+0x10a>
 8006c76:	68fb      	ldr	r3, [r7, #12]
 8006c78:	2b10      	cmp	r3, #16
 8006c7a:	d007      	beq.n	8006c8c <I2C_MasterReceive_BTF+0x10a>
 8006c7c:	687b      	ldr	r3, [r7, #4]
 8006c7e:	681b      	ldr	r3, [r3, #0]
 8006c80:	681a      	ldr	r2, [r3, #0]
 8006c82:	687b      	ldr	r3, [r7, #4]
 8006c84:	681b      	ldr	r3, [r3, #0]
 8006c86:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006c8a:	601a      	str	r2, [r3, #0]
 8006c8c:	687b      	ldr	r3, [r7, #4]
 8006c8e:	681b      	ldr	r3, [r3, #0]
 8006c90:	691a      	ldr	r2, [r3, #16]
 8006c92:	687b      	ldr	r3, [r7, #4]
 8006c94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006c96:	b2d2      	uxtb	r2, r2
 8006c98:	701a      	strb	r2, [r3, #0]
 8006c9a:	687b      	ldr	r3, [r7, #4]
 8006c9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006c9e:	1c5a      	adds	r2, r3, #1
 8006ca0:	687b      	ldr	r3, [r7, #4]
 8006ca2:	625a      	str	r2, [r3, #36]	; 0x24
 8006ca4:	687b      	ldr	r3, [r7, #4]
 8006ca6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006ca8:	b29b      	uxth	r3, r3
 8006caa:	3b01      	subs	r3, #1
 8006cac:	b29a      	uxth	r2, r3
 8006cae:	687b      	ldr	r3, [r7, #4]
 8006cb0:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	681b      	ldr	r3, [r3, #0]
 8006cb6:	691a      	ldr	r2, [r3, #16]
 8006cb8:	687b      	ldr	r3, [r7, #4]
 8006cba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006cbc:	b2d2      	uxtb	r2, r2
 8006cbe:	701a      	strb	r2, [r3, #0]
 8006cc0:	687b      	ldr	r3, [r7, #4]
 8006cc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006cc4:	1c5a      	adds	r2, r3, #1
 8006cc6:	687b      	ldr	r3, [r7, #4]
 8006cc8:	625a      	str	r2, [r3, #36]	; 0x24
 8006cca:	687b      	ldr	r3, [r7, #4]
 8006ccc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006cce:	b29b      	uxth	r3, r3
 8006cd0:	3b01      	subs	r3, #1
 8006cd2:	b29a      	uxth	r2, r3
 8006cd4:	687b      	ldr	r3, [r7, #4]
 8006cd6:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006cd8:	687b      	ldr	r3, [r7, #4]
 8006cda:	681b      	ldr	r3, [r3, #0]
 8006cdc:	685a      	ldr	r2, [r3, #4]
 8006cde:	687b      	ldr	r3, [r7, #4]
 8006ce0:	681b      	ldr	r3, [r3, #0]
 8006ce2:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8006ce6:	605a      	str	r2, [r3, #4]
 8006ce8:	687b      	ldr	r3, [r7, #4]
 8006cea:	2220      	movs	r2, #32
 8006cec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006cf0:	687b      	ldr	r3, [r7, #4]
 8006cf2:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006cf6:	b2db      	uxtb	r3, r3
 8006cf8:	2b40      	cmp	r3, #64	; 0x40
 8006cfa:	d10a      	bne.n	8006d12 <I2C_MasterReceive_BTF+0x190>
 8006cfc:	687b      	ldr	r3, [r7, #4]
 8006cfe:	2200      	movs	r2, #0
 8006d00:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006d04:	687b      	ldr	r3, [r7, #4]
 8006d06:	2200      	movs	r2, #0
 8006d08:	631a      	str	r2, [r3, #48]	; 0x30
 8006d0a:	6878      	ldr	r0, [r7, #4]
 8006d0c:	f7ff fcba 	bl	8006684 <HAL_I2C_MemRxCpltCallback>
 8006d10:	e01d      	b.n	8006d4e <I2C_MasterReceive_BTF+0x1cc>
 8006d12:	687b      	ldr	r3, [r7, #4]
 8006d14:	2200      	movs	r2, #0
 8006d16:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006d1a:	687b      	ldr	r3, [r7, #4]
 8006d1c:	2212      	movs	r2, #18
 8006d1e:	631a      	str	r2, [r3, #48]	; 0x30
 8006d20:	6878      	ldr	r0, [r7, #4]
 8006d22:	f7ff fc6f 	bl	8006604 <HAL_I2C_MasterRxCpltCallback>
 8006d26:	e012      	b.n	8006d4e <I2C_MasterReceive_BTF+0x1cc>
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	681b      	ldr	r3, [r3, #0]
 8006d2c:	691a      	ldr	r2, [r3, #16]
 8006d2e:	687b      	ldr	r3, [r7, #4]
 8006d30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006d32:	b2d2      	uxtb	r2, r2
 8006d34:	701a      	strb	r2, [r3, #0]
 8006d36:	687b      	ldr	r3, [r7, #4]
 8006d38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006d3a:	1c5a      	adds	r2, r3, #1
 8006d3c:	687b      	ldr	r3, [r7, #4]
 8006d3e:	625a      	str	r2, [r3, #36]	; 0x24
 8006d40:	687b      	ldr	r3, [r7, #4]
 8006d42:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006d44:	b29b      	uxth	r3, r3
 8006d46:	3b01      	subs	r3, #1
 8006d48:	b29a      	uxth	r2, r3
 8006d4a:	687b      	ldr	r3, [r7, #4]
 8006d4c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006d4e:	bf00      	nop
 8006d50:	3710      	adds	r7, #16
 8006d52:	46bd      	mov	sp, r7
 8006d54:	bd80      	pop	{r7, pc}

08006d56 <I2C_Master_SB>:
 8006d56:	b480      	push	{r7}
 8006d58:	b083      	sub	sp, #12
 8006d5a:	af00      	add	r7, sp, #0
 8006d5c:	6078      	str	r0, [r7, #4]
 8006d5e:	687b      	ldr	r3, [r7, #4]
 8006d60:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006d64:	b2db      	uxtb	r3, r3
 8006d66:	2b40      	cmp	r3, #64	; 0x40
 8006d68:	d117      	bne.n	8006d9a <I2C_Master_SB+0x44>
 8006d6a:	687b      	ldr	r3, [r7, #4]
 8006d6c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006d6e:	2b00      	cmp	r3, #0
 8006d70:	d109      	bne.n	8006d86 <I2C_Master_SB+0x30>
 8006d72:	687b      	ldr	r3, [r7, #4]
 8006d74:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006d76:	b2db      	uxtb	r3, r3
 8006d78:	461a      	mov	r2, r3
 8006d7a:	687b      	ldr	r3, [r7, #4]
 8006d7c:	681b      	ldr	r3, [r3, #0]
 8006d7e:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8006d82:	611a      	str	r2, [r3, #16]
 8006d84:	e067      	b.n	8006e56 <I2C_Master_SB+0x100>
 8006d86:	687b      	ldr	r3, [r7, #4]
 8006d88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006d8a:	b2db      	uxtb	r3, r3
 8006d8c:	f043 0301 	orr.w	r3, r3, #1
 8006d90:	b2da      	uxtb	r2, r3
 8006d92:	687b      	ldr	r3, [r7, #4]
 8006d94:	681b      	ldr	r3, [r3, #0]
 8006d96:	611a      	str	r2, [r3, #16]
 8006d98:	e05d      	b.n	8006e56 <I2C_Master_SB+0x100>
 8006d9a:	687b      	ldr	r3, [r7, #4]
 8006d9c:	691b      	ldr	r3, [r3, #16]
 8006d9e:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8006da2:	d133      	bne.n	8006e0c <I2C_Master_SB+0xb6>
 8006da4:	687b      	ldr	r3, [r7, #4]
 8006da6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006daa:	b2db      	uxtb	r3, r3
 8006dac:	2b21      	cmp	r3, #33	; 0x21
 8006dae:	d109      	bne.n	8006dc4 <I2C_Master_SB+0x6e>
 8006db0:	687b      	ldr	r3, [r7, #4]
 8006db2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006db4:	b2db      	uxtb	r3, r3
 8006db6:	461a      	mov	r2, r3
 8006db8:	687b      	ldr	r3, [r7, #4]
 8006dba:	681b      	ldr	r3, [r3, #0]
 8006dbc:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8006dc0:	611a      	str	r2, [r3, #16]
 8006dc2:	e008      	b.n	8006dd6 <I2C_Master_SB+0x80>
 8006dc4:	687b      	ldr	r3, [r7, #4]
 8006dc6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006dc8:	b2db      	uxtb	r3, r3
 8006dca:	f043 0301 	orr.w	r3, r3, #1
 8006dce:	b2da      	uxtb	r2, r3
 8006dd0:	687b      	ldr	r3, [r7, #4]
 8006dd2:	681b      	ldr	r3, [r3, #0]
 8006dd4:	611a      	str	r2, [r3, #16]
 8006dd6:	687b      	ldr	r3, [r7, #4]
 8006dd8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006dda:	2b00      	cmp	r3, #0
 8006ddc:	d004      	beq.n	8006de8 <I2C_Master_SB+0x92>
 8006dde:	687b      	ldr	r3, [r7, #4]
 8006de0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006de2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006de4:	2b00      	cmp	r3, #0
 8006de6:	d108      	bne.n	8006dfa <I2C_Master_SB+0xa4>
 8006de8:	687b      	ldr	r3, [r7, #4]
 8006dea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006dec:	2b00      	cmp	r3, #0
 8006dee:	d032      	beq.n	8006e56 <I2C_Master_SB+0x100>
 8006df0:	687b      	ldr	r3, [r7, #4]
 8006df2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006df4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006df6:	2b00      	cmp	r3, #0
 8006df8:	d02d      	beq.n	8006e56 <I2C_Master_SB+0x100>
 8006dfa:	687b      	ldr	r3, [r7, #4]
 8006dfc:	681b      	ldr	r3, [r3, #0]
 8006dfe:	685a      	ldr	r2, [r3, #4]
 8006e00:	687b      	ldr	r3, [r7, #4]
 8006e02:	681b      	ldr	r3, [r3, #0]
 8006e04:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006e08:	605a      	str	r2, [r3, #4]
 8006e0a:	e024      	b.n	8006e56 <I2C_Master_SB+0x100>
 8006e0c:	687b      	ldr	r3, [r7, #4]
 8006e0e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006e10:	2b00      	cmp	r3, #0
 8006e12:	d10e      	bne.n	8006e32 <I2C_Master_SB+0xdc>
 8006e14:	687b      	ldr	r3, [r7, #4]
 8006e16:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e18:	b29b      	uxth	r3, r3
 8006e1a:	11db      	asrs	r3, r3, #7
 8006e1c:	b2db      	uxtb	r3, r3
 8006e1e:	f003 0306 	and.w	r3, r3, #6
 8006e22:	b2db      	uxtb	r3, r3
 8006e24:	f063 030f 	orn	r3, r3, #15
 8006e28:	b2da      	uxtb	r2, r3
 8006e2a:	687b      	ldr	r3, [r7, #4]
 8006e2c:	681b      	ldr	r3, [r3, #0]
 8006e2e:	611a      	str	r2, [r3, #16]
 8006e30:	e011      	b.n	8006e56 <I2C_Master_SB+0x100>
 8006e32:	687b      	ldr	r3, [r7, #4]
 8006e34:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006e36:	2b01      	cmp	r3, #1
 8006e38:	d10d      	bne.n	8006e56 <I2C_Master_SB+0x100>
 8006e3a:	687b      	ldr	r3, [r7, #4]
 8006e3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e3e:	b29b      	uxth	r3, r3
 8006e40:	11db      	asrs	r3, r3, #7
 8006e42:	b2db      	uxtb	r3, r3
 8006e44:	f003 0306 	and.w	r3, r3, #6
 8006e48:	b2db      	uxtb	r3, r3
 8006e4a:	f063 030e 	orn	r3, r3, #14
 8006e4e:	b2da      	uxtb	r2, r3
 8006e50:	687b      	ldr	r3, [r7, #4]
 8006e52:	681b      	ldr	r3, [r3, #0]
 8006e54:	611a      	str	r2, [r3, #16]
 8006e56:	bf00      	nop
 8006e58:	370c      	adds	r7, #12
 8006e5a:	46bd      	mov	sp, r7
 8006e5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e60:	4770      	bx	lr

08006e62 <I2C_Master_ADD10>:
 8006e62:	b480      	push	{r7}
 8006e64:	b083      	sub	sp, #12
 8006e66:	af00      	add	r7, sp, #0
 8006e68:	6078      	str	r0, [r7, #4]
 8006e6a:	687b      	ldr	r3, [r7, #4]
 8006e6c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e6e:	b2da      	uxtb	r2, r3
 8006e70:	687b      	ldr	r3, [r7, #4]
 8006e72:	681b      	ldr	r3, [r3, #0]
 8006e74:	611a      	str	r2, [r3, #16]
 8006e76:	687b      	ldr	r3, [r7, #4]
 8006e78:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006e7a:	2b00      	cmp	r3, #0
 8006e7c:	d004      	beq.n	8006e88 <I2C_Master_ADD10+0x26>
 8006e7e:	687b      	ldr	r3, [r7, #4]
 8006e80:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006e82:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006e84:	2b00      	cmp	r3, #0
 8006e86:	d108      	bne.n	8006e9a <I2C_Master_ADD10+0x38>
 8006e88:	687b      	ldr	r3, [r7, #4]
 8006e8a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006e8c:	2b00      	cmp	r3, #0
 8006e8e:	d00c      	beq.n	8006eaa <I2C_Master_ADD10+0x48>
 8006e90:	687b      	ldr	r3, [r7, #4]
 8006e92:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006e94:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006e96:	2b00      	cmp	r3, #0
 8006e98:	d007      	beq.n	8006eaa <I2C_Master_ADD10+0x48>
 8006e9a:	687b      	ldr	r3, [r7, #4]
 8006e9c:	681b      	ldr	r3, [r3, #0]
 8006e9e:	685a      	ldr	r2, [r3, #4]
 8006ea0:	687b      	ldr	r3, [r7, #4]
 8006ea2:	681b      	ldr	r3, [r3, #0]
 8006ea4:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006ea8:	605a      	str	r2, [r3, #4]
 8006eaa:	bf00      	nop
 8006eac:	370c      	adds	r7, #12
 8006eae:	46bd      	mov	sp, r7
 8006eb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006eb4:	4770      	bx	lr

08006eb6 <I2C_Master_ADDR>:
 8006eb6:	b480      	push	{r7}
 8006eb8:	b091      	sub	sp, #68	; 0x44
 8006eba:	af00      	add	r7, sp, #0
 8006ebc:	6078      	str	r0, [r7, #4]
 8006ebe:	687b      	ldr	r3, [r7, #4]
 8006ec0:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006ec4:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8006ec8:	687b      	ldr	r3, [r7, #4]
 8006eca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006ecc:	63bb      	str	r3, [r7, #56]	; 0x38
 8006ece:	687b      	ldr	r3, [r7, #4]
 8006ed0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006ed2:	637b      	str	r3, [r7, #52]	; 0x34
 8006ed4:	687b      	ldr	r3, [r7, #4]
 8006ed6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006eda:	b2db      	uxtb	r3, r3
 8006edc:	2b22      	cmp	r3, #34	; 0x22
 8006ede:	f040 8169 	bne.w	80071b4 <I2C_Master_ADDR+0x2fe>
 8006ee2:	687b      	ldr	r3, [r7, #4]
 8006ee4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006ee6:	2b00      	cmp	r3, #0
 8006ee8:	d10f      	bne.n	8006f0a <I2C_Master_ADDR+0x54>
 8006eea:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 8006eee:	2b40      	cmp	r3, #64	; 0x40
 8006ef0:	d10b      	bne.n	8006f0a <I2C_Master_ADDR+0x54>
 8006ef2:	2300      	movs	r3, #0
 8006ef4:	633b      	str	r3, [r7, #48]	; 0x30
 8006ef6:	687b      	ldr	r3, [r7, #4]
 8006ef8:	681b      	ldr	r3, [r3, #0]
 8006efa:	695b      	ldr	r3, [r3, #20]
 8006efc:	633b      	str	r3, [r7, #48]	; 0x30
 8006efe:	687b      	ldr	r3, [r7, #4]
 8006f00:	681b      	ldr	r3, [r3, #0]
 8006f02:	699b      	ldr	r3, [r3, #24]
 8006f04:	633b      	str	r3, [r7, #48]	; 0x30
 8006f06:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006f08:	e160      	b.n	80071cc <I2C_Master_ADDR+0x316>
 8006f0a:	687b      	ldr	r3, [r7, #4]
 8006f0c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006f0e:	2b00      	cmp	r3, #0
 8006f10:	d11d      	bne.n	8006f4e <I2C_Master_ADDR+0x98>
 8006f12:	687b      	ldr	r3, [r7, #4]
 8006f14:	691b      	ldr	r3, [r3, #16]
 8006f16:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8006f1a:	d118      	bne.n	8006f4e <I2C_Master_ADDR+0x98>
 8006f1c:	2300      	movs	r3, #0
 8006f1e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006f20:	687b      	ldr	r3, [r7, #4]
 8006f22:	681b      	ldr	r3, [r3, #0]
 8006f24:	695b      	ldr	r3, [r3, #20]
 8006f26:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006f28:	687b      	ldr	r3, [r7, #4]
 8006f2a:	681b      	ldr	r3, [r3, #0]
 8006f2c:	699b      	ldr	r3, [r3, #24]
 8006f2e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006f30:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006f32:	687b      	ldr	r3, [r7, #4]
 8006f34:	681b      	ldr	r3, [r3, #0]
 8006f36:	681a      	ldr	r2, [r3, #0]
 8006f38:	687b      	ldr	r3, [r7, #4]
 8006f3a:	681b      	ldr	r3, [r3, #0]
 8006f3c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006f40:	601a      	str	r2, [r3, #0]
 8006f42:	687b      	ldr	r3, [r7, #4]
 8006f44:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006f46:	1c5a      	adds	r2, r3, #1
 8006f48:	687b      	ldr	r3, [r7, #4]
 8006f4a:	651a      	str	r2, [r3, #80]	; 0x50
 8006f4c:	e13e      	b.n	80071cc <I2C_Master_ADDR+0x316>
 8006f4e:	687b      	ldr	r3, [r7, #4]
 8006f50:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006f52:	b29b      	uxth	r3, r3
 8006f54:	2b00      	cmp	r3, #0
 8006f56:	d113      	bne.n	8006f80 <I2C_Master_ADDR+0xca>
 8006f58:	2300      	movs	r3, #0
 8006f5a:	62bb      	str	r3, [r7, #40]	; 0x28
 8006f5c:	687b      	ldr	r3, [r7, #4]
 8006f5e:	681b      	ldr	r3, [r3, #0]
 8006f60:	695b      	ldr	r3, [r3, #20]
 8006f62:	62bb      	str	r3, [r7, #40]	; 0x28
 8006f64:	687b      	ldr	r3, [r7, #4]
 8006f66:	681b      	ldr	r3, [r3, #0]
 8006f68:	699b      	ldr	r3, [r3, #24]
 8006f6a:	62bb      	str	r3, [r7, #40]	; 0x28
 8006f6c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006f6e:	687b      	ldr	r3, [r7, #4]
 8006f70:	681b      	ldr	r3, [r3, #0]
 8006f72:	681a      	ldr	r2, [r3, #0]
 8006f74:	687b      	ldr	r3, [r7, #4]
 8006f76:	681b      	ldr	r3, [r3, #0]
 8006f78:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006f7c:	601a      	str	r2, [r3, #0]
 8006f7e:	e115      	b.n	80071ac <I2C_Master_ADDR+0x2f6>
 8006f80:	687b      	ldr	r3, [r7, #4]
 8006f82:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006f84:	b29b      	uxth	r3, r3
 8006f86:	2b01      	cmp	r3, #1
 8006f88:	f040 808a 	bne.w	80070a0 <I2C_Master_ADDR+0x1ea>
 8006f8c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006f8e:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8006f92:	d137      	bne.n	8007004 <I2C_Master_ADDR+0x14e>
 8006f94:	687b      	ldr	r3, [r7, #4]
 8006f96:	681b      	ldr	r3, [r3, #0]
 8006f98:	681a      	ldr	r2, [r3, #0]
 8006f9a:	687b      	ldr	r3, [r7, #4]
 8006f9c:	681b      	ldr	r3, [r3, #0]
 8006f9e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006fa2:	601a      	str	r2, [r3, #0]
 8006fa4:	687b      	ldr	r3, [r7, #4]
 8006fa6:	681b      	ldr	r3, [r3, #0]
 8006fa8:	685b      	ldr	r3, [r3, #4]
 8006faa:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8006fae:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006fb2:	d113      	bne.n	8006fdc <I2C_Master_ADDR+0x126>
 8006fb4:	687b      	ldr	r3, [r7, #4]
 8006fb6:	681b      	ldr	r3, [r3, #0]
 8006fb8:	681a      	ldr	r2, [r3, #0]
 8006fba:	687b      	ldr	r3, [r7, #4]
 8006fbc:	681b      	ldr	r3, [r3, #0]
 8006fbe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006fc2:	601a      	str	r2, [r3, #0]
 8006fc4:	2300      	movs	r3, #0
 8006fc6:	627b      	str	r3, [r7, #36]	; 0x24
 8006fc8:	687b      	ldr	r3, [r7, #4]
 8006fca:	681b      	ldr	r3, [r3, #0]
 8006fcc:	695b      	ldr	r3, [r3, #20]
 8006fce:	627b      	str	r3, [r7, #36]	; 0x24
 8006fd0:	687b      	ldr	r3, [r7, #4]
 8006fd2:	681b      	ldr	r3, [r3, #0]
 8006fd4:	699b      	ldr	r3, [r3, #24]
 8006fd6:	627b      	str	r3, [r7, #36]	; 0x24
 8006fd8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006fda:	e0e7      	b.n	80071ac <I2C_Master_ADDR+0x2f6>
 8006fdc:	2300      	movs	r3, #0
 8006fde:	623b      	str	r3, [r7, #32]
 8006fe0:	687b      	ldr	r3, [r7, #4]
 8006fe2:	681b      	ldr	r3, [r3, #0]
 8006fe4:	695b      	ldr	r3, [r3, #20]
 8006fe6:	623b      	str	r3, [r7, #32]
 8006fe8:	687b      	ldr	r3, [r7, #4]
 8006fea:	681b      	ldr	r3, [r3, #0]
 8006fec:	699b      	ldr	r3, [r3, #24]
 8006fee:	623b      	str	r3, [r7, #32]
 8006ff0:	6a3b      	ldr	r3, [r7, #32]
 8006ff2:	687b      	ldr	r3, [r7, #4]
 8006ff4:	681b      	ldr	r3, [r3, #0]
 8006ff6:	681a      	ldr	r2, [r3, #0]
 8006ff8:	687b      	ldr	r3, [r7, #4]
 8006ffa:	681b      	ldr	r3, [r3, #0]
 8006ffc:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007000:	601a      	str	r2, [r3, #0]
 8007002:	e0d3      	b.n	80071ac <I2C_Master_ADDR+0x2f6>
 8007004:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007006:	2b08      	cmp	r3, #8
 8007008:	d02e      	beq.n	8007068 <I2C_Master_ADDR+0x1b2>
 800700a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800700c:	2b20      	cmp	r3, #32
 800700e:	d02b      	beq.n	8007068 <I2C_Master_ADDR+0x1b2>
 8007010:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007012:	2b12      	cmp	r3, #18
 8007014:	d102      	bne.n	800701c <I2C_Master_ADDR+0x166>
 8007016:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007018:	2b01      	cmp	r3, #1
 800701a:	d125      	bne.n	8007068 <I2C_Master_ADDR+0x1b2>
 800701c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800701e:	2b04      	cmp	r3, #4
 8007020:	d00e      	beq.n	8007040 <I2C_Master_ADDR+0x18a>
 8007022:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007024:	2b02      	cmp	r3, #2
 8007026:	d00b      	beq.n	8007040 <I2C_Master_ADDR+0x18a>
 8007028:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800702a:	2b10      	cmp	r3, #16
 800702c:	d008      	beq.n	8007040 <I2C_Master_ADDR+0x18a>
 800702e:	687b      	ldr	r3, [r7, #4]
 8007030:	681b      	ldr	r3, [r3, #0]
 8007032:	681a      	ldr	r2, [r3, #0]
 8007034:	687b      	ldr	r3, [r7, #4]
 8007036:	681b      	ldr	r3, [r3, #0]
 8007038:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800703c:	601a      	str	r2, [r3, #0]
 800703e:	e007      	b.n	8007050 <I2C_Master_ADDR+0x19a>
 8007040:	687b      	ldr	r3, [r7, #4]
 8007042:	681b      	ldr	r3, [r3, #0]
 8007044:	681a      	ldr	r2, [r3, #0]
 8007046:	687b      	ldr	r3, [r7, #4]
 8007048:	681b      	ldr	r3, [r3, #0]
 800704a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800704e:	601a      	str	r2, [r3, #0]
 8007050:	2300      	movs	r3, #0
 8007052:	61fb      	str	r3, [r7, #28]
 8007054:	687b      	ldr	r3, [r7, #4]
 8007056:	681b      	ldr	r3, [r3, #0]
 8007058:	695b      	ldr	r3, [r3, #20]
 800705a:	61fb      	str	r3, [r7, #28]
 800705c:	687b      	ldr	r3, [r7, #4]
 800705e:	681b      	ldr	r3, [r3, #0]
 8007060:	699b      	ldr	r3, [r3, #24]
 8007062:	61fb      	str	r3, [r7, #28]
 8007064:	69fb      	ldr	r3, [r7, #28]
 8007066:	e0a1      	b.n	80071ac <I2C_Master_ADDR+0x2f6>
 8007068:	687b      	ldr	r3, [r7, #4]
 800706a:	681b      	ldr	r3, [r3, #0]
 800706c:	681a      	ldr	r2, [r3, #0]
 800706e:	687b      	ldr	r3, [r7, #4]
 8007070:	681b      	ldr	r3, [r3, #0]
 8007072:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007076:	601a      	str	r2, [r3, #0]
 8007078:	2300      	movs	r3, #0
 800707a:	61bb      	str	r3, [r7, #24]
 800707c:	687b      	ldr	r3, [r7, #4]
 800707e:	681b      	ldr	r3, [r3, #0]
 8007080:	695b      	ldr	r3, [r3, #20]
 8007082:	61bb      	str	r3, [r7, #24]
 8007084:	687b      	ldr	r3, [r7, #4]
 8007086:	681b      	ldr	r3, [r3, #0]
 8007088:	699b      	ldr	r3, [r3, #24]
 800708a:	61bb      	str	r3, [r7, #24]
 800708c:	69bb      	ldr	r3, [r7, #24]
 800708e:	687b      	ldr	r3, [r7, #4]
 8007090:	681b      	ldr	r3, [r3, #0]
 8007092:	681a      	ldr	r2, [r3, #0]
 8007094:	687b      	ldr	r3, [r7, #4]
 8007096:	681b      	ldr	r3, [r3, #0]
 8007098:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800709c:	601a      	str	r2, [r3, #0]
 800709e:	e085      	b.n	80071ac <I2C_Master_ADDR+0x2f6>
 80070a0:	687b      	ldr	r3, [r7, #4]
 80070a2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80070a4:	b29b      	uxth	r3, r3
 80070a6:	2b02      	cmp	r3, #2
 80070a8:	d14d      	bne.n	8007146 <I2C_Master_ADDR+0x290>
 80070aa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070ac:	2b04      	cmp	r3, #4
 80070ae:	d016      	beq.n	80070de <I2C_Master_ADDR+0x228>
 80070b0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070b2:	2b02      	cmp	r3, #2
 80070b4:	d013      	beq.n	80070de <I2C_Master_ADDR+0x228>
 80070b6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070b8:	2b10      	cmp	r3, #16
 80070ba:	d010      	beq.n	80070de <I2C_Master_ADDR+0x228>
 80070bc:	687b      	ldr	r3, [r7, #4]
 80070be:	681b      	ldr	r3, [r3, #0]
 80070c0:	681a      	ldr	r2, [r3, #0]
 80070c2:	687b      	ldr	r3, [r7, #4]
 80070c4:	681b      	ldr	r3, [r3, #0]
 80070c6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80070ca:	601a      	str	r2, [r3, #0]
 80070cc:	687b      	ldr	r3, [r7, #4]
 80070ce:	681b      	ldr	r3, [r3, #0]
 80070d0:	681a      	ldr	r2, [r3, #0]
 80070d2:	687b      	ldr	r3, [r7, #4]
 80070d4:	681b      	ldr	r3, [r3, #0]
 80070d6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80070da:	601a      	str	r2, [r3, #0]
 80070dc:	e007      	b.n	80070ee <I2C_Master_ADDR+0x238>
 80070de:	687b      	ldr	r3, [r7, #4]
 80070e0:	681b      	ldr	r3, [r3, #0]
 80070e2:	681a      	ldr	r2, [r3, #0]
 80070e4:	687b      	ldr	r3, [r7, #4]
 80070e6:	681b      	ldr	r3, [r3, #0]
 80070e8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80070ec:	601a      	str	r2, [r3, #0]
 80070ee:	687b      	ldr	r3, [r7, #4]
 80070f0:	681b      	ldr	r3, [r3, #0]
 80070f2:	685b      	ldr	r3, [r3, #4]
 80070f4:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80070f8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80070fc:	d117      	bne.n	800712e <I2C_Master_ADDR+0x278>
 80070fe:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007100:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8007104:	d00b      	beq.n	800711e <I2C_Master_ADDR+0x268>
 8007106:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007108:	2b01      	cmp	r3, #1
 800710a:	d008      	beq.n	800711e <I2C_Master_ADDR+0x268>
 800710c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800710e:	2b08      	cmp	r3, #8
 8007110:	d005      	beq.n	800711e <I2C_Master_ADDR+0x268>
 8007112:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007114:	2b10      	cmp	r3, #16
 8007116:	d002      	beq.n	800711e <I2C_Master_ADDR+0x268>
 8007118:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800711a:	2b20      	cmp	r3, #32
 800711c:	d107      	bne.n	800712e <I2C_Master_ADDR+0x278>
 800711e:	687b      	ldr	r3, [r7, #4]
 8007120:	681b      	ldr	r3, [r3, #0]
 8007122:	685a      	ldr	r2, [r3, #4]
 8007124:	687b      	ldr	r3, [r7, #4]
 8007126:	681b      	ldr	r3, [r3, #0]
 8007128:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800712c:	605a      	str	r2, [r3, #4]
 800712e:	2300      	movs	r3, #0
 8007130:	617b      	str	r3, [r7, #20]
 8007132:	687b      	ldr	r3, [r7, #4]
 8007134:	681b      	ldr	r3, [r3, #0]
 8007136:	695b      	ldr	r3, [r3, #20]
 8007138:	617b      	str	r3, [r7, #20]
 800713a:	687b      	ldr	r3, [r7, #4]
 800713c:	681b      	ldr	r3, [r3, #0]
 800713e:	699b      	ldr	r3, [r3, #24]
 8007140:	617b      	str	r3, [r7, #20]
 8007142:	697b      	ldr	r3, [r7, #20]
 8007144:	e032      	b.n	80071ac <I2C_Master_ADDR+0x2f6>
 8007146:	687b      	ldr	r3, [r7, #4]
 8007148:	681b      	ldr	r3, [r3, #0]
 800714a:	681a      	ldr	r2, [r3, #0]
 800714c:	687b      	ldr	r3, [r7, #4]
 800714e:	681b      	ldr	r3, [r3, #0]
 8007150:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007154:	601a      	str	r2, [r3, #0]
 8007156:	687b      	ldr	r3, [r7, #4]
 8007158:	681b      	ldr	r3, [r3, #0]
 800715a:	685b      	ldr	r3, [r3, #4]
 800715c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8007160:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007164:	d117      	bne.n	8007196 <I2C_Master_ADDR+0x2e0>
 8007166:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007168:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800716c:	d00b      	beq.n	8007186 <I2C_Master_ADDR+0x2d0>
 800716e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007170:	2b01      	cmp	r3, #1
 8007172:	d008      	beq.n	8007186 <I2C_Master_ADDR+0x2d0>
 8007174:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007176:	2b08      	cmp	r3, #8
 8007178:	d005      	beq.n	8007186 <I2C_Master_ADDR+0x2d0>
 800717a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800717c:	2b10      	cmp	r3, #16
 800717e:	d002      	beq.n	8007186 <I2C_Master_ADDR+0x2d0>
 8007180:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007182:	2b20      	cmp	r3, #32
 8007184:	d107      	bne.n	8007196 <I2C_Master_ADDR+0x2e0>
 8007186:	687b      	ldr	r3, [r7, #4]
 8007188:	681b      	ldr	r3, [r3, #0]
 800718a:	685a      	ldr	r2, [r3, #4]
 800718c:	687b      	ldr	r3, [r7, #4]
 800718e:	681b      	ldr	r3, [r3, #0]
 8007190:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8007194:	605a      	str	r2, [r3, #4]
 8007196:	2300      	movs	r3, #0
 8007198:	613b      	str	r3, [r7, #16]
 800719a:	687b      	ldr	r3, [r7, #4]
 800719c:	681b      	ldr	r3, [r3, #0]
 800719e:	695b      	ldr	r3, [r3, #20]
 80071a0:	613b      	str	r3, [r7, #16]
 80071a2:	687b      	ldr	r3, [r7, #4]
 80071a4:	681b      	ldr	r3, [r3, #0]
 80071a6:	699b      	ldr	r3, [r3, #24]
 80071a8:	613b      	str	r3, [r7, #16]
 80071aa:	693b      	ldr	r3, [r7, #16]
 80071ac:	687b      	ldr	r3, [r7, #4]
 80071ae:	2200      	movs	r2, #0
 80071b0:	651a      	str	r2, [r3, #80]	; 0x50
 80071b2:	e00b      	b.n	80071cc <I2C_Master_ADDR+0x316>
 80071b4:	2300      	movs	r3, #0
 80071b6:	60fb      	str	r3, [r7, #12]
 80071b8:	687b      	ldr	r3, [r7, #4]
 80071ba:	681b      	ldr	r3, [r3, #0]
 80071bc:	695b      	ldr	r3, [r3, #20]
 80071be:	60fb      	str	r3, [r7, #12]
 80071c0:	687b      	ldr	r3, [r7, #4]
 80071c2:	681b      	ldr	r3, [r3, #0]
 80071c4:	699b      	ldr	r3, [r3, #24]
 80071c6:	60fb      	str	r3, [r7, #12]
 80071c8:	68fb      	ldr	r3, [r7, #12]
 80071ca:	e7ff      	b.n	80071cc <I2C_Master_ADDR+0x316>
 80071cc:	bf00      	nop
 80071ce:	3744      	adds	r7, #68	; 0x44
 80071d0:	46bd      	mov	sp, r7
 80071d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071d6:	4770      	bx	lr

080071d8 <I2C_SlaveTransmit_TXE>:
 80071d8:	b580      	push	{r7, lr}
 80071da:	b084      	sub	sp, #16
 80071dc:	af00      	add	r7, sp, #0
 80071de:	6078      	str	r0, [r7, #4]
 80071e0:	687b      	ldr	r3, [r7, #4]
 80071e2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80071e6:	73fb      	strb	r3, [r7, #15]
 80071e8:	687b      	ldr	r3, [r7, #4]
 80071ea:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80071ec:	b29b      	uxth	r3, r3
 80071ee:	2b00      	cmp	r3, #0
 80071f0:	d02b      	beq.n	800724a <I2C_SlaveTransmit_TXE+0x72>
 80071f2:	687b      	ldr	r3, [r7, #4]
 80071f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80071f6:	781a      	ldrb	r2, [r3, #0]
 80071f8:	687b      	ldr	r3, [r7, #4]
 80071fa:	681b      	ldr	r3, [r3, #0]
 80071fc:	611a      	str	r2, [r3, #16]
 80071fe:	687b      	ldr	r3, [r7, #4]
 8007200:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007202:	1c5a      	adds	r2, r3, #1
 8007204:	687b      	ldr	r3, [r7, #4]
 8007206:	625a      	str	r2, [r3, #36]	; 0x24
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800720c:	b29b      	uxth	r3, r3
 800720e:	3b01      	subs	r3, #1
 8007210:	b29a      	uxth	r2, r3
 8007212:	687b      	ldr	r3, [r7, #4]
 8007214:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007216:	687b      	ldr	r3, [r7, #4]
 8007218:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800721a:	b29b      	uxth	r3, r3
 800721c:	2b00      	cmp	r3, #0
 800721e:	d114      	bne.n	800724a <I2C_SlaveTransmit_TXE+0x72>
 8007220:	7bfb      	ldrb	r3, [r7, #15]
 8007222:	2b29      	cmp	r3, #41	; 0x29
 8007224:	d111      	bne.n	800724a <I2C_SlaveTransmit_TXE+0x72>
 8007226:	687b      	ldr	r3, [r7, #4]
 8007228:	681b      	ldr	r3, [r3, #0]
 800722a:	685a      	ldr	r2, [r3, #4]
 800722c:	687b      	ldr	r3, [r7, #4]
 800722e:	681b      	ldr	r3, [r3, #0]
 8007230:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007234:	605a      	str	r2, [r3, #4]
 8007236:	687b      	ldr	r3, [r7, #4]
 8007238:	2221      	movs	r2, #33	; 0x21
 800723a:	631a      	str	r2, [r3, #48]	; 0x30
 800723c:	687b      	ldr	r3, [r7, #4]
 800723e:	2228      	movs	r2, #40	; 0x28
 8007240:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007244:	6878      	ldr	r0, [r7, #4]
 8007246:	f7ff f9e7 	bl	8006618 <HAL_I2C_SlaveTxCpltCallback>
 800724a:	bf00      	nop
 800724c:	3710      	adds	r7, #16
 800724e:	46bd      	mov	sp, r7
 8007250:	bd80      	pop	{r7, pc}

08007252 <I2C_SlaveTransmit_BTF>:
 8007252:	b480      	push	{r7}
 8007254:	b083      	sub	sp, #12
 8007256:	af00      	add	r7, sp, #0
 8007258:	6078      	str	r0, [r7, #4]
 800725a:	687b      	ldr	r3, [r7, #4]
 800725c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800725e:	b29b      	uxth	r3, r3
 8007260:	2b00      	cmp	r3, #0
 8007262:	d011      	beq.n	8007288 <I2C_SlaveTransmit_BTF+0x36>
 8007264:	687b      	ldr	r3, [r7, #4]
 8007266:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007268:	781a      	ldrb	r2, [r3, #0]
 800726a:	687b      	ldr	r3, [r7, #4]
 800726c:	681b      	ldr	r3, [r3, #0]
 800726e:	611a      	str	r2, [r3, #16]
 8007270:	687b      	ldr	r3, [r7, #4]
 8007272:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007274:	1c5a      	adds	r2, r3, #1
 8007276:	687b      	ldr	r3, [r7, #4]
 8007278:	625a      	str	r2, [r3, #36]	; 0x24
 800727a:	687b      	ldr	r3, [r7, #4]
 800727c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800727e:	b29b      	uxth	r3, r3
 8007280:	3b01      	subs	r3, #1
 8007282:	b29a      	uxth	r2, r3
 8007284:	687b      	ldr	r3, [r7, #4]
 8007286:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007288:	bf00      	nop
 800728a:	370c      	adds	r7, #12
 800728c:	46bd      	mov	sp, r7
 800728e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007292:	4770      	bx	lr

08007294 <I2C_SlaveReceive_RXNE>:
 8007294:	b580      	push	{r7, lr}
 8007296:	b084      	sub	sp, #16
 8007298:	af00      	add	r7, sp, #0
 800729a:	6078      	str	r0, [r7, #4]
 800729c:	687b      	ldr	r3, [r7, #4]
 800729e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80072a2:	73fb      	strb	r3, [r7, #15]
 80072a4:	687b      	ldr	r3, [r7, #4]
 80072a6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80072a8:	b29b      	uxth	r3, r3
 80072aa:	2b00      	cmp	r3, #0
 80072ac:	d02c      	beq.n	8007308 <I2C_SlaveReceive_RXNE+0x74>
 80072ae:	687b      	ldr	r3, [r7, #4]
 80072b0:	681b      	ldr	r3, [r3, #0]
 80072b2:	691a      	ldr	r2, [r3, #16]
 80072b4:	687b      	ldr	r3, [r7, #4]
 80072b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80072b8:	b2d2      	uxtb	r2, r2
 80072ba:	701a      	strb	r2, [r3, #0]
 80072bc:	687b      	ldr	r3, [r7, #4]
 80072be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80072c0:	1c5a      	adds	r2, r3, #1
 80072c2:	687b      	ldr	r3, [r7, #4]
 80072c4:	625a      	str	r2, [r3, #36]	; 0x24
 80072c6:	687b      	ldr	r3, [r7, #4]
 80072c8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80072ca:	b29b      	uxth	r3, r3
 80072cc:	3b01      	subs	r3, #1
 80072ce:	b29a      	uxth	r2, r3
 80072d0:	687b      	ldr	r3, [r7, #4]
 80072d2:	855a      	strh	r2, [r3, #42]	; 0x2a
 80072d4:	687b      	ldr	r3, [r7, #4]
 80072d6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80072d8:	b29b      	uxth	r3, r3
 80072da:	2b00      	cmp	r3, #0
 80072dc:	d114      	bne.n	8007308 <I2C_SlaveReceive_RXNE+0x74>
 80072de:	7bfb      	ldrb	r3, [r7, #15]
 80072e0:	2b2a      	cmp	r3, #42	; 0x2a
 80072e2:	d111      	bne.n	8007308 <I2C_SlaveReceive_RXNE+0x74>
 80072e4:	687b      	ldr	r3, [r7, #4]
 80072e6:	681b      	ldr	r3, [r3, #0]
 80072e8:	685a      	ldr	r2, [r3, #4]
 80072ea:	687b      	ldr	r3, [r7, #4]
 80072ec:	681b      	ldr	r3, [r3, #0]
 80072ee:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80072f2:	605a      	str	r2, [r3, #4]
 80072f4:	687b      	ldr	r3, [r7, #4]
 80072f6:	2222      	movs	r2, #34	; 0x22
 80072f8:	631a      	str	r2, [r3, #48]	; 0x30
 80072fa:	687b      	ldr	r3, [r7, #4]
 80072fc:	2228      	movs	r2, #40	; 0x28
 80072fe:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007302:	6878      	ldr	r0, [r7, #4]
 8007304:	f7ff f992 	bl	800662c <HAL_I2C_SlaveRxCpltCallback>
 8007308:	bf00      	nop
 800730a:	3710      	adds	r7, #16
 800730c:	46bd      	mov	sp, r7
 800730e:	bd80      	pop	{r7, pc}

08007310 <I2C_SlaveReceive_BTF>:
 8007310:	b480      	push	{r7}
 8007312:	b083      	sub	sp, #12
 8007314:	af00      	add	r7, sp, #0
 8007316:	6078      	str	r0, [r7, #4]
 8007318:	687b      	ldr	r3, [r7, #4]
 800731a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800731c:	b29b      	uxth	r3, r3
 800731e:	2b00      	cmp	r3, #0
 8007320:	d012      	beq.n	8007348 <I2C_SlaveReceive_BTF+0x38>
 8007322:	687b      	ldr	r3, [r7, #4]
 8007324:	681b      	ldr	r3, [r3, #0]
 8007326:	691a      	ldr	r2, [r3, #16]
 8007328:	687b      	ldr	r3, [r7, #4]
 800732a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800732c:	b2d2      	uxtb	r2, r2
 800732e:	701a      	strb	r2, [r3, #0]
 8007330:	687b      	ldr	r3, [r7, #4]
 8007332:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007334:	1c5a      	adds	r2, r3, #1
 8007336:	687b      	ldr	r3, [r7, #4]
 8007338:	625a      	str	r2, [r3, #36]	; 0x24
 800733a:	687b      	ldr	r3, [r7, #4]
 800733c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800733e:	b29b      	uxth	r3, r3
 8007340:	3b01      	subs	r3, #1
 8007342:	b29a      	uxth	r2, r3
 8007344:	687b      	ldr	r3, [r7, #4]
 8007346:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007348:	bf00      	nop
 800734a:	370c      	adds	r7, #12
 800734c:	46bd      	mov	sp, r7
 800734e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007352:	4770      	bx	lr

08007354 <I2C_Slave_ADDR>:
 8007354:	b580      	push	{r7, lr}
 8007356:	b084      	sub	sp, #16
 8007358:	af00      	add	r7, sp, #0
 800735a:	6078      	str	r0, [r7, #4]
 800735c:	6039      	str	r1, [r7, #0]
 800735e:	2300      	movs	r3, #0
 8007360:	73fb      	strb	r3, [r7, #15]
 8007362:	687b      	ldr	r3, [r7, #4]
 8007364:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007368:	b2db      	uxtb	r3, r3
 800736a:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800736e:	2b28      	cmp	r3, #40	; 0x28
 8007370:	d127      	bne.n	80073c2 <I2C_Slave_ADDR+0x6e>
 8007372:	687b      	ldr	r3, [r7, #4]
 8007374:	681b      	ldr	r3, [r3, #0]
 8007376:	685a      	ldr	r2, [r3, #4]
 8007378:	687b      	ldr	r3, [r7, #4]
 800737a:	681b      	ldr	r3, [r3, #0]
 800737c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007380:	605a      	str	r2, [r3, #4]
 8007382:	683b      	ldr	r3, [r7, #0]
 8007384:	089b      	lsrs	r3, r3, #2
 8007386:	f003 0301 	and.w	r3, r3, #1
 800738a:	2b00      	cmp	r3, #0
 800738c:	d101      	bne.n	8007392 <I2C_Slave_ADDR+0x3e>
 800738e:	2301      	movs	r3, #1
 8007390:	73fb      	strb	r3, [r7, #15]
 8007392:	683b      	ldr	r3, [r7, #0]
 8007394:	09db      	lsrs	r3, r3, #7
 8007396:	f003 0301 	and.w	r3, r3, #1
 800739a:	2b00      	cmp	r3, #0
 800739c:	d103      	bne.n	80073a6 <I2C_Slave_ADDR+0x52>
 800739e:	687b      	ldr	r3, [r7, #4]
 80073a0:	68db      	ldr	r3, [r3, #12]
 80073a2:	81bb      	strh	r3, [r7, #12]
 80073a4:	e002      	b.n	80073ac <I2C_Slave_ADDR+0x58>
 80073a6:	687b      	ldr	r3, [r7, #4]
 80073a8:	699b      	ldr	r3, [r3, #24]
 80073aa:	81bb      	strh	r3, [r7, #12]
 80073ac:	687b      	ldr	r3, [r7, #4]
 80073ae:	2200      	movs	r2, #0
 80073b0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80073b4:	89ba      	ldrh	r2, [r7, #12]
 80073b6:	7bfb      	ldrb	r3, [r7, #15]
 80073b8:	4619      	mov	r1, r3
 80073ba:	6878      	ldr	r0, [r7, #4]
 80073bc:	f7ff f940 	bl	8006640 <HAL_I2C_AddrCallback>
 80073c0:	e00e      	b.n	80073e0 <I2C_Slave_ADDR+0x8c>
 80073c2:	2300      	movs	r3, #0
 80073c4:	60bb      	str	r3, [r7, #8]
 80073c6:	687b      	ldr	r3, [r7, #4]
 80073c8:	681b      	ldr	r3, [r3, #0]
 80073ca:	695b      	ldr	r3, [r3, #20]
 80073cc:	60bb      	str	r3, [r7, #8]
 80073ce:	687b      	ldr	r3, [r7, #4]
 80073d0:	681b      	ldr	r3, [r3, #0]
 80073d2:	699b      	ldr	r3, [r3, #24]
 80073d4:	60bb      	str	r3, [r7, #8]
 80073d6:	68bb      	ldr	r3, [r7, #8]
 80073d8:	687b      	ldr	r3, [r7, #4]
 80073da:	2200      	movs	r2, #0
 80073dc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80073e0:	bf00      	nop
 80073e2:	3710      	adds	r7, #16
 80073e4:	46bd      	mov	sp, r7
 80073e6:	bd80      	pop	{r7, pc}

080073e8 <I2C_Slave_STOPF>:
 80073e8:	b580      	push	{r7, lr}
 80073ea:	b084      	sub	sp, #16
 80073ec:	af00      	add	r7, sp, #0
 80073ee:	6078      	str	r0, [r7, #4]
 80073f0:	687b      	ldr	r3, [r7, #4]
 80073f2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80073f6:	73fb      	strb	r3, [r7, #15]
 80073f8:	687b      	ldr	r3, [r7, #4]
 80073fa:	681b      	ldr	r3, [r3, #0]
 80073fc:	685a      	ldr	r2, [r3, #4]
 80073fe:	687b      	ldr	r3, [r7, #4]
 8007400:	681b      	ldr	r3, [r3, #0]
 8007402:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8007406:	605a      	str	r2, [r3, #4]
 8007408:	2300      	movs	r3, #0
 800740a:	60bb      	str	r3, [r7, #8]
 800740c:	687b      	ldr	r3, [r7, #4]
 800740e:	681b      	ldr	r3, [r3, #0]
 8007410:	695b      	ldr	r3, [r3, #20]
 8007412:	60bb      	str	r3, [r7, #8]
 8007414:	687b      	ldr	r3, [r7, #4]
 8007416:	681b      	ldr	r3, [r3, #0]
 8007418:	681a      	ldr	r2, [r3, #0]
 800741a:	687b      	ldr	r3, [r7, #4]
 800741c:	681b      	ldr	r3, [r3, #0]
 800741e:	f042 0201 	orr.w	r2, r2, #1
 8007422:	601a      	str	r2, [r3, #0]
 8007424:	68bb      	ldr	r3, [r7, #8]
 8007426:	687b      	ldr	r3, [r7, #4]
 8007428:	681b      	ldr	r3, [r3, #0]
 800742a:	681a      	ldr	r2, [r3, #0]
 800742c:	687b      	ldr	r3, [r7, #4]
 800742e:	681b      	ldr	r3, [r3, #0]
 8007430:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007434:	601a      	str	r2, [r3, #0]
 8007436:	687b      	ldr	r3, [r7, #4]
 8007438:	681b      	ldr	r3, [r3, #0]
 800743a:	685b      	ldr	r3, [r3, #4]
 800743c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8007440:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007444:	d172      	bne.n	800752c <I2C_Slave_STOPF+0x144>
 8007446:	7bfb      	ldrb	r3, [r7, #15]
 8007448:	2b22      	cmp	r3, #34	; 0x22
 800744a:	d002      	beq.n	8007452 <I2C_Slave_STOPF+0x6a>
 800744c:	7bfb      	ldrb	r3, [r7, #15]
 800744e:	2b2a      	cmp	r3, #42	; 0x2a
 8007450:	d135      	bne.n	80074be <I2C_Slave_STOPF+0xd6>
 8007452:	687b      	ldr	r3, [r7, #4]
 8007454:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007456:	681b      	ldr	r3, [r3, #0]
 8007458:	685b      	ldr	r3, [r3, #4]
 800745a:	b29a      	uxth	r2, r3
 800745c:	687b      	ldr	r3, [r7, #4]
 800745e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007460:	687b      	ldr	r3, [r7, #4]
 8007462:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007464:	b29b      	uxth	r3, r3
 8007466:	2b00      	cmp	r3, #0
 8007468:	d005      	beq.n	8007476 <I2C_Slave_STOPF+0x8e>
 800746a:	687b      	ldr	r3, [r7, #4]
 800746c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800746e:	f043 0204 	orr.w	r2, r3, #4
 8007472:	687b      	ldr	r3, [r7, #4]
 8007474:	641a      	str	r2, [r3, #64]	; 0x40
 8007476:	687b      	ldr	r3, [r7, #4]
 8007478:	681b      	ldr	r3, [r3, #0]
 800747a:	685a      	ldr	r2, [r3, #4]
 800747c:	687b      	ldr	r3, [r7, #4]
 800747e:	681b      	ldr	r3, [r3, #0]
 8007480:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007484:	605a      	str	r2, [r3, #4]
 8007486:	687b      	ldr	r3, [r7, #4]
 8007488:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800748a:	4618      	mov	r0, r3
 800748c:	f7fd ff74 	bl	8005378 <HAL_DMA_GetState>
 8007490:	4603      	mov	r3, r0
 8007492:	2b01      	cmp	r3, #1
 8007494:	d049      	beq.n	800752a <I2C_Slave_STOPF+0x142>
 8007496:	687b      	ldr	r3, [r7, #4]
 8007498:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800749a:	4a69      	ldr	r2, [pc, #420]	; (8007640 <I2C_Slave_STOPF+0x258>)
 800749c:	651a      	str	r2, [r3, #80]	; 0x50
 800749e:	687b      	ldr	r3, [r7, #4]
 80074a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80074a2:	4618      	mov	r0, r3
 80074a4:	f7fd fdbc 	bl	8005020 <HAL_DMA_Abort_IT>
 80074a8:	4603      	mov	r3, r0
 80074aa:	2b00      	cmp	r3, #0
 80074ac:	d03d      	beq.n	800752a <I2C_Slave_STOPF+0x142>
 80074ae:	687b      	ldr	r3, [r7, #4]
 80074b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80074b2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80074b4:	687a      	ldr	r2, [r7, #4]
 80074b6:	6b92      	ldr	r2, [r2, #56]	; 0x38
 80074b8:	4610      	mov	r0, r2
 80074ba:	4798      	blx	r3
 80074bc:	e035      	b.n	800752a <I2C_Slave_STOPF+0x142>
 80074be:	687b      	ldr	r3, [r7, #4]
 80074c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80074c2:	681b      	ldr	r3, [r3, #0]
 80074c4:	685b      	ldr	r3, [r3, #4]
 80074c6:	b29a      	uxth	r2, r3
 80074c8:	687b      	ldr	r3, [r7, #4]
 80074ca:	855a      	strh	r2, [r3, #42]	; 0x2a
 80074cc:	687b      	ldr	r3, [r7, #4]
 80074ce:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80074d0:	b29b      	uxth	r3, r3
 80074d2:	2b00      	cmp	r3, #0
 80074d4:	d005      	beq.n	80074e2 <I2C_Slave_STOPF+0xfa>
 80074d6:	687b      	ldr	r3, [r7, #4]
 80074d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80074da:	f043 0204 	orr.w	r2, r3, #4
 80074de:	687b      	ldr	r3, [r7, #4]
 80074e0:	641a      	str	r2, [r3, #64]	; 0x40
 80074e2:	687b      	ldr	r3, [r7, #4]
 80074e4:	681b      	ldr	r3, [r3, #0]
 80074e6:	685a      	ldr	r2, [r3, #4]
 80074e8:	687b      	ldr	r3, [r7, #4]
 80074ea:	681b      	ldr	r3, [r3, #0]
 80074ec:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80074f0:	605a      	str	r2, [r3, #4]
 80074f2:	687b      	ldr	r3, [r7, #4]
 80074f4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80074f6:	4618      	mov	r0, r3
 80074f8:	f7fd ff3e 	bl	8005378 <HAL_DMA_GetState>
 80074fc:	4603      	mov	r3, r0
 80074fe:	2b01      	cmp	r3, #1
 8007500:	d014      	beq.n	800752c <I2C_Slave_STOPF+0x144>
 8007502:	687b      	ldr	r3, [r7, #4]
 8007504:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007506:	4a4e      	ldr	r2, [pc, #312]	; (8007640 <I2C_Slave_STOPF+0x258>)
 8007508:	651a      	str	r2, [r3, #80]	; 0x50
 800750a:	687b      	ldr	r3, [r7, #4]
 800750c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800750e:	4618      	mov	r0, r3
 8007510:	f7fd fd86 	bl	8005020 <HAL_DMA_Abort_IT>
 8007514:	4603      	mov	r3, r0
 8007516:	2b00      	cmp	r3, #0
 8007518:	d008      	beq.n	800752c <I2C_Slave_STOPF+0x144>
 800751a:	687b      	ldr	r3, [r7, #4]
 800751c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800751e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007520:	687a      	ldr	r2, [r7, #4]
 8007522:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8007524:	4610      	mov	r0, r2
 8007526:	4798      	blx	r3
 8007528:	e000      	b.n	800752c <I2C_Slave_STOPF+0x144>
 800752a:	bf00      	nop
 800752c:	687b      	ldr	r3, [r7, #4]
 800752e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007530:	b29b      	uxth	r3, r3
 8007532:	2b00      	cmp	r3, #0
 8007534:	d03e      	beq.n	80075b4 <I2C_Slave_STOPF+0x1cc>
 8007536:	687b      	ldr	r3, [r7, #4]
 8007538:	681b      	ldr	r3, [r3, #0]
 800753a:	695b      	ldr	r3, [r3, #20]
 800753c:	f003 0304 	and.w	r3, r3, #4
 8007540:	2b04      	cmp	r3, #4
 8007542:	d112      	bne.n	800756a <I2C_Slave_STOPF+0x182>
 8007544:	687b      	ldr	r3, [r7, #4]
 8007546:	681b      	ldr	r3, [r3, #0]
 8007548:	691a      	ldr	r2, [r3, #16]
 800754a:	687b      	ldr	r3, [r7, #4]
 800754c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800754e:	b2d2      	uxtb	r2, r2
 8007550:	701a      	strb	r2, [r3, #0]
 8007552:	687b      	ldr	r3, [r7, #4]
 8007554:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007556:	1c5a      	adds	r2, r3, #1
 8007558:	687b      	ldr	r3, [r7, #4]
 800755a:	625a      	str	r2, [r3, #36]	; 0x24
 800755c:	687b      	ldr	r3, [r7, #4]
 800755e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007560:	b29b      	uxth	r3, r3
 8007562:	3b01      	subs	r3, #1
 8007564:	b29a      	uxth	r2, r3
 8007566:	687b      	ldr	r3, [r7, #4]
 8007568:	855a      	strh	r2, [r3, #42]	; 0x2a
 800756a:	687b      	ldr	r3, [r7, #4]
 800756c:	681b      	ldr	r3, [r3, #0]
 800756e:	695b      	ldr	r3, [r3, #20]
 8007570:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007574:	2b40      	cmp	r3, #64	; 0x40
 8007576:	d112      	bne.n	800759e <I2C_Slave_STOPF+0x1b6>
 8007578:	687b      	ldr	r3, [r7, #4]
 800757a:	681b      	ldr	r3, [r3, #0]
 800757c:	691a      	ldr	r2, [r3, #16]
 800757e:	687b      	ldr	r3, [r7, #4]
 8007580:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007582:	b2d2      	uxtb	r2, r2
 8007584:	701a      	strb	r2, [r3, #0]
 8007586:	687b      	ldr	r3, [r7, #4]
 8007588:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800758a:	1c5a      	adds	r2, r3, #1
 800758c:	687b      	ldr	r3, [r7, #4]
 800758e:	625a      	str	r2, [r3, #36]	; 0x24
 8007590:	687b      	ldr	r3, [r7, #4]
 8007592:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007594:	b29b      	uxth	r3, r3
 8007596:	3b01      	subs	r3, #1
 8007598:	b29a      	uxth	r2, r3
 800759a:	687b      	ldr	r3, [r7, #4]
 800759c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800759e:	687b      	ldr	r3, [r7, #4]
 80075a0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80075a2:	b29b      	uxth	r3, r3
 80075a4:	2b00      	cmp	r3, #0
 80075a6:	d005      	beq.n	80075b4 <I2C_Slave_STOPF+0x1cc>
 80075a8:	687b      	ldr	r3, [r7, #4]
 80075aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80075ac:	f043 0204 	orr.w	r2, r3, #4
 80075b0:	687b      	ldr	r3, [r7, #4]
 80075b2:	641a      	str	r2, [r3, #64]	; 0x40
 80075b4:	687b      	ldr	r3, [r7, #4]
 80075b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80075b8:	2b00      	cmp	r3, #0
 80075ba:	d003      	beq.n	80075c4 <I2C_Slave_STOPF+0x1dc>
 80075bc:	6878      	ldr	r0, [r7, #4]
 80075be:	f000 f8b3 	bl	8007728 <I2C_ITError>
 80075c2:	e039      	b.n	8007638 <I2C_Slave_STOPF+0x250>
 80075c4:	7bfb      	ldrb	r3, [r7, #15]
 80075c6:	2b2a      	cmp	r3, #42	; 0x2a
 80075c8:	d109      	bne.n	80075de <I2C_Slave_STOPF+0x1f6>
 80075ca:	687b      	ldr	r3, [r7, #4]
 80075cc:	2200      	movs	r2, #0
 80075ce:	631a      	str	r2, [r3, #48]	; 0x30
 80075d0:	687b      	ldr	r3, [r7, #4]
 80075d2:	2228      	movs	r2, #40	; 0x28
 80075d4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80075d8:	6878      	ldr	r0, [r7, #4]
 80075da:	f7ff f827 	bl	800662c <HAL_I2C_SlaveRxCpltCallback>
 80075de:	687b      	ldr	r3, [r7, #4]
 80075e0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80075e4:	b2db      	uxtb	r3, r3
 80075e6:	2b28      	cmp	r3, #40	; 0x28
 80075e8:	d111      	bne.n	800760e <I2C_Slave_STOPF+0x226>
 80075ea:	687b      	ldr	r3, [r7, #4]
 80075ec:	4a15      	ldr	r2, [pc, #84]	; (8007644 <I2C_Slave_STOPF+0x25c>)
 80075ee:	62da      	str	r2, [r3, #44]	; 0x2c
 80075f0:	687b      	ldr	r3, [r7, #4]
 80075f2:	2200      	movs	r2, #0
 80075f4:	631a      	str	r2, [r3, #48]	; 0x30
 80075f6:	687b      	ldr	r3, [r7, #4]
 80075f8:	2220      	movs	r2, #32
 80075fa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80075fe:	687b      	ldr	r3, [r7, #4]
 8007600:	2200      	movs	r2, #0
 8007602:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007606:	6878      	ldr	r0, [r7, #4]
 8007608:	f7ff f828 	bl	800665c <HAL_I2C_ListenCpltCallback>
 800760c:	e014      	b.n	8007638 <I2C_Slave_STOPF+0x250>
 800760e:	687b      	ldr	r3, [r7, #4]
 8007610:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007612:	2b22      	cmp	r3, #34	; 0x22
 8007614:	d002      	beq.n	800761c <I2C_Slave_STOPF+0x234>
 8007616:	7bfb      	ldrb	r3, [r7, #15]
 8007618:	2b22      	cmp	r3, #34	; 0x22
 800761a:	d10d      	bne.n	8007638 <I2C_Slave_STOPF+0x250>
 800761c:	687b      	ldr	r3, [r7, #4]
 800761e:	2200      	movs	r2, #0
 8007620:	631a      	str	r2, [r3, #48]	; 0x30
 8007622:	687b      	ldr	r3, [r7, #4]
 8007624:	2220      	movs	r2, #32
 8007626:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800762a:	687b      	ldr	r3, [r7, #4]
 800762c:	2200      	movs	r2, #0
 800762e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007632:	6878      	ldr	r0, [r7, #4]
 8007634:	f7fe fffa 	bl	800662c <HAL_I2C_SlaveRxCpltCallback>
 8007638:	bf00      	nop
 800763a:	3710      	adds	r7, #16
 800763c:	46bd      	mov	sp, r7
 800763e:	bd80      	pop	{r7, pc}
 8007640:	08007c2d 	.word	0x08007c2d
 8007644:	ffff0000 	.word	0xffff0000

08007648 <I2C_Slave_AF>:
 8007648:	b580      	push	{r7, lr}
 800764a:	b084      	sub	sp, #16
 800764c:	af00      	add	r7, sp, #0
 800764e:	6078      	str	r0, [r7, #4]
 8007650:	687b      	ldr	r3, [r7, #4]
 8007652:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007656:	73fb      	strb	r3, [r7, #15]
 8007658:	687b      	ldr	r3, [r7, #4]
 800765a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800765c:	60bb      	str	r3, [r7, #8]
 800765e:	68bb      	ldr	r3, [r7, #8]
 8007660:	2b08      	cmp	r3, #8
 8007662:	d002      	beq.n	800766a <I2C_Slave_AF+0x22>
 8007664:	68bb      	ldr	r3, [r7, #8]
 8007666:	2b20      	cmp	r3, #32
 8007668:	d129      	bne.n	80076be <I2C_Slave_AF+0x76>
 800766a:	7bfb      	ldrb	r3, [r7, #15]
 800766c:	2b28      	cmp	r3, #40	; 0x28
 800766e:	d126      	bne.n	80076be <I2C_Slave_AF+0x76>
 8007670:	687b      	ldr	r3, [r7, #4]
 8007672:	4a2c      	ldr	r2, [pc, #176]	; (8007724 <I2C_Slave_AF+0xdc>)
 8007674:	62da      	str	r2, [r3, #44]	; 0x2c
 8007676:	687b      	ldr	r3, [r7, #4]
 8007678:	681b      	ldr	r3, [r3, #0]
 800767a:	685a      	ldr	r2, [r3, #4]
 800767c:	687b      	ldr	r3, [r7, #4]
 800767e:	681b      	ldr	r3, [r3, #0]
 8007680:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8007684:	605a      	str	r2, [r3, #4]
 8007686:	687b      	ldr	r3, [r7, #4]
 8007688:	681b      	ldr	r3, [r3, #0]
 800768a:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800768e:	615a      	str	r2, [r3, #20]
 8007690:	687b      	ldr	r3, [r7, #4]
 8007692:	681b      	ldr	r3, [r3, #0]
 8007694:	681a      	ldr	r2, [r3, #0]
 8007696:	687b      	ldr	r3, [r7, #4]
 8007698:	681b      	ldr	r3, [r3, #0]
 800769a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800769e:	601a      	str	r2, [r3, #0]
 80076a0:	687b      	ldr	r3, [r7, #4]
 80076a2:	2200      	movs	r2, #0
 80076a4:	631a      	str	r2, [r3, #48]	; 0x30
 80076a6:	687b      	ldr	r3, [r7, #4]
 80076a8:	2220      	movs	r2, #32
 80076aa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80076ae:	687b      	ldr	r3, [r7, #4]
 80076b0:	2200      	movs	r2, #0
 80076b2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80076b6:	6878      	ldr	r0, [r7, #4]
 80076b8:	f7fe ffd0 	bl	800665c <HAL_I2C_ListenCpltCallback>
 80076bc:	e02e      	b.n	800771c <I2C_Slave_AF+0xd4>
 80076be:	7bfb      	ldrb	r3, [r7, #15]
 80076c0:	2b21      	cmp	r3, #33	; 0x21
 80076c2:	d126      	bne.n	8007712 <I2C_Slave_AF+0xca>
 80076c4:	687b      	ldr	r3, [r7, #4]
 80076c6:	4a17      	ldr	r2, [pc, #92]	; (8007724 <I2C_Slave_AF+0xdc>)
 80076c8:	62da      	str	r2, [r3, #44]	; 0x2c
 80076ca:	687b      	ldr	r3, [r7, #4]
 80076cc:	2221      	movs	r2, #33	; 0x21
 80076ce:	631a      	str	r2, [r3, #48]	; 0x30
 80076d0:	687b      	ldr	r3, [r7, #4]
 80076d2:	2220      	movs	r2, #32
 80076d4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80076d8:	687b      	ldr	r3, [r7, #4]
 80076da:	2200      	movs	r2, #0
 80076dc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80076e0:	687b      	ldr	r3, [r7, #4]
 80076e2:	681b      	ldr	r3, [r3, #0]
 80076e4:	685a      	ldr	r2, [r3, #4]
 80076e6:	687b      	ldr	r3, [r7, #4]
 80076e8:	681b      	ldr	r3, [r3, #0]
 80076ea:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80076ee:	605a      	str	r2, [r3, #4]
 80076f0:	687b      	ldr	r3, [r7, #4]
 80076f2:	681b      	ldr	r3, [r3, #0]
 80076f4:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80076f8:	615a      	str	r2, [r3, #20]
 80076fa:	687b      	ldr	r3, [r7, #4]
 80076fc:	681b      	ldr	r3, [r3, #0]
 80076fe:	681a      	ldr	r2, [r3, #0]
 8007700:	687b      	ldr	r3, [r7, #4]
 8007702:	681b      	ldr	r3, [r3, #0]
 8007704:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007708:	601a      	str	r2, [r3, #0]
 800770a:	6878      	ldr	r0, [r7, #4]
 800770c:	f7fe ff84 	bl	8006618 <HAL_I2C_SlaveTxCpltCallback>
 8007710:	e004      	b.n	800771c <I2C_Slave_AF+0xd4>
 8007712:	687b      	ldr	r3, [r7, #4]
 8007714:	681b      	ldr	r3, [r3, #0]
 8007716:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800771a:	615a      	str	r2, [r3, #20]
 800771c:	bf00      	nop
 800771e:	3710      	adds	r7, #16
 8007720:	46bd      	mov	sp, r7
 8007722:	bd80      	pop	{r7, pc}
 8007724:	ffff0000 	.word	0xffff0000

08007728 <I2C_ITError>:
 8007728:	b580      	push	{r7, lr}
 800772a:	b084      	sub	sp, #16
 800772c:	af00      	add	r7, sp, #0
 800772e:	6078      	str	r0, [r7, #4]
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007736:	73fb      	strb	r3, [r7, #15]
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800773e:	73bb      	strb	r3, [r7, #14]
 8007740:	7bbb      	ldrb	r3, [r7, #14]
 8007742:	2b10      	cmp	r3, #16
 8007744:	d002      	beq.n	800774c <I2C_ITError+0x24>
 8007746:	7bbb      	ldrb	r3, [r7, #14]
 8007748:	2b40      	cmp	r3, #64	; 0x40
 800774a:	d10a      	bne.n	8007762 <I2C_ITError+0x3a>
 800774c:	7bfb      	ldrb	r3, [r7, #15]
 800774e:	2b22      	cmp	r3, #34	; 0x22
 8007750:	d107      	bne.n	8007762 <I2C_ITError+0x3a>
 8007752:	687b      	ldr	r3, [r7, #4]
 8007754:	681b      	ldr	r3, [r3, #0]
 8007756:	681a      	ldr	r2, [r3, #0]
 8007758:	687b      	ldr	r3, [r7, #4]
 800775a:	681b      	ldr	r3, [r3, #0]
 800775c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007760:	601a      	str	r2, [r3, #0]
 8007762:	7bfb      	ldrb	r3, [r7, #15]
 8007764:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8007768:	2b28      	cmp	r3, #40	; 0x28
 800776a:	d107      	bne.n	800777c <I2C_ITError+0x54>
 800776c:	687b      	ldr	r3, [r7, #4]
 800776e:	2200      	movs	r2, #0
 8007770:	631a      	str	r2, [r3, #48]	; 0x30
 8007772:	687b      	ldr	r3, [r7, #4]
 8007774:	2228      	movs	r2, #40	; 0x28
 8007776:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800777a:	e015      	b.n	80077a8 <I2C_ITError+0x80>
 800777c:	687b      	ldr	r3, [r7, #4]
 800777e:	681b      	ldr	r3, [r3, #0]
 8007780:	685b      	ldr	r3, [r3, #4]
 8007782:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8007786:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800778a:	d00a      	beq.n	80077a2 <I2C_ITError+0x7a>
 800778c:	7bfb      	ldrb	r3, [r7, #15]
 800778e:	2b60      	cmp	r3, #96	; 0x60
 8007790:	d007      	beq.n	80077a2 <I2C_ITError+0x7a>
 8007792:	687b      	ldr	r3, [r7, #4]
 8007794:	2220      	movs	r2, #32
 8007796:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800779a:	687b      	ldr	r3, [r7, #4]
 800779c:	2200      	movs	r2, #0
 800779e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80077a2:	687b      	ldr	r3, [r7, #4]
 80077a4:	2200      	movs	r2, #0
 80077a6:	631a      	str	r2, [r3, #48]	; 0x30
 80077a8:	687b      	ldr	r3, [r7, #4]
 80077aa:	681b      	ldr	r3, [r3, #0]
 80077ac:	685b      	ldr	r3, [r3, #4]
 80077ae:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80077b2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80077b6:	d162      	bne.n	800787e <I2C_ITError+0x156>
 80077b8:	687b      	ldr	r3, [r7, #4]
 80077ba:	681b      	ldr	r3, [r3, #0]
 80077bc:	685a      	ldr	r2, [r3, #4]
 80077be:	687b      	ldr	r3, [r7, #4]
 80077c0:	681b      	ldr	r3, [r3, #0]
 80077c2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80077c6:	605a      	str	r2, [r3, #4]
 80077c8:	687b      	ldr	r3, [r7, #4]
 80077ca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80077cc:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80077d0:	b2db      	uxtb	r3, r3
 80077d2:	2b01      	cmp	r3, #1
 80077d4:	d020      	beq.n	8007818 <I2C_ITError+0xf0>
 80077d6:	687b      	ldr	r3, [r7, #4]
 80077d8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80077da:	4a6a      	ldr	r2, [pc, #424]	; (8007984 <I2C_ITError+0x25c>)
 80077dc:	651a      	str	r2, [r3, #80]	; 0x50
 80077de:	687b      	ldr	r3, [r7, #4]
 80077e0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80077e2:	4618      	mov	r0, r3
 80077e4:	f7fd fc1c 	bl	8005020 <HAL_DMA_Abort_IT>
 80077e8:	4603      	mov	r3, r0
 80077ea:	2b00      	cmp	r3, #0
 80077ec:	f000 8089 	beq.w	8007902 <I2C_ITError+0x1da>
 80077f0:	687b      	ldr	r3, [r7, #4]
 80077f2:	681b      	ldr	r3, [r3, #0]
 80077f4:	681a      	ldr	r2, [r3, #0]
 80077f6:	687b      	ldr	r3, [r7, #4]
 80077f8:	681b      	ldr	r3, [r3, #0]
 80077fa:	f022 0201 	bic.w	r2, r2, #1
 80077fe:	601a      	str	r2, [r3, #0]
 8007800:	687b      	ldr	r3, [r7, #4]
 8007802:	2220      	movs	r2, #32
 8007804:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007808:	687b      	ldr	r3, [r7, #4]
 800780a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800780c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800780e:	687a      	ldr	r2, [r7, #4]
 8007810:	6b52      	ldr	r2, [r2, #52]	; 0x34
 8007812:	4610      	mov	r0, r2
 8007814:	4798      	blx	r3
 8007816:	e074      	b.n	8007902 <I2C_ITError+0x1da>
 8007818:	687b      	ldr	r3, [r7, #4]
 800781a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800781c:	4a59      	ldr	r2, [pc, #356]	; (8007984 <I2C_ITError+0x25c>)
 800781e:	651a      	str	r2, [r3, #80]	; 0x50
 8007820:	687b      	ldr	r3, [r7, #4]
 8007822:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007824:	4618      	mov	r0, r3
 8007826:	f7fd fbfb 	bl	8005020 <HAL_DMA_Abort_IT>
 800782a:	4603      	mov	r3, r0
 800782c:	2b00      	cmp	r3, #0
 800782e:	d068      	beq.n	8007902 <I2C_ITError+0x1da>
 8007830:	687b      	ldr	r3, [r7, #4]
 8007832:	681b      	ldr	r3, [r3, #0]
 8007834:	695b      	ldr	r3, [r3, #20]
 8007836:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800783a:	2b40      	cmp	r3, #64	; 0x40
 800783c:	d10b      	bne.n	8007856 <I2C_ITError+0x12e>
 800783e:	687b      	ldr	r3, [r7, #4]
 8007840:	681b      	ldr	r3, [r3, #0]
 8007842:	691a      	ldr	r2, [r3, #16]
 8007844:	687b      	ldr	r3, [r7, #4]
 8007846:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007848:	b2d2      	uxtb	r2, r2
 800784a:	701a      	strb	r2, [r3, #0]
 800784c:	687b      	ldr	r3, [r7, #4]
 800784e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007850:	1c5a      	adds	r2, r3, #1
 8007852:	687b      	ldr	r3, [r7, #4]
 8007854:	625a      	str	r2, [r3, #36]	; 0x24
 8007856:	687b      	ldr	r3, [r7, #4]
 8007858:	681b      	ldr	r3, [r3, #0]
 800785a:	681a      	ldr	r2, [r3, #0]
 800785c:	687b      	ldr	r3, [r7, #4]
 800785e:	681b      	ldr	r3, [r3, #0]
 8007860:	f022 0201 	bic.w	r2, r2, #1
 8007864:	601a      	str	r2, [r3, #0]
 8007866:	687b      	ldr	r3, [r7, #4]
 8007868:	2220      	movs	r2, #32
 800786a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800786e:	687b      	ldr	r3, [r7, #4]
 8007870:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007872:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007874:	687a      	ldr	r2, [r7, #4]
 8007876:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8007878:	4610      	mov	r0, r2
 800787a:	4798      	blx	r3
 800787c:	e041      	b.n	8007902 <I2C_ITError+0x1da>
 800787e:	687b      	ldr	r3, [r7, #4]
 8007880:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007884:	b2db      	uxtb	r3, r3
 8007886:	2b60      	cmp	r3, #96	; 0x60
 8007888:	d125      	bne.n	80078d6 <I2C_ITError+0x1ae>
 800788a:	687b      	ldr	r3, [r7, #4]
 800788c:	2220      	movs	r2, #32
 800788e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007892:	687b      	ldr	r3, [r7, #4]
 8007894:	2200      	movs	r2, #0
 8007896:	641a      	str	r2, [r3, #64]	; 0x40
 8007898:	687b      	ldr	r3, [r7, #4]
 800789a:	681b      	ldr	r3, [r3, #0]
 800789c:	695b      	ldr	r3, [r3, #20]
 800789e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80078a2:	2b40      	cmp	r3, #64	; 0x40
 80078a4:	d10b      	bne.n	80078be <I2C_ITError+0x196>
 80078a6:	687b      	ldr	r3, [r7, #4]
 80078a8:	681b      	ldr	r3, [r3, #0]
 80078aa:	691a      	ldr	r2, [r3, #16]
 80078ac:	687b      	ldr	r3, [r7, #4]
 80078ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80078b0:	b2d2      	uxtb	r2, r2
 80078b2:	701a      	strb	r2, [r3, #0]
 80078b4:	687b      	ldr	r3, [r7, #4]
 80078b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80078b8:	1c5a      	adds	r2, r3, #1
 80078ba:	687b      	ldr	r3, [r7, #4]
 80078bc:	625a      	str	r2, [r3, #36]	; 0x24
 80078be:	687b      	ldr	r3, [r7, #4]
 80078c0:	681b      	ldr	r3, [r3, #0]
 80078c2:	681a      	ldr	r2, [r3, #0]
 80078c4:	687b      	ldr	r3, [r7, #4]
 80078c6:	681b      	ldr	r3, [r3, #0]
 80078c8:	f022 0201 	bic.w	r2, r2, #1
 80078cc:	601a      	str	r2, [r3, #0]
 80078ce:	6878      	ldr	r0, [r7, #4]
 80078d0:	f7fe feec 	bl	80066ac <HAL_I2C_AbortCpltCallback>
 80078d4:	e015      	b.n	8007902 <I2C_ITError+0x1da>
 80078d6:	687b      	ldr	r3, [r7, #4]
 80078d8:	681b      	ldr	r3, [r3, #0]
 80078da:	695b      	ldr	r3, [r3, #20]
 80078dc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80078e0:	2b40      	cmp	r3, #64	; 0x40
 80078e2:	d10b      	bne.n	80078fc <I2C_ITError+0x1d4>
 80078e4:	687b      	ldr	r3, [r7, #4]
 80078e6:	681b      	ldr	r3, [r3, #0]
 80078e8:	691a      	ldr	r2, [r3, #16]
 80078ea:	687b      	ldr	r3, [r7, #4]
 80078ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80078ee:	b2d2      	uxtb	r2, r2
 80078f0:	701a      	strb	r2, [r3, #0]
 80078f2:	687b      	ldr	r3, [r7, #4]
 80078f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80078f6:	1c5a      	adds	r2, r3, #1
 80078f8:	687b      	ldr	r3, [r7, #4]
 80078fa:	625a      	str	r2, [r3, #36]	; 0x24
 80078fc:	6878      	ldr	r0, [r7, #4]
 80078fe:	f7fe fecb 	bl	8006698 <HAL_I2C_ErrorCallback>
 8007902:	687b      	ldr	r3, [r7, #4]
 8007904:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007906:	60bb      	str	r3, [r7, #8]
 8007908:	68bb      	ldr	r3, [r7, #8]
 800790a:	f003 0301 	and.w	r3, r3, #1
 800790e:	2b00      	cmp	r3, #0
 8007910:	d10e      	bne.n	8007930 <I2C_ITError+0x208>
 8007912:	68bb      	ldr	r3, [r7, #8]
 8007914:	f003 0302 	and.w	r3, r3, #2
 8007918:	2b00      	cmp	r3, #0
 800791a:	d109      	bne.n	8007930 <I2C_ITError+0x208>
 800791c:	68bb      	ldr	r3, [r7, #8]
 800791e:	f003 0304 	and.w	r3, r3, #4
 8007922:	2b00      	cmp	r3, #0
 8007924:	d104      	bne.n	8007930 <I2C_ITError+0x208>
 8007926:	68bb      	ldr	r3, [r7, #8]
 8007928:	f003 0308 	and.w	r3, r3, #8
 800792c:	2b00      	cmp	r3, #0
 800792e:	d007      	beq.n	8007940 <I2C_ITError+0x218>
 8007930:	687b      	ldr	r3, [r7, #4]
 8007932:	681b      	ldr	r3, [r3, #0]
 8007934:	685a      	ldr	r2, [r3, #4]
 8007936:	687b      	ldr	r3, [r7, #4]
 8007938:	681b      	ldr	r3, [r3, #0]
 800793a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800793e:	605a      	str	r2, [r3, #4]
 8007940:	687b      	ldr	r3, [r7, #4]
 8007942:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007946:	73fb      	strb	r3, [r7, #15]
 8007948:	687b      	ldr	r3, [r7, #4]
 800794a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800794c:	f003 0304 	and.w	r3, r3, #4
 8007950:	2b04      	cmp	r3, #4
 8007952:	d113      	bne.n	800797c <I2C_ITError+0x254>
 8007954:	7bfb      	ldrb	r3, [r7, #15]
 8007956:	2b28      	cmp	r3, #40	; 0x28
 8007958:	d110      	bne.n	800797c <I2C_ITError+0x254>
 800795a:	687b      	ldr	r3, [r7, #4]
 800795c:	4a0a      	ldr	r2, [pc, #40]	; (8007988 <I2C_ITError+0x260>)
 800795e:	62da      	str	r2, [r3, #44]	; 0x2c
 8007960:	687b      	ldr	r3, [r7, #4]
 8007962:	2200      	movs	r2, #0
 8007964:	631a      	str	r2, [r3, #48]	; 0x30
 8007966:	687b      	ldr	r3, [r7, #4]
 8007968:	2220      	movs	r2, #32
 800796a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800796e:	687b      	ldr	r3, [r7, #4]
 8007970:	2200      	movs	r2, #0
 8007972:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007976:	6878      	ldr	r0, [r7, #4]
 8007978:	f7fe fe70 	bl	800665c <HAL_I2C_ListenCpltCallback>
 800797c:	bf00      	nop
 800797e:	3710      	adds	r7, #16
 8007980:	46bd      	mov	sp, r7
 8007982:	bd80      	pop	{r7, pc}
 8007984:	08007c2d 	.word	0x08007c2d
 8007988:	ffff0000 	.word	0xffff0000

0800798c <I2C_MasterRequestWrite>:
 800798c:	b580      	push	{r7, lr}
 800798e:	b088      	sub	sp, #32
 8007990:	af02      	add	r7, sp, #8
 8007992:	60f8      	str	r0, [r7, #12]
 8007994:	607a      	str	r2, [r7, #4]
 8007996:	603b      	str	r3, [r7, #0]
 8007998:	460b      	mov	r3, r1
 800799a:	817b      	strh	r3, [r7, #10]
 800799c:	68fb      	ldr	r3, [r7, #12]
 800799e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80079a0:	617b      	str	r3, [r7, #20]
 80079a2:	697b      	ldr	r3, [r7, #20]
 80079a4:	2b08      	cmp	r3, #8
 80079a6:	d006      	beq.n	80079b6 <I2C_MasterRequestWrite+0x2a>
 80079a8:	697b      	ldr	r3, [r7, #20]
 80079aa:	2b01      	cmp	r3, #1
 80079ac:	d003      	beq.n	80079b6 <I2C_MasterRequestWrite+0x2a>
 80079ae:	697b      	ldr	r3, [r7, #20]
 80079b0:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80079b4:	d108      	bne.n	80079c8 <I2C_MasterRequestWrite+0x3c>
 80079b6:	68fb      	ldr	r3, [r7, #12]
 80079b8:	681b      	ldr	r3, [r3, #0]
 80079ba:	681a      	ldr	r2, [r3, #0]
 80079bc:	68fb      	ldr	r3, [r7, #12]
 80079be:	681b      	ldr	r3, [r3, #0]
 80079c0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80079c4:	601a      	str	r2, [r3, #0]
 80079c6:	e00b      	b.n	80079e0 <I2C_MasterRequestWrite+0x54>
 80079c8:	68fb      	ldr	r3, [r7, #12]
 80079ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80079cc:	2b12      	cmp	r3, #18
 80079ce:	d107      	bne.n	80079e0 <I2C_MasterRequestWrite+0x54>
 80079d0:	68fb      	ldr	r3, [r7, #12]
 80079d2:	681b      	ldr	r3, [r3, #0]
 80079d4:	681a      	ldr	r2, [r3, #0]
 80079d6:	68fb      	ldr	r3, [r7, #12]
 80079d8:	681b      	ldr	r3, [r3, #0]
 80079da:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80079de:	601a      	str	r2, [r3, #0]
 80079e0:	683b      	ldr	r3, [r7, #0]
 80079e2:	9300      	str	r3, [sp, #0]
 80079e4:	687b      	ldr	r3, [r7, #4]
 80079e6:	2200      	movs	r2, #0
 80079e8:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80079ec:	68f8      	ldr	r0, [r7, #12]
 80079ee:	f000 f9c5 	bl	8007d7c <I2C_WaitOnFlagUntilTimeout>
 80079f2:	4603      	mov	r3, r0
 80079f4:	2b00      	cmp	r3, #0
 80079f6:	d00d      	beq.n	8007a14 <I2C_MasterRequestWrite+0x88>
 80079f8:	68fb      	ldr	r3, [r7, #12]
 80079fa:	681b      	ldr	r3, [r3, #0]
 80079fc:	681b      	ldr	r3, [r3, #0]
 80079fe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007a02:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007a06:	d103      	bne.n	8007a10 <I2C_MasterRequestWrite+0x84>
 8007a08:	68fb      	ldr	r3, [r7, #12]
 8007a0a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007a0e:	641a      	str	r2, [r3, #64]	; 0x40
 8007a10:	2303      	movs	r3, #3
 8007a12:	e035      	b.n	8007a80 <I2C_MasterRequestWrite+0xf4>
 8007a14:	68fb      	ldr	r3, [r7, #12]
 8007a16:	691b      	ldr	r3, [r3, #16]
 8007a18:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007a1c:	d108      	bne.n	8007a30 <I2C_MasterRequestWrite+0xa4>
 8007a1e:	897b      	ldrh	r3, [r7, #10]
 8007a20:	b2db      	uxtb	r3, r3
 8007a22:	461a      	mov	r2, r3
 8007a24:	68fb      	ldr	r3, [r7, #12]
 8007a26:	681b      	ldr	r3, [r3, #0]
 8007a28:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8007a2c:	611a      	str	r2, [r3, #16]
 8007a2e:	e01b      	b.n	8007a68 <I2C_MasterRequestWrite+0xdc>
 8007a30:	897b      	ldrh	r3, [r7, #10]
 8007a32:	11db      	asrs	r3, r3, #7
 8007a34:	b2db      	uxtb	r3, r3
 8007a36:	f003 0306 	and.w	r3, r3, #6
 8007a3a:	b2db      	uxtb	r3, r3
 8007a3c:	f063 030f 	orn	r3, r3, #15
 8007a40:	b2da      	uxtb	r2, r3
 8007a42:	68fb      	ldr	r3, [r7, #12]
 8007a44:	681b      	ldr	r3, [r3, #0]
 8007a46:	611a      	str	r2, [r3, #16]
 8007a48:	683b      	ldr	r3, [r7, #0]
 8007a4a:	687a      	ldr	r2, [r7, #4]
 8007a4c:	490e      	ldr	r1, [pc, #56]	; (8007a88 <I2C_MasterRequestWrite+0xfc>)
 8007a4e:	68f8      	ldr	r0, [r7, #12]
 8007a50:	f000 f9eb 	bl	8007e2a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007a54:	4603      	mov	r3, r0
 8007a56:	2b00      	cmp	r3, #0
 8007a58:	d001      	beq.n	8007a5e <I2C_MasterRequestWrite+0xd2>
 8007a5a:	2301      	movs	r3, #1
 8007a5c:	e010      	b.n	8007a80 <I2C_MasterRequestWrite+0xf4>
 8007a5e:	897b      	ldrh	r3, [r7, #10]
 8007a60:	b2da      	uxtb	r2, r3
 8007a62:	68fb      	ldr	r3, [r7, #12]
 8007a64:	681b      	ldr	r3, [r3, #0]
 8007a66:	611a      	str	r2, [r3, #16]
 8007a68:	683b      	ldr	r3, [r7, #0]
 8007a6a:	687a      	ldr	r2, [r7, #4]
 8007a6c:	4907      	ldr	r1, [pc, #28]	; (8007a8c <I2C_MasterRequestWrite+0x100>)
 8007a6e:	68f8      	ldr	r0, [r7, #12]
 8007a70:	f000 f9db 	bl	8007e2a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007a74:	4603      	mov	r3, r0
 8007a76:	2b00      	cmp	r3, #0
 8007a78:	d001      	beq.n	8007a7e <I2C_MasterRequestWrite+0xf2>
 8007a7a:	2301      	movs	r3, #1
 8007a7c:	e000      	b.n	8007a80 <I2C_MasterRequestWrite+0xf4>
 8007a7e:	2300      	movs	r3, #0
 8007a80:	4618      	mov	r0, r3
 8007a82:	3718      	adds	r7, #24
 8007a84:	46bd      	mov	sp, r7
 8007a86:	bd80      	pop	{r7, pc}
 8007a88:	00010008 	.word	0x00010008
 8007a8c:	00010002 	.word	0x00010002

08007a90 <I2C_MasterRequestRead>:
 8007a90:	b580      	push	{r7, lr}
 8007a92:	b088      	sub	sp, #32
 8007a94:	af02      	add	r7, sp, #8
 8007a96:	60f8      	str	r0, [r7, #12]
 8007a98:	607a      	str	r2, [r7, #4]
 8007a9a:	603b      	str	r3, [r7, #0]
 8007a9c:	460b      	mov	r3, r1
 8007a9e:	817b      	strh	r3, [r7, #10]
 8007aa0:	68fb      	ldr	r3, [r7, #12]
 8007aa2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007aa4:	617b      	str	r3, [r7, #20]
 8007aa6:	68fb      	ldr	r3, [r7, #12]
 8007aa8:	681b      	ldr	r3, [r3, #0]
 8007aaa:	681a      	ldr	r2, [r3, #0]
 8007aac:	68fb      	ldr	r3, [r7, #12]
 8007aae:	681b      	ldr	r3, [r3, #0]
 8007ab0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007ab4:	601a      	str	r2, [r3, #0]
 8007ab6:	697b      	ldr	r3, [r7, #20]
 8007ab8:	2b08      	cmp	r3, #8
 8007aba:	d006      	beq.n	8007aca <I2C_MasterRequestRead+0x3a>
 8007abc:	697b      	ldr	r3, [r7, #20]
 8007abe:	2b01      	cmp	r3, #1
 8007ac0:	d003      	beq.n	8007aca <I2C_MasterRequestRead+0x3a>
 8007ac2:	697b      	ldr	r3, [r7, #20]
 8007ac4:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8007ac8:	d108      	bne.n	8007adc <I2C_MasterRequestRead+0x4c>
 8007aca:	68fb      	ldr	r3, [r7, #12]
 8007acc:	681b      	ldr	r3, [r3, #0]
 8007ace:	681a      	ldr	r2, [r3, #0]
 8007ad0:	68fb      	ldr	r3, [r7, #12]
 8007ad2:	681b      	ldr	r3, [r3, #0]
 8007ad4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007ad8:	601a      	str	r2, [r3, #0]
 8007ada:	e00b      	b.n	8007af4 <I2C_MasterRequestRead+0x64>
 8007adc:	68fb      	ldr	r3, [r7, #12]
 8007ade:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007ae0:	2b11      	cmp	r3, #17
 8007ae2:	d107      	bne.n	8007af4 <I2C_MasterRequestRead+0x64>
 8007ae4:	68fb      	ldr	r3, [r7, #12]
 8007ae6:	681b      	ldr	r3, [r3, #0]
 8007ae8:	681a      	ldr	r2, [r3, #0]
 8007aea:	68fb      	ldr	r3, [r7, #12]
 8007aec:	681b      	ldr	r3, [r3, #0]
 8007aee:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007af2:	601a      	str	r2, [r3, #0]
 8007af4:	683b      	ldr	r3, [r7, #0]
 8007af6:	9300      	str	r3, [sp, #0]
 8007af8:	687b      	ldr	r3, [r7, #4]
 8007afa:	2200      	movs	r2, #0
 8007afc:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8007b00:	68f8      	ldr	r0, [r7, #12]
 8007b02:	f000 f93b 	bl	8007d7c <I2C_WaitOnFlagUntilTimeout>
 8007b06:	4603      	mov	r3, r0
 8007b08:	2b00      	cmp	r3, #0
 8007b0a:	d00d      	beq.n	8007b28 <I2C_MasterRequestRead+0x98>
 8007b0c:	68fb      	ldr	r3, [r7, #12]
 8007b0e:	681b      	ldr	r3, [r3, #0]
 8007b10:	681b      	ldr	r3, [r3, #0]
 8007b12:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007b16:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007b1a:	d103      	bne.n	8007b24 <I2C_MasterRequestRead+0x94>
 8007b1c:	68fb      	ldr	r3, [r7, #12]
 8007b1e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007b22:	641a      	str	r2, [r3, #64]	; 0x40
 8007b24:	2303      	movs	r3, #3
 8007b26:	e079      	b.n	8007c1c <I2C_MasterRequestRead+0x18c>
 8007b28:	68fb      	ldr	r3, [r7, #12]
 8007b2a:	691b      	ldr	r3, [r3, #16]
 8007b2c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007b30:	d108      	bne.n	8007b44 <I2C_MasterRequestRead+0xb4>
 8007b32:	897b      	ldrh	r3, [r7, #10]
 8007b34:	b2db      	uxtb	r3, r3
 8007b36:	f043 0301 	orr.w	r3, r3, #1
 8007b3a:	b2da      	uxtb	r2, r3
 8007b3c:	68fb      	ldr	r3, [r7, #12]
 8007b3e:	681b      	ldr	r3, [r3, #0]
 8007b40:	611a      	str	r2, [r3, #16]
 8007b42:	e05f      	b.n	8007c04 <I2C_MasterRequestRead+0x174>
 8007b44:	897b      	ldrh	r3, [r7, #10]
 8007b46:	11db      	asrs	r3, r3, #7
 8007b48:	b2db      	uxtb	r3, r3
 8007b4a:	f003 0306 	and.w	r3, r3, #6
 8007b4e:	b2db      	uxtb	r3, r3
 8007b50:	f063 030f 	orn	r3, r3, #15
 8007b54:	b2da      	uxtb	r2, r3
 8007b56:	68fb      	ldr	r3, [r7, #12]
 8007b58:	681b      	ldr	r3, [r3, #0]
 8007b5a:	611a      	str	r2, [r3, #16]
 8007b5c:	683b      	ldr	r3, [r7, #0]
 8007b5e:	687a      	ldr	r2, [r7, #4]
 8007b60:	4930      	ldr	r1, [pc, #192]	; (8007c24 <I2C_MasterRequestRead+0x194>)
 8007b62:	68f8      	ldr	r0, [r7, #12]
 8007b64:	f000 f961 	bl	8007e2a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007b68:	4603      	mov	r3, r0
 8007b6a:	2b00      	cmp	r3, #0
 8007b6c:	d001      	beq.n	8007b72 <I2C_MasterRequestRead+0xe2>
 8007b6e:	2301      	movs	r3, #1
 8007b70:	e054      	b.n	8007c1c <I2C_MasterRequestRead+0x18c>
 8007b72:	897b      	ldrh	r3, [r7, #10]
 8007b74:	b2da      	uxtb	r2, r3
 8007b76:	68fb      	ldr	r3, [r7, #12]
 8007b78:	681b      	ldr	r3, [r3, #0]
 8007b7a:	611a      	str	r2, [r3, #16]
 8007b7c:	683b      	ldr	r3, [r7, #0]
 8007b7e:	687a      	ldr	r2, [r7, #4]
 8007b80:	4929      	ldr	r1, [pc, #164]	; (8007c28 <I2C_MasterRequestRead+0x198>)
 8007b82:	68f8      	ldr	r0, [r7, #12]
 8007b84:	f000 f951 	bl	8007e2a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007b88:	4603      	mov	r3, r0
 8007b8a:	2b00      	cmp	r3, #0
 8007b8c:	d001      	beq.n	8007b92 <I2C_MasterRequestRead+0x102>
 8007b8e:	2301      	movs	r3, #1
 8007b90:	e044      	b.n	8007c1c <I2C_MasterRequestRead+0x18c>
 8007b92:	2300      	movs	r3, #0
 8007b94:	613b      	str	r3, [r7, #16]
 8007b96:	68fb      	ldr	r3, [r7, #12]
 8007b98:	681b      	ldr	r3, [r3, #0]
 8007b9a:	695b      	ldr	r3, [r3, #20]
 8007b9c:	613b      	str	r3, [r7, #16]
 8007b9e:	68fb      	ldr	r3, [r7, #12]
 8007ba0:	681b      	ldr	r3, [r3, #0]
 8007ba2:	699b      	ldr	r3, [r3, #24]
 8007ba4:	613b      	str	r3, [r7, #16]
 8007ba6:	693b      	ldr	r3, [r7, #16]
 8007ba8:	68fb      	ldr	r3, [r7, #12]
 8007baa:	681b      	ldr	r3, [r3, #0]
 8007bac:	681a      	ldr	r2, [r3, #0]
 8007bae:	68fb      	ldr	r3, [r7, #12]
 8007bb0:	681b      	ldr	r3, [r3, #0]
 8007bb2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007bb6:	601a      	str	r2, [r3, #0]
 8007bb8:	683b      	ldr	r3, [r7, #0]
 8007bba:	9300      	str	r3, [sp, #0]
 8007bbc:	687b      	ldr	r3, [r7, #4]
 8007bbe:	2200      	movs	r2, #0
 8007bc0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8007bc4:	68f8      	ldr	r0, [r7, #12]
 8007bc6:	f000 f8d9 	bl	8007d7c <I2C_WaitOnFlagUntilTimeout>
 8007bca:	4603      	mov	r3, r0
 8007bcc:	2b00      	cmp	r3, #0
 8007bce:	d00d      	beq.n	8007bec <I2C_MasterRequestRead+0x15c>
 8007bd0:	68fb      	ldr	r3, [r7, #12]
 8007bd2:	681b      	ldr	r3, [r3, #0]
 8007bd4:	681b      	ldr	r3, [r3, #0]
 8007bd6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007bda:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007bde:	d103      	bne.n	8007be8 <I2C_MasterRequestRead+0x158>
 8007be0:	68fb      	ldr	r3, [r7, #12]
 8007be2:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007be6:	641a      	str	r2, [r3, #64]	; 0x40
 8007be8:	2303      	movs	r3, #3
 8007bea:	e017      	b.n	8007c1c <I2C_MasterRequestRead+0x18c>
 8007bec:	897b      	ldrh	r3, [r7, #10]
 8007bee:	11db      	asrs	r3, r3, #7
 8007bf0:	b2db      	uxtb	r3, r3
 8007bf2:	f003 0306 	and.w	r3, r3, #6
 8007bf6:	b2db      	uxtb	r3, r3
 8007bf8:	f063 030e 	orn	r3, r3, #14
 8007bfc:	b2da      	uxtb	r2, r3
 8007bfe:	68fb      	ldr	r3, [r7, #12]
 8007c00:	681b      	ldr	r3, [r3, #0]
 8007c02:	611a      	str	r2, [r3, #16]
 8007c04:	683b      	ldr	r3, [r7, #0]
 8007c06:	687a      	ldr	r2, [r7, #4]
 8007c08:	4907      	ldr	r1, [pc, #28]	; (8007c28 <I2C_MasterRequestRead+0x198>)
 8007c0a:	68f8      	ldr	r0, [r7, #12]
 8007c0c:	f000 f90d 	bl	8007e2a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007c10:	4603      	mov	r3, r0
 8007c12:	2b00      	cmp	r3, #0
 8007c14:	d001      	beq.n	8007c1a <I2C_MasterRequestRead+0x18a>
 8007c16:	2301      	movs	r3, #1
 8007c18:	e000      	b.n	8007c1c <I2C_MasterRequestRead+0x18c>
 8007c1a:	2300      	movs	r3, #0
 8007c1c:	4618      	mov	r0, r3
 8007c1e:	3718      	adds	r7, #24
 8007c20:	46bd      	mov	sp, r7
 8007c22:	bd80      	pop	{r7, pc}
 8007c24:	00010008 	.word	0x00010008
 8007c28:	00010002 	.word	0x00010002

08007c2c <I2C_DMAAbort>:
 8007c2c:	b580      	push	{r7, lr}
 8007c2e:	b086      	sub	sp, #24
 8007c30:	af00      	add	r7, sp, #0
 8007c32:	6078      	str	r0, [r7, #4]
 8007c34:	2300      	movs	r3, #0
 8007c36:	60fb      	str	r3, [r7, #12]
 8007c38:	687b      	ldr	r3, [r7, #4]
 8007c3a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c3c:	617b      	str	r3, [r7, #20]
 8007c3e:	697b      	ldr	r3, [r7, #20]
 8007c40:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007c44:	74fb      	strb	r3, [r7, #19]
 8007c46:	4b4b      	ldr	r3, [pc, #300]	; (8007d74 <I2C_DMAAbort+0x148>)
 8007c48:	681b      	ldr	r3, [r3, #0]
 8007c4a:	08db      	lsrs	r3, r3, #3
 8007c4c:	4a4a      	ldr	r2, [pc, #296]	; (8007d78 <I2C_DMAAbort+0x14c>)
 8007c4e:	fba2 2303 	umull	r2, r3, r2, r3
 8007c52:	0a1a      	lsrs	r2, r3, #8
 8007c54:	4613      	mov	r3, r2
 8007c56:	009b      	lsls	r3, r3, #2
 8007c58:	4413      	add	r3, r2
 8007c5a:	00da      	lsls	r2, r3, #3
 8007c5c:	1ad3      	subs	r3, r2, r3
 8007c5e:	60fb      	str	r3, [r7, #12]
 8007c60:	68fb      	ldr	r3, [r7, #12]
 8007c62:	2b00      	cmp	r3, #0
 8007c64:	d106      	bne.n	8007c74 <I2C_DMAAbort+0x48>
 8007c66:	697b      	ldr	r3, [r7, #20]
 8007c68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007c6a:	f043 0220 	orr.w	r2, r3, #32
 8007c6e:	697b      	ldr	r3, [r7, #20]
 8007c70:	641a      	str	r2, [r3, #64]	; 0x40
 8007c72:	e00a      	b.n	8007c8a <I2C_DMAAbort+0x5e>
 8007c74:	68fb      	ldr	r3, [r7, #12]
 8007c76:	3b01      	subs	r3, #1
 8007c78:	60fb      	str	r3, [r7, #12]
 8007c7a:	697b      	ldr	r3, [r7, #20]
 8007c7c:	681b      	ldr	r3, [r3, #0]
 8007c7e:	681b      	ldr	r3, [r3, #0]
 8007c80:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8007c84:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007c88:	d0ea      	beq.n	8007c60 <I2C_DMAAbort+0x34>
 8007c8a:	697b      	ldr	r3, [r7, #20]
 8007c8c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007c8e:	2b00      	cmp	r3, #0
 8007c90:	d003      	beq.n	8007c9a <I2C_DMAAbort+0x6e>
 8007c92:	697b      	ldr	r3, [r7, #20]
 8007c94:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007c96:	2200      	movs	r2, #0
 8007c98:	63da      	str	r2, [r3, #60]	; 0x3c
 8007c9a:	697b      	ldr	r3, [r7, #20]
 8007c9c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007c9e:	2b00      	cmp	r3, #0
 8007ca0:	d003      	beq.n	8007caa <I2C_DMAAbort+0x7e>
 8007ca2:	697b      	ldr	r3, [r7, #20]
 8007ca4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007ca6:	2200      	movs	r2, #0
 8007ca8:	63da      	str	r2, [r3, #60]	; 0x3c
 8007caa:	697b      	ldr	r3, [r7, #20]
 8007cac:	681b      	ldr	r3, [r3, #0]
 8007cae:	681a      	ldr	r2, [r3, #0]
 8007cb0:	697b      	ldr	r3, [r7, #20]
 8007cb2:	681b      	ldr	r3, [r3, #0]
 8007cb4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007cb8:	601a      	str	r2, [r3, #0]
 8007cba:	697b      	ldr	r3, [r7, #20]
 8007cbc:	2200      	movs	r2, #0
 8007cbe:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007cc0:	697b      	ldr	r3, [r7, #20]
 8007cc2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007cc4:	2b00      	cmp	r3, #0
 8007cc6:	d003      	beq.n	8007cd0 <I2C_DMAAbort+0xa4>
 8007cc8:	697b      	ldr	r3, [r7, #20]
 8007cca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007ccc:	2200      	movs	r2, #0
 8007cce:	651a      	str	r2, [r3, #80]	; 0x50
 8007cd0:	697b      	ldr	r3, [r7, #20]
 8007cd2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007cd4:	2b00      	cmp	r3, #0
 8007cd6:	d003      	beq.n	8007ce0 <I2C_DMAAbort+0xb4>
 8007cd8:	697b      	ldr	r3, [r7, #20]
 8007cda:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007cdc:	2200      	movs	r2, #0
 8007cde:	651a      	str	r2, [r3, #80]	; 0x50
 8007ce0:	697b      	ldr	r3, [r7, #20]
 8007ce2:	681b      	ldr	r3, [r3, #0]
 8007ce4:	681a      	ldr	r2, [r3, #0]
 8007ce6:	697b      	ldr	r3, [r7, #20]
 8007ce8:	681b      	ldr	r3, [r3, #0]
 8007cea:	f022 0201 	bic.w	r2, r2, #1
 8007cee:	601a      	str	r2, [r3, #0]
 8007cf0:	697b      	ldr	r3, [r7, #20]
 8007cf2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007cf6:	b2db      	uxtb	r3, r3
 8007cf8:	2b60      	cmp	r3, #96	; 0x60
 8007cfa:	d10e      	bne.n	8007d1a <I2C_DMAAbort+0xee>
 8007cfc:	697b      	ldr	r3, [r7, #20]
 8007cfe:	2220      	movs	r2, #32
 8007d00:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007d04:	697b      	ldr	r3, [r7, #20]
 8007d06:	2200      	movs	r2, #0
 8007d08:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007d0c:	697b      	ldr	r3, [r7, #20]
 8007d0e:	2200      	movs	r2, #0
 8007d10:	641a      	str	r2, [r3, #64]	; 0x40
 8007d12:	6978      	ldr	r0, [r7, #20]
 8007d14:	f7fe fcca 	bl	80066ac <HAL_I2C_AbortCpltCallback>
 8007d18:	e027      	b.n	8007d6a <I2C_DMAAbort+0x13e>
 8007d1a:	7cfb      	ldrb	r3, [r7, #19]
 8007d1c:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8007d20:	2b28      	cmp	r3, #40	; 0x28
 8007d22:	d117      	bne.n	8007d54 <I2C_DMAAbort+0x128>
 8007d24:	697b      	ldr	r3, [r7, #20]
 8007d26:	681b      	ldr	r3, [r3, #0]
 8007d28:	681a      	ldr	r2, [r3, #0]
 8007d2a:	697b      	ldr	r3, [r7, #20]
 8007d2c:	681b      	ldr	r3, [r3, #0]
 8007d2e:	f042 0201 	orr.w	r2, r2, #1
 8007d32:	601a      	str	r2, [r3, #0]
 8007d34:	697b      	ldr	r3, [r7, #20]
 8007d36:	681b      	ldr	r3, [r3, #0]
 8007d38:	681a      	ldr	r2, [r3, #0]
 8007d3a:	697b      	ldr	r3, [r7, #20]
 8007d3c:	681b      	ldr	r3, [r3, #0]
 8007d3e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007d42:	601a      	str	r2, [r3, #0]
 8007d44:	697b      	ldr	r3, [r7, #20]
 8007d46:	2200      	movs	r2, #0
 8007d48:	631a      	str	r2, [r3, #48]	; 0x30
 8007d4a:	697b      	ldr	r3, [r7, #20]
 8007d4c:	2228      	movs	r2, #40	; 0x28
 8007d4e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007d52:	e007      	b.n	8007d64 <I2C_DMAAbort+0x138>
 8007d54:	697b      	ldr	r3, [r7, #20]
 8007d56:	2220      	movs	r2, #32
 8007d58:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007d5c:	697b      	ldr	r3, [r7, #20]
 8007d5e:	2200      	movs	r2, #0
 8007d60:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007d64:	6978      	ldr	r0, [r7, #20]
 8007d66:	f7fe fc97 	bl	8006698 <HAL_I2C_ErrorCallback>
 8007d6a:	bf00      	nop
 8007d6c:	3718      	adds	r7, #24
 8007d6e:	46bd      	mov	sp, r7
 8007d70:	bd80      	pop	{r7, pc}
 8007d72:	bf00      	nop
 8007d74:	20000138 	.word	0x20000138
 8007d78:	14f8b589 	.word	0x14f8b589

08007d7c <I2C_WaitOnFlagUntilTimeout>:
 8007d7c:	b580      	push	{r7, lr}
 8007d7e:	b084      	sub	sp, #16
 8007d80:	af00      	add	r7, sp, #0
 8007d82:	60f8      	str	r0, [r7, #12]
 8007d84:	60b9      	str	r1, [r7, #8]
 8007d86:	603b      	str	r3, [r7, #0]
 8007d88:	4613      	mov	r3, r2
 8007d8a:	71fb      	strb	r3, [r7, #7]
 8007d8c:	e025      	b.n	8007dda <I2C_WaitOnFlagUntilTimeout+0x5e>
 8007d8e:	683b      	ldr	r3, [r7, #0]
 8007d90:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007d94:	d021      	beq.n	8007dda <I2C_WaitOnFlagUntilTimeout+0x5e>
 8007d96:	f7fc feaf 	bl	8004af8 <HAL_GetTick>
 8007d9a:	4602      	mov	r2, r0
 8007d9c:	69bb      	ldr	r3, [r7, #24]
 8007d9e:	1ad3      	subs	r3, r2, r3
 8007da0:	683a      	ldr	r2, [r7, #0]
 8007da2:	429a      	cmp	r2, r3
 8007da4:	d302      	bcc.n	8007dac <I2C_WaitOnFlagUntilTimeout+0x30>
 8007da6:	683b      	ldr	r3, [r7, #0]
 8007da8:	2b00      	cmp	r3, #0
 8007daa:	d116      	bne.n	8007dda <I2C_WaitOnFlagUntilTimeout+0x5e>
 8007dac:	68fb      	ldr	r3, [r7, #12]
 8007dae:	2200      	movs	r2, #0
 8007db0:	631a      	str	r2, [r3, #48]	; 0x30
 8007db2:	68fb      	ldr	r3, [r7, #12]
 8007db4:	2220      	movs	r2, #32
 8007db6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007dba:	68fb      	ldr	r3, [r7, #12]
 8007dbc:	2200      	movs	r2, #0
 8007dbe:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007dc2:	68fb      	ldr	r3, [r7, #12]
 8007dc4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007dc6:	f043 0220 	orr.w	r2, r3, #32
 8007dca:	68fb      	ldr	r3, [r7, #12]
 8007dcc:	641a      	str	r2, [r3, #64]	; 0x40
 8007dce:	68fb      	ldr	r3, [r7, #12]
 8007dd0:	2200      	movs	r2, #0
 8007dd2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007dd6:	2301      	movs	r3, #1
 8007dd8:	e023      	b.n	8007e22 <I2C_WaitOnFlagUntilTimeout+0xa6>
 8007dda:	68bb      	ldr	r3, [r7, #8]
 8007ddc:	0c1b      	lsrs	r3, r3, #16
 8007dde:	b2db      	uxtb	r3, r3
 8007de0:	2b01      	cmp	r3, #1
 8007de2:	d10d      	bne.n	8007e00 <I2C_WaitOnFlagUntilTimeout+0x84>
 8007de4:	68fb      	ldr	r3, [r7, #12]
 8007de6:	681b      	ldr	r3, [r3, #0]
 8007de8:	695b      	ldr	r3, [r3, #20]
 8007dea:	43da      	mvns	r2, r3
 8007dec:	68bb      	ldr	r3, [r7, #8]
 8007dee:	4013      	ands	r3, r2
 8007df0:	b29b      	uxth	r3, r3
 8007df2:	2b00      	cmp	r3, #0
 8007df4:	bf0c      	ite	eq
 8007df6:	2301      	moveq	r3, #1
 8007df8:	2300      	movne	r3, #0
 8007dfa:	b2db      	uxtb	r3, r3
 8007dfc:	461a      	mov	r2, r3
 8007dfe:	e00c      	b.n	8007e1a <I2C_WaitOnFlagUntilTimeout+0x9e>
 8007e00:	68fb      	ldr	r3, [r7, #12]
 8007e02:	681b      	ldr	r3, [r3, #0]
 8007e04:	699b      	ldr	r3, [r3, #24]
 8007e06:	43da      	mvns	r2, r3
 8007e08:	68bb      	ldr	r3, [r7, #8]
 8007e0a:	4013      	ands	r3, r2
 8007e0c:	b29b      	uxth	r3, r3
 8007e0e:	2b00      	cmp	r3, #0
 8007e10:	bf0c      	ite	eq
 8007e12:	2301      	moveq	r3, #1
 8007e14:	2300      	movne	r3, #0
 8007e16:	b2db      	uxtb	r3, r3
 8007e18:	461a      	mov	r2, r3
 8007e1a:	79fb      	ldrb	r3, [r7, #7]
 8007e1c:	429a      	cmp	r2, r3
 8007e1e:	d0b6      	beq.n	8007d8e <I2C_WaitOnFlagUntilTimeout+0x12>
 8007e20:	2300      	movs	r3, #0
 8007e22:	4618      	mov	r0, r3
 8007e24:	3710      	adds	r7, #16
 8007e26:	46bd      	mov	sp, r7
 8007e28:	bd80      	pop	{r7, pc}

08007e2a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8007e2a:	b580      	push	{r7, lr}
 8007e2c:	b084      	sub	sp, #16
 8007e2e:	af00      	add	r7, sp, #0
 8007e30:	60f8      	str	r0, [r7, #12]
 8007e32:	60b9      	str	r1, [r7, #8]
 8007e34:	607a      	str	r2, [r7, #4]
 8007e36:	603b      	str	r3, [r7, #0]
 8007e38:	e051      	b.n	8007ede <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8007e3a:	68fb      	ldr	r3, [r7, #12]
 8007e3c:	681b      	ldr	r3, [r3, #0]
 8007e3e:	695b      	ldr	r3, [r3, #20]
 8007e40:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007e44:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007e48:	d123      	bne.n	8007e92 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8007e4a:	68fb      	ldr	r3, [r7, #12]
 8007e4c:	681b      	ldr	r3, [r3, #0]
 8007e4e:	681a      	ldr	r2, [r3, #0]
 8007e50:	68fb      	ldr	r3, [r7, #12]
 8007e52:	681b      	ldr	r3, [r3, #0]
 8007e54:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007e58:	601a      	str	r2, [r3, #0]
 8007e5a:	68fb      	ldr	r3, [r7, #12]
 8007e5c:	681b      	ldr	r3, [r3, #0]
 8007e5e:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8007e62:	615a      	str	r2, [r3, #20]
 8007e64:	68fb      	ldr	r3, [r7, #12]
 8007e66:	2200      	movs	r2, #0
 8007e68:	631a      	str	r2, [r3, #48]	; 0x30
 8007e6a:	68fb      	ldr	r3, [r7, #12]
 8007e6c:	2220      	movs	r2, #32
 8007e6e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007e72:	68fb      	ldr	r3, [r7, #12]
 8007e74:	2200      	movs	r2, #0
 8007e76:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007e7a:	68fb      	ldr	r3, [r7, #12]
 8007e7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007e7e:	f043 0204 	orr.w	r2, r3, #4
 8007e82:	68fb      	ldr	r3, [r7, #12]
 8007e84:	641a      	str	r2, [r3, #64]	; 0x40
 8007e86:	68fb      	ldr	r3, [r7, #12]
 8007e88:	2200      	movs	r2, #0
 8007e8a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007e8e:	2301      	movs	r3, #1
 8007e90:	e046      	b.n	8007f20 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8007e92:	687b      	ldr	r3, [r7, #4]
 8007e94:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007e98:	d021      	beq.n	8007ede <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8007e9a:	f7fc fe2d 	bl	8004af8 <HAL_GetTick>
 8007e9e:	4602      	mov	r2, r0
 8007ea0:	683b      	ldr	r3, [r7, #0]
 8007ea2:	1ad3      	subs	r3, r2, r3
 8007ea4:	687a      	ldr	r2, [r7, #4]
 8007ea6:	429a      	cmp	r2, r3
 8007ea8:	d302      	bcc.n	8007eb0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8007eaa:	687b      	ldr	r3, [r7, #4]
 8007eac:	2b00      	cmp	r3, #0
 8007eae:	d116      	bne.n	8007ede <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8007eb0:	68fb      	ldr	r3, [r7, #12]
 8007eb2:	2200      	movs	r2, #0
 8007eb4:	631a      	str	r2, [r3, #48]	; 0x30
 8007eb6:	68fb      	ldr	r3, [r7, #12]
 8007eb8:	2220      	movs	r2, #32
 8007eba:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007ebe:	68fb      	ldr	r3, [r7, #12]
 8007ec0:	2200      	movs	r2, #0
 8007ec2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007ec6:	68fb      	ldr	r3, [r7, #12]
 8007ec8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007eca:	f043 0220 	orr.w	r2, r3, #32
 8007ece:	68fb      	ldr	r3, [r7, #12]
 8007ed0:	641a      	str	r2, [r3, #64]	; 0x40
 8007ed2:	68fb      	ldr	r3, [r7, #12]
 8007ed4:	2200      	movs	r2, #0
 8007ed6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007eda:	2301      	movs	r3, #1
 8007edc:	e020      	b.n	8007f20 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8007ede:	68bb      	ldr	r3, [r7, #8]
 8007ee0:	0c1b      	lsrs	r3, r3, #16
 8007ee2:	b2db      	uxtb	r3, r3
 8007ee4:	2b01      	cmp	r3, #1
 8007ee6:	d10c      	bne.n	8007f02 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8007ee8:	68fb      	ldr	r3, [r7, #12]
 8007eea:	681b      	ldr	r3, [r3, #0]
 8007eec:	695b      	ldr	r3, [r3, #20]
 8007eee:	43da      	mvns	r2, r3
 8007ef0:	68bb      	ldr	r3, [r7, #8]
 8007ef2:	4013      	ands	r3, r2
 8007ef4:	b29b      	uxth	r3, r3
 8007ef6:	2b00      	cmp	r3, #0
 8007ef8:	bf14      	ite	ne
 8007efa:	2301      	movne	r3, #1
 8007efc:	2300      	moveq	r3, #0
 8007efe:	b2db      	uxtb	r3, r3
 8007f00:	e00b      	b.n	8007f1a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8007f02:	68fb      	ldr	r3, [r7, #12]
 8007f04:	681b      	ldr	r3, [r3, #0]
 8007f06:	699b      	ldr	r3, [r3, #24]
 8007f08:	43da      	mvns	r2, r3
 8007f0a:	68bb      	ldr	r3, [r7, #8]
 8007f0c:	4013      	ands	r3, r2
 8007f0e:	b29b      	uxth	r3, r3
 8007f10:	2b00      	cmp	r3, #0
 8007f12:	bf14      	ite	ne
 8007f14:	2301      	movne	r3, #1
 8007f16:	2300      	moveq	r3, #0
 8007f18:	b2db      	uxtb	r3, r3
 8007f1a:	2b00      	cmp	r3, #0
 8007f1c:	d18d      	bne.n	8007e3a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8007f1e:	2300      	movs	r3, #0
 8007f20:	4618      	mov	r0, r3
 8007f22:	3710      	adds	r7, #16
 8007f24:	46bd      	mov	sp, r7
 8007f26:	bd80      	pop	{r7, pc}

08007f28 <I2C_WaitOnTXEFlagUntilTimeout>:
 8007f28:	b580      	push	{r7, lr}
 8007f2a:	b084      	sub	sp, #16
 8007f2c:	af00      	add	r7, sp, #0
 8007f2e:	60f8      	str	r0, [r7, #12]
 8007f30:	60b9      	str	r1, [r7, #8]
 8007f32:	607a      	str	r2, [r7, #4]
 8007f34:	e02d      	b.n	8007f92 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8007f36:	68f8      	ldr	r0, [r7, #12]
 8007f38:	f000 f900 	bl	800813c <I2C_IsAcknowledgeFailed>
 8007f3c:	4603      	mov	r3, r0
 8007f3e:	2b00      	cmp	r3, #0
 8007f40:	d001      	beq.n	8007f46 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8007f42:	2301      	movs	r3, #1
 8007f44:	e02d      	b.n	8007fa2 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8007f46:	68bb      	ldr	r3, [r7, #8]
 8007f48:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007f4c:	d021      	beq.n	8007f92 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8007f4e:	f7fc fdd3 	bl	8004af8 <HAL_GetTick>
 8007f52:	4602      	mov	r2, r0
 8007f54:	687b      	ldr	r3, [r7, #4]
 8007f56:	1ad3      	subs	r3, r2, r3
 8007f58:	68ba      	ldr	r2, [r7, #8]
 8007f5a:	429a      	cmp	r2, r3
 8007f5c:	d302      	bcc.n	8007f64 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8007f5e:	68bb      	ldr	r3, [r7, #8]
 8007f60:	2b00      	cmp	r3, #0
 8007f62:	d116      	bne.n	8007f92 <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8007f64:	68fb      	ldr	r3, [r7, #12]
 8007f66:	2200      	movs	r2, #0
 8007f68:	631a      	str	r2, [r3, #48]	; 0x30
 8007f6a:	68fb      	ldr	r3, [r7, #12]
 8007f6c:	2220      	movs	r2, #32
 8007f6e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007f72:	68fb      	ldr	r3, [r7, #12]
 8007f74:	2200      	movs	r2, #0
 8007f76:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007f7a:	68fb      	ldr	r3, [r7, #12]
 8007f7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007f7e:	f043 0220 	orr.w	r2, r3, #32
 8007f82:	68fb      	ldr	r3, [r7, #12]
 8007f84:	641a      	str	r2, [r3, #64]	; 0x40
 8007f86:	68fb      	ldr	r3, [r7, #12]
 8007f88:	2200      	movs	r2, #0
 8007f8a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007f8e:	2301      	movs	r3, #1
 8007f90:	e007      	b.n	8007fa2 <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8007f92:	68fb      	ldr	r3, [r7, #12]
 8007f94:	681b      	ldr	r3, [r3, #0]
 8007f96:	695b      	ldr	r3, [r3, #20]
 8007f98:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007f9c:	2b80      	cmp	r3, #128	; 0x80
 8007f9e:	d1ca      	bne.n	8007f36 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8007fa0:	2300      	movs	r3, #0
 8007fa2:	4618      	mov	r0, r3
 8007fa4:	3710      	adds	r7, #16
 8007fa6:	46bd      	mov	sp, r7
 8007fa8:	bd80      	pop	{r7, pc}

08007faa <I2C_WaitOnBTFFlagUntilTimeout>:
 8007faa:	b580      	push	{r7, lr}
 8007fac:	b084      	sub	sp, #16
 8007fae:	af00      	add	r7, sp, #0
 8007fb0:	60f8      	str	r0, [r7, #12]
 8007fb2:	60b9      	str	r1, [r7, #8]
 8007fb4:	607a      	str	r2, [r7, #4]
 8007fb6:	e02d      	b.n	8008014 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8007fb8:	68f8      	ldr	r0, [r7, #12]
 8007fba:	f000 f8bf 	bl	800813c <I2C_IsAcknowledgeFailed>
 8007fbe:	4603      	mov	r3, r0
 8007fc0:	2b00      	cmp	r3, #0
 8007fc2:	d001      	beq.n	8007fc8 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8007fc4:	2301      	movs	r3, #1
 8007fc6:	e02d      	b.n	8008024 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8007fc8:	68bb      	ldr	r3, [r7, #8]
 8007fca:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007fce:	d021      	beq.n	8008014 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8007fd0:	f7fc fd92 	bl	8004af8 <HAL_GetTick>
 8007fd4:	4602      	mov	r2, r0
 8007fd6:	687b      	ldr	r3, [r7, #4]
 8007fd8:	1ad3      	subs	r3, r2, r3
 8007fda:	68ba      	ldr	r2, [r7, #8]
 8007fdc:	429a      	cmp	r2, r3
 8007fde:	d302      	bcc.n	8007fe6 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8007fe0:	68bb      	ldr	r3, [r7, #8]
 8007fe2:	2b00      	cmp	r3, #0
 8007fe4:	d116      	bne.n	8008014 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8007fe6:	68fb      	ldr	r3, [r7, #12]
 8007fe8:	2200      	movs	r2, #0
 8007fea:	631a      	str	r2, [r3, #48]	; 0x30
 8007fec:	68fb      	ldr	r3, [r7, #12]
 8007fee:	2220      	movs	r2, #32
 8007ff0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007ff4:	68fb      	ldr	r3, [r7, #12]
 8007ff6:	2200      	movs	r2, #0
 8007ff8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007ffc:	68fb      	ldr	r3, [r7, #12]
 8007ffe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008000:	f043 0220 	orr.w	r2, r3, #32
 8008004:	68fb      	ldr	r3, [r7, #12]
 8008006:	641a      	str	r2, [r3, #64]	; 0x40
 8008008:	68fb      	ldr	r3, [r7, #12]
 800800a:	2200      	movs	r2, #0
 800800c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008010:	2301      	movs	r3, #1
 8008012:	e007      	b.n	8008024 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8008014:	68fb      	ldr	r3, [r7, #12]
 8008016:	681b      	ldr	r3, [r3, #0]
 8008018:	695b      	ldr	r3, [r3, #20]
 800801a:	f003 0304 	and.w	r3, r3, #4
 800801e:	2b04      	cmp	r3, #4
 8008020:	d1ca      	bne.n	8007fb8 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8008022:	2300      	movs	r3, #0
 8008024:	4618      	mov	r0, r3
 8008026:	3710      	adds	r7, #16
 8008028:	46bd      	mov	sp, r7
 800802a:	bd80      	pop	{r7, pc}

0800802c <I2C_WaitOnSTOPRequestThroughIT>:
 800802c:	b480      	push	{r7}
 800802e:	b085      	sub	sp, #20
 8008030:	af00      	add	r7, sp, #0
 8008032:	6078      	str	r0, [r7, #4]
 8008034:	2300      	movs	r3, #0
 8008036:	60fb      	str	r3, [r7, #12]
 8008038:	4b13      	ldr	r3, [pc, #76]	; (8008088 <I2C_WaitOnSTOPRequestThroughIT+0x5c>)
 800803a:	681b      	ldr	r3, [r3, #0]
 800803c:	08db      	lsrs	r3, r3, #3
 800803e:	4a13      	ldr	r2, [pc, #76]	; (800808c <I2C_WaitOnSTOPRequestThroughIT+0x60>)
 8008040:	fba2 2303 	umull	r2, r3, r2, r3
 8008044:	0a1a      	lsrs	r2, r3, #8
 8008046:	4613      	mov	r3, r2
 8008048:	009b      	lsls	r3, r3, #2
 800804a:	4413      	add	r3, r2
 800804c:	60fb      	str	r3, [r7, #12]
 800804e:	68fb      	ldr	r3, [r7, #12]
 8008050:	3b01      	subs	r3, #1
 8008052:	60fb      	str	r3, [r7, #12]
 8008054:	68fb      	ldr	r3, [r7, #12]
 8008056:	2b00      	cmp	r3, #0
 8008058:	d107      	bne.n	800806a <I2C_WaitOnSTOPRequestThroughIT+0x3e>
 800805a:	687b      	ldr	r3, [r7, #4]
 800805c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800805e:	f043 0220 	orr.w	r2, r3, #32
 8008062:	687b      	ldr	r3, [r7, #4]
 8008064:	641a      	str	r2, [r3, #64]	; 0x40
 8008066:	2301      	movs	r3, #1
 8008068:	e008      	b.n	800807c <I2C_WaitOnSTOPRequestThroughIT+0x50>
 800806a:	687b      	ldr	r3, [r7, #4]
 800806c:	681b      	ldr	r3, [r3, #0]
 800806e:	681b      	ldr	r3, [r3, #0]
 8008070:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8008074:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008078:	d0e9      	beq.n	800804e <I2C_WaitOnSTOPRequestThroughIT+0x22>
 800807a:	2300      	movs	r3, #0
 800807c:	4618      	mov	r0, r3
 800807e:	3714      	adds	r7, #20
 8008080:	46bd      	mov	sp, r7
 8008082:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008086:	4770      	bx	lr
 8008088:	20000138 	.word	0x20000138
 800808c:	14f8b589 	.word	0x14f8b589

08008090 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8008090:	b580      	push	{r7, lr}
 8008092:	b084      	sub	sp, #16
 8008094:	af00      	add	r7, sp, #0
 8008096:	60f8      	str	r0, [r7, #12]
 8008098:	60b9      	str	r1, [r7, #8]
 800809a:	607a      	str	r2, [r7, #4]
 800809c:	e042      	b.n	8008124 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 800809e:	68fb      	ldr	r3, [r7, #12]
 80080a0:	681b      	ldr	r3, [r3, #0]
 80080a2:	695b      	ldr	r3, [r3, #20]
 80080a4:	f003 0310 	and.w	r3, r3, #16
 80080a8:	2b10      	cmp	r3, #16
 80080aa:	d119      	bne.n	80080e0 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 80080ac:	68fb      	ldr	r3, [r7, #12]
 80080ae:	681b      	ldr	r3, [r3, #0]
 80080b0:	f06f 0210 	mvn.w	r2, #16
 80080b4:	615a      	str	r2, [r3, #20]
 80080b6:	68fb      	ldr	r3, [r7, #12]
 80080b8:	2200      	movs	r2, #0
 80080ba:	631a      	str	r2, [r3, #48]	; 0x30
 80080bc:	68fb      	ldr	r3, [r7, #12]
 80080be:	2220      	movs	r2, #32
 80080c0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80080c4:	68fb      	ldr	r3, [r7, #12]
 80080c6:	2200      	movs	r2, #0
 80080c8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80080cc:	68fb      	ldr	r3, [r7, #12]
 80080ce:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80080d0:	68fb      	ldr	r3, [r7, #12]
 80080d2:	641a      	str	r2, [r3, #64]	; 0x40
 80080d4:	68fb      	ldr	r3, [r7, #12]
 80080d6:	2200      	movs	r2, #0
 80080d8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80080dc:	2301      	movs	r3, #1
 80080de:	e029      	b.n	8008134 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 80080e0:	f7fc fd0a 	bl	8004af8 <HAL_GetTick>
 80080e4:	4602      	mov	r2, r0
 80080e6:	687b      	ldr	r3, [r7, #4]
 80080e8:	1ad3      	subs	r3, r2, r3
 80080ea:	68ba      	ldr	r2, [r7, #8]
 80080ec:	429a      	cmp	r2, r3
 80080ee:	d302      	bcc.n	80080f6 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 80080f0:	68bb      	ldr	r3, [r7, #8]
 80080f2:	2b00      	cmp	r3, #0
 80080f4:	d116      	bne.n	8008124 <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 80080f6:	68fb      	ldr	r3, [r7, #12]
 80080f8:	2200      	movs	r2, #0
 80080fa:	631a      	str	r2, [r3, #48]	; 0x30
 80080fc:	68fb      	ldr	r3, [r7, #12]
 80080fe:	2220      	movs	r2, #32
 8008100:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008104:	68fb      	ldr	r3, [r7, #12]
 8008106:	2200      	movs	r2, #0
 8008108:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800810c:	68fb      	ldr	r3, [r7, #12]
 800810e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008110:	f043 0220 	orr.w	r2, r3, #32
 8008114:	68fb      	ldr	r3, [r7, #12]
 8008116:	641a      	str	r2, [r3, #64]	; 0x40
 8008118:	68fb      	ldr	r3, [r7, #12]
 800811a:	2200      	movs	r2, #0
 800811c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008120:	2301      	movs	r3, #1
 8008122:	e007      	b.n	8008134 <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 8008124:	68fb      	ldr	r3, [r7, #12]
 8008126:	681b      	ldr	r3, [r3, #0]
 8008128:	695b      	ldr	r3, [r3, #20]
 800812a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800812e:	2b40      	cmp	r3, #64	; 0x40
 8008130:	d1b5      	bne.n	800809e <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8008132:	2300      	movs	r3, #0
 8008134:	4618      	mov	r0, r3
 8008136:	3710      	adds	r7, #16
 8008138:	46bd      	mov	sp, r7
 800813a:	bd80      	pop	{r7, pc}

0800813c <I2C_IsAcknowledgeFailed>:
 800813c:	b480      	push	{r7}
 800813e:	b083      	sub	sp, #12
 8008140:	af00      	add	r7, sp, #0
 8008142:	6078      	str	r0, [r7, #4]
 8008144:	687b      	ldr	r3, [r7, #4]
 8008146:	681b      	ldr	r3, [r3, #0]
 8008148:	695b      	ldr	r3, [r3, #20]
 800814a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800814e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8008152:	d11b      	bne.n	800818c <I2C_IsAcknowledgeFailed+0x50>
 8008154:	687b      	ldr	r3, [r7, #4]
 8008156:	681b      	ldr	r3, [r3, #0]
 8008158:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 800815c:	615a      	str	r2, [r3, #20]
 800815e:	687b      	ldr	r3, [r7, #4]
 8008160:	2200      	movs	r2, #0
 8008162:	631a      	str	r2, [r3, #48]	; 0x30
 8008164:	687b      	ldr	r3, [r7, #4]
 8008166:	2220      	movs	r2, #32
 8008168:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800816c:	687b      	ldr	r3, [r7, #4]
 800816e:	2200      	movs	r2, #0
 8008170:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008174:	687b      	ldr	r3, [r7, #4]
 8008176:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008178:	f043 0204 	orr.w	r2, r3, #4
 800817c:	687b      	ldr	r3, [r7, #4]
 800817e:	641a      	str	r2, [r3, #64]	; 0x40
 8008180:	687b      	ldr	r3, [r7, #4]
 8008182:	2200      	movs	r2, #0
 8008184:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008188:	2301      	movs	r3, #1
 800818a:	e000      	b.n	800818e <I2C_IsAcknowledgeFailed+0x52>
 800818c:	2300      	movs	r3, #0
 800818e:	4618      	mov	r0, r3
 8008190:	370c      	adds	r7, #12
 8008192:	46bd      	mov	sp, r7
 8008194:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008198:	4770      	bx	lr

0800819a <I2C_ConvertOtherXferOptions>:
 800819a:	b480      	push	{r7}
 800819c:	b083      	sub	sp, #12
 800819e:	af00      	add	r7, sp, #0
 80081a0:	6078      	str	r0, [r7, #4]
 80081a2:	687b      	ldr	r3, [r7, #4]
 80081a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80081a6:	f5b3 0f2a 	cmp.w	r3, #11141120	; 0xaa0000
 80081aa:	d103      	bne.n	80081b4 <I2C_ConvertOtherXferOptions+0x1a>
 80081ac:	687b      	ldr	r3, [r7, #4]
 80081ae:	2201      	movs	r2, #1
 80081b0:	62da      	str	r2, [r3, #44]	; 0x2c
 80081b2:	e007      	b.n	80081c4 <I2C_ConvertOtherXferOptions+0x2a>
 80081b4:	687b      	ldr	r3, [r7, #4]
 80081b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80081b8:	f1b3 4f2a 	cmp.w	r3, #2852126720	; 0xaa000000
 80081bc:	d102      	bne.n	80081c4 <I2C_ConvertOtherXferOptions+0x2a>
 80081be:	687b      	ldr	r3, [r7, #4]
 80081c0:	2208      	movs	r2, #8
 80081c2:	62da      	str	r2, [r3, #44]	; 0x2c
 80081c4:	bf00      	nop
 80081c6:	370c      	adds	r7, #12
 80081c8:	46bd      	mov	sp, r7
 80081ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081ce:	4770      	bx	lr

080081d0 <HAL_RCC_OscConfig>:
 80081d0:	b580      	push	{r7, lr}
 80081d2:	b086      	sub	sp, #24
 80081d4:	af00      	add	r7, sp, #0
 80081d6:	6078      	str	r0, [r7, #4]
 80081d8:	687b      	ldr	r3, [r7, #4]
 80081da:	2b00      	cmp	r3, #0
 80081dc:	d101      	bne.n	80081e2 <HAL_RCC_OscConfig+0x12>
 80081de:	2301      	movs	r3, #1
 80081e0:	e267      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 80081e2:	687b      	ldr	r3, [r7, #4]
 80081e4:	681b      	ldr	r3, [r3, #0]
 80081e6:	f003 0301 	and.w	r3, r3, #1
 80081ea:	2b00      	cmp	r3, #0
 80081ec:	d075      	beq.n	80082da <HAL_RCC_OscConfig+0x10a>
 80081ee:	4b88      	ldr	r3, [pc, #544]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 80081f0:	689b      	ldr	r3, [r3, #8]
 80081f2:	f003 030c 	and.w	r3, r3, #12
 80081f6:	2b04      	cmp	r3, #4
 80081f8:	d00c      	beq.n	8008214 <HAL_RCC_OscConfig+0x44>
 80081fa:	4b85      	ldr	r3, [pc, #532]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 80081fc:	689b      	ldr	r3, [r3, #8]
 80081fe:	f003 030c 	and.w	r3, r3, #12
 8008202:	2b08      	cmp	r3, #8
 8008204:	d112      	bne.n	800822c <HAL_RCC_OscConfig+0x5c>
 8008206:	4b82      	ldr	r3, [pc, #520]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 8008208:	685b      	ldr	r3, [r3, #4]
 800820a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800820e:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8008212:	d10b      	bne.n	800822c <HAL_RCC_OscConfig+0x5c>
 8008214:	4b7e      	ldr	r3, [pc, #504]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 8008216:	681b      	ldr	r3, [r3, #0]
 8008218:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800821c:	2b00      	cmp	r3, #0
 800821e:	d05b      	beq.n	80082d8 <HAL_RCC_OscConfig+0x108>
 8008220:	687b      	ldr	r3, [r7, #4]
 8008222:	685b      	ldr	r3, [r3, #4]
 8008224:	2b00      	cmp	r3, #0
 8008226:	d157      	bne.n	80082d8 <HAL_RCC_OscConfig+0x108>
 8008228:	2301      	movs	r3, #1
 800822a:	e242      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 800822c:	687b      	ldr	r3, [r7, #4]
 800822e:	685b      	ldr	r3, [r3, #4]
 8008230:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008234:	d106      	bne.n	8008244 <HAL_RCC_OscConfig+0x74>
 8008236:	4b76      	ldr	r3, [pc, #472]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 8008238:	681b      	ldr	r3, [r3, #0]
 800823a:	4a75      	ldr	r2, [pc, #468]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 800823c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008240:	6013      	str	r3, [r2, #0]
 8008242:	e01d      	b.n	8008280 <HAL_RCC_OscConfig+0xb0>
 8008244:	687b      	ldr	r3, [r7, #4]
 8008246:	685b      	ldr	r3, [r3, #4]
 8008248:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800824c:	d10c      	bne.n	8008268 <HAL_RCC_OscConfig+0x98>
 800824e:	4b70      	ldr	r3, [pc, #448]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 8008250:	681b      	ldr	r3, [r3, #0]
 8008252:	4a6f      	ldr	r2, [pc, #444]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 8008254:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8008258:	6013      	str	r3, [r2, #0]
 800825a:	4b6d      	ldr	r3, [pc, #436]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 800825c:	681b      	ldr	r3, [r3, #0]
 800825e:	4a6c      	ldr	r2, [pc, #432]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 8008260:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008264:	6013      	str	r3, [r2, #0]
 8008266:	e00b      	b.n	8008280 <HAL_RCC_OscConfig+0xb0>
 8008268:	4b69      	ldr	r3, [pc, #420]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 800826a:	681b      	ldr	r3, [r3, #0]
 800826c:	4a68      	ldr	r2, [pc, #416]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 800826e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8008272:	6013      	str	r3, [r2, #0]
 8008274:	4b66      	ldr	r3, [pc, #408]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 8008276:	681b      	ldr	r3, [r3, #0]
 8008278:	4a65      	ldr	r2, [pc, #404]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 800827a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800827e:	6013      	str	r3, [r2, #0]
 8008280:	687b      	ldr	r3, [r7, #4]
 8008282:	685b      	ldr	r3, [r3, #4]
 8008284:	2b00      	cmp	r3, #0
 8008286:	d013      	beq.n	80082b0 <HAL_RCC_OscConfig+0xe0>
 8008288:	f7fc fc36 	bl	8004af8 <HAL_GetTick>
 800828c:	6138      	str	r0, [r7, #16]
 800828e:	e008      	b.n	80082a2 <HAL_RCC_OscConfig+0xd2>
 8008290:	f7fc fc32 	bl	8004af8 <HAL_GetTick>
 8008294:	4602      	mov	r2, r0
 8008296:	693b      	ldr	r3, [r7, #16]
 8008298:	1ad3      	subs	r3, r2, r3
 800829a:	2b64      	cmp	r3, #100	; 0x64
 800829c:	d901      	bls.n	80082a2 <HAL_RCC_OscConfig+0xd2>
 800829e:	2303      	movs	r3, #3
 80082a0:	e207      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 80082a2:	4b5b      	ldr	r3, [pc, #364]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 80082a4:	681b      	ldr	r3, [r3, #0]
 80082a6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80082aa:	2b00      	cmp	r3, #0
 80082ac:	d0f0      	beq.n	8008290 <HAL_RCC_OscConfig+0xc0>
 80082ae:	e014      	b.n	80082da <HAL_RCC_OscConfig+0x10a>
 80082b0:	f7fc fc22 	bl	8004af8 <HAL_GetTick>
 80082b4:	6138      	str	r0, [r7, #16]
 80082b6:	e008      	b.n	80082ca <HAL_RCC_OscConfig+0xfa>
 80082b8:	f7fc fc1e 	bl	8004af8 <HAL_GetTick>
 80082bc:	4602      	mov	r2, r0
 80082be:	693b      	ldr	r3, [r7, #16]
 80082c0:	1ad3      	subs	r3, r2, r3
 80082c2:	2b64      	cmp	r3, #100	; 0x64
 80082c4:	d901      	bls.n	80082ca <HAL_RCC_OscConfig+0xfa>
 80082c6:	2303      	movs	r3, #3
 80082c8:	e1f3      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 80082ca:	4b51      	ldr	r3, [pc, #324]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 80082cc:	681b      	ldr	r3, [r3, #0]
 80082ce:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80082d2:	2b00      	cmp	r3, #0
 80082d4:	d1f0      	bne.n	80082b8 <HAL_RCC_OscConfig+0xe8>
 80082d6:	e000      	b.n	80082da <HAL_RCC_OscConfig+0x10a>
 80082d8:	bf00      	nop
 80082da:	687b      	ldr	r3, [r7, #4]
 80082dc:	681b      	ldr	r3, [r3, #0]
 80082de:	f003 0302 	and.w	r3, r3, #2
 80082e2:	2b00      	cmp	r3, #0
 80082e4:	d063      	beq.n	80083ae <HAL_RCC_OscConfig+0x1de>
 80082e6:	4b4a      	ldr	r3, [pc, #296]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 80082e8:	689b      	ldr	r3, [r3, #8]
 80082ea:	f003 030c 	and.w	r3, r3, #12
 80082ee:	2b00      	cmp	r3, #0
 80082f0:	d00b      	beq.n	800830a <HAL_RCC_OscConfig+0x13a>
 80082f2:	4b47      	ldr	r3, [pc, #284]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 80082f4:	689b      	ldr	r3, [r3, #8]
 80082f6:	f003 030c 	and.w	r3, r3, #12
 80082fa:	2b08      	cmp	r3, #8
 80082fc:	d11c      	bne.n	8008338 <HAL_RCC_OscConfig+0x168>
 80082fe:	4b44      	ldr	r3, [pc, #272]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 8008300:	685b      	ldr	r3, [r3, #4]
 8008302:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008306:	2b00      	cmp	r3, #0
 8008308:	d116      	bne.n	8008338 <HAL_RCC_OscConfig+0x168>
 800830a:	4b41      	ldr	r3, [pc, #260]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 800830c:	681b      	ldr	r3, [r3, #0]
 800830e:	f003 0302 	and.w	r3, r3, #2
 8008312:	2b00      	cmp	r3, #0
 8008314:	d005      	beq.n	8008322 <HAL_RCC_OscConfig+0x152>
 8008316:	687b      	ldr	r3, [r7, #4]
 8008318:	68db      	ldr	r3, [r3, #12]
 800831a:	2b01      	cmp	r3, #1
 800831c:	d001      	beq.n	8008322 <HAL_RCC_OscConfig+0x152>
 800831e:	2301      	movs	r3, #1
 8008320:	e1c7      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 8008322:	4b3b      	ldr	r3, [pc, #236]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 8008324:	681b      	ldr	r3, [r3, #0]
 8008326:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800832a:	687b      	ldr	r3, [r7, #4]
 800832c:	691b      	ldr	r3, [r3, #16]
 800832e:	00db      	lsls	r3, r3, #3
 8008330:	4937      	ldr	r1, [pc, #220]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 8008332:	4313      	orrs	r3, r2
 8008334:	600b      	str	r3, [r1, #0]
 8008336:	e03a      	b.n	80083ae <HAL_RCC_OscConfig+0x1de>
 8008338:	687b      	ldr	r3, [r7, #4]
 800833a:	68db      	ldr	r3, [r3, #12]
 800833c:	2b00      	cmp	r3, #0
 800833e:	d020      	beq.n	8008382 <HAL_RCC_OscConfig+0x1b2>
 8008340:	4b34      	ldr	r3, [pc, #208]	; (8008414 <HAL_RCC_OscConfig+0x244>)
 8008342:	2201      	movs	r2, #1
 8008344:	601a      	str	r2, [r3, #0]
 8008346:	f7fc fbd7 	bl	8004af8 <HAL_GetTick>
 800834a:	6138      	str	r0, [r7, #16]
 800834c:	e008      	b.n	8008360 <HAL_RCC_OscConfig+0x190>
 800834e:	f7fc fbd3 	bl	8004af8 <HAL_GetTick>
 8008352:	4602      	mov	r2, r0
 8008354:	693b      	ldr	r3, [r7, #16]
 8008356:	1ad3      	subs	r3, r2, r3
 8008358:	2b02      	cmp	r3, #2
 800835a:	d901      	bls.n	8008360 <HAL_RCC_OscConfig+0x190>
 800835c:	2303      	movs	r3, #3
 800835e:	e1a8      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 8008360:	4b2b      	ldr	r3, [pc, #172]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 8008362:	681b      	ldr	r3, [r3, #0]
 8008364:	f003 0302 	and.w	r3, r3, #2
 8008368:	2b00      	cmp	r3, #0
 800836a:	d0f0      	beq.n	800834e <HAL_RCC_OscConfig+0x17e>
 800836c:	4b28      	ldr	r3, [pc, #160]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 800836e:	681b      	ldr	r3, [r3, #0]
 8008370:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8008374:	687b      	ldr	r3, [r7, #4]
 8008376:	691b      	ldr	r3, [r3, #16]
 8008378:	00db      	lsls	r3, r3, #3
 800837a:	4925      	ldr	r1, [pc, #148]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 800837c:	4313      	orrs	r3, r2
 800837e:	600b      	str	r3, [r1, #0]
 8008380:	e015      	b.n	80083ae <HAL_RCC_OscConfig+0x1de>
 8008382:	4b24      	ldr	r3, [pc, #144]	; (8008414 <HAL_RCC_OscConfig+0x244>)
 8008384:	2200      	movs	r2, #0
 8008386:	601a      	str	r2, [r3, #0]
 8008388:	f7fc fbb6 	bl	8004af8 <HAL_GetTick>
 800838c:	6138      	str	r0, [r7, #16]
 800838e:	e008      	b.n	80083a2 <HAL_RCC_OscConfig+0x1d2>
 8008390:	f7fc fbb2 	bl	8004af8 <HAL_GetTick>
 8008394:	4602      	mov	r2, r0
 8008396:	693b      	ldr	r3, [r7, #16]
 8008398:	1ad3      	subs	r3, r2, r3
 800839a:	2b02      	cmp	r3, #2
 800839c:	d901      	bls.n	80083a2 <HAL_RCC_OscConfig+0x1d2>
 800839e:	2303      	movs	r3, #3
 80083a0:	e187      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 80083a2:	4b1b      	ldr	r3, [pc, #108]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 80083a4:	681b      	ldr	r3, [r3, #0]
 80083a6:	f003 0302 	and.w	r3, r3, #2
 80083aa:	2b00      	cmp	r3, #0
 80083ac:	d1f0      	bne.n	8008390 <HAL_RCC_OscConfig+0x1c0>
 80083ae:	687b      	ldr	r3, [r7, #4]
 80083b0:	681b      	ldr	r3, [r3, #0]
 80083b2:	f003 0308 	and.w	r3, r3, #8
 80083b6:	2b00      	cmp	r3, #0
 80083b8:	d036      	beq.n	8008428 <HAL_RCC_OscConfig+0x258>
 80083ba:	687b      	ldr	r3, [r7, #4]
 80083bc:	695b      	ldr	r3, [r3, #20]
 80083be:	2b00      	cmp	r3, #0
 80083c0:	d016      	beq.n	80083f0 <HAL_RCC_OscConfig+0x220>
 80083c2:	4b15      	ldr	r3, [pc, #84]	; (8008418 <HAL_RCC_OscConfig+0x248>)
 80083c4:	2201      	movs	r2, #1
 80083c6:	601a      	str	r2, [r3, #0]
 80083c8:	f7fc fb96 	bl	8004af8 <HAL_GetTick>
 80083cc:	6138      	str	r0, [r7, #16]
 80083ce:	e008      	b.n	80083e2 <HAL_RCC_OscConfig+0x212>
 80083d0:	f7fc fb92 	bl	8004af8 <HAL_GetTick>
 80083d4:	4602      	mov	r2, r0
 80083d6:	693b      	ldr	r3, [r7, #16]
 80083d8:	1ad3      	subs	r3, r2, r3
 80083da:	2b02      	cmp	r3, #2
 80083dc:	d901      	bls.n	80083e2 <HAL_RCC_OscConfig+0x212>
 80083de:	2303      	movs	r3, #3
 80083e0:	e167      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 80083e2:	4b0b      	ldr	r3, [pc, #44]	; (8008410 <HAL_RCC_OscConfig+0x240>)
 80083e4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80083e6:	f003 0302 	and.w	r3, r3, #2
 80083ea:	2b00      	cmp	r3, #0
 80083ec:	d0f0      	beq.n	80083d0 <HAL_RCC_OscConfig+0x200>
 80083ee:	e01b      	b.n	8008428 <HAL_RCC_OscConfig+0x258>
 80083f0:	4b09      	ldr	r3, [pc, #36]	; (8008418 <HAL_RCC_OscConfig+0x248>)
 80083f2:	2200      	movs	r2, #0
 80083f4:	601a      	str	r2, [r3, #0]
 80083f6:	f7fc fb7f 	bl	8004af8 <HAL_GetTick>
 80083fa:	6138      	str	r0, [r7, #16]
 80083fc:	e00e      	b.n	800841c <HAL_RCC_OscConfig+0x24c>
 80083fe:	f7fc fb7b 	bl	8004af8 <HAL_GetTick>
 8008402:	4602      	mov	r2, r0
 8008404:	693b      	ldr	r3, [r7, #16]
 8008406:	1ad3      	subs	r3, r2, r3
 8008408:	2b02      	cmp	r3, #2
 800840a:	d907      	bls.n	800841c <HAL_RCC_OscConfig+0x24c>
 800840c:	2303      	movs	r3, #3
 800840e:	e150      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 8008410:	40023800 	.word	0x40023800
 8008414:	42470000 	.word	0x42470000
 8008418:	42470e80 	.word	0x42470e80
 800841c:	4b88      	ldr	r3, [pc, #544]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 800841e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008420:	f003 0302 	and.w	r3, r3, #2
 8008424:	2b00      	cmp	r3, #0
 8008426:	d1ea      	bne.n	80083fe <HAL_RCC_OscConfig+0x22e>
 8008428:	687b      	ldr	r3, [r7, #4]
 800842a:	681b      	ldr	r3, [r3, #0]
 800842c:	f003 0304 	and.w	r3, r3, #4
 8008430:	2b00      	cmp	r3, #0
 8008432:	f000 8097 	beq.w	8008564 <HAL_RCC_OscConfig+0x394>
 8008436:	2300      	movs	r3, #0
 8008438:	75fb      	strb	r3, [r7, #23]
 800843a:	4b81      	ldr	r3, [pc, #516]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 800843c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800843e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008442:	2b00      	cmp	r3, #0
 8008444:	d10f      	bne.n	8008466 <HAL_RCC_OscConfig+0x296>
 8008446:	2300      	movs	r3, #0
 8008448:	60bb      	str	r3, [r7, #8]
 800844a:	4b7d      	ldr	r3, [pc, #500]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 800844c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800844e:	4a7c      	ldr	r2, [pc, #496]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 8008450:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008454:	6413      	str	r3, [r2, #64]	; 0x40
 8008456:	4b7a      	ldr	r3, [pc, #488]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 8008458:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800845a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800845e:	60bb      	str	r3, [r7, #8]
 8008460:	68bb      	ldr	r3, [r7, #8]
 8008462:	2301      	movs	r3, #1
 8008464:	75fb      	strb	r3, [r7, #23]
 8008466:	4b77      	ldr	r3, [pc, #476]	; (8008644 <HAL_RCC_OscConfig+0x474>)
 8008468:	681b      	ldr	r3, [r3, #0]
 800846a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800846e:	2b00      	cmp	r3, #0
 8008470:	d118      	bne.n	80084a4 <HAL_RCC_OscConfig+0x2d4>
 8008472:	4b74      	ldr	r3, [pc, #464]	; (8008644 <HAL_RCC_OscConfig+0x474>)
 8008474:	681b      	ldr	r3, [r3, #0]
 8008476:	4a73      	ldr	r2, [pc, #460]	; (8008644 <HAL_RCC_OscConfig+0x474>)
 8008478:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800847c:	6013      	str	r3, [r2, #0]
 800847e:	f7fc fb3b 	bl	8004af8 <HAL_GetTick>
 8008482:	6138      	str	r0, [r7, #16]
 8008484:	e008      	b.n	8008498 <HAL_RCC_OscConfig+0x2c8>
 8008486:	f7fc fb37 	bl	8004af8 <HAL_GetTick>
 800848a:	4602      	mov	r2, r0
 800848c:	693b      	ldr	r3, [r7, #16]
 800848e:	1ad3      	subs	r3, r2, r3
 8008490:	2b02      	cmp	r3, #2
 8008492:	d901      	bls.n	8008498 <HAL_RCC_OscConfig+0x2c8>
 8008494:	2303      	movs	r3, #3
 8008496:	e10c      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 8008498:	4b6a      	ldr	r3, [pc, #424]	; (8008644 <HAL_RCC_OscConfig+0x474>)
 800849a:	681b      	ldr	r3, [r3, #0]
 800849c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80084a0:	2b00      	cmp	r3, #0
 80084a2:	d0f0      	beq.n	8008486 <HAL_RCC_OscConfig+0x2b6>
 80084a4:	687b      	ldr	r3, [r7, #4]
 80084a6:	689b      	ldr	r3, [r3, #8]
 80084a8:	2b01      	cmp	r3, #1
 80084aa:	d106      	bne.n	80084ba <HAL_RCC_OscConfig+0x2ea>
 80084ac:	4b64      	ldr	r3, [pc, #400]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 80084ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80084b0:	4a63      	ldr	r2, [pc, #396]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 80084b2:	f043 0301 	orr.w	r3, r3, #1
 80084b6:	6713      	str	r3, [r2, #112]	; 0x70
 80084b8:	e01c      	b.n	80084f4 <HAL_RCC_OscConfig+0x324>
 80084ba:	687b      	ldr	r3, [r7, #4]
 80084bc:	689b      	ldr	r3, [r3, #8]
 80084be:	2b05      	cmp	r3, #5
 80084c0:	d10c      	bne.n	80084dc <HAL_RCC_OscConfig+0x30c>
 80084c2:	4b5f      	ldr	r3, [pc, #380]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 80084c4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80084c6:	4a5e      	ldr	r2, [pc, #376]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 80084c8:	f043 0304 	orr.w	r3, r3, #4
 80084cc:	6713      	str	r3, [r2, #112]	; 0x70
 80084ce:	4b5c      	ldr	r3, [pc, #368]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 80084d0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80084d2:	4a5b      	ldr	r2, [pc, #364]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 80084d4:	f043 0301 	orr.w	r3, r3, #1
 80084d8:	6713      	str	r3, [r2, #112]	; 0x70
 80084da:	e00b      	b.n	80084f4 <HAL_RCC_OscConfig+0x324>
 80084dc:	4b58      	ldr	r3, [pc, #352]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 80084de:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80084e0:	4a57      	ldr	r2, [pc, #348]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 80084e2:	f023 0301 	bic.w	r3, r3, #1
 80084e6:	6713      	str	r3, [r2, #112]	; 0x70
 80084e8:	4b55      	ldr	r3, [pc, #340]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 80084ea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80084ec:	4a54      	ldr	r2, [pc, #336]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 80084ee:	f023 0304 	bic.w	r3, r3, #4
 80084f2:	6713      	str	r3, [r2, #112]	; 0x70
 80084f4:	687b      	ldr	r3, [r7, #4]
 80084f6:	689b      	ldr	r3, [r3, #8]
 80084f8:	2b00      	cmp	r3, #0
 80084fa:	d015      	beq.n	8008528 <HAL_RCC_OscConfig+0x358>
 80084fc:	f7fc fafc 	bl	8004af8 <HAL_GetTick>
 8008500:	6138      	str	r0, [r7, #16]
 8008502:	e00a      	b.n	800851a <HAL_RCC_OscConfig+0x34a>
 8008504:	f7fc faf8 	bl	8004af8 <HAL_GetTick>
 8008508:	4602      	mov	r2, r0
 800850a:	693b      	ldr	r3, [r7, #16]
 800850c:	1ad3      	subs	r3, r2, r3
 800850e:	f241 3288 	movw	r2, #5000	; 0x1388
 8008512:	4293      	cmp	r3, r2
 8008514:	d901      	bls.n	800851a <HAL_RCC_OscConfig+0x34a>
 8008516:	2303      	movs	r3, #3
 8008518:	e0cb      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 800851a:	4b49      	ldr	r3, [pc, #292]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 800851c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800851e:	f003 0302 	and.w	r3, r3, #2
 8008522:	2b00      	cmp	r3, #0
 8008524:	d0ee      	beq.n	8008504 <HAL_RCC_OscConfig+0x334>
 8008526:	e014      	b.n	8008552 <HAL_RCC_OscConfig+0x382>
 8008528:	f7fc fae6 	bl	8004af8 <HAL_GetTick>
 800852c:	6138      	str	r0, [r7, #16]
 800852e:	e00a      	b.n	8008546 <HAL_RCC_OscConfig+0x376>
 8008530:	f7fc fae2 	bl	8004af8 <HAL_GetTick>
 8008534:	4602      	mov	r2, r0
 8008536:	693b      	ldr	r3, [r7, #16]
 8008538:	1ad3      	subs	r3, r2, r3
 800853a:	f241 3288 	movw	r2, #5000	; 0x1388
 800853e:	4293      	cmp	r3, r2
 8008540:	d901      	bls.n	8008546 <HAL_RCC_OscConfig+0x376>
 8008542:	2303      	movs	r3, #3
 8008544:	e0b5      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 8008546:	4b3e      	ldr	r3, [pc, #248]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 8008548:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800854a:	f003 0302 	and.w	r3, r3, #2
 800854e:	2b00      	cmp	r3, #0
 8008550:	d1ee      	bne.n	8008530 <HAL_RCC_OscConfig+0x360>
 8008552:	7dfb      	ldrb	r3, [r7, #23]
 8008554:	2b01      	cmp	r3, #1
 8008556:	d105      	bne.n	8008564 <HAL_RCC_OscConfig+0x394>
 8008558:	4b39      	ldr	r3, [pc, #228]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 800855a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800855c:	4a38      	ldr	r2, [pc, #224]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 800855e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008562:	6413      	str	r3, [r2, #64]	; 0x40
 8008564:	687b      	ldr	r3, [r7, #4]
 8008566:	699b      	ldr	r3, [r3, #24]
 8008568:	2b00      	cmp	r3, #0
 800856a:	f000 80a1 	beq.w	80086b0 <HAL_RCC_OscConfig+0x4e0>
 800856e:	4b34      	ldr	r3, [pc, #208]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 8008570:	689b      	ldr	r3, [r3, #8]
 8008572:	f003 030c 	and.w	r3, r3, #12
 8008576:	2b08      	cmp	r3, #8
 8008578:	d05c      	beq.n	8008634 <HAL_RCC_OscConfig+0x464>
 800857a:	687b      	ldr	r3, [r7, #4]
 800857c:	699b      	ldr	r3, [r3, #24]
 800857e:	2b02      	cmp	r3, #2
 8008580:	d141      	bne.n	8008606 <HAL_RCC_OscConfig+0x436>
 8008582:	4b31      	ldr	r3, [pc, #196]	; (8008648 <HAL_RCC_OscConfig+0x478>)
 8008584:	2200      	movs	r2, #0
 8008586:	601a      	str	r2, [r3, #0]
 8008588:	f7fc fab6 	bl	8004af8 <HAL_GetTick>
 800858c:	6138      	str	r0, [r7, #16]
 800858e:	e008      	b.n	80085a2 <HAL_RCC_OscConfig+0x3d2>
 8008590:	f7fc fab2 	bl	8004af8 <HAL_GetTick>
 8008594:	4602      	mov	r2, r0
 8008596:	693b      	ldr	r3, [r7, #16]
 8008598:	1ad3      	subs	r3, r2, r3
 800859a:	2b02      	cmp	r3, #2
 800859c:	d901      	bls.n	80085a2 <HAL_RCC_OscConfig+0x3d2>
 800859e:	2303      	movs	r3, #3
 80085a0:	e087      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 80085a2:	4b27      	ldr	r3, [pc, #156]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 80085a4:	681b      	ldr	r3, [r3, #0]
 80085a6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80085aa:	2b00      	cmp	r3, #0
 80085ac:	d1f0      	bne.n	8008590 <HAL_RCC_OscConfig+0x3c0>
 80085ae:	687b      	ldr	r3, [r7, #4]
 80085b0:	69da      	ldr	r2, [r3, #28]
 80085b2:	687b      	ldr	r3, [r7, #4]
 80085b4:	6a1b      	ldr	r3, [r3, #32]
 80085b6:	431a      	orrs	r2, r3
 80085b8:	687b      	ldr	r3, [r7, #4]
 80085ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80085bc:	019b      	lsls	r3, r3, #6
 80085be:	431a      	orrs	r2, r3
 80085c0:	687b      	ldr	r3, [r7, #4]
 80085c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80085c4:	085b      	lsrs	r3, r3, #1
 80085c6:	3b01      	subs	r3, #1
 80085c8:	041b      	lsls	r3, r3, #16
 80085ca:	431a      	orrs	r2, r3
 80085cc:	687b      	ldr	r3, [r7, #4]
 80085ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80085d0:	061b      	lsls	r3, r3, #24
 80085d2:	491b      	ldr	r1, [pc, #108]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 80085d4:	4313      	orrs	r3, r2
 80085d6:	604b      	str	r3, [r1, #4]
 80085d8:	4b1b      	ldr	r3, [pc, #108]	; (8008648 <HAL_RCC_OscConfig+0x478>)
 80085da:	2201      	movs	r2, #1
 80085dc:	601a      	str	r2, [r3, #0]
 80085de:	f7fc fa8b 	bl	8004af8 <HAL_GetTick>
 80085e2:	6138      	str	r0, [r7, #16]
 80085e4:	e008      	b.n	80085f8 <HAL_RCC_OscConfig+0x428>
 80085e6:	f7fc fa87 	bl	8004af8 <HAL_GetTick>
 80085ea:	4602      	mov	r2, r0
 80085ec:	693b      	ldr	r3, [r7, #16]
 80085ee:	1ad3      	subs	r3, r2, r3
 80085f0:	2b02      	cmp	r3, #2
 80085f2:	d901      	bls.n	80085f8 <HAL_RCC_OscConfig+0x428>
 80085f4:	2303      	movs	r3, #3
 80085f6:	e05c      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 80085f8:	4b11      	ldr	r3, [pc, #68]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 80085fa:	681b      	ldr	r3, [r3, #0]
 80085fc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008600:	2b00      	cmp	r3, #0
 8008602:	d0f0      	beq.n	80085e6 <HAL_RCC_OscConfig+0x416>
 8008604:	e054      	b.n	80086b0 <HAL_RCC_OscConfig+0x4e0>
 8008606:	4b10      	ldr	r3, [pc, #64]	; (8008648 <HAL_RCC_OscConfig+0x478>)
 8008608:	2200      	movs	r2, #0
 800860a:	601a      	str	r2, [r3, #0]
 800860c:	f7fc fa74 	bl	8004af8 <HAL_GetTick>
 8008610:	6138      	str	r0, [r7, #16]
 8008612:	e008      	b.n	8008626 <HAL_RCC_OscConfig+0x456>
 8008614:	f7fc fa70 	bl	8004af8 <HAL_GetTick>
 8008618:	4602      	mov	r2, r0
 800861a:	693b      	ldr	r3, [r7, #16]
 800861c:	1ad3      	subs	r3, r2, r3
 800861e:	2b02      	cmp	r3, #2
 8008620:	d901      	bls.n	8008626 <HAL_RCC_OscConfig+0x456>
 8008622:	2303      	movs	r3, #3
 8008624:	e045      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 8008626:	4b06      	ldr	r3, [pc, #24]	; (8008640 <HAL_RCC_OscConfig+0x470>)
 8008628:	681b      	ldr	r3, [r3, #0]
 800862a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800862e:	2b00      	cmp	r3, #0
 8008630:	d1f0      	bne.n	8008614 <HAL_RCC_OscConfig+0x444>
 8008632:	e03d      	b.n	80086b0 <HAL_RCC_OscConfig+0x4e0>
 8008634:	687b      	ldr	r3, [r7, #4]
 8008636:	699b      	ldr	r3, [r3, #24]
 8008638:	2b01      	cmp	r3, #1
 800863a:	d107      	bne.n	800864c <HAL_RCC_OscConfig+0x47c>
 800863c:	2301      	movs	r3, #1
 800863e:	e038      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 8008640:	40023800 	.word	0x40023800
 8008644:	40007000 	.word	0x40007000
 8008648:	42470060 	.word	0x42470060
 800864c:	4b1b      	ldr	r3, [pc, #108]	; (80086bc <HAL_RCC_OscConfig+0x4ec>)
 800864e:	685b      	ldr	r3, [r3, #4]
 8008650:	60fb      	str	r3, [r7, #12]
 8008652:	687b      	ldr	r3, [r7, #4]
 8008654:	699b      	ldr	r3, [r3, #24]
 8008656:	2b01      	cmp	r3, #1
 8008658:	d028      	beq.n	80086ac <HAL_RCC_OscConfig+0x4dc>
 800865a:	68fb      	ldr	r3, [r7, #12]
 800865c:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8008660:	687b      	ldr	r3, [r7, #4]
 8008662:	69db      	ldr	r3, [r3, #28]
 8008664:	429a      	cmp	r2, r3
 8008666:	d121      	bne.n	80086ac <HAL_RCC_OscConfig+0x4dc>
 8008668:	68fb      	ldr	r3, [r7, #12]
 800866a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800866e:	687b      	ldr	r3, [r7, #4]
 8008670:	6a1b      	ldr	r3, [r3, #32]
 8008672:	429a      	cmp	r2, r3
 8008674:	d11a      	bne.n	80086ac <HAL_RCC_OscConfig+0x4dc>
 8008676:	68fa      	ldr	r2, [r7, #12]
 8008678:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800867c:	4013      	ands	r3, r2
 800867e:	687a      	ldr	r2, [r7, #4]
 8008680:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8008682:	0192      	lsls	r2, r2, #6
 8008684:	4293      	cmp	r3, r2
 8008686:	d111      	bne.n	80086ac <HAL_RCC_OscConfig+0x4dc>
 8008688:	68fb      	ldr	r3, [r7, #12]
 800868a:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 800868e:	687b      	ldr	r3, [r7, #4]
 8008690:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008692:	085b      	lsrs	r3, r3, #1
 8008694:	3b01      	subs	r3, #1
 8008696:	041b      	lsls	r3, r3, #16
 8008698:	429a      	cmp	r2, r3
 800869a:	d107      	bne.n	80086ac <HAL_RCC_OscConfig+0x4dc>
 800869c:	68fb      	ldr	r3, [r7, #12]
 800869e:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80086a2:	687b      	ldr	r3, [r7, #4]
 80086a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80086a6:	061b      	lsls	r3, r3, #24
 80086a8:	429a      	cmp	r2, r3
 80086aa:	d001      	beq.n	80086b0 <HAL_RCC_OscConfig+0x4e0>
 80086ac:	2301      	movs	r3, #1
 80086ae:	e000      	b.n	80086b2 <HAL_RCC_OscConfig+0x4e2>
 80086b0:	2300      	movs	r3, #0
 80086b2:	4618      	mov	r0, r3
 80086b4:	3718      	adds	r7, #24
 80086b6:	46bd      	mov	sp, r7
 80086b8:	bd80      	pop	{r7, pc}
 80086ba:	bf00      	nop
 80086bc:	40023800 	.word	0x40023800

080086c0 <HAL_RCC_ClockConfig>:
 80086c0:	b580      	push	{r7, lr}
 80086c2:	b084      	sub	sp, #16
 80086c4:	af00      	add	r7, sp, #0
 80086c6:	6078      	str	r0, [r7, #4]
 80086c8:	6039      	str	r1, [r7, #0]
 80086ca:	687b      	ldr	r3, [r7, #4]
 80086cc:	2b00      	cmp	r3, #0
 80086ce:	d101      	bne.n	80086d4 <HAL_RCC_ClockConfig+0x14>
 80086d0:	2301      	movs	r3, #1
 80086d2:	e0cc      	b.n	800886e <HAL_RCC_ClockConfig+0x1ae>
 80086d4:	4b68      	ldr	r3, [pc, #416]	; (8008878 <HAL_RCC_ClockConfig+0x1b8>)
 80086d6:	681b      	ldr	r3, [r3, #0]
 80086d8:	f003 0307 	and.w	r3, r3, #7
 80086dc:	683a      	ldr	r2, [r7, #0]
 80086de:	429a      	cmp	r2, r3
 80086e0:	d90c      	bls.n	80086fc <HAL_RCC_ClockConfig+0x3c>
 80086e2:	4b65      	ldr	r3, [pc, #404]	; (8008878 <HAL_RCC_ClockConfig+0x1b8>)
 80086e4:	683a      	ldr	r2, [r7, #0]
 80086e6:	b2d2      	uxtb	r2, r2
 80086e8:	701a      	strb	r2, [r3, #0]
 80086ea:	4b63      	ldr	r3, [pc, #396]	; (8008878 <HAL_RCC_ClockConfig+0x1b8>)
 80086ec:	681b      	ldr	r3, [r3, #0]
 80086ee:	f003 0307 	and.w	r3, r3, #7
 80086f2:	683a      	ldr	r2, [r7, #0]
 80086f4:	429a      	cmp	r2, r3
 80086f6:	d001      	beq.n	80086fc <HAL_RCC_ClockConfig+0x3c>
 80086f8:	2301      	movs	r3, #1
 80086fa:	e0b8      	b.n	800886e <HAL_RCC_ClockConfig+0x1ae>
 80086fc:	687b      	ldr	r3, [r7, #4]
 80086fe:	681b      	ldr	r3, [r3, #0]
 8008700:	f003 0302 	and.w	r3, r3, #2
 8008704:	2b00      	cmp	r3, #0
 8008706:	d020      	beq.n	800874a <HAL_RCC_ClockConfig+0x8a>
 8008708:	687b      	ldr	r3, [r7, #4]
 800870a:	681b      	ldr	r3, [r3, #0]
 800870c:	f003 0304 	and.w	r3, r3, #4
 8008710:	2b00      	cmp	r3, #0
 8008712:	d005      	beq.n	8008720 <HAL_RCC_ClockConfig+0x60>
 8008714:	4b59      	ldr	r3, [pc, #356]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 8008716:	689b      	ldr	r3, [r3, #8]
 8008718:	4a58      	ldr	r2, [pc, #352]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 800871a:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800871e:	6093      	str	r3, [r2, #8]
 8008720:	687b      	ldr	r3, [r7, #4]
 8008722:	681b      	ldr	r3, [r3, #0]
 8008724:	f003 0308 	and.w	r3, r3, #8
 8008728:	2b00      	cmp	r3, #0
 800872a:	d005      	beq.n	8008738 <HAL_RCC_ClockConfig+0x78>
 800872c:	4b53      	ldr	r3, [pc, #332]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 800872e:	689b      	ldr	r3, [r3, #8]
 8008730:	4a52      	ldr	r2, [pc, #328]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 8008732:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8008736:	6093      	str	r3, [r2, #8]
 8008738:	4b50      	ldr	r3, [pc, #320]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 800873a:	689b      	ldr	r3, [r3, #8]
 800873c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8008740:	687b      	ldr	r3, [r7, #4]
 8008742:	689b      	ldr	r3, [r3, #8]
 8008744:	494d      	ldr	r1, [pc, #308]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 8008746:	4313      	orrs	r3, r2
 8008748:	608b      	str	r3, [r1, #8]
 800874a:	687b      	ldr	r3, [r7, #4]
 800874c:	681b      	ldr	r3, [r3, #0]
 800874e:	f003 0301 	and.w	r3, r3, #1
 8008752:	2b00      	cmp	r3, #0
 8008754:	d044      	beq.n	80087e0 <HAL_RCC_ClockConfig+0x120>
 8008756:	687b      	ldr	r3, [r7, #4]
 8008758:	685b      	ldr	r3, [r3, #4]
 800875a:	2b01      	cmp	r3, #1
 800875c:	d107      	bne.n	800876e <HAL_RCC_ClockConfig+0xae>
 800875e:	4b47      	ldr	r3, [pc, #284]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 8008760:	681b      	ldr	r3, [r3, #0]
 8008762:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008766:	2b00      	cmp	r3, #0
 8008768:	d119      	bne.n	800879e <HAL_RCC_ClockConfig+0xde>
 800876a:	2301      	movs	r3, #1
 800876c:	e07f      	b.n	800886e <HAL_RCC_ClockConfig+0x1ae>
 800876e:	687b      	ldr	r3, [r7, #4]
 8008770:	685b      	ldr	r3, [r3, #4]
 8008772:	2b02      	cmp	r3, #2
 8008774:	d003      	beq.n	800877e <HAL_RCC_ClockConfig+0xbe>
 8008776:	687b      	ldr	r3, [r7, #4]
 8008778:	685b      	ldr	r3, [r3, #4]
 800877a:	2b03      	cmp	r3, #3
 800877c:	d107      	bne.n	800878e <HAL_RCC_ClockConfig+0xce>
 800877e:	4b3f      	ldr	r3, [pc, #252]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 8008780:	681b      	ldr	r3, [r3, #0]
 8008782:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008786:	2b00      	cmp	r3, #0
 8008788:	d109      	bne.n	800879e <HAL_RCC_ClockConfig+0xde>
 800878a:	2301      	movs	r3, #1
 800878c:	e06f      	b.n	800886e <HAL_RCC_ClockConfig+0x1ae>
 800878e:	4b3b      	ldr	r3, [pc, #236]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 8008790:	681b      	ldr	r3, [r3, #0]
 8008792:	f003 0302 	and.w	r3, r3, #2
 8008796:	2b00      	cmp	r3, #0
 8008798:	d101      	bne.n	800879e <HAL_RCC_ClockConfig+0xde>
 800879a:	2301      	movs	r3, #1
 800879c:	e067      	b.n	800886e <HAL_RCC_ClockConfig+0x1ae>
 800879e:	4b37      	ldr	r3, [pc, #220]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 80087a0:	689b      	ldr	r3, [r3, #8]
 80087a2:	f023 0203 	bic.w	r2, r3, #3
 80087a6:	687b      	ldr	r3, [r7, #4]
 80087a8:	685b      	ldr	r3, [r3, #4]
 80087aa:	4934      	ldr	r1, [pc, #208]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 80087ac:	4313      	orrs	r3, r2
 80087ae:	608b      	str	r3, [r1, #8]
 80087b0:	f7fc f9a2 	bl	8004af8 <HAL_GetTick>
 80087b4:	60f8      	str	r0, [r7, #12]
 80087b6:	e00a      	b.n	80087ce <HAL_RCC_ClockConfig+0x10e>
 80087b8:	f7fc f99e 	bl	8004af8 <HAL_GetTick>
 80087bc:	4602      	mov	r2, r0
 80087be:	68fb      	ldr	r3, [r7, #12]
 80087c0:	1ad3      	subs	r3, r2, r3
 80087c2:	f241 3288 	movw	r2, #5000	; 0x1388
 80087c6:	4293      	cmp	r3, r2
 80087c8:	d901      	bls.n	80087ce <HAL_RCC_ClockConfig+0x10e>
 80087ca:	2303      	movs	r3, #3
 80087cc:	e04f      	b.n	800886e <HAL_RCC_ClockConfig+0x1ae>
 80087ce:	4b2b      	ldr	r3, [pc, #172]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 80087d0:	689b      	ldr	r3, [r3, #8]
 80087d2:	f003 020c 	and.w	r2, r3, #12
 80087d6:	687b      	ldr	r3, [r7, #4]
 80087d8:	685b      	ldr	r3, [r3, #4]
 80087da:	009b      	lsls	r3, r3, #2
 80087dc:	429a      	cmp	r2, r3
 80087de:	d1eb      	bne.n	80087b8 <HAL_RCC_ClockConfig+0xf8>
 80087e0:	4b25      	ldr	r3, [pc, #148]	; (8008878 <HAL_RCC_ClockConfig+0x1b8>)
 80087e2:	681b      	ldr	r3, [r3, #0]
 80087e4:	f003 0307 	and.w	r3, r3, #7
 80087e8:	683a      	ldr	r2, [r7, #0]
 80087ea:	429a      	cmp	r2, r3
 80087ec:	d20c      	bcs.n	8008808 <HAL_RCC_ClockConfig+0x148>
 80087ee:	4b22      	ldr	r3, [pc, #136]	; (8008878 <HAL_RCC_ClockConfig+0x1b8>)
 80087f0:	683a      	ldr	r2, [r7, #0]
 80087f2:	b2d2      	uxtb	r2, r2
 80087f4:	701a      	strb	r2, [r3, #0]
 80087f6:	4b20      	ldr	r3, [pc, #128]	; (8008878 <HAL_RCC_ClockConfig+0x1b8>)
 80087f8:	681b      	ldr	r3, [r3, #0]
 80087fa:	f003 0307 	and.w	r3, r3, #7
 80087fe:	683a      	ldr	r2, [r7, #0]
 8008800:	429a      	cmp	r2, r3
 8008802:	d001      	beq.n	8008808 <HAL_RCC_ClockConfig+0x148>
 8008804:	2301      	movs	r3, #1
 8008806:	e032      	b.n	800886e <HAL_RCC_ClockConfig+0x1ae>
 8008808:	687b      	ldr	r3, [r7, #4]
 800880a:	681b      	ldr	r3, [r3, #0]
 800880c:	f003 0304 	and.w	r3, r3, #4
 8008810:	2b00      	cmp	r3, #0
 8008812:	d008      	beq.n	8008826 <HAL_RCC_ClockConfig+0x166>
 8008814:	4b19      	ldr	r3, [pc, #100]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 8008816:	689b      	ldr	r3, [r3, #8]
 8008818:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800881c:	687b      	ldr	r3, [r7, #4]
 800881e:	68db      	ldr	r3, [r3, #12]
 8008820:	4916      	ldr	r1, [pc, #88]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 8008822:	4313      	orrs	r3, r2
 8008824:	608b      	str	r3, [r1, #8]
 8008826:	687b      	ldr	r3, [r7, #4]
 8008828:	681b      	ldr	r3, [r3, #0]
 800882a:	f003 0308 	and.w	r3, r3, #8
 800882e:	2b00      	cmp	r3, #0
 8008830:	d009      	beq.n	8008846 <HAL_RCC_ClockConfig+0x186>
 8008832:	4b12      	ldr	r3, [pc, #72]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 8008834:	689b      	ldr	r3, [r3, #8]
 8008836:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800883a:	687b      	ldr	r3, [r7, #4]
 800883c:	691b      	ldr	r3, [r3, #16]
 800883e:	00db      	lsls	r3, r3, #3
 8008840:	490e      	ldr	r1, [pc, #56]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 8008842:	4313      	orrs	r3, r2
 8008844:	608b      	str	r3, [r1, #8]
 8008846:	f000 f821 	bl	800888c <HAL_RCC_GetSysClockFreq>
 800884a:	4602      	mov	r2, r0
 800884c:	4b0b      	ldr	r3, [pc, #44]	; (800887c <HAL_RCC_ClockConfig+0x1bc>)
 800884e:	689b      	ldr	r3, [r3, #8]
 8008850:	091b      	lsrs	r3, r3, #4
 8008852:	f003 030f 	and.w	r3, r3, #15
 8008856:	490a      	ldr	r1, [pc, #40]	; (8008880 <HAL_RCC_ClockConfig+0x1c0>)
 8008858:	5ccb      	ldrb	r3, [r1, r3]
 800885a:	fa22 f303 	lsr.w	r3, r2, r3
 800885e:	4a09      	ldr	r2, [pc, #36]	; (8008884 <HAL_RCC_ClockConfig+0x1c4>)
 8008860:	6013      	str	r3, [r2, #0]
 8008862:	4b09      	ldr	r3, [pc, #36]	; (8008888 <HAL_RCC_ClockConfig+0x1c8>)
 8008864:	681b      	ldr	r3, [r3, #0]
 8008866:	4618      	mov	r0, r3
 8008868:	f7fc f902 	bl	8004a70 <HAL_InitTick>
 800886c:	2300      	movs	r3, #0
 800886e:	4618      	mov	r0, r3
 8008870:	3710      	adds	r7, #16
 8008872:	46bd      	mov	sp, r7
 8008874:	bd80      	pop	{r7, pc}
 8008876:	bf00      	nop
 8008878:	40023c00 	.word	0x40023c00
 800887c:	40023800 	.word	0x40023800
 8008880:	0800bc60 	.word	0x0800bc60
 8008884:	20000138 	.word	0x20000138
 8008888:	2000013c 	.word	0x2000013c

0800888c <HAL_RCC_GetSysClockFreq>:
 800888c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8008890:	b094      	sub	sp, #80	; 0x50
 8008892:	af00      	add	r7, sp, #0
 8008894:	2300      	movs	r3, #0
 8008896:	647b      	str	r3, [r7, #68]	; 0x44
 8008898:	2300      	movs	r3, #0
 800889a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800889c:	2300      	movs	r3, #0
 800889e:	643b      	str	r3, [r7, #64]	; 0x40
 80088a0:	2300      	movs	r3, #0
 80088a2:	64bb      	str	r3, [r7, #72]	; 0x48
 80088a4:	4b79      	ldr	r3, [pc, #484]	; (8008a8c <HAL_RCC_GetSysClockFreq+0x200>)
 80088a6:	689b      	ldr	r3, [r3, #8]
 80088a8:	f003 030c 	and.w	r3, r3, #12
 80088ac:	2b08      	cmp	r3, #8
 80088ae:	d00d      	beq.n	80088cc <HAL_RCC_GetSysClockFreq+0x40>
 80088b0:	2b08      	cmp	r3, #8
 80088b2:	f200 80e1 	bhi.w	8008a78 <HAL_RCC_GetSysClockFreq+0x1ec>
 80088b6:	2b00      	cmp	r3, #0
 80088b8:	d002      	beq.n	80088c0 <HAL_RCC_GetSysClockFreq+0x34>
 80088ba:	2b04      	cmp	r3, #4
 80088bc:	d003      	beq.n	80088c6 <HAL_RCC_GetSysClockFreq+0x3a>
 80088be:	e0db      	b.n	8008a78 <HAL_RCC_GetSysClockFreq+0x1ec>
 80088c0:	4b73      	ldr	r3, [pc, #460]	; (8008a90 <HAL_RCC_GetSysClockFreq+0x204>)
 80088c2:	64bb      	str	r3, [r7, #72]	; 0x48
 80088c4:	e0db      	b.n	8008a7e <HAL_RCC_GetSysClockFreq+0x1f2>
 80088c6:	4b73      	ldr	r3, [pc, #460]	; (8008a94 <HAL_RCC_GetSysClockFreq+0x208>)
 80088c8:	64bb      	str	r3, [r7, #72]	; 0x48
 80088ca:	e0d8      	b.n	8008a7e <HAL_RCC_GetSysClockFreq+0x1f2>
 80088cc:	4b6f      	ldr	r3, [pc, #444]	; (8008a8c <HAL_RCC_GetSysClockFreq+0x200>)
 80088ce:	685b      	ldr	r3, [r3, #4]
 80088d0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80088d4:	647b      	str	r3, [r7, #68]	; 0x44
 80088d6:	4b6d      	ldr	r3, [pc, #436]	; (8008a8c <HAL_RCC_GetSysClockFreq+0x200>)
 80088d8:	685b      	ldr	r3, [r3, #4]
 80088da:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80088de:	2b00      	cmp	r3, #0
 80088e0:	d063      	beq.n	80089aa <HAL_RCC_GetSysClockFreq+0x11e>
 80088e2:	4b6a      	ldr	r3, [pc, #424]	; (8008a8c <HAL_RCC_GetSysClockFreq+0x200>)
 80088e4:	685b      	ldr	r3, [r3, #4]
 80088e6:	099b      	lsrs	r3, r3, #6
 80088e8:	2200      	movs	r2, #0
 80088ea:	63bb      	str	r3, [r7, #56]	; 0x38
 80088ec:	63fa      	str	r2, [r7, #60]	; 0x3c
 80088ee:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80088f0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80088f4:	633b      	str	r3, [r7, #48]	; 0x30
 80088f6:	2300      	movs	r3, #0
 80088f8:	637b      	str	r3, [r7, #52]	; 0x34
 80088fa:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 80088fe:	4622      	mov	r2, r4
 8008900:	462b      	mov	r3, r5
 8008902:	f04f 0000 	mov.w	r0, #0
 8008906:	f04f 0100 	mov.w	r1, #0
 800890a:	0159      	lsls	r1, r3, #5
 800890c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8008910:	0150      	lsls	r0, r2, #5
 8008912:	4602      	mov	r2, r0
 8008914:	460b      	mov	r3, r1
 8008916:	4621      	mov	r1, r4
 8008918:	1a51      	subs	r1, r2, r1
 800891a:	6139      	str	r1, [r7, #16]
 800891c:	4629      	mov	r1, r5
 800891e:	eb63 0301 	sbc.w	r3, r3, r1
 8008922:	617b      	str	r3, [r7, #20]
 8008924:	f04f 0200 	mov.w	r2, #0
 8008928:	f04f 0300 	mov.w	r3, #0
 800892c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8008930:	4659      	mov	r1, fp
 8008932:	018b      	lsls	r3, r1, #6
 8008934:	4651      	mov	r1, sl
 8008936:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800893a:	4651      	mov	r1, sl
 800893c:	018a      	lsls	r2, r1, #6
 800893e:	4651      	mov	r1, sl
 8008940:	ebb2 0801 	subs.w	r8, r2, r1
 8008944:	4659      	mov	r1, fp
 8008946:	eb63 0901 	sbc.w	r9, r3, r1
 800894a:	f04f 0200 	mov.w	r2, #0
 800894e:	f04f 0300 	mov.w	r3, #0
 8008952:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8008956:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800895a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800895e:	4690      	mov	r8, r2
 8008960:	4699      	mov	r9, r3
 8008962:	4623      	mov	r3, r4
 8008964:	eb18 0303 	adds.w	r3, r8, r3
 8008968:	60bb      	str	r3, [r7, #8]
 800896a:	462b      	mov	r3, r5
 800896c:	eb49 0303 	adc.w	r3, r9, r3
 8008970:	60fb      	str	r3, [r7, #12]
 8008972:	f04f 0200 	mov.w	r2, #0
 8008976:	f04f 0300 	mov.w	r3, #0
 800897a:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 800897e:	4629      	mov	r1, r5
 8008980:	024b      	lsls	r3, r1, #9
 8008982:	4621      	mov	r1, r4
 8008984:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8008988:	4621      	mov	r1, r4
 800898a:	024a      	lsls	r2, r1, #9
 800898c:	4610      	mov	r0, r2
 800898e:	4619      	mov	r1, r3
 8008990:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8008992:	2200      	movs	r2, #0
 8008994:	62bb      	str	r3, [r7, #40]	; 0x28
 8008996:	62fa      	str	r2, [r7, #44]	; 0x2c
 8008998:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800899c:	f7f8 f8f8 	bl	8000b90 <__aeabi_uldivmod>
 80089a0:	4602      	mov	r2, r0
 80089a2:	460b      	mov	r3, r1
 80089a4:	4613      	mov	r3, r2
 80089a6:	64fb      	str	r3, [r7, #76]	; 0x4c
 80089a8:	e058      	b.n	8008a5c <HAL_RCC_GetSysClockFreq+0x1d0>
 80089aa:	4b38      	ldr	r3, [pc, #224]	; (8008a8c <HAL_RCC_GetSysClockFreq+0x200>)
 80089ac:	685b      	ldr	r3, [r3, #4]
 80089ae:	099b      	lsrs	r3, r3, #6
 80089b0:	2200      	movs	r2, #0
 80089b2:	4618      	mov	r0, r3
 80089b4:	4611      	mov	r1, r2
 80089b6:	f3c0 0308 	ubfx	r3, r0, #0, #9
 80089ba:	623b      	str	r3, [r7, #32]
 80089bc:	2300      	movs	r3, #0
 80089be:	627b      	str	r3, [r7, #36]	; 0x24
 80089c0:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 80089c4:	4642      	mov	r2, r8
 80089c6:	464b      	mov	r3, r9
 80089c8:	f04f 0000 	mov.w	r0, #0
 80089cc:	f04f 0100 	mov.w	r1, #0
 80089d0:	0159      	lsls	r1, r3, #5
 80089d2:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80089d6:	0150      	lsls	r0, r2, #5
 80089d8:	4602      	mov	r2, r0
 80089da:	460b      	mov	r3, r1
 80089dc:	4641      	mov	r1, r8
 80089de:	ebb2 0a01 	subs.w	sl, r2, r1
 80089e2:	4649      	mov	r1, r9
 80089e4:	eb63 0b01 	sbc.w	fp, r3, r1
 80089e8:	f04f 0200 	mov.w	r2, #0
 80089ec:	f04f 0300 	mov.w	r3, #0
 80089f0:	ea4f 138b 	mov.w	r3, fp, lsl #6
 80089f4:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 80089f8:	ea4f 128a 	mov.w	r2, sl, lsl #6
 80089fc:	ebb2 040a 	subs.w	r4, r2, sl
 8008a00:	eb63 050b 	sbc.w	r5, r3, fp
 8008a04:	f04f 0200 	mov.w	r2, #0
 8008a08:	f04f 0300 	mov.w	r3, #0
 8008a0c:	00eb      	lsls	r3, r5, #3
 8008a0e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8008a12:	00e2      	lsls	r2, r4, #3
 8008a14:	4614      	mov	r4, r2
 8008a16:	461d      	mov	r5, r3
 8008a18:	4643      	mov	r3, r8
 8008a1a:	18e3      	adds	r3, r4, r3
 8008a1c:	603b      	str	r3, [r7, #0]
 8008a1e:	464b      	mov	r3, r9
 8008a20:	eb45 0303 	adc.w	r3, r5, r3
 8008a24:	607b      	str	r3, [r7, #4]
 8008a26:	f04f 0200 	mov.w	r2, #0
 8008a2a:	f04f 0300 	mov.w	r3, #0
 8008a2e:	e9d7 4500 	ldrd	r4, r5, [r7]
 8008a32:	4629      	mov	r1, r5
 8008a34:	028b      	lsls	r3, r1, #10
 8008a36:	4621      	mov	r1, r4
 8008a38:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8008a3c:	4621      	mov	r1, r4
 8008a3e:	028a      	lsls	r2, r1, #10
 8008a40:	4610      	mov	r0, r2
 8008a42:	4619      	mov	r1, r3
 8008a44:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8008a46:	2200      	movs	r2, #0
 8008a48:	61bb      	str	r3, [r7, #24]
 8008a4a:	61fa      	str	r2, [r7, #28]
 8008a4c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8008a50:	f7f8 f89e 	bl	8000b90 <__aeabi_uldivmod>
 8008a54:	4602      	mov	r2, r0
 8008a56:	460b      	mov	r3, r1
 8008a58:	4613      	mov	r3, r2
 8008a5a:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008a5c:	4b0b      	ldr	r3, [pc, #44]	; (8008a8c <HAL_RCC_GetSysClockFreq+0x200>)
 8008a5e:	685b      	ldr	r3, [r3, #4]
 8008a60:	0c1b      	lsrs	r3, r3, #16
 8008a62:	f003 0303 	and.w	r3, r3, #3
 8008a66:	3301      	adds	r3, #1
 8008a68:	005b      	lsls	r3, r3, #1
 8008a6a:	643b      	str	r3, [r7, #64]	; 0x40
 8008a6c:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8008a6e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8008a70:	fbb2 f3f3 	udiv	r3, r2, r3
 8008a74:	64bb      	str	r3, [r7, #72]	; 0x48
 8008a76:	e002      	b.n	8008a7e <HAL_RCC_GetSysClockFreq+0x1f2>
 8008a78:	4b05      	ldr	r3, [pc, #20]	; (8008a90 <HAL_RCC_GetSysClockFreq+0x204>)
 8008a7a:	64bb      	str	r3, [r7, #72]	; 0x48
 8008a7c:	bf00      	nop
 8008a7e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8008a80:	4618      	mov	r0, r3
 8008a82:	3750      	adds	r7, #80	; 0x50
 8008a84:	46bd      	mov	sp, r7
 8008a86:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8008a8a:	bf00      	nop
 8008a8c:	40023800 	.word	0x40023800
 8008a90:	00f42400 	.word	0x00f42400
 8008a94:	007a1200 	.word	0x007a1200

08008a98 <HAL_RCC_GetHCLKFreq>:
 8008a98:	b480      	push	{r7}
 8008a9a:	af00      	add	r7, sp, #0
 8008a9c:	4b03      	ldr	r3, [pc, #12]	; (8008aac <HAL_RCC_GetHCLKFreq+0x14>)
 8008a9e:	681b      	ldr	r3, [r3, #0]
 8008aa0:	4618      	mov	r0, r3
 8008aa2:	46bd      	mov	sp, r7
 8008aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008aa8:	4770      	bx	lr
 8008aaa:	bf00      	nop
 8008aac:	20000138 	.word	0x20000138

08008ab0 <HAL_RCC_GetPCLK1Freq>:
 8008ab0:	b580      	push	{r7, lr}
 8008ab2:	af00      	add	r7, sp, #0
 8008ab4:	f7ff fff0 	bl	8008a98 <HAL_RCC_GetHCLKFreq>
 8008ab8:	4602      	mov	r2, r0
 8008aba:	4b05      	ldr	r3, [pc, #20]	; (8008ad0 <HAL_RCC_GetPCLK1Freq+0x20>)
 8008abc:	689b      	ldr	r3, [r3, #8]
 8008abe:	0a9b      	lsrs	r3, r3, #10
 8008ac0:	f003 0307 	and.w	r3, r3, #7
 8008ac4:	4903      	ldr	r1, [pc, #12]	; (8008ad4 <HAL_RCC_GetPCLK1Freq+0x24>)
 8008ac6:	5ccb      	ldrb	r3, [r1, r3]
 8008ac8:	fa22 f303 	lsr.w	r3, r2, r3
 8008acc:	4618      	mov	r0, r3
 8008ace:	bd80      	pop	{r7, pc}
 8008ad0:	40023800 	.word	0x40023800
 8008ad4:	0800bc70 	.word	0x0800bc70

08008ad8 <HAL_RCC_GetPCLK2Freq>:
 8008ad8:	b580      	push	{r7, lr}
 8008ada:	af00      	add	r7, sp, #0
 8008adc:	f7ff ffdc 	bl	8008a98 <HAL_RCC_GetHCLKFreq>
 8008ae0:	4602      	mov	r2, r0
 8008ae2:	4b05      	ldr	r3, [pc, #20]	; (8008af8 <HAL_RCC_GetPCLK2Freq+0x20>)
 8008ae4:	689b      	ldr	r3, [r3, #8]
 8008ae6:	0b5b      	lsrs	r3, r3, #13
 8008ae8:	f003 0307 	and.w	r3, r3, #7
 8008aec:	4903      	ldr	r1, [pc, #12]	; (8008afc <HAL_RCC_GetPCLK2Freq+0x24>)
 8008aee:	5ccb      	ldrb	r3, [r1, r3]
 8008af0:	fa22 f303 	lsr.w	r3, r2, r3
 8008af4:	4618      	mov	r0, r3
 8008af6:	bd80      	pop	{r7, pc}
 8008af8:	40023800 	.word	0x40023800
 8008afc:	0800bc70 	.word	0x0800bc70

08008b00 <HAL_SPI_Init>:
 8008b00:	b580      	push	{r7, lr}
 8008b02:	b082      	sub	sp, #8
 8008b04:	af00      	add	r7, sp, #0
 8008b06:	6078      	str	r0, [r7, #4]
 8008b08:	687b      	ldr	r3, [r7, #4]
 8008b0a:	2b00      	cmp	r3, #0
 8008b0c:	d101      	bne.n	8008b12 <HAL_SPI_Init+0x12>
 8008b0e:	2301      	movs	r3, #1
 8008b10:	e07b      	b.n	8008c0a <HAL_SPI_Init+0x10a>
 8008b12:	687b      	ldr	r3, [r7, #4]
 8008b14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008b16:	2b00      	cmp	r3, #0
 8008b18:	d108      	bne.n	8008b2c <HAL_SPI_Init+0x2c>
 8008b1a:	687b      	ldr	r3, [r7, #4]
 8008b1c:	685b      	ldr	r3, [r3, #4]
 8008b1e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8008b22:	d009      	beq.n	8008b38 <HAL_SPI_Init+0x38>
 8008b24:	687b      	ldr	r3, [r7, #4]
 8008b26:	2200      	movs	r2, #0
 8008b28:	61da      	str	r2, [r3, #28]
 8008b2a:	e005      	b.n	8008b38 <HAL_SPI_Init+0x38>
 8008b2c:	687b      	ldr	r3, [r7, #4]
 8008b2e:	2200      	movs	r2, #0
 8008b30:	611a      	str	r2, [r3, #16]
 8008b32:	687b      	ldr	r3, [r7, #4]
 8008b34:	2200      	movs	r2, #0
 8008b36:	615a      	str	r2, [r3, #20]
 8008b38:	687b      	ldr	r3, [r7, #4]
 8008b3a:	2200      	movs	r2, #0
 8008b3c:	629a      	str	r2, [r3, #40]	; 0x28
 8008b3e:	687b      	ldr	r3, [r7, #4]
 8008b40:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008b44:	b2db      	uxtb	r3, r3
 8008b46:	2b00      	cmp	r3, #0
 8008b48:	d106      	bne.n	8008b58 <HAL_SPI_Init+0x58>
 8008b4a:	687b      	ldr	r3, [r7, #4]
 8008b4c:	2200      	movs	r2, #0
 8008b4e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8008b52:	6878      	ldr	r0, [r7, #4]
 8008b54:	f7fb fcaa 	bl	80044ac <HAL_SPI_MspInit>
 8008b58:	687b      	ldr	r3, [r7, #4]
 8008b5a:	2202      	movs	r2, #2
 8008b5c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008b60:	687b      	ldr	r3, [r7, #4]
 8008b62:	681b      	ldr	r3, [r3, #0]
 8008b64:	681a      	ldr	r2, [r3, #0]
 8008b66:	687b      	ldr	r3, [r7, #4]
 8008b68:	681b      	ldr	r3, [r3, #0]
 8008b6a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008b6e:	601a      	str	r2, [r3, #0]
 8008b70:	687b      	ldr	r3, [r7, #4]
 8008b72:	685b      	ldr	r3, [r3, #4]
 8008b74:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8008b78:	687b      	ldr	r3, [r7, #4]
 8008b7a:	689b      	ldr	r3, [r3, #8]
 8008b7c:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8008b80:	431a      	orrs	r2, r3
 8008b82:	687b      	ldr	r3, [r7, #4]
 8008b84:	68db      	ldr	r3, [r3, #12]
 8008b86:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8008b8a:	431a      	orrs	r2, r3
 8008b8c:	687b      	ldr	r3, [r7, #4]
 8008b8e:	691b      	ldr	r3, [r3, #16]
 8008b90:	f003 0302 	and.w	r3, r3, #2
 8008b94:	431a      	orrs	r2, r3
 8008b96:	687b      	ldr	r3, [r7, #4]
 8008b98:	695b      	ldr	r3, [r3, #20]
 8008b9a:	f003 0301 	and.w	r3, r3, #1
 8008b9e:	431a      	orrs	r2, r3
 8008ba0:	687b      	ldr	r3, [r7, #4]
 8008ba2:	699b      	ldr	r3, [r3, #24]
 8008ba4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8008ba8:	431a      	orrs	r2, r3
 8008baa:	687b      	ldr	r3, [r7, #4]
 8008bac:	69db      	ldr	r3, [r3, #28]
 8008bae:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8008bb2:	431a      	orrs	r2, r3
 8008bb4:	687b      	ldr	r3, [r7, #4]
 8008bb6:	6a1b      	ldr	r3, [r3, #32]
 8008bb8:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008bbc:	ea42 0103 	orr.w	r1, r2, r3
 8008bc0:	687b      	ldr	r3, [r7, #4]
 8008bc2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008bc4:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8008bc8:	687b      	ldr	r3, [r7, #4]
 8008bca:	681b      	ldr	r3, [r3, #0]
 8008bcc:	430a      	orrs	r2, r1
 8008bce:	601a      	str	r2, [r3, #0]
 8008bd0:	687b      	ldr	r3, [r7, #4]
 8008bd2:	699b      	ldr	r3, [r3, #24]
 8008bd4:	0c1b      	lsrs	r3, r3, #16
 8008bd6:	f003 0104 	and.w	r1, r3, #4
 8008bda:	687b      	ldr	r3, [r7, #4]
 8008bdc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008bde:	f003 0210 	and.w	r2, r3, #16
 8008be2:	687b      	ldr	r3, [r7, #4]
 8008be4:	681b      	ldr	r3, [r3, #0]
 8008be6:	430a      	orrs	r2, r1
 8008be8:	605a      	str	r2, [r3, #4]
 8008bea:	687b      	ldr	r3, [r7, #4]
 8008bec:	681b      	ldr	r3, [r3, #0]
 8008bee:	69da      	ldr	r2, [r3, #28]
 8008bf0:	687b      	ldr	r3, [r7, #4]
 8008bf2:	681b      	ldr	r3, [r3, #0]
 8008bf4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8008bf8:	61da      	str	r2, [r3, #28]
 8008bfa:	687b      	ldr	r3, [r7, #4]
 8008bfc:	2200      	movs	r2, #0
 8008bfe:	655a      	str	r2, [r3, #84]	; 0x54
 8008c00:	687b      	ldr	r3, [r7, #4]
 8008c02:	2201      	movs	r2, #1
 8008c04:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008c08:	2300      	movs	r3, #0
 8008c0a:	4618      	mov	r0, r3
 8008c0c:	3708      	adds	r7, #8
 8008c0e:	46bd      	mov	sp, r7
 8008c10:	bd80      	pop	{r7, pc}
	...

08008c14 <HAL_SPI_TransmitReceive_DMA>:
 8008c14:	b580      	push	{r7, lr}
 8008c16:	b086      	sub	sp, #24
 8008c18:	af00      	add	r7, sp, #0
 8008c1a:	60f8      	str	r0, [r7, #12]
 8008c1c:	60b9      	str	r1, [r7, #8]
 8008c1e:	607a      	str	r2, [r7, #4]
 8008c20:	807b      	strh	r3, [r7, #2]
 8008c22:	2300      	movs	r3, #0
 8008c24:	75fb      	strb	r3, [r7, #23]
 8008c26:	68fb      	ldr	r3, [r7, #12]
 8008c28:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8008c2c:	2b01      	cmp	r3, #1
 8008c2e:	d101      	bne.n	8008c34 <HAL_SPI_TransmitReceive_DMA+0x20>
 8008c30:	2302      	movs	r3, #2
 8008c32:	e0e3      	b.n	8008dfc <HAL_SPI_TransmitReceive_DMA+0x1e8>
 8008c34:	68fb      	ldr	r3, [r7, #12]
 8008c36:	2201      	movs	r2, #1
 8008c38:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8008c3c:	68fb      	ldr	r3, [r7, #12]
 8008c3e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008c42:	75bb      	strb	r3, [r7, #22]
 8008c44:	68fb      	ldr	r3, [r7, #12]
 8008c46:	685b      	ldr	r3, [r3, #4]
 8008c48:	613b      	str	r3, [r7, #16]
 8008c4a:	7dbb      	ldrb	r3, [r7, #22]
 8008c4c:	2b01      	cmp	r3, #1
 8008c4e:	d00d      	beq.n	8008c6c <HAL_SPI_TransmitReceive_DMA+0x58>
 8008c50:	693b      	ldr	r3, [r7, #16]
 8008c52:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8008c56:	d106      	bne.n	8008c66 <HAL_SPI_TransmitReceive_DMA+0x52>
 8008c58:	68fb      	ldr	r3, [r7, #12]
 8008c5a:	689b      	ldr	r3, [r3, #8]
 8008c5c:	2b00      	cmp	r3, #0
 8008c5e:	d102      	bne.n	8008c66 <HAL_SPI_TransmitReceive_DMA+0x52>
 8008c60:	7dbb      	ldrb	r3, [r7, #22]
 8008c62:	2b04      	cmp	r3, #4
 8008c64:	d002      	beq.n	8008c6c <HAL_SPI_TransmitReceive_DMA+0x58>
 8008c66:	2302      	movs	r3, #2
 8008c68:	75fb      	strb	r3, [r7, #23]
 8008c6a:	e0c2      	b.n	8008df2 <HAL_SPI_TransmitReceive_DMA+0x1de>
 8008c6c:	68bb      	ldr	r3, [r7, #8]
 8008c6e:	2b00      	cmp	r3, #0
 8008c70:	d005      	beq.n	8008c7e <HAL_SPI_TransmitReceive_DMA+0x6a>
 8008c72:	687b      	ldr	r3, [r7, #4]
 8008c74:	2b00      	cmp	r3, #0
 8008c76:	d002      	beq.n	8008c7e <HAL_SPI_TransmitReceive_DMA+0x6a>
 8008c78:	887b      	ldrh	r3, [r7, #2]
 8008c7a:	2b00      	cmp	r3, #0
 8008c7c:	d102      	bne.n	8008c84 <HAL_SPI_TransmitReceive_DMA+0x70>
 8008c7e:	2301      	movs	r3, #1
 8008c80:	75fb      	strb	r3, [r7, #23]
 8008c82:	e0b6      	b.n	8008df2 <HAL_SPI_TransmitReceive_DMA+0x1de>
 8008c84:	68fb      	ldr	r3, [r7, #12]
 8008c86:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008c8a:	b2db      	uxtb	r3, r3
 8008c8c:	2b04      	cmp	r3, #4
 8008c8e:	d003      	beq.n	8008c98 <HAL_SPI_TransmitReceive_DMA+0x84>
 8008c90:	68fb      	ldr	r3, [r7, #12]
 8008c92:	2205      	movs	r2, #5
 8008c94:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008c98:	68fb      	ldr	r3, [r7, #12]
 8008c9a:	2200      	movs	r2, #0
 8008c9c:	655a      	str	r2, [r3, #84]	; 0x54
 8008c9e:	68fb      	ldr	r3, [r7, #12]
 8008ca0:	68ba      	ldr	r2, [r7, #8]
 8008ca2:	631a      	str	r2, [r3, #48]	; 0x30
 8008ca4:	68fb      	ldr	r3, [r7, #12]
 8008ca6:	887a      	ldrh	r2, [r7, #2]
 8008ca8:	869a      	strh	r2, [r3, #52]	; 0x34
 8008caa:	68fb      	ldr	r3, [r7, #12]
 8008cac:	887a      	ldrh	r2, [r7, #2]
 8008cae:	86da      	strh	r2, [r3, #54]	; 0x36
 8008cb0:	68fb      	ldr	r3, [r7, #12]
 8008cb2:	687a      	ldr	r2, [r7, #4]
 8008cb4:	639a      	str	r2, [r3, #56]	; 0x38
 8008cb6:	68fb      	ldr	r3, [r7, #12]
 8008cb8:	887a      	ldrh	r2, [r7, #2]
 8008cba:	879a      	strh	r2, [r3, #60]	; 0x3c
 8008cbc:	68fb      	ldr	r3, [r7, #12]
 8008cbe:	887a      	ldrh	r2, [r7, #2]
 8008cc0:	87da      	strh	r2, [r3, #62]	; 0x3e
 8008cc2:	68fb      	ldr	r3, [r7, #12]
 8008cc4:	2200      	movs	r2, #0
 8008cc6:	641a      	str	r2, [r3, #64]	; 0x40
 8008cc8:	68fb      	ldr	r3, [r7, #12]
 8008cca:	2200      	movs	r2, #0
 8008ccc:	645a      	str	r2, [r3, #68]	; 0x44
 8008cce:	68fb      	ldr	r3, [r7, #12]
 8008cd0:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008cd4:	b2db      	uxtb	r3, r3
 8008cd6:	2b04      	cmp	r3, #4
 8008cd8:	d108      	bne.n	8008cec <HAL_SPI_TransmitReceive_DMA+0xd8>
 8008cda:	68fb      	ldr	r3, [r7, #12]
 8008cdc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008cde:	4a49      	ldr	r2, [pc, #292]	; (8008e04 <HAL_SPI_TransmitReceive_DMA+0x1f0>)
 8008ce0:	641a      	str	r2, [r3, #64]	; 0x40
 8008ce2:	68fb      	ldr	r3, [r7, #12]
 8008ce4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008ce6:	4a48      	ldr	r2, [pc, #288]	; (8008e08 <HAL_SPI_TransmitReceive_DMA+0x1f4>)
 8008ce8:	63da      	str	r2, [r3, #60]	; 0x3c
 8008cea:	e007      	b.n	8008cfc <HAL_SPI_TransmitReceive_DMA+0xe8>
 8008cec:	68fb      	ldr	r3, [r7, #12]
 8008cee:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008cf0:	4a46      	ldr	r2, [pc, #280]	; (8008e0c <HAL_SPI_TransmitReceive_DMA+0x1f8>)
 8008cf2:	641a      	str	r2, [r3, #64]	; 0x40
 8008cf4:	68fb      	ldr	r3, [r7, #12]
 8008cf6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008cf8:	4a45      	ldr	r2, [pc, #276]	; (8008e10 <HAL_SPI_TransmitReceive_DMA+0x1fc>)
 8008cfa:	63da      	str	r2, [r3, #60]	; 0x3c
 8008cfc:	68fb      	ldr	r3, [r7, #12]
 8008cfe:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008d00:	4a44      	ldr	r2, [pc, #272]	; (8008e14 <HAL_SPI_TransmitReceive_DMA+0x200>)
 8008d02:	64da      	str	r2, [r3, #76]	; 0x4c
 8008d04:	68fb      	ldr	r3, [r7, #12]
 8008d06:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008d08:	2200      	movs	r2, #0
 8008d0a:	651a      	str	r2, [r3, #80]	; 0x50
 8008d0c:	68fb      	ldr	r3, [r7, #12]
 8008d0e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8008d10:	68fb      	ldr	r3, [r7, #12]
 8008d12:	681b      	ldr	r3, [r3, #0]
 8008d14:	330c      	adds	r3, #12
 8008d16:	4619      	mov	r1, r3
 8008d18:	68fb      	ldr	r3, [r7, #12]
 8008d1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008d1c:	461a      	mov	r2, r3
 8008d1e:	68fb      	ldr	r3, [r7, #12]
 8008d20:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8008d22:	b29b      	uxth	r3, r3
 8008d24:	f7fc f8b4 	bl	8004e90 <HAL_DMA_Start_IT>
 8008d28:	4603      	mov	r3, r0
 8008d2a:	2b00      	cmp	r3, #0
 8008d2c:	d00c      	beq.n	8008d48 <HAL_SPI_TransmitReceive_DMA+0x134>
 8008d2e:	68fb      	ldr	r3, [r7, #12]
 8008d30:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008d32:	f043 0210 	orr.w	r2, r3, #16
 8008d36:	68fb      	ldr	r3, [r7, #12]
 8008d38:	655a      	str	r2, [r3, #84]	; 0x54
 8008d3a:	2301      	movs	r3, #1
 8008d3c:	75fb      	strb	r3, [r7, #23]
 8008d3e:	68fb      	ldr	r3, [r7, #12]
 8008d40:	2201      	movs	r2, #1
 8008d42:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008d46:	e054      	b.n	8008df2 <HAL_SPI_TransmitReceive_DMA+0x1de>
 8008d48:	68fb      	ldr	r3, [r7, #12]
 8008d4a:	681b      	ldr	r3, [r3, #0]
 8008d4c:	685a      	ldr	r2, [r3, #4]
 8008d4e:	68fb      	ldr	r3, [r7, #12]
 8008d50:	681b      	ldr	r3, [r3, #0]
 8008d52:	f042 0201 	orr.w	r2, r2, #1
 8008d56:	605a      	str	r2, [r3, #4]
 8008d58:	68fb      	ldr	r3, [r7, #12]
 8008d5a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008d5c:	2200      	movs	r2, #0
 8008d5e:	641a      	str	r2, [r3, #64]	; 0x40
 8008d60:	68fb      	ldr	r3, [r7, #12]
 8008d62:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008d64:	2200      	movs	r2, #0
 8008d66:	63da      	str	r2, [r3, #60]	; 0x3c
 8008d68:	68fb      	ldr	r3, [r7, #12]
 8008d6a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008d6c:	2200      	movs	r2, #0
 8008d6e:	64da      	str	r2, [r3, #76]	; 0x4c
 8008d70:	68fb      	ldr	r3, [r7, #12]
 8008d72:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008d74:	2200      	movs	r2, #0
 8008d76:	651a      	str	r2, [r3, #80]	; 0x50
 8008d78:	68fb      	ldr	r3, [r7, #12]
 8008d7a:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8008d7c:	68fb      	ldr	r3, [r7, #12]
 8008d7e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008d80:	4619      	mov	r1, r3
 8008d82:	68fb      	ldr	r3, [r7, #12]
 8008d84:	681b      	ldr	r3, [r3, #0]
 8008d86:	330c      	adds	r3, #12
 8008d88:	461a      	mov	r2, r3
 8008d8a:	68fb      	ldr	r3, [r7, #12]
 8008d8c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8008d8e:	b29b      	uxth	r3, r3
 8008d90:	f7fc f87e 	bl	8004e90 <HAL_DMA_Start_IT>
 8008d94:	4603      	mov	r3, r0
 8008d96:	2b00      	cmp	r3, #0
 8008d98:	d00c      	beq.n	8008db4 <HAL_SPI_TransmitReceive_DMA+0x1a0>
 8008d9a:	68fb      	ldr	r3, [r7, #12]
 8008d9c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008d9e:	f043 0210 	orr.w	r2, r3, #16
 8008da2:	68fb      	ldr	r3, [r7, #12]
 8008da4:	655a      	str	r2, [r3, #84]	; 0x54
 8008da6:	2301      	movs	r3, #1
 8008da8:	75fb      	strb	r3, [r7, #23]
 8008daa:	68fb      	ldr	r3, [r7, #12]
 8008dac:	2201      	movs	r2, #1
 8008dae:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008db2:	e01e      	b.n	8008df2 <HAL_SPI_TransmitReceive_DMA+0x1de>
 8008db4:	68fb      	ldr	r3, [r7, #12]
 8008db6:	681b      	ldr	r3, [r3, #0]
 8008db8:	681b      	ldr	r3, [r3, #0]
 8008dba:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008dbe:	2b40      	cmp	r3, #64	; 0x40
 8008dc0:	d007      	beq.n	8008dd2 <HAL_SPI_TransmitReceive_DMA+0x1be>
 8008dc2:	68fb      	ldr	r3, [r7, #12]
 8008dc4:	681b      	ldr	r3, [r3, #0]
 8008dc6:	681a      	ldr	r2, [r3, #0]
 8008dc8:	68fb      	ldr	r3, [r7, #12]
 8008dca:	681b      	ldr	r3, [r3, #0]
 8008dcc:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8008dd0:	601a      	str	r2, [r3, #0]
 8008dd2:	68fb      	ldr	r3, [r7, #12]
 8008dd4:	681b      	ldr	r3, [r3, #0]
 8008dd6:	685a      	ldr	r2, [r3, #4]
 8008dd8:	68fb      	ldr	r3, [r7, #12]
 8008dda:	681b      	ldr	r3, [r3, #0]
 8008ddc:	f042 0220 	orr.w	r2, r2, #32
 8008de0:	605a      	str	r2, [r3, #4]
 8008de2:	68fb      	ldr	r3, [r7, #12]
 8008de4:	681b      	ldr	r3, [r3, #0]
 8008de6:	685a      	ldr	r2, [r3, #4]
 8008de8:	68fb      	ldr	r3, [r7, #12]
 8008dea:	681b      	ldr	r3, [r3, #0]
 8008dec:	f042 0202 	orr.w	r2, r2, #2
 8008df0:	605a      	str	r2, [r3, #4]
 8008df2:	68fb      	ldr	r3, [r7, #12]
 8008df4:	2200      	movs	r2, #0
 8008df6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8008dfa:	7dfb      	ldrb	r3, [r7, #23]
 8008dfc:	4618      	mov	r0, r3
 8008dfe:	3718      	adds	r7, #24
 8008e00:	46bd      	mov	sp, r7
 8008e02:	bd80      	pop	{r7, pc}
 8008e04:	08009221 	.word	0x08009221
 8008e08:	080090e9 	.word	0x080090e9
 8008e0c:	0800923d 	.word	0x0800923d
 8008e10:	08009191 	.word	0x08009191
 8008e14:	08009259 	.word	0x08009259

08008e18 <HAL_SPI_DMAStop>:
 8008e18:	b580      	push	{r7, lr}
 8008e1a:	b084      	sub	sp, #16
 8008e1c:	af00      	add	r7, sp, #0
 8008e1e:	6078      	str	r0, [r7, #4]
 8008e20:	2300      	movs	r3, #0
 8008e22:	73fb      	strb	r3, [r7, #15]
 8008e24:	687b      	ldr	r3, [r7, #4]
 8008e26:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008e28:	2b00      	cmp	r3, #0
 8008e2a:	d00f      	beq.n	8008e4c <HAL_SPI_DMAStop+0x34>
 8008e2c:	687b      	ldr	r3, [r7, #4]
 8008e2e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008e30:	4618      	mov	r0, r3
 8008e32:	f7fc f885 	bl	8004f40 <HAL_DMA_Abort>
 8008e36:	4603      	mov	r3, r0
 8008e38:	2b00      	cmp	r3, #0
 8008e3a:	d007      	beq.n	8008e4c <HAL_SPI_DMAStop+0x34>
 8008e3c:	687b      	ldr	r3, [r7, #4]
 8008e3e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008e40:	f043 0210 	orr.w	r2, r3, #16
 8008e44:	687b      	ldr	r3, [r7, #4]
 8008e46:	655a      	str	r2, [r3, #84]	; 0x54
 8008e48:	2301      	movs	r3, #1
 8008e4a:	73fb      	strb	r3, [r7, #15]
 8008e4c:	687b      	ldr	r3, [r7, #4]
 8008e4e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008e50:	2b00      	cmp	r3, #0
 8008e52:	d00f      	beq.n	8008e74 <HAL_SPI_DMAStop+0x5c>
 8008e54:	687b      	ldr	r3, [r7, #4]
 8008e56:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008e58:	4618      	mov	r0, r3
 8008e5a:	f7fc f871 	bl	8004f40 <HAL_DMA_Abort>
 8008e5e:	4603      	mov	r3, r0
 8008e60:	2b00      	cmp	r3, #0
 8008e62:	d007      	beq.n	8008e74 <HAL_SPI_DMAStop+0x5c>
 8008e64:	687b      	ldr	r3, [r7, #4]
 8008e66:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008e68:	f043 0210 	orr.w	r2, r3, #16
 8008e6c:	687b      	ldr	r3, [r7, #4]
 8008e6e:	655a      	str	r2, [r3, #84]	; 0x54
 8008e70:	2301      	movs	r3, #1
 8008e72:	73fb      	strb	r3, [r7, #15]
 8008e74:	687b      	ldr	r3, [r7, #4]
 8008e76:	681b      	ldr	r3, [r3, #0]
 8008e78:	685a      	ldr	r2, [r3, #4]
 8008e7a:	687b      	ldr	r3, [r7, #4]
 8008e7c:	681b      	ldr	r3, [r3, #0]
 8008e7e:	f022 0203 	bic.w	r2, r2, #3
 8008e82:	605a      	str	r2, [r3, #4]
 8008e84:	687b      	ldr	r3, [r7, #4]
 8008e86:	2201      	movs	r2, #1
 8008e88:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008e8c:	7bfb      	ldrb	r3, [r7, #15]
 8008e8e:	4618      	mov	r0, r3
 8008e90:	3710      	adds	r7, #16
 8008e92:	46bd      	mov	sp, r7
 8008e94:	bd80      	pop	{r7, pc}
	...

08008e98 <HAL_SPI_IRQHandler>:
 8008e98:	b580      	push	{r7, lr}
 8008e9a:	b088      	sub	sp, #32
 8008e9c:	af00      	add	r7, sp, #0
 8008e9e:	6078      	str	r0, [r7, #4]
 8008ea0:	687b      	ldr	r3, [r7, #4]
 8008ea2:	681b      	ldr	r3, [r3, #0]
 8008ea4:	685b      	ldr	r3, [r3, #4]
 8008ea6:	61fb      	str	r3, [r7, #28]
 8008ea8:	687b      	ldr	r3, [r7, #4]
 8008eaa:	681b      	ldr	r3, [r3, #0]
 8008eac:	689b      	ldr	r3, [r3, #8]
 8008eae:	61bb      	str	r3, [r7, #24]
 8008eb0:	69bb      	ldr	r3, [r7, #24]
 8008eb2:	099b      	lsrs	r3, r3, #6
 8008eb4:	f003 0301 	and.w	r3, r3, #1
 8008eb8:	2b00      	cmp	r3, #0
 8008eba:	d10f      	bne.n	8008edc <HAL_SPI_IRQHandler+0x44>
 8008ebc:	69bb      	ldr	r3, [r7, #24]
 8008ebe:	f003 0301 	and.w	r3, r3, #1
 8008ec2:	2b00      	cmp	r3, #0
 8008ec4:	d00a      	beq.n	8008edc <HAL_SPI_IRQHandler+0x44>
 8008ec6:	69fb      	ldr	r3, [r7, #28]
 8008ec8:	099b      	lsrs	r3, r3, #6
 8008eca:	f003 0301 	and.w	r3, r3, #1
 8008ece:	2b00      	cmp	r3, #0
 8008ed0:	d004      	beq.n	8008edc <HAL_SPI_IRQHandler+0x44>
 8008ed2:	687b      	ldr	r3, [r7, #4]
 8008ed4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008ed6:	6878      	ldr	r0, [r7, #4]
 8008ed8:	4798      	blx	r3
 8008eda:	e0d7      	b.n	800908c <HAL_SPI_IRQHandler+0x1f4>
 8008edc:	69bb      	ldr	r3, [r7, #24]
 8008ede:	085b      	lsrs	r3, r3, #1
 8008ee0:	f003 0301 	and.w	r3, r3, #1
 8008ee4:	2b00      	cmp	r3, #0
 8008ee6:	d00a      	beq.n	8008efe <HAL_SPI_IRQHandler+0x66>
 8008ee8:	69fb      	ldr	r3, [r7, #28]
 8008eea:	09db      	lsrs	r3, r3, #7
 8008eec:	f003 0301 	and.w	r3, r3, #1
 8008ef0:	2b00      	cmp	r3, #0
 8008ef2:	d004      	beq.n	8008efe <HAL_SPI_IRQHandler+0x66>
 8008ef4:	687b      	ldr	r3, [r7, #4]
 8008ef6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008ef8:	6878      	ldr	r0, [r7, #4]
 8008efa:	4798      	blx	r3
 8008efc:	e0c6      	b.n	800908c <HAL_SPI_IRQHandler+0x1f4>
 8008efe:	69bb      	ldr	r3, [r7, #24]
 8008f00:	095b      	lsrs	r3, r3, #5
 8008f02:	f003 0301 	and.w	r3, r3, #1
 8008f06:	2b00      	cmp	r3, #0
 8008f08:	d10c      	bne.n	8008f24 <HAL_SPI_IRQHandler+0x8c>
 8008f0a:	69bb      	ldr	r3, [r7, #24]
 8008f0c:	099b      	lsrs	r3, r3, #6
 8008f0e:	f003 0301 	and.w	r3, r3, #1
 8008f12:	2b00      	cmp	r3, #0
 8008f14:	d106      	bne.n	8008f24 <HAL_SPI_IRQHandler+0x8c>
 8008f16:	69bb      	ldr	r3, [r7, #24]
 8008f18:	0a1b      	lsrs	r3, r3, #8
 8008f1a:	f003 0301 	and.w	r3, r3, #1
 8008f1e:	2b00      	cmp	r3, #0
 8008f20:	f000 80b4 	beq.w	800908c <HAL_SPI_IRQHandler+0x1f4>
 8008f24:	69fb      	ldr	r3, [r7, #28]
 8008f26:	095b      	lsrs	r3, r3, #5
 8008f28:	f003 0301 	and.w	r3, r3, #1
 8008f2c:	2b00      	cmp	r3, #0
 8008f2e:	f000 80ad 	beq.w	800908c <HAL_SPI_IRQHandler+0x1f4>
 8008f32:	69bb      	ldr	r3, [r7, #24]
 8008f34:	099b      	lsrs	r3, r3, #6
 8008f36:	f003 0301 	and.w	r3, r3, #1
 8008f3a:	2b00      	cmp	r3, #0
 8008f3c:	d023      	beq.n	8008f86 <HAL_SPI_IRQHandler+0xee>
 8008f3e:	687b      	ldr	r3, [r7, #4]
 8008f40:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008f44:	b2db      	uxtb	r3, r3
 8008f46:	2b03      	cmp	r3, #3
 8008f48:	d011      	beq.n	8008f6e <HAL_SPI_IRQHandler+0xd6>
 8008f4a:	687b      	ldr	r3, [r7, #4]
 8008f4c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008f4e:	f043 0204 	orr.w	r2, r3, #4
 8008f52:	687b      	ldr	r3, [r7, #4]
 8008f54:	655a      	str	r2, [r3, #84]	; 0x54
 8008f56:	2300      	movs	r3, #0
 8008f58:	617b      	str	r3, [r7, #20]
 8008f5a:	687b      	ldr	r3, [r7, #4]
 8008f5c:	681b      	ldr	r3, [r3, #0]
 8008f5e:	68db      	ldr	r3, [r3, #12]
 8008f60:	617b      	str	r3, [r7, #20]
 8008f62:	687b      	ldr	r3, [r7, #4]
 8008f64:	681b      	ldr	r3, [r3, #0]
 8008f66:	689b      	ldr	r3, [r3, #8]
 8008f68:	617b      	str	r3, [r7, #20]
 8008f6a:	697b      	ldr	r3, [r7, #20]
 8008f6c:	e00b      	b.n	8008f86 <HAL_SPI_IRQHandler+0xee>
 8008f6e:	2300      	movs	r3, #0
 8008f70:	613b      	str	r3, [r7, #16]
 8008f72:	687b      	ldr	r3, [r7, #4]
 8008f74:	681b      	ldr	r3, [r3, #0]
 8008f76:	68db      	ldr	r3, [r3, #12]
 8008f78:	613b      	str	r3, [r7, #16]
 8008f7a:	687b      	ldr	r3, [r7, #4]
 8008f7c:	681b      	ldr	r3, [r3, #0]
 8008f7e:	689b      	ldr	r3, [r3, #8]
 8008f80:	613b      	str	r3, [r7, #16]
 8008f82:	693b      	ldr	r3, [r7, #16]
 8008f84:	e082      	b.n	800908c <HAL_SPI_IRQHandler+0x1f4>
 8008f86:	69bb      	ldr	r3, [r7, #24]
 8008f88:	095b      	lsrs	r3, r3, #5
 8008f8a:	f003 0301 	and.w	r3, r3, #1
 8008f8e:	2b00      	cmp	r3, #0
 8008f90:	d014      	beq.n	8008fbc <HAL_SPI_IRQHandler+0x124>
 8008f92:	687b      	ldr	r3, [r7, #4]
 8008f94:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008f96:	f043 0201 	orr.w	r2, r3, #1
 8008f9a:	687b      	ldr	r3, [r7, #4]
 8008f9c:	655a      	str	r2, [r3, #84]	; 0x54
 8008f9e:	2300      	movs	r3, #0
 8008fa0:	60fb      	str	r3, [r7, #12]
 8008fa2:	687b      	ldr	r3, [r7, #4]
 8008fa4:	681b      	ldr	r3, [r3, #0]
 8008fa6:	689b      	ldr	r3, [r3, #8]
 8008fa8:	60fb      	str	r3, [r7, #12]
 8008faa:	687b      	ldr	r3, [r7, #4]
 8008fac:	681b      	ldr	r3, [r3, #0]
 8008fae:	681a      	ldr	r2, [r3, #0]
 8008fb0:	687b      	ldr	r3, [r7, #4]
 8008fb2:	681b      	ldr	r3, [r3, #0]
 8008fb4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008fb8:	601a      	str	r2, [r3, #0]
 8008fba:	68fb      	ldr	r3, [r7, #12]
 8008fbc:	69bb      	ldr	r3, [r7, #24]
 8008fbe:	0a1b      	lsrs	r3, r3, #8
 8008fc0:	f003 0301 	and.w	r3, r3, #1
 8008fc4:	2b00      	cmp	r3, #0
 8008fc6:	d00c      	beq.n	8008fe2 <HAL_SPI_IRQHandler+0x14a>
 8008fc8:	687b      	ldr	r3, [r7, #4]
 8008fca:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008fcc:	f043 0208 	orr.w	r2, r3, #8
 8008fd0:	687b      	ldr	r3, [r7, #4]
 8008fd2:	655a      	str	r2, [r3, #84]	; 0x54
 8008fd4:	2300      	movs	r3, #0
 8008fd6:	60bb      	str	r3, [r7, #8]
 8008fd8:	687b      	ldr	r3, [r7, #4]
 8008fda:	681b      	ldr	r3, [r3, #0]
 8008fdc:	689b      	ldr	r3, [r3, #8]
 8008fde:	60bb      	str	r3, [r7, #8]
 8008fe0:	68bb      	ldr	r3, [r7, #8]
 8008fe2:	687b      	ldr	r3, [r7, #4]
 8008fe4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008fe6:	2b00      	cmp	r3, #0
 8008fe8:	d04f      	beq.n	800908a <HAL_SPI_IRQHandler+0x1f2>
 8008fea:	687b      	ldr	r3, [r7, #4]
 8008fec:	681b      	ldr	r3, [r3, #0]
 8008fee:	685a      	ldr	r2, [r3, #4]
 8008ff0:	687b      	ldr	r3, [r7, #4]
 8008ff2:	681b      	ldr	r3, [r3, #0]
 8008ff4:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8008ff8:	605a      	str	r2, [r3, #4]
 8008ffa:	687b      	ldr	r3, [r7, #4]
 8008ffc:	2201      	movs	r2, #1
 8008ffe:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8009002:	69fb      	ldr	r3, [r7, #28]
 8009004:	f003 0302 	and.w	r3, r3, #2
 8009008:	2b00      	cmp	r3, #0
 800900a:	d104      	bne.n	8009016 <HAL_SPI_IRQHandler+0x17e>
 800900c:	69fb      	ldr	r3, [r7, #28]
 800900e:	f003 0301 	and.w	r3, r3, #1
 8009012:	2b00      	cmp	r3, #0
 8009014:	d034      	beq.n	8009080 <HAL_SPI_IRQHandler+0x1e8>
 8009016:	687b      	ldr	r3, [r7, #4]
 8009018:	681b      	ldr	r3, [r3, #0]
 800901a:	685a      	ldr	r2, [r3, #4]
 800901c:	687b      	ldr	r3, [r7, #4]
 800901e:	681b      	ldr	r3, [r3, #0]
 8009020:	f022 0203 	bic.w	r2, r2, #3
 8009024:	605a      	str	r2, [r3, #4]
 8009026:	687b      	ldr	r3, [r7, #4]
 8009028:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800902a:	2b00      	cmp	r3, #0
 800902c:	d011      	beq.n	8009052 <HAL_SPI_IRQHandler+0x1ba>
 800902e:	687b      	ldr	r3, [r7, #4]
 8009030:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009032:	4a18      	ldr	r2, [pc, #96]	; (8009094 <HAL_SPI_IRQHandler+0x1fc>)
 8009034:	651a      	str	r2, [r3, #80]	; 0x50
 8009036:	687b      	ldr	r3, [r7, #4]
 8009038:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800903a:	4618      	mov	r0, r3
 800903c:	f7fb fff0 	bl	8005020 <HAL_DMA_Abort_IT>
 8009040:	4603      	mov	r3, r0
 8009042:	2b00      	cmp	r3, #0
 8009044:	d005      	beq.n	8009052 <HAL_SPI_IRQHandler+0x1ba>
 8009046:	687b      	ldr	r3, [r7, #4]
 8009048:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800904a:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800904e:	687b      	ldr	r3, [r7, #4]
 8009050:	655a      	str	r2, [r3, #84]	; 0x54
 8009052:	687b      	ldr	r3, [r7, #4]
 8009054:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8009056:	2b00      	cmp	r3, #0
 8009058:	d016      	beq.n	8009088 <HAL_SPI_IRQHandler+0x1f0>
 800905a:	687b      	ldr	r3, [r7, #4]
 800905c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800905e:	4a0d      	ldr	r2, [pc, #52]	; (8009094 <HAL_SPI_IRQHandler+0x1fc>)
 8009060:	651a      	str	r2, [r3, #80]	; 0x50
 8009062:	687b      	ldr	r3, [r7, #4]
 8009064:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8009066:	4618      	mov	r0, r3
 8009068:	f7fb ffda 	bl	8005020 <HAL_DMA_Abort_IT>
 800906c:	4603      	mov	r3, r0
 800906e:	2b00      	cmp	r3, #0
 8009070:	d00a      	beq.n	8009088 <HAL_SPI_IRQHandler+0x1f0>
 8009072:	687b      	ldr	r3, [r7, #4]
 8009074:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009076:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800907a:	687b      	ldr	r3, [r7, #4]
 800907c:	655a      	str	r2, [r3, #84]	; 0x54
 800907e:	e003      	b.n	8009088 <HAL_SPI_IRQHandler+0x1f0>
 8009080:	6878      	ldr	r0, [r7, #4]
 8009082:	f000 f827 	bl	80090d4 <HAL_SPI_ErrorCallback>
 8009086:	e000      	b.n	800908a <HAL_SPI_IRQHandler+0x1f2>
 8009088:	bf00      	nop
 800908a:	bf00      	nop
 800908c:	3720      	adds	r7, #32
 800908e:	46bd      	mov	sp, r7
 8009090:	bd80      	pop	{r7, pc}
 8009092:	bf00      	nop
 8009094:	08009299 	.word	0x08009299

08009098 <HAL_SPI_RxCpltCallback>:
 8009098:	b480      	push	{r7}
 800909a:	b083      	sub	sp, #12
 800909c:	af00      	add	r7, sp, #0
 800909e:	6078      	str	r0, [r7, #4]
 80090a0:	bf00      	nop
 80090a2:	370c      	adds	r7, #12
 80090a4:	46bd      	mov	sp, r7
 80090a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090aa:	4770      	bx	lr

080090ac <HAL_SPI_RxHalfCpltCallback>:
 80090ac:	b480      	push	{r7}
 80090ae:	b083      	sub	sp, #12
 80090b0:	af00      	add	r7, sp, #0
 80090b2:	6078      	str	r0, [r7, #4]
 80090b4:	bf00      	nop
 80090b6:	370c      	adds	r7, #12
 80090b8:	46bd      	mov	sp, r7
 80090ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090be:	4770      	bx	lr

080090c0 <HAL_SPI_TxRxHalfCpltCallback>:
 80090c0:	b480      	push	{r7}
 80090c2:	b083      	sub	sp, #12
 80090c4:	af00      	add	r7, sp, #0
 80090c6:	6078      	str	r0, [r7, #4]
 80090c8:	bf00      	nop
 80090ca:	370c      	adds	r7, #12
 80090cc:	46bd      	mov	sp, r7
 80090ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090d2:	4770      	bx	lr

080090d4 <HAL_SPI_ErrorCallback>:
 80090d4:	b480      	push	{r7}
 80090d6:	b083      	sub	sp, #12
 80090d8:	af00      	add	r7, sp, #0
 80090da:	6078      	str	r0, [r7, #4]
 80090dc:	bf00      	nop
 80090de:	370c      	adds	r7, #12
 80090e0:	46bd      	mov	sp, r7
 80090e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090e6:	4770      	bx	lr

080090e8 <SPI_DMAReceiveCplt>:
 80090e8:	b580      	push	{r7, lr}
 80090ea:	b084      	sub	sp, #16
 80090ec:	af00      	add	r7, sp, #0
 80090ee:	6078      	str	r0, [r7, #4]
 80090f0:	687b      	ldr	r3, [r7, #4]
 80090f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80090f4:	60fb      	str	r3, [r7, #12]
 80090f6:	f7fb fcff 	bl	8004af8 <HAL_GetTick>
 80090fa:	60b8      	str	r0, [r7, #8]
 80090fc:	687b      	ldr	r3, [r7, #4]
 80090fe:	681b      	ldr	r3, [r3, #0]
 8009100:	681b      	ldr	r3, [r3, #0]
 8009102:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009106:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800910a:	d03b      	beq.n	8009184 <SPI_DMAReceiveCplt+0x9c>
 800910c:	68fb      	ldr	r3, [r7, #12]
 800910e:	681b      	ldr	r3, [r3, #0]
 8009110:	685a      	ldr	r2, [r3, #4]
 8009112:	68fb      	ldr	r3, [r7, #12]
 8009114:	681b      	ldr	r3, [r3, #0]
 8009116:	f022 0220 	bic.w	r2, r2, #32
 800911a:	605a      	str	r2, [r3, #4]
 800911c:	68fb      	ldr	r3, [r7, #12]
 800911e:	689b      	ldr	r3, [r3, #8]
 8009120:	2b00      	cmp	r3, #0
 8009122:	d10d      	bne.n	8009140 <SPI_DMAReceiveCplt+0x58>
 8009124:	68fb      	ldr	r3, [r7, #12]
 8009126:	685b      	ldr	r3, [r3, #4]
 8009128:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800912c:	d108      	bne.n	8009140 <SPI_DMAReceiveCplt+0x58>
 800912e:	68fb      	ldr	r3, [r7, #12]
 8009130:	681b      	ldr	r3, [r3, #0]
 8009132:	685a      	ldr	r2, [r3, #4]
 8009134:	68fb      	ldr	r3, [r7, #12]
 8009136:	681b      	ldr	r3, [r3, #0]
 8009138:	f022 0203 	bic.w	r2, r2, #3
 800913c:	605a      	str	r2, [r3, #4]
 800913e:	e007      	b.n	8009150 <SPI_DMAReceiveCplt+0x68>
 8009140:	68fb      	ldr	r3, [r7, #12]
 8009142:	681b      	ldr	r3, [r3, #0]
 8009144:	685a      	ldr	r2, [r3, #4]
 8009146:	68fb      	ldr	r3, [r7, #12]
 8009148:	681b      	ldr	r3, [r3, #0]
 800914a:	f022 0201 	bic.w	r2, r2, #1
 800914e:	605a      	str	r2, [r3, #4]
 8009150:	68ba      	ldr	r2, [r7, #8]
 8009152:	2164      	movs	r1, #100	; 0x64
 8009154:	68f8      	ldr	r0, [r7, #12]
 8009156:	f000 f93b 	bl	80093d0 <SPI_EndRxTransaction>
 800915a:	4603      	mov	r3, r0
 800915c:	2b00      	cmp	r3, #0
 800915e:	d002      	beq.n	8009166 <SPI_DMAReceiveCplt+0x7e>
 8009160:	68fb      	ldr	r3, [r7, #12]
 8009162:	2220      	movs	r2, #32
 8009164:	655a      	str	r2, [r3, #84]	; 0x54
 8009166:	68fb      	ldr	r3, [r7, #12]
 8009168:	2200      	movs	r2, #0
 800916a:	87da      	strh	r2, [r3, #62]	; 0x3e
 800916c:	68fb      	ldr	r3, [r7, #12]
 800916e:	2201      	movs	r2, #1
 8009170:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8009174:	68fb      	ldr	r3, [r7, #12]
 8009176:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009178:	2b00      	cmp	r3, #0
 800917a:	d003      	beq.n	8009184 <SPI_DMAReceiveCplt+0x9c>
 800917c:	68f8      	ldr	r0, [r7, #12]
 800917e:	f7ff ffa9 	bl	80090d4 <HAL_SPI_ErrorCallback>
 8009182:	e002      	b.n	800918a <SPI_DMAReceiveCplt+0xa2>
 8009184:	68f8      	ldr	r0, [r7, #12]
 8009186:	f7ff ff87 	bl	8009098 <HAL_SPI_RxCpltCallback>
 800918a:	3710      	adds	r7, #16
 800918c:	46bd      	mov	sp, r7
 800918e:	bd80      	pop	{r7, pc}

08009190 <SPI_DMATransmitReceiveCplt>:
 8009190:	b580      	push	{r7, lr}
 8009192:	b084      	sub	sp, #16
 8009194:	af00      	add	r7, sp, #0
 8009196:	6078      	str	r0, [r7, #4]
 8009198:	687b      	ldr	r3, [r7, #4]
 800919a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800919c:	60fb      	str	r3, [r7, #12]
 800919e:	f7fb fcab 	bl	8004af8 <HAL_GetTick>
 80091a2:	60b8      	str	r0, [r7, #8]
 80091a4:	687b      	ldr	r3, [r7, #4]
 80091a6:	681b      	ldr	r3, [r3, #0]
 80091a8:	681b      	ldr	r3, [r3, #0]
 80091aa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80091ae:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80091b2:	d02f      	beq.n	8009214 <SPI_DMATransmitReceiveCplt+0x84>
 80091b4:	68fb      	ldr	r3, [r7, #12]
 80091b6:	681b      	ldr	r3, [r3, #0]
 80091b8:	685a      	ldr	r2, [r3, #4]
 80091ba:	68fb      	ldr	r3, [r7, #12]
 80091bc:	681b      	ldr	r3, [r3, #0]
 80091be:	f022 0220 	bic.w	r2, r2, #32
 80091c2:	605a      	str	r2, [r3, #4]
 80091c4:	68ba      	ldr	r2, [r7, #8]
 80091c6:	2164      	movs	r1, #100	; 0x64
 80091c8:	68f8      	ldr	r0, [r7, #12]
 80091ca:	f000 f967 	bl	800949c <SPI_EndRxTxTransaction>
 80091ce:	4603      	mov	r3, r0
 80091d0:	2b00      	cmp	r3, #0
 80091d2:	d005      	beq.n	80091e0 <SPI_DMATransmitReceiveCplt+0x50>
 80091d4:	68fb      	ldr	r3, [r7, #12]
 80091d6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80091d8:	f043 0220 	orr.w	r2, r3, #32
 80091dc:	68fb      	ldr	r3, [r7, #12]
 80091de:	655a      	str	r2, [r3, #84]	; 0x54
 80091e0:	68fb      	ldr	r3, [r7, #12]
 80091e2:	681b      	ldr	r3, [r3, #0]
 80091e4:	685a      	ldr	r2, [r3, #4]
 80091e6:	68fb      	ldr	r3, [r7, #12]
 80091e8:	681b      	ldr	r3, [r3, #0]
 80091ea:	f022 0203 	bic.w	r2, r2, #3
 80091ee:	605a      	str	r2, [r3, #4]
 80091f0:	68fb      	ldr	r3, [r7, #12]
 80091f2:	2200      	movs	r2, #0
 80091f4:	86da      	strh	r2, [r3, #54]	; 0x36
 80091f6:	68fb      	ldr	r3, [r7, #12]
 80091f8:	2200      	movs	r2, #0
 80091fa:	87da      	strh	r2, [r3, #62]	; 0x3e
 80091fc:	68fb      	ldr	r3, [r7, #12]
 80091fe:	2201      	movs	r2, #1
 8009200:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8009204:	68fb      	ldr	r3, [r7, #12]
 8009206:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009208:	2b00      	cmp	r3, #0
 800920a:	d003      	beq.n	8009214 <SPI_DMATransmitReceiveCplt+0x84>
 800920c:	68f8      	ldr	r0, [r7, #12]
 800920e:	f7ff ff61 	bl	80090d4 <HAL_SPI_ErrorCallback>
 8009212:	e002      	b.n	800921a <SPI_DMATransmitReceiveCplt+0x8a>
 8009214:	68f8      	ldr	r0, [r7, #12]
 8009216:	f7fa f93d 	bl	8003494 <HAL_SPI_TxRxCpltCallback>
 800921a:	3710      	adds	r7, #16
 800921c:	46bd      	mov	sp, r7
 800921e:	bd80      	pop	{r7, pc}

08009220 <SPI_DMAHalfReceiveCplt>:
 8009220:	b580      	push	{r7, lr}
 8009222:	b084      	sub	sp, #16
 8009224:	af00      	add	r7, sp, #0
 8009226:	6078      	str	r0, [r7, #4]
 8009228:	687b      	ldr	r3, [r7, #4]
 800922a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800922c:	60fb      	str	r3, [r7, #12]
 800922e:	68f8      	ldr	r0, [r7, #12]
 8009230:	f7ff ff3c 	bl	80090ac <HAL_SPI_RxHalfCpltCallback>
 8009234:	bf00      	nop
 8009236:	3710      	adds	r7, #16
 8009238:	46bd      	mov	sp, r7
 800923a:	bd80      	pop	{r7, pc}

0800923c <SPI_DMAHalfTransmitReceiveCplt>:
 800923c:	b580      	push	{r7, lr}
 800923e:	b084      	sub	sp, #16
 8009240:	af00      	add	r7, sp, #0
 8009242:	6078      	str	r0, [r7, #4]
 8009244:	687b      	ldr	r3, [r7, #4]
 8009246:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009248:	60fb      	str	r3, [r7, #12]
 800924a:	68f8      	ldr	r0, [r7, #12]
 800924c:	f7ff ff38 	bl	80090c0 <HAL_SPI_TxRxHalfCpltCallback>
 8009250:	bf00      	nop
 8009252:	3710      	adds	r7, #16
 8009254:	46bd      	mov	sp, r7
 8009256:	bd80      	pop	{r7, pc}

08009258 <SPI_DMAError>:
 8009258:	b580      	push	{r7, lr}
 800925a:	b084      	sub	sp, #16
 800925c:	af00      	add	r7, sp, #0
 800925e:	6078      	str	r0, [r7, #4]
 8009260:	687b      	ldr	r3, [r7, #4]
 8009262:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009264:	60fb      	str	r3, [r7, #12]
 8009266:	68fb      	ldr	r3, [r7, #12]
 8009268:	681b      	ldr	r3, [r3, #0]
 800926a:	685a      	ldr	r2, [r3, #4]
 800926c:	68fb      	ldr	r3, [r7, #12]
 800926e:	681b      	ldr	r3, [r3, #0]
 8009270:	f022 0203 	bic.w	r2, r2, #3
 8009274:	605a      	str	r2, [r3, #4]
 8009276:	68fb      	ldr	r3, [r7, #12]
 8009278:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800927a:	f043 0210 	orr.w	r2, r3, #16
 800927e:	68fb      	ldr	r3, [r7, #12]
 8009280:	655a      	str	r2, [r3, #84]	; 0x54
 8009282:	68fb      	ldr	r3, [r7, #12]
 8009284:	2201      	movs	r2, #1
 8009286:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800928a:	68f8      	ldr	r0, [r7, #12]
 800928c:	f7ff ff22 	bl	80090d4 <HAL_SPI_ErrorCallback>
 8009290:	bf00      	nop
 8009292:	3710      	adds	r7, #16
 8009294:	46bd      	mov	sp, r7
 8009296:	bd80      	pop	{r7, pc}

08009298 <SPI_DMAAbortOnError>:
 8009298:	b580      	push	{r7, lr}
 800929a:	b084      	sub	sp, #16
 800929c:	af00      	add	r7, sp, #0
 800929e:	6078      	str	r0, [r7, #4]
 80092a0:	687b      	ldr	r3, [r7, #4]
 80092a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80092a4:	60fb      	str	r3, [r7, #12]
 80092a6:	68fb      	ldr	r3, [r7, #12]
 80092a8:	2200      	movs	r2, #0
 80092aa:	87da      	strh	r2, [r3, #62]	; 0x3e
 80092ac:	68fb      	ldr	r3, [r7, #12]
 80092ae:	2200      	movs	r2, #0
 80092b0:	86da      	strh	r2, [r3, #54]	; 0x36
 80092b2:	68f8      	ldr	r0, [r7, #12]
 80092b4:	f7ff ff0e 	bl	80090d4 <HAL_SPI_ErrorCallback>
 80092b8:	bf00      	nop
 80092ba:	3710      	adds	r7, #16
 80092bc:	46bd      	mov	sp, r7
 80092be:	bd80      	pop	{r7, pc}

080092c0 <SPI_WaitFlagStateUntilTimeout>:
 80092c0:	b580      	push	{r7, lr}
 80092c2:	b088      	sub	sp, #32
 80092c4:	af00      	add	r7, sp, #0
 80092c6:	60f8      	str	r0, [r7, #12]
 80092c8:	60b9      	str	r1, [r7, #8]
 80092ca:	603b      	str	r3, [r7, #0]
 80092cc:	4613      	mov	r3, r2
 80092ce:	71fb      	strb	r3, [r7, #7]
 80092d0:	f7fb fc12 	bl	8004af8 <HAL_GetTick>
 80092d4:	4602      	mov	r2, r0
 80092d6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80092d8:	1a9b      	subs	r3, r3, r2
 80092da:	683a      	ldr	r2, [r7, #0]
 80092dc:	4413      	add	r3, r2
 80092de:	61fb      	str	r3, [r7, #28]
 80092e0:	f7fb fc0a 	bl	8004af8 <HAL_GetTick>
 80092e4:	61b8      	str	r0, [r7, #24]
 80092e6:	4b39      	ldr	r3, [pc, #228]	; (80093cc <SPI_WaitFlagStateUntilTimeout+0x10c>)
 80092e8:	681b      	ldr	r3, [r3, #0]
 80092ea:	015b      	lsls	r3, r3, #5
 80092ec:	0d1b      	lsrs	r3, r3, #20
 80092ee:	69fa      	ldr	r2, [r7, #28]
 80092f0:	fb02 f303 	mul.w	r3, r2, r3
 80092f4:	617b      	str	r3, [r7, #20]
 80092f6:	e054      	b.n	80093a2 <SPI_WaitFlagStateUntilTimeout+0xe2>
 80092f8:	683b      	ldr	r3, [r7, #0]
 80092fa:	f1b3 3fff 	cmp.w	r3, #4294967295
 80092fe:	d050      	beq.n	80093a2 <SPI_WaitFlagStateUntilTimeout+0xe2>
 8009300:	f7fb fbfa 	bl	8004af8 <HAL_GetTick>
 8009304:	4602      	mov	r2, r0
 8009306:	69bb      	ldr	r3, [r7, #24]
 8009308:	1ad3      	subs	r3, r2, r3
 800930a:	69fa      	ldr	r2, [r7, #28]
 800930c:	429a      	cmp	r2, r3
 800930e:	d902      	bls.n	8009316 <SPI_WaitFlagStateUntilTimeout+0x56>
 8009310:	69fb      	ldr	r3, [r7, #28]
 8009312:	2b00      	cmp	r3, #0
 8009314:	d13d      	bne.n	8009392 <SPI_WaitFlagStateUntilTimeout+0xd2>
 8009316:	68fb      	ldr	r3, [r7, #12]
 8009318:	681b      	ldr	r3, [r3, #0]
 800931a:	685a      	ldr	r2, [r3, #4]
 800931c:	68fb      	ldr	r3, [r7, #12]
 800931e:	681b      	ldr	r3, [r3, #0]
 8009320:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8009324:	605a      	str	r2, [r3, #4]
 8009326:	68fb      	ldr	r3, [r7, #12]
 8009328:	685b      	ldr	r3, [r3, #4]
 800932a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800932e:	d111      	bne.n	8009354 <SPI_WaitFlagStateUntilTimeout+0x94>
 8009330:	68fb      	ldr	r3, [r7, #12]
 8009332:	689b      	ldr	r3, [r3, #8]
 8009334:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009338:	d004      	beq.n	8009344 <SPI_WaitFlagStateUntilTimeout+0x84>
 800933a:	68fb      	ldr	r3, [r7, #12]
 800933c:	689b      	ldr	r3, [r3, #8]
 800933e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009342:	d107      	bne.n	8009354 <SPI_WaitFlagStateUntilTimeout+0x94>
 8009344:	68fb      	ldr	r3, [r7, #12]
 8009346:	681b      	ldr	r3, [r3, #0]
 8009348:	681a      	ldr	r2, [r3, #0]
 800934a:	68fb      	ldr	r3, [r7, #12]
 800934c:	681b      	ldr	r3, [r3, #0]
 800934e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8009352:	601a      	str	r2, [r3, #0]
 8009354:	68fb      	ldr	r3, [r7, #12]
 8009356:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009358:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800935c:	d10f      	bne.n	800937e <SPI_WaitFlagStateUntilTimeout+0xbe>
 800935e:	68fb      	ldr	r3, [r7, #12]
 8009360:	681b      	ldr	r3, [r3, #0]
 8009362:	681a      	ldr	r2, [r3, #0]
 8009364:	68fb      	ldr	r3, [r7, #12]
 8009366:	681b      	ldr	r3, [r3, #0]
 8009368:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800936c:	601a      	str	r2, [r3, #0]
 800936e:	68fb      	ldr	r3, [r7, #12]
 8009370:	681b      	ldr	r3, [r3, #0]
 8009372:	681a      	ldr	r2, [r3, #0]
 8009374:	68fb      	ldr	r3, [r7, #12]
 8009376:	681b      	ldr	r3, [r3, #0]
 8009378:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800937c:	601a      	str	r2, [r3, #0]
 800937e:	68fb      	ldr	r3, [r7, #12]
 8009380:	2201      	movs	r2, #1
 8009382:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8009386:	68fb      	ldr	r3, [r7, #12]
 8009388:	2200      	movs	r2, #0
 800938a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800938e:	2303      	movs	r3, #3
 8009390:	e017      	b.n	80093c2 <SPI_WaitFlagStateUntilTimeout+0x102>
 8009392:	697b      	ldr	r3, [r7, #20]
 8009394:	2b00      	cmp	r3, #0
 8009396:	d101      	bne.n	800939c <SPI_WaitFlagStateUntilTimeout+0xdc>
 8009398:	2300      	movs	r3, #0
 800939a:	61fb      	str	r3, [r7, #28]
 800939c:	697b      	ldr	r3, [r7, #20]
 800939e:	3b01      	subs	r3, #1
 80093a0:	617b      	str	r3, [r7, #20]
 80093a2:	68fb      	ldr	r3, [r7, #12]
 80093a4:	681b      	ldr	r3, [r3, #0]
 80093a6:	689a      	ldr	r2, [r3, #8]
 80093a8:	68bb      	ldr	r3, [r7, #8]
 80093aa:	4013      	ands	r3, r2
 80093ac:	68ba      	ldr	r2, [r7, #8]
 80093ae:	429a      	cmp	r2, r3
 80093b0:	bf0c      	ite	eq
 80093b2:	2301      	moveq	r3, #1
 80093b4:	2300      	movne	r3, #0
 80093b6:	b2db      	uxtb	r3, r3
 80093b8:	461a      	mov	r2, r3
 80093ba:	79fb      	ldrb	r3, [r7, #7]
 80093bc:	429a      	cmp	r2, r3
 80093be:	d19b      	bne.n	80092f8 <SPI_WaitFlagStateUntilTimeout+0x38>
 80093c0:	2300      	movs	r3, #0
 80093c2:	4618      	mov	r0, r3
 80093c4:	3720      	adds	r7, #32
 80093c6:	46bd      	mov	sp, r7
 80093c8:	bd80      	pop	{r7, pc}
 80093ca:	bf00      	nop
 80093cc:	20000138 	.word	0x20000138

080093d0 <SPI_EndRxTransaction>:
 80093d0:	b580      	push	{r7, lr}
 80093d2:	b086      	sub	sp, #24
 80093d4:	af02      	add	r7, sp, #8
 80093d6:	60f8      	str	r0, [r7, #12]
 80093d8:	60b9      	str	r1, [r7, #8]
 80093da:	607a      	str	r2, [r7, #4]
 80093dc:	68fb      	ldr	r3, [r7, #12]
 80093de:	685b      	ldr	r3, [r3, #4]
 80093e0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80093e4:	d111      	bne.n	800940a <SPI_EndRxTransaction+0x3a>
 80093e6:	68fb      	ldr	r3, [r7, #12]
 80093e8:	689b      	ldr	r3, [r3, #8]
 80093ea:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80093ee:	d004      	beq.n	80093fa <SPI_EndRxTransaction+0x2a>
 80093f0:	68fb      	ldr	r3, [r7, #12]
 80093f2:	689b      	ldr	r3, [r3, #8]
 80093f4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80093f8:	d107      	bne.n	800940a <SPI_EndRxTransaction+0x3a>
 80093fa:	68fb      	ldr	r3, [r7, #12]
 80093fc:	681b      	ldr	r3, [r3, #0]
 80093fe:	681a      	ldr	r2, [r3, #0]
 8009400:	68fb      	ldr	r3, [r7, #12]
 8009402:	681b      	ldr	r3, [r3, #0]
 8009404:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8009408:	601a      	str	r2, [r3, #0]
 800940a:	68fb      	ldr	r3, [r7, #12]
 800940c:	685b      	ldr	r3, [r3, #4]
 800940e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8009412:	d12a      	bne.n	800946a <SPI_EndRxTransaction+0x9a>
 8009414:	68fb      	ldr	r3, [r7, #12]
 8009416:	689b      	ldr	r3, [r3, #8]
 8009418:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800941c:	d012      	beq.n	8009444 <SPI_EndRxTransaction+0x74>
 800941e:	687b      	ldr	r3, [r7, #4]
 8009420:	9300      	str	r3, [sp, #0]
 8009422:	68bb      	ldr	r3, [r7, #8]
 8009424:	2200      	movs	r2, #0
 8009426:	2180      	movs	r1, #128	; 0x80
 8009428:	68f8      	ldr	r0, [r7, #12]
 800942a:	f7ff ff49 	bl	80092c0 <SPI_WaitFlagStateUntilTimeout>
 800942e:	4603      	mov	r3, r0
 8009430:	2b00      	cmp	r3, #0
 8009432:	d02d      	beq.n	8009490 <SPI_EndRxTransaction+0xc0>
 8009434:	68fb      	ldr	r3, [r7, #12]
 8009436:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009438:	f043 0220 	orr.w	r2, r3, #32
 800943c:	68fb      	ldr	r3, [r7, #12]
 800943e:	655a      	str	r2, [r3, #84]	; 0x54
 8009440:	2303      	movs	r3, #3
 8009442:	e026      	b.n	8009492 <SPI_EndRxTransaction+0xc2>
 8009444:	687b      	ldr	r3, [r7, #4]
 8009446:	9300      	str	r3, [sp, #0]
 8009448:	68bb      	ldr	r3, [r7, #8]
 800944a:	2200      	movs	r2, #0
 800944c:	2101      	movs	r1, #1
 800944e:	68f8      	ldr	r0, [r7, #12]
 8009450:	f7ff ff36 	bl	80092c0 <SPI_WaitFlagStateUntilTimeout>
 8009454:	4603      	mov	r3, r0
 8009456:	2b00      	cmp	r3, #0
 8009458:	d01a      	beq.n	8009490 <SPI_EndRxTransaction+0xc0>
 800945a:	68fb      	ldr	r3, [r7, #12]
 800945c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800945e:	f043 0220 	orr.w	r2, r3, #32
 8009462:	68fb      	ldr	r3, [r7, #12]
 8009464:	655a      	str	r2, [r3, #84]	; 0x54
 8009466:	2303      	movs	r3, #3
 8009468:	e013      	b.n	8009492 <SPI_EndRxTransaction+0xc2>
 800946a:	687b      	ldr	r3, [r7, #4]
 800946c:	9300      	str	r3, [sp, #0]
 800946e:	68bb      	ldr	r3, [r7, #8]
 8009470:	2200      	movs	r2, #0
 8009472:	2101      	movs	r1, #1
 8009474:	68f8      	ldr	r0, [r7, #12]
 8009476:	f7ff ff23 	bl	80092c0 <SPI_WaitFlagStateUntilTimeout>
 800947a:	4603      	mov	r3, r0
 800947c:	2b00      	cmp	r3, #0
 800947e:	d007      	beq.n	8009490 <SPI_EndRxTransaction+0xc0>
 8009480:	68fb      	ldr	r3, [r7, #12]
 8009482:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009484:	f043 0220 	orr.w	r2, r3, #32
 8009488:	68fb      	ldr	r3, [r7, #12]
 800948a:	655a      	str	r2, [r3, #84]	; 0x54
 800948c:	2303      	movs	r3, #3
 800948e:	e000      	b.n	8009492 <SPI_EndRxTransaction+0xc2>
 8009490:	2300      	movs	r3, #0
 8009492:	4618      	mov	r0, r3
 8009494:	3710      	adds	r7, #16
 8009496:	46bd      	mov	sp, r7
 8009498:	bd80      	pop	{r7, pc}
	...

0800949c <SPI_EndRxTxTransaction>:
 800949c:	b580      	push	{r7, lr}
 800949e:	b088      	sub	sp, #32
 80094a0:	af02      	add	r7, sp, #8
 80094a2:	60f8      	str	r0, [r7, #12]
 80094a4:	60b9      	str	r1, [r7, #8]
 80094a6:	607a      	str	r2, [r7, #4]
 80094a8:	4b1b      	ldr	r3, [pc, #108]	; (8009518 <SPI_EndRxTxTransaction+0x7c>)
 80094aa:	681b      	ldr	r3, [r3, #0]
 80094ac:	4a1b      	ldr	r2, [pc, #108]	; (800951c <SPI_EndRxTxTransaction+0x80>)
 80094ae:	fba2 2303 	umull	r2, r3, r2, r3
 80094b2:	0d5b      	lsrs	r3, r3, #21
 80094b4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80094b8:	fb02 f303 	mul.w	r3, r2, r3
 80094bc:	617b      	str	r3, [r7, #20]
 80094be:	68fb      	ldr	r3, [r7, #12]
 80094c0:	685b      	ldr	r3, [r3, #4]
 80094c2:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80094c6:	d112      	bne.n	80094ee <SPI_EndRxTxTransaction+0x52>
 80094c8:	687b      	ldr	r3, [r7, #4]
 80094ca:	9300      	str	r3, [sp, #0]
 80094cc:	68bb      	ldr	r3, [r7, #8]
 80094ce:	2200      	movs	r2, #0
 80094d0:	2180      	movs	r1, #128	; 0x80
 80094d2:	68f8      	ldr	r0, [r7, #12]
 80094d4:	f7ff fef4 	bl	80092c0 <SPI_WaitFlagStateUntilTimeout>
 80094d8:	4603      	mov	r3, r0
 80094da:	2b00      	cmp	r3, #0
 80094dc:	d016      	beq.n	800950c <SPI_EndRxTxTransaction+0x70>
 80094de:	68fb      	ldr	r3, [r7, #12]
 80094e0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80094e2:	f043 0220 	orr.w	r2, r3, #32
 80094e6:	68fb      	ldr	r3, [r7, #12]
 80094e8:	655a      	str	r2, [r3, #84]	; 0x54
 80094ea:	2303      	movs	r3, #3
 80094ec:	e00f      	b.n	800950e <SPI_EndRxTxTransaction+0x72>
 80094ee:	697b      	ldr	r3, [r7, #20]
 80094f0:	2b00      	cmp	r3, #0
 80094f2:	d00a      	beq.n	800950a <SPI_EndRxTxTransaction+0x6e>
 80094f4:	697b      	ldr	r3, [r7, #20]
 80094f6:	3b01      	subs	r3, #1
 80094f8:	617b      	str	r3, [r7, #20]
 80094fa:	68fb      	ldr	r3, [r7, #12]
 80094fc:	681b      	ldr	r3, [r3, #0]
 80094fe:	689b      	ldr	r3, [r3, #8]
 8009500:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009504:	2b80      	cmp	r3, #128	; 0x80
 8009506:	d0f2      	beq.n	80094ee <SPI_EndRxTxTransaction+0x52>
 8009508:	e000      	b.n	800950c <SPI_EndRxTxTransaction+0x70>
 800950a:	bf00      	nop
 800950c:	2300      	movs	r3, #0
 800950e:	4618      	mov	r0, r3
 8009510:	3718      	adds	r7, #24
 8009512:	46bd      	mov	sp, r7
 8009514:	bd80      	pop	{r7, pc}
 8009516:	bf00      	nop
 8009518:	20000138 	.word	0x20000138
 800951c:	165e9f81 	.word	0x165e9f81

08009520 <HAL_TIM_Base_Init>:
 8009520:	b580      	push	{r7, lr}
 8009522:	b082      	sub	sp, #8
 8009524:	af00      	add	r7, sp, #0
 8009526:	6078      	str	r0, [r7, #4]
 8009528:	687b      	ldr	r3, [r7, #4]
 800952a:	2b00      	cmp	r3, #0
 800952c:	d101      	bne.n	8009532 <HAL_TIM_Base_Init+0x12>
 800952e:	2301      	movs	r3, #1
 8009530:	e041      	b.n	80095b6 <HAL_TIM_Base_Init+0x96>
 8009532:	687b      	ldr	r3, [r7, #4]
 8009534:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009538:	b2db      	uxtb	r3, r3
 800953a:	2b00      	cmp	r3, #0
 800953c:	d106      	bne.n	800954c <HAL_TIM_Base_Init+0x2c>
 800953e:	687b      	ldr	r3, [r7, #4]
 8009540:	2200      	movs	r2, #0
 8009542:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009546:	6878      	ldr	r0, [r7, #4]
 8009548:	f7fb f864 	bl	8004614 <HAL_TIM_Base_MspInit>
 800954c:	687b      	ldr	r3, [r7, #4]
 800954e:	2202      	movs	r2, #2
 8009550:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009554:	687b      	ldr	r3, [r7, #4]
 8009556:	681a      	ldr	r2, [r3, #0]
 8009558:	687b      	ldr	r3, [r7, #4]
 800955a:	3304      	adds	r3, #4
 800955c:	4619      	mov	r1, r3
 800955e:	4610      	mov	r0, r2
 8009560:	f000 fcae 	bl	8009ec0 <TIM_Base_SetConfig>
 8009564:	687b      	ldr	r3, [r7, #4]
 8009566:	2201      	movs	r2, #1
 8009568:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800956c:	687b      	ldr	r3, [r7, #4]
 800956e:	2201      	movs	r2, #1
 8009570:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009574:	687b      	ldr	r3, [r7, #4]
 8009576:	2201      	movs	r2, #1
 8009578:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800957c:	687b      	ldr	r3, [r7, #4]
 800957e:	2201      	movs	r2, #1
 8009580:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009584:	687b      	ldr	r3, [r7, #4]
 8009586:	2201      	movs	r2, #1
 8009588:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800958c:	687b      	ldr	r3, [r7, #4]
 800958e:	2201      	movs	r2, #1
 8009590:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009594:	687b      	ldr	r3, [r7, #4]
 8009596:	2201      	movs	r2, #1
 8009598:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800959c:	687b      	ldr	r3, [r7, #4]
 800959e:	2201      	movs	r2, #1
 80095a0:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80095a4:	687b      	ldr	r3, [r7, #4]
 80095a6:	2201      	movs	r2, #1
 80095a8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80095ac:	687b      	ldr	r3, [r7, #4]
 80095ae:	2201      	movs	r2, #1
 80095b0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80095b4:	2300      	movs	r3, #0
 80095b6:	4618      	mov	r0, r3
 80095b8:	3708      	adds	r7, #8
 80095ba:	46bd      	mov	sp, r7
 80095bc:	bd80      	pop	{r7, pc}
	...

080095c0 <HAL_TIM_Base_Start>:
 80095c0:	b480      	push	{r7}
 80095c2:	b085      	sub	sp, #20
 80095c4:	af00      	add	r7, sp, #0
 80095c6:	6078      	str	r0, [r7, #4]
 80095c8:	687b      	ldr	r3, [r7, #4]
 80095ca:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80095ce:	b2db      	uxtb	r3, r3
 80095d0:	2b01      	cmp	r3, #1
 80095d2:	d001      	beq.n	80095d8 <HAL_TIM_Base_Start+0x18>
 80095d4:	2301      	movs	r3, #1
 80095d6:	e03c      	b.n	8009652 <HAL_TIM_Base_Start+0x92>
 80095d8:	687b      	ldr	r3, [r7, #4]
 80095da:	2202      	movs	r2, #2
 80095dc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80095e0:	687b      	ldr	r3, [r7, #4]
 80095e2:	681b      	ldr	r3, [r3, #0]
 80095e4:	4a1e      	ldr	r2, [pc, #120]	; (8009660 <HAL_TIM_Base_Start+0xa0>)
 80095e6:	4293      	cmp	r3, r2
 80095e8:	d018      	beq.n	800961c <HAL_TIM_Base_Start+0x5c>
 80095ea:	687b      	ldr	r3, [r7, #4]
 80095ec:	681b      	ldr	r3, [r3, #0]
 80095ee:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80095f2:	d013      	beq.n	800961c <HAL_TIM_Base_Start+0x5c>
 80095f4:	687b      	ldr	r3, [r7, #4]
 80095f6:	681b      	ldr	r3, [r3, #0]
 80095f8:	4a1a      	ldr	r2, [pc, #104]	; (8009664 <HAL_TIM_Base_Start+0xa4>)
 80095fa:	4293      	cmp	r3, r2
 80095fc:	d00e      	beq.n	800961c <HAL_TIM_Base_Start+0x5c>
 80095fe:	687b      	ldr	r3, [r7, #4]
 8009600:	681b      	ldr	r3, [r3, #0]
 8009602:	4a19      	ldr	r2, [pc, #100]	; (8009668 <HAL_TIM_Base_Start+0xa8>)
 8009604:	4293      	cmp	r3, r2
 8009606:	d009      	beq.n	800961c <HAL_TIM_Base_Start+0x5c>
 8009608:	687b      	ldr	r3, [r7, #4]
 800960a:	681b      	ldr	r3, [r3, #0]
 800960c:	4a17      	ldr	r2, [pc, #92]	; (800966c <HAL_TIM_Base_Start+0xac>)
 800960e:	4293      	cmp	r3, r2
 8009610:	d004      	beq.n	800961c <HAL_TIM_Base_Start+0x5c>
 8009612:	687b      	ldr	r3, [r7, #4]
 8009614:	681b      	ldr	r3, [r3, #0]
 8009616:	4a16      	ldr	r2, [pc, #88]	; (8009670 <HAL_TIM_Base_Start+0xb0>)
 8009618:	4293      	cmp	r3, r2
 800961a:	d111      	bne.n	8009640 <HAL_TIM_Base_Start+0x80>
 800961c:	687b      	ldr	r3, [r7, #4]
 800961e:	681b      	ldr	r3, [r3, #0]
 8009620:	689b      	ldr	r3, [r3, #8]
 8009622:	f003 0307 	and.w	r3, r3, #7
 8009626:	60fb      	str	r3, [r7, #12]
 8009628:	68fb      	ldr	r3, [r7, #12]
 800962a:	2b06      	cmp	r3, #6
 800962c:	d010      	beq.n	8009650 <HAL_TIM_Base_Start+0x90>
 800962e:	687b      	ldr	r3, [r7, #4]
 8009630:	681b      	ldr	r3, [r3, #0]
 8009632:	681a      	ldr	r2, [r3, #0]
 8009634:	687b      	ldr	r3, [r7, #4]
 8009636:	681b      	ldr	r3, [r3, #0]
 8009638:	f042 0201 	orr.w	r2, r2, #1
 800963c:	601a      	str	r2, [r3, #0]
 800963e:	e007      	b.n	8009650 <HAL_TIM_Base_Start+0x90>
 8009640:	687b      	ldr	r3, [r7, #4]
 8009642:	681b      	ldr	r3, [r3, #0]
 8009644:	681a      	ldr	r2, [r3, #0]
 8009646:	687b      	ldr	r3, [r7, #4]
 8009648:	681b      	ldr	r3, [r3, #0]
 800964a:	f042 0201 	orr.w	r2, r2, #1
 800964e:	601a      	str	r2, [r3, #0]
 8009650:	2300      	movs	r3, #0
 8009652:	4618      	mov	r0, r3
 8009654:	3714      	adds	r7, #20
 8009656:	46bd      	mov	sp, r7
 8009658:	f85d 7b04 	ldr.w	r7, [sp], #4
 800965c:	4770      	bx	lr
 800965e:	bf00      	nop
 8009660:	40010000 	.word	0x40010000
 8009664:	40000400 	.word	0x40000400
 8009668:	40000800 	.word	0x40000800
 800966c:	40000c00 	.word	0x40000c00
 8009670:	40014000 	.word	0x40014000

08009674 <HAL_TIM_Base_Start_IT>:
 8009674:	b480      	push	{r7}
 8009676:	b085      	sub	sp, #20
 8009678:	af00      	add	r7, sp, #0
 800967a:	6078      	str	r0, [r7, #4]
 800967c:	687b      	ldr	r3, [r7, #4]
 800967e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009682:	b2db      	uxtb	r3, r3
 8009684:	2b01      	cmp	r3, #1
 8009686:	d001      	beq.n	800968c <HAL_TIM_Base_Start_IT+0x18>
 8009688:	2301      	movs	r3, #1
 800968a:	e044      	b.n	8009716 <HAL_TIM_Base_Start_IT+0xa2>
 800968c:	687b      	ldr	r3, [r7, #4]
 800968e:	2202      	movs	r2, #2
 8009690:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009694:	687b      	ldr	r3, [r7, #4]
 8009696:	681b      	ldr	r3, [r3, #0]
 8009698:	68da      	ldr	r2, [r3, #12]
 800969a:	687b      	ldr	r3, [r7, #4]
 800969c:	681b      	ldr	r3, [r3, #0]
 800969e:	f042 0201 	orr.w	r2, r2, #1
 80096a2:	60da      	str	r2, [r3, #12]
 80096a4:	687b      	ldr	r3, [r7, #4]
 80096a6:	681b      	ldr	r3, [r3, #0]
 80096a8:	4a1e      	ldr	r2, [pc, #120]	; (8009724 <HAL_TIM_Base_Start_IT+0xb0>)
 80096aa:	4293      	cmp	r3, r2
 80096ac:	d018      	beq.n	80096e0 <HAL_TIM_Base_Start_IT+0x6c>
 80096ae:	687b      	ldr	r3, [r7, #4]
 80096b0:	681b      	ldr	r3, [r3, #0]
 80096b2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80096b6:	d013      	beq.n	80096e0 <HAL_TIM_Base_Start_IT+0x6c>
 80096b8:	687b      	ldr	r3, [r7, #4]
 80096ba:	681b      	ldr	r3, [r3, #0]
 80096bc:	4a1a      	ldr	r2, [pc, #104]	; (8009728 <HAL_TIM_Base_Start_IT+0xb4>)
 80096be:	4293      	cmp	r3, r2
 80096c0:	d00e      	beq.n	80096e0 <HAL_TIM_Base_Start_IT+0x6c>
 80096c2:	687b      	ldr	r3, [r7, #4]
 80096c4:	681b      	ldr	r3, [r3, #0]
 80096c6:	4a19      	ldr	r2, [pc, #100]	; (800972c <HAL_TIM_Base_Start_IT+0xb8>)
 80096c8:	4293      	cmp	r3, r2
 80096ca:	d009      	beq.n	80096e0 <HAL_TIM_Base_Start_IT+0x6c>
 80096cc:	687b      	ldr	r3, [r7, #4]
 80096ce:	681b      	ldr	r3, [r3, #0]
 80096d0:	4a17      	ldr	r2, [pc, #92]	; (8009730 <HAL_TIM_Base_Start_IT+0xbc>)
 80096d2:	4293      	cmp	r3, r2
 80096d4:	d004      	beq.n	80096e0 <HAL_TIM_Base_Start_IT+0x6c>
 80096d6:	687b      	ldr	r3, [r7, #4]
 80096d8:	681b      	ldr	r3, [r3, #0]
 80096da:	4a16      	ldr	r2, [pc, #88]	; (8009734 <HAL_TIM_Base_Start_IT+0xc0>)
 80096dc:	4293      	cmp	r3, r2
 80096de:	d111      	bne.n	8009704 <HAL_TIM_Base_Start_IT+0x90>
 80096e0:	687b      	ldr	r3, [r7, #4]
 80096e2:	681b      	ldr	r3, [r3, #0]
 80096e4:	689b      	ldr	r3, [r3, #8]
 80096e6:	f003 0307 	and.w	r3, r3, #7
 80096ea:	60fb      	str	r3, [r7, #12]
 80096ec:	68fb      	ldr	r3, [r7, #12]
 80096ee:	2b06      	cmp	r3, #6
 80096f0:	d010      	beq.n	8009714 <HAL_TIM_Base_Start_IT+0xa0>
 80096f2:	687b      	ldr	r3, [r7, #4]
 80096f4:	681b      	ldr	r3, [r3, #0]
 80096f6:	681a      	ldr	r2, [r3, #0]
 80096f8:	687b      	ldr	r3, [r7, #4]
 80096fa:	681b      	ldr	r3, [r3, #0]
 80096fc:	f042 0201 	orr.w	r2, r2, #1
 8009700:	601a      	str	r2, [r3, #0]
 8009702:	e007      	b.n	8009714 <HAL_TIM_Base_Start_IT+0xa0>
 8009704:	687b      	ldr	r3, [r7, #4]
 8009706:	681b      	ldr	r3, [r3, #0]
 8009708:	681a      	ldr	r2, [r3, #0]
 800970a:	687b      	ldr	r3, [r7, #4]
 800970c:	681b      	ldr	r3, [r3, #0]
 800970e:	f042 0201 	orr.w	r2, r2, #1
 8009712:	601a      	str	r2, [r3, #0]
 8009714:	2300      	movs	r3, #0
 8009716:	4618      	mov	r0, r3
 8009718:	3714      	adds	r7, #20
 800971a:	46bd      	mov	sp, r7
 800971c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009720:	4770      	bx	lr
 8009722:	bf00      	nop
 8009724:	40010000 	.word	0x40010000
 8009728:	40000400 	.word	0x40000400
 800972c:	40000800 	.word	0x40000800
 8009730:	40000c00 	.word	0x40000c00
 8009734:	40014000 	.word	0x40014000

08009738 <HAL_TIM_PWM_Init>:
 8009738:	b580      	push	{r7, lr}
 800973a:	b082      	sub	sp, #8
 800973c:	af00      	add	r7, sp, #0
 800973e:	6078      	str	r0, [r7, #4]
 8009740:	687b      	ldr	r3, [r7, #4]
 8009742:	2b00      	cmp	r3, #0
 8009744:	d101      	bne.n	800974a <HAL_TIM_PWM_Init+0x12>
 8009746:	2301      	movs	r3, #1
 8009748:	e041      	b.n	80097ce <HAL_TIM_PWM_Init+0x96>
 800974a:	687b      	ldr	r3, [r7, #4]
 800974c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009750:	b2db      	uxtb	r3, r3
 8009752:	2b00      	cmp	r3, #0
 8009754:	d106      	bne.n	8009764 <HAL_TIM_PWM_Init+0x2c>
 8009756:	687b      	ldr	r3, [r7, #4]
 8009758:	2200      	movs	r2, #0
 800975a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800975e:	6878      	ldr	r0, [r7, #4]
 8009760:	f000 f839 	bl	80097d6 <HAL_TIM_PWM_MspInit>
 8009764:	687b      	ldr	r3, [r7, #4]
 8009766:	2202      	movs	r2, #2
 8009768:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800976c:	687b      	ldr	r3, [r7, #4]
 800976e:	681a      	ldr	r2, [r3, #0]
 8009770:	687b      	ldr	r3, [r7, #4]
 8009772:	3304      	adds	r3, #4
 8009774:	4619      	mov	r1, r3
 8009776:	4610      	mov	r0, r2
 8009778:	f000 fba2 	bl	8009ec0 <TIM_Base_SetConfig>
 800977c:	687b      	ldr	r3, [r7, #4]
 800977e:	2201      	movs	r2, #1
 8009780:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8009784:	687b      	ldr	r3, [r7, #4]
 8009786:	2201      	movs	r2, #1
 8009788:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800978c:	687b      	ldr	r3, [r7, #4]
 800978e:	2201      	movs	r2, #1
 8009790:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8009794:	687b      	ldr	r3, [r7, #4]
 8009796:	2201      	movs	r2, #1
 8009798:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800979c:	687b      	ldr	r3, [r7, #4]
 800979e:	2201      	movs	r2, #1
 80097a0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80097a4:	687b      	ldr	r3, [r7, #4]
 80097a6:	2201      	movs	r2, #1
 80097a8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80097ac:	687b      	ldr	r3, [r7, #4]
 80097ae:	2201      	movs	r2, #1
 80097b0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80097b4:	687b      	ldr	r3, [r7, #4]
 80097b6:	2201      	movs	r2, #1
 80097b8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80097bc:	687b      	ldr	r3, [r7, #4]
 80097be:	2201      	movs	r2, #1
 80097c0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80097c4:	687b      	ldr	r3, [r7, #4]
 80097c6:	2201      	movs	r2, #1
 80097c8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80097cc:	2300      	movs	r3, #0
 80097ce:	4618      	mov	r0, r3
 80097d0:	3708      	adds	r7, #8
 80097d2:	46bd      	mov	sp, r7
 80097d4:	bd80      	pop	{r7, pc}

080097d6 <HAL_TIM_PWM_MspInit>:
 80097d6:	b480      	push	{r7}
 80097d8:	b083      	sub	sp, #12
 80097da:	af00      	add	r7, sp, #0
 80097dc:	6078      	str	r0, [r7, #4]
 80097de:	bf00      	nop
 80097e0:	370c      	adds	r7, #12
 80097e2:	46bd      	mov	sp, r7
 80097e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097e8:	4770      	bx	lr
	...

080097ec <HAL_TIM_PWM_Start>:
 80097ec:	b580      	push	{r7, lr}
 80097ee:	b084      	sub	sp, #16
 80097f0:	af00      	add	r7, sp, #0
 80097f2:	6078      	str	r0, [r7, #4]
 80097f4:	6039      	str	r1, [r7, #0]
 80097f6:	683b      	ldr	r3, [r7, #0]
 80097f8:	2b00      	cmp	r3, #0
 80097fa:	d109      	bne.n	8009810 <HAL_TIM_PWM_Start+0x24>
 80097fc:	687b      	ldr	r3, [r7, #4]
 80097fe:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8009802:	b2db      	uxtb	r3, r3
 8009804:	2b01      	cmp	r3, #1
 8009806:	bf14      	ite	ne
 8009808:	2301      	movne	r3, #1
 800980a:	2300      	moveq	r3, #0
 800980c:	b2db      	uxtb	r3, r3
 800980e:	e022      	b.n	8009856 <HAL_TIM_PWM_Start+0x6a>
 8009810:	683b      	ldr	r3, [r7, #0]
 8009812:	2b04      	cmp	r3, #4
 8009814:	d109      	bne.n	800982a <HAL_TIM_PWM_Start+0x3e>
 8009816:	687b      	ldr	r3, [r7, #4]
 8009818:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800981c:	b2db      	uxtb	r3, r3
 800981e:	2b01      	cmp	r3, #1
 8009820:	bf14      	ite	ne
 8009822:	2301      	movne	r3, #1
 8009824:	2300      	moveq	r3, #0
 8009826:	b2db      	uxtb	r3, r3
 8009828:	e015      	b.n	8009856 <HAL_TIM_PWM_Start+0x6a>
 800982a:	683b      	ldr	r3, [r7, #0]
 800982c:	2b08      	cmp	r3, #8
 800982e:	d109      	bne.n	8009844 <HAL_TIM_PWM_Start+0x58>
 8009830:	687b      	ldr	r3, [r7, #4]
 8009832:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8009836:	b2db      	uxtb	r3, r3
 8009838:	2b01      	cmp	r3, #1
 800983a:	bf14      	ite	ne
 800983c:	2301      	movne	r3, #1
 800983e:	2300      	moveq	r3, #0
 8009840:	b2db      	uxtb	r3, r3
 8009842:	e008      	b.n	8009856 <HAL_TIM_PWM_Start+0x6a>
 8009844:	687b      	ldr	r3, [r7, #4]
 8009846:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800984a:	b2db      	uxtb	r3, r3
 800984c:	2b01      	cmp	r3, #1
 800984e:	bf14      	ite	ne
 8009850:	2301      	movne	r3, #1
 8009852:	2300      	moveq	r3, #0
 8009854:	b2db      	uxtb	r3, r3
 8009856:	2b00      	cmp	r3, #0
 8009858:	d001      	beq.n	800985e <HAL_TIM_PWM_Start+0x72>
 800985a:	2301      	movs	r3, #1
 800985c:	e068      	b.n	8009930 <HAL_TIM_PWM_Start+0x144>
 800985e:	683b      	ldr	r3, [r7, #0]
 8009860:	2b00      	cmp	r3, #0
 8009862:	d104      	bne.n	800986e <HAL_TIM_PWM_Start+0x82>
 8009864:	687b      	ldr	r3, [r7, #4]
 8009866:	2202      	movs	r2, #2
 8009868:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800986c:	e013      	b.n	8009896 <HAL_TIM_PWM_Start+0xaa>
 800986e:	683b      	ldr	r3, [r7, #0]
 8009870:	2b04      	cmp	r3, #4
 8009872:	d104      	bne.n	800987e <HAL_TIM_PWM_Start+0x92>
 8009874:	687b      	ldr	r3, [r7, #4]
 8009876:	2202      	movs	r2, #2
 8009878:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800987c:	e00b      	b.n	8009896 <HAL_TIM_PWM_Start+0xaa>
 800987e:	683b      	ldr	r3, [r7, #0]
 8009880:	2b08      	cmp	r3, #8
 8009882:	d104      	bne.n	800988e <HAL_TIM_PWM_Start+0xa2>
 8009884:	687b      	ldr	r3, [r7, #4]
 8009886:	2202      	movs	r2, #2
 8009888:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800988c:	e003      	b.n	8009896 <HAL_TIM_PWM_Start+0xaa>
 800988e:	687b      	ldr	r3, [r7, #4]
 8009890:	2202      	movs	r2, #2
 8009892:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009896:	687b      	ldr	r3, [r7, #4]
 8009898:	681b      	ldr	r3, [r3, #0]
 800989a:	2201      	movs	r2, #1
 800989c:	6839      	ldr	r1, [r7, #0]
 800989e:	4618      	mov	r0, r3
 80098a0:	f000 fdb4 	bl	800a40c <TIM_CCxChannelCmd>
 80098a4:	687b      	ldr	r3, [r7, #4]
 80098a6:	681b      	ldr	r3, [r3, #0]
 80098a8:	4a23      	ldr	r2, [pc, #140]	; (8009938 <HAL_TIM_PWM_Start+0x14c>)
 80098aa:	4293      	cmp	r3, r2
 80098ac:	d107      	bne.n	80098be <HAL_TIM_PWM_Start+0xd2>
 80098ae:	687b      	ldr	r3, [r7, #4]
 80098b0:	681b      	ldr	r3, [r3, #0]
 80098b2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80098b4:	687b      	ldr	r3, [r7, #4]
 80098b6:	681b      	ldr	r3, [r3, #0]
 80098b8:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80098bc:	645a      	str	r2, [r3, #68]	; 0x44
 80098be:	687b      	ldr	r3, [r7, #4]
 80098c0:	681b      	ldr	r3, [r3, #0]
 80098c2:	4a1d      	ldr	r2, [pc, #116]	; (8009938 <HAL_TIM_PWM_Start+0x14c>)
 80098c4:	4293      	cmp	r3, r2
 80098c6:	d018      	beq.n	80098fa <HAL_TIM_PWM_Start+0x10e>
 80098c8:	687b      	ldr	r3, [r7, #4]
 80098ca:	681b      	ldr	r3, [r3, #0]
 80098cc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80098d0:	d013      	beq.n	80098fa <HAL_TIM_PWM_Start+0x10e>
 80098d2:	687b      	ldr	r3, [r7, #4]
 80098d4:	681b      	ldr	r3, [r3, #0]
 80098d6:	4a19      	ldr	r2, [pc, #100]	; (800993c <HAL_TIM_PWM_Start+0x150>)
 80098d8:	4293      	cmp	r3, r2
 80098da:	d00e      	beq.n	80098fa <HAL_TIM_PWM_Start+0x10e>
 80098dc:	687b      	ldr	r3, [r7, #4]
 80098de:	681b      	ldr	r3, [r3, #0]
 80098e0:	4a17      	ldr	r2, [pc, #92]	; (8009940 <HAL_TIM_PWM_Start+0x154>)
 80098e2:	4293      	cmp	r3, r2
 80098e4:	d009      	beq.n	80098fa <HAL_TIM_PWM_Start+0x10e>
 80098e6:	687b      	ldr	r3, [r7, #4]
 80098e8:	681b      	ldr	r3, [r3, #0]
 80098ea:	4a16      	ldr	r2, [pc, #88]	; (8009944 <HAL_TIM_PWM_Start+0x158>)
 80098ec:	4293      	cmp	r3, r2
 80098ee:	d004      	beq.n	80098fa <HAL_TIM_PWM_Start+0x10e>
 80098f0:	687b      	ldr	r3, [r7, #4]
 80098f2:	681b      	ldr	r3, [r3, #0]
 80098f4:	4a14      	ldr	r2, [pc, #80]	; (8009948 <HAL_TIM_PWM_Start+0x15c>)
 80098f6:	4293      	cmp	r3, r2
 80098f8:	d111      	bne.n	800991e <HAL_TIM_PWM_Start+0x132>
 80098fa:	687b      	ldr	r3, [r7, #4]
 80098fc:	681b      	ldr	r3, [r3, #0]
 80098fe:	689b      	ldr	r3, [r3, #8]
 8009900:	f003 0307 	and.w	r3, r3, #7
 8009904:	60fb      	str	r3, [r7, #12]
 8009906:	68fb      	ldr	r3, [r7, #12]
 8009908:	2b06      	cmp	r3, #6
 800990a:	d010      	beq.n	800992e <HAL_TIM_PWM_Start+0x142>
 800990c:	687b      	ldr	r3, [r7, #4]
 800990e:	681b      	ldr	r3, [r3, #0]
 8009910:	681a      	ldr	r2, [r3, #0]
 8009912:	687b      	ldr	r3, [r7, #4]
 8009914:	681b      	ldr	r3, [r3, #0]
 8009916:	f042 0201 	orr.w	r2, r2, #1
 800991a:	601a      	str	r2, [r3, #0]
 800991c:	e007      	b.n	800992e <HAL_TIM_PWM_Start+0x142>
 800991e:	687b      	ldr	r3, [r7, #4]
 8009920:	681b      	ldr	r3, [r3, #0]
 8009922:	681a      	ldr	r2, [r3, #0]
 8009924:	687b      	ldr	r3, [r7, #4]
 8009926:	681b      	ldr	r3, [r3, #0]
 8009928:	f042 0201 	orr.w	r2, r2, #1
 800992c:	601a      	str	r2, [r3, #0]
 800992e:	2300      	movs	r3, #0
 8009930:	4618      	mov	r0, r3
 8009932:	3710      	adds	r7, #16
 8009934:	46bd      	mov	sp, r7
 8009936:	bd80      	pop	{r7, pc}
 8009938:	40010000 	.word	0x40010000
 800993c:	40000400 	.word	0x40000400
 8009940:	40000800 	.word	0x40000800
 8009944:	40000c00 	.word	0x40000c00
 8009948:	40014000 	.word	0x40014000

0800994c <HAL_TIM_IRQHandler>:
 800994c:	b580      	push	{r7, lr}
 800994e:	b082      	sub	sp, #8
 8009950:	af00      	add	r7, sp, #0
 8009952:	6078      	str	r0, [r7, #4]
 8009954:	687b      	ldr	r3, [r7, #4]
 8009956:	681b      	ldr	r3, [r3, #0]
 8009958:	691b      	ldr	r3, [r3, #16]
 800995a:	f003 0302 	and.w	r3, r3, #2
 800995e:	2b02      	cmp	r3, #2
 8009960:	d122      	bne.n	80099a8 <HAL_TIM_IRQHandler+0x5c>
 8009962:	687b      	ldr	r3, [r7, #4]
 8009964:	681b      	ldr	r3, [r3, #0]
 8009966:	68db      	ldr	r3, [r3, #12]
 8009968:	f003 0302 	and.w	r3, r3, #2
 800996c:	2b02      	cmp	r3, #2
 800996e:	d11b      	bne.n	80099a8 <HAL_TIM_IRQHandler+0x5c>
 8009970:	687b      	ldr	r3, [r7, #4]
 8009972:	681b      	ldr	r3, [r3, #0]
 8009974:	f06f 0202 	mvn.w	r2, #2
 8009978:	611a      	str	r2, [r3, #16]
 800997a:	687b      	ldr	r3, [r7, #4]
 800997c:	2201      	movs	r2, #1
 800997e:	771a      	strb	r2, [r3, #28]
 8009980:	687b      	ldr	r3, [r7, #4]
 8009982:	681b      	ldr	r3, [r3, #0]
 8009984:	699b      	ldr	r3, [r3, #24]
 8009986:	f003 0303 	and.w	r3, r3, #3
 800998a:	2b00      	cmp	r3, #0
 800998c:	d003      	beq.n	8009996 <HAL_TIM_IRQHandler+0x4a>
 800998e:	6878      	ldr	r0, [r7, #4]
 8009990:	f000 fa77 	bl	8009e82 <HAL_TIM_IC_CaptureCallback>
 8009994:	e005      	b.n	80099a2 <HAL_TIM_IRQHandler+0x56>
 8009996:	6878      	ldr	r0, [r7, #4]
 8009998:	f000 fa69 	bl	8009e6e <HAL_TIM_OC_DelayElapsedCallback>
 800999c:	6878      	ldr	r0, [r7, #4]
 800999e:	f000 fa7a 	bl	8009e96 <HAL_TIM_PWM_PulseFinishedCallback>
 80099a2:	687b      	ldr	r3, [r7, #4]
 80099a4:	2200      	movs	r2, #0
 80099a6:	771a      	strb	r2, [r3, #28]
 80099a8:	687b      	ldr	r3, [r7, #4]
 80099aa:	681b      	ldr	r3, [r3, #0]
 80099ac:	691b      	ldr	r3, [r3, #16]
 80099ae:	f003 0304 	and.w	r3, r3, #4
 80099b2:	2b04      	cmp	r3, #4
 80099b4:	d122      	bne.n	80099fc <HAL_TIM_IRQHandler+0xb0>
 80099b6:	687b      	ldr	r3, [r7, #4]
 80099b8:	681b      	ldr	r3, [r3, #0]
 80099ba:	68db      	ldr	r3, [r3, #12]
 80099bc:	f003 0304 	and.w	r3, r3, #4
 80099c0:	2b04      	cmp	r3, #4
 80099c2:	d11b      	bne.n	80099fc <HAL_TIM_IRQHandler+0xb0>
 80099c4:	687b      	ldr	r3, [r7, #4]
 80099c6:	681b      	ldr	r3, [r3, #0]
 80099c8:	f06f 0204 	mvn.w	r2, #4
 80099cc:	611a      	str	r2, [r3, #16]
 80099ce:	687b      	ldr	r3, [r7, #4]
 80099d0:	2202      	movs	r2, #2
 80099d2:	771a      	strb	r2, [r3, #28]
 80099d4:	687b      	ldr	r3, [r7, #4]
 80099d6:	681b      	ldr	r3, [r3, #0]
 80099d8:	699b      	ldr	r3, [r3, #24]
 80099da:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80099de:	2b00      	cmp	r3, #0
 80099e0:	d003      	beq.n	80099ea <HAL_TIM_IRQHandler+0x9e>
 80099e2:	6878      	ldr	r0, [r7, #4]
 80099e4:	f000 fa4d 	bl	8009e82 <HAL_TIM_IC_CaptureCallback>
 80099e8:	e005      	b.n	80099f6 <HAL_TIM_IRQHandler+0xaa>
 80099ea:	6878      	ldr	r0, [r7, #4]
 80099ec:	f000 fa3f 	bl	8009e6e <HAL_TIM_OC_DelayElapsedCallback>
 80099f0:	6878      	ldr	r0, [r7, #4]
 80099f2:	f000 fa50 	bl	8009e96 <HAL_TIM_PWM_PulseFinishedCallback>
 80099f6:	687b      	ldr	r3, [r7, #4]
 80099f8:	2200      	movs	r2, #0
 80099fa:	771a      	strb	r2, [r3, #28]
 80099fc:	687b      	ldr	r3, [r7, #4]
 80099fe:	681b      	ldr	r3, [r3, #0]
 8009a00:	691b      	ldr	r3, [r3, #16]
 8009a02:	f003 0308 	and.w	r3, r3, #8
 8009a06:	2b08      	cmp	r3, #8
 8009a08:	d122      	bne.n	8009a50 <HAL_TIM_IRQHandler+0x104>
 8009a0a:	687b      	ldr	r3, [r7, #4]
 8009a0c:	681b      	ldr	r3, [r3, #0]
 8009a0e:	68db      	ldr	r3, [r3, #12]
 8009a10:	f003 0308 	and.w	r3, r3, #8
 8009a14:	2b08      	cmp	r3, #8
 8009a16:	d11b      	bne.n	8009a50 <HAL_TIM_IRQHandler+0x104>
 8009a18:	687b      	ldr	r3, [r7, #4]
 8009a1a:	681b      	ldr	r3, [r3, #0]
 8009a1c:	f06f 0208 	mvn.w	r2, #8
 8009a20:	611a      	str	r2, [r3, #16]
 8009a22:	687b      	ldr	r3, [r7, #4]
 8009a24:	2204      	movs	r2, #4
 8009a26:	771a      	strb	r2, [r3, #28]
 8009a28:	687b      	ldr	r3, [r7, #4]
 8009a2a:	681b      	ldr	r3, [r3, #0]
 8009a2c:	69db      	ldr	r3, [r3, #28]
 8009a2e:	f003 0303 	and.w	r3, r3, #3
 8009a32:	2b00      	cmp	r3, #0
 8009a34:	d003      	beq.n	8009a3e <HAL_TIM_IRQHandler+0xf2>
 8009a36:	6878      	ldr	r0, [r7, #4]
 8009a38:	f000 fa23 	bl	8009e82 <HAL_TIM_IC_CaptureCallback>
 8009a3c:	e005      	b.n	8009a4a <HAL_TIM_IRQHandler+0xfe>
 8009a3e:	6878      	ldr	r0, [r7, #4]
 8009a40:	f000 fa15 	bl	8009e6e <HAL_TIM_OC_DelayElapsedCallback>
 8009a44:	6878      	ldr	r0, [r7, #4]
 8009a46:	f000 fa26 	bl	8009e96 <HAL_TIM_PWM_PulseFinishedCallback>
 8009a4a:	687b      	ldr	r3, [r7, #4]
 8009a4c:	2200      	movs	r2, #0
 8009a4e:	771a      	strb	r2, [r3, #28]
 8009a50:	687b      	ldr	r3, [r7, #4]
 8009a52:	681b      	ldr	r3, [r3, #0]
 8009a54:	691b      	ldr	r3, [r3, #16]
 8009a56:	f003 0310 	and.w	r3, r3, #16
 8009a5a:	2b10      	cmp	r3, #16
 8009a5c:	d122      	bne.n	8009aa4 <HAL_TIM_IRQHandler+0x158>
 8009a5e:	687b      	ldr	r3, [r7, #4]
 8009a60:	681b      	ldr	r3, [r3, #0]
 8009a62:	68db      	ldr	r3, [r3, #12]
 8009a64:	f003 0310 	and.w	r3, r3, #16
 8009a68:	2b10      	cmp	r3, #16
 8009a6a:	d11b      	bne.n	8009aa4 <HAL_TIM_IRQHandler+0x158>
 8009a6c:	687b      	ldr	r3, [r7, #4]
 8009a6e:	681b      	ldr	r3, [r3, #0]
 8009a70:	f06f 0210 	mvn.w	r2, #16
 8009a74:	611a      	str	r2, [r3, #16]
 8009a76:	687b      	ldr	r3, [r7, #4]
 8009a78:	2208      	movs	r2, #8
 8009a7a:	771a      	strb	r2, [r3, #28]
 8009a7c:	687b      	ldr	r3, [r7, #4]
 8009a7e:	681b      	ldr	r3, [r3, #0]
 8009a80:	69db      	ldr	r3, [r3, #28]
 8009a82:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009a86:	2b00      	cmp	r3, #0
 8009a88:	d003      	beq.n	8009a92 <HAL_TIM_IRQHandler+0x146>
 8009a8a:	6878      	ldr	r0, [r7, #4]
 8009a8c:	f000 f9f9 	bl	8009e82 <HAL_TIM_IC_CaptureCallback>
 8009a90:	e005      	b.n	8009a9e <HAL_TIM_IRQHandler+0x152>
 8009a92:	6878      	ldr	r0, [r7, #4]
 8009a94:	f000 f9eb 	bl	8009e6e <HAL_TIM_OC_DelayElapsedCallback>
 8009a98:	6878      	ldr	r0, [r7, #4]
 8009a9a:	f000 f9fc 	bl	8009e96 <HAL_TIM_PWM_PulseFinishedCallback>
 8009a9e:	687b      	ldr	r3, [r7, #4]
 8009aa0:	2200      	movs	r2, #0
 8009aa2:	771a      	strb	r2, [r3, #28]
 8009aa4:	687b      	ldr	r3, [r7, #4]
 8009aa6:	681b      	ldr	r3, [r3, #0]
 8009aa8:	691b      	ldr	r3, [r3, #16]
 8009aaa:	f003 0301 	and.w	r3, r3, #1
 8009aae:	2b01      	cmp	r3, #1
 8009ab0:	d10e      	bne.n	8009ad0 <HAL_TIM_IRQHandler+0x184>
 8009ab2:	687b      	ldr	r3, [r7, #4]
 8009ab4:	681b      	ldr	r3, [r3, #0]
 8009ab6:	68db      	ldr	r3, [r3, #12]
 8009ab8:	f003 0301 	and.w	r3, r3, #1
 8009abc:	2b01      	cmp	r3, #1
 8009abe:	d107      	bne.n	8009ad0 <HAL_TIM_IRQHandler+0x184>
 8009ac0:	687b      	ldr	r3, [r7, #4]
 8009ac2:	681b      	ldr	r3, [r3, #0]
 8009ac4:	f06f 0201 	mvn.w	r2, #1
 8009ac8:	611a      	str	r2, [r3, #16]
 8009aca:	6878      	ldr	r0, [r7, #4]
 8009acc:	f7f9 fe66 	bl	800379c <HAL_TIM_PeriodElapsedCallback>
 8009ad0:	687b      	ldr	r3, [r7, #4]
 8009ad2:	681b      	ldr	r3, [r3, #0]
 8009ad4:	691b      	ldr	r3, [r3, #16]
 8009ad6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009ada:	2b80      	cmp	r3, #128	; 0x80
 8009adc:	d10e      	bne.n	8009afc <HAL_TIM_IRQHandler+0x1b0>
 8009ade:	687b      	ldr	r3, [r7, #4]
 8009ae0:	681b      	ldr	r3, [r3, #0]
 8009ae2:	68db      	ldr	r3, [r3, #12]
 8009ae4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009ae8:	2b80      	cmp	r3, #128	; 0x80
 8009aea:	d107      	bne.n	8009afc <HAL_TIM_IRQHandler+0x1b0>
 8009aec:	687b      	ldr	r3, [r7, #4]
 8009aee:	681b      	ldr	r3, [r3, #0]
 8009af0:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8009af4:	611a      	str	r2, [r3, #16]
 8009af6:	6878      	ldr	r0, [r7, #4]
 8009af8:	f000 fd26 	bl	800a548 <HAL_TIMEx_BreakCallback>
 8009afc:	687b      	ldr	r3, [r7, #4]
 8009afe:	681b      	ldr	r3, [r3, #0]
 8009b00:	691b      	ldr	r3, [r3, #16]
 8009b02:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009b06:	2b40      	cmp	r3, #64	; 0x40
 8009b08:	d10e      	bne.n	8009b28 <HAL_TIM_IRQHandler+0x1dc>
 8009b0a:	687b      	ldr	r3, [r7, #4]
 8009b0c:	681b      	ldr	r3, [r3, #0]
 8009b0e:	68db      	ldr	r3, [r3, #12]
 8009b10:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009b14:	2b40      	cmp	r3, #64	; 0x40
 8009b16:	d107      	bne.n	8009b28 <HAL_TIM_IRQHandler+0x1dc>
 8009b18:	687b      	ldr	r3, [r7, #4]
 8009b1a:	681b      	ldr	r3, [r3, #0]
 8009b1c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8009b20:	611a      	str	r2, [r3, #16]
 8009b22:	6878      	ldr	r0, [r7, #4]
 8009b24:	f000 f9c1 	bl	8009eaa <HAL_TIM_TriggerCallback>
 8009b28:	687b      	ldr	r3, [r7, #4]
 8009b2a:	681b      	ldr	r3, [r3, #0]
 8009b2c:	691b      	ldr	r3, [r3, #16]
 8009b2e:	f003 0320 	and.w	r3, r3, #32
 8009b32:	2b20      	cmp	r3, #32
 8009b34:	d10e      	bne.n	8009b54 <HAL_TIM_IRQHandler+0x208>
 8009b36:	687b      	ldr	r3, [r7, #4]
 8009b38:	681b      	ldr	r3, [r3, #0]
 8009b3a:	68db      	ldr	r3, [r3, #12]
 8009b3c:	f003 0320 	and.w	r3, r3, #32
 8009b40:	2b20      	cmp	r3, #32
 8009b42:	d107      	bne.n	8009b54 <HAL_TIM_IRQHandler+0x208>
 8009b44:	687b      	ldr	r3, [r7, #4]
 8009b46:	681b      	ldr	r3, [r3, #0]
 8009b48:	f06f 0220 	mvn.w	r2, #32
 8009b4c:	611a      	str	r2, [r3, #16]
 8009b4e:	6878      	ldr	r0, [r7, #4]
 8009b50:	f000 fcf0 	bl	800a534 <HAL_TIMEx_CommutCallback>
 8009b54:	bf00      	nop
 8009b56:	3708      	adds	r7, #8
 8009b58:	46bd      	mov	sp, r7
 8009b5a:	bd80      	pop	{r7, pc}

08009b5c <HAL_TIM_PWM_ConfigChannel>:
 8009b5c:	b580      	push	{r7, lr}
 8009b5e:	b086      	sub	sp, #24
 8009b60:	af00      	add	r7, sp, #0
 8009b62:	60f8      	str	r0, [r7, #12]
 8009b64:	60b9      	str	r1, [r7, #8]
 8009b66:	607a      	str	r2, [r7, #4]
 8009b68:	2300      	movs	r3, #0
 8009b6a:	75fb      	strb	r3, [r7, #23]
 8009b6c:	68fb      	ldr	r3, [r7, #12]
 8009b6e:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009b72:	2b01      	cmp	r3, #1
 8009b74:	d101      	bne.n	8009b7a <HAL_TIM_PWM_ConfigChannel+0x1e>
 8009b76:	2302      	movs	r3, #2
 8009b78:	e0ae      	b.n	8009cd8 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8009b7a:	68fb      	ldr	r3, [r7, #12]
 8009b7c:	2201      	movs	r2, #1
 8009b7e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009b82:	687b      	ldr	r3, [r7, #4]
 8009b84:	2b0c      	cmp	r3, #12
 8009b86:	f200 809f 	bhi.w	8009cc8 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8009b8a:	a201      	add	r2, pc, #4	; (adr r2, 8009b90 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8009b8c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009b90:	08009bc5 	.word	0x08009bc5
 8009b94:	08009cc9 	.word	0x08009cc9
 8009b98:	08009cc9 	.word	0x08009cc9
 8009b9c:	08009cc9 	.word	0x08009cc9
 8009ba0:	08009c05 	.word	0x08009c05
 8009ba4:	08009cc9 	.word	0x08009cc9
 8009ba8:	08009cc9 	.word	0x08009cc9
 8009bac:	08009cc9 	.word	0x08009cc9
 8009bb0:	08009c47 	.word	0x08009c47
 8009bb4:	08009cc9 	.word	0x08009cc9
 8009bb8:	08009cc9 	.word	0x08009cc9
 8009bbc:	08009cc9 	.word	0x08009cc9
 8009bc0:	08009c87 	.word	0x08009c87
 8009bc4:	68fb      	ldr	r3, [r7, #12]
 8009bc6:	681b      	ldr	r3, [r3, #0]
 8009bc8:	68b9      	ldr	r1, [r7, #8]
 8009bca:	4618      	mov	r0, r3
 8009bcc:	f000 f9f8 	bl	8009fc0 <TIM_OC1_SetConfig>
 8009bd0:	68fb      	ldr	r3, [r7, #12]
 8009bd2:	681b      	ldr	r3, [r3, #0]
 8009bd4:	699a      	ldr	r2, [r3, #24]
 8009bd6:	68fb      	ldr	r3, [r7, #12]
 8009bd8:	681b      	ldr	r3, [r3, #0]
 8009bda:	f042 0208 	orr.w	r2, r2, #8
 8009bde:	619a      	str	r2, [r3, #24]
 8009be0:	68fb      	ldr	r3, [r7, #12]
 8009be2:	681b      	ldr	r3, [r3, #0]
 8009be4:	699a      	ldr	r2, [r3, #24]
 8009be6:	68fb      	ldr	r3, [r7, #12]
 8009be8:	681b      	ldr	r3, [r3, #0]
 8009bea:	f022 0204 	bic.w	r2, r2, #4
 8009bee:	619a      	str	r2, [r3, #24]
 8009bf0:	68fb      	ldr	r3, [r7, #12]
 8009bf2:	681b      	ldr	r3, [r3, #0]
 8009bf4:	6999      	ldr	r1, [r3, #24]
 8009bf6:	68bb      	ldr	r3, [r7, #8]
 8009bf8:	691a      	ldr	r2, [r3, #16]
 8009bfa:	68fb      	ldr	r3, [r7, #12]
 8009bfc:	681b      	ldr	r3, [r3, #0]
 8009bfe:	430a      	orrs	r2, r1
 8009c00:	619a      	str	r2, [r3, #24]
 8009c02:	e064      	b.n	8009cce <HAL_TIM_PWM_ConfigChannel+0x172>
 8009c04:	68fb      	ldr	r3, [r7, #12]
 8009c06:	681b      	ldr	r3, [r3, #0]
 8009c08:	68b9      	ldr	r1, [r7, #8]
 8009c0a:	4618      	mov	r0, r3
 8009c0c:	f000 fa3e 	bl	800a08c <TIM_OC2_SetConfig>
 8009c10:	68fb      	ldr	r3, [r7, #12]
 8009c12:	681b      	ldr	r3, [r3, #0]
 8009c14:	699a      	ldr	r2, [r3, #24]
 8009c16:	68fb      	ldr	r3, [r7, #12]
 8009c18:	681b      	ldr	r3, [r3, #0]
 8009c1a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009c1e:	619a      	str	r2, [r3, #24]
 8009c20:	68fb      	ldr	r3, [r7, #12]
 8009c22:	681b      	ldr	r3, [r3, #0]
 8009c24:	699a      	ldr	r2, [r3, #24]
 8009c26:	68fb      	ldr	r3, [r7, #12]
 8009c28:	681b      	ldr	r3, [r3, #0]
 8009c2a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009c2e:	619a      	str	r2, [r3, #24]
 8009c30:	68fb      	ldr	r3, [r7, #12]
 8009c32:	681b      	ldr	r3, [r3, #0]
 8009c34:	6999      	ldr	r1, [r3, #24]
 8009c36:	68bb      	ldr	r3, [r7, #8]
 8009c38:	691b      	ldr	r3, [r3, #16]
 8009c3a:	021a      	lsls	r2, r3, #8
 8009c3c:	68fb      	ldr	r3, [r7, #12]
 8009c3e:	681b      	ldr	r3, [r3, #0]
 8009c40:	430a      	orrs	r2, r1
 8009c42:	619a      	str	r2, [r3, #24]
 8009c44:	e043      	b.n	8009cce <HAL_TIM_PWM_ConfigChannel+0x172>
 8009c46:	68fb      	ldr	r3, [r7, #12]
 8009c48:	681b      	ldr	r3, [r3, #0]
 8009c4a:	68b9      	ldr	r1, [r7, #8]
 8009c4c:	4618      	mov	r0, r3
 8009c4e:	f000 fa89 	bl	800a164 <TIM_OC3_SetConfig>
 8009c52:	68fb      	ldr	r3, [r7, #12]
 8009c54:	681b      	ldr	r3, [r3, #0]
 8009c56:	69da      	ldr	r2, [r3, #28]
 8009c58:	68fb      	ldr	r3, [r7, #12]
 8009c5a:	681b      	ldr	r3, [r3, #0]
 8009c5c:	f042 0208 	orr.w	r2, r2, #8
 8009c60:	61da      	str	r2, [r3, #28]
 8009c62:	68fb      	ldr	r3, [r7, #12]
 8009c64:	681b      	ldr	r3, [r3, #0]
 8009c66:	69da      	ldr	r2, [r3, #28]
 8009c68:	68fb      	ldr	r3, [r7, #12]
 8009c6a:	681b      	ldr	r3, [r3, #0]
 8009c6c:	f022 0204 	bic.w	r2, r2, #4
 8009c70:	61da      	str	r2, [r3, #28]
 8009c72:	68fb      	ldr	r3, [r7, #12]
 8009c74:	681b      	ldr	r3, [r3, #0]
 8009c76:	69d9      	ldr	r1, [r3, #28]
 8009c78:	68bb      	ldr	r3, [r7, #8]
 8009c7a:	691a      	ldr	r2, [r3, #16]
 8009c7c:	68fb      	ldr	r3, [r7, #12]
 8009c7e:	681b      	ldr	r3, [r3, #0]
 8009c80:	430a      	orrs	r2, r1
 8009c82:	61da      	str	r2, [r3, #28]
 8009c84:	e023      	b.n	8009cce <HAL_TIM_PWM_ConfigChannel+0x172>
 8009c86:	68fb      	ldr	r3, [r7, #12]
 8009c88:	681b      	ldr	r3, [r3, #0]
 8009c8a:	68b9      	ldr	r1, [r7, #8]
 8009c8c:	4618      	mov	r0, r3
 8009c8e:	f000 fad3 	bl	800a238 <TIM_OC4_SetConfig>
 8009c92:	68fb      	ldr	r3, [r7, #12]
 8009c94:	681b      	ldr	r3, [r3, #0]
 8009c96:	69da      	ldr	r2, [r3, #28]
 8009c98:	68fb      	ldr	r3, [r7, #12]
 8009c9a:	681b      	ldr	r3, [r3, #0]
 8009c9c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009ca0:	61da      	str	r2, [r3, #28]
 8009ca2:	68fb      	ldr	r3, [r7, #12]
 8009ca4:	681b      	ldr	r3, [r3, #0]
 8009ca6:	69da      	ldr	r2, [r3, #28]
 8009ca8:	68fb      	ldr	r3, [r7, #12]
 8009caa:	681b      	ldr	r3, [r3, #0]
 8009cac:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009cb0:	61da      	str	r2, [r3, #28]
 8009cb2:	68fb      	ldr	r3, [r7, #12]
 8009cb4:	681b      	ldr	r3, [r3, #0]
 8009cb6:	69d9      	ldr	r1, [r3, #28]
 8009cb8:	68bb      	ldr	r3, [r7, #8]
 8009cba:	691b      	ldr	r3, [r3, #16]
 8009cbc:	021a      	lsls	r2, r3, #8
 8009cbe:	68fb      	ldr	r3, [r7, #12]
 8009cc0:	681b      	ldr	r3, [r3, #0]
 8009cc2:	430a      	orrs	r2, r1
 8009cc4:	61da      	str	r2, [r3, #28]
 8009cc6:	e002      	b.n	8009cce <HAL_TIM_PWM_ConfigChannel+0x172>
 8009cc8:	2301      	movs	r3, #1
 8009cca:	75fb      	strb	r3, [r7, #23]
 8009ccc:	bf00      	nop
 8009cce:	68fb      	ldr	r3, [r7, #12]
 8009cd0:	2200      	movs	r2, #0
 8009cd2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009cd6:	7dfb      	ldrb	r3, [r7, #23]
 8009cd8:	4618      	mov	r0, r3
 8009cda:	3718      	adds	r7, #24
 8009cdc:	46bd      	mov	sp, r7
 8009cde:	bd80      	pop	{r7, pc}

08009ce0 <HAL_TIM_ConfigClockSource>:
 8009ce0:	b580      	push	{r7, lr}
 8009ce2:	b084      	sub	sp, #16
 8009ce4:	af00      	add	r7, sp, #0
 8009ce6:	6078      	str	r0, [r7, #4]
 8009ce8:	6039      	str	r1, [r7, #0]
 8009cea:	2300      	movs	r3, #0
 8009cec:	73fb      	strb	r3, [r7, #15]
 8009cee:	687b      	ldr	r3, [r7, #4]
 8009cf0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009cf4:	2b01      	cmp	r3, #1
 8009cf6:	d101      	bne.n	8009cfc <HAL_TIM_ConfigClockSource+0x1c>
 8009cf8:	2302      	movs	r3, #2
 8009cfa:	e0b4      	b.n	8009e66 <HAL_TIM_ConfigClockSource+0x186>
 8009cfc:	687b      	ldr	r3, [r7, #4]
 8009cfe:	2201      	movs	r2, #1
 8009d00:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009d04:	687b      	ldr	r3, [r7, #4]
 8009d06:	2202      	movs	r2, #2
 8009d08:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009d0c:	687b      	ldr	r3, [r7, #4]
 8009d0e:	681b      	ldr	r3, [r3, #0]
 8009d10:	689b      	ldr	r3, [r3, #8]
 8009d12:	60bb      	str	r3, [r7, #8]
 8009d14:	68bb      	ldr	r3, [r7, #8]
 8009d16:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8009d1a:	60bb      	str	r3, [r7, #8]
 8009d1c:	68bb      	ldr	r3, [r7, #8]
 8009d1e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8009d22:	60bb      	str	r3, [r7, #8]
 8009d24:	687b      	ldr	r3, [r7, #4]
 8009d26:	681b      	ldr	r3, [r3, #0]
 8009d28:	68ba      	ldr	r2, [r7, #8]
 8009d2a:	609a      	str	r2, [r3, #8]
 8009d2c:	683b      	ldr	r3, [r7, #0]
 8009d2e:	681b      	ldr	r3, [r3, #0]
 8009d30:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009d34:	d03e      	beq.n	8009db4 <HAL_TIM_ConfigClockSource+0xd4>
 8009d36:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009d3a:	f200 8087 	bhi.w	8009e4c <HAL_TIM_ConfigClockSource+0x16c>
 8009d3e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009d42:	f000 8086 	beq.w	8009e52 <HAL_TIM_ConfigClockSource+0x172>
 8009d46:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009d4a:	d87f      	bhi.n	8009e4c <HAL_TIM_ConfigClockSource+0x16c>
 8009d4c:	2b70      	cmp	r3, #112	; 0x70
 8009d4e:	d01a      	beq.n	8009d86 <HAL_TIM_ConfigClockSource+0xa6>
 8009d50:	2b70      	cmp	r3, #112	; 0x70
 8009d52:	d87b      	bhi.n	8009e4c <HAL_TIM_ConfigClockSource+0x16c>
 8009d54:	2b60      	cmp	r3, #96	; 0x60
 8009d56:	d050      	beq.n	8009dfa <HAL_TIM_ConfigClockSource+0x11a>
 8009d58:	2b60      	cmp	r3, #96	; 0x60
 8009d5a:	d877      	bhi.n	8009e4c <HAL_TIM_ConfigClockSource+0x16c>
 8009d5c:	2b50      	cmp	r3, #80	; 0x50
 8009d5e:	d03c      	beq.n	8009dda <HAL_TIM_ConfigClockSource+0xfa>
 8009d60:	2b50      	cmp	r3, #80	; 0x50
 8009d62:	d873      	bhi.n	8009e4c <HAL_TIM_ConfigClockSource+0x16c>
 8009d64:	2b40      	cmp	r3, #64	; 0x40
 8009d66:	d058      	beq.n	8009e1a <HAL_TIM_ConfigClockSource+0x13a>
 8009d68:	2b40      	cmp	r3, #64	; 0x40
 8009d6a:	d86f      	bhi.n	8009e4c <HAL_TIM_ConfigClockSource+0x16c>
 8009d6c:	2b30      	cmp	r3, #48	; 0x30
 8009d6e:	d064      	beq.n	8009e3a <HAL_TIM_ConfigClockSource+0x15a>
 8009d70:	2b30      	cmp	r3, #48	; 0x30
 8009d72:	d86b      	bhi.n	8009e4c <HAL_TIM_ConfigClockSource+0x16c>
 8009d74:	2b20      	cmp	r3, #32
 8009d76:	d060      	beq.n	8009e3a <HAL_TIM_ConfigClockSource+0x15a>
 8009d78:	2b20      	cmp	r3, #32
 8009d7a:	d867      	bhi.n	8009e4c <HAL_TIM_ConfigClockSource+0x16c>
 8009d7c:	2b00      	cmp	r3, #0
 8009d7e:	d05c      	beq.n	8009e3a <HAL_TIM_ConfigClockSource+0x15a>
 8009d80:	2b10      	cmp	r3, #16
 8009d82:	d05a      	beq.n	8009e3a <HAL_TIM_ConfigClockSource+0x15a>
 8009d84:	e062      	b.n	8009e4c <HAL_TIM_ConfigClockSource+0x16c>
 8009d86:	687b      	ldr	r3, [r7, #4]
 8009d88:	6818      	ldr	r0, [r3, #0]
 8009d8a:	683b      	ldr	r3, [r7, #0]
 8009d8c:	6899      	ldr	r1, [r3, #8]
 8009d8e:	683b      	ldr	r3, [r7, #0]
 8009d90:	685a      	ldr	r2, [r3, #4]
 8009d92:	683b      	ldr	r3, [r7, #0]
 8009d94:	68db      	ldr	r3, [r3, #12]
 8009d96:	f000 fb19 	bl	800a3cc <TIM_ETR_SetConfig>
 8009d9a:	687b      	ldr	r3, [r7, #4]
 8009d9c:	681b      	ldr	r3, [r3, #0]
 8009d9e:	689b      	ldr	r3, [r3, #8]
 8009da0:	60bb      	str	r3, [r7, #8]
 8009da2:	68bb      	ldr	r3, [r7, #8]
 8009da4:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8009da8:	60bb      	str	r3, [r7, #8]
 8009daa:	687b      	ldr	r3, [r7, #4]
 8009dac:	681b      	ldr	r3, [r3, #0]
 8009dae:	68ba      	ldr	r2, [r7, #8]
 8009db0:	609a      	str	r2, [r3, #8]
 8009db2:	e04f      	b.n	8009e54 <HAL_TIM_ConfigClockSource+0x174>
 8009db4:	687b      	ldr	r3, [r7, #4]
 8009db6:	6818      	ldr	r0, [r3, #0]
 8009db8:	683b      	ldr	r3, [r7, #0]
 8009dba:	6899      	ldr	r1, [r3, #8]
 8009dbc:	683b      	ldr	r3, [r7, #0]
 8009dbe:	685a      	ldr	r2, [r3, #4]
 8009dc0:	683b      	ldr	r3, [r7, #0]
 8009dc2:	68db      	ldr	r3, [r3, #12]
 8009dc4:	f000 fb02 	bl	800a3cc <TIM_ETR_SetConfig>
 8009dc8:	687b      	ldr	r3, [r7, #4]
 8009dca:	681b      	ldr	r3, [r3, #0]
 8009dcc:	689a      	ldr	r2, [r3, #8]
 8009dce:	687b      	ldr	r3, [r7, #4]
 8009dd0:	681b      	ldr	r3, [r3, #0]
 8009dd2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8009dd6:	609a      	str	r2, [r3, #8]
 8009dd8:	e03c      	b.n	8009e54 <HAL_TIM_ConfigClockSource+0x174>
 8009dda:	687b      	ldr	r3, [r7, #4]
 8009ddc:	6818      	ldr	r0, [r3, #0]
 8009dde:	683b      	ldr	r3, [r7, #0]
 8009de0:	6859      	ldr	r1, [r3, #4]
 8009de2:	683b      	ldr	r3, [r7, #0]
 8009de4:	68db      	ldr	r3, [r3, #12]
 8009de6:	461a      	mov	r2, r3
 8009de8:	f000 fa76 	bl	800a2d8 <TIM_TI1_ConfigInputStage>
 8009dec:	687b      	ldr	r3, [r7, #4]
 8009dee:	681b      	ldr	r3, [r3, #0]
 8009df0:	2150      	movs	r1, #80	; 0x50
 8009df2:	4618      	mov	r0, r3
 8009df4:	f000 facf 	bl	800a396 <TIM_ITRx_SetConfig>
 8009df8:	e02c      	b.n	8009e54 <HAL_TIM_ConfigClockSource+0x174>
 8009dfa:	687b      	ldr	r3, [r7, #4]
 8009dfc:	6818      	ldr	r0, [r3, #0]
 8009dfe:	683b      	ldr	r3, [r7, #0]
 8009e00:	6859      	ldr	r1, [r3, #4]
 8009e02:	683b      	ldr	r3, [r7, #0]
 8009e04:	68db      	ldr	r3, [r3, #12]
 8009e06:	461a      	mov	r2, r3
 8009e08:	f000 fa95 	bl	800a336 <TIM_TI2_ConfigInputStage>
 8009e0c:	687b      	ldr	r3, [r7, #4]
 8009e0e:	681b      	ldr	r3, [r3, #0]
 8009e10:	2160      	movs	r1, #96	; 0x60
 8009e12:	4618      	mov	r0, r3
 8009e14:	f000 fabf 	bl	800a396 <TIM_ITRx_SetConfig>
 8009e18:	e01c      	b.n	8009e54 <HAL_TIM_ConfigClockSource+0x174>
 8009e1a:	687b      	ldr	r3, [r7, #4]
 8009e1c:	6818      	ldr	r0, [r3, #0]
 8009e1e:	683b      	ldr	r3, [r7, #0]
 8009e20:	6859      	ldr	r1, [r3, #4]
 8009e22:	683b      	ldr	r3, [r7, #0]
 8009e24:	68db      	ldr	r3, [r3, #12]
 8009e26:	461a      	mov	r2, r3
 8009e28:	f000 fa56 	bl	800a2d8 <TIM_TI1_ConfigInputStage>
 8009e2c:	687b      	ldr	r3, [r7, #4]
 8009e2e:	681b      	ldr	r3, [r3, #0]
 8009e30:	2140      	movs	r1, #64	; 0x40
 8009e32:	4618      	mov	r0, r3
 8009e34:	f000 faaf 	bl	800a396 <TIM_ITRx_SetConfig>
 8009e38:	e00c      	b.n	8009e54 <HAL_TIM_ConfigClockSource+0x174>
 8009e3a:	687b      	ldr	r3, [r7, #4]
 8009e3c:	681a      	ldr	r2, [r3, #0]
 8009e3e:	683b      	ldr	r3, [r7, #0]
 8009e40:	681b      	ldr	r3, [r3, #0]
 8009e42:	4619      	mov	r1, r3
 8009e44:	4610      	mov	r0, r2
 8009e46:	f000 faa6 	bl	800a396 <TIM_ITRx_SetConfig>
 8009e4a:	e003      	b.n	8009e54 <HAL_TIM_ConfigClockSource+0x174>
 8009e4c:	2301      	movs	r3, #1
 8009e4e:	73fb      	strb	r3, [r7, #15]
 8009e50:	e000      	b.n	8009e54 <HAL_TIM_ConfigClockSource+0x174>
 8009e52:	bf00      	nop
 8009e54:	687b      	ldr	r3, [r7, #4]
 8009e56:	2201      	movs	r2, #1
 8009e58:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009e5c:	687b      	ldr	r3, [r7, #4]
 8009e5e:	2200      	movs	r2, #0
 8009e60:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009e64:	7bfb      	ldrb	r3, [r7, #15]
 8009e66:	4618      	mov	r0, r3
 8009e68:	3710      	adds	r7, #16
 8009e6a:	46bd      	mov	sp, r7
 8009e6c:	bd80      	pop	{r7, pc}

08009e6e <HAL_TIM_OC_DelayElapsedCallback>:
 8009e6e:	b480      	push	{r7}
 8009e70:	b083      	sub	sp, #12
 8009e72:	af00      	add	r7, sp, #0
 8009e74:	6078      	str	r0, [r7, #4]
 8009e76:	bf00      	nop
 8009e78:	370c      	adds	r7, #12
 8009e7a:	46bd      	mov	sp, r7
 8009e7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e80:	4770      	bx	lr

08009e82 <HAL_TIM_IC_CaptureCallback>:
 8009e82:	b480      	push	{r7}
 8009e84:	b083      	sub	sp, #12
 8009e86:	af00      	add	r7, sp, #0
 8009e88:	6078      	str	r0, [r7, #4]
 8009e8a:	bf00      	nop
 8009e8c:	370c      	adds	r7, #12
 8009e8e:	46bd      	mov	sp, r7
 8009e90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e94:	4770      	bx	lr

08009e96 <HAL_TIM_PWM_PulseFinishedCallback>:
 8009e96:	b480      	push	{r7}
 8009e98:	b083      	sub	sp, #12
 8009e9a:	af00      	add	r7, sp, #0
 8009e9c:	6078      	str	r0, [r7, #4]
 8009e9e:	bf00      	nop
 8009ea0:	370c      	adds	r7, #12
 8009ea2:	46bd      	mov	sp, r7
 8009ea4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ea8:	4770      	bx	lr

08009eaa <HAL_TIM_TriggerCallback>:
 8009eaa:	b480      	push	{r7}
 8009eac:	b083      	sub	sp, #12
 8009eae:	af00      	add	r7, sp, #0
 8009eb0:	6078      	str	r0, [r7, #4]
 8009eb2:	bf00      	nop
 8009eb4:	370c      	adds	r7, #12
 8009eb6:	46bd      	mov	sp, r7
 8009eb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ebc:	4770      	bx	lr
	...

08009ec0 <TIM_Base_SetConfig>:
 8009ec0:	b480      	push	{r7}
 8009ec2:	b085      	sub	sp, #20
 8009ec4:	af00      	add	r7, sp, #0
 8009ec6:	6078      	str	r0, [r7, #4]
 8009ec8:	6039      	str	r1, [r7, #0]
 8009eca:	687b      	ldr	r3, [r7, #4]
 8009ecc:	681b      	ldr	r3, [r3, #0]
 8009ece:	60fb      	str	r3, [r7, #12]
 8009ed0:	687b      	ldr	r3, [r7, #4]
 8009ed2:	4a34      	ldr	r2, [pc, #208]	; (8009fa4 <TIM_Base_SetConfig+0xe4>)
 8009ed4:	4293      	cmp	r3, r2
 8009ed6:	d00f      	beq.n	8009ef8 <TIM_Base_SetConfig+0x38>
 8009ed8:	687b      	ldr	r3, [r7, #4]
 8009eda:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009ede:	d00b      	beq.n	8009ef8 <TIM_Base_SetConfig+0x38>
 8009ee0:	687b      	ldr	r3, [r7, #4]
 8009ee2:	4a31      	ldr	r2, [pc, #196]	; (8009fa8 <TIM_Base_SetConfig+0xe8>)
 8009ee4:	4293      	cmp	r3, r2
 8009ee6:	d007      	beq.n	8009ef8 <TIM_Base_SetConfig+0x38>
 8009ee8:	687b      	ldr	r3, [r7, #4]
 8009eea:	4a30      	ldr	r2, [pc, #192]	; (8009fac <TIM_Base_SetConfig+0xec>)
 8009eec:	4293      	cmp	r3, r2
 8009eee:	d003      	beq.n	8009ef8 <TIM_Base_SetConfig+0x38>
 8009ef0:	687b      	ldr	r3, [r7, #4]
 8009ef2:	4a2f      	ldr	r2, [pc, #188]	; (8009fb0 <TIM_Base_SetConfig+0xf0>)
 8009ef4:	4293      	cmp	r3, r2
 8009ef6:	d108      	bne.n	8009f0a <TIM_Base_SetConfig+0x4a>
 8009ef8:	68fb      	ldr	r3, [r7, #12]
 8009efa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009efe:	60fb      	str	r3, [r7, #12]
 8009f00:	683b      	ldr	r3, [r7, #0]
 8009f02:	685b      	ldr	r3, [r3, #4]
 8009f04:	68fa      	ldr	r2, [r7, #12]
 8009f06:	4313      	orrs	r3, r2
 8009f08:	60fb      	str	r3, [r7, #12]
 8009f0a:	687b      	ldr	r3, [r7, #4]
 8009f0c:	4a25      	ldr	r2, [pc, #148]	; (8009fa4 <TIM_Base_SetConfig+0xe4>)
 8009f0e:	4293      	cmp	r3, r2
 8009f10:	d01b      	beq.n	8009f4a <TIM_Base_SetConfig+0x8a>
 8009f12:	687b      	ldr	r3, [r7, #4]
 8009f14:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009f18:	d017      	beq.n	8009f4a <TIM_Base_SetConfig+0x8a>
 8009f1a:	687b      	ldr	r3, [r7, #4]
 8009f1c:	4a22      	ldr	r2, [pc, #136]	; (8009fa8 <TIM_Base_SetConfig+0xe8>)
 8009f1e:	4293      	cmp	r3, r2
 8009f20:	d013      	beq.n	8009f4a <TIM_Base_SetConfig+0x8a>
 8009f22:	687b      	ldr	r3, [r7, #4]
 8009f24:	4a21      	ldr	r2, [pc, #132]	; (8009fac <TIM_Base_SetConfig+0xec>)
 8009f26:	4293      	cmp	r3, r2
 8009f28:	d00f      	beq.n	8009f4a <TIM_Base_SetConfig+0x8a>
 8009f2a:	687b      	ldr	r3, [r7, #4]
 8009f2c:	4a20      	ldr	r2, [pc, #128]	; (8009fb0 <TIM_Base_SetConfig+0xf0>)
 8009f2e:	4293      	cmp	r3, r2
 8009f30:	d00b      	beq.n	8009f4a <TIM_Base_SetConfig+0x8a>
 8009f32:	687b      	ldr	r3, [r7, #4]
 8009f34:	4a1f      	ldr	r2, [pc, #124]	; (8009fb4 <TIM_Base_SetConfig+0xf4>)
 8009f36:	4293      	cmp	r3, r2
 8009f38:	d007      	beq.n	8009f4a <TIM_Base_SetConfig+0x8a>
 8009f3a:	687b      	ldr	r3, [r7, #4]
 8009f3c:	4a1e      	ldr	r2, [pc, #120]	; (8009fb8 <TIM_Base_SetConfig+0xf8>)
 8009f3e:	4293      	cmp	r3, r2
 8009f40:	d003      	beq.n	8009f4a <TIM_Base_SetConfig+0x8a>
 8009f42:	687b      	ldr	r3, [r7, #4]
 8009f44:	4a1d      	ldr	r2, [pc, #116]	; (8009fbc <TIM_Base_SetConfig+0xfc>)
 8009f46:	4293      	cmp	r3, r2
 8009f48:	d108      	bne.n	8009f5c <TIM_Base_SetConfig+0x9c>
 8009f4a:	68fb      	ldr	r3, [r7, #12]
 8009f4c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009f50:	60fb      	str	r3, [r7, #12]
 8009f52:	683b      	ldr	r3, [r7, #0]
 8009f54:	68db      	ldr	r3, [r3, #12]
 8009f56:	68fa      	ldr	r2, [r7, #12]
 8009f58:	4313      	orrs	r3, r2
 8009f5a:	60fb      	str	r3, [r7, #12]
 8009f5c:	68fb      	ldr	r3, [r7, #12]
 8009f5e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8009f62:	683b      	ldr	r3, [r7, #0]
 8009f64:	695b      	ldr	r3, [r3, #20]
 8009f66:	4313      	orrs	r3, r2
 8009f68:	60fb      	str	r3, [r7, #12]
 8009f6a:	687b      	ldr	r3, [r7, #4]
 8009f6c:	68fa      	ldr	r2, [r7, #12]
 8009f6e:	601a      	str	r2, [r3, #0]
 8009f70:	683b      	ldr	r3, [r7, #0]
 8009f72:	689a      	ldr	r2, [r3, #8]
 8009f74:	687b      	ldr	r3, [r7, #4]
 8009f76:	62da      	str	r2, [r3, #44]	; 0x2c
 8009f78:	683b      	ldr	r3, [r7, #0]
 8009f7a:	681a      	ldr	r2, [r3, #0]
 8009f7c:	687b      	ldr	r3, [r7, #4]
 8009f7e:	629a      	str	r2, [r3, #40]	; 0x28
 8009f80:	687b      	ldr	r3, [r7, #4]
 8009f82:	4a08      	ldr	r2, [pc, #32]	; (8009fa4 <TIM_Base_SetConfig+0xe4>)
 8009f84:	4293      	cmp	r3, r2
 8009f86:	d103      	bne.n	8009f90 <TIM_Base_SetConfig+0xd0>
 8009f88:	683b      	ldr	r3, [r7, #0]
 8009f8a:	691a      	ldr	r2, [r3, #16]
 8009f8c:	687b      	ldr	r3, [r7, #4]
 8009f8e:	631a      	str	r2, [r3, #48]	; 0x30
 8009f90:	687b      	ldr	r3, [r7, #4]
 8009f92:	2201      	movs	r2, #1
 8009f94:	615a      	str	r2, [r3, #20]
 8009f96:	bf00      	nop
 8009f98:	3714      	adds	r7, #20
 8009f9a:	46bd      	mov	sp, r7
 8009f9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fa0:	4770      	bx	lr
 8009fa2:	bf00      	nop
 8009fa4:	40010000 	.word	0x40010000
 8009fa8:	40000400 	.word	0x40000400
 8009fac:	40000800 	.word	0x40000800
 8009fb0:	40000c00 	.word	0x40000c00
 8009fb4:	40014000 	.word	0x40014000
 8009fb8:	40014400 	.word	0x40014400
 8009fbc:	40014800 	.word	0x40014800

08009fc0 <TIM_OC1_SetConfig>:
 8009fc0:	b480      	push	{r7}
 8009fc2:	b087      	sub	sp, #28
 8009fc4:	af00      	add	r7, sp, #0
 8009fc6:	6078      	str	r0, [r7, #4]
 8009fc8:	6039      	str	r1, [r7, #0]
 8009fca:	687b      	ldr	r3, [r7, #4]
 8009fcc:	6a1b      	ldr	r3, [r3, #32]
 8009fce:	f023 0201 	bic.w	r2, r3, #1
 8009fd2:	687b      	ldr	r3, [r7, #4]
 8009fd4:	621a      	str	r2, [r3, #32]
 8009fd6:	687b      	ldr	r3, [r7, #4]
 8009fd8:	6a1b      	ldr	r3, [r3, #32]
 8009fda:	617b      	str	r3, [r7, #20]
 8009fdc:	687b      	ldr	r3, [r7, #4]
 8009fde:	685b      	ldr	r3, [r3, #4]
 8009fe0:	613b      	str	r3, [r7, #16]
 8009fe2:	687b      	ldr	r3, [r7, #4]
 8009fe4:	699b      	ldr	r3, [r3, #24]
 8009fe6:	60fb      	str	r3, [r7, #12]
 8009fe8:	68fb      	ldr	r3, [r7, #12]
 8009fea:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009fee:	60fb      	str	r3, [r7, #12]
 8009ff0:	68fb      	ldr	r3, [r7, #12]
 8009ff2:	f023 0303 	bic.w	r3, r3, #3
 8009ff6:	60fb      	str	r3, [r7, #12]
 8009ff8:	683b      	ldr	r3, [r7, #0]
 8009ffa:	681b      	ldr	r3, [r3, #0]
 8009ffc:	68fa      	ldr	r2, [r7, #12]
 8009ffe:	4313      	orrs	r3, r2
 800a000:	60fb      	str	r3, [r7, #12]
 800a002:	697b      	ldr	r3, [r7, #20]
 800a004:	f023 0302 	bic.w	r3, r3, #2
 800a008:	617b      	str	r3, [r7, #20]
 800a00a:	683b      	ldr	r3, [r7, #0]
 800a00c:	689b      	ldr	r3, [r3, #8]
 800a00e:	697a      	ldr	r2, [r7, #20]
 800a010:	4313      	orrs	r3, r2
 800a012:	617b      	str	r3, [r7, #20]
 800a014:	687b      	ldr	r3, [r7, #4]
 800a016:	4a1c      	ldr	r2, [pc, #112]	; (800a088 <TIM_OC1_SetConfig+0xc8>)
 800a018:	4293      	cmp	r3, r2
 800a01a:	d10c      	bne.n	800a036 <TIM_OC1_SetConfig+0x76>
 800a01c:	697b      	ldr	r3, [r7, #20]
 800a01e:	f023 0308 	bic.w	r3, r3, #8
 800a022:	617b      	str	r3, [r7, #20]
 800a024:	683b      	ldr	r3, [r7, #0]
 800a026:	68db      	ldr	r3, [r3, #12]
 800a028:	697a      	ldr	r2, [r7, #20]
 800a02a:	4313      	orrs	r3, r2
 800a02c:	617b      	str	r3, [r7, #20]
 800a02e:	697b      	ldr	r3, [r7, #20]
 800a030:	f023 0304 	bic.w	r3, r3, #4
 800a034:	617b      	str	r3, [r7, #20]
 800a036:	687b      	ldr	r3, [r7, #4]
 800a038:	4a13      	ldr	r2, [pc, #76]	; (800a088 <TIM_OC1_SetConfig+0xc8>)
 800a03a:	4293      	cmp	r3, r2
 800a03c:	d111      	bne.n	800a062 <TIM_OC1_SetConfig+0xa2>
 800a03e:	693b      	ldr	r3, [r7, #16]
 800a040:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800a044:	613b      	str	r3, [r7, #16]
 800a046:	693b      	ldr	r3, [r7, #16]
 800a048:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800a04c:	613b      	str	r3, [r7, #16]
 800a04e:	683b      	ldr	r3, [r7, #0]
 800a050:	695b      	ldr	r3, [r3, #20]
 800a052:	693a      	ldr	r2, [r7, #16]
 800a054:	4313      	orrs	r3, r2
 800a056:	613b      	str	r3, [r7, #16]
 800a058:	683b      	ldr	r3, [r7, #0]
 800a05a:	699b      	ldr	r3, [r3, #24]
 800a05c:	693a      	ldr	r2, [r7, #16]
 800a05e:	4313      	orrs	r3, r2
 800a060:	613b      	str	r3, [r7, #16]
 800a062:	687b      	ldr	r3, [r7, #4]
 800a064:	693a      	ldr	r2, [r7, #16]
 800a066:	605a      	str	r2, [r3, #4]
 800a068:	687b      	ldr	r3, [r7, #4]
 800a06a:	68fa      	ldr	r2, [r7, #12]
 800a06c:	619a      	str	r2, [r3, #24]
 800a06e:	683b      	ldr	r3, [r7, #0]
 800a070:	685a      	ldr	r2, [r3, #4]
 800a072:	687b      	ldr	r3, [r7, #4]
 800a074:	635a      	str	r2, [r3, #52]	; 0x34
 800a076:	687b      	ldr	r3, [r7, #4]
 800a078:	697a      	ldr	r2, [r7, #20]
 800a07a:	621a      	str	r2, [r3, #32]
 800a07c:	bf00      	nop
 800a07e:	371c      	adds	r7, #28
 800a080:	46bd      	mov	sp, r7
 800a082:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a086:	4770      	bx	lr
 800a088:	40010000 	.word	0x40010000

0800a08c <TIM_OC2_SetConfig>:
 800a08c:	b480      	push	{r7}
 800a08e:	b087      	sub	sp, #28
 800a090:	af00      	add	r7, sp, #0
 800a092:	6078      	str	r0, [r7, #4]
 800a094:	6039      	str	r1, [r7, #0]
 800a096:	687b      	ldr	r3, [r7, #4]
 800a098:	6a1b      	ldr	r3, [r3, #32]
 800a09a:	f023 0210 	bic.w	r2, r3, #16
 800a09e:	687b      	ldr	r3, [r7, #4]
 800a0a0:	621a      	str	r2, [r3, #32]
 800a0a2:	687b      	ldr	r3, [r7, #4]
 800a0a4:	6a1b      	ldr	r3, [r3, #32]
 800a0a6:	617b      	str	r3, [r7, #20]
 800a0a8:	687b      	ldr	r3, [r7, #4]
 800a0aa:	685b      	ldr	r3, [r3, #4]
 800a0ac:	613b      	str	r3, [r7, #16]
 800a0ae:	687b      	ldr	r3, [r7, #4]
 800a0b0:	699b      	ldr	r3, [r3, #24]
 800a0b2:	60fb      	str	r3, [r7, #12]
 800a0b4:	68fb      	ldr	r3, [r7, #12]
 800a0b6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800a0ba:	60fb      	str	r3, [r7, #12]
 800a0bc:	68fb      	ldr	r3, [r7, #12]
 800a0be:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800a0c2:	60fb      	str	r3, [r7, #12]
 800a0c4:	683b      	ldr	r3, [r7, #0]
 800a0c6:	681b      	ldr	r3, [r3, #0]
 800a0c8:	021b      	lsls	r3, r3, #8
 800a0ca:	68fa      	ldr	r2, [r7, #12]
 800a0cc:	4313      	orrs	r3, r2
 800a0ce:	60fb      	str	r3, [r7, #12]
 800a0d0:	697b      	ldr	r3, [r7, #20]
 800a0d2:	f023 0320 	bic.w	r3, r3, #32
 800a0d6:	617b      	str	r3, [r7, #20]
 800a0d8:	683b      	ldr	r3, [r7, #0]
 800a0da:	689b      	ldr	r3, [r3, #8]
 800a0dc:	011b      	lsls	r3, r3, #4
 800a0de:	697a      	ldr	r2, [r7, #20]
 800a0e0:	4313      	orrs	r3, r2
 800a0e2:	617b      	str	r3, [r7, #20]
 800a0e4:	687b      	ldr	r3, [r7, #4]
 800a0e6:	4a1e      	ldr	r2, [pc, #120]	; (800a160 <TIM_OC2_SetConfig+0xd4>)
 800a0e8:	4293      	cmp	r3, r2
 800a0ea:	d10d      	bne.n	800a108 <TIM_OC2_SetConfig+0x7c>
 800a0ec:	697b      	ldr	r3, [r7, #20]
 800a0ee:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800a0f2:	617b      	str	r3, [r7, #20]
 800a0f4:	683b      	ldr	r3, [r7, #0]
 800a0f6:	68db      	ldr	r3, [r3, #12]
 800a0f8:	011b      	lsls	r3, r3, #4
 800a0fa:	697a      	ldr	r2, [r7, #20]
 800a0fc:	4313      	orrs	r3, r2
 800a0fe:	617b      	str	r3, [r7, #20]
 800a100:	697b      	ldr	r3, [r7, #20]
 800a102:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a106:	617b      	str	r3, [r7, #20]
 800a108:	687b      	ldr	r3, [r7, #4]
 800a10a:	4a15      	ldr	r2, [pc, #84]	; (800a160 <TIM_OC2_SetConfig+0xd4>)
 800a10c:	4293      	cmp	r3, r2
 800a10e:	d113      	bne.n	800a138 <TIM_OC2_SetConfig+0xac>
 800a110:	693b      	ldr	r3, [r7, #16]
 800a112:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a116:	613b      	str	r3, [r7, #16]
 800a118:	693b      	ldr	r3, [r7, #16]
 800a11a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800a11e:	613b      	str	r3, [r7, #16]
 800a120:	683b      	ldr	r3, [r7, #0]
 800a122:	695b      	ldr	r3, [r3, #20]
 800a124:	009b      	lsls	r3, r3, #2
 800a126:	693a      	ldr	r2, [r7, #16]
 800a128:	4313      	orrs	r3, r2
 800a12a:	613b      	str	r3, [r7, #16]
 800a12c:	683b      	ldr	r3, [r7, #0]
 800a12e:	699b      	ldr	r3, [r3, #24]
 800a130:	009b      	lsls	r3, r3, #2
 800a132:	693a      	ldr	r2, [r7, #16]
 800a134:	4313      	orrs	r3, r2
 800a136:	613b      	str	r3, [r7, #16]
 800a138:	687b      	ldr	r3, [r7, #4]
 800a13a:	693a      	ldr	r2, [r7, #16]
 800a13c:	605a      	str	r2, [r3, #4]
 800a13e:	687b      	ldr	r3, [r7, #4]
 800a140:	68fa      	ldr	r2, [r7, #12]
 800a142:	619a      	str	r2, [r3, #24]
 800a144:	683b      	ldr	r3, [r7, #0]
 800a146:	685a      	ldr	r2, [r3, #4]
 800a148:	687b      	ldr	r3, [r7, #4]
 800a14a:	639a      	str	r2, [r3, #56]	; 0x38
 800a14c:	687b      	ldr	r3, [r7, #4]
 800a14e:	697a      	ldr	r2, [r7, #20]
 800a150:	621a      	str	r2, [r3, #32]
 800a152:	bf00      	nop
 800a154:	371c      	adds	r7, #28
 800a156:	46bd      	mov	sp, r7
 800a158:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a15c:	4770      	bx	lr
 800a15e:	bf00      	nop
 800a160:	40010000 	.word	0x40010000

0800a164 <TIM_OC3_SetConfig>:
 800a164:	b480      	push	{r7}
 800a166:	b087      	sub	sp, #28
 800a168:	af00      	add	r7, sp, #0
 800a16a:	6078      	str	r0, [r7, #4]
 800a16c:	6039      	str	r1, [r7, #0]
 800a16e:	687b      	ldr	r3, [r7, #4]
 800a170:	6a1b      	ldr	r3, [r3, #32]
 800a172:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800a176:	687b      	ldr	r3, [r7, #4]
 800a178:	621a      	str	r2, [r3, #32]
 800a17a:	687b      	ldr	r3, [r7, #4]
 800a17c:	6a1b      	ldr	r3, [r3, #32]
 800a17e:	617b      	str	r3, [r7, #20]
 800a180:	687b      	ldr	r3, [r7, #4]
 800a182:	685b      	ldr	r3, [r3, #4]
 800a184:	613b      	str	r3, [r7, #16]
 800a186:	687b      	ldr	r3, [r7, #4]
 800a188:	69db      	ldr	r3, [r3, #28]
 800a18a:	60fb      	str	r3, [r7, #12]
 800a18c:	68fb      	ldr	r3, [r7, #12]
 800a18e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a192:	60fb      	str	r3, [r7, #12]
 800a194:	68fb      	ldr	r3, [r7, #12]
 800a196:	f023 0303 	bic.w	r3, r3, #3
 800a19a:	60fb      	str	r3, [r7, #12]
 800a19c:	683b      	ldr	r3, [r7, #0]
 800a19e:	681b      	ldr	r3, [r3, #0]
 800a1a0:	68fa      	ldr	r2, [r7, #12]
 800a1a2:	4313      	orrs	r3, r2
 800a1a4:	60fb      	str	r3, [r7, #12]
 800a1a6:	697b      	ldr	r3, [r7, #20]
 800a1a8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800a1ac:	617b      	str	r3, [r7, #20]
 800a1ae:	683b      	ldr	r3, [r7, #0]
 800a1b0:	689b      	ldr	r3, [r3, #8]
 800a1b2:	021b      	lsls	r3, r3, #8
 800a1b4:	697a      	ldr	r2, [r7, #20]
 800a1b6:	4313      	orrs	r3, r2
 800a1b8:	617b      	str	r3, [r7, #20]
 800a1ba:	687b      	ldr	r3, [r7, #4]
 800a1bc:	4a1d      	ldr	r2, [pc, #116]	; (800a234 <TIM_OC3_SetConfig+0xd0>)
 800a1be:	4293      	cmp	r3, r2
 800a1c0:	d10d      	bne.n	800a1de <TIM_OC3_SetConfig+0x7a>
 800a1c2:	697b      	ldr	r3, [r7, #20]
 800a1c4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800a1c8:	617b      	str	r3, [r7, #20]
 800a1ca:	683b      	ldr	r3, [r7, #0]
 800a1cc:	68db      	ldr	r3, [r3, #12]
 800a1ce:	021b      	lsls	r3, r3, #8
 800a1d0:	697a      	ldr	r2, [r7, #20]
 800a1d2:	4313      	orrs	r3, r2
 800a1d4:	617b      	str	r3, [r7, #20]
 800a1d6:	697b      	ldr	r3, [r7, #20]
 800a1d8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a1dc:	617b      	str	r3, [r7, #20]
 800a1de:	687b      	ldr	r3, [r7, #4]
 800a1e0:	4a14      	ldr	r2, [pc, #80]	; (800a234 <TIM_OC3_SetConfig+0xd0>)
 800a1e2:	4293      	cmp	r3, r2
 800a1e4:	d113      	bne.n	800a20e <TIM_OC3_SetConfig+0xaa>
 800a1e6:	693b      	ldr	r3, [r7, #16]
 800a1e8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800a1ec:	613b      	str	r3, [r7, #16]
 800a1ee:	693b      	ldr	r3, [r7, #16]
 800a1f0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800a1f4:	613b      	str	r3, [r7, #16]
 800a1f6:	683b      	ldr	r3, [r7, #0]
 800a1f8:	695b      	ldr	r3, [r3, #20]
 800a1fa:	011b      	lsls	r3, r3, #4
 800a1fc:	693a      	ldr	r2, [r7, #16]
 800a1fe:	4313      	orrs	r3, r2
 800a200:	613b      	str	r3, [r7, #16]
 800a202:	683b      	ldr	r3, [r7, #0]
 800a204:	699b      	ldr	r3, [r3, #24]
 800a206:	011b      	lsls	r3, r3, #4
 800a208:	693a      	ldr	r2, [r7, #16]
 800a20a:	4313      	orrs	r3, r2
 800a20c:	613b      	str	r3, [r7, #16]
 800a20e:	687b      	ldr	r3, [r7, #4]
 800a210:	693a      	ldr	r2, [r7, #16]
 800a212:	605a      	str	r2, [r3, #4]
 800a214:	687b      	ldr	r3, [r7, #4]
 800a216:	68fa      	ldr	r2, [r7, #12]
 800a218:	61da      	str	r2, [r3, #28]
 800a21a:	683b      	ldr	r3, [r7, #0]
 800a21c:	685a      	ldr	r2, [r3, #4]
 800a21e:	687b      	ldr	r3, [r7, #4]
 800a220:	63da      	str	r2, [r3, #60]	; 0x3c
 800a222:	687b      	ldr	r3, [r7, #4]
 800a224:	697a      	ldr	r2, [r7, #20]
 800a226:	621a      	str	r2, [r3, #32]
 800a228:	bf00      	nop
 800a22a:	371c      	adds	r7, #28
 800a22c:	46bd      	mov	sp, r7
 800a22e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a232:	4770      	bx	lr
 800a234:	40010000 	.word	0x40010000

0800a238 <TIM_OC4_SetConfig>:
 800a238:	b480      	push	{r7}
 800a23a:	b087      	sub	sp, #28
 800a23c:	af00      	add	r7, sp, #0
 800a23e:	6078      	str	r0, [r7, #4]
 800a240:	6039      	str	r1, [r7, #0]
 800a242:	687b      	ldr	r3, [r7, #4]
 800a244:	6a1b      	ldr	r3, [r3, #32]
 800a246:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800a24a:	687b      	ldr	r3, [r7, #4]
 800a24c:	621a      	str	r2, [r3, #32]
 800a24e:	687b      	ldr	r3, [r7, #4]
 800a250:	6a1b      	ldr	r3, [r3, #32]
 800a252:	613b      	str	r3, [r7, #16]
 800a254:	687b      	ldr	r3, [r7, #4]
 800a256:	685b      	ldr	r3, [r3, #4]
 800a258:	617b      	str	r3, [r7, #20]
 800a25a:	687b      	ldr	r3, [r7, #4]
 800a25c:	69db      	ldr	r3, [r3, #28]
 800a25e:	60fb      	str	r3, [r7, #12]
 800a260:	68fb      	ldr	r3, [r7, #12]
 800a262:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800a266:	60fb      	str	r3, [r7, #12]
 800a268:	68fb      	ldr	r3, [r7, #12]
 800a26a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800a26e:	60fb      	str	r3, [r7, #12]
 800a270:	683b      	ldr	r3, [r7, #0]
 800a272:	681b      	ldr	r3, [r3, #0]
 800a274:	021b      	lsls	r3, r3, #8
 800a276:	68fa      	ldr	r2, [r7, #12]
 800a278:	4313      	orrs	r3, r2
 800a27a:	60fb      	str	r3, [r7, #12]
 800a27c:	693b      	ldr	r3, [r7, #16]
 800a27e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800a282:	613b      	str	r3, [r7, #16]
 800a284:	683b      	ldr	r3, [r7, #0]
 800a286:	689b      	ldr	r3, [r3, #8]
 800a288:	031b      	lsls	r3, r3, #12
 800a28a:	693a      	ldr	r2, [r7, #16]
 800a28c:	4313      	orrs	r3, r2
 800a28e:	613b      	str	r3, [r7, #16]
 800a290:	687b      	ldr	r3, [r7, #4]
 800a292:	4a10      	ldr	r2, [pc, #64]	; (800a2d4 <TIM_OC4_SetConfig+0x9c>)
 800a294:	4293      	cmp	r3, r2
 800a296:	d109      	bne.n	800a2ac <TIM_OC4_SetConfig+0x74>
 800a298:	697b      	ldr	r3, [r7, #20]
 800a29a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800a29e:	617b      	str	r3, [r7, #20]
 800a2a0:	683b      	ldr	r3, [r7, #0]
 800a2a2:	695b      	ldr	r3, [r3, #20]
 800a2a4:	019b      	lsls	r3, r3, #6
 800a2a6:	697a      	ldr	r2, [r7, #20]
 800a2a8:	4313      	orrs	r3, r2
 800a2aa:	617b      	str	r3, [r7, #20]
 800a2ac:	687b      	ldr	r3, [r7, #4]
 800a2ae:	697a      	ldr	r2, [r7, #20]
 800a2b0:	605a      	str	r2, [r3, #4]
 800a2b2:	687b      	ldr	r3, [r7, #4]
 800a2b4:	68fa      	ldr	r2, [r7, #12]
 800a2b6:	61da      	str	r2, [r3, #28]
 800a2b8:	683b      	ldr	r3, [r7, #0]
 800a2ba:	685a      	ldr	r2, [r3, #4]
 800a2bc:	687b      	ldr	r3, [r7, #4]
 800a2be:	641a      	str	r2, [r3, #64]	; 0x40
 800a2c0:	687b      	ldr	r3, [r7, #4]
 800a2c2:	693a      	ldr	r2, [r7, #16]
 800a2c4:	621a      	str	r2, [r3, #32]
 800a2c6:	bf00      	nop
 800a2c8:	371c      	adds	r7, #28
 800a2ca:	46bd      	mov	sp, r7
 800a2cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2d0:	4770      	bx	lr
 800a2d2:	bf00      	nop
 800a2d4:	40010000 	.word	0x40010000

0800a2d8 <TIM_TI1_ConfigInputStage>:
 800a2d8:	b480      	push	{r7}
 800a2da:	b087      	sub	sp, #28
 800a2dc:	af00      	add	r7, sp, #0
 800a2de:	60f8      	str	r0, [r7, #12]
 800a2e0:	60b9      	str	r1, [r7, #8]
 800a2e2:	607a      	str	r2, [r7, #4]
 800a2e4:	68fb      	ldr	r3, [r7, #12]
 800a2e6:	6a1b      	ldr	r3, [r3, #32]
 800a2e8:	617b      	str	r3, [r7, #20]
 800a2ea:	68fb      	ldr	r3, [r7, #12]
 800a2ec:	6a1b      	ldr	r3, [r3, #32]
 800a2ee:	f023 0201 	bic.w	r2, r3, #1
 800a2f2:	68fb      	ldr	r3, [r7, #12]
 800a2f4:	621a      	str	r2, [r3, #32]
 800a2f6:	68fb      	ldr	r3, [r7, #12]
 800a2f8:	699b      	ldr	r3, [r3, #24]
 800a2fa:	613b      	str	r3, [r7, #16]
 800a2fc:	693b      	ldr	r3, [r7, #16]
 800a2fe:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800a302:	613b      	str	r3, [r7, #16]
 800a304:	687b      	ldr	r3, [r7, #4]
 800a306:	011b      	lsls	r3, r3, #4
 800a308:	693a      	ldr	r2, [r7, #16]
 800a30a:	4313      	orrs	r3, r2
 800a30c:	613b      	str	r3, [r7, #16]
 800a30e:	697b      	ldr	r3, [r7, #20]
 800a310:	f023 030a 	bic.w	r3, r3, #10
 800a314:	617b      	str	r3, [r7, #20]
 800a316:	697a      	ldr	r2, [r7, #20]
 800a318:	68bb      	ldr	r3, [r7, #8]
 800a31a:	4313      	orrs	r3, r2
 800a31c:	617b      	str	r3, [r7, #20]
 800a31e:	68fb      	ldr	r3, [r7, #12]
 800a320:	693a      	ldr	r2, [r7, #16]
 800a322:	619a      	str	r2, [r3, #24]
 800a324:	68fb      	ldr	r3, [r7, #12]
 800a326:	697a      	ldr	r2, [r7, #20]
 800a328:	621a      	str	r2, [r3, #32]
 800a32a:	bf00      	nop
 800a32c:	371c      	adds	r7, #28
 800a32e:	46bd      	mov	sp, r7
 800a330:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a334:	4770      	bx	lr

0800a336 <TIM_TI2_ConfigInputStage>:
 800a336:	b480      	push	{r7}
 800a338:	b087      	sub	sp, #28
 800a33a:	af00      	add	r7, sp, #0
 800a33c:	60f8      	str	r0, [r7, #12]
 800a33e:	60b9      	str	r1, [r7, #8]
 800a340:	607a      	str	r2, [r7, #4]
 800a342:	68fb      	ldr	r3, [r7, #12]
 800a344:	6a1b      	ldr	r3, [r3, #32]
 800a346:	f023 0210 	bic.w	r2, r3, #16
 800a34a:	68fb      	ldr	r3, [r7, #12]
 800a34c:	621a      	str	r2, [r3, #32]
 800a34e:	68fb      	ldr	r3, [r7, #12]
 800a350:	699b      	ldr	r3, [r3, #24]
 800a352:	617b      	str	r3, [r7, #20]
 800a354:	68fb      	ldr	r3, [r7, #12]
 800a356:	6a1b      	ldr	r3, [r3, #32]
 800a358:	613b      	str	r3, [r7, #16]
 800a35a:	697b      	ldr	r3, [r7, #20]
 800a35c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800a360:	617b      	str	r3, [r7, #20]
 800a362:	687b      	ldr	r3, [r7, #4]
 800a364:	031b      	lsls	r3, r3, #12
 800a366:	697a      	ldr	r2, [r7, #20]
 800a368:	4313      	orrs	r3, r2
 800a36a:	617b      	str	r3, [r7, #20]
 800a36c:	693b      	ldr	r3, [r7, #16]
 800a36e:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800a372:	613b      	str	r3, [r7, #16]
 800a374:	68bb      	ldr	r3, [r7, #8]
 800a376:	011b      	lsls	r3, r3, #4
 800a378:	693a      	ldr	r2, [r7, #16]
 800a37a:	4313      	orrs	r3, r2
 800a37c:	613b      	str	r3, [r7, #16]
 800a37e:	68fb      	ldr	r3, [r7, #12]
 800a380:	697a      	ldr	r2, [r7, #20]
 800a382:	619a      	str	r2, [r3, #24]
 800a384:	68fb      	ldr	r3, [r7, #12]
 800a386:	693a      	ldr	r2, [r7, #16]
 800a388:	621a      	str	r2, [r3, #32]
 800a38a:	bf00      	nop
 800a38c:	371c      	adds	r7, #28
 800a38e:	46bd      	mov	sp, r7
 800a390:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a394:	4770      	bx	lr

0800a396 <TIM_ITRx_SetConfig>:
 800a396:	b480      	push	{r7}
 800a398:	b085      	sub	sp, #20
 800a39a:	af00      	add	r7, sp, #0
 800a39c:	6078      	str	r0, [r7, #4]
 800a39e:	6039      	str	r1, [r7, #0]
 800a3a0:	687b      	ldr	r3, [r7, #4]
 800a3a2:	689b      	ldr	r3, [r3, #8]
 800a3a4:	60fb      	str	r3, [r7, #12]
 800a3a6:	68fb      	ldr	r3, [r7, #12]
 800a3a8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a3ac:	60fb      	str	r3, [r7, #12]
 800a3ae:	683a      	ldr	r2, [r7, #0]
 800a3b0:	68fb      	ldr	r3, [r7, #12]
 800a3b2:	4313      	orrs	r3, r2
 800a3b4:	f043 0307 	orr.w	r3, r3, #7
 800a3b8:	60fb      	str	r3, [r7, #12]
 800a3ba:	687b      	ldr	r3, [r7, #4]
 800a3bc:	68fa      	ldr	r2, [r7, #12]
 800a3be:	609a      	str	r2, [r3, #8]
 800a3c0:	bf00      	nop
 800a3c2:	3714      	adds	r7, #20
 800a3c4:	46bd      	mov	sp, r7
 800a3c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3ca:	4770      	bx	lr

0800a3cc <TIM_ETR_SetConfig>:
 800a3cc:	b480      	push	{r7}
 800a3ce:	b087      	sub	sp, #28
 800a3d0:	af00      	add	r7, sp, #0
 800a3d2:	60f8      	str	r0, [r7, #12]
 800a3d4:	60b9      	str	r1, [r7, #8]
 800a3d6:	607a      	str	r2, [r7, #4]
 800a3d8:	603b      	str	r3, [r7, #0]
 800a3da:	68fb      	ldr	r3, [r7, #12]
 800a3dc:	689b      	ldr	r3, [r3, #8]
 800a3de:	617b      	str	r3, [r7, #20]
 800a3e0:	697b      	ldr	r3, [r7, #20]
 800a3e2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800a3e6:	617b      	str	r3, [r7, #20]
 800a3e8:	683b      	ldr	r3, [r7, #0]
 800a3ea:	021a      	lsls	r2, r3, #8
 800a3ec:	687b      	ldr	r3, [r7, #4]
 800a3ee:	431a      	orrs	r2, r3
 800a3f0:	68bb      	ldr	r3, [r7, #8]
 800a3f2:	4313      	orrs	r3, r2
 800a3f4:	697a      	ldr	r2, [r7, #20]
 800a3f6:	4313      	orrs	r3, r2
 800a3f8:	617b      	str	r3, [r7, #20]
 800a3fa:	68fb      	ldr	r3, [r7, #12]
 800a3fc:	697a      	ldr	r2, [r7, #20]
 800a3fe:	609a      	str	r2, [r3, #8]
 800a400:	bf00      	nop
 800a402:	371c      	adds	r7, #28
 800a404:	46bd      	mov	sp, r7
 800a406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a40a:	4770      	bx	lr

0800a40c <TIM_CCxChannelCmd>:
 800a40c:	b480      	push	{r7}
 800a40e:	b087      	sub	sp, #28
 800a410:	af00      	add	r7, sp, #0
 800a412:	60f8      	str	r0, [r7, #12]
 800a414:	60b9      	str	r1, [r7, #8]
 800a416:	607a      	str	r2, [r7, #4]
 800a418:	68bb      	ldr	r3, [r7, #8]
 800a41a:	f003 031f 	and.w	r3, r3, #31
 800a41e:	2201      	movs	r2, #1
 800a420:	fa02 f303 	lsl.w	r3, r2, r3
 800a424:	617b      	str	r3, [r7, #20]
 800a426:	68fb      	ldr	r3, [r7, #12]
 800a428:	6a1a      	ldr	r2, [r3, #32]
 800a42a:	697b      	ldr	r3, [r7, #20]
 800a42c:	43db      	mvns	r3, r3
 800a42e:	401a      	ands	r2, r3
 800a430:	68fb      	ldr	r3, [r7, #12]
 800a432:	621a      	str	r2, [r3, #32]
 800a434:	68fb      	ldr	r3, [r7, #12]
 800a436:	6a1a      	ldr	r2, [r3, #32]
 800a438:	68bb      	ldr	r3, [r7, #8]
 800a43a:	f003 031f 	and.w	r3, r3, #31
 800a43e:	6879      	ldr	r1, [r7, #4]
 800a440:	fa01 f303 	lsl.w	r3, r1, r3
 800a444:	431a      	orrs	r2, r3
 800a446:	68fb      	ldr	r3, [r7, #12]
 800a448:	621a      	str	r2, [r3, #32]
 800a44a:	bf00      	nop
 800a44c:	371c      	adds	r7, #28
 800a44e:	46bd      	mov	sp, r7
 800a450:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a454:	4770      	bx	lr
	...

0800a458 <HAL_TIMEx_MasterConfigSynchronization>:
 800a458:	b480      	push	{r7}
 800a45a:	b085      	sub	sp, #20
 800a45c:	af00      	add	r7, sp, #0
 800a45e:	6078      	str	r0, [r7, #4]
 800a460:	6039      	str	r1, [r7, #0]
 800a462:	687b      	ldr	r3, [r7, #4]
 800a464:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800a468:	2b01      	cmp	r3, #1
 800a46a:	d101      	bne.n	800a470 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800a46c:	2302      	movs	r3, #2
 800a46e:	e050      	b.n	800a512 <HAL_TIMEx_MasterConfigSynchronization+0xba>
 800a470:	687b      	ldr	r3, [r7, #4]
 800a472:	2201      	movs	r2, #1
 800a474:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a478:	687b      	ldr	r3, [r7, #4]
 800a47a:	2202      	movs	r2, #2
 800a47c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a480:	687b      	ldr	r3, [r7, #4]
 800a482:	681b      	ldr	r3, [r3, #0]
 800a484:	685b      	ldr	r3, [r3, #4]
 800a486:	60fb      	str	r3, [r7, #12]
 800a488:	687b      	ldr	r3, [r7, #4]
 800a48a:	681b      	ldr	r3, [r3, #0]
 800a48c:	689b      	ldr	r3, [r3, #8]
 800a48e:	60bb      	str	r3, [r7, #8]
 800a490:	68fb      	ldr	r3, [r7, #12]
 800a492:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a496:	60fb      	str	r3, [r7, #12]
 800a498:	683b      	ldr	r3, [r7, #0]
 800a49a:	681b      	ldr	r3, [r3, #0]
 800a49c:	68fa      	ldr	r2, [r7, #12]
 800a49e:	4313      	orrs	r3, r2
 800a4a0:	60fb      	str	r3, [r7, #12]
 800a4a2:	687b      	ldr	r3, [r7, #4]
 800a4a4:	681b      	ldr	r3, [r3, #0]
 800a4a6:	68fa      	ldr	r2, [r7, #12]
 800a4a8:	605a      	str	r2, [r3, #4]
 800a4aa:	687b      	ldr	r3, [r7, #4]
 800a4ac:	681b      	ldr	r3, [r3, #0]
 800a4ae:	4a1c      	ldr	r2, [pc, #112]	; (800a520 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 800a4b0:	4293      	cmp	r3, r2
 800a4b2:	d018      	beq.n	800a4e6 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a4b4:	687b      	ldr	r3, [r7, #4]
 800a4b6:	681b      	ldr	r3, [r3, #0]
 800a4b8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a4bc:	d013      	beq.n	800a4e6 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a4be:	687b      	ldr	r3, [r7, #4]
 800a4c0:	681b      	ldr	r3, [r3, #0]
 800a4c2:	4a18      	ldr	r2, [pc, #96]	; (800a524 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 800a4c4:	4293      	cmp	r3, r2
 800a4c6:	d00e      	beq.n	800a4e6 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a4c8:	687b      	ldr	r3, [r7, #4]
 800a4ca:	681b      	ldr	r3, [r3, #0]
 800a4cc:	4a16      	ldr	r2, [pc, #88]	; (800a528 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 800a4ce:	4293      	cmp	r3, r2
 800a4d0:	d009      	beq.n	800a4e6 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a4d2:	687b      	ldr	r3, [r7, #4]
 800a4d4:	681b      	ldr	r3, [r3, #0]
 800a4d6:	4a15      	ldr	r2, [pc, #84]	; (800a52c <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 800a4d8:	4293      	cmp	r3, r2
 800a4da:	d004      	beq.n	800a4e6 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a4dc:	687b      	ldr	r3, [r7, #4]
 800a4de:	681b      	ldr	r3, [r3, #0]
 800a4e0:	4a13      	ldr	r2, [pc, #76]	; (800a530 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 800a4e2:	4293      	cmp	r3, r2
 800a4e4:	d10c      	bne.n	800a500 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 800a4e6:	68bb      	ldr	r3, [r7, #8]
 800a4e8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800a4ec:	60bb      	str	r3, [r7, #8]
 800a4ee:	683b      	ldr	r3, [r7, #0]
 800a4f0:	685b      	ldr	r3, [r3, #4]
 800a4f2:	68ba      	ldr	r2, [r7, #8]
 800a4f4:	4313      	orrs	r3, r2
 800a4f6:	60bb      	str	r3, [r7, #8]
 800a4f8:	687b      	ldr	r3, [r7, #4]
 800a4fa:	681b      	ldr	r3, [r3, #0]
 800a4fc:	68ba      	ldr	r2, [r7, #8]
 800a4fe:	609a      	str	r2, [r3, #8]
 800a500:	687b      	ldr	r3, [r7, #4]
 800a502:	2201      	movs	r2, #1
 800a504:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a508:	687b      	ldr	r3, [r7, #4]
 800a50a:	2200      	movs	r2, #0
 800a50c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a510:	2300      	movs	r3, #0
 800a512:	4618      	mov	r0, r3
 800a514:	3714      	adds	r7, #20
 800a516:	46bd      	mov	sp, r7
 800a518:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a51c:	4770      	bx	lr
 800a51e:	bf00      	nop
 800a520:	40010000 	.word	0x40010000
 800a524:	40000400 	.word	0x40000400
 800a528:	40000800 	.word	0x40000800
 800a52c:	40000c00 	.word	0x40000c00
 800a530:	40014000 	.word	0x40014000

0800a534 <HAL_TIMEx_CommutCallback>:
 800a534:	b480      	push	{r7}
 800a536:	b083      	sub	sp, #12
 800a538:	af00      	add	r7, sp, #0
 800a53a:	6078      	str	r0, [r7, #4]
 800a53c:	bf00      	nop
 800a53e:	370c      	adds	r7, #12
 800a540:	46bd      	mov	sp, r7
 800a542:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a546:	4770      	bx	lr

0800a548 <HAL_TIMEx_BreakCallback>:
 800a548:	b480      	push	{r7}
 800a54a:	b083      	sub	sp, #12
 800a54c:	af00      	add	r7, sp, #0
 800a54e:	6078      	str	r0, [r7, #4]
 800a550:	bf00      	nop
 800a552:	370c      	adds	r7, #12
 800a554:	46bd      	mov	sp, r7
 800a556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a55a:	4770      	bx	lr

0800a55c <HAL_UART_Init>:
 800a55c:	b580      	push	{r7, lr}
 800a55e:	b082      	sub	sp, #8
 800a560:	af00      	add	r7, sp, #0
 800a562:	6078      	str	r0, [r7, #4]
 800a564:	687b      	ldr	r3, [r7, #4]
 800a566:	2b00      	cmp	r3, #0
 800a568:	d101      	bne.n	800a56e <HAL_UART_Init+0x12>
 800a56a:	2301      	movs	r3, #1
 800a56c:	e03f      	b.n	800a5ee <HAL_UART_Init+0x92>
 800a56e:	687b      	ldr	r3, [r7, #4]
 800a570:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a574:	b2db      	uxtb	r3, r3
 800a576:	2b00      	cmp	r3, #0
 800a578:	d106      	bne.n	800a588 <HAL_UART_Init+0x2c>
 800a57a:	687b      	ldr	r3, [r7, #4]
 800a57c:	2200      	movs	r2, #0
 800a57e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a582:	6878      	ldr	r0, [r7, #4]
 800a584:	f7fa f8c2 	bl	800470c <HAL_UART_MspInit>
 800a588:	687b      	ldr	r3, [r7, #4]
 800a58a:	2224      	movs	r2, #36	; 0x24
 800a58c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a590:	687b      	ldr	r3, [r7, #4]
 800a592:	681b      	ldr	r3, [r3, #0]
 800a594:	68da      	ldr	r2, [r3, #12]
 800a596:	687b      	ldr	r3, [r7, #4]
 800a598:	681b      	ldr	r3, [r3, #0]
 800a59a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a59e:	60da      	str	r2, [r3, #12]
 800a5a0:	6878      	ldr	r0, [r7, #4]
 800a5a2:	f000 ffcd 	bl	800b540 <UART_SetConfig>
 800a5a6:	687b      	ldr	r3, [r7, #4]
 800a5a8:	681b      	ldr	r3, [r3, #0]
 800a5aa:	691a      	ldr	r2, [r3, #16]
 800a5ac:	687b      	ldr	r3, [r7, #4]
 800a5ae:	681b      	ldr	r3, [r3, #0]
 800a5b0:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800a5b4:	611a      	str	r2, [r3, #16]
 800a5b6:	687b      	ldr	r3, [r7, #4]
 800a5b8:	681b      	ldr	r3, [r3, #0]
 800a5ba:	695a      	ldr	r2, [r3, #20]
 800a5bc:	687b      	ldr	r3, [r7, #4]
 800a5be:	681b      	ldr	r3, [r3, #0]
 800a5c0:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800a5c4:	615a      	str	r2, [r3, #20]
 800a5c6:	687b      	ldr	r3, [r7, #4]
 800a5c8:	681b      	ldr	r3, [r3, #0]
 800a5ca:	68da      	ldr	r2, [r3, #12]
 800a5cc:	687b      	ldr	r3, [r7, #4]
 800a5ce:	681b      	ldr	r3, [r3, #0]
 800a5d0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800a5d4:	60da      	str	r2, [r3, #12]
 800a5d6:	687b      	ldr	r3, [r7, #4]
 800a5d8:	2200      	movs	r2, #0
 800a5da:	641a      	str	r2, [r3, #64]	; 0x40
 800a5dc:	687b      	ldr	r3, [r7, #4]
 800a5de:	2220      	movs	r2, #32
 800a5e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a5e4:	687b      	ldr	r3, [r7, #4]
 800a5e6:	2220      	movs	r2, #32
 800a5e8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a5ec:	2300      	movs	r3, #0
 800a5ee:	4618      	mov	r0, r3
 800a5f0:	3708      	adds	r7, #8
 800a5f2:	46bd      	mov	sp, r7
 800a5f4:	bd80      	pop	{r7, pc}
	...

0800a5f8 <HAL_UART_Transmit_DMA>:
 800a5f8:	b580      	push	{r7, lr}
 800a5fa:	b08c      	sub	sp, #48	; 0x30
 800a5fc:	af00      	add	r7, sp, #0
 800a5fe:	60f8      	str	r0, [r7, #12]
 800a600:	60b9      	str	r1, [r7, #8]
 800a602:	4613      	mov	r3, r2
 800a604:	80fb      	strh	r3, [r7, #6]
 800a606:	68fb      	ldr	r3, [r7, #12]
 800a608:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a60c:	b2db      	uxtb	r3, r3
 800a60e:	2b20      	cmp	r3, #32
 800a610:	d165      	bne.n	800a6de <HAL_UART_Transmit_DMA+0xe6>
 800a612:	68bb      	ldr	r3, [r7, #8]
 800a614:	2b00      	cmp	r3, #0
 800a616:	d002      	beq.n	800a61e <HAL_UART_Transmit_DMA+0x26>
 800a618:	88fb      	ldrh	r3, [r7, #6]
 800a61a:	2b00      	cmp	r3, #0
 800a61c:	d101      	bne.n	800a622 <HAL_UART_Transmit_DMA+0x2a>
 800a61e:	2301      	movs	r3, #1
 800a620:	e05e      	b.n	800a6e0 <HAL_UART_Transmit_DMA+0xe8>
 800a622:	68fb      	ldr	r3, [r7, #12]
 800a624:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800a628:	2b01      	cmp	r3, #1
 800a62a:	d101      	bne.n	800a630 <HAL_UART_Transmit_DMA+0x38>
 800a62c:	2302      	movs	r3, #2
 800a62e:	e057      	b.n	800a6e0 <HAL_UART_Transmit_DMA+0xe8>
 800a630:	68fb      	ldr	r3, [r7, #12]
 800a632:	2201      	movs	r2, #1
 800a634:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a638:	68ba      	ldr	r2, [r7, #8]
 800a63a:	68fb      	ldr	r3, [r7, #12]
 800a63c:	621a      	str	r2, [r3, #32]
 800a63e:	68fb      	ldr	r3, [r7, #12]
 800a640:	88fa      	ldrh	r2, [r7, #6]
 800a642:	849a      	strh	r2, [r3, #36]	; 0x24
 800a644:	68fb      	ldr	r3, [r7, #12]
 800a646:	88fa      	ldrh	r2, [r7, #6]
 800a648:	84da      	strh	r2, [r3, #38]	; 0x26
 800a64a:	68fb      	ldr	r3, [r7, #12]
 800a64c:	2200      	movs	r2, #0
 800a64e:	641a      	str	r2, [r3, #64]	; 0x40
 800a650:	68fb      	ldr	r3, [r7, #12]
 800a652:	2221      	movs	r2, #33	; 0x21
 800a654:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a658:	68fb      	ldr	r3, [r7, #12]
 800a65a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a65c:	4a22      	ldr	r2, [pc, #136]	; (800a6e8 <HAL_UART_Transmit_DMA+0xf0>)
 800a65e:	63da      	str	r2, [r3, #60]	; 0x3c
 800a660:	68fb      	ldr	r3, [r7, #12]
 800a662:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a664:	4a21      	ldr	r2, [pc, #132]	; (800a6ec <HAL_UART_Transmit_DMA+0xf4>)
 800a666:	641a      	str	r2, [r3, #64]	; 0x40
 800a668:	68fb      	ldr	r3, [r7, #12]
 800a66a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a66c:	4a20      	ldr	r2, [pc, #128]	; (800a6f0 <HAL_UART_Transmit_DMA+0xf8>)
 800a66e:	64da      	str	r2, [r3, #76]	; 0x4c
 800a670:	68fb      	ldr	r3, [r7, #12]
 800a672:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a674:	2200      	movs	r2, #0
 800a676:	651a      	str	r2, [r3, #80]	; 0x50
 800a678:	f107 0308 	add.w	r3, r7, #8
 800a67c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a67e:	68fb      	ldr	r3, [r7, #12]
 800a680:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800a682:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a684:	6819      	ldr	r1, [r3, #0]
 800a686:	68fb      	ldr	r3, [r7, #12]
 800a688:	681b      	ldr	r3, [r3, #0]
 800a68a:	3304      	adds	r3, #4
 800a68c:	461a      	mov	r2, r3
 800a68e:	88fb      	ldrh	r3, [r7, #6]
 800a690:	f7fa fbfe 	bl	8004e90 <HAL_DMA_Start_IT>
 800a694:	68fb      	ldr	r3, [r7, #12]
 800a696:	681b      	ldr	r3, [r3, #0]
 800a698:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800a69c:	601a      	str	r2, [r3, #0]
 800a69e:	68fb      	ldr	r3, [r7, #12]
 800a6a0:	2200      	movs	r2, #0
 800a6a2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a6a6:	68fb      	ldr	r3, [r7, #12]
 800a6a8:	681b      	ldr	r3, [r3, #0]
 800a6aa:	3314      	adds	r3, #20
 800a6ac:	61bb      	str	r3, [r7, #24]
 800a6ae:	69bb      	ldr	r3, [r7, #24]
 800a6b0:	e853 3f00 	ldrex	r3, [r3]
 800a6b4:	617b      	str	r3, [r7, #20]
 800a6b6:	697b      	ldr	r3, [r7, #20]
 800a6b8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800a6bc:	62bb      	str	r3, [r7, #40]	; 0x28
 800a6be:	68fb      	ldr	r3, [r7, #12]
 800a6c0:	681b      	ldr	r3, [r3, #0]
 800a6c2:	3314      	adds	r3, #20
 800a6c4:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a6c6:	627a      	str	r2, [r7, #36]	; 0x24
 800a6c8:	623b      	str	r3, [r7, #32]
 800a6ca:	6a39      	ldr	r1, [r7, #32]
 800a6cc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a6ce:	e841 2300 	strex	r3, r2, [r1]
 800a6d2:	61fb      	str	r3, [r7, #28]
 800a6d4:	69fb      	ldr	r3, [r7, #28]
 800a6d6:	2b00      	cmp	r3, #0
 800a6d8:	d1e5      	bne.n	800a6a6 <HAL_UART_Transmit_DMA+0xae>
 800a6da:	2300      	movs	r3, #0
 800a6dc:	e000      	b.n	800a6e0 <HAL_UART_Transmit_DMA+0xe8>
 800a6de:	2302      	movs	r3, #2
 800a6e0:	4618      	mov	r0, r3
 800a6e2:	3730      	adds	r7, #48	; 0x30
 800a6e4:	46bd      	mov	sp, r7
 800a6e6:	bd80      	pop	{r7, pc}
 800a6e8:	0800add9 	.word	0x0800add9
 800a6ec:	0800ae73 	.word	0x0800ae73
 800a6f0:	0800afeb 	.word	0x0800afeb

0800a6f4 <HAL_UART_Receive_DMA>:
 800a6f4:	b580      	push	{r7, lr}
 800a6f6:	b084      	sub	sp, #16
 800a6f8:	af00      	add	r7, sp, #0
 800a6fa:	60f8      	str	r0, [r7, #12]
 800a6fc:	60b9      	str	r1, [r7, #8]
 800a6fe:	4613      	mov	r3, r2
 800a700:	80fb      	strh	r3, [r7, #6]
 800a702:	68fb      	ldr	r3, [r7, #12]
 800a704:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a708:	b2db      	uxtb	r3, r3
 800a70a:	2b20      	cmp	r3, #32
 800a70c:	d11d      	bne.n	800a74a <HAL_UART_Receive_DMA+0x56>
 800a70e:	68bb      	ldr	r3, [r7, #8]
 800a710:	2b00      	cmp	r3, #0
 800a712:	d002      	beq.n	800a71a <HAL_UART_Receive_DMA+0x26>
 800a714:	88fb      	ldrh	r3, [r7, #6]
 800a716:	2b00      	cmp	r3, #0
 800a718:	d101      	bne.n	800a71e <HAL_UART_Receive_DMA+0x2a>
 800a71a:	2301      	movs	r3, #1
 800a71c:	e016      	b.n	800a74c <HAL_UART_Receive_DMA+0x58>
 800a71e:	68fb      	ldr	r3, [r7, #12]
 800a720:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800a724:	2b01      	cmp	r3, #1
 800a726:	d101      	bne.n	800a72c <HAL_UART_Receive_DMA+0x38>
 800a728:	2302      	movs	r3, #2
 800a72a:	e00f      	b.n	800a74c <HAL_UART_Receive_DMA+0x58>
 800a72c:	68fb      	ldr	r3, [r7, #12]
 800a72e:	2201      	movs	r2, #1
 800a730:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a734:	68fb      	ldr	r3, [r7, #12]
 800a736:	2200      	movs	r2, #0
 800a738:	631a      	str	r2, [r3, #48]	; 0x30
 800a73a:	88fb      	ldrh	r3, [r7, #6]
 800a73c:	461a      	mov	r2, r3
 800a73e:	68b9      	ldr	r1, [r7, #8]
 800a740:	68f8      	ldr	r0, [r7, #12]
 800a742:	f000 fc9d 	bl	800b080 <UART_Start_Receive_DMA>
 800a746:	4603      	mov	r3, r0
 800a748:	e000      	b.n	800a74c <HAL_UART_Receive_DMA+0x58>
 800a74a:	2302      	movs	r3, #2
 800a74c:	4618      	mov	r0, r3
 800a74e:	3710      	adds	r7, #16
 800a750:	46bd      	mov	sp, r7
 800a752:	bd80      	pop	{r7, pc}

0800a754 <HAL_UART_DMAStop>:
 800a754:	b580      	push	{r7, lr}
 800a756:	b090      	sub	sp, #64	; 0x40
 800a758:	af00      	add	r7, sp, #0
 800a75a:	6078      	str	r0, [r7, #4]
 800a75c:	2300      	movs	r3, #0
 800a75e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a760:	687b      	ldr	r3, [r7, #4]
 800a762:	681b      	ldr	r3, [r3, #0]
 800a764:	695b      	ldr	r3, [r3, #20]
 800a766:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800a76a:	2b80      	cmp	r3, #128	; 0x80
 800a76c:	bf0c      	ite	eq
 800a76e:	2301      	moveq	r3, #1
 800a770:	2300      	movne	r3, #0
 800a772:	b2db      	uxtb	r3, r3
 800a774:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a776:	687b      	ldr	r3, [r7, #4]
 800a778:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a77c:	b2db      	uxtb	r3, r3
 800a77e:	2b21      	cmp	r3, #33	; 0x21
 800a780:	d128      	bne.n	800a7d4 <HAL_UART_DMAStop+0x80>
 800a782:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a784:	2b00      	cmp	r3, #0
 800a786:	d025      	beq.n	800a7d4 <HAL_UART_DMAStop+0x80>
 800a788:	687b      	ldr	r3, [r7, #4]
 800a78a:	681b      	ldr	r3, [r3, #0]
 800a78c:	3314      	adds	r3, #20
 800a78e:	627b      	str	r3, [r7, #36]	; 0x24
 800a790:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a792:	e853 3f00 	ldrex	r3, [r3]
 800a796:	623b      	str	r3, [r7, #32]
 800a798:	6a3b      	ldr	r3, [r7, #32]
 800a79a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800a79e:	63bb      	str	r3, [r7, #56]	; 0x38
 800a7a0:	687b      	ldr	r3, [r7, #4]
 800a7a2:	681b      	ldr	r3, [r3, #0]
 800a7a4:	3314      	adds	r3, #20
 800a7a6:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800a7a8:	633a      	str	r2, [r7, #48]	; 0x30
 800a7aa:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a7ac:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800a7ae:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a7b0:	e841 2300 	strex	r3, r2, [r1]
 800a7b4:	62bb      	str	r3, [r7, #40]	; 0x28
 800a7b6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a7b8:	2b00      	cmp	r3, #0
 800a7ba:	d1e5      	bne.n	800a788 <HAL_UART_DMAStop+0x34>
 800a7bc:	687b      	ldr	r3, [r7, #4]
 800a7be:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a7c0:	2b00      	cmp	r3, #0
 800a7c2:	d004      	beq.n	800a7ce <HAL_UART_DMAStop+0x7a>
 800a7c4:	687b      	ldr	r3, [r7, #4]
 800a7c6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a7c8:	4618      	mov	r0, r3
 800a7ca:	f7fa fbb9 	bl	8004f40 <HAL_DMA_Abort>
 800a7ce:	6878      	ldr	r0, [r7, #4]
 800a7d0:	f000 fcf4 	bl	800b1bc <UART_EndTxTransfer>
 800a7d4:	687b      	ldr	r3, [r7, #4]
 800a7d6:	681b      	ldr	r3, [r3, #0]
 800a7d8:	695b      	ldr	r3, [r3, #20]
 800a7da:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a7de:	2b40      	cmp	r3, #64	; 0x40
 800a7e0:	bf0c      	ite	eq
 800a7e2:	2301      	moveq	r3, #1
 800a7e4:	2300      	movne	r3, #0
 800a7e6:	b2db      	uxtb	r3, r3
 800a7e8:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a7ea:	687b      	ldr	r3, [r7, #4]
 800a7ec:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a7f0:	b2db      	uxtb	r3, r3
 800a7f2:	2b22      	cmp	r3, #34	; 0x22
 800a7f4:	d128      	bne.n	800a848 <HAL_UART_DMAStop+0xf4>
 800a7f6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a7f8:	2b00      	cmp	r3, #0
 800a7fa:	d025      	beq.n	800a848 <HAL_UART_DMAStop+0xf4>
 800a7fc:	687b      	ldr	r3, [r7, #4]
 800a7fe:	681b      	ldr	r3, [r3, #0]
 800a800:	3314      	adds	r3, #20
 800a802:	613b      	str	r3, [r7, #16]
 800a804:	693b      	ldr	r3, [r7, #16]
 800a806:	e853 3f00 	ldrex	r3, [r3]
 800a80a:	60fb      	str	r3, [r7, #12]
 800a80c:	68fb      	ldr	r3, [r7, #12]
 800a80e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a812:	637b      	str	r3, [r7, #52]	; 0x34
 800a814:	687b      	ldr	r3, [r7, #4]
 800a816:	681b      	ldr	r3, [r3, #0]
 800a818:	3314      	adds	r3, #20
 800a81a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800a81c:	61fa      	str	r2, [r7, #28]
 800a81e:	61bb      	str	r3, [r7, #24]
 800a820:	69b9      	ldr	r1, [r7, #24]
 800a822:	69fa      	ldr	r2, [r7, #28]
 800a824:	e841 2300 	strex	r3, r2, [r1]
 800a828:	617b      	str	r3, [r7, #20]
 800a82a:	697b      	ldr	r3, [r7, #20]
 800a82c:	2b00      	cmp	r3, #0
 800a82e:	d1e5      	bne.n	800a7fc <HAL_UART_DMAStop+0xa8>
 800a830:	687b      	ldr	r3, [r7, #4]
 800a832:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a834:	2b00      	cmp	r3, #0
 800a836:	d004      	beq.n	800a842 <HAL_UART_DMAStop+0xee>
 800a838:	687b      	ldr	r3, [r7, #4]
 800a83a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a83c:	4618      	mov	r0, r3
 800a83e:	f7fa fb7f 	bl	8004f40 <HAL_DMA_Abort>
 800a842:	6878      	ldr	r0, [r7, #4]
 800a844:	f000 fce2 	bl	800b20c <UART_EndRxTransfer>
 800a848:	2300      	movs	r3, #0
 800a84a:	4618      	mov	r0, r3
 800a84c:	3740      	adds	r7, #64	; 0x40
 800a84e:	46bd      	mov	sp, r7
 800a850:	bd80      	pop	{r7, pc}
	...

0800a854 <HAL_UART_IRQHandler>:
 800a854:	b580      	push	{r7, lr}
 800a856:	b0ba      	sub	sp, #232	; 0xe8
 800a858:	af00      	add	r7, sp, #0
 800a85a:	6078      	str	r0, [r7, #4]
 800a85c:	687b      	ldr	r3, [r7, #4]
 800a85e:	681b      	ldr	r3, [r3, #0]
 800a860:	681b      	ldr	r3, [r3, #0]
 800a862:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800a866:	687b      	ldr	r3, [r7, #4]
 800a868:	681b      	ldr	r3, [r3, #0]
 800a86a:	68db      	ldr	r3, [r3, #12]
 800a86c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800a870:	687b      	ldr	r3, [r7, #4]
 800a872:	681b      	ldr	r3, [r3, #0]
 800a874:	695b      	ldr	r3, [r3, #20]
 800a876:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800a87a:	2300      	movs	r3, #0
 800a87c:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800a880:	2300      	movs	r3, #0
 800a882:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800a886:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a88a:	f003 030f 	and.w	r3, r3, #15
 800a88e:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800a892:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800a896:	2b00      	cmp	r3, #0
 800a898:	d10f      	bne.n	800a8ba <HAL_UART_IRQHandler+0x66>
 800a89a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a89e:	f003 0320 	and.w	r3, r3, #32
 800a8a2:	2b00      	cmp	r3, #0
 800a8a4:	d009      	beq.n	800a8ba <HAL_UART_IRQHandler+0x66>
 800a8a6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a8aa:	f003 0320 	and.w	r3, r3, #32
 800a8ae:	2b00      	cmp	r3, #0
 800a8b0:	d003      	beq.n	800a8ba <HAL_UART_IRQHandler+0x66>
 800a8b2:	6878      	ldr	r0, [r7, #4]
 800a8b4:	f000 fd89 	bl	800b3ca <UART_Receive_IT>
 800a8b8:	e256      	b.n	800ad68 <HAL_UART_IRQHandler+0x514>
 800a8ba:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800a8be:	2b00      	cmp	r3, #0
 800a8c0:	f000 80de 	beq.w	800aa80 <HAL_UART_IRQHandler+0x22c>
 800a8c4:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a8c8:	f003 0301 	and.w	r3, r3, #1
 800a8cc:	2b00      	cmp	r3, #0
 800a8ce:	d106      	bne.n	800a8de <HAL_UART_IRQHandler+0x8a>
 800a8d0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a8d4:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800a8d8:	2b00      	cmp	r3, #0
 800a8da:	f000 80d1 	beq.w	800aa80 <HAL_UART_IRQHandler+0x22c>
 800a8de:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a8e2:	f003 0301 	and.w	r3, r3, #1
 800a8e6:	2b00      	cmp	r3, #0
 800a8e8:	d00b      	beq.n	800a902 <HAL_UART_IRQHandler+0xae>
 800a8ea:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a8ee:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a8f2:	2b00      	cmp	r3, #0
 800a8f4:	d005      	beq.n	800a902 <HAL_UART_IRQHandler+0xae>
 800a8f6:	687b      	ldr	r3, [r7, #4]
 800a8f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a8fa:	f043 0201 	orr.w	r2, r3, #1
 800a8fe:	687b      	ldr	r3, [r7, #4]
 800a900:	641a      	str	r2, [r3, #64]	; 0x40
 800a902:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a906:	f003 0304 	and.w	r3, r3, #4
 800a90a:	2b00      	cmp	r3, #0
 800a90c:	d00b      	beq.n	800a926 <HAL_UART_IRQHandler+0xd2>
 800a90e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a912:	f003 0301 	and.w	r3, r3, #1
 800a916:	2b00      	cmp	r3, #0
 800a918:	d005      	beq.n	800a926 <HAL_UART_IRQHandler+0xd2>
 800a91a:	687b      	ldr	r3, [r7, #4]
 800a91c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a91e:	f043 0202 	orr.w	r2, r3, #2
 800a922:	687b      	ldr	r3, [r7, #4]
 800a924:	641a      	str	r2, [r3, #64]	; 0x40
 800a926:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a92a:	f003 0302 	and.w	r3, r3, #2
 800a92e:	2b00      	cmp	r3, #0
 800a930:	d00b      	beq.n	800a94a <HAL_UART_IRQHandler+0xf6>
 800a932:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a936:	f003 0301 	and.w	r3, r3, #1
 800a93a:	2b00      	cmp	r3, #0
 800a93c:	d005      	beq.n	800a94a <HAL_UART_IRQHandler+0xf6>
 800a93e:	687b      	ldr	r3, [r7, #4]
 800a940:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a942:	f043 0204 	orr.w	r2, r3, #4
 800a946:	687b      	ldr	r3, [r7, #4]
 800a948:	641a      	str	r2, [r3, #64]	; 0x40
 800a94a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a94e:	f003 0308 	and.w	r3, r3, #8
 800a952:	2b00      	cmp	r3, #0
 800a954:	d011      	beq.n	800a97a <HAL_UART_IRQHandler+0x126>
 800a956:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a95a:	f003 0320 	and.w	r3, r3, #32
 800a95e:	2b00      	cmp	r3, #0
 800a960:	d105      	bne.n	800a96e <HAL_UART_IRQHandler+0x11a>
 800a962:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a966:	f003 0301 	and.w	r3, r3, #1
 800a96a:	2b00      	cmp	r3, #0
 800a96c:	d005      	beq.n	800a97a <HAL_UART_IRQHandler+0x126>
 800a96e:	687b      	ldr	r3, [r7, #4]
 800a970:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a972:	f043 0208 	orr.w	r2, r3, #8
 800a976:	687b      	ldr	r3, [r7, #4]
 800a978:	641a      	str	r2, [r3, #64]	; 0x40
 800a97a:	687b      	ldr	r3, [r7, #4]
 800a97c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a97e:	2b00      	cmp	r3, #0
 800a980:	f000 81ed 	beq.w	800ad5e <HAL_UART_IRQHandler+0x50a>
 800a984:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a988:	f003 0320 	and.w	r3, r3, #32
 800a98c:	2b00      	cmp	r3, #0
 800a98e:	d008      	beq.n	800a9a2 <HAL_UART_IRQHandler+0x14e>
 800a990:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a994:	f003 0320 	and.w	r3, r3, #32
 800a998:	2b00      	cmp	r3, #0
 800a99a:	d002      	beq.n	800a9a2 <HAL_UART_IRQHandler+0x14e>
 800a99c:	6878      	ldr	r0, [r7, #4]
 800a99e:	f000 fd14 	bl	800b3ca <UART_Receive_IT>
 800a9a2:	687b      	ldr	r3, [r7, #4]
 800a9a4:	681b      	ldr	r3, [r3, #0]
 800a9a6:	695b      	ldr	r3, [r3, #20]
 800a9a8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a9ac:	2b40      	cmp	r3, #64	; 0x40
 800a9ae:	bf0c      	ite	eq
 800a9b0:	2301      	moveq	r3, #1
 800a9b2:	2300      	movne	r3, #0
 800a9b4:	b2db      	uxtb	r3, r3
 800a9b6:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800a9ba:	687b      	ldr	r3, [r7, #4]
 800a9bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a9be:	f003 0308 	and.w	r3, r3, #8
 800a9c2:	2b00      	cmp	r3, #0
 800a9c4:	d103      	bne.n	800a9ce <HAL_UART_IRQHandler+0x17a>
 800a9c6:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800a9ca:	2b00      	cmp	r3, #0
 800a9cc:	d04f      	beq.n	800aa6e <HAL_UART_IRQHandler+0x21a>
 800a9ce:	6878      	ldr	r0, [r7, #4]
 800a9d0:	f000 fc1c 	bl	800b20c <UART_EndRxTransfer>
 800a9d4:	687b      	ldr	r3, [r7, #4]
 800a9d6:	681b      	ldr	r3, [r3, #0]
 800a9d8:	695b      	ldr	r3, [r3, #20]
 800a9da:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a9de:	2b40      	cmp	r3, #64	; 0x40
 800a9e0:	d141      	bne.n	800aa66 <HAL_UART_IRQHandler+0x212>
 800a9e2:	687b      	ldr	r3, [r7, #4]
 800a9e4:	681b      	ldr	r3, [r3, #0]
 800a9e6:	3314      	adds	r3, #20
 800a9e8:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800a9ec:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800a9f0:	e853 3f00 	ldrex	r3, [r3]
 800a9f4:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800a9f8:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800a9fc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800aa00:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800aa04:	687b      	ldr	r3, [r7, #4]
 800aa06:	681b      	ldr	r3, [r3, #0]
 800aa08:	3314      	adds	r3, #20
 800aa0a:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800aa0e:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800aa12:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800aa16:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800aa1a:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800aa1e:	e841 2300 	strex	r3, r2, [r1]
 800aa22:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800aa26:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800aa2a:	2b00      	cmp	r3, #0
 800aa2c:	d1d9      	bne.n	800a9e2 <HAL_UART_IRQHandler+0x18e>
 800aa2e:	687b      	ldr	r3, [r7, #4]
 800aa30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aa32:	2b00      	cmp	r3, #0
 800aa34:	d013      	beq.n	800aa5e <HAL_UART_IRQHandler+0x20a>
 800aa36:	687b      	ldr	r3, [r7, #4]
 800aa38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aa3a:	4a7d      	ldr	r2, [pc, #500]	; (800ac30 <HAL_UART_IRQHandler+0x3dc>)
 800aa3c:	651a      	str	r2, [r3, #80]	; 0x50
 800aa3e:	687b      	ldr	r3, [r7, #4]
 800aa40:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aa42:	4618      	mov	r0, r3
 800aa44:	f7fa faec 	bl	8005020 <HAL_DMA_Abort_IT>
 800aa48:	4603      	mov	r3, r0
 800aa4a:	2b00      	cmp	r3, #0
 800aa4c:	d016      	beq.n	800aa7c <HAL_UART_IRQHandler+0x228>
 800aa4e:	687b      	ldr	r3, [r7, #4]
 800aa50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aa52:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800aa54:	687a      	ldr	r2, [r7, #4]
 800aa56:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800aa58:	4610      	mov	r0, r2
 800aa5a:	4798      	blx	r3
 800aa5c:	e00e      	b.n	800aa7c <HAL_UART_IRQHandler+0x228>
 800aa5e:	6878      	ldr	r0, [r7, #4]
 800aa60:	f000 f9a4 	bl	800adac <HAL_UART_ErrorCallback>
 800aa64:	e00a      	b.n	800aa7c <HAL_UART_IRQHandler+0x228>
 800aa66:	6878      	ldr	r0, [r7, #4]
 800aa68:	f000 f9a0 	bl	800adac <HAL_UART_ErrorCallback>
 800aa6c:	e006      	b.n	800aa7c <HAL_UART_IRQHandler+0x228>
 800aa6e:	6878      	ldr	r0, [r7, #4]
 800aa70:	f000 f99c 	bl	800adac <HAL_UART_ErrorCallback>
 800aa74:	687b      	ldr	r3, [r7, #4]
 800aa76:	2200      	movs	r2, #0
 800aa78:	641a      	str	r2, [r3, #64]	; 0x40
 800aa7a:	e170      	b.n	800ad5e <HAL_UART_IRQHandler+0x50a>
 800aa7c:	bf00      	nop
 800aa7e:	e16e      	b.n	800ad5e <HAL_UART_IRQHandler+0x50a>
 800aa80:	687b      	ldr	r3, [r7, #4]
 800aa82:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800aa84:	2b01      	cmp	r3, #1
 800aa86:	f040 814a 	bne.w	800ad1e <HAL_UART_IRQHandler+0x4ca>
 800aa8a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800aa8e:	f003 0310 	and.w	r3, r3, #16
 800aa92:	2b00      	cmp	r3, #0
 800aa94:	f000 8143 	beq.w	800ad1e <HAL_UART_IRQHandler+0x4ca>
 800aa98:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800aa9c:	f003 0310 	and.w	r3, r3, #16
 800aaa0:	2b00      	cmp	r3, #0
 800aaa2:	f000 813c 	beq.w	800ad1e <HAL_UART_IRQHandler+0x4ca>
 800aaa6:	2300      	movs	r3, #0
 800aaa8:	60bb      	str	r3, [r7, #8]
 800aaaa:	687b      	ldr	r3, [r7, #4]
 800aaac:	681b      	ldr	r3, [r3, #0]
 800aaae:	681b      	ldr	r3, [r3, #0]
 800aab0:	60bb      	str	r3, [r7, #8]
 800aab2:	687b      	ldr	r3, [r7, #4]
 800aab4:	681b      	ldr	r3, [r3, #0]
 800aab6:	685b      	ldr	r3, [r3, #4]
 800aab8:	60bb      	str	r3, [r7, #8]
 800aaba:	68bb      	ldr	r3, [r7, #8]
 800aabc:	687b      	ldr	r3, [r7, #4]
 800aabe:	681b      	ldr	r3, [r3, #0]
 800aac0:	695b      	ldr	r3, [r3, #20]
 800aac2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800aac6:	2b40      	cmp	r3, #64	; 0x40
 800aac8:	f040 80b4 	bne.w	800ac34 <HAL_UART_IRQHandler+0x3e0>
 800aacc:	687b      	ldr	r3, [r7, #4]
 800aace:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aad0:	681b      	ldr	r3, [r3, #0]
 800aad2:	685b      	ldr	r3, [r3, #4]
 800aad4:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 800aad8:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800aadc:	2b00      	cmp	r3, #0
 800aade:	f000 8140 	beq.w	800ad62 <HAL_UART_IRQHandler+0x50e>
 800aae2:	687b      	ldr	r3, [r7, #4]
 800aae4:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800aae6:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800aaea:	429a      	cmp	r2, r3
 800aaec:	f080 8139 	bcs.w	800ad62 <HAL_UART_IRQHandler+0x50e>
 800aaf0:	687b      	ldr	r3, [r7, #4]
 800aaf2:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800aaf6:	85da      	strh	r2, [r3, #46]	; 0x2e
 800aaf8:	687b      	ldr	r3, [r7, #4]
 800aafa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aafc:	69db      	ldr	r3, [r3, #28]
 800aafe:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800ab02:	f000 8088 	beq.w	800ac16 <HAL_UART_IRQHandler+0x3c2>
 800ab06:	687b      	ldr	r3, [r7, #4]
 800ab08:	681b      	ldr	r3, [r3, #0]
 800ab0a:	330c      	adds	r3, #12
 800ab0c:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800ab10:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800ab14:	e853 3f00 	ldrex	r3, [r3]
 800ab18:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800ab1c:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800ab20:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800ab24:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800ab28:	687b      	ldr	r3, [r7, #4]
 800ab2a:	681b      	ldr	r3, [r3, #0]
 800ab2c:	330c      	adds	r3, #12
 800ab2e:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800ab32:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800ab36:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800ab3a:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800ab3e:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800ab42:	e841 2300 	strex	r3, r2, [r1]
 800ab46:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800ab4a:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800ab4e:	2b00      	cmp	r3, #0
 800ab50:	d1d9      	bne.n	800ab06 <HAL_UART_IRQHandler+0x2b2>
 800ab52:	687b      	ldr	r3, [r7, #4]
 800ab54:	681b      	ldr	r3, [r3, #0]
 800ab56:	3314      	adds	r3, #20
 800ab58:	677b      	str	r3, [r7, #116]	; 0x74
 800ab5a:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800ab5c:	e853 3f00 	ldrex	r3, [r3]
 800ab60:	673b      	str	r3, [r7, #112]	; 0x70
 800ab62:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800ab64:	f023 0301 	bic.w	r3, r3, #1
 800ab68:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800ab6c:	687b      	ldr	r3, [r7, #4]
 800ab6e:	681b      	ldr	r3, [r3, #0]
 800ab70:	3314      	adds	r3, #20
 800ab72:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800ab76:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800ab7a:	67fb      	str	r3, [r7, #124]	; 0x7c
 800ab7c:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800ab7e:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800ab82:	e841 2300 	strex	r3, r2, [r1]
 800ab86:	67bb      	str	r3, [r7, #120]	; 0x78
 800ab88:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800ab8a:	2b00      	cmp	r3, #0
 800ab8c:	d1e1      	bne.n	800ab52 <HAL_UART_IRQHandler+0x2fe>
 800ab8e:	687b      	ldr	r3, [r7, #4]
 800ab90:	681b      	ldr	r3, [r3, #0]
 800ab92:	3314      	adds	r3, #20
 800ab94:	663b      	str	r3, [r7, #96]	; 0x60
 800ab96:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800ab98:	e853 3f00 	ldrex	r3, [r3]
 800ab9c:	65fb      	str	r3, [r7, #92]	; 0x5c
 800ab9e:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800aba0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800aba4:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800aba8:	687b      	ldr	r3, [r7, #4]
 800abaa:	681b      	ldr	r3, [r3, #0]
 800abac:	3314      	adds	r3, #20
 800abae:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800abb2:	66fa      	str	r2, [r7, #108]	; 0x6c
 800abb4:	66bb      	str	r3, [r7, #104]	; 0x68
 800abb6:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800abb8:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800abba:	e841 2300 	strex	r3, r2, [r1]
 800abbe:	667b      	str	r3, [r7, #100]	; 0x64
 800abc0:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800abc2:	2b00      	cmp	r3, #0
 800abc4:	d1e3      	bne.n	800ab8e <HAL_UART_IRQHandler+0x33a>
 800abc6:	687b      	ldr	r3, [r7, #4]
 800abc8:	2220      	movs	r2, #32
 800abca:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800abce:	687b      	ldr	r3, [r7, #4]
 800abd0:	2200      	movs	r2, #0
 800abd2:	631a      	str	r2, [r3, #48]	; 0x30
 800abd4:	687b      	ldr	r3, [r7, #4]
 800abd6:	681b      	ldr	r3, [r3, #0]
 800abd8:	330c      	adds	r3, #12
 800abda:	64fb      	str	r3, [r7, #76]	; 0x4c
 800abdc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800abde:	e853 3f00 	ldrex	r3, [r3]
 800abe2:	64bb      	str	r3, [r7, #72]	; 0x48
 800abe4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800abe6:	f023 0310 	bic.w	r3, r3, #16
 800abea:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800abee:	687b      	ldr	r3, [r7, #4]
 800abf0:	681b      	ldr	r3, [r3, #0]
 800abf2:	330c      	adds	r3, #12
 800abf4:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 800abf8:	65ba      	str	r2, [r7, #88]	; 0x58
 800abfa:	657b      	str	r3, [r7, #84]	; 0x54
 800abfc:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800abfe:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800ac00:	e841 2300 	strex	r3, r2, [r1]
 800ac04:	653b      	str	r3, [r7, #80]	; 0x50
 800ac06:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800ac08:	2b00      	cmp	r3, #0
 800ac0a:	d1e3      	bne.n	800abd4 <HAL_UART_IRQHandler+0x380>
 800ac0c:	687b      	ldr	r3, [r7, #4]
 800ac0e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ac10:	4618      	mov	r0, r3
 800ac12:	f7fa f995 	bl	8004f40 <HAL_DMA_Abort>
 800ac16:	687b      	ldr	r3, [r7, #4]
 800ac18:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800ac1a:	687b      	ldr	r3, [r7, #4]
 800ac1c:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800ac1e:	b29b      	uxth	r3, r3
 800ac20:	1ad3      	subs	r3, r2, r3
 800ac22:	b29b      	uxth	r3, r3
 800ac24:	4619      	mov	r1, r3
 800ac26:	6878      	ldr	r0, [r7, #4]
 800ac28:	f000 f8ca 	bl	800adc0 <HAL_UARTEx_RxEventCallback>
 800ac2c:	e099      	b.n	800ad62 <HAL_UART_IRQHandler+0x50e>
 800ac2e:	bf00      	nop
 800ac30:	0800b2d3 	.word	0x0800b2d3
 800ac34:	687b      	ldr	r3, [r7, #4]
 800ac36:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800ac38:	687b      	ldr	r3, [r7, #4]
 800ac3a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800ac3c:	b29b      	uxth	r3, r3
 800ac3e:	1ad3      	subs	r3, r2, r3
 800ac40:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 800ac44:	687b      	ldr	r3, [r7, #4]
 800ac46:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800ac48:	b29b      	uxth	r3, r3
 800ac4a:	2b00      	cmp	r3, #0
 800ac4c:	f000 808b 	beq.w	800ad66 <HAL_UART_IRQHandler+0x512>
 800ac50:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800ac54:	2b00      	cmp	r3, #0
 800ac56:	f000 8086 	beq.w	800ad66 <HAL_UART_IRQHandler+0x512>
 800ac5a:	687b      	ldr	r3, [r7, #4]
 800ac5c:	681b      	ldr	r3, [r3, #0]
 800ac5e:	330c      	adds	r3, #12
 800ac60:	63bb      	str	r3, [r7, #56]	; 0x38
 800ac62:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800ac64:	e853 3f00 	ldrex	r3, [r3]
 800ac68:	637b      	str	r3, [r7, #52]	; 0x34
 800ac6a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ac6c:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800ac70:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800ac74:	687b      	ldr	r3, [r7, #4]
 800ac76:	681b      	ldr	r3, [r3, #0]
 800ac78:	330c      	adds	r3, #12
 800ac7a:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800ac7e:	647a      	str	r2, [r7, #68]	; 0x44
 800ac80:	643b      	str	r3, [r7, #64]	; 0x40
 800ac82:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800ac84:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800ac86:	e841 2300 	strex	r3, r2, [r1]
 800ac8a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ac8c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ac8e:	2b00      	cmp	r3, #0
 800ac90:	d1e3      	bne.n	800ac5a <HAL_UART_IRQHandler+0x406>
 800ac92:	687b      	ldr	r3, [r7, #4]
 800ac94:	681b      	ldr	r3, [r3, #0]
 800ac96:	3314      	adds	r3, #20
 800ac98:	627b      	str	r3, [r7, #36]	; 0x24
 800ac9a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ac9c:	e853 3f00 	ldrex	r3, [r3]
 800aca0:	623b      	str	r3, [r7, #32]
 800aca2:	6a3b      	ldr	r3, [r7, #32]
 800aca4:	f023 0301 	bic.w	r3, r3, #1
 800aca8:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800acac:	687b      	ldr	r3, [r7, #4]
 800acae:	681b      	ldr	r3, [r3, #0]
 800acb0:	3314      	adds	r3, #20
 800acb2:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800acb6:	633a      	str	r2, [r7, #48]	; 0x30
 800acb8:	62fb      	str	r3, [r7, #44]	; 0x2c
 800acba:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800acbc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800acbe:	e841 2300 	strex	r3, r2, [r1]
 800acc2:	62bb      	str	r3, [r7, #40]	; 0x28
 800acc4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800acc6:	2b00      	cmp	r3, #0
 800acc8:	d1e3      	bne.n	800ac92 <HAL_UART_IRQHandler+0x43e>
 800acca:	687b      	ldr	r3, [r7, #4]
 800accc:	2220      	movs	r2, #32
 800acce:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800acd2:	687b      	ldr	r3, [r7, #4]
 800acd4:	2200      	movs	r2, #0
 800acd6:	631a      	str	r2, [r3, #48]	; 0x30
 800acd8:	687b      	ldr	r3, [r7, #4]
 800acda:	681b      	ldr	r3, [r3, #0]
 800acdc:	330c      	adds	r3, #12
 800acde:	613b      	str	r3, [r7, #16]
 800ace0:	693b      	ldr	r3, [r7, #16]
 800ace2:	e853 3f00 	ldrex	r3, [r3]
 800ace6:	60fb      	str	r3, [r7, #12]
 800ace8:	68fb      	ldr	r3, [r7, #12]
 800acea:	f023 0310 	bic.w	r3, r3, #16
 800acee:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800acf2:	687b      	ldr	r3, [r7, #4]
 800acf4:	681b      	ldr	r3, [r3, #0]
 800acf6:	330c      	adds	r3, #12
 800acf8:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 800acfc:	61fa      	str	r2, [r7, #28]
 800acfe:	61bb      	str	r3, [r7, #24]
 800ad00:	69b9      	ldr	r1, [r7, #24]
 800ad02:	69fa      	ldr	r2, [r7, #28]
 800ad04:	e841 2300 	strex	r3, r2, [r1]
 800ad08:	617b      	str	r3, [r7, #20]
 800ad0a:	697b      	ldr	r3, [r7, #20]
 800ad0c:	2b00      	cmp	r3, #0
 800ad0e:	d1e3      	bne.n	800acd8 <HAL_UART_IRQHandler+0x484>
 800ad10:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800ad14:	4619      	mov	r1, r3
 800ad16:	6878      	ldr	r0, [r7, #4]
 800ad18:	f000 f852 	bl	800adc0 <HAL_UARTEx_RxEventCallback>
 800ad1c:	e023      	b.n	800ad66 <HAL_UART_IRQHandler+0x512>
 800ad1e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ad22:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ad26:	2b00      	cmp	r3, #0
 800ad28:	d009      	beq.n	800ad3e <HAL_UART_IRQHandler+0x4ea>
 800ad2a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ad2e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ad32:	2b00      	cmp	r3, #0
 800ad34:	d003      	beq.n	800ad3e <HAL_UART_IRQHandler+0x4ea>
 800ad36:	6878      	ldr	r0, [r7, #4]
 800ad38:	f000 fadf 	bl	800b2fa <UART_Transmit_IT>
 800ad3c:	e014      	b.n	800ad68 <HAL_UART_IRQHandler+0x514>
 800ad3e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ad42:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ad46:	2b00      	cmp	r3, #0
 800ad48:	d00e      	beq.n	800ad68 <HAL_UART_IRQHandler+0x514>
 800ad4a:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ad4e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ad52:	2b00      	cmp	r3, #0
 800ad54:	d008      	beq.n	800ad68 <HAL_UART_IRQHandler+0x514>
 800ad56:	6878      	ldr	r0, [r7, #4]
 800ad58:	f000 fb1f 	bl	800b39a <UART_EndTransmit_IT>
 800ad5c:	e004      	b.n	800ad68 <HAL_UART_IRQHandler+0x514>
 800ad5e:	bf00      	nop
 800ad60:	e002      	b.n	800ad68 <HAL_UART_IRQHandler+0x514>
 800ad62:	bf00      	nop
 800ad64:	e000      	b.n	800ad68 <HAL_UART_IRQHandler+0x514>
 800ad66:	bf00      	nop
 800ad68:	37e8      	adds	r7, #232	; 0xe8
 800ad6a:	46bd      	mov	sp, r7
 800ad6c:	bd80      	pop	{r7, pc}
 800ad6e:	bf00      	nop

0800ad70 <HAL_UART_TxCpltCallback>:
 800ad70:	b480      	push	{r7}
 800ad72:	b083      	sub	sp, #12
 800ad74:	af00      	add	r7, sp, #0
 800ad76:	6078      	str	r0, [r7, #4]
 800ad78:	bf00      	nop
 800ad7a:	370c      	adds	r7, #12
 800ad7c:	46bd      	mov	sp, r7
 800ad7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad82:	4770      	bx	lr

0800ad84 <HAL_UART_TxHalfCpltCallback>:
 800ad84:	b480      	push	{r7}
 800ad86:	b083      	sub	sp, #12
 800ad88:	af00      	add	r7, sp, #0
 800ad8a:	6078      	str	r0, [r7, #4]
 800ad8c:	bf00      	nop
 800ad8e:	370c      	adds	r7, #12
 800ad90:	46bd      	mov	sp, r7
 800ad92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad96:	4770      	bx	lr

0800ad98 <HAL_UART_RxHalfCpltCallback>:
 800ad98:	b480      	push	{r7}
 800ad9a:	b083      	sub	sp, #12
 800ad9c:	af00      	add	r7, sp, #0
 800ad9e:	6078      	str	r0, [r7, #4]
 800ada0:	bf00      	nop
 800ada2:	370c      	adds	r7, #12
 800ada4:	46bd      	mov	sp, r7
 800ada6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adaa:	4770      	bx	lr

0800adac <HAL_UART_ErrorCallback>:
 800adac:	b480      	push	{r7}
 800adae:	b083      	sub	sp, #12
 800adb0:	af00      	add	r7, sp, #0
 800adb2:	6078      	str	r0, [r7, #4]
 800adb4:	bf00      	nop
 800adb6:	370c      	adds	r7, #12
 800adb8:	46bd      	mov	sp, r7
 800adba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adbe:	4770      	bx	lr

0800adc0 <HAL_UARTEx_RxEventCallback>:
 800adc0:	b480      	push	{r7}
 800adc2:	b083      	sub	sp, #12
 800adc4:	af00      	add	r7, sp, #0
 800adc6:	6078      	str	r0, [r7, #4]
 800adc8:	460b      	mov	r3, r1
 800adca:	807b      	strh	r3, [r7, #2]
 800adcc:	bf00      	nop
 800adce:	370c      	adds	r7, #12
 800add0:	46bd      	mov	sp, r7
 800add2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800add6:	4770      	bx	lr

0800add8 <UART_DMATransmitCplt>:
 800add8:	b580      	push	{r7, lr}
 800adda:	b090      	sub	sp, #64	; 0x40
 800addc:	af00      	add	r7, sp, #0
 800adde:	6078      	str	r0, [r7, #4]
 800ade0:	687b      	ldr	r3, [r7, #4]
 800ade2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ade4:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ade6:	687b      	ldr	r3, [r7, #4]
 800ade8:	681b      	ldr	r3, [r3, #0]
 800adea:	681b      	ldr	r3, [r3, #0]
 800adec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800adf0:	2b00      	cmp	r3, #0
 800adf2:	d137      	bne.n	800ae64 <UART_DMATransmitCplt+0x8c>
 800adf4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800adf6:	2200      	movs	r2, #0
 800adf8:	84da      	strh	r2, [r3, #38]	; 0x26
 800adfa:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800adfc:	681b      	ldr	r3, [r3, #0]
 800adfe:	3314      	adds	r3, #20
 800ae00:	627b      	str	r3, [r7, #36]	; 0x24
 800ae02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ae04:	e853 3f00 	ldrex	r3, [r3]
 800ae08:	623b      	str	r3, [r7, #32]
 800ae0a:	6a3b      	ldr	r3, [r7, #32]
 800ae0c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ae10:	63bb      	str	r3, [r7, #56]	; 0x38
 800ae12:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ae14:	681b      	ldr	r3, [r3, #0]
 800ae16:	3314      	adds	r3, #20
 800ae18:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800ae1a:	633a      	str	r2, [r7, #48]	; 0x30
 800ae1c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ae1e:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800ae20:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800ae22:	e841 2300 	strex	r3, r2, [r1]
 800ae26:	62bb      	str	r3, [r7, #40]	; 0x28
 800ae28:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ae2a:	2b00      	cmp	r3, #0
 800ae2c:	d1e5      	bne.n	800adfa <UART_DMATransmitCplt+0x22>
 800ae2e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ae30:	681b      	ldr	r3, [r3, #0]
 800ae32:	330c      	adds	r3, #12
 800ae34:	613b      	str	r3, [r7, #16]
 800ae36:	693b      	ldr	r3, [r7, #16]
 800ae38:	e853 3f00 	ldrex	r3, [r3]
 800ae3c:	60fb      	str	r3, [r7, #12]
 800ae3e:	68fb      	ldr	r3, [r7, #12]
 800ae40:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ae44:	637b      	str	r3, [r7, #52]	; 0x34
 800ae46:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ae48:	681b      	ldr	r3, [r3, #0]
 800ae4a:	330c      	adds	r3, #12
 800ae4c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800ae4e:	61fa      	str	r2, [r7, #28]
 800ae50:	61bb      	str	r3, [r7, #24]
 800ae52:	69b9      	ldr	r1, [r7, #24]
 800ae54:	69fa      	ldr	r2, [r7, #28]
 800ae56:	e841 2300 	strex	r3, r2, [r1]
 800ae5a:	617b      	str	r3, [r7, #20]
 800ae5c:	697b      	ldr	r3, [r7, #20]
 800ae5e:	2b00      	cmp	r3, #0
 800ae60:	d1e5      	bne.n	800ae2e <UART_DMATransmitCplt+0x56>
 800ae62:	e002      	b.n	800ae6a <UART_DMATransmitCplt+0x92>
 800ae64:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 800ae66:	f7ff ff83 	bl	800ad70 <HAL_UART_TxCpltCallback>
 800ae6a:	bf00      	nop
 800ae6c:	3740      	adds	r7, #64	; 0x40
 800ae6e:	46bd      	mov	sp, r7
 800ae70:	bd80      	pop	{r7, pc}

0800ae72 <UART_DMATxHalfCplt>:
 800ae72:	b580      	push	{r7, lr}
 800ae74:	b084      	sub	sp, #16
 800ae76:	af00      	add	r7, sp, #0
 800ae78:	6078      	str	r0, [r7, #4]
 800ae7a:	687b      	ldr	r3, [r7, #4]
 800ae7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ae7e:	60fb      	str	r3, [r7, #12]
 800ae80:	68f8      	ldr	r0, [r7, #12]
 800ae82:	f7ff ff7f 	bl	800ad84 <HAL_UART_TxHalfCpltCallback>
 800ae86:	bf00      	nop
 800ae88:	3710      	adds	r7, #16
 800ae8a:	46bd      	mov	sp, r7
 800ae8c:	bd80      	pop	{r7, pc}

0800ae8e <UART_DMAReceiveCplt>:
 800ae8e:	b580      	push	{r7, lr}
 800ae90:	b09c      	sub	sp, #112	; 0x70
 800ae92:	af00      	add	r7, sp, #0
 800ae94:	6078      	str	r0, [r7, #4]
 800ae96:	687b      	ldr	r3, [r7, #4]
 800ae98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ae9a:	66fb      	str	r3, [r7, #108]	; 0x6c
 800ae9c:	687b      	ldr	r3, [r7, #4]
 800ae9e:	681b      	ldr	r3, [r3, #0]
 800aea0:	681b      	ldr	r3, [r3, #0]
 800aea2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800aea6:	2b00      	cmp	r3, #0
 800aea8:	d172      	bne.n	800af90 <UART_DMAReceiveCplt+0x102>
 800aeaa:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800aeac:	2200      	movs	r2, #0
 800aeae:	85da      	strh	r2, [r3, #46]	; 0x2e
 800aeb0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800aeb2:	681b      	ldr	r3, [r3, #0]
 800aeb4:	330c      	adds	r3, #12
 800aeb6:	64fb      	str	r3, [r7, #76]	; 0x4c
 800aeb8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800aeba:	e853 3f00 	ldrex	r3, [r3]
 800aebe:	64bb      	str	r3, [r7, #72]	; 0x48
 800aec0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800aec2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800aec6:	66bb      	str	r3, [r7, #104]	; 0x68
 800aec8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800aeca:	681b      	ldr	r3, [r3, #0]
 800aecc:	330c      	adds	r3, #12
 800aece:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800aed0:	65ba      	str	r2, [r7, #88]	; 0x58
 800aed2:	657b      	str	r3, [r7, #84]	; 0x54
 800aed4:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800aed6:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800aed8:	e841 2300 	strex	r3, r2, [r1]
 800aedc:	653b      	str	r3, [r7, #80]	; 0x50
 800aede:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800aee0:	2b00      	cmp	r3, #0
 800aee2:	d1e5      	bne.n	800aeb0 <UART_DMAReceiveCplt+0x22>
 800aee4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800aee6:	681b      	ldr	r3, [r3, #0]
 800aee8:	3314      	adds	r3, #20
 800aeea:	63bb      	str	r3, [r7, #56]	; 0x38
 800aeec:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800aeee:	e853 3f00 	ldrex	r3, [r3]
 800aef2:	637b      	str	r3, [r7, #52]	; 0x34
 800aef4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800aef6:	f023 0301 	bic.w	r3, r3, #1
 800aefa:	667b      	str	r3, [r7, #100]	; 0x64
 800aefc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800aefe:	681b      	ldr	r3, [r3, #0]
 800af00:	3314      	adds	r3, #20
 800af02:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800af04:	647a      	str	r2, [r7, #68]	; 0x44
 800af06:	643b      	str	r3, [r7, #64]	; 0x40
 800af08:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800af0a:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800af0c:	e841 2300 	strex	r3, r2, [r1]
 800af10:	63fb      	str	r3, [r7, #60]	; 0x3c
 800af12:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800af14:	2b00      	cmp	r3, #0
 800af16:	d1e5      	bne.n	800aee4 <UART_DMAReceiveCplt+0x56>
 800af18:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af1a:	681b      	ldr	r3, [r3, #0]
 800af1c:	3314      	adds	r3, #20
 800af1e:	627b      	str	r3, [r7, #36]	; 0x24
 800af20:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800af22:	e853 3f00 	ldrex	r3, [r3]
 800af26:	623b      	str	r3, [r7, #32]
 800af28:	6a3b      	ldr	r3, [r7, #32]
 800af2a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800af2e:	663b      	str	r3, [r7, #96]	; 0x60
 800af30:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af32:	681b      	ldr	r3, [r3, #0]
 800af34:	3314      	adds	r3, #20
 800af36:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800af38:	633a      	str	r2, [r7, #48]	; 0x30
 800af3a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800af3c:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800af3e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800af40:	e841 2300 	strex	r3, r2, [r1]
 800af44:	62bb      	str	r3, [r7, #40]	; 0x28
 800af46:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800af48:	2b00      	cmp	r3, #0
 800af4a:	d1e5      	bne.n	800af18 <UART_DMAReceiveCplt+0x8a>
 800af4c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af4e:	2220      	movs	r2, #32
 800af50:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800af54:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800af58:	2b01      	cmp	r3, #1
 800af5a:	d119      	bne.n	800af90 <UART_DMAReceiveCplt+0x102>
 800af5c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af5e:	681b      	ldr	r3, [r3, #0]
 800af60:	330c      	adds	r3, #12
 800af62:	613b      	str	r3, [r7, #16]
 800af64:	693b      	ldr	r3, [r7, #16]
 800af66:	e853 3f00 	ldrex	r3, [r3]
 800af6a:	60fb      	str	r3, [r7, #12]
 800af6c:	68fb      	ldr	r3, [r7, #12]
 800af6e:	f023 0310 	bic.w	r3, r3, #16
 800af72:	65fb      	str	r3, [r7, #92]	; 0x5c
 800af74:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af76:	681b      	ldr	r3, [r3, #0]
 800af78:	330c      	adds	r3, #12
 800af7a:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800af7c:	61fa      	str	r2, [r7, #28]
 800af7e:	61bb      	str	r3, [r7, #24]
 800af80:	69b9      	ldr	r1, [r7, #24]
 800af82:	69fa      	ldr	r2, [r7, #28]
 800af84:	e841 2300 	strex	r3, r2, [r1]
 800af88:	617b      	str	r3, [r7, #20]
 800af8a:	697b      	ldr	r3, [r7, #20]
 800af8c:	2b00      	cmp	r3, #0
 800af8e:	d1e5      	bne.n	800af5c <UART_DMAReceiveCplt+0xce>
 800af90:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800af94:	2b01      	cmp	r3, #1
 800af96:	d106      	bne.n	800afa6 <UART_DMAReceiveCplt+0x118>
 800af98:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af9a:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800af9c:	4619      	mov	r1, r3
 800af9e:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 800afa0:	f7ff ff0e 	bl	800adc0 <HAL_UARTEx_RxEventCallback>
 800afa4:	e002      	b.n	800afac <UART_DMAReceiveCplt+0x11e>
 800afa6:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 800afa8:	f7f9 f9e2 	bl	8004370 <HAL_UART_RxCpltCallback>
 800afac:	bf00      	nop
 800afae:	3770      	adds	r7, #112	; 0x70
 800afb0:	46bd      	mov	sp, r7
 800afb2:	bd80      	pop	{r7, pc}

0800afb4 <UART_DMARxHalfCplt>:
 800afb4:	b580      	push	{r7, lr}
 800afb6:	b084      	sub	sp, #16
 800afb8:	af00      	add	r7, sp, #0
 800afba:	6078      	str	r0, [r7, #4]
 800afbc:	687b      	ldr	r3, [r7, #4]
 800afbe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800afc0:	60fb      	str	r3, [r7, #12]
 800afc2:	68fb      	ldr	r3, [r7, #12]
 800afc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800afc6:	2b01      	cmp	r3, #1
 800afc8:	d108      	bne.n	800afdc <UART_DMARxHalfCplt+0x28>
 800afca:	68fb      	ldr	r3, [r7, #12]
 800afcc:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800afce:	085b      	lsrs	r3, r3, #1
 800afd0:	b29b      	uxth	r3, r3
 800afd2:	4619      	mov	r1, r3
 800afd4:	68f8      	ldr	r0, [r7, #12]
 800afd6:	f7ff fef3 	bl	800adc0 <HAL_UARTEx_RxEventCallback>
 800afda:	e002      	b.n	800afe2 <UART_DMARxHalfCplt+0x2e>
 800afdc:	68f8      	ldr	r0, [r7, #12]
 800afde:	f7ff fedb 	bl	800ad98 <HAL_UART_RxHalfCpltCallback>
 800afe2:	bf00      	nop
 800afe4:	3710      	adds	r7, #16
 800afe6:	46bd      	mov	sp, r7
 800afe8:	bd80      	pop	{r7, pc}

0800afea <UART_DMAError>:
 800afea:	b580      	push	{r7, lr}
 800afec:	b084      	sub	sp, #16
 800afee:	af00      	add	r7, sp, #0
 800aff0:	6078      	str	r0, [r7, #4]
 800aff2:	2300      	movs	r3, #0
 800aff4:	60fb      	str	r3, [r7, #12]
 800aff6:	687b      	ldr	r3, [r7, #4]
 800aff8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800affa:	60bb      	str	r3, [r7, #8]
 800affc:	68bb      	ldr	r3, [r7, #8]
 800affe:	681b      	ldr	r3, [r3, #0]
 800b000:	695b      	ldr	r3, [r3, #20]
 800b002:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800b006:	2b80      	cmp	r3, #128	; 0x80
 800b008:	bf0c      	ite	eq
 800b00a:	2301      	moveq	r3, #1
 800b00c:	2300      	movne	r3, #0
 800b00e:	b2db      	uxtb	r3, r3
 800b010:	60fb      	str	r3, [r7, #12]
 800b012:	68bb      	ldr	r3, [r7, #8]
 800b014:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b018:	b2db      	uxtb	r3, r3
 800b01a:	2b21      	cmp	r3, #33	; 0x21
 800b01c:	d108      	bne.n	800b030 <UART_DMAError+0x46>
 800b01e:	68fb      	ldr	r3, [r7, #12]
 800b020:	2b00      	cmp	r3, #0
 800b022:	d005      	beq.n	800b030 <UART_DMAError+0x46>
 800b024:	68bb      	ldr	r3, [r7, #8]
 800b026:	2200      	movs	r2, #0
 800b028:	84da      	strh	r2, [r3, #38]	; 0x26
 800b02a:	68b8      	ldr	r0, [r7, #8]
 800b02c:	f000 f8c6 	bl	800b1bc <UART_EndTxTransfer>
 800b030:	68bb      	ldr	r3, [r7, #8]
 800b032:	681b      	ldr	r3, [r3, #0]
 800b034:	695b      	ldr	r3, [r3, #20]
 800b036:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b03a:	2b40      	cmp	r3, #64	; 0x40
 800b03c:	bf0c      	ite	eq
 800b03e:	2301      	moveq	r3, #1
 800b040:	2300      	movne	r3, #0
 800b042:	b2db      	uxtb	r3, r3
 800b044:	60fb      	str	r3, [r7, #12]
 800b046:	68bb      	ldr	r3, [r7, #8]
 800b048:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800b04c:	b2db      	uxtb	r3, r3
 800b04e:	2b22      	cmp	r3, #34	; 0x22
 800b050:	d108      	bne.n	800b064 <UART_DMAError+0x7a>
 800b052:	68fb      	ldr	r3, [r7, #12]
 800b054:	2b00      	cmp	r3, #0
 800b056:	d005      	beq.n	800b064 <UART_DMAError+0x7a>
 800b058:	68bb      	ldr	r3, [r7, #8]
 800b05a:	2200      	movs	r2, #0
 800b05c:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b05e:	68b8      	ldr	r0, [r7, #8]
 800b060:	f000 f8d4 	bl	800b20c <UART_EndRxTransfer>
 800b064:	68bb      	ldr	r3, [r7, #8]
 800b066:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b068:	f043 0210 	orr.w	r2, r3, #16
 800b06c:	68bb      	ldr	r3, [r7, #8]
 800b06e:	641a      	str	r2, [r3, #64]	; 0x40
 800b070:	68b8      	ldr	r0, [r7, #8]
 800b072:	f7ff fe9b 	bl	800adac <HAL_UART_ErrorCallback>
 800b076:	bf00      	nop
 800b078:	3710      	adds	r7, #16
 800b07a:	46bd      	mov	sp, r7
 800b07c:	bd80      	pop	{r7, pc}
	...

0800b080 <UART_Start_Receive_DMA>:
 800b080:	b580      	push	{r7, lr}
 800b082:	b098      	sub	sp, #96	; 0x60
 800b084:	af00      	add	r7, sp, #0
 800b086:	60f8      	str	r0, [r7, #12]
 800b088:	60b9      	str	r1, [r7, #8]
 800b08a:	4613      	mov	r3, r2
 800b08c:	80fb      	strh	r3, [r7, #6]
 800b08e:	68ba      	ldr	r2, [r7, #8]
 800b090:	68fb      	ldr	r3, [r7, #12]
 800b092:	629a      	str	r2, [r3, #40]	; 0x28
 800b094:	68fb      	ldr	r3, [r7, #12]
 800b096:	88fa      	ldrh	r2, [r7, #6]
 800b098:	859a      	strh	r2, [r3, #44]	; 0x2c
 800b09a:	68fb      	ldr	r3, [r7, #12]
 800b09c:	2200      	movs	r2, #0
 800b09e:	641a      	str	r2, [r3, #64]	; 0x40
 800b0a0:	68fb      	ldr	r3, [r7, #12]
 800b0a2:	2222      	movs	r2, #34	; 0x22
 800b0a4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b0a8:	68fb      	ldr	r3, [r7, #12]
 800b0aa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b0ac:	4a40      	ldr	r2, [pc, #256]	; (800b1b0 <UART_Start_Receive_DMA+0x130>)
 800b0ae:	63da      	str	r2, [r3, #60]	; 0x3c
 800b0b0:	68fb      	ldr	r3, [r7, #12]
 800b0b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b0b4:	4a3f      	ldr	r2, [pc, #252]	; (800b1b4 <UART_Start_Receive_DMA+0x134>)
 800b0b6:	641a      	str	r2, [r3, #64]	; 0x40
 800b0b8:	68fb      	ldr	r3, [r7, #12]
 800b0ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b0bc:	4a3e      	ldr	r2, [pc, #248]	; (800b1b8 <UART_Start_Receive_DMA+0x138>)
 800b0be:	64da      	str	r2, [r3, #76]	; 0x4c
 800b0c0:	68fb      	ldr	r3, [r7, #12]
 800b0c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b0c4:	2200      	movs	r2, #0
 800b0c6:	651a      	str	r2, [r3, #80]	; 0x50
 800b0c8:	f107 0308 	add.w	r3, r7, #8
 800b0cc:	65fb      	str	r3, [r7, #92]	; 0x5c
 800b0ce:	68fb      	ldr	r3, [r7, #12]
 800b0d0:	6b98      	ldr	r0, [r3, #56]	; 0x38
 800b0d2:	68fb      	ldr	r3, [r7, #12]
 800b0d4:	681b      	ldr	r3, [r3, #0]
 800b0d6:	3304      	adds	r3, #4
 800b0d8:	4619      	mov	r1, r3
 800b0da:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800b0dc:	681a      	ldr	r2, [r3, #0]
 800b0de:	88fb      	ldrh	r3, [r7, #6]
 800b0e0:	f7f9 fed6 	bl	8004e90 <HAL_DMA_Start_IT>
 800b0e4:	2300      	movs	r3, #0
 800b0e6:	613b      	str	r3, [r7, #16]
 800b0e8:	68fb      	ldr	r3, [r7, #12]
 800b0ea:	681b      	ldr	r3, [r3, #0]
 800b0ec:	681b      	ldr	r3, [r3, #0]
 800b0ee:	613b      	str	r3, [r7, #16]
 800b0f0:	68fb      	ldr	r3, [r7, #12]
 800b0f2:	681b      	ldr	r3, [r3, #0]
 800b0f4:	685b      	ldr	r3, [r3, #4]
 800b0f6:	613b      	str	r3, [r7, #16]
 800b0f8:	693b      	ldr	r3, [r7, #16]
 800b0fa:	68fb      	ldr	r3, [r7, #12]
 800b0fc:	2200      	movs	r2, #0
 800b0fe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b102:	68fb      	ldr	r3, [r7, #12]
 800b104:	691b      	ldr	r3, [r3, #16]
 800b106:	2b00      	cmp	r3, #0
 800b108:	d019      	beq.n	800b13e <UART_Start_Receive_DMA+0xbe>
 800b10a:	68fb      	ldr	r3, [r7, #12]
 800b10c:	681b      	ldr	r3, [r3, #0]
 800b10e:	330c      	adds	r3, #12
 800b110:	643b      	str	r3, [r7, #64]	; 0x40
 800b112:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800b114:	e853 3f00 	ldrex	r3, [r3]
 800b118:	63fb      	str	r3, [r7, #60]	; 0x3c
 800b11a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800b11c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b120:	65bb      	str	r3, [r7, #88]	; 0x58
 800b122:	68fb      	ldr	r3, [r7, #12]
 800b124:	681b      	ldr	r3, [r3, #0]
 800b126:	330c      	adds	r3, #12
 800b128:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800b12a:	64fa      	str	r2, [r7, #76]	; 0x4c
 800b12c:	64bb      	str	r3, [r7, #72]	; 0x48
 800b12e:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800b130:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800b132:	e841 2300 	strex	r3, r2, [r1]
 800b136:	647b      	str	r3, [r7, #68]	; 0x44
 800b138:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800b13a:	2b00      	cmp	r3, #0
 800b13c:	d1e5      	bne.n	800b10a <UART_Start_Receive_DMA+0x8a>
 800b13e:	68fb      	ldr	r3, [r7, #12]
 800b140:	681b      	ldr	r3, [r3, #0]
 800b142:	3314      	adds	r3, #20
 800b144:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b146:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b148:	e853 3f00 	ldrex	r3, [r3]
 800b14c:	62bb      	str	r3, [r7, #40]	; 0x28
 800b14e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b150:	f043 0301 	orr.w	r3, r3, #1
 800b154:	657b      	str	r3, [r7, #84]	; 0x54
 800b156:	68fb      	ldr	r3, [r7, #12]
 800b158:	681b      	ldr	r3, [r3, #0]
 800b15a:	3314      	adds	r3, #20
 800b15c:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800b15e:	63ba      	str	r2, [r7, #56]	; 0x38
 800b160:	637b      	str	r3, [r7, #52]	; 0x34
 800b162:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800b164:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800b166:	e841 2300 	strex	r3, r2, [r1]
 800b16a:	633b      	str	r3, [r7, #48]	; 0x30
 800b16c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b16e:	2b00      	cmp	r3, #0
 800b170:	d1e5      	bne.n	800b13e <UART_Start_Receive_DMA+0xbe>
 800b172:	68fb      	ldr	r3, [r7, #12]
 800b174:	681b      	ldr	r3, [r3, #0]
 800b176:	3314      	adds	r3, #20
 800b178:	61bb      	str	r3, [r7, #24]
 800b17a:	69bb      	ldr	r3, [r7, #24]
 800b17c:	e853 3f00 	ldrex	r3, [r3]
 800b180:	617b      	str	r3, [r7, #20]
 800b182:	697b      	ldr	r3, [r7, #20]
 800b184:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b188:	653b      	str	r3, [r7, #80]	; 0x50
 800b18a:	68fb      	ldr	r3, [r7, #12]
 800b18c:	681b      	ldr	r3, [r3, #0]
 800b18e:	3314      	adds	r3, #20
 800b190:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800b192:	627a      	str	r2, [r7, #36]	; 0x24
 800b194:	623b      	str	r3, [r7, #32]
 800b196:	6a39      	ldr	r1, [r7, #32]
 800b198:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800b19a:	e841 2300 	strex	r3, r2, [r1]
 800b19e:	61fb      	str	r3, [r7, #28]
 800b1a0:	69fb      	ldr	r3, [r7, #28]
 800b1a2:	2b00      	cmp	r3, #0
 800b1a4:	d1e5      	bne.n	800b172 <UART_Start_Receive_DMA+0xf2>
 800b1a6:	2300      	movs	r3, #0
 800b1a8:	4618      	mov	r0, r3
 800b1aa:	3760      	adds	r7, #96	; 0x60
 800b1ac:	46bd      	mov	sp, r7
 800b1ae:	bd80      	pop	{r7, pc}
 800b1b0:	0800ae8f 	.word	0x0800ae8f
 800b1b4:	0800afb5 	.word	0x0800afb5
 800b1b8:	0800afeb 	.word	0x0800afeb

0800b1bc <UART_EndTxTransfer>:
 800b1bc:	b480      	push	{r7}
 800b1be:	b089      	sub	sp, #36	; 0x24
 800b1c0:	af00      	add	r7, sp, #0
 800b1c2:	6078      	str	r0, [r7, #4]
 800b1c4:	687b      	ldr	r3, [r7, #4]
 800b1c6:	681b      	ldr	r3, [r3, #0]
 800b1c8:	330c      	adds	r3, #12
 800b1ca:	60fb      	str	r3, [r7, #12]
 800b1cc:	68fb      	ldr	r3, [r7, #12]
 800b1ce:	e853 3f00 	ldrex	r3, [r3]
 800b1d2:	60bb      	str	r3, [r7, #8]
 800b1d4:	68bb      	ldr	r3, [r7, #8]
 800b1d6:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800b1da:	61fb      	str	r3, [r7, #28]
 800b1dc:	687b      	ldr	r3, [r7, #4]
 800b1de:	681b      	ldr	r3, [r3, #0]
 800b1e0:	330c      	adds	r3, #12
 800b1e2:	69fa      	ldr	r2, [r7, #28]
 800b1e4:	61ba      	str	r2, [r7, #24]
 800b1e6:	617b      	str	r3, [r7, #20]
 800b1e8:	6979      	ldr	r1, [r7, #20]
 800b1ea:	69ba      	ldr	r2, [r7, #24]
 800b1ec:	e841 2300 	strex	r3, r2, [r1]
 800b1f0:	613b      	str	r3, [r7, #16]
 800b1f2:	693b      	ldr	r3, [r7, #16]
 800b1f4:	2b00      	cmp	r3, #0
 800b1f6:	d1e5      	bne.n	800b1c4 <UART_EndTxTransfer+0x8>
 800b1f8:	687b      	ldr	r3, [r7, #4]
 800b1fa:	2220      	movs	r2, #32
 800b1fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b200:	bf00      	nop
 800b202:	3724      	adds	r7, #36	; 0x24
 800b204:	46bd      	mov	sp, r7
 800b206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b20a:	4770      	bx	lr

0800b20c <UART_EndRxTransfer>:
 800b20c:	b480      	push	{r7}
 800b20e:	b095      	sub	sp, #84	; 0x54
 800b210:	af00      	add	r7, sp, #0
 800b212:	6078      	str	r0, [r7, #4]
 800b214:	687b      	ldr	r3, [r7, #4]
 800b216:	681b      	ldr	r3, [r3, #0]
 800b218:	330c      	adds	r3, #12
 800b21a:	637b      	str	r3, [r7, #52]	; 0x34
 800b21c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b21e:	e853 3f00 	ldrex	r3, [r3]
 800b222:	633b      	str	r3, [r7, #48]	; 0x30
 800b224:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b226:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800b22a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800b22c:	687b      	ldr	r3, [r7, #4]
 800b22e:	681b      	ldr	r3, [r3, #0]
 800b230:	330c      	adds	r3, #12
 800b232:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800b234:	643a      	str	r2, [r7, #64]	; 0x40
 800b236:	63fb      	str	r3, [r7, #60]	; 0x3c
 800b238:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800b23a:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800b23c:	e841 2300 	strex	r3, r2, [r1]
 800b240:	63bb      	str	r3, [r7, #56]	; 0x38
 800b242:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800b244:	2b00      	cmp	r3, #0
 800b246:	d1e5      	bne.n	800b214 <UART_EndRxTransfer+0x8>
 800b248:	687b      	ldr	r3, [r7, #4]
 800b24a:	681b      	ldr	r3, [r3, #0]
 800b24c:	3314      	adds	r3, #20
 800b24e:	623b      	str	r3, [r7, #32]
 800b250:	6a3b      	ldr	r3, [r7, #32]
 800b252:	e853 3f00 	ldrex	r3, [r3]
 800b256:	61fb      	str	r3, [r7, #28]
 800b258:	69fb      	ldr	r3, [r7, #28]
 800b25a:	f023 0301 	bic.w	r3, r3, #1
 800b25e:	64bb      	str	r3, [r7, #72]	; 0x48
 800b260:	687b      	ldr	r3, [r7, #4]
 800b262:	681b      	ldr	r3, [r3, #0]
 800b264:	3314      	adds	r3, #20
 800b266:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800b268:	62fa      	str	r2, [r7, #44]	; 0x2c
 800b26a:	62bb      	str	r3, [r7, #40]	; 0x28
 800b26c:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800b26e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800b270:	e841 2300 	strex	r3, r2, [r1]
 800b274:	627b      	str	r3, [r7, #36]	; 0x24
 800b276:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b278:	2b00      	cmp	r3, #0
 800b27a:	d1e5      	bne.n	800b248 <UART_EndRxTransfer+0x3c>
 800b27c:	687b      	ldr	r3, [r7, #4]
 800b27e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b280:	2b01      	cmp	r3, #1
 800b282:	d119      	bne.n	800b2b8 <UART_EndRxTransfer+0xac>
 800b284:	687b      	ldr	r3, [r7, #4]
 800b286:	681b      	ldr	r3, [r3, #0]
 800b288:	330c      	adds	r3, #12
 800b28a:	60fb      	str	r3, [r7, #12]
 800b28c:	68fb      	ldr	r3, [r7, #12]
 800b28e:	e853 3f00 	ldrex	r3, [r3]
 800b292:	60bb      	str	r3, [r7, #8]
 800b294:	68bb      	ldr	r3, [r7, #8]
 800b296:	f023 0310 	bic.w	r3, r3, #16
 800b29a:	647b      	str	r3, [r7, #68]	; 0x44
 800b29c:	687b      	ldr	r3, [r7, #4]
 800b29e:	681b      	ldr	r3, [r3, #0]
 800b2a0:	330c      	adds	r3, #12
 800b2a2:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800b2a4:	61ba      	str	r2, [r7, #24]
 800b2a6:	617b      	str	r3, [r7, #20]
 800b2a8:	6979      	ldr	r1, [r7, #20]
 800b2aa:	69ba      	ldr	r2, [r7, #24]
 800b2ac:	e841 2300 	strex	r3, r2, [r1]
 800b2b0:	613b      	str	r3, [r7, #16]
 800b2b2:	693b      	ldr	r3, [r7, #16]
 800b2b4:	2b00      	cmp	r3, #0
 800b2b6:	d1e5      	bne.n	800b284 <UART_EndRxTransfer+0x78>
 800b2b8:	687b      	ldr	r3, [r7, #4]
 800b2ba:	2220      	movs	r2, #32
 800b2bc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b2c0:	687b      	ldr	r3, [r7, #4]
 800b2c2:	2200      	movs	r2, #0
 800b2c4:	631a      	str	r2, [r3, #48]	; 0x30
 800b2c6:	bf00      	nop
 800b2c8:	3754      	adds	r7, #84	; 0x54
 800b2ca:	46bd      	mov	sp, r7
 800b2cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2d0:	4770      	bx	lr

0800b2d2 <UART_DMAAbortOnError>:
 800b2d2:	b580      	push	{r7, lr}
 800b2d4:	b084      	sub	sp, #16
 800b2d6:	af00      	add	r7, sp, #0
 800b2d8:	6078      	str	r0, [r7, #4]
 800b2da:	687b      	ldr	r3, [r7, #4]
 800b2dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b2de:	60fb      	str	r3, [r7, #12]
 800b2e0:	68fb      	ldr	r3, [r7, #12]
 800b2e2:	2200      	movs	r2, #0
 800b2e4:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b2e6:	68fb      	ldr	r3, [r7, #12]
 800b2e8:	2200      	movs	r2, #0
 800b2ea:	84da      	strh	r2, [r3, #38]	; 0x26
 800b2ec:	68f8      	ldr	r0, [r7, #12]
 800b2ee:	f7ff fd5d 	bl	800adac <HAL_UART_ErrorCallback>
 800b2f2:	bf00      	nop
 800b2f4:	3710      	adds	r7, #16
 800b2f6:	46bd      	mov	sp, r7
 800b2f8:	bd80      	pop	{r7, pc}

0800b2fa <UART_Transmit_IT>:
 800b2fa:	b480      	push	{r7}
 800b2fc:	b085      	sub	sp, #20
 800b2fe:	af00      	add	r7, sp, #0
 800b300:	6078      	str	r0, [r7, #4]
 800b302:	687b      	ldr	r3, [r7, #4]
 800b304:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b308:	b2db      	uxtb	r3, r3
 800b30a:	2b21      	cmp	r3, #33	; 0x21
 800b30c:	d13e      	bne.n	800b38c <UART_Transmit_IT+0x92>
 800b30e:	687b      	ldr	r3, [r7, #4]
 800b310:	689b      	ldr	r3, [r3, #8]
 800b312:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b316:	d114      	bne.n	800b342 <UART_Transmit_IT+0x48>
 800b318:	687b      	ldr	r3, [r7, #4]
 800b31a:	691b      	ldr	r3, [r3, #16]
 800b31c:	2b00      	cmp	r3, #0
 800b31e:	d110      	bne.n	800b342 <UART_Transmit_IT+0x48>
 800b320:	687b      	ldr	r3, [r7, #4]
 800b322:	6a1b      	ldr	r3, [r3, #32]
 800b324:	60fb      	str	r3, [r7, #12]
 800b326:	68fb      	ldr	r3, [r7, #12]
 800b328:	881b      	ldrh	r3, [r3, #0]
 800b32a:	461a      	mov	r2, r3
 800b32c:	687b      	ldr	r3, [r7, #4]
 800b32e:	681b      	ldr	r3, [r3, #0]
 800b330:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800b334:	605a      	str	r2, [r3, #4]
 800b336:	687b      	ldr	r3, [r7, #4]
 800b338:	6a1b      	ldr	r3, [r3, #32]
 800b33a:	1c9a      	adds	r2, r3, #2
 800b33c:	687b      	ldr	r3, [r7, #4]
 800b33e:	621a      	str	r2, [r3, #32]
 800b340:	e008      	b.n	800b354 <UART_Transmit_IT+0x5a>
 800b342:	687b      	ldr	r3, [r7, #4]
 800b344:	6a1b      	ldr	r3, [r3, #32]
 800b346:	1c59      	adds	r1, r3, #1
 800b348:	687a      	ldr	r2, [r7, #4]
 800b34a:	6211      	str	r1, [r2, #32]
 800b34c:	781a      	ldrb	r2, [r3, #0]
 800b34e:	687b      	ldr	r3, [r7, #4]
 800b350:	681b      	ldr	r3, [r3, #0]
 800b352:	605a      	str	r2, [r3, #4]
 800b354:	687b      	ldr	r3, [r7, #4]
 800b356:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800b358:	b29b      	uxth	r3, r3
 800b35a:	3b01      	subs	r3, #1
 800b35c:	b29b      	uxth	r3, r3
 800b35e:	687a      	ldr	r2, [r7, #4]
 800b360:	4619      	mov	r1, r3
 800b362:	84d1      	strh	r1, [r2, #38]	; 0x26
 800b364:	2b00      	cmp	r3, #0
 800b366:	d10f      	bne.n	800b388 <UART_Transmit_IT+0x8e>
 800b368:	687b      	ldr	r3, [r7, #4]
 800b36a:	681b      	ldr	r3, [r3, #0]
 800b36c:	68da      	ldr	r2, [r3, #12]
 800b36e:	687b      	ldr	r3, [r7, #4]
 800b370:	681b      	ldr	r3, [r3, #0]
 800b372:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800b376:	60da      	str	r2, [r3, #12]
 800b378:	687b      	ldr	r3, [r7, #4]
 800b37a:	681b      	ldr	r3, [r3, #0]
 800b37c:	68da      	ldr	r2, [r3, #12]
 800b37e:	687b      	ldr	r3, [r7, #4]
 800b380:	681b      	ldr	r3, [r3, #0]
 800b382:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800b386:	60da      	str	r2, [r3, #12]
 800b388:	2300      	movs	r3, #0
 800b38a:	e000      	b.n	800b38e <UART_Transmit_IT+0x94>
 800b38c:	2302      	movs	r3, #2
 800b38e:	4618      	mov	r0, r3
 800b390:	3714      	adds	r7, #20
 800b392:	46bd      	mov	sp, r7
 800b394:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b398:	4770      	bx	lr

0800b39a <UART_EndTransmit_IT>:
 800b39a:	b580      	push	{r7, lr}
 800b39c:	b082      	sub	sp, #8
 800b39e:	af00      	add	r7, sp, #0
 800b3a0:	6078      	str	r0, [r7, #4]
 800b3a2:	687b      	ldr	r3, [r7, #4]
 800b3a4:	681b      	ldr	r3, [r3, #0]
 800b3a6:	68da      	ldr	r2, [r3, #12]
 800b3a8:	687b      	ldr	r3, [r7, #4]
 800b3aa:	681b      	ldr	r3, [r3, #0]
 800b3ac:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b3b0:	60da      	str	r2, [r3, #12]
 800b3b2:	687b      	ldr	r3, [r7, #4]
 800b3b4:	2220      	movs	r2, #32
 800b3b6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b3ba:	6878      	ldr	r0, [r7, #4]
 800b3bc:	f7ff fcd8 	bl	800ad70 <HAL_UART_TxCpltCallback>
 800b3c0:	2300      	movs	r3, #0
 800b3c2:	4618      	mov	r0, r3
 800b3c4:	3708      	adds	r7, #8
 800b3c6:	46bd      	mov	sp, r7
 800b3c8:	bd80      	pop	{r7, pc}

0800b3ca <UART_Receive_IT>:
 800b3ca:	b580      	push	{r7, lr}
 800b3cc:	b08c      	sub	sp, #48	; 0x30
 800b3ce:	af00      	add	r7, sp, #0
 800b3d0:	6078      	str	r0, [r7, #4]
 800b3d2:	687b      	ldr	r3, [r7, #4]
 800b3d4:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800b3d8:	b2db      	uxtb	r3, r3
 800b3da:	2b22      	cmp	r3, #34	; 0x22
 800b3dc:	f040 80ab 	bne.w	800b536 <UART_Receive_IT+0x16c>
 800b3e0:	687b      	ldr	r3, [r7, #4]
 800b3e2:	689b      	ldr	r3, [r3, #8]
 800b3e4:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b3e8:	d117      	bne.n	800b41a <UART_Receive_IT+0x50>
 800b3ea:	687b      	ldr	r3, [r7, #4]
 800b3ec:	691b      	ldr	r3, [r3, #16]
 800b3ee:	2b00      	cmp	r3, #0
 800b3f0:	d113      	bne.n	800b41a <UART_Receive_IT+0x50>
 800b3f2:	2300      	movs	r3, #0
 800b3f4:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b3f6:	687b      	ldr	r3, [r7, #4]
 800b3f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b3fa:	62bb      	str	r3, [r7, #40]	; 0x28
 800b3fc:	687b      	ldr	r3, [r7, #4]
 800b3fe:	681b      	ldr	r3, [r3, #0]
 800b400:	685b      	ldr	r3, [r3, #4]
 800b402:	b29b      	uxth	r3, r3
 800b404:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800b408:	b29a      	uxth	r2, r3
 800b40a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b40c:	801a      	strh	r2, [r3, #0]
 800b40e:	687b      	ldr	r3, [r7, #4]
 800b410:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b412:	1c9a      	adds	r2, r3, #2
 800b414:	687b      	ldr	r3, [r7, #4]
 800b416:	629a      	str	r2, [r3, #40]	; 0x28
 800b418:	e026      	b.n	800b468 <UART_Receive_IT+0x9e>
 800b41a:	687b      	ldr	r3, [r7, #4]
 800b41c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b41e:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b420:	2300      	movs	r3, #0
 800b422:	62bb      	str	r3, [r7, #40]	; 0x28
 800b424:	687b      	ldr	r3, [r7, #4]
 800b426:	689b      	ldr	r3, [r3, #8]
 800b428:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b42c:	d007      	beq.n	800b43e <UART_Receive_IT+0x74>
 800b42e:	687b      	ldr	r3, [r7, #4]
 800b430:	689b      	ldr	r3, [r3, #8]
 800b432:	2b00      	cmp	r3, #0
 800b434:	d10a      	bne.n	800b44c <UART_Receive_IT+0x82>
 800b436:	687b      	ldr	r3, [r7, #4]
 800b438:	691b      	ldr	r3, [r3, #16]
 800b43a:	2b00      	cmp	r3, #0
 800b43c:	d106      	bne.n	800b44c <UART_Receive_IT+0x82>
 800b43e:	687b      	ldr	r3, [r7, #4]
 800b440:	681b      	ldr	r3, [r3, #0]
 800b442:	685b      	ldr	r3, [r3, #4]
 800b444:	b2da      	uxtb	r2, r3
 800b446:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b448:	701a      	strb	r2, [r3, #0]
 800b44a:	e008      	b.n	800b45e <UART_Receive_IT+0x94>
 800b44c:	687b      	ldr	r3, [r7, #4]
 800b44e:	681b      	ldr	r3, [r3, #0]
 800b450:	685b      	ldr	r3, [r3, #4]
 800b452:	b2db      	uxtb	r3, r3
 800b454:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800b458:	b2da      	uxtb	r2, r3
 800b45a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b45c:	701a      	strb	r2, [r3, #0]
 800b45e:	687b      	ldr	r3, [r7, #4]
 800b460:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b462:	1c5a      	adds	r2, r3, #1
 800b464:	687b      	ldr	r3, [r7, #4]
 800b466:	629a      	str	r2, [r3, #40]	; 0x28
 800b468:	687b      	ldr	r3, [r7, #4]
 800b46a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b46c:	b29b      	uxth	r3, r3
 800b46e:	3b01      	subs	r3, #1
 800b470:	b29b      	uxth	r3, r3
 800b472:	687a      	ldr	r2, [r7, #4]
 800b474:	4619      	mov	r1, r3
 800b476:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800b478:	2b00      	cmp	r3, #0
 800b47a:	d15a      	bne.n	800b532 <UART_Receive_IT+0x168>
 800b47c:	687b      	ldr	r3, [r7, #4]
 800b47e:	681b      	ldr	r3, [r3, #0]
 800b480:	68da      	ldr	r2, [r3, #12]
 800b482:	687b      	ldr	r3, [r7, #4]
 800b484:	681b      	ldr	r3, [r3, #0]
 800b486:	f022 0220 	bic.w	r2, r2, #32
 800b48a:	60da      	str	r2, [r3, #12]
 800b48c:	687b      	ldr	r3, [r7, #4]
 800b48e:	681b      	ldr	r3, [r3, #0]
 800b490:	68da      	ldr	r2, [r3, #12]
 800b492:	687b      	ldr	r3, [r7, #4]
 800b494:	681b      	ldr	r3, [r3, #0]
 800b496:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800b49a:	60da      	str	r2, [r3, #12]
 800b49c:	687b      	ldr	r3, [r7, #4]
 800b49e:	681b      	ldr	r3, [r3, #0]
 800b4a0:	695a      	ldr	r2, [r3, #20]
 800b4a2:	687b      	ldr	r3, [r7, #4]
 800b4a4:	681b      	ldr	r3, [r3, #0]
 800b4a6:	f022 0201 	bic.w	r2, r2, #1
 800b4aa:	615a      	str	r2, [r3, #20]
 800b4ac:	687b      	ldr	r3, [r7, #4]
 800b4ae:	2220      	movs	r2, #32
 800b4b0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b4b4:	687b      	ldr	r3, [r7, #4]
 800b4b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b4b8:	2b01      	cmp	r3, #1
 800b4ba:	d135      	bne.n	800b528 <UART_Receive_IT+0x15e>
 800b4bc:	687b      	ldr	r3, [r7, #4]
 800b4be:	2200      	movs	r2, #0
 800b4c0:	631a      	str	r2, [r3, #48]	; 0x30
 800b4c2:	687b      	ldr	r3, [r7, #4]
 800b4c4:	681b      	ldr	r3, [r3, #0]
 800b4c6:	330c      	adds	r3, #12
 800b4c8:	617b      	str	r3, [r7, #20]
 800b4ca:	697b      	ldr	r3, [r7, #20]
 800b4cc:	e853 3f00 	ldrex	r3, [r3]
 800b4d0:	613b      	str	r3, [r7, #16]
 800b4d2:	693b      	ldr	r3, [r7, #16]
 800b4d4:	f023 0310 	bic.w	r3, r3, #16
 800b4d8:	627b      	str	r3, [r7, #36]	; 0x24
 800b4da:	687b      	ldr	r3, [r7, #4]
 800b4dc:	681b      	ldr	r3, [r3, #0]
 800b4de:	330c      	adds	r3, #12
 800b4e0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800b4e2:	623a      	str	r2, [r7, #32]
 800b4e4:	61fb      	str	r3, [r7, #28]
 800b4e6:	69f9      	ldr	r1, [r7, #28]
 800b4e8:	6a3a      	ldr	r2, [r7, #32]
 800b4ea:	e841 2300 	strex	r3, r2, [r1]
 800b4ee:	61bb      	str	r3, [r7, #24]
 800b4f0:	69bb      	ldr	r3, [r7, #24]
 800b4f2:	2b00      	cmp	r3, #0
 800b4f4:	d1e5      	bne.n	800b4c2 <UART_Receive_IT+0xf8>
 800b4f6:	687b      	ldr	r3, [r7, #4]
 800b4f8:	681b      	ldr	r3, [r3, #0]
 800b4fa:	681b      	ldr	r3, [r3, #0]
 800b4fc:	f003 0310 	and.w	r3, r3, #16
 800b500:	2b10      	cmp	r3, #16
 800b502:	d10a      	bne.n	800b51a <UART_Receive_IT+0x150>
 800b504:	2300      	movs	r3, #0
 800b506:	60fb      	str	r3, [r7, #12]
 800b508:	687b      	ldr	r3, [r7, #4]
 800b50a:	681b      	ldr	r3, [r3, #0]
 800b50c:	681b      	ldr	r3, [r3, #0]
 800b50e:	60fb      	str	r3, [r7, #12]
 800b510:	687b      	ldr	r3, [r7, #4]
 800b512:	681b      	ldr	r3, [r3, #0]
 800b514:	685b      	ldr	r3, [r3, #4]
 800b516:	60fb      	str	r3, [r7, #12]
 800b518:	68fb      	ldr	r3, [r7, #12]
 800b51a:	687b      	ldr	r3, [r7, #4]
 800b51c:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800b51e:	4619      	mov	r1, r3
 800b520:	6878      	ldr	r0, [r7, #4]
 800b522:	f7ff fc4d 	bl	800adc0 <HAL_UARTEx_RxEventCallback>
 800b526:	e002      	b.n	800b52e <UART_Receive_IT+0x164>
 800b528:	6878      	ldr	r0, [r7, #4]
 800b52a:	f7f8 ff21 	bl	8004370 <HAL_UART_RxCpltCallback>
 800b52e:	2300      	movs	r3, #0
 800b530:	e002      	b.n	800b538 <UART_Receive_IT+0x16e>
 800b532:	2300      	movs	r3, #0
 800b534:	e000      	b.n	800b538 <UART_Receive_IT+0x16e>
 800b536:	2302      	movs	r3, #2
 800b538:	4618      	mov	r0, r3
 800b53a:	3730      	adds	r7, #48	; 0x30
 800b53c:	46bd      	mov	sp, r7
 800b53e:	bd80      	pop	{r7, pc}

0800b540 <UART_SetConfig>:
 800b540:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800b544:	b0c0      	sub	sp, #256	; 0x100
 800b546:	af00      	add	r7, sp, #0
 800b548:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 800b54c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b550:	681b      	ldr	r3, [r3, #0]
 800b552:	691b      	ldr	r3, [r3, #16]
 800b554:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 800b558:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b55c:	68d9      	ldr	r1, [r3, #12]
 800b55e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b562:	681a      	ldr	r2, [r3, #0]
 800b564:	ea40 0301 	orr.w	r3, r0, r1
 800b568:	6113      	str	r3, [r2, #16]
 800b56a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b56e:	689a      	ldr	r2, [r3, #8]
 800b570:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b574:	691b      	ldr	r3, [r3, #16]
 800b576:	431a      	orrs	r2, r3
 800b578:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b57c:	695b      	ldr	r3, [r3, #20]
 800b57e:	431a      	orrs	r2, r3
 800b580:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b584:	69db      	ldr	r3, [r3, #28]
 800b586:	4313      	orrs	r3, r2
 800b588:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800b58c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b590:	681b      	ldr	r3, [r3, #0]
 800b592:	68db      	ldr	r3, [r3, #12]
 800b594:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 800b598:	f021 010c 	bic.w	r1, r1, #12
 800b59c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b5a0:	681a      	ldr	r2, [r3, #0]
 800b5a2:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800b5a6:	430b      	orrs	r3, r1
 800b5a8:	60d3      	str	r3, [r2, #12]
 800b5aa:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b5ae:	681b      	ldr	r3, [r3, #0]
 800b5b0:	695b      	ldr	r3, [r3, #20]
 800b5b2:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800b5b6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b5ba:	6999      	ldr	r1, [r3, #24]
 800b5bc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b5c0:	681a      	ldr	r2, [r3, #0]
 800b5c2:	ea40 0301 	orr.w	r3, r0, r1
 800b5c6:	6153      	str	r3, [r2, #20]
 800b5c8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b5cc:	681a      	ldr	r2, [r3, #0]
 800b5ce:	4b8f      	ldr	r3, [pc, #572]	; (800b80c <UART_SetConfig+0x2cc>)
 800b5d0:	429a      	cmp	r2, r3
 800b5d2:	d005      	beq.n	800b5e0 <UART_SetConfig+0xa0>
 800b5d4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b5d8:	681a      	ldr	r2, [r3, #0]
 800b5da:	4b8d      	ldr	r3, [pc, #564]	; (800b810 <UART_SetConfig+0x2d0>)
 800b5dc:	429a      	cmp	r2, r3
 800b5de:	d104      	bne.n	800b5ea <UART_SetConfig+0xaa>
 800b5e0:	f7fd fa7a 	bl	8008ad8 <HAL_RCC_GetPCLK2Freq>
 800b5e4:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800b5e8:	e003      	b.n	800b5f2 <UART_SetConfig+0xb2>
 800b5ea:	f7fd fa61 	bl	8008ab0 <HAL_RCC_GetPCLK1Freq>
 800b5ee:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800b5f2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b5f6:	69db      	ldr	r3, [r3, #28]
 800b5f8:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800b5fc:	f040 810c 	bne.w	800b818 <UART_SetConfig+0x2d8>
 800b600:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b604:	2200      	movs	r2, #0
 800b606:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800b60a:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 800b60e:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 800b612:	4622      	mov	r2, r4
 800b614:	462b      	mov	r3, r5
 800b616:	1891      	adds	r1, r2, r2
 800b618:	65b9      	str	r1, [r7, #88]	; 0x58
 800b61a:	415b      	adcs	r3, r3
 800b61c:	65fb      	str	r3, [r7, #92]	; 0x5c
 800b61e:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800b622:	4621      	mov	r1, r4
 800b624:	eb12 0801 	adds.w	r8, r2, r1
 800b628:	4629      	mov	r1, r5
 800b62a:	eb43 0901 	adc.w	r9, r3, r1
 800b62e:	f04f 0200 	mov.w	r2, #0
 800b632:	f04f 0300 	mov.w	r3, #0
 800b636:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800b63a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800b63e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800b642:	4690      	mov	r8, r2
 800b644:	4699      	mov	r9, r3
 800b646:	4623      	mov	r3, r4
 800b648:	eb18 0303 	adds.w	r3, r8, r3
 800b64c:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800b650:	462b      	mov	r3, r5
 800b652:	eb49 0303 	adc.w	r3, r9, r3
 800b656:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800b65a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b65e:	685b      	ldr	r3, [r3, #4]
 800b660:	2200      	movs	r2, #0
 800b662:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800b666:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 800b66a:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800b66e:	460b      	mov	r3, r1
 800b670:	18db      	adds	r3, r3, r3
 800b672:	653b      	str	r3, [r7, #80]	; 0x50
 800b674:	4613      	mov	r3, r2
 800b676:	eb42 0303 	adc.w	r3, r2, r3
 800b67a:	657b      	str	r3, [r7, #84]	; 0x54
 800b67c:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800b680:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800b684:	f7f5 fa84 	bl	8000b90 <__aeabi_uldivmod>
 800b688:	4602      	mov	r2, r0
 800b68a:	460b      	mov	r3, r1
 800b68c:	4b61      	ldr	r3, [pc, #388]	; (800b814 <UART_SetConfig+0x2d4>)
 800b68e:	fba3 2302 	umull	r2, r3, r3, r2
 800b692:	095b      	lsrs	r3, r3, #5
 800b694:	011c      	lsls	r4, r3, #4
 800b696:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b69a:	2200      	movs	r2, #0
 800b69c:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800b6a0:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 800b6a4:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 800b6a8:	4642      	mov	r2, r8
 800b6aa:	464b      	mov	r3, r9
 800b6ac:	1891      	adds	r1, r2, r2
 800b6ae:	64b9      	str	r1, [r7, #72]	; 0x48
 800b6b0:	415b      	adcs	r3, r3
 800b6b2:	64fb      	str	r3, [r7, #76]	; 0x4c
 800b6b4:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800b6b8:	4641      	mov	r1, r8
 800b6ba:	eb12 0a01 	adds.w	sl, r2, r1
 800b6be:	4649      	mov	r1, r9
 800b6c0:	eb43 0b01 	adc.w	fp, r3, r1
 800b6c4:	f04f 0200 	mov.w	r2, #0
 800b6c8:	f04f 0300 	mov.w	r3, #0
 800b6cc:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800b6d0:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800b6d4:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800b6d8:	4692      	mov	sl, r2
 800b6da:	469b      	mov	fp, r3
 800b6dc:	4643      	mov	r3, r8
 800b6de:	eb1a 0303 	adds.w	r3, sl, r3
 800b6e2:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800b6e6:	464b      	mov	r3, r9
 800b6e8:	eb4b 0303 	adc.w	r3, fp, r3
 800b6ec:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 800b6f0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b6f4:	685b      	ldr	r3, [r3, #4]
 800b6f6:	2200      	movs	r2, #0
 800b6f8:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800b6fc:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 800b700:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800b704:	460b      	mov	r3, r1
 800b706:	18db      	adds	r3, r3, r3
 800b708:	643b      	str	r3, [r7, #64]	; 0x40
 800b70a:	4613      	mov	r3, r2
 800b70c:	eb42 0303 	adc.w	r3, r2, r3
 800b710:	647b      	str	r3, [r7, #68]	; 0x44
 800b712:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800b716:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800b71a:	f7f5 fa39 	bl	8000b90 <__aeabi_uldivmod>
 800b71e:	4602      	mov	r2, r0
 800b720:	460b      	mov	r3, r1
 800b722:	4611      	mov	r1, r2
 800b724:	4b3b      	ldr	r3, [pc, #236]	; (800b814 <UART_SetConfig+0x2d4>)
 800b726:	fba3 2301 	umull	r2, r3, r3, r1
 800b72a:	095b      	lsrs	r3, r3, #5
 800b72c:	2264      	movs	r2, #100	; 0x64
 800b72e:	fb02 f303 	mul.w	r3, r2, r3
 800b732:	1acb      	subs	r3, r1, r3
 800b734:	00db      	lsls	r3, r3, #3
 800b736:	f103 0232 	add.w	r2, r3, #50	; 0x32
 800b73a:	4b36      	ldr	r3, [pc, #216]	; (800b814 <UART_SetConfig+0x2d4>)
 800b73c:	fba3 2302 	umull	r2, r3, r3, r2
 800b740:	095b      	lsrs	r3, r3, #5
 800b742:	005b      	lsls	r3, r3, #1
 800b744:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800b748:	441c      	add	r4, r3
 800b74a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b74e:	2200      	movs	r2, #0
 800b750:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800b754:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 800b758:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 800b75c:	4642      	mov	r2, r8
 800b75e:	464b      	mov	r3, r9
 800b760:	1891      	adds	r1, r2, r2
 800b762:	63b9      	str	r1, [r7, #56]	; 0x38
 800b764:	415b      	adcs	r3, r3
 800b766:	63fb      	str	r3, [r7, #60]	; 0x3c
 800b768:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800b76c:	4641      	mov	r1, r8
 800b76e:	1851      	adds	r1, r2, r1
 800b770:	6339      	str	r1, [r7, #48]	; 0x30
 800b772:	4649      	mov	r1, r9
 800b774:	414b      	adcs	r3, r1
 800b776:	637b      	str	r3, [r7, #52]	; 0x34
 800b778:	f04f 0200 	mov.w	r2, #0
 800b77c:	f04f 0300 	mov.w	r3, #0
 800b780:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 800b784:	4659      	mov	r1, fp
 800b786:	00cb      	lsls	r3, r1, #3
 800b788:	4651      	mov	r1, sl
 800b78a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800b78e:	4651      	mov	r1, sl
 800b790:	00ca      	lsls	r2, r1, #3
 800b792:	4610      	mov	r0, r2
 800b794:	4619      	mov	r1, r3
 800b796:	4603      	mov	r3, r0
 800b798:	4642      	mov	r2, r8
 800b79a:	189b      	adds	r3, r3, r2
 800b79c:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800b7a0:	464b      	mov	r3, r9
 800b7a2:	460a      	mov	r2, r1
 800b7a4:	eb42 0303 	adc.w	r3, r2, r3
 800b7a8:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800b7ac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b7b0:	685b      	ldr	r3, [r3, #4]
 800b7b2:	2200      	movs	r2, #0
 800b7b4:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800b7b8:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800b7bc:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 800b7c0:	460b      	mov	r3, r1
 800b7c2:	18db      	adds	r3, r3, r3
 800b7c4:	62bb      	str	r3, [r7, #40]	; 0x28
 800b7c6:	4613      	mov	r3, r2
 800b7c8:	eb42 0303 	adc.w	r3, r2, r3
 800b7cc:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b7ce:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800b7d2:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800b7d6:	f7f5 f9db 	bl	8000b90 <__aeabi_uldivmod>
 800b7da:	4602      	mov	r2, r0
 800b7dc:	460b      	mov	r3, r1
 800b7de:	4b0d      	ldr	r3, [pc, #52]	; (800b814 <UART_SetConfig+0x2d4>)
 800b7e0:	fba3 1302 	umull	r1, r3, r3, r2
 800b7e4:	095b      	lsrs	r3, r3, #5
 800b7e6:	2164      	movs	r1, #100	; 0x64
 800b7e8:	fb01 f303 	mul.w	r3, r1, r3
 800b7ec:	1ad3      	subs	r3, r2, r3
 800b7ee:	00db      	lsls	r3, r3, #3
 800b7f0:	3332      	adds	r3, #50	; 0x32
 800b7f2:	4a08      	ldr	r2, [pc, #32]	; (800b814 <UART_SetConfig+0x2d4>)
 800b7f4:	fba2 2303 	umull	r2, r3, r2, r3
 800b7f8:	095b      	lsrs	r3, r3, #5
 800b7fa:	f003 0207 	and.w	r2, r3, #7
 800b7fe:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b802:	681b      	ldr	r3, [r3, #0]
 800b804:	4422      	add	r2, r4
 800b806:	609a      	str	r2, [r3, #8]
 800b808:	e105      	b.n	800ba16 <UART_SetConfig+0x4d6>
 800b80a:	bf00      	nop
 800b80c:	40011000 	.word	0x40011000
 800b810:	40011400 	.word	0x40011400
 800b814:	51eb851f 	.word	0x51eb851f
 800b818:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b81c:	2200      	movs	r2, #0
 800b81e:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800b822:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800b826:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 800b82a:	4642      	mov	r2, r8
 800b82c:	464b      	mov	r3, r9
 800b82e:	1891      	adds	r1, r2, r2
 800b830:	6239      	str	r1, [r7, #32]
 800b832:	415b      	adcs	r3, r3
 800b834:	627b      	str	r3, [r7, #36]	; 0x24
 800b836:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800b83a:	4641      	mov	r1, r8
 800b83c:	1854      	adds	r4, r2, r1
 800b83e:	4649      	mov	r1, r9
 800b840:	eb43 0501 	adc.w	r5, r3, r1
 800b844:	f04f 0200 	mov.w	r2, #0
 800b848:	f04f 0300 	mov.w	r3, #0
 800b84c:	00eb      	lsls	r3, r5, #3
 800b84e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800b852:	00e2      	lsls	r2, r4, #3
 800b854:	4614      	mov	r4, r2
 800b856:	461d      	mov	r5, r3
 800b858:	4643      	mov	r3, r8
 800b85a:	18e3      	adds	r3, r4, r3
 800b85c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800b860:	464b      	mov	r3, r9
 800b862:	eb45 0303 	adc.w	r3, r5, r3
 800b866:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800b86a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b86e:	685b      	ldr	r3, [r3, #4]
 800b870:	2200      	movs	r2, #0
 800b872:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800b876:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800b87a:	f04f 0200 	mov.w	r2, #0
 800b87e:	f04f 0300 	mov.w	r3, #0
 800b882:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800b886:	4629      	mov	r1, r5
 800b888:	008b      	lsls	r3, r1, #2
 800b88a:	4621      	mov	r1, r4
 800b88c:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800b890:	4621      	mov	r1, r4
 800b892:	008a      	lsls	r2, r1, #2
 800b894:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 800b898:	f7f5 f97a 	bl	8000b90 <__aeabi_uldivmod>
 800b89c:	4602      	mov	r2, r0
 800b89e:	460b      	mov	r3, r1
 800b8a0:	4b60      	ldr	r3, [pc, #384]	; (800ba24 <UART_SetConfig+0x4e4>)
 800b8a2:	fba3 2302 	umull	r2, r3, r3, r2
 800b8a6:	095b      	lsrs	r3, r3, #5
 800b8a8:	011c      	lsls	r4, r3, #4
 800b8aa:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b8ae:	2200      	movs	r2, #0
 800b8b0:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800b8b4:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800b8b8:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 800b8bc:	4642      	mov	r2, r8
 800b8be:	464b      	mov	r3, r9
 800b8c0:	1891      	adds	r1, r2, r2
 800b8c2:	61b9      	str	r1, [r7, #24]
 800b8c4:	415b      	adcs	r3, r3
 800b8c6:	61fb      	str	r3, [r7, #28]
 800b8c8:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800b8cc:	4641      	mov	r1, r8
 800b8ce:	1851      	adds	r1, r2, r1
 800b8d0:	6139      	str	r1, [r7, #16]
 800b8d2:	4649      	mov	r1, r9
 800b8d4:	414b      	adcs	r3, r1
 800b8d6:	617b      	str	r3, [r7, #20]
 800b8d8:	f04f 0200 	mov.w	r2, #0
 800b8dc:	f04f 0300 	mov.w	r3, #0
 800b8e0:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800b8e4:	4659      	mov	r1, fp
 800b8e6:	00cb      	lsls	r3, r1, #3
 800b8e8:	4651      	mov	r1, sl
 800b8ea:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800b8ee:	4651      	mov	r1, sl
 800b8f0:	00ca      	lsls	r2, r1, #3
 800b8f2:	4610      	mov	r0, r2
 800b8f4:	4619      	mov	r1, r3
 800b8f6:	4603      	mov	r3, r0
 800b8f8:	4642      	mov	r2, r8
 800b8fa:	189b      	adds	r3, r3, r2
 800b8fc:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800b900:	464b      	mov	r3, r9
 800b902:	460a      	mov	r2, r1
 800b904:	eb42 0303 	adc.w	r3, r2, r3
 800b908:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800b90c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b910:	685b      	ldr	r3, [r3, #4]
 800b912:	2200      	movs	r2, #0
 800b914:	67bb      	str	r3, [r7, #120]	; 0x78
 800b916:	67fa      	str	r2, [r7, #124]	; 0x7c
 800b918:	f04f 0200 	mov.w	r2, #0
 800b91c:	f04f 0300 	mov.w	r3, #0
 800b920:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 800b924:	4649      	mov	r1, r9
 800b926:	008b      	lsls	r3, r1, #2
 800b928:	4641      	mov	r1, r8
 800b92a:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800b92e:	4641      	mov	r1, r8
 800b930:	008a      	lsls	r2, r1, #2
 800b932:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800b936:	f7f5 f92b 	bl	8000b90 <__aeabi_uldivmod>
 800b93a:	4602      	mov	r2, r0
 800b93c:	460b      	mov	r3, r1
 800b93e:	4b39      	ldr	r3, [pc, #228]	; (800ba24 <UART_SetConfig+0x4e4>)
 800b940:	fba3 1302 	umull	r1, r3, r3, r2
 800b944:	095b      	lsrs	r3, r3, #5
 800b946:	2164      	movs	r1, #100	; 0x64
 800b948:	fb01 f303 	mul.w	r3, r1, r3
 800b94c:	1ad3      	subs	r3, r2, r3
 800b94e:	011b      	lsls	r3, r3, #4
 800b950:	3332      	adds	r3, #50	; 0x32
 800b952:	4a34      	ldr	r2, [pc, #208]	; (800ba24 <UART_SetConfig+0x4e4>)
 800b954:	fba2 2303 	umull	r2, r3, r2, r3
 800b958:	095b      	lsrs	r3, r3, #5
 800b95a:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800b95e:	441c      	add	r4, r3
 800b960:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b964:	2200      	movs	r2, #0
 800b966:	673b      	str	r3, [r7, #112]	; 0x70
 800b968:	677a      	str	r2, [r7, #116]	; 0x74
 800b96a:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 800b96e:	4642      	mov	r2, r8
 800b970:	464b      	mov	r3, r9
 800b972:	1891      	adds	r1, r2, r2
 800b974:	60b9      	str	r1, [r7, #8]
 800b976:	415b      	adcs	r3, r3
 800b978:	60fb      	str	r3, [r7, #12]
 800b97a:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800b97e:	4641      	mov	r1, r8
 800b980:	1851      	adds	r1, r2, r1
 800b982:	6039      	str	r1, [r7, #0]
 800b984:	4649      	mov	r1, r9
 800b986:	414b      	adcs	r3, r1
 800b988:	607b      	str	r3, [r7, #4]
 800b98a:	f04f 0200 	mov.w	r2, #0
 800b98e:	f04f 0300 	mov.w	r3, #0
 800b992:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800b996:	4659      	mov	r1, fp
 800b998:	00cb      	lsls	r3, r1, #3
 800b99a:	4651      	mov	r1, sl
 800b99c:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800b9a0:	4651      	mov	r1, sl
 800b9a2:	00ca      	lsls	r2, r1, #3
 800b9a4:	4610      	mov	r0, r2
 800b9a6:	4619      	mov	r1, r3
 800b9a8:	4603      	mov	r3, r0
 800b9aa:	4642      	mov	r2, r8
 800b9ac:	189b      	adds	r3, r3, r2
 800b9ae:	66bb      	str	r3, [r7, #104]	; 0x68
 800b9b0:	464b      	mov	r3, r9
 800b9b2:	460a      	mov	r2, r1
 800b9b4:	eb42 0303 	adc.w	r3, r2, r3
 800b9b8:	66fb      	str	r3, [r7, #108]	; 0x6c
 800b9ba:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b9be:	685b      	ldr	r3, [r3, #4]
 800b9c0:	2200      	movs	r2, #0
 800b9c2:	663b      	str	r3, [r7, #96]	; 0x60
 800b9c4:	667a      	str	r2, [r7, #100]	; 0x64
 800b9c6:	f04f 0200 	mov.w	r2, #0
 800b9ca:	f04f 0300 	mov.w	r3, #0
 800b9ce:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 800b9d2:	4649      	mov	r1, r9
 800b9d4:	008b      	lsls	r3, r1, #2
 800b9d6:	4641      	mov	r1, r8
 800b9d8:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800b9dc:	4641      	mov	r1, r8
 800b9de:	008a      	lsls	r2, r1, #2
 800b9e0:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800b9e4:	f7f5 f8d4 	bl	8000b90 <__aeabi_uldivmod>
 800b9e8:	4602      	mov	r2, r0
 800b9ea:	460b      	mov	r3, r1
 800b9ec:	4b0d      	ldr	r3, [pc, #52]	; (800ba24 <UART_SetConfig+0x4e4>)
 800b9ee:	fba3 1302 	umull	r1, r3, r3, r2
 800b9f2:	095b      	lsrs	r3, r3, #5
 800b9f4:	2164      	movs	r1, #100	; 0x64
 800b9f6:	fb01 f303 	mul.w	r3, r1, r3
 800b9fa:	1ad3      	subs	r3, r2, r3
 800b9fc:	011b      	lsls	r3, r3, #4
 800b9fe:	3332      	adds	r3, #50	; 0x32
 800ba00:	4a08      	ldr	r2, [pc, #32]	; (800ba24 <UART_SetConfig+0x4e4>)
 800ba02:	fba2 2303 	umull	r2, r3, r2, r3
 800ba06:	095b      	lsrs	r3, r3, #5
 800ba08:	f003 020f 	and.w	r2, r3, #15
 800ba0c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ba10:	681b      	ldr	r3, [r3, #0]
 800ba12:	4422      	add	r2, r4
 800ba14:	609a      	str	r2, [r3, #8]
 800ba16:	bf00      	nop
 800ba18:	f507 7780 	add.w	r7, r7, #256	; 0x100
 800ba1c:	46bd      	mov	sp, r7
 800ba1e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800ba22:	bf00      	nop
 800ba24:	51eb851f 	.word	0x51eb851f

0800ba28 <__errno>:
 800ba28:	4b01      	ldr	r3, [pc, #4]	; (800ba30 <__errno+0x8>)
 800ba2a:	6818      	ldr	r0, [r3, #0]
 800ba2c:	4770      	bx	lr
 800ba2e:	bf00      	nop
 800ba30:	20000144 	.word	0x20000144

0800ba34 <__libc_init_array>:
 800ba34:	b570      	push	{r4, r5, r6, lr}
 800ba36:	4d0d      	ldr	r5, [pc, #52]	; (800ba6c <__libc_init_array+0x38>)
 800ba38:	4c0d      	ldr	r4, [pc, #52]	; (800ba70 <__libc_init_array+0x3c>)
 800ba3a:	1b64      	subs	r4, r4, r5
 800ba3c:	10a4      	asrs	r4, r4, #2
 800ba3e:	2600      	movs	r6, #0
 800ba40:	42a6      	cmp	r6, r4
 800ba42:	d109      	bne.n	800ba58 <__libc_init_array+0x24>
 800ba44:	4d0b      	ldr	r5, [pc, #44]	; (800ba74 <__libc_init_array+0x40>)
 800ba46:	4c0c      	ldr	r4, [pc, #48]	; (800ba78 <__libc_init_array+0x44>)
 800ba48:	f000 f8fe 	bl	800bc48 <_init>
 800ba4c:	1b64      	subs	r4, r4, r5
 800ba4e:	10a4      	asrs	r4, r4, #2
 800ba50:	2600      	movs	r6, #0
 800ba52:	42a6      	cmp	r6, r4
 800ba54:	d105      	bne.n	800ba62 <__libc_init_array+0x2e>
 800ba56:	bd70      	pop	{r4, r5, r6, pc}
 800ba58:	f855 3b04 	ldr.w	r3, [r5], #4
 800ba5c:	4798      	blx	r3
 800ba5e:	3601      	adds	r6, #1
 800ba60:	e7ee      	b.n	800ba40 <__libc_init_array+0xc>
 800ba62:	f855 3b04 	ldr.w	r3, [r5], #4
 800ba66:	4798      	blx	r3
 800ba68:	3601      	adds	r6, #1
 800ba6a:	e7f2      	b.n	800ba52 <__libc_init_array+0x1e>
 800ba6c:	0800bc88 	.word	0x0800bc88
 800ba70:	0800bc88 	.word	0x0800bc88
 800ba74:	0800bc88 	.word	0x0800bc88
 800ba78:	0800bc8c 	.word	0x0800bc8c

0800ba7c <memset>:
 800ba7c:	4402      	add	r2, r0
 800ba7e:	4603      	mov	r3, r0
 800ba80:	4293      	cmp	r3, r2
 800ba82:	d100      	bne.n	800ba86 <memset+0xa>
 800ba84:	4770      	bx	lr
 800ba86:	f803 1b01 	strb.w	r1, [r3], #1
 800ba8a:	e7f9      	b.n	800ba80 <memset+0x4>

0800ba8c <sqrt>:
 800ba8c:	b538      	push	{r3, r4, r5, lr}
 800ba8e:	ed2d 8b02 	vpush	{d8}
 800ba92:	ec55 4b10 	vmov	r4, r5, d0
 800ba96:	f000 f825 	bl	800bae4 <__ieee754_sqrt>
 800ba9a:	4622      	mov	r2, r4
 800ba9c:	462b      	mov	r3, r5
 800ba9e:	4620      	mov	r0, r4
 800baa0:	4629      	mov	r1, r5
 800baa2:	eeb0 8a40 	vmov.f32	s16, s0
 800baa6:	eef0 8a60 	vmov.f32	s17, s1
 800baaa:	f7f4 ffeb 	bl	8000a84 <__aeabi_dcmpun>
 800baae:	b990      	cbnz	r0, 800bad6 <sqrt+0x4a>
 800bab0:	2200      	movs	r2, #0
 800bab2:	2300      	movs	r3, #0
 800bab4:	4620      	mov	r0, r4
 800bab6:	4629      	mov	r1, r5
 800bab8:	f7f4 ffbc 	bl	8000a34 <__aeabi_dcmplt>
 800babc:	b158      	cbz	r0, 800bad6 <sqrt+0x4a>
 800babe:	f7ff ffb3 	bl	800ba28 <__errno>
 800bac2:	2321      	movs	r3, #33	; 0x21
 800bac4:	6003      	str	r3, [r0, #0]
 800bac6:	2200      	movs	r2, #0
 800bac8:	2300      	movs	r3, #0
 800baca:	4610      	mov	r0, r2
 800bacc:	4619      	mov	r1, r3
 800bace:	f7f4 fe69 	bl	80007a4 <__aeabi_ddiv>
 800bad2:	ec41 0b18 	vmov	d8, r0, r1
 800bad6:	eeb0 0a48 	vmov.f32	s0, s16
 800bada:	eef0 0a68 	vmov.f32	s1, s17
 800bade:	ecbd 8b02 	vpop	{d8}
 800bae2:	bd38      	pop	{r3, r4, r5, pc}

0800bae4 <__ieee754_sqrt>:
 800bae4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bae8:	ec55 4b10 	vmov	r4, r5, d0
 800baec:	4e55      	ldr	r6, [pc, #340]	; (800bc44 <__ieee754_sqrt+0x160>)
 800baee:	43ae      	bics	r6, r5
 800baf0:	ee10 0a10 	vmov	r0, s0
 800baf4:	ee10 3a10 	vmov	r3, s0
 800baf8:	462a      	mov	r2, r5
 800bafa:	4629      	mov	r1, r5
 800bafc:	d110      	bne.n	800bb20 <__ieee754_sqrt+0x3c>
 800bafe:	ee10 2a10 	vmov	r2, s0
 800bb02:	462b      	mov	r3, r5
 800bb04:	f7f4 fd24 	bl	8000550 <__aeabi_dmul>
 800bb08:	4602      	mov	r2, r0
 800bb0a:	460b      	mov	r3, r1
 800bb0c:	4620      	mov	r0, r4
 800bb0e:	4629      	mov	r1, r5
 800bb10:	f7f4 fb68 	bl	80001e4 <__adddf3>
 800bb14:	4604      	mov	r4, r0
 800bb16:	460d      	mov	r5, r1
 800bb18:	ec45 4b10 	vmov	d0, r4, r5
 800bb1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bb20:	2d00      	cmp	r5, #0
 800bb22:	dc10      	bgt.n	800bb46 <__ieee754_sqrt+0x62>
 800bb24:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800bb28:	4330      	orrs	r0, r6
 800bb2a:	d0f5      	beq.n	800bb18 <__ieee754_sqrt+0x34>
 800bb2c:	b15d      	cbz	r5, 800bb46 <__ieee754_sqrt+0x62>
 800bb2e:	ee10 2a10 	vmov	r2, s0
 800bb32:	462b      	mov	r3, r5
 800bb34:	ee10 0a10 	vmov	r0, s0
 800bb38:	f7f4 fb52 	bl	80001e0 <__aeabi_dsub>
 800bb3c:	4602      	mov	r2, r0
 800bb3e:	460b      	mov	r3, r1
 800bb40:	f7f4 fe30 	bl	80007a4 <__aeabi_ddiv>
 800bb44:	e7e6      	b.n	800bb14 <__ieee754_sqrt+0x30>
 800bb46:	1512      	asrs	r2, r2, #20
 800bb48:	d074      	beq.n	800bc34 <__ieee754_sqrt+0x150>
 800bb4a:	07d4      	lsls	r4, r2, #31
 800bb4c:	f3c1 0113 	ubfx	r1, r1, #0, #20
 800bb50:	f2a2 37ff 	subw	r7, r2, #1023	; 0x3ff
 800bb54:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800bb58:	bf5e      	ittt	pl
 800bb5a:	0fda      	lsrpl	r2, r3, #31
 800bb5c:	005b      	lslpl	r3, r3, #1
 800bb5e:	eb02 0141 	addpl.w	r1, r2, r1, lsl #1
 800bb62:	2400      	movs	r4, #0
 800bb64:	0fda      	lsrs	r2, r3, #31
 800bb66:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 800bb6a:	107f      	asrs	r7, r7, #1
 800bb6c:	005b      	lsls	r3, r3, #1
 800bb6e:	2516      	movs	r5, #22
 800bb70:	4620      	mov	r0, r4
 800bb72:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 800bb76:	1886      	adds	r6, r0, r2
 800bb78:	428e      	cmp	r6, r1
 800bb7a:	bfde      	ittt	le
 800bb7c:	1b89      	suble	r1, r1, r6
 800bb7e:	18b0      	addle	r0, r6, r2
 800bb80:	18a4      	addle	r4, r4, r2
 800bb82:	0049      	lsls	r1, r1, #1
 800bb84:	3d01      	subs	r5, #1
 800bb86:	eb01 71d3 	add.w	r1, r1, r3, lsr #31
 800bb8a:	ea4f 0252 	mov.w	r2, r2, lsr #1
 800bb8e:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800bb92:	d1f0      	bne.n	800bb76 <__ieee754_sqrt+0x92>
 800bb94:	462a      	mov	r2, r5
 800bb96:	f04f 0e20 	mov.w	lr, #32
 800bb9a:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 800bb9e:	4281      	cmp	r1, r0
 800bba0:	eb06 0c05 	add.w	ip, r6, r5
 800bba4:	dc02      	bgt.n	800bbac <__ieee754_sqrt+0xc8>
 800bba6:	d113      	bne.n	800bbd0 <__ieee754_sqrt+0xec>
 800bba8:	459c      	cmp	ip, r3
 800bbaa:	d811      	bhi.n	800bbd0 <__ieee754_sqrt+0xec>
 800bbac:	f1bc 0f00 	cmp.w	ip, #0
 800bbb0:	eb0c 0506 	add.w	r5, ip, r6
 800bbb4:	da43      	bge.n	800bc3e <__ieee754_sqrt+0x15a>
 800bbb6:	2d00      	cmp	r5, #0
 800bbb8:	db41      	blt.n	800bc3e <__ieee754_sqrt+0x15a>
 800bbba:	f100 0801 	add.w	r8, r0, #1
 800bbbe:	1a09      	subs	r1, r1, r0
 800bbc0:	459c      	cmp	ip, r3
 800bbc2:	bf88      	it	hi
 800bbc4:	f101 31ff 	addhi.w	r1, r1, #4294967295
 800bbc8:	eba3 030c 	sub.w	r3, r3, ip
 800bbcc:	4432      	add	r2, r6
 800bbce:	4640      	mov	r0, r8
 800bbd0:	ea4f 7cd3 	mov.w	ip, r3, lsr #31
 800bbd4:	f1be 0e01 	subs.w	lr, lr, #1
 800bbd8:	eb0c 0141 	add.w	r1, ip, r1, lsl #1
 800bbdc:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800bbe0:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800bbe4:	d1db      	bne.n	800bb9e <__ieee754_sqrt+0xba>
 800bbe6:	430b      	orrs	r3, r1
 800bbe8:	d006      	beq.n	800bbf8 <__ieee754_sqrt+0x114>
 800bbea:	1c50      	adds	r0, r2, #1
 800bbec:	bf13      	iteet	ne
 800bbee:	3201      	addne	r2, #1
 800bbf0:	3401      	addeq	r4, #1
 800bbf2:	4672      	moveq	r2, lr
 800bbf4:	f022 0201 	bicne.w	r2, r2, #1
 800bbf8:	1063      	asrs	r3, r4, #1
 800bbfa:	0852      	lsrs	r2, r2, #1
 800bbfc:	07e1      	lsls	r1, r4, #31
 800bbfe:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 800bc02:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 800bc06:	bf48      	it	mi
 800bc08:	f042 4200 	orrmi.w	r2, r2, #2147483648	; 0x80000000
 800bc0c:	eb03 5507 	add.w	r5, r3, r7, lsl #20
 800bc10:	4614      	mov	r4, r2
 800bc12:	e781      	b.n	800bb18 <__ieee754_sqrt+0x34>
 800bc14:	0ad9      	lsrs	r1, r3, #11
 800bc16:	3815      	subs	r0, #21
 800bc18:	055b      	lsls	r3, r3, #21
 800bc1a:	2900      	cmp	r1, #0
 800bc1c:	d0fa      	beq.n	800bc14 <__ieee754_sqrt+0x130>
 800bc1e:	02cd      	lsls	r5, r1, #11
 800bc20:	d50a      	bpl.n	800bc38 <__ieee754_sqrt+0x154>
 800bc22:	f1c2 0420 	rsb	r4, r2, #32
 800bc26:	fa23 f404 	lsr.w	r4, r3, r4
 800bc2a:	1e55      	subs	r5, r2, #1
 800bc2c:	4093      	lsls	r3, r2
 800bc2e:	4321      	orrs	r1, r4
 800bc30:	1b42      	subs	r2, r0, r5
 800bc32:	e78a      	b.n	800bb4a <__ieee754_sqrt+0x66>
 800bc34:	4610      	mov	r0, r2
 800bc36:	e7f0      	b.n	800bc1a <__ieee754_sqrt+0x136>
 800bc38:	0049      	lsls	r1, r1, #1
 800bc3a:	3201      	adds	r2, #1
 800bc3c:	e7ef      	b.n	800bc1e <__ieee754_sqrt+0x13a>
 800bc3e:	4680      	mov	r8, r0
 800bc40:	e7bd      	b.n	800bbbe <__ieee754_sqrt+0xda>
 800bc42:	bf00      	nop
 800bc44:	7ff00000 	.word	0x7ff00000

0800bc48 <_init>:
 800bc48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bc4a:	bf00      	nop
 800bc4c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800bc4e:	bc08      	pop	{r3}
 800bc50:	469e      	mov	lr, r3
 800bc52:	4770      	bx	lr

0800bc54 <_fini>:
 800bc54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bc56:	bf00      	nop
 800bc58:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800bc5a:	bc08      	pop	{r3}
 800bc5c:	469e      	mov	lr, r3
 800bc5e:	4770      	bx	lr
