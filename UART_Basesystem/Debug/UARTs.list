
UARTs.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000bb60  08000198  08000198  00010198  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000020  0800bcf8  0800bcf8  0001bcf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800bd18  0800bd18  000201b0  2**0
                  CONTENTS
  4 .ARM          00000008  0800bd18  0800bd18  0001bd18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800bd20  0800bd20  000201b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800bd20  0800bd20  0001bd20  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800bd24  0800bd24  0001bd24  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001b0  20000000  0800bd28  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000658  200001b0  0800bed8  000201b0  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  20000808  0800bed8  00020808  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201b0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00013b38  00000000  00000000  000201e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002185  00000000  00000000  00033d18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000011f8  00000000  00000000  00035ea0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00001158  00000000  00000000  00037098  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000170e6  00000000  00000000  000381f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00014570  00000000  00000000  0004f2d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00093247  00000000  00000000  00063846  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000f6a8d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000050a0  00000000  00000000  000f6ae0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	200001b0 	.word	0x200001b0
 80001b4:	00000000 	.word	0x00000000
 80001b8:	0800bce0 	.word	0x0800bce0

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	200001b4 	.word	0x200001b4
 80001d4:	0800bce0 	.word	0x0800bce0

080001d8 <__aeabi_drsub>:
 80001d8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001dc:	e002      	b.n	80001e4 <__adddf3>
 80001de:	bf00      	nop

080001e0 <__aeabi_dsub>:
 80001e0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001e4 <__adddf3>:
 80001e4:	b530      	push	{r4, r5, lr}
 80001e6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001ea:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001ee:	ea94 0f05 	teq	r4, r5
 80001f2:	bf08      	it	eq
 80001f4:	ea90 0f02 	teqeq	r0, r2
 80001f8:	bf1f      	itttt	ne
 80001fa:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001fe:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000202:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000206:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800020a:	f000 80e2 	beq.w	80003d2 <__adddf3+0x1ee>
 800020e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000212:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000216:	bfb8      	it	lt
 8000218:	426d      	neglt	r5, r5
 800021a:	dd0c      	ble.n	8000236 <__adddf3+0x52>
 800021c:	442c      	add	r4, r5
 800021e:	ea80 0202 	eor.w	r2, r0, r2
 8000222:	ea81 0303 	eor.w	r3, r1, r3
 8000226:	ea82 0000 	eor.w	r0, r2, r0
 800022a:	ea83 0101 	eor.w	r1, r3, r1
 800022e:	ea80 0202 	eor.w	r2, r0, r2
 8000232:	ea81 0303 	eor.w	r3, r1, r3
 8000236:	2d36      	cmp	r5, #54	; 0x36
 8000238:	bf88      	it	hi
 800023a:	bd30      	pophi	{r4, r5, pc}
 800023c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000240:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000244:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000248:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800024c:	d002      	beq.n	8000254 <__adddf3+0x70>
 800024e:	4240      	negs	r0, r0
 8000250:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000254:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000258:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800025c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000260:	d002      	beq.n	8000268 <__adddf3+0x84>
 8000262:	4252      	negs	r2, r2
 8000264:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000268:	ea94 0f05 	teq	r4, r5
 800026c:	f000 80a7 	beq.w	80003be <__adddf3+0x1da>
 8000270:	f1a4 0401 	sub.w	r4, r4, #1
 8000274:	f1d5 0e20 	rsbs	lr, r5, #32
 8000278:	db0d      	blt.n	8000296 <__adddf3+0xb2>
 800027a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800027e:	fa22 f205 	lsr.w	r2, r2, r5
 8000282:	1880      	adds	r0, r0, r2
 8000284:	f141 0100 	adc.w	r1, r1, #0
 8000288:	fa03 f20e 	lsl.w	r2, r3, lr
 800028c:	1880      	adds	r0, r0, r2
 800028e:	fa43 f305 	asr.w	r3, r3, r5
 8000292:	4159      	adcs	r1, r3
 8000294:	e00e      	b.n	80002b4 <__adddf3+0xd0>
 8000296:	f1a5 0520 	sub.w	r5, r5, #32
 800029a:	f10e 0e20 	add.w	lr, lr, #32
 800029e:	2a01      	cmp	r2, #1
 80002a0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002a4:	bf28      	it	cs
 80002a6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002aa:	fa43 f305 	asr.w	r3, r3, r5
 80002ae:	18c0      	adds	r0, r0, r3
 80002b0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002b8:	d507      	bpl.n	80002ca <__adddf3+0xe6>
 80002ba:	f04f 0e00 	mov.w	lr, #0
 80002be:	f1dc 0c00 	rsbs	ip, ip, #0
 80002c2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002c6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002ca:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80002ce:	d31b      	bcc.n	8000308 <__adddf3+0x124>
 80002d0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002d4:	d30c      	bcc.n	80002f0 <__adddf3+0x10c>
 80002d6:	0849      	lsrs	r1, r1, #1
 80002d8:	ea5f 0030 	movs.w	r0, r0, rrx
 80002dc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002e0:	f104 0401 	add.w	r4, r4, #1
 80002e4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002e8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002ec:	f080 809a 	bcs.w	8000424 <__adddf3+0x240>
 80002f0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002f4:	bf08      	it	eq
 80002f6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002fa:	f150 0000 	adcs.w	r0, r0, #0
 80002fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000302:	ea41 0105 	orr.w	r1, r1, r5
 8000306:	bd30      	pop	{r4, r5, pc}
 8000308:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800030c:	4140      	adcs	r0, r0
 800030e:	eb41 0101 	adc.w	r1, r1, r1
 8000312:	3c01      	subs	r4, #1
 8000314:	bf28      	it	cs
 8000316:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800031a:	d2e9      	bcs.n	80002f0 <__adddf3+0x10c>
 800031c:	f091 0f00 	teq	r1, #0
 8000320:	bf04      	itt	eq
 8000322:	4601      	moveq	r1, r0
 8000324:	2000      	moveq	r0, #0
 8000326:	fab1 f381 	clz	r3, r1
 800032a:	bf08      	it	eq
 800032c:	3320      	addeq	r3, #32
 800032e:	f1a3 030b 	sub.w	r3, r3, #11
 8000332:	f1b3 0220 	subs.w	r2, r3, #32
 8000336:	da0c      	bge.n	8000352 <__adddf3+0x16e>
 8000338:	320c      	adds	r2, #12
 800033a:	dd08      	ble.n	800034e <__adddf3+0x16a>
 800033c:	f102 0c14 	add.w	ip, r2, #20
 8000340:	f1c2 020c 	rsb	r2, r2, #12
 8000344:	fa01 f00c 	lsl.w	r0, r1, ip
 8000348:	fa21 f102 	lsr.w	r1, r1, r2
 800034c:	e00c      	b.n	8000368 <__adddf3+0x184>
 800034e:	f102 0214 	add.w	r2, r2, #20
 8000352:	bfd8      	it	le
 8000354:	f1c2 0c20 	rsble	ip, r2, #32
 8000358:	fa01 f102 	lsl.w	r1, r1, r2
 800035c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000360:	bfdc      	itt	le
 8000362:	ea41 010c 	orrle.w	r1, r1, ip
 8000366:	4090      	lslle	r0, r2
 8000368:	1ae4      	subs	r4, r4, r3
 800036a:	bfa2      	ittt	ge
 800036c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000370:	4329      	orrge	r1, r5
 8000372:	bd30      	popge	{r4, r5, pc}
 8000374:	ea6f 0404 	mvn.w	r4, r4
 8000378:	3c1f      	subs	r4, #31
 800037a:	da1c      	bge.n	80003b6 <__adddf3+0x1d2>
 800037c:	340c      	adds	r4, #12
 800037e:	dc0e      	bgt.n	800039e <__adddf3+0x1ba>
 8000380:	f104 0414 	add.w	r4, r4, #20
 8000384:	f1c4 0220 	rsb	r2, r4, #32
 8000388:	fa20 f004 	lsr.w	r0, r0, r4
 800038c:	fa01 f302 	lsl.w	r3, r1, r2
 8000390:	ea40 0003 	orr.w	r0, r0, r3
 8000394:	fa21 f304 	lsr.w	r3, r1, r4
 8000398:	ea45 0103 	orr.w	r1, r5, r3
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	f1c4 040c 	rsb	r4, r4, #12
 80003a2:	f1c4 0220 	rsb	r2, r4, #32
 80003a6:	fa20 f002 	lsr.w	r0, r0, r2
 80003aa:	fa01 f304 	lsl.w	r3, r1, r4
 80003ae:	ea40 0003 	orr.w	r0, r0, r3
 80003b2:	4629      	mov	r1, r5
 80003b4:	bd30      	pop	{r4, r5, pc}
 80003b6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ba:	4629      	mov	r1, r5
 80003bc:	bd30      	pop	{r4, r5, pc}
 80003be:	f094 0f00 	teq	r4, #0
 80003c2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80003c6:	bf06      	itte	eq
 80003c8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80003cc:	3401      	addeq	r4, #1
 80003ce:	3d01      	subne	r5, #1
 80003d0:	e74e      	b.n	8000270 <__adddf3+0x8c>
 80003d2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003d6:	bf18      	it	ne
 80003d8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003dc:	d029      	beq.n	8000432 <__adddf3+0x24e>
 80003de:	ea94 0f05 	teq	r4, r5
 80003e2:	bf08      	it	eq
 80003e4:	ea90 0f02 	teqeq	r0, r2
 80003e8:	d005      	beq.n	80003f6 <__adddf3+0x212>
 80003ea:	ea54 0c00 	orrs.w	ip, r4, r0
 80003ee:	bf04      	itt	eq
 80003f0:	4619      	moveq	r1, r3
 80003f2:	4610      	moveq	r0, r2
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	ea91 0f03 	teq	r1, r3
 80003fa:	bf1e      	ittt	ne
 80003fc:	2100      	movne	r1, #0
 80003fe:	2000      	movne	r0, #0
 8000400:	bd30      	popne	{r4, r5, pc}
 8000402:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000406:	d105      	bne.n	8000414 <__adddf3+0x230>
 8000408:	0040      	lsls	r0, r0, #1
 800040a:	4149      	adcs	r1, r1
 800040c:	bf28      	it	cs
 800040e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000412:	bd30      	pop	{r4, r5, pc}
 8000414:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000418:	bf3c      	itt	cc
 800041a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800041e:	bd30      	popcc	{r4, r5, pc}
 8000420:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000424:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000428:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800042c:	f04f 0000 	mov.w	r0, #0
 8000430:	bd30      	pop	{r4, r5, pc}
 8000432:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000436:	bf1a      	itte	ne
 8000438:	4619      	movne	r1, r3
 800043a:	4610      	movne	r0, r2
 800043c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000440:	bf1c      	itt	ne
 8000442:	460b      	movne	r3, r1
 8000444:	4602      	movne	r2, r0
 8000446:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800044a:	bf06      	itte	eq
 800044c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000450:	ea91 0f03 	teqeq	r1, r3
 8000454:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000458:	bd30      	pop	{r4, r5, pc}
 800045a:	bf00      	nop

0800045c <__aeabi_ui2d>:
 800045c:	f090 0f00 	teq	r0, #0
 8000460:	bf04      	itt	eq
 8000462:	2100      	moveq	r1, #0
 8000464:	4770      	bxeq	lr
 8000466:	b530      	push	{r4, r5, lr}
 8000468:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800046c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000470:	f04f 0500 	mov.w	r5, #0
 8000474:	f04f 0100 	mov.w	r1, #0
 8000478:	e750      	b.n	800031c <__adddf3+0x138>
 800047a:	bf00      	nop

0800047c <__aeabi_i2d>:
 800047c:	f090 0f00 	teq	r0, #0
 8000480:	bf04      	itt	eq
 8000482:	2100      	moveq	r1, #0
 8000484:	4770      	bxeq	lr
 8000486:	b530      	push	{r4, r5, lr}
 8000488:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800048c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000490:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000494:	bf48      	it	mi
 8000496:	4240      	negmi	r0, r0
 8000498:	f04f 0100 	mov.w	r1, #0
 800049c:	e73e      	b.n	800031c <__adddf3+0x138>
 800049e:	bf00      	nop

080004a0 <__aeabi_f2d>:
 80004a0:	0042      	lsls	r2, r0, #1
 80004a2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004a6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004aa:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004ae:	bf1f      	itttt	ne
 80004b0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004b4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004b8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004bc:	4770      	bxne	lr
 80004be:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80004c2:	bf08      	it	eq
 80004c4:	4770      	bxeq	lr
 80004c6:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80004ca:	bf04      	itt	eq
 80004cc:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80004d0:	4770      	bxeq	lr
 80004d2:	b530      	push	{r4, r5, lr}
 80004d4:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004e0:	e71c      	b.n	800031c <__adddf3+0x138>
 80004e2:	bf00      	nop

080004e4 <__aeabi_ul2d>:
 80004e4:	ea50 0201 	orrs.w	r2, r0, r1
 80004e8:	bf08      	it	eq
 80004ea:	4770      	bxeq	lr
 80004ec:	b530      	push	{r4, r5, lr}
 80004ee:	f04f 0500 	mov.w	r5, #0
 80004f2:	e00a      	b.n	800050a <__aeabi_l2d+0x16>

080004f4 <__aeabi_l2d>:
 80004f4:	ea50 0201 	orrs.w	r2, r0, r1
 80004f8:	bf08      	it	eq
 80004fa:	4770      	bxeq	lr
 80004fc:	b530      	push	{r4, r5, lr}
 80004fe:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000502:	d502      	bpl.n	800050a <__aeabi_l2d+0x16>
 8000504:	4240      	negs	r0, r0
 8000506:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800050a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800050e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000512:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000516:	f43f aed8 	beq.w	80002ca <__adddf3+0xe6>
 800051a:	f04f 0203 	mov.w	r2, #3
 800051e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000522:	bf18      	it	ne
 8000524:	3203      	addne	r2, #3
 8000526:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800052a:	bf18      	it	ne
 800052c:	3203      	addne	r2, #3
 800052e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000532:	f1c2 0320 	rsb	r3, r2, #32
 8000536:	fa00 fc03 	lsl.w	ip, r0, r3
 800053a:	fa20 f002 	lsr.w	r0, r0, r2
 800053e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000542:	ea40 000e 	orr.w	r0, r0, lr
 8000546:	fa21 f102 	lsr.w	r1, r1, r2
 800054a:	4414      	add	r4, r2
 800054c:	e6bd      	b.n	80002ca <__adddf3+0xe6>
 800054e:	bf00      	nop

08000550 <__aeabi_dmul>:
 8000550:	b570      	push	{r4, r5, r6, lr}
 8000552:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000556:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800055a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800055e:	bf1d      	ittte	ne
 8000560:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000564:	ea94 0f0c 	teqne	r4, ip
 8000568:	ea95 0f0c 	teqne	r5, ip
 800056c:	f000 f8de 	bleq	800072c <__aeabi_dmul+0x1dc>
 8000570:	442c      	add	r4, r5
 8000572:	ea81 0603 	eor.w	r6, r1, r3
 8000576:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800057a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800057e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000582:	bf18      	it	ne
 8000584:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000588:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800058c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000590:	d038      	beq.n	8000604 <__aeabi_dmul+0xb4>
 8000592:	fba0 ce02 	umull	ip, lr, r0, r2
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800059e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005a2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005a6:	f04f 0600 	mov.w	r6, #0
 80005aa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005ae:	f09c 0f00 	teq	ip, #0
 80005b2:	bf18      	it	ne
 80005b4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005b8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005bc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80005c0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80005c4:	d204      	bcs.n	80005d0 <__aeabi_dmul+0x80>
 80005c6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005ca:	416d      	adcs	r5, r5
 80005cc:	eb46 0606 	adc.w	r6, r6, r6
 80005d0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005d4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005d8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005dc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005e0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005e4:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80005e8:	bf88      	it	hi
 80005ea:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80005ee:	d81e      	bhi.n	800062e <__aeabi_dmul+0xde>
 80005f0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80005f4:	bf08      	it	eq
 80005f6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005fa:	f150 0000 	adcs.w	r0, r0, #0
 80005fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000602:	bd70      	pop	{r4, r5, r6, pc}
 8000604:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000608:	ea46 0101 	orr.w	r1, r6, r1
 800060c:	ea40 0002 	orr.w	r0, r0, r2
 8000610:	ea81 0103 	eor.w	r1, r1, r3
 8000614:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000618:	bfc2      	ittt	gt
 800061a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800061e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000622:	bd70      	popgt	{r4, r5, r6, pc}
 8000624:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000628:	f04f 0e00 	mov.w	lr, #0
 800062c:	3c01      	subs	r4, #1
 800062e:	f300 80ab 	bgt.w	8000788 <__aeabi_dmul+0x238>
 8000632:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000636:	bfde      	ittt	le
 8000638:	2000      	movle	r0, #0
 800063a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800063e:	bd70      	pople	{r4, r5, r6, pc}
 8000640:	f1c4 0400 	rsb	r4, r4, #0
 8000644:	3c20      	subs	r4, #32
 8000646:	da35      	bge.n	80006b4 <__aeabi_dmul+0x164>
 8000648:	340c      	adds	r4, #12
 800064a:	dc1b      	bgt.n	8000684 <__aeabi_dmul+0x134>
 800064c:	f104 0414 	add.w	r4, r4, #20
 8000650:	f1c4 0520 	rsb	r5, r4, #32
 8000654:	fa00 f305 	lsl.w	r3, r0, r5
 8000658:	fa20 f004 	lsr.w	r0, r0, r4
 800065c:	fa01 f205 	lsl.w	r2, r1, r5
 8000660:	ea40 0002 	orr.w	r0, r0, r2
 8000664:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000668:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800066c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000670:	fa21 f604 	lsr.w	r6, r1, r4
 8000674:	eb42 0106 	adc.w	r1, r2, r6
 8000678:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800067c:	bf08      	it	eq
 800067e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000682:	bd70      	pop	{r4, r5, r6, pc}
 8000684:	f1c4 040c 	rsb	r4, r4, #12
 8000688:	f1c4 0520 	rsb	r5, r4, #32
 800068c:	fa00 f304 	lsl.w	r3, r0, r4
 8000690:	fa20 f005 	lsr.w	r0, r0, r5
 8000694:	fa01 f204 	lsl.w	r2, r1, r4
 8000698:	ea40 0002 	orr.w	r0, r0, r2
 800069c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006a0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006a4:	f141 0100 	adc.w	r1, r1, #0
 80006a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ac:	bf08      	it	eq
 80006ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f1c4 0520 	rsb	r5, r4, #32
 80006b8:	fa00 f205 	lsl.w	r2, r0, r5
 80006bc:	ea4e 0e02 	orr.w	lr, lr, r2
 80006c0:	fa20 f304 	lsr.w	r3, r0, r4
 80006c4:	fa01 f205 	lsl.w	r2, r1, r5
 80006c8:	ea43 0302 	orr.w	r3, r3, r2
 80006cc:	fa21 f004 	lsr.w	r0, r1, r4
 80006d0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d4:	fa21 f204 	lsr.w	r2, r1, r4
 80006d8:	ea20 0002 	bic.w	r0, r0, r2
 80006dc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006e4:	bf08      	it	eq
 80006e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f094 0f00 	teq	r4, #0
 80006f0:	d10f      	bne.n	8000712 <__aeabi_dmul+0x1c2>
 80006f2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80006f6:	0040      	lsls	r0, r0, #1
 80006f8:	eb41 0101 	adc.w	r1, r1, r1
 80006fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000700:	bf08      	it	eq
 8000702:	3c01      	subeq	r4, #1
 8000704:	d0f7      	beq.n	80006f6 <__aeabi_dmul+0x1a6>
 8000706:	ea41 0106 	orr.w	r1, r1, r6
 800070a:	f095 0f00 	teq	r5, #0
 800070e:	bf18      	it	ne
 8000710:	4770      	bxne	lr
 8000712:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000716:	0052      	lsls	r2, r2, #1
 8000718:	eb43 0303 	adc.w	r3, r3, r3
 800071c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000720:	bf08      	it	eq
 8000722:	3d01      	subeq	r5, #1
 8000724:	d0f7      	beq.n	8000716 <__aeabi_dmul+0x1c6>
 8000726:	ea43 0306 	orr.w	r3, r3, r6
 800072a:	4770      	bx	lr
 800072c:	ea94 0f0c 	teq	r4, ip
 8000730:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000734:	bf18      	it	ne
 8000736:	ea95 0f0c 	teqne	r5, ip
 800073a:	d00c      	beq.n	8000756 <__aeabi_dmul+0x206>
 800073c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000740:	bf18      	it	ne
 8000742:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000746:	d1d1      	bne.n	80006ec <__aeabi_dmul+0x19c>
 8000748:	ea81 0103 	eor.w	r1, r1, r3
 800074c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000750:	f04f 0000 	mov.w	r0, #0
 8000754:	bd70      	pop	{r4, r5, r6, pc}
 8000756:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800075a:	bf06      	itte	eq
 800075c:	4610      	moveq	r0, r2
 800075e:	4619      	moveq	r1, r3
 8000760:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000764:	d019      	beq.n	800079a <__aeabi_dmul+0x24a>
 8000766:	ea94 0f0c 	teq	r4, ip
 800076a:	d102      	bne.n	8000772 <__aeabi_dmul+0x222>
 800076c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000770:	d113      	bne.n	800079a <__aeabi_dmul+0x24a>
 8000772:	ea95 0f0c 	teq	r5, ip
 8000776:	d105      	bne.n	8000784 <__aeabi_dmul+0x234>
 8000778:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800077c:	bf1c      	itt	ne
 800077e:	4610      	movne	r0, r2
 8000780:	4619      	movne	r1, r3
 8000782:	d10a      	bne.n	800079a <__aeabi_dmul+0x24a>
 8000784:	ea81 0103 	eor.w	r1, r1, r3
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000790:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000794:	f04f 0000 	mov.w	r0, #0
 8000798:	bd70      	pop	{r4, r5, r6, pc}
 800079a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800079e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007a2:	bd70      	pop	{r4, r5, r6, pc}

080007a4 <__aeabi_ddiv>:
 80007a4:	b570      	push	{r4, r5, r6, lr}
 80007a6:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007aa:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007ae:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007b2:	bf1d      	ittte	ne
 80007b4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007b8:	ea94 0f0c 	teqne	r4, ip
 80007bc:	ea95 0f0c 	teqne	r5, ip
 80007c0:	f000 f8a7 	bleq	8000912 <__aeabi_ddiv+0x16e>
 80007c4:	eba4 0405 	sub.w	r4, r4, r5
 80007c8:	ea81 0e03 	eor.w	lr, r1, r3
 80007cc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80007d0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007d4:	f000 8088 	beq.w	80008e8 <__aeabi_ddiv+0x144>
 80007d8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007dc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80007e0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007e4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007e8:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007ec:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007f0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007f4:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007f8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007fc:	429d      	cmp	r5, r3
 80007fe:	bf08      	it	eq
 8000800:	4296      	cmpeq	r6, r2
 8000802:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000806:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800080a:	d202      	bcs.n	8000812 <__aeabi_ddiv+0x6e>
 800080c:	085b      	lsrs	r3, r3, #1
 800080e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000812:	1ab6      	subs	r6, r6, r2
 8000814:	eb65 0503 	sbc.w	r5, r5, r3
 8000818:	085b      	lsrs	r3, r3, #1
 800081a:	ea4f 0232 	mov.w	r2, r2, rrx
 800081e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000822:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000826:	ebb6 0e02 	subs.w	lr, r6, r2
 800082a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800082e:	bf22      	ittt	cs
 8000830:	1ab6      	subcs	r6, r6, r2
 8000832:	4675      	movcs	r5, lr
 8000834:	ea40 000c 	orrcs.w	r0, r0, ip
 8000838:	085b      	lsrs	r3, r3, #1
 800083a:	ea4f 0232 	mov.w	r2, r2, rrx
 800083e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000842:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000846:	bf22      	ittt	cs
 8000848:	1ab6      	subcs	r6, r6, r2
 800084a:	4675      	movcs	r5, lr
 800084c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000850:	085b      	lsrs	r3, r3, #1
 8000852:	ea4f 0232 	mov.w	r2, r2, rrx
 8000856:	ebb6 0e02 	subs.w	lr, r6, r2
 800085a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800085e:	bf22      	ittt	cs
 8000860:	1ab6      	subcs	r6, r6, r2
 8000862:	4675      	movcs	r5, lr
 8000864:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000880:	ea55 0e06 	orrs.w	lr, r5, r6
 8000884:	d018      	beq.n	80008b8 <__aeabi_ddiv+0x114>
 8000886:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800088a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800088e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000892:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000896:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800089a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800089e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008a2:	d1c0      	bne.n	8000826 <__aeabi_ddiv+0x82>
 80008a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008a8:	d10b      	bne.n	80008c2 <__aeabi_ddiv+0x11e>
 80008aa:	ea41 0100 	orr.w	r1, r1, r0
 80008ae:	f04f 0000 	mov.w	r0, #0
 80008b2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008b6:	e7b6      	b.n	8000826 <__aeabi_ddiv+0x82>
 80008b8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008bc:	bf04      	itt	eq
 80008be:	4301      	orreq	r1, r0
 80008c0:	2000      	moveq	r0, #0
 80008c2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80008c6:	bf88      	it	hi
 80008c8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80008cc:	f63f aeaf 	bhi.w	800062e <__aeabi_dmul+0xde>
 80008d0:	ebb5 0c03 	subs.w	ip, r5, r3
 80008d4:	bf04      	itt	eq
 80008d6:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008da:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008de:	f150 0000 	adcs.w	r0, r0, #0
 80008e2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008e6:	bd70      	pop	{r4, r5, r6, pc}
 80008e8:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80008ec:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008f0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008f4:	bfc2      	ittt	gt
 80008f6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008fa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008fe:	bd70      	popgt	{r4, r5, r6, pc}
 8000900:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000904:	f04f 0e00 	mov.w	lr, #0
 8000908:	3c01      	subs	r4, #1
 800090a:	e690      	b.n	800062e <__aeabi_dmul+0xde>
 800090c:	ea45 0e06 	orr.w	lr, r5, r6
 8000910:	e68d      	b.n	800062e <__aeabi_dmul+0xde>
 8000912:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000916:	ea94 0f0c 	teq	r4, ip
 800091a:	bf08      	it	eq
 800091c:	ea95 0f0c 	teqeq	r5, ip
 8000920:	f43f af3b 	beq.w	800079a <__aeabi_dmul+0x24a>
 8000924:	ea94 0f0c 	teq	r4, ip
 8000928:	d10a      	bne.n	8000940 <__aeabi_ddiv+0x19c>
 800092a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800092e:	f47f af34 	bne.w	800079a <__aeabi_dmul+0x24a>
 8000932:	ea95 0f0c 	teq	r5, ip
 8000936:	f47f af25 	bne.w	8000784 <__aeabi_dmul+0x234>
 800093a:	4610      	mov	r0, r2
 800093c:	4619      	mov	r1, r3
 800093e:	e72c      	b.n	800079a <__aeabi_dmul+0x24a>
 8000940:	ea95 0f0c 	teq	r5, ip
 8000944:	d106      	bne.n	8000954 <__aeabi_ddiv+0x1b0>
 8000946:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800094a:	f43f aefd 	beq.w	8000748 <__aeabi_dmul+0x1f8>
 800094e:	4610      	mov	r0, r2
 8000950:	4619      	mov	r1, r3
 8000952:	e722      	b.n	800079a <__aeabi_dmul+0x24a>
 8000954:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000958:	bf18      	it	ne
 800095a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800095e:	f47f aec5 	bne.w	80006ec <__aeabi_dmul+0x19c>
 8000962:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000966:	f47f af0d 	bne.w	8000784 <__aeabi_dmul+0x234>
 800096a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800096e:	f47f aeeb 	bne.w	8000748 <__aeabi_dmul+0x1f8>
 8000972:	e712      	b.n	800079a <__aeabi_dmul+0x24a>

08000974 <__gedf2>:
 8000974:	f04f 3cff 	mov.w	ip, #4294967295
 8000978:	e006      	b.n	8000988 <__cmpdf2+0x4>
 800097a:	bf00      	nop

0800097c <__ledf2>:
 800097c:	f04f 0c01 	mov.w	ip, #1
 8000980:	e002      	b.n	8000988 <__cmpdf2+0x4>
 8000982:	bf00      	nop

08000984 <__cmpdf2>:
 8000984:	f04f 0c01 	mov.w	ip, #1
 8000988:	f84d cd04 	str.w	ip, [sp, #-4]!
 800098c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000990:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000994:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000998:	bf18      	it	ne
 800099a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 800099e:	d01b      	beq.n	80009d8 <__cmpdf2+0x54>
 80009a0:	b001      	add	sp, #4
 80009a2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009a6:	bf0c      	ite	eq
 80009a8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009ac:	ea91 0f03 	teqne	r1, r3
 80009b0:	bf02      	ittt	eq
 80009b2:	ea90 0f02 	teqeq	r0, r2
 80009b6:	2000      	moveq	r0, #0
 80009b8:	4770      	bxeq	lr
 80009ba:	f110 0f00 	cmn.w	r0, #0
 80009be:	ea91 0f03 	teq	r1, r3
 80009c2:	bf58      	it	pl
 80009c4:	4299      	cmppl	r1, r3
 80009c6:	bf08      	it	eq
 80009c8:	4290      	cmpeq	r0, r2
 80009ca:	bf2c      	ite	cs
 80009cc:	17d8      	asrcs	r0, r3, #31
 80009ce:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80009d2:	f040 0001 	orr.w	r0, r0, #1
 80009d6:	4770      	bx	lr
 80009d8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009e0:	d102      	bne.n	80009e8 <__cmpdf2+0x64>
 80009e2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009e6:	d107      	bne.n	80009f8 <__cmpdf2+0x74>
 80009e8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009ec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009f0:	d1d6      	bne.n	80009a0 <__cmpdf2+0x1c>
 80009f2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009f6:	d0d3      	beq.n	80009a0 <__cmpdf2+0x1c>
 80009f8:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009fc:	4770      	bx	lr
 80009fe:	bf00      	nop

08000a00 <__aeabi_cdrcmple>:
 8000a00:	4684      	mov	ip, r0
 8000a02:	4610      	mov	r0, r2
 8000a04:	4662      	mov	r2, ip
 8000a06:	468c      	mov	ip, r1
 8000a08:	4619      	mov	r1, r3
 8000a0a:	4663      	mov	r3, ip
 8000a0c:	e000      	b.n	8000a10 <__aeabi_cdcmpeq>
 8000a0e:	bf00      	nop

08000a10 <__aeabi_cdcmpeq>:
 8000a10:	b501      	push	{r0, lr}
 8000a12:	f7ff ffb7 	bl	8000984 <__cmpdf2>
 8000a16:	2800      	cmp	r0, #0
 8000a18:	bf48      	it	mi
 8000a1a:	f110 0f00 	cmnmi.w	r0, #0
 8000a1e:	bd01      	pop	{r0, pc}

08000a20 <__aeabi_dcmpeq>:
 8000a20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a24:	f7ff fff4 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a28:	bf0c      	ite	eq
 8000a2a:	2001      	moveq	r0, #1
 8000a2c:	2000      	movne	r0, #0
 8000a2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a32:	bf00      	nop

08000a34 <__aeabi_dcmplt>:
 8000a34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a38:	f7ff ffea 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a3c:	bf34      	ite	cc
 8000a3e:	2001      	movcc	r0, #1
 8000a40:	2000      	movcs	r0, #0
 8000a42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a46:	bf00      	nop

08000a48 <__aeabi_dcmple>:
 8000a48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a4c:	f7ff ffe0 	bl	8000a10 <__aeabi_cdcmpeq>
 8000a50:	bf94      	ite	ls
 8000a52:	2001      	movls	r0, #1
 8000a54:	2000      	movhi	r0, #0
 8000a56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a5a:	bf00      	nop

08000a5c <__aeabi_dcmpge>:
 8000a5c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a60:	f7ff ffce 	bl	8000a00 <__aeabi_cdrcmple>
 8000a64:	bf94      	ite	ls
 8000a66:	2001      	movls	r0, #1
 8000a68:	2000      	movhi	r0, #0
 8000a6a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a6e:	bf00      	nop

08000a70 <__aeabi_dcmpgt>:
 8000a70:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a74:	f7ff ffc4 	bl	8000a00 <__aeabi_cdrcmple>
 8000a78:	bf34      	ite	cc
 8000a7a:	2001      	movcc	r0, #1
 8000a7c:	2000      	movcs	r0, #0
 8000a7e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a82:	bf00      	nop

08000a84 <__aeabi_dcmpun>:
 8000a84:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a88:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a8c:	d102      	bne.n	8000a94 <__aeabi_dcmpun+0x10>
 8000a8e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a92:	d10a      	bne.n	8000aaa <__aeabi_dcmpun+0x26>
 8000a94:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a9c:	d102      	bne.n	8000aa4 <__aeabi_dcmpun+0x20>
 8000a9e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aa2:	d102      	bne.n	8000aaa <__aeabi_dcmpun+0x26>
 8000aa4:	f04f 0000 	mov.w	r0, #0
 8000aa8:	4770      	bx	lr
 8000aaa:	f04f 0001 	mov.w	r0, #1
 8000aae:	4770      	bx	lr

08000ab0 <__aeabi_d2uiz>:
 8000ab0:	004a      	lsls	r2, r1, #1
 8000ab2:	d211      	bcs.n	8000ad8 <__aeabi_d2uiz+0x28>
 8000ab4:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ab8:	d211      	bcs.n	8000ade <__aeabi_d2uiz+0x2e>
 8000aba:	d50d      	bpl.n	8000ad8 <__aeabi_d2uiz+0x28>
 8000abc:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000ac0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ac4:	d40e      	bmi.n	8000ae4 <__aeabi_d2uiz+0x34>
 8000ac6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aca:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ace:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000ad2:	fa23 f002 	lsr.w	r0, r3, r2
 8000ad6:	4770      	bx	lr
 8000ad8:	f04f 0000 	mov.w	r0, #0
 8000adc:	4770      	bx	lr
 8000ade:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ae2:	d102      	bne.n	8000aea <__aeabi_d2uiz+0x3a>
 8000ae4:	f04f 30ff 	mov.w	r0, #4294967295
 8000ae8:	4770      	bx	lr
 8000aea:	f04f 0000 	mov.w	r0, #0
 8000aee:	4770      	bx	lr

08000af0 <__aeabi_d2f>:
 8000af0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000af4:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000af8:	bf24      	itt	cs
 8000afa:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000afe:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b02:	d90d      	bls.n	8000b20 <__aeabi_d2f+0x30>
 8000b04:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000b08:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b0c:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b10:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000b14:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b18:	bf08      	it	eq
 8000b1a:	f020 0001 	biceq.w	r0, r0, #1
 8000b1e:	4770      	bx	lr
 8000b20:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b24:	d121      	bne.n	8000b6a <__aeabi_d2f+0x7a>
 8000b26:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b2a:	bfbc      	itt	lt
 8000b2c:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b30:	4770      	bxlt	lr
 8000b32:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b36:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b3a:	f1c2 0218 	rsb	r2, r2, #24
 8000b3e:	f1c2 0c20 	rsb	ip, r2, #32
 8000b42:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b46:	fa20 f002 	lsr.w	r0, r0, r2
 8000b4a:	bf18      	it	ne
 8000b4c:	f040 0001 	orrne.w	r0, r0, #1
 8000b50:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b54:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b58:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b5c:	ea40 000c 	orr.w	r0, r0, ip
 8000b60:	fa23 f302 	lsr.w	r3, r3, r2
 8000b64:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b68:	e7cc      	b.n	8000b04 <__aeabi_d2f+0x14>
 8000b6a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b6e:	d107      	bne.n	8000b80 <__aeabi_d2f+0x90>
 8000b70:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b74:	bf1e      	ittt	ne
 8000b76:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b7a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b7e:	4770      	bxne	lr
 8000b80:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b84:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b88:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b8c:	4770      	bx	lr
 8000b8e:	bf00      	nop

08000b90 <__aeabi_uldivmod>:
 8000b90:	b953      	cbnz	r3, 8000ba8 <__aeabi_uldivmod+0x18>
 8000b92:	b94a      	cbnz	r2, 8000ba8 <__aeabi_uldivmod+0x18>
 8000b94:	2900      	cmp	r1, #0
 8000b96:	bf08      	it	eq
 8000b98:	2800      	cmpeq	r0, #0
 8000b9a:	bf1c      	itt	ne
 8000b9c:	f04f 31ff 	movne.w	r1, #4294967295
 8000ba0:	f04f 30ff 	movne.w	r0, #4294967295
 8000ba4:	f000 b974 	b.w	8000e90 <__aeabi_idiv0>
 8000ba8:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bb0:	f000 f806 	bl	8000bc0 <__udivmoddi4>
 8000bb4:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bb8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bbc:	b004      	add	sp, #16
 8000bbe:	4770      	bx	lr

08000bc0 <__udivmoddi4>:
 8000bc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bc4:	9d08      	ldr	r5, [sp, #32]
 8000bc6:	4604      	mov	r4, r0
 8000bc8:	468e      	mov	lr, r1
 8000bca:	2b00      	cmp	r3, #0
 8000bcc:	d14d      	bne.n	8000c6a <__udivmoddi4+0xaa>
 8000bce:	428a      	cmp	r2, r1
 8000bd0:	4694      	mov	ip, r2
 8000bd2:	d969      	bls.n	8000ca8 <__udivmoddi4+0xe8>
 8000bd4:	fab2 f282 	clz	r2, r2
 8000bd8:	b152      	cbz	r2, 8000bf0 <__udivmoddi4+0x30>
 8000bda:	fa01 f302 	lsl.w	r3, r1, r2
 8000bde:	f1c2 0120 	rsb	r1, r2, #32
 8000be2:	fa20 f101 	lsr.w	r1, r0, r1
 8000be6:	fa0c fc02 	lsl.w	ip, ip, r2
 8000bea:	ea41 0e03 	orr.w	lr, r1, r3
 8000bee:	4094      	lsls	r4, r2
 8000bf0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000bf4:	0c21      	lsrs	r1, r4, #16
 8000bf6:	fbbe f6f8 	udiv	r6, lr, r8
 8000bfa:	fa1f f78c 	uxth.w	r7, ip
 8000bfe:	fb08 e316 	mls	r3, r8, r6, lr
 8000c02:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000c06:	fb06 f107 	mul.w	r1, r6, r7
 8000c0a:	4299      	cmp	r1, r3
 8000c0c:	d90a      	bls.n	8000c24 <__udivmoddi4+0x64>
 8000c0e:	eb1c 0303 	adds.w	r3, ip, r3
 8000c12:	f106 30ff 	add.w	r0, r6, #4294967295
 8000c16:	f080 811f 	bcs.w	8000e58 <__udivmoddi4+0x298>
 8000c1a:	4299      	cmp	r1, r3
 8000c1c:	f240 811c 	bls.w	8000e58 <__udivmoddi4+0x298>
 8000c20:	3e02      	subs	r6, #2
 8000c22:	4463      	add	r3, ip
 8000c24:	1a5b      	subs	r3, r3, r1
 8000c26:	b2a4      	uxth	r4, r4
 8000c28:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c2c:	fb08 3310 	mls	r3, r8, r0, r3
 8000c30:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c34:	fb00 f707 	mul.w	r7, r0, r7
 8000c38:	42a7      	cmp	r7, r4
 8000c3a:	d90a      	bls.n	8000c52 <__udivmoddi4+0x92>
 8000c3c:	eb1c 0404 	adds.w	r4, ip, r4
 8000c40:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c44:	f080 810a 	bcs.w	8000e5c <__udivmoddi4+0x29c>
 8000c48:	42a7      	cmp	r7, r4
 8000c4a:	f240 8107 	bls.w	8000e5c <__udivmoddi4+0x29c>
 8000c4e:	4464      	add	r4, ip
 8000c50:	3802      	subs	r0, #2
 8000c52:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000c56:	1be4      	subs	r4, r4, r7
 8000c58:	2600      	movs	r6, #0
 8000c5a:	b11d      	cbz	r5, 8000c64 <__udivmoddi4+0xa4>
 8000c5c:	40d4      	lsrs	r4, r2
 8000c5e:	2300      	movs	r3, #0
 8000c60:	e9c5 4300 	strd	r4, r3, [r5]
 8000c64:	4631      	mov	r1, r6
 8000c66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c6a:	428b      	cmp	r3, r1
 8000c6c:	d909      	bls.n	8000c82 <__udivmoddi4+0xc2>
 8000c6e:	2d00      	cmp	r5, #0
 8000c70:	f000 80ef 	beq.w	8000e52 <__udivmoddi4+0x292>
 8000c74:	2600      	movs	r6, #0
 8000c76:	e9c5 0100 	strd	r0, r1, [r5]
 8000c7a:	4630      	mov	r0, r6
 8000c7c:	4631      	mov	r1, r6
 8000c7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c82:	fab3 f683 	clz	r6, r3
 8000c86:	2e00      	cmp	r6, #0
 8000c88:	d14a      	bne.n	8000d20 <__udivmoddi4+0x160>
 8000c8a:	428b      	cmp	r3, r1
 8000c8c:	d302      	bcc.n	8000c94 <__udivmoddi4+0xd4>
 8000c8e:	4282      	cmp	r2, r0
 8000c90:	f200 80f9 	bhi.w	8000e86 <__udivmoddi4+0x2c6>
 8000c94:	1a84      	subs	r4, r0, r2
 8000c96:	eb61 0303 	sbc.w	r3, r1, r3
 8000c9a:	2001      	movs	r0, #1
 8000c9c:	469e      	mov	lr, r3
 8000c9e:	2d00      	cmp	r5, #0
 8000ca0:	d0e0      	beq.n	8000c64 <__udivmoddi4+0xa4>
 8000ca2:	e9c5 4e00 	strd	r4, lr, [r5]
 8000ca6:	e7dd      	b.n	8000c64 <__udivmoddi4+0xa4>
 8000ca8:	b902      	cbnz	r2, 8000cac <__udivmoddi4+0xec>
 8000caa:	deff      	udf	#255	; 0xff
 8000cac:	fab2 f282 	clz	r2, r2
 8000cb0:	2a00      	cmp	r2, #0
 8000cb2:	f040 8092 	bne.w	8000dda <__udivmoddi4+0x21a>
 8000cb6:	eba1 010c 	sub.w	r1, r1, ip
 8000cba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cbe:	fa1f fe8c 	uxth.w	lr, ip
 8000cc2:	2601      	movs	r6, #1
 8000cc4:	0c20      	lsrs	r0, r4, #16
 8000cc6:	fbb1 f3f7 	udiv	r3, r1, r7
 8000cca:	fb07 1113 	mls	r1, r7, r3, r1
 8000cce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000cd2:	fb0e f003 	mul.w	r0, lr, r3
 8000cd6:	4288      	cmp	r0, r1
 8000cd8:	d908      	bls.n	8000cec <__udivmoddi4+0x12c>
 8000cda:	eb1c 0101 	adds.w	r1, ip, r1
 8000cde:	f103 38ff 	add.w	r8, r3, #4294967295
 8000ce2:	d202      	bcs.n	8000cea <__udivmoddi4+0x12a>
 8000ce4:	4288      	cmp	r0, r1
 8000ce6:	f200 80cb 	bhi.w	8000e80 <__udivmoddi4+0x2c0>
 8000cea:	4643      	mov	r3, r8
 8000cec:	1a09      	subs	r1, r1, r0
 8000cee:	b2a4      	uxth	r4, r4
 8000cf0:	fbb1 f0f7 	udiv	r0, r1, r7
 8000cf4:	fb07 1110 	mls	r1, r7, r0, r1
 8000cf8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000cfc:	fb0e fe00 	mul.w	lr, lr, r0
 8000d00:	45a6      	cmp	lr, r4
 8000d02:	d908      	bls.n	8000d16 <__udivmoddi4+0x156>
 8000d04:	eb1c 0404 	adds.w	r4, ip, r4
 8000d08:	f100 31ff 	add.w	r1, r0, #4294967295
 8000d0c:	d202      	bcs.n	8000d14 <__udivmoddi4+0x154>
 8000d0e:	45a6      	cmp	lr, r4
 8000d10:	f200 80bb 	bhi.w	8000e8a <__udivmoddi4+0x2ca>
 8000d14:	4608      	mov	r0, r1
 8000d16:	eba4 040e 	sub.w	r4, r4, lr
 8000d1a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000d1e:	e79c      	b.n	8000c5a <__udivmoddi4+0x9a>
 8000d20:	f1c6 0720 	rsb	r7, r6, #32
 8000d24:	40b3      	lsls	r3, r6
 8000d26:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d2a:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d2e:	fa20 f407 	lsr.w	r4, r0, r7
 8000d32:	fa01 f306 	lsl.w	r3, r1, r6
 8000d36:	431c      	orrs	r4, r3
 8000d38:	40f9      	lsrs	r1, r7
 8000d3a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d3e:	fa00 f306 	lsl.w	r3, r0, r6
 8000d42:	fbb1 f8f9 	udiv	r8, r1, r9
 8000d46:	0c20      	lsrs	r0, r4, #16
 8000d48:	fa1f fe8c 	uxth.w	lr, ip
 8000d4c:	fb09 1118 	mls	r1, r9, r8, r1
 8000d50:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000d54:	fb08 f00e 	mul.w	r0, r8, lr
 8000d58:	4288      	cmp	r0, r1
 8000d5a:	fa02 f206 	lsl.w	r2, r2, r6
 8000d5e:	d90b      	bls.n	8000d78 <__udivmoddi4+0x1b8>
 8000d60:	eb1c 0101 	adds.w	r1, ip, r1
 8000d64:	f108 3aff 	add.w	sl, r8, #4294967295
 8000d68:	f080 8088 	bcs.w	8000e7c <__udivmoddi4+0x2bc>
 8000d6c:	4288      	cmp	r0, r1
 8000d6e:	f240 8085 	bls.w	8000e7c <__udivmoddi4+0x2bc>
 8000d72:	f1a8 0802 	sub.w	r8, r8, #2
 8000d76:	4461      	add	r1, ip
 8000d78:	1a09      	subs	r1, r1, r0
 8000d7a:	b2a4      	uxth	r4, r4
 8000d7c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000d80:	fb09 1110 	mls	r1, r9, r0, r1
 8000d84:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000d88:	fb00 fe0e 	mul.w	lr, r0, lr
 8000d8c:	458e      	cmp	lr, r1
 8000d8e:	d908      	bls.n	8000da2 <__udivmoddi4+0x1e2>
 8000d90:	eb1c 0101 	adds.w	r1, ip, r1
 8000d94:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d98:	d26c      	bcs.n	8000e74 <__udivmoddi4+0x2b4>
 8000d9a:	458e      	cmp	lr, r1
 8000d9c:	d96a      	bls.n	8000e74 <__udivmoddi4+0x2b4>
 8000d9e:	3802      	subs	r0, #2
 8000da0:	4461      	add	r1, ip
 8000da2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000da6:	fba0 9402 	umull	r9, r4, r0, r2
 8000daa:	eba1 010e 	sub.w	r1, r1, lr
 8000dae:	42a1      	cmp	r1, r4
 8000db0:	46c8      	mov	r8, r9
 8000db2:	46a6      	mov	lr, r4
 8000db4:	d356      	bcc.n	8000e64 <__udivmoddi4+0x2a4>
 8000db6:	d053      	beq.n	8000e60 <__udivmoddi4+0x2a0>
 8000db8:	b15d      	cbz	r5, 8000dd2 <__udivmoddi4+0x212>
 8000dba:	ebb3 0208 	subs.w	r2, r3, r8
 8000dbe:	eb61 010e 	sbc.w	r1, r1, lr
 8000dc2:	fa01 f707 	lsl.w	r7, r1, r7
 8000dc6:	fa22 f306 	lsr.w	r3, r2, r6
 8000dca:	40f1      	lsrs	r1, r6
 8000dcc:	431f      	orrs	r7, r3
 8000dce:	e9c5 7100 	strd	r7, r1, [r5]
 8000dd2:	2600      	movs	r6, #0
 8000dd4:	4631      	mov	r1, r6
 8000dd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dda:	f1c2 0320 	rsb	r3, r2, #32
 8000dde:	40d8      	lsrs	r0, r3
 8000de0:	fa0c fc02 	lsl.w	ip, ip, r2
 8000de4:	fa21 f303 	lsr.w	r3, r1, r3
 8000de8:	4091      	lsls	r1, r2
 8000dea:	4301      	orrs	r1, r0
 8000dec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000df0:	fa1f fe8c 	uxth.w	lr, ip
 8000df4:	fbb3 f0f7 	udiv	r0, r3, r7
 8000df8:	fb07 3610 	mls	r6, r7, r0, r3
 8000dfc:	0c0b      	lsrs	r3, r1, #16
 8000dfe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000e02:	fb00 f60e 	mul.w	r6, r0, lr
 8000e06:	429e      	cmp	r6, r3
 8000e08:	fa04 f402 	lsl.w	r4, r4, r2
 8000e0c:	d908      	bls.n	8000e20 <__udivmoddi4+0x260>
 8000e0e:	eb1c 0303 	adds.w	r3, ip, r3
 8000e12:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e16:	d22f      	bcs.n	8000e78 <__udivmoddi4+0x2b8>
 8000e18:	429e      	cmp	r6, r3
 8000e1a:	d92d      	bls.n	8000e78 <__udivmoddi4+0x2b8>
 8000e1c:	3802      	subs	r0, #2
 8000e1e:	4463      	add	r3, ip
 8000e20:	1b9b      	subs	r3, r3, r6
 8000e22:	b289      	uxth	r1, r1
 8000e24:	fbb3 f6f7 	udiv	r6, r3, r7
 8000e28:	fb07 3316 	mls	r3, r7, r6, r3
 8000e2c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e30:	fb06 f30e 	mul.w	r3, r6, lr
 8000e34:	428b      	cmp	r3, r1
 8000e36:	d908      	bls.n	8000e4a <__udivmoddi4+0x28a>
 8000e38:	eb1c 0101 	adds.w	r1, ip, r1
 8000e3c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000e40:	d216      	bcs.n	8000e70 <__udivmoddi4+0x2b0>
 8000e42:	428b      	cmp	r3, r1
 8000e44:	d914      	bls.n	8000e70 <__udivmoddi4+0x2b0>
 8000e46:	3e02      	subs	r6, #2
 8000e48:	4461      	add	r1, ip
 8000e4a:	1ac9      	subs	r1, r1, r3
 8000e4c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000e50:	e738      	b.n	8000cc4 <__udivmoddi4+0x104>
 8000e52:	462e      	mov	r6, r5
 8000e54:	4628      	mov	r0, r5
 8000e56:	e705      	b.n	8000c64 <__udivmoddi4+0xa4>
 8000e58:	4606      	mov	r6, r0
 8000e5a:	e6e3      	b.n	8000c24 <__udivmoddi4+0x64>
 8000e5c:	4618      	mov	r0, r3
 8000e5e:	e6f8      	b.n	8000c52 <__udivmoddi4+0x92>
 8000e60:	454b      	cmp	r3, r9
 8000e62:	d2a9      	bcs.n	8000db8 <__udivmoddi4+0x1f8>
 8000e64:	ebb9 0802 	subs.w	r8, r9, r2
 8000e68:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000e6c:	3801      	subs	r0, #1
 8000e6e:	e7a3      	b.n	8000db8 <__udivmoddi4+0x1f8>
 8000e70:	4646      	mov	r6, r8
 8000e72:	e7ea      	b.n	8000e4a <__udivmoddi4+0x28a>
 8000e74:	4620      	mov	r0, r4
 8000e76:	e794      	b.n	8000da2 <__udivmoddi4+0x1e2>
 8000e78:	4640      	mov	r0, r8
 8000e7a:	e7d1      	b.n	8000e20 <__udivmoddi4+0x260>
 8000e7c:	46d0      	mov	r8, sl
 8000e7e:	e77b      	b.n	8000d78 <__udivmoddi4+0x1b8>
 8000e80:	3b02      	subs	r3, #2
 8000e82:	4461      	add	r1, ip
 8000e84:	e732      	b.n	8000cec <__udivmoddi4+0x12c>
 8000e86:	4630      	mov	r0, r6
 8000e88:	e709      	b.n	8000c9e <__udivmoddi4+0xde>
 8000e8a:	4464      	add	r4, ip
 8000e8c:	3802      	subs	r0, #2
 8000e8e:	e742      	b.n	8000d16 <__udivmoddi4+0x156>

08000e90 <__aeabi_idiv0>:
 8000e90:	4770      	bx	lr
 8000e92:	bf00      	nop
 8000e94:	0000      	movs	r0, r0
	...

08000e98 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000e98:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8000e9c:	b084      	sub	sp, #16
 8000e9e:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
   HAL_Init();
 8000ea0:	f003 fe10 	bl	8004ac4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ea4:	f000 fda0 	bl	80019e8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000ea8:	f000 ff72 	bl	8001d90 <MX_GPIO_Init>
  MX_DMA_Init();
 8000eac:	f000 ff38 	bl	8001d20 <MX_DMA_Init>
  MX_USART2_UART_Init();
 8000eb0:	f000 ff0a 	bl	8001cc8 <MX_USART2_UART_Init>
  MX_TIM11_Init();
 8000eb4:	f000 fee4 	bl	8001c80 <MX_TIM11_Init>
  MX_SPI3_Init();
 8000eb8:	f000 fe2c 	bl	8001b14 <MX_SPI3_Init>
  MX_TIM2_Init();
 8000ebc:	f000 fe60 	bl	8001b80 <MX_TIM2_Init>
  MX_I2C1_Init();
 8000ec0:	f000 fdfa 	bl	8001ab8 <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */

  HAL_TIM_Base_Start_IT(&htim11);
 8000ec4:	488e      	ldr	r0, [pc, #568]	; (8001100 <main+0x268>)
 8000ec6:	f008 fc21 	bl	800970c <HAL_TIM_Base_Start_IT>
  HAL_UART_Receive_DMA(&huart2, Receive, nbyte);
 8000eca:	4b8e      	ldr	r3, [pc, #568]	; (8001104 <main+0x26c>)
 8000ecc:	781b      	ldrb	r3, [r3, #0]
 8000ece:	b29b      	uxth	r3, r3
 8000ed0:	461a      	mov	r2, r3
 8000ed2:	498d      	ldr	r1, [pc, #564]	; (8001108 <main+0x270>)
 8000ed4:	488d      	ldr	r0, [pc, #564]	; (800110c <main+0x274>)
 8000ed6:	f009 fc59 	bl	800a78c <HAL_UART_Receive_DMA>
  NFgetstate();
 8000eda:	f002 fa23 	bl	8003324 <NFgetstate>
  NFstate = 0x78;
 8000ede:	4b8c      	ldr	r3, [pc, #560]	; (8001110 <main+0x278>)
 8000ee0:	2278      	movs	r2, #120	; 0x78
 8000ee2:	701a      	strb	r2, [r3, #0]
  //PWM Generator set
  HAL_TIM_Base_Start(&htim2);
 8000ee4:	488b      	ldr	r0, [pc, #556]	; (8001114 <main+0x27c>)
 8000ee6:	f008 fbb7 	bl	8009658 <HAL_TIM_Base_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 8000eea:	2100      	movs	r1, #0
 8000eec:	4889      	ldr	r0, [pc, #548]	; (8001114 <main+0x27c>)
 8000eee:	f008 fcc9 	bl	8009884 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8000ef2:	2104      	movs	r1, #4
 8000ef4:	4887      	ldr	r0, [pc, #540]	; (8001114 <main+0x27c>)
 8000ef6:	f008 fcc5 	bl	8009884 <HAL_TIM_PWM_Start>

  //Encoder set
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 8000efa:	2201      	movs	r2, #1
 8000efc:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000f00:	4885      	ldr	r0, [pc, #532]	; (8001118 <main+0x280>)
 8000f02:	f004 fd0f 	bl	8005924 <HAL_GPIO_WritePin>
	  static uint64_t timeset = 0;
	  static uint64_t timeset2 = 0;
	  static uint64_t timeset3 = 0;
	  static uint64_t timeStamp = 0;
	  static GPIO_PinState B1State2[2] = {0};
	  B1State2[0]= HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8);
 8000f06:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000f0a:	4884      	ldr	r0, [pc, #528]	; (800111c <main+0x284>)
 8000f0c:	f004 fcf2 	bl	80058f4 <HAL_GPIO_ReadPin>
 8000f10:	4603      	mov	r3, r0
 8000f12:	461a      	mov	r2, r3
 8000f14:	4b82      	ldr	r3, [pc, #520]	; (8001120 <main+0x288>)
 8000f16:	701a      	strb	r2, [r3, #0]

	  if(AMTcomplete || micros()-timeStamp>dt*1000000){
 8000f18:	4b82      	ldr	r3, [pc, #520]	; (8001124 <main+0x28c>)
 8000f1a:	781b      	ldrb	r3, [r3, #0]
 8000f1c:	2b00      	cmp	r3, #0
 8000f1e:	d114      	bne.n	8000f4a <main+0xb2>
 8000f20:	f002 fca2 	bl	8003868 <micros>
 8000f24:	4b80      	ldr	r3, [pc, #512]	; (8001128 <main+0x290>)
 8000f26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f2a:	ebb0 0802 	subs.w	r8, r0, r2
 8000f2e:	eb61 0903 	sbc.w	r9, r1, r3
 8000f32:	4640      	mov	r0, r8
 8000f34:	4649      	mov	r1, r9
 8000f36:	f7ff fad5 	bl	80004e4 <__aeabi_ul2d>
 8000f3a:	a36b      	add	r3, pc, #428	; (adr r3, 80010e8 <main+0x250>)
 8000f3c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f40:	f7ff fd96 	bl	8000a70 <__aeabi_dcmpgt>
 8000f44:	4603      	mov	r3, r0
 8000f46:	2b00      	cmp	r3, #0
 8000f48:	d002      	beq.n	8000f50 <main+0xb8>
	  		 AMT222getpos(&rawPos);
 8000f4a:	4878      	ldr	r0, [pc, #480]	; (800112c <main+0x294>)
 8000f4c:	f002 fa24 	bl	8003398 <AMT222getpos>
	  	  }

	  switch(State){
 8000f50:	4b77      	ldr	r3, [pc, #476]	; (8001130 <main+0x298>)
 8000f52:	781b      	ldrb	r3, [r3, #0]
 8000f54:	2b03      	cmp	r3, #3
 8000f56:	f000 848f 	beq.w	8001878 <main+0x9e0>
 8000f5a:	2b03      	cmp	r3, #3
 8000f5c:	dc05      	bgt.n	8000f6a <main+0xd2>
 8000f5e:	2b01      	cmp	r3, #1
 8000f60:	f000 81e5 	beq.w	800132e <main+0x496>
 8000f64:	2b02      	cmp	r3, #2
 8000f66:	f000 84a5 	beq.w	80018b4 <main+0xa1c>
	  default:
		  case Idle:
			  stop = 0;
 8000f6a:	4b72      	ldr	r3, [pc, #456]	; (8001134 <main+0x29c>)
 8000f6c:	2200      	movs	r2, #0
 8000f6e:	701a      	strb	r2, [r3, #0]
			  if (micros() - timeset3 > dt*1000000){
 8000f70:	f002 fc7a 	bl	8003868 <micros>
 8000f74:	4b70      	ldr	r3, [pc, #448]	; (8001138 <main+0x2a0>)
 8000f76:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f7a:	ebb0 0a02 	subs.w	sl, r0, r2
 8000f7e:	eb61 0b03 	sbc.w	fp, r1, r3
 8000f82:	4650      	mov	r0, sl
 8000f84:	4659      	mov	r1, fp
 8000f86:	f7ff faad 	bl	80004e4 <__aeabi_ul2d>
 8000f8a:	a357      	add	r3, pc, #348	; (adr r3, 80010e8 <main+0x250>)
 8000f8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f90:	f7ff fd6e 	bl	8000a70 <__aeabi_dcmpgt>
 8000f94:	4603      	mov	r3, r0
 8000f96:	2b00      	cmp	r3, #0
 8000f98:	d032      	beq.n	8001000 <main+0x168>
				  lowpass();
 8000f9a:	f001 fb45 	bl	8002628 <lowpass>
				  velo();
 8000f9e:	f001 fb0f 	bl	80025c0 <velo>
				  inverse_tran();
 8000fa2:	f001 fa89 	bl	80024b8 <inverse_tran>
				prediction(X_hat_t,P_t,F_t,Q_t);
 8000fa6:	4b65      	ldr	r3, [pc, #404]	; (800113c <main+0x2a4>)
 8000fa8:	4a65      	ldr	r2, [pc, #404]	; (8001140 <main+0x2a8>)
 8000faa:	4966      	ldr	r1, [pc, #408]	; (8001144 <main+0x2ac>)
 8000fac:	4866      	ldr	r0, [pc, #408]	; (8001148 <main+0x2b0>)
 8000fae:	f001 fbdb 	bl	8002768 <prediction>
				Update(X_hat_t,P_hat_t,DegAbs,R_t,H_t);
 8000fb2:	4b66      	ldr	r3, [pc, #408]	; (800114c <main+0x2b4>)
 8000fb4:	9300      	str	r3, [sp, #0]
 8000fb6:	4b66      	ldr	r3, [pc, #408]	; (8001150 <main+0x2b8>)
 8000fb8:	4a66      	ldr	r2, [pc, #408]	; (8001154 <main+0x2bc>)
 8000fba:	4967      	ldr	r1, [pc, #412]	; (8001158 <main+0x2c0>)
 8000fbc:	4862      	ldr	r0, [pc, #392]	; (8001148 <main+0x2b0>)
 8000fbe:	f001 fc29 	bl	8002814 <Update>
				kal_position = X_t[0][0];
 8000fc2:	4b66      	ldr	r3, [pc, #408]	; (800115c <main+0x2c4>)
 8000fc4:	681b      	ldr	r3, [r3, #0]
 8000fc6:	4a66      	ldr	r2, [pc, #408]	; (8001160 <main+0x2c8>)
 8000fc8:	6013      	str	r3, [r2, #0]
				kal_velocity = X_t[1][0];
 8000fca:	4b64      	ldr	r3, [pc, #400]	; (800115c <main+0x2c4>)
 8000fcc:	68db      	ldr	r3, [r3, #12]
 8000fce:	4a65      	ldr	r2, [pc, #404]	; (8001164 <main+0x2cc>)
 8000fd0:	6013      	str	r3, [r2, #0]
				kal_acceleration = X_t[2][0];
 8000fd2:	4b62      	ldr	r3, [pc, #392]	; (800115c <main+0x2c4>)
 8000fd4:	699b      	ldr	r3, [r3, #24]
 8000fd6:	4a64      	ldr	r2, [pc, #400]	; (8001168 <main+0x2d0>)
 8000fd8:	6013      	str	r3, [r2, #0]
				equal(X_hat_t,X_t,3,3);  //X_hat_t = X_t
 8000fda:	2303      	movs	r3, #3
 8000fdc:	2203      	movs	r2, #3
 8000fde:	495f      	ldr	r1, [pc, #380]	; (800115c <main+0x2c4>)
 8000fe0:	4859      	ldr	r0, [pc, #356]	; (8001148 <main+0x2b0>)
 8000fe2:	f001 fe19 	bl	8002c18 <equal>
				equal(P_hat_t,P_t,3,3); //P_hat_t = P_t
 8000fe6:	2303      	movs	r3, #3
 8000fe8:	2203      	movs	r2, #3
 8000fea:	4956      	ldr	r1, [pc, #344]	; (8001144 <main+0x2ac>)
 8000fec:	485a      	ldr	r0, [pc, #360]	; (8001158 <main+0x2c0>)
 8000fee:	f001 fe13 	bl	8002c18 <equal>
				  timeset3 = micros();
 8000ff2:	f002 fc39 	bl	8003868 <micros>
 8000ff6:	4602      	mov	r2, r0
 8000ff8:	460b      	mov	r3, r1
 8000ffa:	494f      	ldr	r1, [pc, #316]	; (8001138 <main+0x2a0>)
 8000ffc:	e9c1 2300 	strd	r2, r3, [r1]
			  }

			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_RESET);
 8001000:	2200      	movs	r2, #0
 8001002:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001006:	4845      	ldr	r0, [pc, #276]	; (800111c <main+0x284>)
 8001008:	f004 fc8c 	bl	8005924 <HAL_GPIO_WritePin>
			  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_SET);
 800100c:	2201      	movs	r2, #1
 800100e:	2180      	movs	r1, #128	; 0x80
 8001010:	4856      	ldr	r0, [pc, #344]	; (800116c <main+0x2d4>)
 8001012:	f004 fc87 	bl	8005924 <HAL_GPIO_WritePin>
			  if(setzero == 1){
 8001016:	4b56      	ldr	r3, [pc, #344]	; (8001170 <main+0x2d8>)
 8001018:	781b      	ldrb	r3, [r3, #0]
 800101a:	2b01      	cmp	r3, #1
 800101c:	d159      	bne.n	80010d2 <main+0x23a>
				  if (timeset2 < 1000000) {
 800101e:	4b55      	ldr	r3, [pc, #340]	; (8001174 <main+0x2dc>)
 8001020:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001024:	4954      	ldr	r1, [pc, #336]	; (8001178 <main+0x2e0>)
 8001026:	428a      	cmp	r2, r1
 8001028:	f173 0300 	sbcs.w	r3, r3, #0
 800102c:	d203      	bcs.n	8001036 <main+0x19e>
					  Drivemotor(-2500);
 800102e:	4853      	ldr	r0, [pc, #332]	; (800117c <main+0x2e4>)
 8001030:	f002 f902 	bl	8003238 <Drivemotor>
 8001034:	e046      	b.n	80010c4 <main+0x22c>
					  ;}
				  else if (timeset2 < 2000000) {
 8001036:	4b4f      	ldr	r3, [pc, #316]	; (8001174 <main+0x2dc>)
 8001038:	e9d3 2300 	ldrd	r2, r3, [r3]
 800103c:	4950      	ldr	r1, [pc, #320]	; (8001180 <main+0x2e8>)
 800103e:	428a      	cmp	r2, r1
 8001040:	f173 0300 	sbcs.w	r3, r3, #0
 8001044:	d204      	bcs.n	8001050 <main+0x1b8>
					  Drivemotor(2500);
 8001046:	f640 10c4 	movw	r0, #2500	; 0x9c4
 800104a:	f002 f8f5 	bl	8003238 <Drivemotor>
 800104e:	e039      	b.n	80010c4 <main+0x22c>
					  ;}
				  else{
					  postotra = 0 -current_rad_wrap;
 8001050:	4b4c      	ldr	r3, [pc, #304]	; (8001184 <main+0x2ec>)
 8001052:	edd3 7a00 	vldr	s15, [r3]
 8001056:	ed9f 7a4c 	vldr	s14, [pc, #304]	; 8001188 <main+0x2f0>
 800105a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800105e:	4b4b      	ldr	r3, [pc, #300]	; (800118c <main+0x2f4>)
 8001060:	edc3 7a00 	vstr	s15, [r3]
					  rad_before = current_rad_wrap;
 8001064:	4b47      	ldr	r3, [pc, #284]	; (8001184 <main+0x2ec>)
 8001066:	681b      	ldr	r3, [r3, #0]
 8001068:	4a49      	ldr	r2, [pc, #292]	; (8001190 <main+0x2f8>)
 800106a:	6013      	str	r3, [r2, #0]
					  Drivemotor(-2500);
 800106c:	4843      	ldr	r0, [pc, #268]	; (800117c <main+0x2e4>)
 800106e:	f002 f8e3 	bl	8003238 <Drivemotor>
					  if(current_rad >= 0.3 && current_rad <= 0.4){
 8001072:	4b48      	ldr	r3, [pc, #288]	; (8001194 <main+0x2fc>)
 8001074:	681b      	ldr	r3, [r3, #0]
 8001076:	4618      	mov	r0, r3
 8001078:	f7ff fa12 	bl	80004a0 <__aeabi_f2d>
 800107c:	a31c      	add	r3, pc, #112	; (adr r3, 80010f0 <main+0x258>)
 800107e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001082:	f7ff fceb 	bl	8000a5c <__aeabi_dcmpge>
 8001086:	4603      	mov	r3, r0
 8001088:	2b00      	cmp	r3, #0
 800108a:	d01b      	beq.n	80010c4 <main+0x22c>
 800108c:	4b41      	ldr	r3, [pc, #260]	; (8001194 <main+0x2fc>)
 800108e:	681b      	ldr	r3, [r3, #0]
 8001090:	4618      	mov	r0, r3
 8001092:	f7ff fa05 	bl	80004a0 <__aeabi_f2d>
 8001096:	a318      	add	r3, pc, #96	; (adr r3, 80010f8 <main+0x260>)
 8001098:	e9d3 2300 	ldrd	r2, r3, [r3]
 800109c:	f7ff fcd4 	bl	8000a48 <__aeabi_dcmple>
 80010a0:	4603      	mov	r3, r0
 80010a2:	2b00      	cmp	r3, #0
 80010a4:	d00e      	beq.n	80010c4 <main+0x22c>
						  Reached = 1;
 80010a6:	4b3c      	ldr	r3, [pc, #240]	; (8001198 <main+0x300>)
 80010a8:	2201      	movs	r2, #1
 80010aa:	701a      	strb	r2, [r3, #0]
						  HMEtimeStamp = HAL_GetTick();
 80010ac:	f003 fd70 	bl	8004b90 <HAL_GetTick>
 80010b0:	4603      	mov	r3, r0
 80010b2:	b29a      	uxth	r2, r3
 80010b4:	4b39      	ldr	r3, [pc, #228]	; (800119c <main+0x304>)
 80010b6:	801a      	strh	r2, [r3, #0]
						  setzero = 0;
 80010b8:	4b2d      	ldr	r3, [pc, #180]	; (8001170 <main+0x2d8>)
 80010ba:	2200      	movs	r2, #0
 80010bc:	701a      	strb	r2, [r3, #0]
						  Drivemotor(0);
 80010be:	2000      	movs	r0, #0
 80010c0:	f002 f8ba 	bl	8003238 <Drivemotor>
					  }
				  }
				  timeset2 = micros();
 80010c4:	f002 fbd0 	bl	8003868 <micros>
 80010c8:	4602      	mov	r2, r0
 80010ca:	460b      	mov	r3, r1
 80010cc:	4929      	ldr	r1, [pc, #164]	; (8001174 <main+0x2dc>)
 80010ce:	e9c1 2300 	strd	r2, r3, [r1]
			  }

			  if(nDestination != 0){
 80010d2:	4b33      	ldr	r3, [pc, #204]	; (80011a0 <main+0x308>)
 80010d4:	781b      	ldrb	r3, [r3, #0]
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	d066      	beq.n	80011a8 <main+0x310>
				  update = 1;
 80010da:	4b32      	ldr	r3, [pc, #200]	; (80011a4 <main+0x30c>)
 80010dc:	2201      	movs	r2, #1
 80010de:	701a      	strb	r2, [r3, #0]
 80010e0:	e065      	b.n	80011ae <main+0x316>
 80010e2:	bf00      	nop
 80010e4:	f3af 8000 	nop.w
 80010e8:	00000000 	.word	0x00000000
 80010ec:	40c38800 	.word	0x40c38800
 80010f0:	33333333 	.word	0x33333333
 80010f4:	3fd33333 	.word	0x3fd33333
 80010f8:	9999999a 	.word	0x9999999a
 80010fc:	3fd99999 	.word	0x3fd99999
 8001100:	20000380 	.word	0x20000380
 8001104:	20000026 	.word	0x20000026
 8001108:	20000554 	.word	0x20000554
 800110c:	200003c8 	.word	0x200003c8
 8001110:	2000056e 	.word	0x2000056e
 8001114:	20000338 	.word	0x20000338
 8001118:	40020400 	.word	0x40020400
 800111c:	40020000 	.word	0x40020000
 8001120:	200007dc 	.word	0x200007dc
 8001124:	2000002b 	.word	0x2000002b
 8001128:	200007e0 	.word	0x200007e0
 800112c:	2000057a 	.word	0x2000057a
 8001130:	200005e7 	.word	0x200005e7
 8001134:	200005a8 	.word	0x200005a8
 8001138:	200007e8 	.word	0x200007e8
 800113c:	2000011c 	.word	0x2000011c
 8001140:	20000068 	.word	0x20000068
 8001144:	20000768 	.word	0x20000768
 8001148:	20000744 	.word	0x20000744
 800114c:	200000b0 	.word	0x200000b0
 8001150:	200000f8 	.word	0x200000f8
 8001154:	20000624 	.word	0x20000624
 8001158:	2000078c 	.word	0x2000078c
 800115c:	20000720 	.word	0x20000720
 8001160:	200005ac 	.word	0x200005ac
 8001164:	200005b0 	.word	0x200005b0
 8001168:	200005b4 	.word	0x200005b4
 800116c:	40020800 	.word	0x40020800
 8001170:	20000014 	.word	0x20000014
 8001174:	200007f0 	.word	0x200007f0
 8001178:	000f4240 	.word	0x000f4240
 800117c:	fffff63c 	.word	0xfffff63c
 8001180:	001e8480 	.word	0x001e8480
 8001184:	20000580 	.word	0x20000580
 8001188:	00000000 	.word	0x00000000
 800118c:	200005dc 	.word	0x200005dc
 8001190:	200005e0 	.word	0x200005e0
 8001194:	2000057c 	.word	0x2000057c
 8001198:	2000053b 	.word	0x2000053b
 800119c:	2000056c 	.word	0x2000056c
 80011a0:	200004d0 	.word	0x200004d0
 80011a4:	200005e4 	.word	0x200005e4
			  }
			  else{
				  update = 0;
 80011a8:	4ba7      	ldr	r3, [pc, #668]	; (8001448 <main+0x5b0>)
 80011aa:	2200      	movs	r2, #0
 80011ac:	701a      	strb	r2, [r3, #0]
			  }
			  if(update == 1){ //UART Update
 80011ae:	4ba6      	ldr	r3, [pc, #664]	; (8001448 <main+0x5b0>)
 80011b0:	781b      	ldrb	r3, [r3, #0]
 80011b2:	2b01      	cmp	r3, #1
 80011b4:	f040 80a5 	bne.w	8001302 <main+0x46a>
				  topOmega = 0;
 80011b8:	4ba4      	ldr	r3, [pc, #656]	; (800144c <main+0x5b4>)
 80011ba:	f04f 0200 	mov.w	r2, #0
 80011be:	601a      	str	r2, [r3, #0]
				  Drivemotor(0);
 80011c0:	2000      	movs	r0, #0
 80011c2:	f002 f839 	bl	8003238 <Drivemotor>
				  if(firstcheck == 1){
 80011c6:	4ba2      	ldr	r3, [pc, #648]	; (8001450 <main+0x5b8>)
 80011c8:	edd3 7a00 	vldr	s15, [r3]
 80011cc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80011d0:	eef4 7a47 	vcmp.f32	s15, s14
 80011d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80011d8:	d150      	bne.n	800127c <main+0x3e4>
					  if(Destination[n] != 0){
 80011da:	4b9e      	ldr	r3, [pc, #632]	; (8001454 <main+0x5bc>)
 80011dc:	781b      	ldrb	r3, [r3, #0]
 80011de:	461a      	mov	r2, r3
 80011e0:	4b9d      	ldr	r3, [pc, #628]	; (8001458 <main+0x5c0>)
 80011e2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80011e6:	2b00      	cmp	r3, #0
 80011e8:	f000 808b 	beq.w	8001302 <main+0x46a>
						  inputpos = Destination[n]/57.2957795;
 80011ec:	4b99      	ldr	r3, [pc, #612]	; (8001454 <main+0x5bc>)
 80011ee:	781b      	ldrb	r3, [r3, #0]
 80011f0:	461a      	mov	r2, r3
 80011f2:	4b99      	ldr	r3, [pc, #612]	; (8001458 <main+0x5c0>)
 80011f4:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80011f8:	4618      	mov	r0, r3
 80011fa:	f7ff f93f 	bl	800047c <__aeabi_i2d>
 80011fe:	a38a      	add	r3, pc, #552	; (adr r3, 8001428 <main+0x590>)
 8001200:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001204:	f7ff face 	bl	80007a4 <__aeabi_ddiv>
 8001208:	4602      	mov	r2, r0
 800120a:	460b      	mov	r3, r1
 800120c:	4610      	mov	r0, r2
 800120e:	4619      	mov	r1, r3
 8001210:	f7ff fc6e 	bl	8000af0 <__aeabi_d2f>
 8001214:	4603      	mov	r3, r0
 8001216:	4a91      	ldr	r2, [pc, #580]	; (800145c <main+0x5c4>)
 8001218:	6013      	str	r3, [r2, #0]
						  postotra = inputpos-current_rad_wrap;
 800121a:	4b90      	ldr	r3, [pc, #576]	; (800145c <main+0x5c4>)
 800121c:	ed93 7a00 	vldr	s14, [r3]
 8001220:	4b8f      	ldr	r3, [pc, #572]	; (8001460 <main+0x5c8>)
 8001222:	edd3 7a00 	vldr	s15, [r3]
 8001226:	ee77 7a67 	vsub.f32	s15, s14, s15
 800122a:	4b8e      	ldr	r3, [pc, #568]	; (8001464 <main+0x5cc>)
 800122c:	edc3 7a00 	vstr	s15, [r3]
						  rad_before = current_rad_wrap;
 8001230:	4b8b      	ldr	r3, [pc, #556]	; (8001460 <main+0x5c8>)
 8001232:	681b      	ldr	r3, [r3, #0]
 8001234:	4a8c      	ldr	r2, [pc, #560]	; (8001468 <main+0x5d0>)
 8001236:	6013      	str	r3, [r2, #0]
						  if(postotra >= 0){
 8001238:	4b8a      	ldr	r3, [pc, #552]	; (8001464 <main+0x5cc>)
 800123a:	edd3 7a00 	vldr	s15, [r3]
 800123e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001242:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001246:	db03      	blt.n	8001250 <main+0x3b8>
							  direct = 1;}
 8001248:	4b88      	ldr	r3, [pc, #544]	; (800146c <main+0x5d4>)
 800124a:	2201      	movs	r2, #1
 800124c:	701a      	strb	r2, [r3, #0]
 800124e:	e00a      	b.n	8001266 <main+0x3ce>
						  else{
							  postotra = postotra*-1;
 8001250:	4b84      	ldr	r3, [pc, #528]	; (8001464 <main+0x5cc>)
 8001252:	edd3 7a00 	vldr	s15, [r3]
 8001256:	eef1 7a67 	vneg.f32	s15, s15
 800125a:	4b82      	ldr	r3, [pc, #520]	; (8001464 <main+0x5cc>)
 800125c:	edc3 7a00 	vstr	s15, [r3]
							  direct = 0;}
 8001260:	4b82      	ldr	r3, [pc, #520]	; (800146c <main+0x5d4>)
 8001262:	2200      	movs	r2, #0
 8001264:	701a      	strb	r2, [r3, #0]
						  State = Working;
 8001266:	4b82      	ldr	r3, [pc, #520]	; (8001470 <main+0x5d8>)
 8001268:	2201      	movs	r2, #1
 800126a:	701a      	strb	r2, [r3, #0]
						  firstcheck = 0;
 800126c:	4b78      	ldr	r3, [pc, #480]	; (8001450 <main+0x5b8>)
 800126e:	f04f 0200 	mov.w	r2, #0
 8001272:	601a      	str	r2, [r3, #0]
						  update = 0;
 8001274:	4b74      	ldr	r3, [pc, #464]	; (8001448 <main+0x5b0>)
 8001276:	2200      	movs	r2, #0
 8001278:	701a      	strb	r2, [r3, #0]
 800127a:	e042      	b.n	8001302 <main+0x46a>
					  }
				  }
				  else{
					  inputpos = Destination[n]/57.2957795;
 800127c:	4b75      	ldr	r3, [pc, #468]	; (8001454 <main+0x5bc>)
 800127e:	781b      	ldrb	r3, [r3, #0]
 8001280:	461a      	mov	r2, r3
 8001282:	4b75      	ldr	r3, [pc, #468]	; (8001458 <main+0x5c0>)
 8001284:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8001288:	4618      	mov	r0, r3
 800128a:	f7ff f8f7 	bl	800047c <__aeabi_i2d>
 800128e:	a366      	add	r3, pc, #408	; (adr r3, 8001428 <main+0x590>)
 8001290:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001294:	f7ff fa86 	bl	80007a4 <__aeabi_ddiv>
 8001298:	4602      	mov	r2, r0
 800129a:	460b      	mov	r3, r1
 800129c:	4610      	mov	r0, r2
 800129e:	4619      	mov	r1, r3
 80012a0:	f7ff fc26 	bl	8000af0 <__aeabi_d2f>
 80012a4:	4603      	mov	r3, r0
 80012a6:	4a6d      	ldr	r2, [pc, #436]	; (800145c <main+0x5c4>)
 80012a8:	6013      	str	r3, [r2, #0]
					  postotra = inputpos-current_rad_wrap;
 80012aa:	4b6c      	ldr	r3, [pc, #432]	; (800145c <main+0x5c4>)
 80012ac:	ed93 7a00 	vldr	s14, [r3]
 80012b0:	4b6b      	ldr	r3, [pc, #428]	; (8001460 <main+0x5c8>)
 80012b2:	edd3 7a00 	vldr	s15, [r3]
 80012b6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80012ba:	4b6a      	ldr	r3, [pc, #424]	; (8001464 <main+0x5cc>)
 80012bc:	edc3 7a00 	vstr	s15, [r3]
					  rad_before = current_rad_wrap;
 80012c0:	4b67      	ldr	r3, [pc, #412]	; (8001460 <main+0x5c8>)
 80012c2:	681b      	ldr	r3, [r3, #0]
 80012c4:	4a68      	ldr	r2, [pc, #416]	; (8001468 <main+0x5d0>)
 80012c6:	6013      	str	r3, [r2, #0]
					  if(postotra >= 0){
 80012c8:	4b66      	ldr	r3, [pc, #408]	; (8001464 <main+0x5cc>)
 80012ca:	edd3 7a00 	vldr	s15, [r3]
 80012ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80012d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012d6:	db03      	blt.n	80012e0 <main+0x448>
						  direct = 1;}
 80012d8:	4b64      	ldr	r3, [pc, #400]	; (800146c <main+0x5d4>)
 80012da:	2201      	movs	r2, #1
 80012dc:	701a      	strb	r2, [r3, #0]
 80012de:	e00a      	b.n	80012f6 <main+0x45e>
					  else{
						  postotra = postotra*-1;
 80012e0:	4b60      	ldr	r3, [pc, #384]	; (8001464 <main+0x5cc>)
 80012e2:	edd3 7a00 	vldr	s15, [r3]
 80012e6:	eef1 7a67 	vneg.f32	s15, s15
 80012ea:	4b5e      	ldr	r3, [pc, #376]	; (8001464 <main+0x5cc>)
 80012ec:	edc3 7a00 	vstr	s15, [r3]
						  direct = 0;}
 80012f0:	4b5e      	ldr	r3, [pc, #376]	; (800146c <main+0x5d4>)
 80012f2:	2200      	movs	r2, #0
 80012f4:	701a      	strb	r2, [r3, #0]
					  State = Working;
 80012f6:	4b5e      	ldr	r3, [pc, #376]	; (8001470 <main+0x5d8>)
 80012f8:	2201      	movs	r2, #1
 80012fa:	701a      	strb	r2, [r3, #0]
					  update = 0;
 80012fc:	4b52      	ldr	r3, [pc, #328]	; (8001448 <main+0x5b0>)
 80012fe:	2200      	movs	r2, #0
 8001300:	701a      	strb	r2, [r3, #0]
				  }
			  }

			  if(blue == 1){
 8001302:	4b5c      	ldr	r3, [pc, #368]	; (8001474 <main+0x5dc>)
 8001304:	781b      	ldrb	r3, [r3, #0]
 8001306:	2b01      	cmp	r3, #1
 8001308:	f040 832c 	bne.w	8001964 <main+0xacc>
				  postotra = 3.14;
 800130c:	4b55      	ldr	r3, [pc, #340]	; (8001464 <main+0x5cc>)
 800130e:	4a5a      	ldr	r2, [pc, #360]	; (8001478 <main+0x5e0>)
 8001310:	601a      	str	r2, [r3, #0]
				  limitOmega = 5;
 8001312:	4b5a      	ldr	r3, [pc, #360]	; (800147c <main+0x5e4>)
 8001314:	4a5a      	ldr	r2, [pc, #360]	; (8001480 <main+0x5e8>)
 8001316:	601a      	str	r2, [r3, #0]
				  direct = 1;
 8001318:	4b54      	ldr	r3, [pc, #336]	; (800146c <main+0x5d4>)
 800131a:	2201      	movs	r2, #1
 800131c:	701a      	strb	r2, [r3, #0]
				  rad_before = current_rad;
 800131e:	4b59      	ldr	r3, [pc, #356]	; (8001484 <main+0x5ec>)
 8001320:	681b      	ldr	r3, [r3, #0]
 8001322:	4a51      	ldr	r2, [pc, #324]	; (8001468 <main+0x5d0>)
 8001324:	6013      	str	r3, [r2, #0]
				  State = Working;
 8001326:	4b52      	ldr	r3, [pc, #328]	; (8001470 <main+0x5d8>)
 8001328:	2201      	movs	r2, #1
 800132a:	701a      	strb	r2, [r3, #0]
			  }
			  break;
 800132c:	e31a      	b.n	8001964 <main+0xacc>

		  case Working:
			blue = 0;
 800132e:	4b51      	ldr	r3, [pc, #324]	; (8001474 <main+0x5dc>)
 8001330:	2200      	movs	r2, #0
 8001332:	701a      	strb	r2, [r3, #0]
			HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_SET);
 8001334:	2201      	movs	r2, #1
 8001336:	f44f 7100 	mov.w	r1, #512	; 0x200
 800133a:	4853      	ldr	r0, [pc, #332]	; (8001488 <main+0x5f0>)
 800133c:	f004 faf2 	bl	8005924 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 8001340:	2200      	movs	r2, #0
 8001342:	2180      	movs	r1, #128	; 0x80
 8001344:	4851      	ldr	r0, [pc, #324]	; (800148c <main+0x5f4>)
 8001346:	f004 faed 	bl	8005924 <HAL_GPIO_WritePin>
			if (micros() - timeset > dt*1000000) { //1000 Hz
 800134a:	f002 fa8d 	bl	8003868 <micros>
 800134e:	4b50      	ldr	r3, [pc, #320]	; (8001490 <main+0x5f8>)
 8001350:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001354:	1a84      	subs	r4, r0, r2
 8001356:	603c      	str	r4, [r7, #0]
 8001358:	eb61 0303 	sbc.w	r3, r1, r3
 800135c:	607b      	str	r3, [r7, #4]
 800135e:	e9d7 0100 	ldrd	r0, r1, [r7]
 8001362:	f7ff f8bf 	bl	80004e4 <__aeabi_ul2d>
 8001366:	a332      	add	r3, pc, #200	; (adr r3, 8001430 <main+0x598>)
 8001368:	e9d3 2300 	ldrd	r2, r3, [r3]
 800136c:	f7ff fb80 	bl	8000a70 <__aeabi_dcmpgt>
 8001370:	4603      	mov	r3, r0
 8001372:	2b00      	cmp	r3, #0
 8001374:	f000 8132 	beq.w	80015dc <main+0x744>
				lowpass();
 8001378:	f001 f956 	bl	8002628 <lowpass>
				velo();
 800137c:	f001 f920 	bl	80025c0 <velo>
				if(postotra > 0.2){
 8001380:	4b38      	ldr	r3, [pc, #224]	; (8001464 <main+0x5cc>)
 8001382:	681b      	ldr	r3, [r3, #0]
 8001384:	4618      	mov	r0, r3
 8001386:	f7ff f88b 	bl	80004a0 <__aeabi_f2d>
 800138a:	a32b      	add	r3, pc, #172	; (adr r3, 8001438 <main+0x5a0>)
 800138c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001390:	f7ff fb6e 	bl	8000a70 <__aeabi_dcmpgt>
 8001394:	4603      	mov	r3, r0
 8001396:	2b00      	cmp	r3, #0
 8001398:	f000 80af 	beq.w	80014fa <main+0x662>
					else{
					Trajectory(postotra,limitOmega);
					CascadeController();
					}*/

					Trajectory(postotra,limitOmega);
 800139c:	4b31      	ldr	r3, [pc, #196]	; (8001464 <main+0x5cc>)
 800139e:	edd3 7a00 	vldr	s15, [r3]
 80013a2:	4b36      	ldr	r3, [pc, #216]	; (800147c <main+0x5e4>)
 80013a4:	ed93 7a00 	vldr	s14, [r3]
 80013a8:	eef0 0a47 	vmov.f32	s1, s14
 80013ac:	eeb0 0a67 	vmov.f32	s0, s15
 80013b0:	f001 fc6e 	bl	8002c90 <Trajectory>
					//CascadeController();
					if(PIDon == 1){
 80013b4:	4b37      	ldr	r3, [pc, #220]	; (8001494 <main+0x5fc>)
 80013b6:	781b      	ldrb	r3, [r3, #0]
 80013b8:	2b01      	cmp	r3, #1
 80013ba:	d104      	bne.n	80013c6 <main+0x52e>
						inverse_tran();
 80013bc:	f001 f87c 	bl	80024b8 <inverse_tran>
						CascadeController();
 80013c0:	f000 fd9e 	bl	8001f00 <CascadeController>
 80013c4:	e0c1      	b.n	800154a <main+0x6b2>
					}
					else{
						if(postotra < 0.349){
 80013c6:	4b27      	ldr	r3, [pc, #156]	; (8001464 <main+0x5cc>)
 80013c8:	681b      	ldr	r3, [r3, #0]
 80013ca:	4618      	mov	r0, r3
 80013cc:	f7ff f868 	bl	80004a0 <__aeabi_f2d>
 80013d0:	a31b      	add	r3, pc, #108	; (adr r3, 8001440 <main+0x5a8>)
 80013d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013d6:	f7ff fb2d 	bl	8000a34 <__aeabi_dcmplt>
 80013da:	4603      	mov	r3, r0
 80013dc:	2b00      	cmp	r3, #0
 80013de:	d002      	beq.n	80013e6 <main+0x54e>
							PIDon = 1;
 80013e0:	4b2c      	ldr	r3, [pc, #176]	; (8001494 <main+0x5fc>)
 80013e2:	2201      	movs	r2, #1
 80013e4:	701a      	strb	r2, [r3, #0]
						}
						if(direct == 1){
 80013e6:	4b21      	ldr	r3, [pc, #132]	; (800146c <main+0x5d4>)
 80013e8:	781b      	ldrb	r3, [r3, #0]
 80013ea:	2b01      	cmp	r3, #1
 80013ec:	d15c      	bne.n	80014a8 <main+0x610>
							PIDout = 2500;
 80013ee:	4b2a      	ldr	r3, [pc, #168]	; (8001498 <main+0x600>)
 80013f0:	4a2a      	ldr	r2, [pc, #168]	; (800149c <main+0x604>)
 80013f2:	601a      	str	r2, [r3, #0]
							if(velo_diff >= tra_velo && tra_velo != 0){
 80013f4:	4b2a      	ldr	r3, [pc, #168]	; (80014a0 <main+0x608>)
 80013f6:	ed93 7a00 	vldr	s14, [r3]
 80013fa:	4b2a      	ldr	r3, [pc, #168]	; (80014a4 <main+0x60c>)
 80013fc:	edd3 7a00 	vldr	s15, [r3]
 8001400:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001404:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001408:	db67      	blt.n	80014da <main+0x642>
 800140a:	4b26      	ldr	r3, [pc, #152]	; (80014a4 <main+0x60c>)
 800140c:	edd3 7a00 	vldr	s15, [r3]
 8001410:	eef5 7a40 	vcmp.f32	s15, #0.0
 8001414:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001418:	d05f      	beq.n	80014da <main+0x642>
								PIDon = 1;
 800141a:	4b1e      	ldr	r3, [pc, #120]	; (8001494 <main+0x5fc>)
 800141c:	2201      	movs	r2, #1
 800141e:	701a      	strb	r2, [r3, #0]
 8001420:	e05b      	b.n	80014da <main+0x642>
 8001422:	bf00      	nop
 8001424:	f3af 8000 	nop.w
 8001428:	1a47a9e3 	.word	0x1a47a9e3
 800142c:	404ca5dc 	.word	0x404ca5dc
 8001430:	00000000 	.word	0x00000000
 8001434:	40c38800 	.word	0x40c38800
 8001438:	9999999a 	.word	0x9999999a
 800143c:	3fc99999 	.word	0x3fc99999
 8001440:	189374bc 	.word	0x189374bc
 8001444:	3fd65604 	.word	0x3fd65604
 8001448:	200005e4 	.word	0x200005e4
 800144c:	20000544 	.word	0x20000544
 8001450:	20000038 	.word	0x20000038
 8001454:	20000548 	.word	0x20000548
 8001458:	200004d4 	.word	0x200004d4
 800145c:	200005d8 	.word	0x200005d8
 8001460:	20000580 	.word	0x20000580
 8001464:	200005dc 	.word	0x200005dc
 8001468:	200005e0 	.word	0x200005e0
 800146c:	20000034 	.word	0x20000034
 8001470:	200005e7 	.word	0x200005e7
 8001474:	200005e5 	.word	0x200005e5
 8001478:	4048f5c3 	.word	0x4048f5c3
 800147c:	2000001c 	.word	0x2000001c
 8001480:	40a00000 	.word	0x40a00000
 8001484:	2000057c 	.word	0x2000057c
 8001488:	40020000 	.word	0x40020000
 800148c:	40020800 	.word	0x40020800
 8001490:	200007f8 	.word	0x200007f8
 8001494:	200005e8 	.word	0x200005e8
 8001498:	20000614 	.word	0x20000614
 800149c:	451c4000 	.word	0x451c4000
 80014a0:	200007b8 	.word	0x200007b8
 80014a4:	200005bc 	.word	0x200005bc
							}
						}
						else{
							PIDout = -2500;
 80014a8:	4b8b      	ldr	r3, [pc, #556]	; (80016d8 <main+0x840>)
 80014aa:	4a8c      	ldr	r2, [pc, #560]	; (80016dc <main+0x844>)
 80014ac:	601a      	str	r2, [r3, #0]
							if(velo_diff <= tra_velo && tra_velo != 0){
 80014ae:	4b8c      	ldr	r3, [pc, #560]	; (80016e0 <main+0x848>)
 80014b0:	ed93 7a00 	vldr	s14, [r3]
 80014b4:	4b8b      	ldr	r3, [pc, #556]	; (80016e4 <main+0x84c>)
 80014b6:	edd3 7a00 	vldr	s15, [r3]
 80014ba:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80014be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80014c2:	d80a      	bhi.n	80014da <main+0x642>
 80014c4:	4b87      	ldr	r3, [pc, #540]	; (80016e4 <main+0x84c>)
 80014c6:	edd3 7a00 	vldr	s15, [r3]
 80014ca:	eef5 7a40 	vcmp.f32	s15, #0.0
 80014ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80014d2:	d002      	beq.n	80014da <main+0x642>
								PIDon = 1;
 80014d4:	4b84      	ldr	r3, [pc, #528]	; (80016e8 <main+0x850>)
 80014d6:	2201      	movs	r2, #1
 80014d8:	701a      	strb	r2, [r3, #0]
							}
						}
						error = tra_velo - velo_diff;
 80014da:	4b82      	ldr	r3, [pc, #520]	; (80016e4 <main+0x84c>)
 80014dc:	ed93 7a00 	vldr	s14, [r3]
 80014e0:	4b7f      	ldr	r3, [pc, #508]	; (80016e0 <main+0x848>)
 80014e2:	edd3 7a00 	vldr	s15, [r3]
 80014e6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80014ea:	4b80      	ldr	r3, [pc, #512]	; (80016ec <main+0x854>)
 80014ec:	edc3 7a00 	vstr	s15, [r3]
						prevError = error;
 80014f0:	4b7e      	ldr	r3, [pc, #504]	; (80016ec <main+0x854>)
 80014f2:	681b      	ldr	r3, [r3, #0]
 80014f4:	4a7e      	ldr	r2, [pc, #504]	; (80016f0 <main+0x858>)
 80014f6:	6013      	str	r3, [r2, #0]
 80014f8:	e027      	b.n	800154a <main+0x6b2>
					}
				}
				else{
					if(tuaall < 0.1){ //short distant
 80014fa:	4b7e      	ldr	r3, [pc, #504]	; (80016f4 <main+0x85c>)
 80014fc:	681b      	ldr	r3, [r3, #0]
 80014fe:	4618      	mov	r0, r3
 8001500:	f7fe ffce 	bl	80004a0 <__aeabi_f2d>
 8001504:	a370      	add	r3, pc, #448	; (adr r3, 80016c8 <main+0x830>)
 8001506:	e9d3 2300 	ldrd	r2, r3, [r3]
 800150a:	f7ff fa93 	bl	8000a34 <__aeabi_dcmplt>
 800150e:	4603      	mov	r3, r0
 8001510:	2b00      	cmp	r3, #0
 8001512:	d00b      	beq.n	800152c <main+0x694>
						if(direct == 1){
 8001514:	4b78      	ldr	r3, [pc, #480]	; (80016f8 <main+0x860>)
 8001516:	781b      	ldrb	r3, [r3, #0]
 8001518:	2b01      	cmp	r3, #1
 800151a:	d103      	bne.n	8001524 <main+0x68c>
							PIDout = 2100;}
 800151c:	4b6e      	ldr	r3, [pc, #440]	; (80016d8 <main+0x840>)
 800151e:	4a77      	ldr	r2, [pc, #476]	; (80016fc <main+0x864>)
 8001520:	601a      	str	r2, [r3, #0]
 8001522:	e00e      	b.n	8001542 <main+0x6aa>
						else{
							PIDout = -2100;}
 8001524:	4b6c      	ldr	r3, [pc, #432]	; (80016d8 <main+0x840>)
 8001526:	4a76      	ldr	r2, [pc, #472]	; (8001700 <main+0x868>)
 8001528:	601a      	str	r2, [r3, #0]
 800152a:	e00a      	b.n	8001542 <main+0x6aa>
					}
					else{
						if(direct == 1){
 800152c:	4b72      	ldr	r3, [pc, #456]	; (80016f8 <main+0x860>)
 800152e:	781b      	ldrb	r3, [r3, #0]
 8001530:	2b01      	cmp	r3, #1
 8001532:	d103      	bne.n	800153c <main+0x6a4>
							PIDout = 1300;}
 8001534:	4b68      	ldr	r3, [pc, #416]	; (80016d8 <main+0x840>)
 8001536:	4a73      	ldr	r2, [pc, #460]	; (8001704 <main+0x86c>)
 8001538:	601a      	str	r2, [r3, #0]
 800153a:	e002      	b.n	8001542 <main+0x6aa>
						else{
							PIDout = -1300;}
 800153c:	4b66      	ldr	r3, [pc, #408]	; (80016d8 <main+0x840>)
 800153e:	4a72      	ldr	r2, [pc, #456]	; (8001708 <main+0x870>)
 8001540:	601a      	str	r2, [r3, #0]
					}
					tf = 0;
 8001542:	4b72      	ldr	r3, [pc, #456]	; (800170c <main+0x874>)
 8001544:	f04f 0200 	mov.w	r2, #0
 8001548:	601a      	str	r2, [r3, #0]
				}
				Drivemotor(PIDout);
 800154a:	4b63      	ldr	r3, [pc, #396]	; (80016d8 <main+0x840>)
 800154c:	edd3 7a00 	vldr	s15, [r3]
 8001550:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001554:	ee17 0a90 	vmov	r0, s15
 8001558:	f001 fe6e 	bl	8003238 <Drivemotor>
				tuaall += dt;
 800155c:	4b65      	ldr	r3, [pc, #404]	; (80016f4 <main+0x85c>)
 800155e:	681b      	ldr	r3, [r3, #0]
 8001560:	4618      	mov	r0, r3
 8001562:	f7fe ff9d 	bl	80004a0 <__aeabi_f2d>
 8001566:	a35a      	add	r3, pc, #360	; (adr r3, 80016d0 <main+0x838>)
 8001568:	e9d3 2300 	ldrd	r2, r3, [r3]
 800156c:	f7fe fe3a 	bl	80001e4 <__adddf3>
 8001570:	4602      	mov	r2, r0
 8001572:	460b      	mov	r3, r1
 8001574:	4610      	mov	r0, r2
 8001576:	4619      	mov	r1, r3
 8001578:	f7ff faba 	bl	8000af0 <__aeabi_d2f>
 800157c:	4603      	mov	r3, r0
 800157e:	4a5d      	ldr	r2, [pc, #372]	; (80016f4 <main+0x85c>)
 8001580:	6013      	str	r3, [r2, #0]
				prediction(X_hat_t,P_t,F_t,Q_t);
 8001582:	4b63      	ldr	r3, [pc, #396]	; (8001710 <main+0x878>)
 8001584:	4a63      	ldr	r2, [pc, #396]	; (8001714 <main+0x87c>)
 8001586:	4964      	ldr	r1, [pc, #400]	; (8001718 <main+0x880>)
 8001588:	4864      	ldr	r0, [pc, #400]	; (800171c <main+0x884>)
 800158a:	f001 f8ed 	bl	8002768 <prediction>
				Update(X_hat_t,P_hat_t,DegAbs,R_t,H_t);
 800158e:	4b64      	ldr	r3, [pc, #400]	; (8001720 <main+0x888>)
 8001590:	9300      	str	r3, [sp, #0]
 8001592:	4b64      	ldr	r3, [pc, #400]	; (8001724 <main+0x88c>)
 8001594:	4a64      	ldr	r2, [pc, #400]	; (8001728 <main+0x890>)
 8001596:	4965      	ldr	r1, [pc, #404]	; (800172c <main+0x894>)
 8001598:	4860      	ldr	r0, [pc, #384]	; (800171c <main+0x884>)
 800159a:	f001 f93b 	bl	8002814 <Update>
				kal_position = X_t[0][0];
 800159e:	4b64      	ldr	r3, [pc, #400]	; (8001730 <main+0x898>)
 80015a0:	681b      	ldr	r3, [r3, #0]
 80015a2:	4a64      	ldr	r2, [pc, #400]	; (8001734 <main+0x89c>)
 80015a4:	6013      	str	r3, [r2, #0]
				kal_velocity = X_t[1][0];
 80015a6:	4b62      	ldr	r3, [pc, #392]	; (8001730 <main+0x898>)
 80015a8:	68db      	ldr	r3, [r3, #12]
 80015aa:	4a63      	ldr	r2, [pc, #396]	; (8001738 <main+0x8a0>)
 80015ac:	6013      	str	r3, [r2, #0]
				kal_acceleration = X_t[2][0];
 80015ae:	4b60      	ldr	r3, [pc, #384]	; (8001730 <main+0x898>)
 80015b0:	699b      	ldr	r3, [r3, #24]
 80015b2:	4a62      	ldr	r2, [pc, #392]	; (800173c <main+0x8a4>)
 80015b4:	6013      	str	r3, [r2, #0]
				equal(X_hat_t,X_t,3,3);  //X_hat_t = X_t
 80015b6:	2303      	movs	r3, #3
 80015b8:	2203      	movs	r2, #3
 80015ba:	495d      	ldr	r1, [pc, #372]	; (8001730 <main+0x898>)
 80015bc:	4857      	ldr	r0, [pc, #348]	; (800171c <main+0x884>)
 80015be:	f001 fb2b 	bl	8002c18 <equal>
				equal(P_hat_t,P_t,3,3); //P_hat_t = P_t
 80015c2:	2303      	movs	r3, #3
 80015c4:	2203      	movs	r2, #3
 80015c6:	4954      	ldr	r1, [pc, #336]	; (8001718 <main+0x880>)
 80015c8:	4858      	ldr	r0, [pc, #352]	; (800172c <main+0x894>)
 80015ca:	f001 fb25 	bl	8002c18 <equal>
				timeset = micros();
 80015ce:	f002 f94b 	bl	8003868 <micros>
 80015d2:	4602      	mov	r2, r0
 80015d4:	460b      	mov	r3, r1
 80015d6:	495a      	ldr	r1, [pc, #360]	; (8001740 <main+0x8a8>)
 80015d8:	e9c1 2300 	strd	r2, r3, [r1]
			}

			if(tuaall > tf && setzero == 0){
 80015dc:	4b45      	ldr	r3, [pc, #276]	; (80016f4 <main+0x85c>)
 80015de:	ed93 7a00 	vldr	s14, [r3]
 80015e2:	4b4a      	ldr	r3, [pc, #296]	; (800170c <main+0x874>)
 80015e4:	edd3 7a00 	vldr	s15, [r3]
 80015e8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80015ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80015f0:	f340 80d6 	ble.w	80017a0 <main+0x908>
 80015f4:	4b53      	ldr	r3, [pc, #332]	; (8001744 <main+0x8ac>)
 80015f6:	781b      	ldrb	r3, [r3, #0]
 80015f8:	2b00      	cmp	r3, #0
 80015fa:	f040 80d1 	bne.w	80017a0 <main+0x908>
				if(direct == 1){
 80015fe:	4b3e      	ldr	r3, [pc, #248]	; (80016f8 <main+0x860>)
 8001600:	781b      	ldrb	r3, [r3, #0]
 8001602:	2b01      	cmp	r3, #1
 8001604:	d122      	bne.n	800164c <main+0x7b4>
					if(deg > Destination[n]-0.1){
 8001606:	4b50      	ldr	r3, [pc, #320]	; (8001748 <main+0x8b0>)
 8001608:	681b      	ldr	r3, [r3, #0]
 800160a:	4618      	mov	r0, r3
 800160c:	f7fe ff48 	bl	80004a0 <__aeabi_f2d>
 8001610:	4604      	mov	r4, r0
 8001612:	460d      	mov	r5, r1
 8001614:	4b4d      	ldr	r3, [pc, #308]	; (800174c <main+0x8b4>)
 8001616:	781b      	ldrb	r3, [r3, #0]
 8001618:	461a      	mov	r2, r3
 800161a:	4b4d      	ldr	r3, [pc, #308]	; (8001750 <main+0x8b8>)
 800161c:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8001620:	4618      	mov	r0, r3
 8001622:	f7fe ff2b 	bl	800047c <__aeabi_i2d>
 8001626:	a328      	add	r3, pc, #160	; (adr r3, 80016c8 <main+0x830>)
 8001628:	e9d3 2300 	ldrd	r2, r3, [r3]
 800162c:	f7fe fdd8 	bl	80001e0 <__aeabi_dsub>
 8001630:	4602      	mov	r2, r0
 8001632:	460b      	mov	r3, r1
 8001634:	4620      	mov	r0, r4
 8001636:	4629      	mov	r1, r5
 8001638:	f7ff fa1a 	bl	8000a70 <__aeabi_dcmpgt>
 800163c:	4603      	mov	r3, r0
 800163e:	2b00      	cmp	r3, #0
 8001640:	d026      	beq.n	8001690 <main+0x7f8>
						finish = 1;
 8001642:	4b44      	ldr	r3, [pc, #272]	; (8001754 <main+0x8bc>)
 8001644:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8001648:	601a      	str	r2, [r3, #0]
 800164a:	e021      	b.n	8001690 <main+0x7f8>
					}
				}
				else
				{
					if(deg < Destination[n]+1.2){
 800164c:	4b3e      	ldr	r3, [pc, #248]	; (8001748 <main+0x8b0>)
 800164e:	681b      	ldr	r3, [r3, #0]
 8001650:	4618      	mov	r0, r3
 8001652:	f7fe ff25 	bl	80004a0 <__aeabi_f2d>
 8001656:	4604      	mov	r4, r0
 8001658:	460d      	mov	r5, r1
 800165a:	4b3c      	ldr	r3, [pc, #240]	; (800174c <main+0x8b4>)
 800165c:	781b      	ldrb	r3, [r3, #0]
 800165e:	461a      	mov	r2, r3
 8001660:	4b3b      	ldr	r3, [pc, #236]	; (8001750 <main+0x8b8>)
 8001662:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8001666:	4618      	mov	r0, r3
 8001668:	f7fe ff08 	bl	800047c <__aeabi_i2d>
 800166c:	f04f 3233 	mov.w	r2, #858993459	; 0x33333333
 8001670:	4b39      	ldr	r3, [pc, #228]	; (8001758 <main+0x8c0>)
 8001672:	f7fe fdb7 	bl	80001e4 <__adddf3>
 8001676:	4602      	mov	r2, r0
 8001678:	460b      	mov	r3, r1
 800167a:	4620      	mov	r0, r4
 800167c:	4629      	mov	r1, r5
 800167e:	f7ff f9d9 	bl	8000a34 <__aeabi_dcmplt>
 8001682:	4603      	mov	r3, r0
 8001684:	2b00      	cmp	r3, #0
 8001686:	d003      	beq.n	8001690 <main+0x7f8>
						finish = 1;
 8001688:	4b32      	ldr	r3, [pc, #200]	; (8001754 <main+0x8bc>)
 800168a:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800168e:	601a      	str	r2, [r3, #0]
					}
				}
				if(finish == 1){
 8001690:	4b30      	ldr	r3, [pc, #192]	; (8001754 <main+0x8bc>)
 8001692:	edd3 7a00 	vldr	s15, [r3]
 8001696:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800169a:	eef4 7a47 	vcmp.f32	s15, s14
 800169e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80016a2:	d17d      	bne.n	80017a0 <main+0x908>
					n++;
 80016a4:	4b29      	ldr	r3, [pc, #164]	; (800174c <main+0x8b4>)
 80016a6:	781b      	ldrb	r3, [r3, #0]
 80016a8:	3301      	adds	r3, #1
 80016aa:	b2da      	uxtb	r2, r3
 80016ac:	4b27      	ldr	r3, [pc, #156]	; (800174c <main+0x8b4>)
 80016ae:	701a      	strb	r2, [r3, #0]
					if(n < nDestination){
 80016b0:	4b26      	ldr	r3, [pc, #152]	; (800174c <main+0x8b4>)
 80016b2:	781a      	ldrb	r2, [r3, #0]
 80016b4:	4b29      	ldr	r3, [pc, #164]	; (800175c <main+0x8c4>)
 80016b6:	781b      	ldrb	r3, [r3, #0]
 80016b8:	429a      	cmp	r2, r3
 80016ba:	d253      	bcs.n	8001764 <main+0x8cc>
						update = 1;}
 80016bc:	4b28      	ldr	r3, [pc, #160]	; (8001760 <main+0x8c8>)
 80016be:	2201      	movs	r2, #1
 80016c0:	701a      	strb	r2, [r3, #0]
 80016c2:	e067      	b.n	8001794 <main+0x8fc>
 80016c4:	f3af 8000 	nop.w
 80016c8:	9999999a 	.word	0x9999999a
 80016cc:	3fb99999 	.word	0x3fb99999
 80016d0:	47ae147b 	.word	0x47ae147b
 80016d4:	3f847ae1 	.word	0x3f847ae1
 80016d8:	20000614 	.word	0x20000614
 80016dc:	c51c4000 	.word	0xc51c4000
 80016e0:	200007b8 	.word	0x200007b8
 80016e4:	200005bc 	.word	0x200005bc
 80016e8:	200005e8 	.word	0x200005e8
 80016ec:	2000061c 	.word	0x2000061c
 80016f0:	200005f8 	.word	0x200005f8
 80016f4:	200005d4 	.word	0x200005d4
 80016f8:	20000034 	.word	0x20000034
 80016fc:	45034000 	.word	0x45034000
 8001700:	c5034000 	.word	0xc5034000
 8001704:	44a28000 	.word	0x44a28000
 8001708:	c4a28000 	.word	0xc4a28000
 800170c:	200005cc 	.word	0x200005cc
 8001710:	2000011c 	.word	0x2000011c
 8001714:	20000068 	.word	0x20000068
 8001718:	20000768 	.word	0x20000768
 800171c:	20000744 	.word	0x20000744
 8001720:	200000b0 	.word	0x200000b0
 8001724:	200000f8 	.word	0x200000f8
 8001728:	20000624 	.word	0x20000624
 800172c:	2000078c 	.word	0x2000078c
 8001730:	20000720 	.word	0x20000720
 8001734:	200005ac 	.word	0x200005ac
 8001738:	200005b0 	.word	0x200005b0
 800173c:	200005b4 	.word	0x200005b4
 8001740:	200007f8 	.word	0x200007f8
 8001744:	20000014 	.word	0x20000014
 8001748:	20000584 	.word	0x20000584
 800174c:	20000548 	.word	0x20000548
 8001750:	200004d4 	.word	0x200004d4
 8001754:	200005f0 	.word	0x200005f0
 8001758:	3ff33333 	.word	0x3ff33333
 800175c:	200004d0 	.word	0x200004d0
 8001760:	200005e4 	.word	0x200005e4
					else{
						update = 0;
 8001764:	4b8a      	ldr	r3, [pc, #552]	; (8001990 <main+0xaf8>)
 8001766:	2200      	movs	r2, #0
 8001768:	701a      	strb	r2, [r3, #0]
						if(n == nStation || n == nDestination){
 800176a:	4b8a      	ldr	r3, [pc, #552]	; (8001994 <main+0xafc>)
 800176c:	781a      	ldrb	r2, [r3, #0]
 800176e:	4b8a      	ldr	r3, [pc, #552]	; (8001998 <main+0xb00>)
 8001770:	781b      	ldrb	r3, [r3, #0]
 8001772:	429a      	cmp	r2, r3
 8001774:	d005      	beq.n	8001782 <main+0x8ea>
 8001776:	4b87      	ldr	r3, [pc, #540]	; (8001994 <main+0xafc>)
 8001778:	781a      	ldrb	r2, [r3, #0]
 800177a:	4b88      	ldr	r3, [pc, #544]	; (800199c <main+0xb04>)
 800177c:	781b      	ldrb	r3, [r3, #0]
 800177e:	429a      	cmp	r2, r3
 8001780:	d102      	bne.n	8001788 <main+0x8f0>
							Reached = 1;
 8001782:	4b87      	ldr	r3, [pc, #540]	; (80019a0 <main+0xb08>)
 8001784:	2201      	movs	r2, #1
 8001786:	701a      	strb	r2, [r3, #0]
						}
						nDestination = 0;
 8001788:	4b84      	ldr	r3, [pc, #528]	; (800199c <main+0xb04>)
 800178a:	2200      	movs	r2, #0
 800178c:	701a      	strb	r2, [r3, #0]
						n = 0;
 800178e:	4b81      	ldr	r3, [pc, #516]	; (8001994 <main+0xafc>)
 8001790:	2200      	movs	r2, #0
 8001792:	701a      	strb	r2, [r3, #0]
					}
					State = Laser;
 8001794:	4b83      	ldr	r3, [pc, #524]	; (80019a4 <main+0xb0c>)
 8001796:	2202      	movs	r2, #2
 8001798:	701a      	strb	r2, [r3, #0]
					NFwriteFlag = 1;
 800179a:	4b83      	ldr	r3, [pc, #524]	; (80019a8 <main+0xb10>)
 800179c:	2201      	movs	r2, #1
 800179e:	701a      	strb	r2, [r3, #0]
				}
			}

			if(tuaall > 10 && tuaall > tf){
 80017a0:	4b82      	ldr	r3, [pc, #520]	; (80019ac <main+0xb14>)
 80017a2:	edd3 7a00 	vldr	s15, [r3]
 80017a6:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80017aa:	eef4 7ac7 	vcmpe.f32	s15, s14
 80017ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80017b2:	dd38      	ble.n	8001826 <main+0x98e>
 80017b4:	4b7d      	ldr	r3, [pc, #500]	; (80019ac <main+0xb14>)
 80017b6:	ed93 7a00 	vldr	s14, [r3]
 80017ba:	4b7d      	ldr	r3, [pc, #500]	; (80019b0 <main+0xb18>)
 80017bc:	edd3 7a00 	vldr	s15, [r3]
 80017c0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80017c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80017c8:	dd2d      	ble.n	8001826 <main+0x98e>

				n++;
 80017ca:	4b72      	ldr	r3, [pc, #456]	; (8001994 <main+0xafc>)
 80017cc:	781b      	ldrb	r3, [r3, #0]
 80017ce:	3301      	adds	r3, #1
 80017d0:	b2da      	uxtb	r2, r3
 80017d2:	4b70      	ldr	r3, [pc, #448]	; (8001994 <main+0xafc>)
 80017d4:	701a      	strb	r2, [r3, #0]
				if(n < nDestination){
 80017d6:	4b6f      	ldr	r3, [pc, #444]	; (8001994 <main+0xafc>)
 80017d8:	781a      	ldrb	r2, [r3, #0]
 80017da:	4b70      	ldr	r3, [pc, #448]	; (800199c <main+0xb04>)
 80017dc:	781b      	ldrb	r3, [r3, #0]
 80017de:	429a      	cmp	r2, r3
 80017e0:	d203      	bcs.n	80017ea <main+0x952>
					update = 1;}
 80017e2:	4b6b      	ldr	r3, [pc, #428]	; (8001990 <main+0xaf8>)
 80017e4:	2201      	movs	r2, #1
 80017e6:	701a      	strb	r2, [r3, #0]
 80017e8:	e017      	b.n	800181a <main+0x982>
				else{
					update = 0;
 80017ea:	4b69      	ldr	r3, [pc, #420]	; (8001990 <main+0xaf8>)
 80017ec:	2200      	movs	r2, #0
 80017ee:	701a      	strb	r2, [r3, #0]
					if(n == nStation || n == nDestination){
 80017f0:	4b68      	ldr	r3, [pc, #416]	; (8001994 <main+0xafc>)
 80017f2:	781a      	ldrb	r2, [r3, #0]
 80017f4:	4b68      	ldr	r3, [pc, #416]	; (8001998 <main+0xb00>)
 80017f6:	781b      	ldrb	r3, [r3, #0]
 80017f8:	429a      	cmp	r2, r3
 80017fa:	d005      	beq.n	8001808 <main+0x970>
 80017fc:	4b65      	ldr	r3, [pc, #404]	; (8001994 <main+0xafc>)
 80017fe:	781a      	ldrb	r2, [r3, #0]
 8001800:	4b66      	ldr	r3, [pc, #408]	; (800199c <main+0xb04>)
 8001802:	781b      	ldrb	r3, [r3, #0]
 8001804:	429a      	cmp	r2, r3
 8001806:	d102      	bne.n	800180e <main+0x976>
						Reached = 1;
 8001808:	4b65      	ldr	r3, [pc, #404]	; (80019a0 <main+0xb08>)
 800180a:	2201      	movs	r2, #1
 800180c:	701a      	strb	r2, [r3, #0]
					}
					nDestination = 0;
 800180e:	4b63      	ldr	r3, [pc, #396]	; (800199c <main+0xb04>)
 8001810:	2200      	movs	r2, #0
 8001812:	701a      	strb	r2, [r3, #0]
					n = 0;
 8001814:	4b5f      	ldr	r3, [pc, #380]	; (8001994 <main+0xafc>)
 8001816:	2200      	movs	r2, #0
 8001818:	701a      	strb	r2, [r3, #0]
				}
				State = Laser;
 800181a:	4b62      	ldr	r3, [pc, #392]	; (80019a4 <main+0xb0c>)
 800181c:	2202      	movs	r2, #2
 800181e:	701a      	strb	r2, [r3, #0]
				NFwriteFlag = 1;
 8001820:	4b61      	ldr	r3, [pc, #388]	; (80019a8 <main+0xb10>)
 8001822:	2201      	movs	r2, #1
 8001824:	701a      	strb	r2, [r3, #0]
			}

			if(velo_diff > topOmega){
 8001826:	4b63      	ldr	r3, [pc, #396]	; (80019b4 <main+0xb1c>)
 8001828:	ed93 7a00 	vldr	s14, [r3]
 800182c:	4b62      	ldr	r3, [pc, #392]	; (80019b8 <main+0xb20>)
 800182e:	edd3 7a00 	vldr	s15, [r3]
 8001832:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001836:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800183a:	dd12      	ble.n	8001862 <main+0x9ca>
				topOmega = velo_diff*9.5493;
 800183c:	4b5d      	ldr	r3, [pc, #372]	; (80019b4 <main+0xb1c>)
 800183e:	681b      	ldr	r3, [r3, #0]
 8001840:	4618      	mov	r0, r3
 8001842:	f7fe fe2d 	bl	80004a0 <__aeabi_f2d>
 8001846:	a350      	add	r3, pc, #320	; (adr r3, 8001988 <main+0xaf0>)
 8001848:	e9d3 2300 	ldrd	r2, r3, [r3]
 800184c:	f7fe fe80 	bl	8000550 <__aeabi_dmul>
 8001850:	4602      	mov	r2, r0
 8001852:	460b      	mov	r3, r1
 8001854:	4610      	mov	r0, r2
 8001856:	4619      	mov	r1, r3
 8001858:	f7ff f94a 	bl	8000af0 <__aeabi_d2f>
 800185c:	4603      	mov	r3, r0
 800185e:	4a56      	ldr	r2, [pc, #344]	; (80019b8 <main+0xb20>)
 8001860:	6013      	str	r3, [r2, #0]
			}

			if(stop == 1){
 8001862:	4b56      	ldr	r3, [pc, #344]	; (80019bc <main+0xb24>)
 8001864:	781b      	ldrb	r3, [r3, #0]
 8001866:	2b01      	cmp	r3, #1
 8001868:	d17e      	bne.n	8001968 <main+0xad0>
				State = Emerstop;
 800186a:	4b4e      	ldr	r3, [pc, #312]	; (80019a4 <main+0xb0c>)
 800186c:	2203      	movs	r2, #3
 800186e:	701a      	strb	r2, [r3, #0]
				Drivemotor(0);
 8001870:	2000      	movs	r0, #0
 8001872:	f001 fce1 	bl	8003238 <Drivemotor>
			}
			break;
 8001876:	e077      	b.n	8001968 <main+0xad0>

		  case Emerstop:
			HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_RESET);
 8001878:	2200      	movs	r2, #0
 800187a:	f44f 7100 	mov.w	r1, #512	; 0x200
 800187e:	4850      	ldr	r0, [pc, #320]	; (80019c0 <main+0xb28>)
 8001880:	f004 f850 	bl	8005924 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 8001884:	2200      	movs	r2, #0
 8001886:	2180      	movs	r1, #128	; 0x80
 8001888:	484e      	ldr	r0, [pc, #312]	; (80019c4 <main+0xb2c>)
 800188a:	f004 f84b 	bl	8005924 <HAL_GPIO_WritePin>
			if(B1State2[1] == GPIO_PIN_SET && B1State2[0] == GPIO_PIN_RESET){
 800188e:	4b4e      	ldr	r3, [pc, #312]	; (80019c8 <main+0xb30>)
 8001890:	785b      	ldrb	r3, [r3, #1]
 8001892:	2b01      	cmp	r3, #1
 8001894:	d109      	bne.n	80018aa <main+0xa12>
 8001896:	4b4c      	ldr	r3, [pc, #304]	; (80019c8 <main+0xb30>)
 8001898:	781b      	ldrb	r3, [r3, #0]
 800189a:	2b00      	cmp	r3, #0
 800189c:	d105      	bne.n	80018aa <main+0xa12>
				State = Idle;
 800189e:	4b41      	ldr	r3, [pc, #260]	; (80019a4 <main+0xb0c>)
 80018a0:	2200      	movs	r2, #0
 80018a2:	701a      	strb	r2, [r3, #0]
				setzero = 1;
 80018a4:	4b49      	ldr	r3, [pc, #292]	; (80019cc <main+0xb34>)
 80018a6:	2201      	movs	r2, #1
 80018a8:	701a      	strb	r2, [r3, #0]
			}
			B1State2[1] = B1State2[0];
 80018aa:	4b47      	ldr	r3, [pc, #284]	; (80019c8 <main+0xb30>)
 80018ac:	781a      	ldrb	r2, [r3, #0]
 80018ae:	4b46      	ldr	r3, [pc, #280]	; (80019c8 <main+0xb30>)
 80018b0:	705a      	strb	r2, [r3, #1]
			break;
 80018b2:	e05e      	b.n	8001972 <main+0xada>

		  case Laser:
			  if(setzero == 1){
 80018b4:	4b45      	ldr	r3, [pc, #276]	; (80019cc <main+0xb34>)
 80018b6:	781b      	ldrb	r3, [r3, #0]
 80018b8:	2b01      	cmp	r3, #1
 80018ba:	d105      	bne.n	80018c8 <main+0xa30>
				  State= Idle;
 80018bc:	4b39      	ldr	r3, [pc, #228]	; (80019a4 <main+0xb0c>)
 80018be:	2200      	movs	r2, #0
 80018c0:	701a      	strb	r2, [r3, #0]
				  reset();
 80018c2:	f000 fdc5 	bl	8002450 <reset>
				  break;
 80018c6:	e054      	b.n	8001972 <main+0xada>
			  }
			  reset();
 80018c8:	f000 fdc2 	bl	8002450 <reset>
			  //State= Idle;
			  switch(stateI2C){
 80018cc:	4b40      	ldr	r3, [pc, #256]	; (80019d0 <main+0xb38>)
 80018ce:	781b      	ldrb	r3, [r3, #0]
 80018d0:	2b00      	cmp	r3, #0
 80018d2:	d002      	beq.n	80018da <main+0xa42>
 80018d4:	2b01      	cmp	r3, #1
 80018d6:	d038      	beq.n	800194a <main+0xab2>
 80018d8:	e04b      	b.n	8001972 <main+0xada>
			  // Reached state
			  case 0:
				  switch(NFenable){
 80018da:	4b3e      	ldr	r3, [pc, #248]	; (80019d4 <main+0xb3c>)
 80018dc:	781b      	ldrb	r3, [r3, #0]
 80018de:	2b00      	cmp	r3, #0
 80018e0:	d02a      	beq.n	8001938 <main+0xaa0>
 80018e2:	2b01      	cmp	r3, #1
 80018e4:	d142      	bne.n	800196c <main+0xad4>
				  case 1:
					  NFgetstate();
 80018e6:	f001 fd1d 	bl	8003324 <NFgetstate>
					  if( NFwriteFlag && NFstate == 0x78 && (hi2c1.State == HAL_I2C_STATE_READY) ){
 80018ea:	4b2f      	ldr	r3, [pc, #188]	; (80019a8 <main+0xb10>)
 80018ec:	781b      	ldrb	r3, [r3, #0]
 80018ee:	2b00      	cmp	r3, #0
 80018f0:	d00f      	beq.n	8001912 <main+0xa7a>
 80018f2:	4b39      	ldr	r3, [pc, #228]	; (80019d8 <main+0xb40>)
 80018f4:	781b      	ldrb	r3, [r3, #0]
 80018f6:	2b78      	cmp	r3, #120	; 0x78
 80018f8:	d10b      	bne.n	8001912 <main+0xa7a>
 80018fa:	4b38      	ldr	r3, [pc, #224]	; (80019dc <main+0xb44>)
 80018fc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001900:	b2db      	uxtb	r3, r3
 8001902:	2b20      	cmp	r3, #32
 8001904:	d105      	bne.n	8001912 <main+0xa7a>
						  NFcontacton();
 8001906:	f001 fcf7 	bl	80032f8 <NFcontacton>
						  NFwriteFlag = 0;		// Reached var
 800190a:	4b27      	ldr	r3, [pc, #156]	; (80019a8 <main+0xb10>)
 800190c:	2200      	movs	r2, #0
 800190e:	701a      	strb	r2, [r3, #0]
					  }else if(NFstate == 0x12 || NFstate == 0x34 || NFstate == 0x56){
						  stateI2C = 1;
						  NFstate = 0;
					  }
					  break;
 8001910:	e019      	b.n	8001946 <main+0xaae>
					  }else if(NFstate == 0x12 || NFstate == 0x34 || NFstate == 0x56){
 8001912:	4b31      	ldr	r3, [pc, #196]	; (80019d8 <main+0xb40>)
 8001914:	781b      	ldrb	r3, [r3, #0]
 8001916:	2b12      	cmp	r3, #18
 8001918:	d007      	beq.n	800192a <main+0xa92>
 800191a:	4b2f      	ldr	r3, [pc, #188]	; (80019d8 <main+0xb40>)
 800191c:	781b      	ldrb	r3, [r3, #0]
 800191e:	2b34      	cmp	r3, #52	; 0x34
 8001920:	d003      	beq.n	800192a <main+0xa92>
 8001922:	4b2d      	ldr	r3, [pc, #180]	; (80019d8 <main+0xb40>)
 8001924:	781b      	ldrb	r3, [r3, #0]
 8001926:	2b56      	cmp	r3, #86	; 0x56
 8001928:	d10d      	bne.n	8001946 <main+0xaae>
						  stateI2C = 1;
 800192a:	4b29      	ldr	r3, [pc, #164]	; (80019d0 <main+0xb38>)
 800192c:	2201      	movs	r2, #1
 800192e:	701a      	strb	r2, [r3, #0]
						  NFstate = 0;
 8001930:	4b29      	ldr	r3, [pc, #164]	; (80019d8 <main+0xb40>)
 8001932:	2200      	movs	r2, #0
 8001934:	701a      	strb	r2, [r3, #0]
					  break;
 8001936:	e006      	b.n	8001946 <main+0xaae>
				  case 0:
					  NFwriteFlag = 0;
 8001938:	4b1b      	ldr	r3, [pc, #108]	; (80019a8 <main+0xb10>)
 800193a:	2200      	movs	r2, #0
 800193c:	701a      	strb	r2, [r3, #0]
					  State = Idle;
 800193e:	4b19      	ldr	r3, [pc, #100]	; (80019a4 <main+0xb0c>)
 8001940:	2200      	movs	r2, #0
 8001942:	701a      	strb	r2, [r3, #0]
					  // state = start;
					  break;
 8001944:	e000      	b.n	8001948 <main+0xab0>
					  break;
 8001946:	bf00      	nop
				  }
				  break;
 8001948:	e010      	b.n	800196c <main+0xad4>
			  case 1:
				  NFgetstate();
 800194a:	f001 fceb 	bl	8003324 <NFgetstate>
				  if(NFstate == 0x78){
 800194e:	4b22      	ldr	r3, [pc, #136]	; (80019d8 <main+0xb40>)
 8001950:	781b      	ldrb	r3, [r3, #0]
 8001952:	2b78      	cmp	r3, #120	; 0x78
 8001954:	d10c      	bne.n	8001970 <main+0xad8>
					  stateI2C = 0;
 8001956:	4b1e      	ldr	r3, [pc, #120]	; (80019d0 <main+0xb38>)
 8001958:	2200      	movs	r2, #0
 800195a:	701a      	strb	r2, [r3, #0]
					  State = Idle;
 800195c:	4b11      	ldr	r3, [pc, #68]	; (80019a4 <main+0xb0c>)
 800195e:	2200      	movs	r2, #0
 8001960:	701a      	strb	r2, [r3, #0]
				  }
				  break;
 8001962:	e005      	b.n	8001970 <main+0xad8>
			  break;
 8001964:	bf00      	nop
 8001966:	e004      	b.n	8001972 <main+0xada>
			break;
 8001968:	bf00      	nop
 800196a:	e002      	b.n	8001972 <main+0xada>
				  break;
 800196c:	bf00      	nop
 800196e:	e000      	b.n	8001972 <main+0xada>
				  break;
 8001970:	bf00      	nop
			  }
	  }

	  responseUART();
 8001972:	f002 f8e1 	bl	8003b38 <responseUART>
	  rad = current_rad_wrap;
 8001976:	4b1a      	ldr	r3, [pc, #104]	; (80019e0 <main+0xb48>)
 8001978:	681b      	ldr	r3, [r3, #0]
 800197a:	4a1a      	ldr	r2, [pc, #104]	; (80019e4 <main+0xb4c>)
 800197c:	6013      	str	r3, [r2, #0]

	  // Keep this work flow at the bottom of while loop. bo Reached will be reset here.
	  destinationACK();
 800197e:	f002 fca3 	bl	80042c8 <destinationACK>
  {
 8001982:	f7ff bac0 	b.w	8000f06 <main+0x6e>
 8001986:	bf00      	nop
 8001988:	d97f62b7 	.word	0xd97f62b7
 800198c:	4023193d 	.word	0x4023193d
 8001990:	200005e4 	.word	0x200005e4
 8001994:	20000548 	.word	0x20000548
 8001998:	20000538 	.word	0x20000538
 800199c:	200004d0 	.word	0x200004d0
 80019a0:	2000053b 	.word	0x2000053b
 80019a4:	200005e7 	.word	0x200005e7
 80019a8:	2000002a 	.word	0x2000002a
 80019ac:	200005d4 	.word	0x200005d4
 80019b0:	200005cc 	.word	0x200005cc
 80019b4:	200007b8 	.word	0x200007b8
 80019b8:	20000544 	.word	0x20000544
 80019bc:	200005a8 	.word	0x200005a8
 80019c0:	40020000 	.word	0x40020000
 80019c4:	40020800 	.word	0x40020800
 80019c8:	200007dc 	.word	0x200007dc
 80019cc:	20000014 	.word	0x20000014
 80019d0:	20000572 	.word	0x20000572
 80019d4:	20000029 	.word	0x20000029
 80019d8:	2000056e 	.word	0x2000056e
 80019dc:	200001cc 	.word	0x200001cc
 80019e0:	20000580 	.word	0x20000580
 80019e4:	20000540 	.word	0x20000540

080019e8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80019e8:	b580      	push	{r7, lr}
 80019ea:	b094      	sub	sp, #80	; 0x50
 80019ec:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80019ee:	f107 0320 	add.w	r3, r7, #32
 80019f2:	2230      	movs	r2, #48	; 0x30
 80019f4:	2100      	movs	r1, #0
 80019f6:	4618      	mov	r0, r3
 80019f8:	f00a f88c 	bl	800bb14 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80019fc:	f107 030c 	add.w	r3, r7, #12
 8001a00:	2200      	movs	r2, #0
 8001a02:	601a      	str	r2, [r3, #0]
 8001a04:	605a      	str	r2, [r3, #4]
 8001a06:	609a      	str	r2, [r3, #8]
 8001a08:	60da      	str	r2, [r3, #12]
 8001a0a:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a0c:	2300      	movs	r3, #0
 8001a0e:	60bb      	str	r3, [r7, #8]
 8001a10:	4b27      	ldr	r3, [pc, #156]	; (8001ab0 <SystemClock_Config+0xc8>)
 8001a12:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a14:	4a26      	ldr	r2, [pc, #152]	; (8001ab0 <SystemClock_Config+0xc8>)
 8001a16:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001a1a:	6413      	str	r3, [r2, #64]	; 0x40
 8001a1c:	4b24      	ldr	r3, [pc, #144]	; (8001ab0 <SystemClock_Config+0xc8>)
 8001a1e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a20:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a24:	60bb      	str	r3, [r7, #8]
 8001a26:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001a28:	2300      	movs	r3, #0
 8001a2a:	607b      	str	r3, [r7, #4]
 8001a2c:	4b21      	ldr	r3, [pc, #132]	; (8001ab4 <SystemClock_Config+0xcc>)
 8001a2e:	681b      	ldr	r3, [r3, #0]
 8001a30:	4a20      	ldr	r2, [pc, #128]	; (8001ab4 <SystemClock_Config+0xcc>)
 8001a32:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001a36:	6013      	str	r3, [r2, #0]
 8001a38:	4b1e      	ldr	r3, [pc, #120]	; (8001ab4 <SystemClock_Config+0xcc>)
 8001a3a:	681b      	ldr	r3, [r3, #0]
 8001a3c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001a40:	607b      	str	r3, [r7, #4]
 8001a42:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001a44:	2302      	movs	r3, #2
 8001a46:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001a48:	2301      	movs	r3, #1
 8001a4a:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001a4c:	2310      	movs	r3, #16
 8001a4e:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001a50:	2302      	movs	r3, #2
 8001a52:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001a54:	2300      	movs	r3, #0
 8001a56:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001a58:	2308      	movs	r3, #8
 8001a5a:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 100;
 8001a5c:	2364      	movs	r3, #100	; 0x64
 8001a5e:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001a60:	2302      	movs	r3, #2
 8001a62:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001a64:	2304      	movs	r3, #4
 8001a66:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001a68:	f107 0320 	add.w	r3, r7, #32
 8001a6c:	4618      	mov	r0, r3
 8001a6e:	f006 fbfb 	bl	8008268 <HAL_RCC_OscConfig>
 8001a72:	4603      	mov	r3, r0
 8001a74:	2b00      	cmp	r3, #0
 8001a76:	d001      	beq.n	8001a7c <SystemClock_Config+0x94>
  {
    Error_Handler();
 8001a78:	f002 fcde 	bl	8004438 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001a7c:	230f      	movs	r3, #15
 8001a7e:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001a80:	2302      	movs	r3, #2
 8001a82:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001a84:	2300      	movs	r3, #0
 8001a86:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8001a88:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001a8c:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001a8e:	2300      	movs	r3, #0
 8001a90:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8001a92:	f107 030c 	add.w	r3, r7, #12
 8001a96:	2103      	movs	r1, #3
 8001a98:	4618      	mov	r0, r3
 8001a9a:	f006 fe5d 	bl	8008758 <HAL_RCC_ClockConfig>
 8001a9e:	4603      	mov	r3, r0
 8001aa0:	2b00      	cmp	r3, #0
 8001aa2:	d001      	beq.n	8001aa8 <SystemClock_Config+0xc0>
  {
    Error_Handler();
 8001aa4:	f002 fcc8 	bl	8004438 <Error_Handler>
  }
}
 8001aa8:	bf00      	nop
 8001aaa:	3750      	adds	r7, #80	; 0x50
 8001aac:	46bd      	mov	sp, r7
 8001aae:	bd80      	pop	{r7, pc}
 8001ab0:	40023800 	.word	0x40023800
 8001ab4:	40007000 	.word	0x40007000

08001ab8 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001ab8:	b580      	push	{r7, lr}
 8001aba:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001abc:	4b12      	ldr	r3, [pc, #72]	; (8001b08 <MX_I2C1_Init+0x50>)
 8001abe:	4a13      	ldr	r2, [pc, #76]	; (8001b0c <MX_I2C1_Init+0x54>)
 8001ac0:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 8001ac2:	4b11      	ldr	r3, [pc, #68]	; (8001b08 <MX_I2C1_Init+0x50>)
 8001ac4:	4a12      	ldr	r2, [pc, #72]	; (8001b10 <MX_I2C1_Init+0x58>)
 8001ac6:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001ac8:	4b0f      	ldr	r3, [pc, #60]	; (8001b08 <MX_I2C1_Init+0x50>)
 8001aca:	2200      	movs	r2, #0
 8001acc:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8001ace:	4b0e      	ldr	r3, [pc, #56]	; (8001b08 <MX_I2C1_Init+0x50>)
 8001ad0:	2200      	movs	r2, #0
 8001ad2:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001ad4:	4b0c      	ldr	r3, [pc, #48]	; (8001b08 <MX_I2C1_Init+0x50>)
 8001ad6:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8001ada:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001adc:	4b0a      	ldr	r3, [pc, #40]	; (8001b08 <MX_I2C1_Init+0x50>)
 8001ade:	2200      	movs	r2, #0
 8001ae0:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8001ae2:	4b09      	ldr	r3, [pc, #36]	; (8001b08 <MX_I2C1_Init+0x50>)
 8001ae4:	2200      	movs	r2, #0
 8001ae6:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001ae8:	4b07      	ldr	r3, [pc, #28]	; (8001b08 <MX_I2C1_Init+0x50>)
 8001aea:	2200      	movs	r2, #0
 8001aec:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001aee:	4b06      	ldr	r3, [pc, #24]	; (8001b08 <MX_I2C1_Init+0x50>)
 8001af0:	2200      	movs	r2, #0
 8001af2:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001af4:	4804      	ldr	r0, [pc, #16]	; (8001b08 <MX_I2C1_Init+0x50>)
 8001af6:	f003 ff47 	bl	8005988 <HAL_I2C_Init>
 8001afa:	4603      	mov	r3, r0
 8001afc:	2b00      	cmp	r3, #0
 8001afe:	d001      	beq.n	8001b04 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8001b00:	f002 fc9a 	bl	8004438 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001b04:	bf00      	nop
 8001b06:	bd80      	pop	{r7, pc}
 8001b08:	200001cc 	.word	0x200001cc
 8001b0c:	40005400 	.word	0x40005400
 8001b10:	00061a80 	.word	0x00061a80

08001b14 <MX_SPI3_Init>:
  * @brief SPI3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI3_Init(void)
{
 8001b14:	b580      	push	{r7, lr}
 8001b16:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  /* SPI3 parameter configuration*/
  hspi3.Instance = SPI3;
 8001b18:	4b17      	ldr	r3, [pc, #92]	; (8001b78 <MX_SPI3_Init+0x64>)
 8001b1a:	4a18      	ldr	r2, [pc, #96]	; (8001b7c <MX_SPI3_Init+0x68>)
 8001b1c:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 8001b1e:	4b16      	ldr	r3, [pc, #88]	; (8001b78 <MX_SPI3_Init+0x64>)
 8001b20:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001b24:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 8001b26:	4b14      	ldr	r3, [pc, #80]	; (8001b78 <MX_SPI3_Init+0x64>)
 8001b28:	2200      	movs	r2, #0
 8001b2a:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_8BIT;
 8001b2c:	4b12      	ldr	r3, [pc, #72]	; (8001b78 <MX_SPI3_Init+0x64>)
 8001b2e:	2200      	movs	r2, #0
 8001b30:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001b32:	4b11      	ldr	r3, [pc, #68]	; (8001b78 <MX_SPI3_Init+0x64>)
 8001b34:	2200      	movs	r2, #0
 8001b36:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001b38:	4b0f      	ldr	r3, [pc, #60]	; (8001b78 <MX_SPI3_Init+0x64>)
 8001b3a:	2200      	movs	r2, #0
 8001b3c:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 8001b3e:	4b0e      	ldr	r3, [pc, #56]	; (8001b78 <MX_SPI3_Init+0x64>)
 8001b40:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001b44:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 8001b46:	4b0c      	ldr	r3, [pc, #48]	; (8001b78 <MX_SPI3_Init+0x64>)
 8001b48:	2220      	movs	r2, #32
 8001b4a:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001b4c:	4b0a      	ldr	r3, [pc, #40]	; (8001b78 <MX_SPI3_Init+0x64>)
 8001b4e:	2200      	movs	r2, #0
 8001b50:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 8001b52:	4b09      	ldr	r3, [pc, #36]	; (8001b78 <MX_SPI3_Init+0x64>)
 8001b54:	2200      	movs	r2, #0
 8001b56:	625a      	str	r2, [r3, #36]	; 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001b58:	4b07      	ldr	r3, [pc, #28]	; (8001b78 <MX_SPI3_Init+0x64>)
 8001b5a:	2200      	movs	r2, #0
 8001b5c:	629a      	str	r2, [r3, #40]	; 0x28
  hspi3.Init.CRCPolynomial = 10;
 8001b5e:	4b06      	ldr	r3, [pc, #24]	; (8001b78 <MX_SPI3_Init+0x64>)
 8001b60:	220a      	movs	r2, #10
 8001b62:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 8001b64:	4804      	ldr	r0, [pc, #16]	; (8001b78 <MX_SPI3_Init+0x64>)
 8001b66:	f007 f817 	bl	8008b98 <HAL_SPI_Init>
 8001b6a:	4603      	mov	r3, r0
 8001b6c:	2b00      	cmp	r3, #0
 8001b6e:	d001      	beq.n	8001b74 <MX_SPI3_Init+0x60>
  {
    Error_Handler();
 8001b70:	f002 fc62 	bl	8004438 <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 8001b74:	bf00      	nop
 8001b76:	bd80      	pop	{r7, pc}
 8001b78:	20000220 	.word	0x20000220
 8001b7c:	40003c00 	.word	0x40003c00

08001b80 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001b80:	b580      	push	{r7, lr}
 8001b82:	b08e      	sub	sp, #56	; 0x38
 8001b84:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001b86:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001b8a:	2200      	movs	r2, #0
 8001b8c:	601a      	str	r2, [r3, #0]
 8001b8e:	605a      	str	r2, [r3, #4]
 8001b90:	609a      	str	r2, [r3, #8]
 8001b92:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001b94:	f107 0320 	add.w	r3, r7, #32
 8001b98:	2200      	movs	r2, #0
 8001b9a:	601a      	str	r2, [r3, #0]
 8001b9c:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001b9e:	1d3b      	adds	r3, r7, #4
 8001ba0:	2200      	movs	r2, #0
 8001ba2:	601a      	str	r2, [r3, #0]
 8001ba4:	605a      	str	r2, [r3, #4]
 8001ba6:	609a      	str	r2, [r3, #8]
 8001ba8:	60da      	str	r2, [r3, #12]
 8001baa:	611a      	str	r2, [r3, #16]
 8001bac:	615a      	str	r2, [r3, #20]
 8001bae:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001bb0:	4b32      	ldr	r3, [pc, #200]	; (8001c7c <MX_TIM2_Init+0xfc>)
 8001bb2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001bb6:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 99;
 8001bb8:	4b30      	ldr	r3, [pc, #192]	; (8001c7c <MX_TIM2_Init+0xfc>)
 8001bba:	2263      	movs	r2, #99	; 0x63
 8001bbc:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001bbe:	4b2f      	ldr	r3, [pc, #188]	; (8001c7c <MX_TIM2_Init+0xfc>)
 8001bc0:	2200      	movs	r2, #0
 8001bc2:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 9999;
 8001bc4:	4b2d      	ldr	r3, [pc, #180]	; (8001c7c <MX_TIM2_Init+0xfc>)
 8001bc6:	f242 720f 	movw	r2, #9999	; 0x270f
 8001bca:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001bcc:	4b2b      	ldr	r3, [pc, #172]	; (8001c7c <MX_TIM2_Init+0xfc>)
 8001bce:	2200      	movs	r2, #0
 8001bd0:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001bd2:	4b2a      	ldr	r3, [pc, #168]	; (8001c7c <MX_TIM2_Init+0xfc>)
 8001bd4:	2200      	movs	r2, #0
 8001bd6:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001bd8:	4828      	ldr	r0, [pc, #160]	; (8001c7c <MX_TIM2_Init+0xfc>)
 8001bda:	f007 fced 	bl	80095b8 <HAL_TIM_Base_Init>
 8001bde:	4603      	mov	r3, r0
 8001be0:	2b00      	cmp	r3, #0
 8001be2:	d001      	beq.n	8001be8 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 8001be4:	f002 fc28 	bl	8004438 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001be8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001bec:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001bee:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8001bf2:	4619      	mov	r1, r3
 8001bf4:	4821      	ldr	r0, [pc, #132]	; (8001c7c <MX_TIM2_Init+0xfc>)
 8001bf6:	f008 f8bf 	bl	8009d78 <HAL_TIM_ConfigClockSource>
 8001bfa:	4603      	mov	r3, r0
 8001bfc:	2b00      	cmp	r3, #0
 8001bfe:	d001      	beq.n	8001c04 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 8001c00:	f002 fc1a 	bl	8004438 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001c04:	481d      	ldr	r0, [pc, #116]	; (8001c7c <MX_TIM2_Init+0xfc>)
 8001c06:	f007 fde3 	bl	80097d0 <HAL_TIM_PWM_Init>
 8001c0a:	4603      	mov	r3, r0
 8001c0c:	2b00      	cmp	r3, #0
 8001c0e:	d001      	beq.n	8001c14 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 8001c10:	f002 fc12 	bl	8004438 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001c14:	2300      	movs	r3, #0
 8001c16:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001c18:	2300      	movs	r3, #0
 8001c1a:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001c1c:	f107 0320 	add.w	r3, r7, #32
 8001c20:	4619      	mov	r1, r3
 8001c22:	4816      	ldr	r0, [pc, #88]	; (8001c7c <MX_TIM2_Init+0xfc>)
 8001c24:	f008 fc64 	bl	800a4f0 <HAL_TIMEx_MasterConfigSynchronization>
 8001c28:	4603      	mov	r3, r0
 8001c2a:	2b00      	cmp	r3, #0
 8001c2c:	d001      	beq.n	8001c32 <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 8001c2e:	f002 fc03 	bl	8004438 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001c32:	2360      	movs	r3, #96	; 0x60
 8001c34:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001c36:	2300      	movs	r3, #0
 8001c38:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001c3a:	2300      	movs	r3, #0
 8001c3c:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001c3e:	2300      	movs	r3, #0
 8001c40:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001c42:	1d3b      	adds	r3, r7, #4
 8001c44:	2200      	movs	r2, #0
 8001c46:	4619      	mov	r1, r3
 8001c48:	480c      	ldr	r0, [pc, #48]	; (8001c7c <MX_TIM2_Init+0xfc>)
 8001c4a:	f007 ffd3 	bl	8009bf4 <HAL_TIM_PWM_ConfigChannel>
 8001c4e:	4603      	mov	r3, r0
 8001c50:	2b00      	cmp	r3, #0
 8001c52:	d001      	beq.n	8001c58 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 8001c54:	f002 fbf0 	bl	8004438 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001c58:	1d3b      	adds	r3, r7, #4
 8001c5a:	2204      	movs	r2, #4
 8001c5c:	4619      	mov	r1, r3
 8001c5e:	4807      	ldr	r0, [pc, #28]	; (8001c7c <MX_TIM2_Init+0xfc>)
 8001c60:	f007 ffc8 	bl	8009bf4 <HAL_TIM_PWM_ConfigChannel>
 8001c64:	4603      	mov	r3, r0
 8001c66:	2b00      	cmp	r3, #0
 8001c68:	d001      	beq.n	8001c6e <MX_TIM2_Init+0xee>
  {
    Error_Handler();
 8001c6a:	f002 fbe5 	bl	8004438 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8001c6e:	4803      	ldr	r0, [pc, #12]	; (8001c7c <MX_TIM2_Init+0xfc>)
 8001c70:	f002 fd60 	bl	8004734 <HAL_TIM_MspPostInit>

}
 8001c74:	bf00      	nop
 8001c76:	3738      	adds	r7, #56	; 0x38
 8001c78:	46bd      	mov	sp, r7
 8001c7a:	bd80      	pop	{r7, pc}
 8001c7c:	20000338 	.word	0x20000338

08001c80 <MX_TIM11_Init>:
  * @brief TIM11 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM11_Init(void)
{
 8001c80:	b580      	push	{r7, lr}
 8001c82:	af00      	add	r7, sp, #0
  /* USER CODE END TIM11_Init 0 */

  /* USER CODE BEGIN TIM11_Init 1 */

  /* USER CODE END TIM11_Init 1 */
  htim11.Instance = TIM11;
 8001c84:	4b0e      	ldr	r3, [pc, #56]	; (8001cc0 <MX_TIM11_Init+0x40>)
 8001c86:	4a0f      	ldr	r2, [pc, #60]	; (8001cc4 <MX_TIM11_Init+0x44>)
 8001c88:	601a      	str	r2, [r3, #0]
  htim11.Init.Prescaler = 99;
 8001c8a:	4b0d      	ldr	r3, [pc, #52]	; (8001cc0 <MX_TIM11_Init+0x40>)
 8001c8c:	2263      	movs	r2, #99	; 0x63
 8001c8e:	605a      	str	r2, [r3, #4]
  htim11.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001c90:	4b0b      	ldr	r3, [pc, #44]	; (8001cc0 <MX_TIM11_Init+0x40>)
 8001c92:	2200      	movs	r2, #0
 8001c94:	609a      	str	r2, [r3, #8]
  htim11.Init.Period = 65535;
 8001c96:	4b0a      	ldr	r3, [pc, #40]	; (8001cc0 <MX_TIM11_Init+0x40>)
 8001c98:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001c9c:	60da      	str	r2, [r3, #12]
  htim11.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001c9e:	4b08      	ldr	r3, [pc, #32]	; (8001cc0 <MX_TIM11_Init+0x40>)
 8001ca0:	2200      	movs	r2, #0
 8001ca2:	611a      	str	r2, [r3, #16]
  htim11.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001ca4:	4b06      	ldr	r3, [pc, #24]	; (8001cc0 <MX_TIM11_Init+0x40>)
 8001ca6:	2200      	movs	r2, #0
 8001ca8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim11) != HAL_OK)
 8001caa:	4805      	ldr	r0, [pc, #20]	; (8001cc0 <MX_TIM11_Init+0x40>)
 8001cac:	f007 fc84 	bl	80095b8 <HAL_TIM_Base_Init>
 8001cb0:	4603      	mov	r3, r0
 8001cb2:	2b00      	cmp	r3, #0
 8001cb4:	d001      	beq.n	8001cba <MX_TIM11_Init+0x3a>
  {
    Error_Handler();
 8001cb6:	f002 fbbf 	bl	8004438 <Error_Handler>
  }
  /* USER CODE BEGIN TIM11_Init 2 */

  /* USER CODE END TIM11_Init 2 */

}
 8001cba:	bf00      	nop
 8001cbc:	bd80      	pop	{r7, pc}
 8001cbe:	bf00      	nop
 8001cc0:	20000380 	.word	0x20000380
 8001cc4:	40014800 	.word	0x40014800

08001cc8 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001cc8:	b580      	push	{r7, lr}
 8001cca:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001ccc:	4b12      	ldr	r3, [pc, #72]	; (8001d18 <MX_USART2_UART_Init+0x50>)
 8001cce:	4a13      	ldr	r2, [pc, #76]	; (8001d1c <MX_USART2_UART_Init+0x54>)
 8001cd0:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 512000;
 8001cd2:	4b11      	ldr	r3, [pc, #68]	; (8001d18 <MX_USART2_UART_Init+0x50>)
 8001cd4:	f44f 22fa 	mov.w	r2, #512000	; 0x7d000
 8001cd8:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_9B;
 8001cda:	4b0f      	ldr	r3, [pc, #60]	; (8001d18 <MX_USART2_UART_Init+0x50>)
 8001cdc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8001ce0:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001ce2:	4b0d      	ldr	r3, [pc, #52]	; (8001d18 <MX_USART2_UART_Init+0x50>)
 8001ce4:	2200      	movs	r2, #0
 8001ce6:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_EVEN;
 8001ce8:	4b0b      	ldr	r3, [pc, #44]	; (8001d18 <MX_USART2_UART_Init+0x50>)
 8001cea:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001cee:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001cf0:	4b09      	ldr	r3, [pc, #36]	; (8001d18 <MX_USART2_UART_Init+0x50>)
 8001cf2:	220c      	movs	r2, #12
 8001cf4:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001cf6:	4b08      	ldr	r3, [pc, #32]	; (8001d18 <MX_USART2_UART_Init+0x50>)
 8001cf8:	2200      	movs	r2, #0
 8001cfa:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001cfc:	4b06      	ldr	r3, [pc, #24]	; (8001d18 <MX_USART2_UART_Init+0x50>)
 8001cfe:	2200      	movs	r2, #0
 8001d00:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8001d02:	4805      	ldr	r0, [pc, #20]	; (8001d18 <MX_USART2_UART_Init+0x50>)
 8001d04:	f008 fc76 	bl	800a5f4 <HAL_UART_Init>
 8001d08:	4603      	mov	r3, r0
 8001d0a:	2b00      	cmp	r3, #0
 8001d0c:	d001      	beq.n	8001d12 <MX_USART2_UART_Init+0x4a>
  {
    Error_Handler();
 8001d0e:	f002 fb93 	bl	8004438 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8001d12:	bf00      	nop
 8001d14:	bd80      	pop	{r7, pc}
 8001d16:	bf00      	nop
 8001d18:	200003c8 	.word	0x200003c8
 8001d1c:	40004400 	.word	0x40004400

08001d20 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8001d20:	b580      	push	{r7, lr}
 8001d22:	b082      	sub	sp, #8
 8001d24:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 8001d26:	2300      	movs	r3, #0
 8001d28:	607b      	str	r3, [r7, #4]
 8001d2a:	4b18      	ldr	r3, [pc, #96]	; (8001d8c <MX_DMA_Init+0x6c>)
 8001d2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d2e:	4a17      	ldr	r2, [pc, #92]	; (8001d8c <MX_DMA_Init+0x6c>)
 8001d30:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001d34:	6313      	str	r3, [r2, #48]	; 0x30
 8001d36:	4b15      	ldr	r3, [pc, #84]	; (8001d8c <MX_DMA_Init+0x6c>)
 8001d38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d3a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001d3e:	607b      	str	r3, [r7, #4]
 8001d40:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 8001d42:	2200      	movs	r2, #0
 8001d44:	2100      	movs	r1, #0
 8001d46:	200b      	movs	r0, #11
 8001d48:	f003 f809 	bl	8004d5e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 8001d4c:	200b      	movs	r0, #11
 8001d4e:	f003 f822 	bl	8004d96 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 8001d52:	2200      	movs	r2, #0
 8001d54:	2100      	movs	r1, #0
 8001d56:	2010      	movs	r0, #16
 8001d58:	f003 f801 	bl	8004d5e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 8001d5c:	2010      	movs	r0, #16
 8001d5e:	f003 f81a 	bl	8004d96 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream6_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream6_IRQn, 0, 0);
 8001d62:	2200      	movs	r2, #0
 8001d64:	2100      	movs	r1, #0
 8001d66:	2011      	movs	r0, #17
 8001d68:	f002 fff9 	bl	8004d5e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream6_IRQn);
 8001d6c:	2011      	movs	r0, #17
 8001d6e:	f003 f812 	bl	8004d96 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream7_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream7_IRQn, 0, 0);
 8001d72:	2200      	movs	r2, #0
 8001d74:	2100      	movs	r1, #0
 8001d76:	202f      	movs	r0, #47	; 0x2f
 8001d78:	f002 fff1 	bl	8004d5e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream7_IRQn);
 8001d7c:	202f      	movs	r0, #47	; 0x2f
 8001d7e:	f003 f80a 	bl	8004d96 <HAL_NVIC_EnableIRQ>

}
 8001d82:	bf00      	nop
 8001d84:	3708      	adds	r7, #8
 8001d86:	46bd      	mov	sp, r7
 8001d88:	bd80      	pop	{r7, pc}
 8001d8a:	bf00      	nop
 8001d8c:	40023800 	.word	0x40023800

08001d90 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001d90:	b580      	push	{r7, lr}
 8001d92:	b08a      	sub	sp, #40	; 0x28
 8001d94:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d96:	f107 0314 	add.w	r3, r7, #20
 8001d9a:	2200      	movs	r2, #0
 8001d9c:	601a      	str	r2, [r3, #0]
 8001d9e:	605a      	str	r2, [r3, #4]
 8001da0:	609a      	str	r2, [r3, #8]
 8001da2:	60da      	str	r2, [r3, #12]
 8001da4:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001da6:	2300      	movs	r3, #0
 8001da8:	613b      	str	r3, [r7, #16]
 8001daa:	4b51      	ldr	r3, [pc, #324]	; (8001ef0 <MX_GPIO_Init+0x160>)
 8001dac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dae:	4a50      	ldr	r2, [pc, #320]	; (8001ef0 <MX_GPIO_Init+0x160>)
 8001db0:	f043 0304 	orr.w	r3, r3, #4
 8001db4:	6313      	str	r3, [r2, #48]	; 0x30
 8001db6:	4b4e      	ldr	r3, [pc, #312]	; (8001ef0 <MX_GPIO_Init+0x160>)
 8001db8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dba:	f003 0304 	and.w	r3, r3, #4
 8001dbe:	613b      	str	r3, [r7, #16]
 8001dc0:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001dc2:	2300      	movs	r3, #0
 8001dc4:	60fb      	str	r3, [r7, #12]
 8001dc6:	4b4a      	ldr	r3, [pc, #296]	; (8001ef0 <MX_GPIO_Init+0x160>)
 8001dc8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dca:	4a49      	ldr	r2, [pc, #292]	; (8001ef0 <MX_GPIO_Init+0x160>)
 8001dcc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001dd0:	6313      	str	r3, [r2, #48]	; 0x30
 8001dd2:	4b47      	ldr	r3, [pc, #284]	; (8001ef0 <MX_GPIO_Init+0x160>)
 8001dd4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dd6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001dda:	60fb      	str	r3, [r7, #12]
 8001ddc:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001dde:	2300      	movs	r3, #0
 8001de0:	60bb      	str	r3, [r7, #8]
 8001de2:	4b43      	ldr	r3, [pc, #268]	; (8001ef0 <MX_GPIO_Init+0x160>)
 8001de4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001de6:	4a42      	ldr	r2, [pc, #264]	; (8001ef0 <MX_GPIO_Init+0x160>)
 8001de8:	f043 0301 	orr.w	r3, r3, #1
 8001dec:	6313      	str	r3, [r2, #48]	; 0x30
 8001dee:	4b40      	ldr	r3, [pc, #256]	; (8001ef0 <MX_GPIO_Init+0x160>)
 8001df0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001df2:	f003 0301 	and.w	r3, r3, #1
 8001df6:	60bb      	str	r3, [r7, #8]
 8001df8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001dfa:	2300      	movs	r3, #0
 8001dfc:	607b      	str	r3, [r7, #4]
 8001dfe:	4b3c      	ldr	r3, [pc, #240]	; (8001ef0 <MX_GPIO_Init+0x160>)
 8001e00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e02:	4a3b      	ldr	r2, [pc, #236]	; (8001ef0 <MX_GPIO_Init+0x160>)
 8001e04:	f043 0302 	orr.w	r3, r3, #2
 8001e08:	6313      	str	r3, [r2, #48]	; 0x30
 8001e0a:	4b39      	ldr	r3, [pc, #228]	; (8001ef0 <MX_GPIO_Init+0x160>)
 8001e0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e0e:	f003 0302 	and.w	r3, r3, #2
 8001e12:	607b      	str	r3, [r7, #4]
 8001e14:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|GPIO_PIN_9, GPIO_PIN_RESET);
 8001e16:	2200      	movs	r2, #0
 8001e18:	f44f 7108 	mov.w	r1, #544	; 0x220
 8001e1c:	4835      	ldr	r0, [pc, #212]	; (8001ef4 <MX_GPIO_Init+0x164>)
 8001e1e:	f003 fd81 	bl	8005924 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(SS_GPIO_Port, SS_Pin, GPIO_PIN_RESET);
 8001e22:	2200      	movs	r2, #0
 8001e24:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001e28:	4833      	ldr	r0, [pc, #204]	; (8001ef8 <MX_GPIO_Init+0x168>)
 8001e2a:	f003 fd7b 	bl	8005924 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 8001e2e:	2200      	movs	r2, #0
 8001e30:	2180      	movs	r1, #128	; 0x80
 8001e32:	4832      	ldr	r0, [pc, #200]	; (8001efc <MX_GPIO_Init+0x16c>)
 8001e34:	f003 fd76 	bl	8005924 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8001e38:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001e3c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001e3e:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8001e42:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e44:	2300      	movs	r3, #0
 8001e46:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8001e48:	f107 0314 	add.w	r3, r7, #20
 8001e4c:	4619      	mov	r1, r3
 8001e4e:	482b      	ldr	r0, [pc, #172]	; (8001efc <MX_GPIO_Init+0x16c>)
 8001e50:	f003 fbcc 	bl	80055ec <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin PA9 */
  GPIO_InitStruct.Pin = LD2_Pin|GPIO_PIN_9;
 8001e54:	f44f 7308 	mov.w	r3, #544	; 0x220
 8001e58:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e5a:	2301      	movs	r3, #1
 8001e5c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e5e:	2300      	movs	r3, #0
 8001e60:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e62:	2300      	movs	r3, #0
 8001e64:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e66:	f107 0314 	add.w	r3, r7, #20
 8001e6a:	4619      	mov	r1, r3
 8001e6c:	4821      	ldr	r0, [pc, #132]	; (8001ef4 <MX_GPIO_Init+0x164>)
 8001e6e:	f003 fbbd 	bl	80055ec <HAL_GPIO_Init>

  /*Configure GPIO pin : SS_Pin */
  GPIO_InitStruct.Pin = SS_Pin;
 8001e72:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001e76:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e78:	2301      	movs	r3, #1
 8001e7a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e7c:	2300      	movs	r3, #0
 8001e7e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e80:	2300      	movs	r3, #0
 8001e82:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(SS_GPIO_Port, &GPIO_InitStruct);
 8001e84:	f107 0314 	add.w	r3, r7, #20
 8001e88:	4619      	mov	r1, r3
 8001e8a:	481b      	ldr	r0, [pc, #108]	; (8001ef8 <MX_GPIO_Init+0x168>)
 8001e8c:	f003 fbae 	bl	80055ec <HAL_GPIO_Init>

  /*Configure GPIO pin : PC7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001e90:	2380      	movs	r3, #128	; 0x80
 8001e92:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001e94:	2301      	movs	r3, #1
 8001e96:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e98:	2300      	movs	r3, #0
 8001e9a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e9c:	2300      	movs	r3, #0
 8001e9e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ea0:	f107 0314 	add.w	r3, r7, #20
 8001ea4:	4619      	mov	r1, r3
 8001ea6:	4815      	ldr	r0, [pc, #84]	; (8001efc <MX_GPIO_Init+0x16c>)
 8001ea8:	f003 fba0 	bl	80055ec <HAL_GPIO_Init>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001eac:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001eb0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001eb2:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8001eb6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001eb8:	2300      	movs	r3, #0
 8001eba:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ebc:	f107 0314 	add.w	r3, r7, #20
 8001ec0:	4619      	mov	r1, r3
 8001ec2:	480c      	ldr	r0, [pc, #48]	; (8001ef4 <MX_GPIO_Init+0x164>)
 8001ec4:	f003 fb92 	bl	80055ec <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8001ec8:	2200      	movs	r2, #0
 8001eca:	2100      	movs	r1, #0
 8001ecc:	2017      	movs	r0, #23
 8001ece:	f002 ff46 	bl	8004d5e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001ed2:	2017      	movs	r0, #23
 8001ed4:	f002 ff5f 	bl	8004d96 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8001ed8:	2200      	movs	r2, #0
 8001eda:	2100      	movs	r1, #0
 8001edc:	2028      	movs	r0, #40	; 0x28
 8001ede:	f002 ff3e 	bl	8004d5e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8001ee2:	2028      	movs	r0, #40	; 0x28
 8001ee4:	f002 ff57 	bl	8004d96 <HAL_NVIC_EnableIRQ>

}
 8001ee8:	bf00      	nop
 8001eea:	3728      	adds	r7, #40	; 0x28
 8001eec:	46bd      	mov	sp, r7
 8001eee:	bd80      	pop	{r7, pc}
 8001ef0:	40023800 	.word	0x40023800
 8001ef4:	40020000 	.word	0x40020000
 8001ef8:	40020400 	.word	0x40020400
 8001efc:	40020800 	.word	0x40020800

08001f00 <CascadeController>:

/* USER CODE BEGIN 4 */

//----------------------------------------------------------------< CONTROL >
void CascadeController()
{
 8001f00:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8001f04:	b088      	sub	sp, #32
 8001f06:	af00      	add	r7, sp, #0
	if(tuaall < tb/2 && postotra > 0.1){
 8001f08:	4b83      	ldr	r3, [pc, #524]	; (8002118 <CascadeController+0x218>)
 8001f0a:	edd3 7a00 	vldr	s15, [r3]
 8001f0e:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8001f12:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8001f16:	4b81      	ldr	r3, [pc, #516]	; (800211c <CascadeController+0x21c>)
 8001f18:	edd3 7a00 	vldr	s15, [r3]
 8001f1c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001f20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f24:	dd4f      	ble.n	8001fc6 <CascadeController+0xc6>
 8001f26:	4b7e      	ldr	r3, [pc, #504]	; (8002120 <CascadeController+0x220>)
 8001f28:	681b      	ldr	r3, [r3, #0]
 8001f2a:	4618      	mov	r0, r3
 8001f2c:	f7fe fab8 	bl	80004a0 <__aeabi_f2d>
 8001f30:	a375      	add	r3, pc, #468	; (adr r3, 8002108 <CascadeController+0x208>)
 8001f32:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f36:	f7fe fd9b 	bl	8000a70 <__aeabi_dcmpgt>
 8001f3a:	4603      	mov	r3, r0
 8001f3c:	2b00      	cmp	r3, #0
 8001f3e:	d042      	beq.n	8001fc6 <CascadeController+0xc6>
		pos_Kp = 3.07697250571067;
 8001f40:	4b78      	ldr	r3, [pc, #480]	; (8002124 <CascadeController+0x224>)
 8001f42:	4a79      	ldr	r2, [pc, #484]	; (8002128 <CascadeController+0x228>)
 8001f44:	601a      	str	r2, [r3, #0]
		pos_Ki = 0.71617437483172;
 8001f46:	4b79      	ldr	r3, [pc, #484]	; (800212c <CascadeController+0x22c>)
 8001f48:	4a79      	ldr	r2, [pc, #484]	; (8002130 <CascadeController+0x230>)
 8001f4a:	601a      	str	r2, [r3, #0]
		pos_Kd = 0.25445435315971;
 8001f4c:	4b79      	ldr	r3, [pc, #484]	; (8002134 <CascadeController+0x234>)
 8001f4e:	4a7a      	ldr	r2, [pc, #488]	; (8002138 <CascadeController+0x238>)
 8001f50:	601a      	str	r2, [r3, #0]
		velo_Kp = 1.5;
 8001f52:	4b7a      	ldr	r3, [pc, #488]	; (800213c <CascadeController+0x23c>)
 8001f54:	f04f 527f 	mov.w	r2, #1069547520	; 0x3fc00000
 8001f58:	601a      	str	r2, [r3, #0]
		velo_Ki = 0;
 8001f5a:	4b79      	ldr	r3, [pc, #484]	; (8002140 <CascadeController+0x240>)
 8001f5c:	f04f 0200 	mov.w	r2, #0
 8001f60:	601a      	str	r2, [r3, #0]
		velo_Kd = 0;
 8001f62:	4b78      	ldr	r3, [pc, #480]	; (8002144 <CascadeController+0x244>)
 8001f64:	f04f 0200 	mov.w	r2, #0
 8001f68:	601a      	str	r2, [r3, #0]
		if(direct == 1){
 8001f6a:	4b77      	ldr	r3, [pc, #476]	; (8002148 <CascadeController+0x248>)
 8001f6c:	781b      	ldrb	r3, [r3, #0]
 8001f6e:	2b01      	cmp	r3, #1
 8001f70:	d114      	bne.n	8001f9c <CascadeController+0x9c>
			ch_velo = velo_diff;
 8001f72:	4b76      	ldr	r3, [pc, #472]	; (800214c <CascadeController+0x24c>)
 8001f74:	681b      	ldr	r3, [r3, #0]
 8001f76:	4a76      	ldr	r2, [pc, #472]	; (8002150 <CascadeController+0x250>)
 8001f78:	6013      	str	r3, [r2, #0]
			if(ch_velo > tra_velo){
 8001f7a:	4b75      	ldr	r3, [pc, #468]	; (8002150 <CascadeController+0x250>)
 8001f7c:	ed93 7a00 	vldr	s14, [r3]
 8001f80:	4b74      	ldr	r3, [pc, #464]	; (8002154 <CascadeController+0x254>)
 8001f82:	edd3 7a00 	vldr	s15, [r3]
 8001f86:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001f8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001f8e:	dc00      	bgt.n	8001f92 <CascadeController+0x92>
		if(direct == 1){
 8001f90:	e02d      	b.n	8001fee <CascadeController+0xee>
				velo_diff = tra_velo;
 8001f92:	4b70      	ldr	r3, [pc, #448]	; (8002154 <CascadeController+0x254>)
 8001f94:	681b      	ldr	r3, [r3, #0]
 8001f96:	4a6d      	ldr	r2, [pc, #436]	; (800214c <CascadeController+0x24c>)
 8001f98:	6013      	str	r3, [r2, #0]
		if(direct == 1){
 8001f9a:	e028      	b.n	8001fee <CascadeController+0xee>
			}
		}
		else{
			ch_velo = velo_diff;
 8001f9c:	4b6b      	ldr	r3, [pc, #428]	; (800214c <CascadeController+0x24c>)
 8001f9e:	681b      	ldr	r3, [r3, #0]
 8001fa0:	4a6b      	ldr	r2, [pc, #428]	; (8002150 <CascadeController+0x250>)
 8001fa2:	6013      	str	r3, [r2, #0]
			if(ch_velo < tra_velo){
 8001fa4:	4b6a      	ldr	r3, [pc, #424]	; (8002150 <CascadeController+0x250>)
 8001fa6:	ed93 7a00 	vldr	s14, [r3]
 8001faa:	4b6a      	ldr	r3, [pc, #424]	; (8002154 <CascadeController+0x254>)
 8001fac:	edd3 7a00 	vldr	s15, [r3]
 8001fb0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001fb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001fb8:	d400      	bmi.n	8001fbc <CascadeController+0xbc>
		if(direct == 1){
 8001fba:	e018      	b.n	8001fee <CascadeController+0xee>
				velo_diff = tra_velo;
 8001fbc:	4b65      	ldr	r3, [pc, #404]	; (8002154 <CascadeController+0x254>)
 8001fbe:	681b      	ldr	r3, [r3, #0]
 8001fc0:	4a62      	ldr	r2, [pc, #392]	; (800214c <CascadeController+0x24c>)
 8001fc2:	6013      	str	r3, [r2, #0]
		if(direct == 1){
 8001fc4:	e013      	b.n	8001fee <CascadeController+0xee>
			}
		}
	}
	else{
		pos_Kp = 7.07697250571067;
 8001fc6:	4b57      	ldr	r3, [pc, #348]	; (8002124 <CascadeController+0x224>)
 8001fc8:	4a63      	ldr	r2, [pc, #396]	; (8002158 <CascadeController+0x258>)
 8001fca:	601a      	str	r2, [r3, #0]
		pos_Ki = 3.71617437483172;
 8001fcc:	4b57      	ldr	r3, [pc, #348]	; (800212c <CascadeController+0x22c>)
 8001fce:	4a63      	ldr	r2, [pc, #396]	; (800215c <CascadeController+0x25c>)
 8001fd0:	601a      	str	r2, [r3, #0]
		pos_Kd = 0.25445435315971;
 8001fd2:	4b58      	ldr	r3, [pc, #352]	; (8002134 <CascadeController+0x234>)
 8001fd4:	4a58      	ldr	r2, [pc, #352]	; (8002138 <CascadeController+0x238>)
 8001fd6:	601a      	str	r2, [r3, #0]
		velo_Kp = 2.5;
 8001fd8:	4b58      	ldr	r3, [pc, #352]	; (800213c <CascadeController+0x23c>)
 8001fda:	4a61      	ldr	r2, [pc, #388]	; (8002160 <CascadeController+0x260>)
 8001fdc:	601a      	str	r2, [r3, #0]
		velo_Ki = 0;
 8001fde:	4b58      	ldr	r3, [pc, #352]	; (8002140 <CascadeController+0x240>)
 8001fe0:	f04f 0200 	mov.w	r2, #0
 8001fe4:	601a      	str	r2, [r3, #0]
		velo_Kd = 0.5;
 8001fe6:	4b57      	ldr	r3, [pc, #348]	; (8002144 <CascadeController+0x244>)
 8001fe8:	f04f 527c 	mov.w	r2, #1056964608	; 0x3f000000
 8001fec:	601a      	str	r2, [r3, #0]
	}
	//position control******
	float error2 = tra_pos - current_rad_wrap; //setpoint - new_Data
 8001fee:	4b5d      	ldr	r3, [pc, #372]	; (8002164 <CascadeController+0x264>)
 8001ff0:	ed93 7a00 	vldr	s14, [r3]
 8001ff4:	4b5c      	ldr	r3, [pc, #368]	; (8002168 <CascadeController+0x268>)
 8001ff6:	edd3 7a00 	vldr	s15, [r3]
 8001ffa:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001ffe:	edc7 7a03 	vstr	s15, [r7, #12]
	float proportional2 = pos_Kp * error2;
 8002002:	4b48      	ldr	r3, [pc, #288]	; (8002124 <CascadeController+0x224>)
 8002004:	edd3 7a00 	vldr	s15, [r3]
 8002008:	ed97 7a03 	vldr	s14, [r7, #12]
 800200c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002010:	edc7 7a02 	vstr	s15, [r7, #8]
	integrator2 = integrator2 + (0.5*pos_Ki*dt*(error2+prevError2));
 8002014:	4b55      	ldr	r3, [pc, #340]	; (800216c <CascadeController+0x26c>)
 8002016:	681b      	ldr	r3, [r3, #0]
 8002018:	4618      	mov	r0, r3
 800201a:	f7fe fa41 	bl	80004a0 <__aeabi_f2d>
 800201e:	4604      	mov	r4, r0
 8002020:	460d      	mov	r5, r1
 8002022:	4b42      	ldr	r3, [pc, #264]	; (800212c <CascadeController+0x22c>)
 8002024:	681b      	ldr	r3, [r3, #0]
 8002026:	4618      	mov	r0, r3
 8002028:	f7fe fa3a 	bl	80004a0 <__aeabi_f2d>
 800202c:	f04f 0200 	mov.w	r2, #0
 8002030:	4b4f      	ldr	r3, [pc, #316]	; (8002170 <CascadeController+0x270>)
 8002032:	f7fe fa8d 	bl	8000550 <__aeabi_dmul>
 8002036:	4602      	mov	r2, r0
 8002038:	460b      	mov	r3, r1
 800203a:	4610      	mov	r0, r2
 800203c:	4619      	mov	r1, r3
 800203e:	a334      	add	r3, pc, #208	; (adr r3, 8002110 <CascadeController+0x210>)
 8002040:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002044:	f7fe fa84 	bl	8000550 <__aeabi_dmul>
 8002048:	4602      	mov	r2, r0
 800204a:	460b      	mov	r3, r1
 800204c:	4690      	mov	r8, r2
 800204e:	4699      	mov	r9, r3
 8002050:	4b48      	ldr	r3, [pc, #288]	; (8002174 <CascadeController+0x274>)
 8002052:	ed93 7a00 	vldr	s14, [r3]
 8002056:	edd7 7a03 	vldr	s15, [r7, #12]
 800205a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800205e:	ee17 0a90 	vmov	r0, s15
 8002062:	f7fe fa1d 	bl	80004a0 <__aeabi_f2d>
 8002066:	4602      	mov	r2, r0
 8002068:	460b      	mov	r3, r1
 800206a:	4640      	mov	r0, r8
 800206c:	4649      	mov	r1, r9
 800206e:	f7fe fa6f 	bl	8000550 <__aeabi_dmul>
 8002072:	4602      	mov	r2, r0
 8002074:	460b      	mov	r3, r1
 8002076:	4620      	mov	r0, r4
 8002078:	4629      	mov	r1, r5
 800207a:	f7fe f8b3 	bl	80001e4 <__adddf3>
 800207e:	4602      	mov	r2, r0
 8002080:	460b      	mov	r3, r1
 8002082:	4610      	mov	r0, r2
 8002084:	4619      	mov	r1, r3
 8002086:	f7fe fd33 	bl	8000af0 <__aeabi_d2f>
 800208a:	4603      	mov	r3, r0
 800208c:	4a37      	ldr	r2, [pc, #220]	; (800216c <CascadeController+0x26c>)
 800208e:	6013      	str	r3, [r2, #0]
	float limMinInt2, limMaxInt2;
	if(limMax > proportional2){
 8002090:	4b39      	ldr	r3, [pc, #228]	; (8002178 <CascadeController+0x278>)
 8002092:	edd3 7a00 	vldr	s15, [r3]
 8002096:	ed97 7a02 	vldr	s14, [r7, #8]
 800209a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800209e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80020a2:	d509      	bpl.n	80020b8 <CascadeController+0x1b8>
		limMaxInt2 = limMax - proportional2;}
 80020a4:	4b34      	ldr	r3, [pc, #208]	; (8002178 <CascadeController+0x278>)
 80020a6:	ed93 7a00 	vldr	s14, [r3]
 80020aa:	edd7 7a02 	vldr	s15, [r7, #8]
 80020ae:	ee77 7a67 	vsub.f32	s15, s14, s15
 80020b2:	edc7 7a06 	vstr	s15, [r7, #24]
 80020b6:	e002      	b.n	80020be <CascadeController+0x1be>
	else{
		limMaxInt2 = 0.0;}
 80020b8:	f04f 0300 	mov.w	r3, #0
 80020bc:	61bb      	str	r3, [r7, #24]
	if(limMin < proportional2){
 80020be:	4b2f      	ldr	r3, [pc, #188]	; (800217c <CascadeController+0x27c>)
 80020c0:	edd3 7a00 	vldr	s15, [r3]
 80020c4:	ed97 7a02 	vldr	s14, [r7, #8]
 80020c8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80020cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80020d0:	dd09      	ble.n	80020e6 <CascadeController+0x1e6>
		limMinInt2 = limMin - proportional2;}
 80020d2:	4b2a      	ldr	r3, [pc, #168]	; (800217c <CascadeController+0x27c>)
 80020d4:	ed93 7a00 	vldr	s14, [r3]
 80020d8:	edd7 7a02 	vldr	s15, [r7, #8]
 80020dc:	ee77 7a67 	vsub.f32	s15, s14, s15
 80020e0:	edc7 7a07 	vstr	s15, [r7, #28]
 80020e4:	e002      	b.n	80020ec <CascadeController+0x1ec>
	else{
		limMinInt2 = 0.0;}
 80020e6:	f04f 0300 	mov.w	r3, #0
 80020ea:	61fb      	str	r3, [r7, #28]
	//Clamp integrator
	if(integrator2 > limMaxInt2){
 80020ec:	4b1f      	ldr	r3, [pc, #124]	; (800216c <CascadeController+0x26c>)
 80020ee:	edd3 7a00 	vldr	s15, [r3]
 80020f2:	ed97 7a06 	vldr	s14, [r7, #24]
 80020f6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80020fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80020fe:	d53f      	bpl.n	8002180 <CascadeController+0x280>
		integrator2 = limMaxInt2;}
 8002100:	4a1a      	ldr	r2, [pc, #104]	; (800216c <CascadeController+0x26c>)
 8002102:	69bb      	ldr	r3, [r7, #24]
 8002104:	6013      	str	r3, [r2, #0]
 8002106:	e048      	b.n	800219a <CascadeController+0x29a>
 8002108:	9999999a 	.word	0x9999999a
 800210c:	3fb99999 	.word	0x3fb99999
 8002110:	47ae147b 	.word	0x47ae147b
 8002114:	3f847ae1 	.word	0x3f847ae1
 8002118:	200005c4 	.word	0x200005c4
 800211c:	200005d4 	.word	0x200005d4
 8002120:	200005dc 	.word	0x200005dc
 8002124:	20000008 	.word	0x20000008
 8002128:	4044ed1e 	.word	0x4044ed1e
 800212c:	2000000c 	.word	0x2000000c
 8002130:	3f375734 	.word	0x3f375734
 8002134:	20000010 	.word	0x20000010
 8002138:	3e8247d7 	.word	0x3e8247d7
 800213c:	20000000 	.word	0x20000000
 8002140:	200004cc 	.word	0x200004cc
 8002144:	20000004 	.word	0x20000004
 8002148:	20000034 	.word	0x20000034
 800214c:	200007b8 	.word	0x200007b8
 8002150:	200005ec 	.word	0x200005ec
 8002154:	200005bc 	.word	0x200005bc
 8002158:	40e2768f 	.word	0x40e2768f
 800215c:	406dd5cd 	.word	0x406dd5cd
 8002160:	40200000 	.word	0x40200000
 8002164:	200005b8 	.word	0x200005b8
 8002168:	20000580 	.word	0x20000580
 800216c:	20000604 	.word	0x20000604
 8002170:	3fe00000 	.word	0x3fe00000
 8002174:	20000608 	.word	0x20000608
 8002178:	20000040 	.word	0x20000040
 800217c:	2000003c 	.word	0x2000003c
	else if(integrator2 < limMinInt2){
 8002180:	4b99      	ldr	r3, [pc, #612]	; (80023e8 <CascadeController+0x4e8>)
 8002182:	edd3 7a00 	vldr	s15, [r3]
 8002186:	ed97 7a07 	vldr	s14, [r7, #28]
 800218a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800218e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002192:	dd02      	ble.n	800219a <CascadeController+0x29a>
		integrator2 = limMinInt2;}
 8002194:	4a94      	ldr	r2, [pc, #592]	; (80023e8 <CascadeController+0x4e8>)
 8002196:	69fb      	ldr	r3, [r7, #28]
 8002198:	6013      	str	r3, [r2, #0]

	//differentiator2 = (2*pos_Kd*(kal_position-prevMeasurement2)+(2*tuaall-dt)*differentiator2)/(2*tuaall+dt);
	differentiator2 = error2 - prevError2;
 800219a:	4b94      	ldr	r3, [pc, #592]	; (80023ec <CascadeController+0x4ec>)
 800219c:	edd3 7a00 	vldr	s15, [r3]
 80021a0:	ed97 7a03 	vldr	s14, [r7, #12]
 80021a4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80021a8:	4b91      	ldr	r3, [pc, #580]	; (80023f0 <CascadeController+0x4f0>)
 80021aa:	edc3 7a00 	vstr	s15, [r3]
	poscommand = proportional2 + integrator2 + (pos_Kd*differentiator2);
 80021ae:	4b8e      	ldr	r3, [pc, #568]	; (80023e8 <CascadeController+0x4e8>)
 80021b0:	ed93 7a00 	vldr	s14, [r3]
 80021b4:	edd7 7a02 	vldr	s15, [r7, #8]
 80021b8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80021bc:	4b8d      	ldr	r3, [pc, #564]	; (80023f4 <CascadeController+0x4f4>)
 80021be:	edd3 6a00 	vldr	s13, [r3]
 80021c2:	4b8b      	ldr	r3, [pc, #556]	; (80023f0 <CascadeController+0x4f0>)
 80021c4:	edd3 7a00 	vldr	s15, [r3]
 80021c8:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80021cc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80021d0:	4b89      	ldr	r3, [pc, #548]	; (80023f8 <CascadeController+0x4f8>)
 80021d2:	edc3 7a00 	vstr	s15, [r3]
		if(ch_velo > limitOmega/9.5493){
			kal_velocity = (limitOmega/9.5493)*-1;
		}
	}*/

	error = tra_velo+poscommand - kal_velocity; //setpoint+poscom - new_Data
 80021d6:	4b89      	ldr	r3, [pc, #548]	; (80023fc <CascadeController+0x4fc>)
 80021d8:	ed93 7a00 	vldr	s14, [r3]
 80021dc:	4b86      	ldr	r3, [pc, #536]	; (80023f8 <CascadeController+0x4f8>)
 80021de:	edd3 7a00 	vldr	s15, [r3]
 80021e2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80021e6:	4b86      	ldr	r3, [pc, #536]	; (8002400 <CascadeController+0x500>)
 80021e8:	edd3 7a00 	vldr	s15, [r3]
 80021ec:	ee77 7a67 	vsub.f32	s15, s14, s15
 80021f0:	4b84      	ldr	r3, [pc, #528]	; (8002404 <CascadeController+0x504>)
 80021f2:	edc3 7a00 	vstr	s15, [r3]
	float proportional = velo_Kp * error;
 80021f6:	4b84      	ldr	r3, [pc, #528]	; (8002408 <CascadeController+0x508>)
 80021f8:	ed93 7a00 	vldr	s14, [r3]
 80021fc:	4b81      	ldr	r3, [pc, #516]	; (8002404 <CascadeController+0x504>)
 80021fe:	edd3 7a00 	vldr	s15, [r3]
 8002202:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002206:	edc7 7a01 	vstr	s15, [r7, #4]
	integrator = integrator + (0.5*velo_Ki*dt*(error+prevError));
 800220a:	4b80      	ldr	r3, [pc, #512]	; (800240c <CascadeController+0x50c>)
 800220c:	681b      	ldr	r3, [r3, #0]
 800220e:	4618      	mov	r0, r3
 8002210:	f7fe f946 	bl	80004a0 <__aeabi_f2d>
 8002214:	4604      	mov	r4, r0
 8002216:	460d      	mov	r5, r1
 8002218:	4b7d      	ldr	r3, [pc, #500]	; (8002410 <CascadeController+0x510>)
 800221a:	681b      	ldr	r3, [r3, #0]
 800221c:	4618      	mov	r0, r3
 800221e:	f7fe f93f 	bl	80004a0 <__aeabi_f2d>
 8002222:	f04f 0200 	mov.w	r2, #0
 8002226:	4b7b      	ldr	r3, [pc, #492]	; (8002414 <CascadeController+0x514>)
 8002228:	f7fe f992 	bl	8000550 <__aeabi_dmul>
 800222c:	4602      	mov	r2, r0
 800222e:	460b      	mov	r3, r1
 8002230:	4610      	mov	r0, r2
 8002232:	4619      	mov	r1, r3
 8002234:	a36a      	add	r3, pc, #424	; (adr r3, 80023e0 <CascadeController+0x4e0>)
 8002236:	e9d3 2300 	ldrd	r2, r3, [r3]
 800223a:	f7fe f989 	bl	8000550 <__aeabi_dmul>
 800223e:	4602      	mov	r2, r0
 8002240:	460b      	mov	r3, r1
 8002242:	4690      	mov	r8, r2
 8002244:	4699      	mov	r9, r3
 8002246:	4b6f      	ldr	r3, [pc, #444]	; (8002404 <CascadeController+0x504>)
 8002248:	ed93 7a00 	vldr	s14, [r3]
 800224c:	4b72      	ldr	r3, [pc, #456]	; (8002418 <CascadeController+0x518>)
 800224e:	edd3 7a00 	vldr	s15, [r3]
 8002252:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002256:	ee17 0a90 	vmov	r0, s15
 800225a:	f7fe f921 	bl	80004a0 <__aeabi_f2d>
 800225e:	4602      	mov	r2, r0
 8002260:	460b      	mov	r3, r1
 8002262:	4640      	mov	r0, r8
 8002264:	4649      	mov	r1, r9
 8002266:	f7fe f973 	bl	8000550 <__aeabi_dmul>
 800226a:	4602      	mov	r2, r0
 800226c:	460b      	mov	r3, r1
 800226e:	4620      	mov	r0, r4
 8002270:	4629      	mov	r1, r5
 8002272:	f7fd ffb7 	bl	80001e4 <__adddf3>
 8002276:	4602      	mov	r2, r0
 8002278:	460b      	mov	r3, r1
 800227a:	4610      	mov	r0, r2
 800227c:	4619      	mov	r1, r3
 800227e:	f7fe fc37 	bl	8000af0 <__aeabi_d2f>
 8002282:	4603      	mov	r3, r0
 8002284:	4a61      	ldr	r2, [pc, #388]	; (800240c <CascadeController+0x50c>)
 8002286:	6013      	str	r3, [r2, #0]
	float limMinInt, limMaxInt;
	if(limMax > proportional){
 8002288:	4b64      	ldr	r3, [pc, #400]	; (800241c <CascadeController+0x51c>)
 800228a:	edd3 7a00 	vldr	s15, [r3]
 800228e:	ed97 7a01 	vldr	s14, [r7, #4]
 8002292:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002296:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800229a:	d509      	bpl.n	80022b0 <CascadeController+0x3b0>
		limMaxInt = limMax - proportional;}
 800229c:	4b5f      	ldr	r3, [pc, #380]	; (800241c <CascadeController+0x51c>)
 800229e:	ed93 7a00 	vldr	s14, [r3]
 80022a2:	edd7 7a01 	vldr	s15, [r7, #4]
 80022a6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80022aa:	edc7 7a04 	vstr	s15, [r7, #16]
 80022ae:	e002      	b.n	80022b6 <CascadeController+0x3b6>
	else{
		limMaxInt = 0.0;}
 80022b0:	f04f 0300 	mov.w	r3, #0
 80022b4:	613b      	str	r3, [r7, #16]
	if(limMin < proportional){
 80022b6:	4b5a      	ldr	r3, [pc, #360]	; (8002420 <CascadeController+0x520>)
 80022b8:	edd3 7a00 	vldr	s15, [r3]
 80022bc:	ed97 7a01 	vldr	s14, [r7, #4]
 80022c0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80022c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80022c8:	dd09      	ble.n	80022de <CascadeController+0x3de>
		limMinInt = limMin - proportional;}
 80022ca:	4b55      	ldr	r3, [pc, #340]	; (8002420 <CascadeController+0x520>)
 80022cc:	ed93 7a00 	vldr	s14, [r3]
 80022d0:	edd7 7a01 	vldr	s15, [r7, #4]
 80022d4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80022d8:	edc7 7a05 	vstr	s15, [r7, #20]
 80022dc:	e002      	b.n	80022e4 <CascadeController+0x3e4>
	else{
		limMinInt = 0.0;}
 80022de:	f04f 0300 	mov.w	r3, #0
 80022e2:	617b      	str	r3, [r7, #20]
	//Clamp integrator
	if(integrator > limMaxInt){
 80022e4:	4b49      	ldr	r3, [pc, #292]	; (800240c <CascadeController+0x50c>)
 80022e6:	edd3 7a00 	vldr	s15, [r3]
 80022ea:	ed97 7a04 	vldr	s14, [r7, #16]
 80022ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80022f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80022f6:	d503      	bpl.n	8002300 <CascadeController+0x400>
		integrator = limMaxInt;}
 80022f8:	4a44      	ldr	r2, [pc, #272]	; (800240c <CascadeController+0x50c>)
 80022fa:	693b      	ldr	r3, [r7, #16]
 80022fc:	6013      	str	r3, [r2, #0]
 80022fe:	e00c      	b.n	800231a <CascadeController+0x41a>
	else if(integrator < limMinInt){
 8002300:	4b42      	ldr	r3, [pc, #264]	; (800240c <CascadeController+0x50c>)
 8002302:	edd3 7a00 	vldr	s15, [r3]
 8002306:	ed97 7a05 	vldr	s14, [r7, #20]
 800230a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800230e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002312:	dd02      	ble.n	800231a <CascadeController+0x41a>
		integrator = limMinInt;}
 8002314:	4a3d      	ldr	r2, [pc, #244]	; (800240c <CascadeController+0x50c>)
 8002316:	697b      	ldr	r3, [r7, #20]
 8002318:	6013      	str	r3, [r2, #0]

	//differentiator = (2*velo_Kd*(kal_velocity-prevMeasurement)+(2*tuaall-dt)*differentiator)/(2*tuaall+dt);
	differentiator = error - prevError;
 800231a:	4b3a      	ldr	r3, [pc, #232]	; (8002404 <CascadeController+0x504>)
 800231c:	ed93 7a00 	vldr	s14, [r3]
 8002320:	4b3d      	ldr	r3, [pc, #244]	; (8002418 <CascadeController+0x518>)
 8002322:	edd3 7a00 	vldr	s15, [r3]
 8002326:	ee77 7a67 	vsub.f32	s15, s14, s15
 800232a:	4b3e      	ldr	r3, [pc, #248]	; (8002424 <CascadeController+0x524>)
 800232c:	edc3 7a00 	vstr	s15, [r3]
	volt_controller = proportional + integrator + (velo_Kd*differentiator);
 8002330:	4b36      	ldr	r3, [pc, #216]	; (800240c <CascadeController+0x50c>)
 8002332:	ed93 7a00 	vldr	s14, [r3]
 8002336:	edd7 7a01 	vldr	s15, [r7, #4]
 800233a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800233e:	4b3a      	ldr	r3, [pc, #232]	; (8002428 <CascadeController+0x528>)
 8002340:	edd3 6a00 	vldr	s13, [r3]
 8002344:	4b37      	ldr	r3, [pc, #220]	; (8002424 <CascadeController+0x524>)
 8002346:	edd3 7a00 	vldr	s15, [r3]
 800234a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800234e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002352:	4b36      	ldr	r3, [pc, #216]	; (800242c <CascadeController+0x52c>)
 8002354:	edc3 7a00 	vstr	s15, [r3]
	if(volt_controller > 12.0){
 8002358:	4b34      	ldr	r3, [pc, #208]	; (800242c <CascadeController+0x52c>)
 800235a:	edd3 7a00 	vldr	s15, [r3]
 800235e:	eeb2 7a08 	vmov.f32	s14, #40	; 0x41400000  12.0
 8002362:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002366:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800236a:	dd03      	ble.n	8002374 <CascadeController+0x474>
		volt_controller = 12.0;}
 800236c:	4b2f      	ldr	r3, [pc, #188]	; (800242c <CascadeController+0x52c>)
 800236e:	4a30      	ldr	r2, [pc, #192]	; (8002430 <CascadeController+0x530>)
 8002370:	601a      	str	r2, [r3, #0]
 8002372:	e00c      	b.n	800238e <CascadeController+0x48e>
	else if(volt_controller < -12.0){
 8002374:	4b2d      	ldr	r3, [pc, #180]	; (800242c <CascadeController+0x52c>)
 8002376:	edd3 7a00 	vldr	s15, [r3]
 800237a:	eeba 7a08 	vmov.f32	s14, #168	; 0xc1400000 -12.0
 800237e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002382:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002386:	d502      	bpl.n	800238e <CascadeController+0x48e>
		volt_controller = -12.0;}
 8002388:	4b28      	ldr	r3, [pc, #160]	; (800242c <CascadeController+0x52c>)
 800238a:	4a2a      	ldr	r2, [pc, #168]	; (8002434 <CascadeController+0x534>)
 800238c:	601a      	str	r2, [r3, #0]

	//PIDout = PIDout*10000/12.0;
	PIDout = (volt_inverse+volt_controller)*10000/12.0;
 800238e:	4b2a      	ldr	r3, [pc, #168]	; (8002438 <CascadeController+0x538>)
 8002390:	ed93 7a00 	vldr	s14, [r3]
 8002394:	4b25      	ldr	r3, [pc, #148]	; (800242c <CascadeController+0x52c>)
 8002396:	edd3 7a00 	vldr	s15, [r3]
 800239a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800239e:	ed9f 7a27 	vldr	s14, [pc, #156]	; 800243c <CascadeController+0x53c>
 80023a2:	ee27 7a87 	vmul.f32	s14, s15, s14
 80023a6:	eef2 6a08 	vmov.f32	s13, #40	; 0x41400000  12.0
 80023aa:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80023ae:	4b24      	ldr	r3, [pc, #144]	; (8002440 <CascadeController+0x540>)
 80023b0:	edc3 7a00 	vstr	s15, [r3]
			if(PIDout < 0){
				PIDout = 0;
			}
		}
	}*/
	prevError2 = error2;
 80023b4:	4a0d      	ldr	r2, [pc, #52]	; (80023ec <CascadeController+0x4ec>)
 80023b6:	68fb      	ldr	r3, [r7, #12]
 80023b8:	6013      	str	r3, [r2, #0]
	prevMeasurement2 = current_rad_wrap;
 80023ba:	4b22      	ldr	r3, [pc, #136]	; (8002444 <CascadeController+0x544>)
 80023bc:	681b      	ldr	r3, [r3, #0]
 80023be:	4a22      	ldr	r2, [pc, #136]	; (8002448 <CascadeController+0x548>)
 80023c0:	6013      	str	r3, [r2, #0]
	prevError = error;
 80023c2:	4b10      	ldr	r3, [pc, #64]	; (8002404 <CascadeController+0x504>)
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	4a14      	ldr	r2, [pc, #80]	; (8002418 <CascadeController+0x518>)
 80023c8:	6013      	str	r3, [r2, #0]
	prevMeasurement = kal_velocity;
 80023ca:	4b0d      	ldr	r3, [pc, #52]	; (8002400 <CascadeController+0x500>)
 80023cc:	681b      	ldr	r3, [r3, #0]
 80023ce:	4a1f      	ldr	r2, [pc, #124]	; (800244c <CascadeController+0x54c>)
 80023d0:	6013      	str	r3, [r2, #0]
}
 80023d2:	bf00      	nop
 80023d4:	3720      	adds	r7, #32
 80023d6:	46bd      	mov	sp, r7
 80023d8:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 80023dc:	f3af 8000 	nop.w
 80023e0:	47ae147b 	.word	0x47ae147b
 80023e4:	3f847ae1 	.word	0x3f847ae1
 80023e8:	20000604 	.word	0x20000604
 80023ec:	20000608 	.word	0x20000608
 80023f0:	2000060c 	.word	0x2000060c
 80023f4:	20000010 	.word	0x20000010
 80023f8:	20000618 	.word	0x20000618
 80023fc:	200005bc 	.word	0x200005bc
 8002400:	200005b0 	.word	0x200005b0
 8002404:	2000061c 	.word	0x2000061c
 8002408:	20000000 	.word	0x20000000
 800240c:	200005f4 	.word	0x200005f4
 8002410:	200004cc 	.word	0x200004cc
 8002414:	3fe00000 	.word	0x3fe00000
 8002418:	200005f8 	.word	0x200005f8
 800241c:	20000040 	.word	0x20000040
 8002420:	2000003c 	.word	0x2000003c
 8002424:	200005fc 	.word	0x200005fc
 8002428:	20000004 	.word	0x20000004
 800242c:	20000620 	.word	0x20000620
 8002430:	41400000 	.word	0x41400000
 8002434:	c1400000 	.word	0xc1400000
 8002438:	200007c8 	.word	0x200007c8
 800243c:	461c4000 	.word	0x461c4000
 8002440:	20000614 	.word	0x20000614
 8002444:	20000580 	.word	0x20000580
 8002448:	20000610 	.word	0x20000610
 800244c:	20000600 	.word	0x20000600

08002450 <reset>:

void reset()
{
 8002450:	b580      	push	{r7, lr}
 8002452:	af00      	add	r7, sp, #0
	lowpass();
 8002454:	f000 f8e8 	bl	8002628 <lowpass>
	prevError = 0;
 8002458:	4b0f      	ldr	r3, [pc, #60]	; (8002498 <reset+0x48>)
 800245a:	f04f 0200 	mov.w	r2, #0
 800245e:	601a      	str	r2, [r3, #0]
	tuaall = 0;
 8002460:	4b0e      	ldr	r3, [pc, #56]	; (800249c <reset+0x4c>)
 8002462:	f04f 0200 	mov.w	r2, #0
 8002466:	601a      	str	r2, [r3, #0]
	setzero = 0;
 8002468:	4b0d      	ldr	r3, [pc, #52]	; (80024a0 <reset+0x50>)
 800246a:	2200      	movs	r2, #0
 800246c:	701a      	strb	r2, [r3, #0]
	Drivemotor(0);
 800246e:	2000      	movs	r0, #0
 8002470:	f000 fee2 	bl	8003238 <Drivemotor>
	PIDon = 0;
 8002474:	4b0b      	ldr	r3, [pc, #44]	; (80024a4 <reset+0x54>)
 8002476:	2200      	movs	r2, #0
 8002478:	701a      	strb	r2, [r3, #0]
	PIDout = 0;
 800247a:	4b0b      	ldr	r3, [pc, #44]	; (80024a8 <reset+0x58>)
 800247c:	f04f 0200 	mov.w	r2, #0
 8002480:	601a      	str	r2, [r3, #0]
	ch_velo = 0;
 8002482:	4b0a      	ldr	r3, [pc, #40]	; (80024ac <reset+0x5c>)
 8002484:	f04f 0200 	mov.w	r2, #0
 8002488:	601a      	str	r2, [r3, #0]
	finish = 0;
 800248a:	4b09      	ldr	r3, [pc, #36]	; (80024b0 <reset+0x60>)
 800248c:	f04f 0200 	mov.w	r2, #0
 8002490:	601a      	str	r2, [r3, #0]
}
 8002492:	bf00      	nop
 8002494:	bd80      	pop	{r7, pc}
 8002496:	bf00      	nop
 8002498:	200005f8 	.word	0x200005f8
 800249c:	200005d4 	.word	0x200005d4
 80024a0:	20000014 	.word	0x20000014
 80024a4:	200005e8 	.word	0x200005e8
 80024a8:	20000614 	.word	0x20000614
 80024ac:	200005ec 	.word	0x200005ec
 80024b0:	200005f0 	.word	0x200005f0
 80024b4:	00000000 	.word	0x00000000

080024b8 <inverse_tran>:
void inverse_tran(){
 80024b8:	b5b0      	push	{r4, r5, r7, lr}
 80024ba:	af00      	add	r7, sp, #0
	x_n = tra_velo;
 80024bc:	4b3a      	ldr	r3, [pc, #232]	; (80025a8 <inverse_tran+0xf0>)
 80024be:	681b      	ldr	r3, [r3, #0]
 80024c0:	4a3a      	ldr	r2, [pc, #232]	; (80025ac <inverse_tran+0xf4>)
 80024c2:	6013      	str	r3, [r2, #0]
	volt_inverse = (x_n - (0.9724*x_n_1) + (0.003346*x_n_2) - (0.0004612*y_n_1))/0.002703;
 80024c4:	4b39      	ldr	r3, [pc, #228]	; (80025ac <inverse_tran+0xf4>)
 80024c6:	681b      	ldr	r3, [r3, #0]
 80024c8:	4618      	mov	r0, r3
 80024ca:	f7fd ffe9 	bl	80004a0 <__aeabi_f2d>
 80024ce:	4604      	mov	r4, r0
 80024d0:	460d      	mov	r5, r1
 80024d2:	4b37      	ldr	r3, [pc, #220]	; (80025b0 <inverse_tran+0xf8>)
 80024d4:	681b      	ldr	r3, [r3, #0]
 80024d6:	4618      	mov	r0, r3
 80024d8:	f7fd ffe2 	bl	80004a0 <__aeabi_f2d>
 80024dc:	a32a      	add	r3, pc, #168	; (adr r3, 8002588 <inverse_tran+0xd0>)
 80024de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024e2:	f7fe f835 	bl	8000550 <__aeabi_dmul>
 80024e6:	4602      	mov	r2, r0
 80024e8:	460b      	mov	r3, r1
 80024ea:	4620      	mov	r0, r4
 80024ec:	4629      	mov	r1, r5
 80024ee:	f7fd fe77 	bl	80001e0 <__aeabi_dsub>
 80024f2:	4602      	mov	r2, r0
 80024f4:	460b      	mov	r3, r1
 80024f6:	4614      	mov	r4, r2
 80024f8:	461d      	mov	r5, r3
 80024fa:	4b2e      	ldr	r3, [pc, #184]	; (80025b4 <inverse_tran+0xfc>)
 80024fc:	681b      	ldr	r3, [r3, #0]
 80024fe:	4618      	mov	r0, r3
 8002500:	f7fd ffce 	bl	80004a0 <__aeabi_f2d>
 8002504:	a322      	add	r3, pc, #136	; (adr r3, 8002590 <inverse_tran+0xd8>)
 8002506:	e9d3 2300 	ldrd	r2, r3, [r3]
 800250a:	f7fe f821 	bl	8000550 <__aeabi_dmul>
 800250e:	4602      	mov	r2, r0
 8002510:	460b      	mov	r3, r1
 8002512:	4620      	mov	r0, r4
 8002514:	4629      	mov	r1, r5
 8002516:	f7fd fe65 	bl	80001e4 <__adddf3>
 800251a:	4602      	mov	r2, r0
 800251c:	460b      	mov	r3, r1
 800251e:	4614      	mov	r4, r2
 8002520:	461d      	mov	r5, r3
 8002522:	4b25      	ldr	r3, [pc, #148]	; (80025b8 <inverse_tran+0x100>)
 8002524:	681b      	ldr	r3, [r3, #0]
 8002526:	4618      	mov	r0, r3
 8002528:	f7fd ffba 	bl	80004a0 <__aeabi_f2d>
 800252c:	a31a      	add	r3, pc, #104	; (adr r3, 8002598 <inverse_tran+0xe0>)
 800252e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002532:	f7fe f80d 	bl	8000550 <__aeabi_dmul>
 8002536:	4602      	mov	r2, r0
 8002538:	460b      	mov	r3, r1
 800253a:	4620      	mov	r0, r4
 800253c:	4629      	mov	r1, r5
 800253e:	f7fd fe4f 	bl	80001e0 <__aeabi_dsub>
 8002542:	4602      	mov	r2, r0
 8002544:	460b      	mov	r3, r1
 8002546:	4610      	mov	r0, r2
 8002548:	4619      	mov	r1, r3
 800254a:	a315      	add	r3, pc, #84	; (adr r3, 80025a0 <inverse_tran+0xe8>)
 800254c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002550:	f7fe f928 	bl	80007a4 <__aeabi_ddiv>
 8002554:	4602      	mov	r2, r0
 8002556:	460b      	mov	r3, r1
 8002558:	4610      	mov	r0, r2
 800255a:	4619      	mov	r1, r3
 800255c:	f7fe fac8 	bl	8000af0 <__aeabi_d2f>
 8002560:	4603      	mov	r3, r0
 8002562:	4a16      	ldr	r2, [pc, #88]	; (80025bc <inverse_tran+0x104>)
 8002564:	6013      	str	r3, [r2, #0]
	x_n_2 = x_n_1;
 8002566:	4b12      	ldr	r3, [pc, #72]	; (80025b0 <inverse_tran+0xf8>)
 8002568:	681b      	ldr	r3, [r3, #0]
 800256a:	4a12      	ldr	r2, [pc, #72]	; (80025b4 <inverse_tran+0xfc>)
 800256c:	6013      	str	r3, [r2, #0]
	x_n_1 = x_n;
 800256e:	4b0f      	ldr	r3, [pc, #60]	; (80025ac <inverse_tran+0xf4>)
 8002570:	681b      	ldr	r3, [r3, #0]
 8002572:	4a0f      	ldr	r2, [pc, #60]	; (80025b0 <inverse_tran+0xf8>)
 8002574:	6013      	str	r3, [r2, #0]
	y_n_1 = volt_inverse;
 8002576:	4b11      	ldr	r3, [pc, #68]	; (80025bc <inverse_tran+0x104>)
 8002578:	681b      	ldr	r3, [r3, #0]
 800257a:	4a0f      	ldr	r2, [pc, #60]	; (80025b8 <inverse_tran+0x100>)
 800257c:	6013      	str	r3, [r2, #0]
}
 800257e:	bf00      	nop
 8002580:	bdb0      	pop	{r4, r5, r7, pc}
 8002582:	bf00      	nop
 8002584:	f3af 8000 	nop.w
 8002588:	9ad42c3d 	.word	0x9ad42c3d
 800258c:	3fef1de6 	.word	0x3fef1de6
 8002590:	12513b5c 	.word	0x12513b5c
 8002594:	3f6b6912 	.word	0x3f6b6912
 8002598:	eabaf45d 	.word	0xeabaf45d
 800259c:	3f3e39a6 	.word	0x3f3e39a6
 80025a0:	133c1ce7 	.word	0x133c1ce7
 80025a4:	3f66249a 	.word	0x3f66249a
 80025a8:	200005bc 	.word	0x200005bc
 80025ac:	200007cc 	.word	0x200007cc
 80025b0:	200007d0 	.word	0x200007d0
 80025b4:	200007d4 	.word	0x200007d4
 80025b8:	200007d8 	.word	0x200007d8
 80025bc:	200007c8 	.word	0x200007c8

080025c0 <velo>:
void velo(){
 80025c0:	b580      	push	{r7, lr}
 80025c2:	af00      	add	r7, sp, #0
	//if(current_rad_wrap != prevPos){
	velo_diff =  (pos_lowpass - prevPos)/dt;
 80025c4:	4b14      	ldr	r3, [pc, #80]	; (8002618 <velo+0x58>)
 80025c6:	ed93 7a00 	vldr	s14, [r3]
 80025ca:	4b14      	ldr	r3, [pc, #80]	; (800261c <velo+0x5c>)
 80025cc:	edd3 7a00 	vldr	s15, [r3]
 80025d0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80025d4:	ee17 0a90 	vmov	r0, s15
 80025d8:	f7fd ff62 	bl	80004a0 <__aeabi_f2d>
 80025dc:	a30c      	add	r3, pc, #48	; (adr r3, 8002610 <velo+0x50>)
 80025de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025e2:	f7fe f8df 	bl	80007a4 <__aeabi_ddiv>
 80025e6:	4602      	mov	r2, r0
 80025e8:	460b      	mov	r3, r1
 80025ea:	4610      	mov	r0, r2
 80025ec:	4619      	mov	r1, r3
 80025ee:	f7fe fa7f 	bl	8000af0 <__aeabi_d2f>
 80025f2:	4603      	mov	r3, r0
 80025f4:	4a0a      	ldr	r2, [pc, #40]	; (8002620 <velo+0x60>)
 80025f6:	6013      	str	r3, [r2, #0]
	/*}
	else{
		velo_diff = velo_diff;
	}*/
	DegAbs[0][0] = velo_diff;
 80025f8:	4b09      	ldr	r3, [pc, #36]	; (8002620 <velo+0x60>)
 80025fa:	681b      	ldr	r3, [r3, #0]
 80025fc:	4a09      	ldr	r2, [pc, #36]	; (8002624 <velo+0x64>)
 80025fe:	6013      	str	r3, [r2, #0]
	prevPos = pos_lowpass;
 8002600:	4b05      	ldr	r3, [pc, #20]	; (8002618 <velo+0x58>)
 8002602:	681b      	ldr	r3, [r3, #0]
 8002604:	4a05      	ldr	r2, [pc, #20]	; (800261c <velo+0x5c>)
 8002606:	6013      	str	r3, [r2, #0]
}
 8002608:	bf00      	nop
 800260a:	bd80      	pop	{r7, pc}
 800260c:	f3af 8000 	nop.w
 8002610:	47ae147b 	.word	0x47ae147b
 8002614:	3f847ae1 	.word	0x3f847ae1
 8002618:	200007c0 	.word	0x200007c0
 800261c:	200007bc 	.word	0x200007bc
 8002620:	200007b8 	.word	0x200007b8
 8002624:	20000624 	.word	0x20000624

08002628 <lowpass>:
void lowpass()
{
 8002628:	b5b0      	push	{r4, r5, r7, lr}
 800262a:	af00      	add	r7, sp, #0
	velo_lowpass = 0.99529869*velo_lowpass + 0.00235066*kal_velocity + 0.00235066*prevlowpass;
 800262c:	4b48      	ldr	r3, [pc, #288]	; (8002750 <lowpass+0x128>)
 800262e:	681b      	ldr	r3, [r3, #0]
 8002630:	4618      	mov	r0, r3
 8002632:	f7fd ff35 	bl	80004a0 <__aeabi_f2d>
 8002636:	a33e      	add	r3, pc, #248	; (adr r3, 8002730 <lowpass+0x108>)
 8002638:	e9d3 2300 	ldrd	r2, r3, [r3]
 800263c:	f7fd ff88 	bl	8000550 <__aeabi_dmul>
 8002640:	4602      	mov	r2, r0
 8002642:	460b      	mov	r3, r1
 8002644:	4614      	mov	r4, r2
 8002646:	461d      	mov	r5, r3
 8002648:	4b42      	ldr	r3, [pc, #264]	; (8002754 <lowpass+0x12c>)
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	4618      	mov	r0, r3
 800264e:	f7fd ff27 	bl	80004a0 <__aeabi_f2d>
 8002652:	a339      	add	r3, pc, #228	; (adr r3, 8002738 <lowpass+0x110>)
 8002654:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002658:	f7fd ff7a 	bl	8000550 <__aeabi_dmul>
 800265c:	4602      	mov	r2, r0
 800265e:	460b      	mov	r3, r1
 8002660:	4620      	mov	r0, r4
 8002662:	4629      	mov	r1, r5
 8002664:	f7fd fdbe 	bl	80001e4 <__adddf3>
 8002668:	4602      	mov	r2, r0
 800266a:	460b      	mov	r3, r1
 800266c:	4614      	mov	r4, r2
 800266e:	461d      	mov	r5, r3
 8002670:	4b39      	ldr	r3, [pc, #228]	; (8002758 <lowpass+0x130>)
 8002672:	681b      	ldr	r3, [r3, #0]
 8002674:	4618      	mov	r0, r3
 8002676:	f7fd ff13 	bl	80004a0 <__aeabi_f2d>
 800267a:	a32f      	add	r3, pc, #188	; (adr r3, 8002738 <lowpass+0x110>)
 800267c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002680:	f7fd ff66 	bl	8000550 <__aeabi_dmul>
 8002684:	4602      	mov	r2, r0
 8002686:	460b      	mov	r3, r1
 8002688:	4620      	mov	r0, r4
 800268a:	4629      	mov	r1, r5
 800268c:	f7fd fdaa 	bl	80001e4 <__adddf3>
 8002690:	4602      	mov	r2, r0
 8002692:	460b      	mov	r3, r1
 8002694:	4610      	mov	r0, r2
 8002696:	4619      	mov	r1, r3
 8002698:	f7fe fa2a 	bl	8000af0 <__aeabi_d2f>
 800269c:	4603      	mov	r3, r0
 800269e:	4a2c      	ldr	r2, [pc, #176]	; (8002750 <lowpass+0x128>)
 80026a0:	6013      	str	r3, [r2, #0]
	prevlowpass = kal_velocity;
 80026a2:	4b2c      	ldr	r3, [pc, #176]	; (8002754 <lowpass+0x12c>)
 80026a4:	681b      	ldr	r3, [r3, #0]
 80026a6:	4a2c      	ldr	r2, [pc, #176]	; (8002758 <lowpass+0x130>)
 80026a8:	6013      	str	r3, [r2, #0]
	pos_lowpass = 0.96906992*pos_lowpass + 0.01546504*current_rad_wrap + 0.01546504*prevposlowpass;
 80026aa:	4b2c      	ldr	r3, [pc, #176]	; (800275c <lowpass+0x134>)
 80026ac:	681b      	ldr	r3, [r3, #0]
 80026ae:	4618      	mov	r0, r3
 80026b0:	f7fd fef6 	bl	80004a0 <__aeabi_f2d>
 80026b4:	a322      	add	r3, pc, #136	; (adr r3, 8002740 <lowpass+0x118>)
 80026b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80026ba:	f7fd ff49 	bl	8000550 <__aeabi_dmul>
 80026be:	4602      	mov	r2, r0
 80026c0:	460b      	mov	r3, r1
 80026c2:	4614      	mov	r4, r2
 80026c4:	461d      	mov	r5, r3
 80026c6:	4b26      	ldr	r3, [pc, #152]	; (8002760 <lowpass+0x138>)
 80026c8:	681b      	ldr	r3, [r3, #0]
 80026ca:	4618      	mov	r0, r3
 80026cc:	f7fd fee8 	bl	80004a0 <__aeabi_f2d>
 80026d0:	a31d      	add	r3, pc, #116	; (adr r3, 8002748 <lowpass+0x120>)
 80026d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80026d6:	f7fd ff3b 	bl	8000550 <__aeabi_dmul>
 80026da:	4602      	mov	r2, r0
 80026dc:	460b      	mov	r3, r1
 80026de:	4620      	mov	r0, r4
 80026e0:	4629      	mov	r1, r5
 80026e2:	f7fd fd7f 	bl	80001e4 <__adddf3>
 80026e6:	4602      	mov	r2, r0
 80026e8:	460b      	mov	r3, r1
 80026ea:	4614      	mov	r4, r2
 80026ec:	461d      	mov	r5, r3
 80026ee:	4b1d      	ldr	r3, [pc, #116]	; (8002764 <lowpass+0x13c>)
 80026f0:	681b      	ldr	r3, [r3, #0]
 80026f2:	4618      	mov	r0, r3
 80026f4:	f7fd fed4 	bl	80004a0 <__aeabi_f2d>
 80026f8:	a313      	add	r3, pc, #76	; (adr r3, 8002748 <lowpass+0x120>)
 80026fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80026fe:	f7fd ff27 	bl	8000550 <__aeabi_dmul>
 8002702:	4602      	mov	r2, r0
 8002704:	460b      	mov	r3, r1
 8002706:	4620      	mov	r0, r4
 8002708:	4629      	mov	r1, r5
 800270a:	f7fd fd6b 	bl	80001e4 <__adddf3>
 800270e:	4602      	mov	r2, r0
 8002710:	460b      	mov	r3, r1
 8002712:	4610      	mov	r0, r2
 8002714:	4619      	mov	r1, r3
 8002716:	f7fe f9eb 	bl	8000af0 <__aeabi_d2f>
 800271a:	4603      	mov	r3, r0
 800271c:	4a0f      	ldr	r2, [pc, #60]	; (800275c <lowpass+0x134>)
 800271e:	6013      	str	r3, [r2, #0]
	prevposlowpass = current_rad_wrap;
 8002720:	4b0f      	ldr	r3, [pc, #60]	; (8002760 <lowpass+0x138>)
 8002722:	681b      	ldr	r3, [r3, #0]
 8002724:	4a0f      	ldr	r2, [pc, #60]	; (8002764 <lowpass+0x13c>)
 8002726:	6013      	str	r3, [r2, #0]
}
 8002728:	bf00      	nop
 800272a:	bdb0      	pop	{r4, r5, r7, pc}
 800272c:	f3af 8000 	nop.w
 8002730:	a369a70e 	.word	0xa369a70e
 8002734:	3fefd97c 	.word	0x3fefd97c
 8002738:	fa5e5576 	.word	0xfa5e5576
 800273c:	3f6341b0 	.word	0x3f6341b0
 8002740:	ebbdfea9 	.word	0xebbdfea9
 8002744:	3fef029e 	.word	0x3fef029e
 8002748:	88402ae8 	.word	0x88402ae8
 800274c:	3f8fac22 	.word	0x3f8fac22
 8002750:	200007b0 	.word	0x200007b0
 8002754:	200005b0 	.word	0x200005b0
 8002758:	200007b4 	.word	0x200007b4
 800275c:	200007c0 	.word	0x200007c0
 8002760:	20000580 	.word	0x20000580
 8002764:	200007c4 	.word	0x200007c4

08002768 <prediction>:
void prediction(X_hat_t_1, P_t_1, F_t, Q_t)
{
 8002768:	b580      	push	{r7, lr}
 800276a:	b088      	sub	sp, #32
 800276c:	af04      	add	r7, sp, #16
 800276e:	60f8      	str	r0, [r7, #12]
 8002770:	60b9      	str	r1, [r7, #8]
 8002772:	607a      	str	r2, [r7, #4]
 8002774:	603b      	str	r3, [r7, #0]
	Multiply_matrix(F_t,X_hat_t_1,multiply, 3,3,3,3);
 8002776:	6878      	ldr	r0, [r7, #4]
 8002778:	68f9      	ldr	r1, [r7, #12]
 800277a:	2303      	movs	r3, #3
 800277c:	9302      	str	r3, [sp, #8]
 800277e:	2303      	movs	r3, #3
 8002780:	9301      	str	r3, [sp, #4]
 8002782:	2303      	movs	r3, #3
 8002784:	9300      	str	r3, [sp, #0]
 8002786:	2303      	movs	r3, #3
 8002788:	4a1c      	ldr	r2, [pc, #112]	; (80027fc <prediction+0x94>)
 800278a:	f000 f917 	bl	80029bc <Multiply_matrix>
	equal(X_hat_t,multiply,3,3);
 800278e:	2303      	movs	r3, #3
 8002790:	2203      	movs	r2, #3
 8002792:	491a      	ldr	r1, [pc, #104]	; (80027fc <prediction+0x94>)
 8002794:	481a      	ldr	r0, [pc, #104]	; (8002800 <prediction+0x98>)
 8002796:	f000 fa3f 	bl	8002c18 <equal>

	Multiply_matrix(F_t,P_t_1,multiply, 3,3,3,3);
 800279a:	6878      	ldr	r0, [r7, #4]
 800279c:	68b9      	ldr	r1, [r7, #8]
 800279e:	2303      	movs	r3, #3
 80027a0:	9302      	str	r3, [sp, #8]
 80027a2:	2303      	movs	r3, #3
 80027a4:	9301      	str	r3, [sp, #4]
 80027a6:	2303      	movs	r3, #3
 80027a8:	9300      	str	r3, [sp, #0]
 80027aa:	2303      	movs	r3, #3
 80027ac:	4a13      	ldr	r2, [pc, #76]	; (80027fc <prediction+0x94>)
 80027ae:	f000 f905 	bl	80029bc <Multiply_matrix>
	equal(collect3_3,multiply,3,3);
 80027b2:	2303      	movs	r3, #3
 80027b4:	2203      	movs	r2, #3
 80027b6:	4911      	ldr	r1, [pc, #68]	; (80027fc <prediction+0x94>)
 80027b8:	4812      	ldr	r0, [pc, #72]	; (8002804 <prediction+0x9c>)
 80027ba:	f000 fa2d 	bl	8002c18 <equal>
	Multiply_matrix(collect3_3,F_t_tran,multiply, 3,3,3,3);
 80027be:	2303      	movs	r3, #3
 80027c0:	9302      	str	r3, [sp, #8]
 80027c2:	2303      	movs	r3, #3
 80027c4:	9301      	str	r3, [sp, #4]
 80027c6:	2303      	movs	r3, #3
 80027c8:	9300      	str	r3, [sp, #0]
 80027ca:	2303      	movs	r3, #3
 80027cc:	4a0b      	ldr	r2, [pc, #44]	; (80027fc <prediction+0x94>)
 80027ce:	490e      	ldr	r1, [pc, #56]	; (8002808 <prediction+0xa0>)
 80027d0:	480c      	ldr	r0, [pc, #48]	; (8002804 <prediction+0x9c>)
 80027d2:	f000 f8f3 	bl	80029bc <Multiply_matrix>
	PlusOrMinus(multiply,Q_t,3,3,1);
 80027d6:	6839      	ldr	r1, [r7, #0]
 80027d8:	2301      	movs	r3, #1
 80027da:	9300      	str	r3, [sp, #0]
 80027dc:	2303      	movs	r3, #3
 80027de:	2203      	movs	r2, #3
 80027e0:	4806      	ldr	r0, [pc, #24]	; (80027fc <prediction+0x94>)
 80027e2:	f000 f96f 	bl	8002ac4 <PlusOrMinus>
	equal(P_hat_t,pm3_3,3,3);
 80027e6:	2303      	movs	r3, #3
 80027e8:	2203      	movs	r2, #3
 80027ea:	4908      	ldr	r1, [pc, #32]	; (800280c <prediction+0xa4>)
 80027ec:	4808      	ldr	r0, [pc, #32]	; (8002810 <prediction+0xa8>)
 80027ee:	f000 fa13 	bl	8002c18 <equal>
}
 80027f2:	bf00      	nop
 80027f4:	3710      	adds	r7, #16
 80027f6:	46bd      	mov	sp, r7
 80027f8:	bd80      	pop	{r7, pc}
 80027fa:	bf00      	nop
 80027fc:	20000648 	.word	0x20000648
 8002800:	20000744 	.word	0x20000744
 8002804:	20000690 	.word	0x20000690
 8002808:	2000008c 	.word	0x2000008c
 800280c:	2000066c 	.word	0x2000066c
 8002810:	2000078c 	.word	0x2000078c

08002814 <Update>:

void Update(X_hat_t, P_hat_t, DegAbs, R_t, H_t)
{
 8002814:	b580      	push	{r7, lr}
 8002816:	b088      	sub	sp, #32
 8002818:	af04      	add	r7, sp, #16
 800281a:	60f8      	str	r0, [r7, #12]
 800281c:	60b9      	str	r1, [r7, #8]
 800281e:	607a      	str	r2, [r7, #4]
 8002820:	603b      	str	r3, [r7, #0]
	Multiply_matrix(H_t,X_hat_t,multiply,3,3,3,3);
 8002822:	69b8      	ldr	r0, [r7, #24]
 8002824:	68f9      	ldr	r1, [r7, #12]
 8002826:	2303      	movs	r3, #3
 8002828:	9302      	str	r3, [sp, #8]
 800282a:	2303      	movs	r3, #3
 800282c:	9301      	str	r3, [sp, #4]
 800282e:	2303      	movs	r3, #3
 8002830:	9300      	str	r3, [sp, #0]
 8002832:	2303      	movs	r3, #3
 8002834:	4a57      	ldr	r2, [pc, #348]	; (8002994 <Update+0x180>)
 8002836:	f000 f8c1 	bl	80029bc <Multiply_matrix>
	PlusOrMinus(DegAbs,multiply,3,3,2);
 800283a:	6878      	ldr	r0, [r7, #4]
 800283c:	2302      	movs	r3, #2
 800283e:	9300      	str	r3, [sp, #0]
 8002840:	2303      	movs	r3, #3
 8002842:	2203      	movs	r2, #3
 8002844:	4953      	ldr	r1, [pc, #332]	; (8002994 <Update+0x180>)
 8002846:	f000 f93d 	bl	8002ac4 <PlusOrMinus>
	equal(y_k,pm3_3,3,3);
 800284a:	2303      	movs	r3, #3
 800284c:	2203      	movs	r2, #3
 800284e:	4952      	ldr	r1, [pc, #328]	; (8002998 <Update+0x184>)
 8002850:	4852      	ldr	r0, [pc, #328]	; (800299c <Update+0x188>)
 8002852:	f000 f9e1 	bl	8002c18 <equal>

	Multiply_matrix(H_t,P_hat_t,multiply,3,3,3,3);
 8002856:	69b8      	ldr	r0, [r7, #24]
 8002858:	68b9      	ldr	r1, [r7, #8]
 800285a:	2303      	movs	r3, #3
 800285c:	9302      	str	r3, [sp, #8]
 800285e:	2303      	movs	r3, #3
 8002860:	9301      	str	r3, [sp, #4]
 8002862:	2303      	movs	r3, #3
 8002864:	9300      	str	r3, [sp, #0]
 8002866:	2303      	movs	r3, #3
 8002868:	4a4a      	ldr	r2, [pc, #296]	; (8002994 <Update+0x180>)
 800286a:	f000 f8a7 	bl	80029bc <Multiply_matrix>
	equal(collect3_3,multiply,3,3);
 800286e:	2303      	movs	r3, #3
 8002870:	2203      	movs	r2, #3
 8002872:	4948      	ldr	r1, [pc, #288]	; (8002994 <Update+0x180>)
 8002874:	484a      	ldr	r0, [pc, #296]	; (80029a0 <Update+0x18c>)
 8002876:	f000 f9cf 	bl	8002c18 <equal>
	Multiply_matrix(collect3_3,H_t_tran,multiply, 3,3,3,3);
 800287a:	2303      	movs	r3, #3
 800287c:	9302      	str	r3, [sp, #8]
 800287e:	2303      	movs	r3, #3
 8002880:	9301      	str	r3, [sp, #4]
 8002882:	2303      	movs	r3, #3
 8002884:	9300      	str	r3, [sp, #0]
 8002886:	2303      	movs	r3, #3
 8002888:	4a42      	ldr	r2, [pc, #264]	; (8002994 <Update+0x180>)
 800288a:	4946      	ldr	r1, [pc, #280]	; (80029a4 <Update+0x190>)
 800288c:	4844      	ldr	r0, [pc, #272]	; (80029a0 <Update+0x18c>)
 800288e:	f000 f895 	bl	80029bc <Multiply_matrix>
	PlusOrMinus(multiply,R_t,3,3,1);
 8002892:	6839      	ldr	r1, [r7, #0]
 8002894:	2301      	movs	r3, #1
 8002896:	9300      	str	r3, [sp, #0]
 8002898:	2303      	movs	r3, #3
 800289a:	2203      	movs	r2, #3
 800289c:	483d      	ldr	r0, [pc, #244]	; (8002994 <Update+0x180>)
 800289e:	f000 f911 	bl	8002ac4 <PlusOrMinus>
	equal(S_k,pm3_3,3,3);
 80028a2:	2303      	movs	r3, #3
 80028a4:	2203      	movs	r2, #3
 80028a6:	493c      	ldr	r1, [pc, #240]	; (8002998 <Update+0x184>)
 80028a8:	483f      	ldr	r0, [pc, #252]	; (80029a8 <Update+0x194>)
 80028aa:	f000 f9b5 	bl	8002c18 <equal>

	S_k[0][0] = 1/S_k[0][0];
 80028ae:	4b3e      	ldr	r3, [pc, #248]	; (80029a8 <Update+0x194>)
 80028b0:	ed93 7a00 	vldr	s14, [r3]
 80028b4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80028b8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80028bc:	4b3a      	ldr	r3, [pc, #232]	; (80029a8 <Update+0x194>)
 80028be:	edc3 7a00 	vstr	s15, [r3]
	Multiply_matrix(P_hat_t,H_t_tran,multiply,3,3,3,3);
 80028c2:	68b8      	ldr	r0, [r7, #8]
 80028c4:	2303      	movs	r3, #3
 80028c6:	9302      	str	r3, [sp, #8]
 80028c8:	2303      	movs	r3, #3
 80028ca:	9301      	str	r3, [sp, #4]
 80028cc:	2303      	movs	r3, #3
 80028ce:	9300      	str	r3, [sp, #0]
 80028d0:	2303      	movs	r3, #3
 80028d2:	4a30      	ldr	r2, [pc, #192]	; (8002994 <Update+0x180>)
 80028d4:	4933      	ldr	r1, [pc, #204]	; (80029a4 <Update+0x190>)
 80028d6:	f000 f871 	bl	80029bc <Multiply_matrix>
	equal(collect3_3,multiply,3,3);
 80028da:	2303      	movs	r3, #3
 80028dc:	2203      	movs	r2, #3
 80028de:	492d      	ldr	r1, [pc, #180]	; (8002994 <Update+0x180>)
 80028e0:	482f      	ldr	r0, [pc, #188]	; (80029a0 <Update+0x18c>)
 80028e2:	f000 f999 	bl	8002c18 <equal>
	Multiply_matrix(collect3_3,S_k,multiply, 3,3,3,3);
 80028e6:	2303      	movs	r3, #3
 80028e8:	9302      	str	r3, [sp, #8]
 80028ea:	2303      	movs	r3, #3
 80028ec:	9301      	str	r3, [sp, #4]
 80028ee:	2303      	movs	r3, #3
 80028f0:	9300      	str	r3, [sp, #0]
 80028f2:	2303      	movs	r3, #3
 80028f4:	4a27      	ldr	r2, [pc, #156]	; (8002994 <Update+0x180>)
 80028f6:	492c      	ldr	r1, [pc, #176]	; (80029a8 <Update+0x194>)
 80028f8:	4829      	ldr	r0, [pc, #164]	; (80029a0 <Update+0x18c>)
 80028fa:	f000 f85f 	bl	80029bc <Multiply_matrix>
	equal(K_k,multiply,3,3);
 80028fe:	2303      	movs	r3, #3
 8002900:	2203      	movs	r2, #3
 8002902:	4924      	ldr	r1, [pc, #144]	; (8002994 <Update+0x180>)
 8002904:	4829      	ldr	r0, [pc, #164]	; (80029ac <Update+0x198>)
 8002906:	f000 f987 	bl	8002c18 <equal>

	Multiply_matrix(K_k,y_k,multiply,3,3,3,3);
 800290a:	2303      	movs	r3, #3
 800290c:	9302      	str	r3, [sp, #8]
 800290e:	2303      	movs	r3, #3
 8002910:	9301      	str	r3, [sp, #4]
 8002912:	2303      	movs	r3, #3
 8002914:	9300      	str	r3, [sp, #0]
 8002916:	2303      	movs	r3, #3
 8002918:	4a1e      	ldr	r2, [pc, #120]	; (8002994 <Update+0x180>)
 800291a:	4920      	ldr	r1, [pc, #128]	; (800299c <Update+0x188>)
 800291c:	4823      	ldr	r0, [pc, #140]	; (80029ac <Update+0x198>)
 800291e:	f000 f84d 	bl	80029bc <Multiply_matrix>
	PlusOrMinus(X_hat_t,multiply,3,3,1);
 8002922:	68f8      	ldr	r0, [r7, #12]
 8002924:	2301      	movs	r3, #1
 8002926:	9300      	str	r3, [sp, #0]
 8002928:	2303      	movs	r3, #3
 800292a:	2203      	movs	r2, #3
 800292c:	4919      	ldr	r1, [pc, #100]	; (8002994 <Update+0x180>)
 800292e:	f000 f8c9 	bl	8002ac4 <PlusOrMinus>
	equal(X_t,pm3_3,3,3);
 8002932:	2303      	movs	r3, #3
 8002934:	2203      	movs	r2, #3
 8002936:	4918      	ldr	r1, [pc, #96]	; (8002998 <Update+0x184>)
 8002938:	481d      	ldr	r0, [pc, #116]	; (80029b0 <Update+0x19c>)
 800293a:	f000 f96d 	bl	8002c18 <equal>

	Multiply_matrix(K_k,H_t,multiply,3,3,3,3);
 800293e:	69b9      	ldr	r1, [r7, #24]
 8002940:	2303      	movs	r3, #3
 8002942:	9302      	str	r3, [sp, #8]
 8002944:	2303      	movs	r3, #3
 8002946:	9301      	str	r3, [sp, #4]
 8002948:	2303      	movs	r3, #3
 800294a:	9300      	str	r3, [sp, #0]
 800294c:	2303      	movs	r3, #3
 800294e:	4a11      	ldr	r2, [pc, #68]	; (8002994 <Update+0x180>)
 8002950:	4816      	ldr	r0, [pc, #88]	; (80029ac <Update+0x198>)
 8002952:	f000 f833 	bl	80029bc <Multiply_matrix>
	PlusOrMinus(I,multiply,3,3,2);
 8002956:	2302      	movs	r3, #2
 8002958:	9300      	str	r3, [sp, #0]
 800295a:	2303      	movs	r3, #3
 800295c:	2203      	movs	r2, #3
 800295e:	490d      	ldr	r1, [pc, #52]	; (8002994 <Update+0x180>)
 8002960:	4814      	ldr	r0, [pc, #80]	; (80029b4 <Update+0x1a0>)
 8002962:	f000 f8af 	bl	8002ac4 <PlusOrMinus>
	Multiply_matrix(pm3_3,P_hat_t,multiply,3,3,3,3);
 8002966:	68b9      	ldr	r1, [r7, #8]
 8002968:	2303      	movs	r3, #3
 800296a:	9302      	str	r3, [sp, #8]
 800296c:	2303      	movs	r3, #3
 800296e:	9301      	str	r3, [sp, #4]
 8002970:	2303      	movs	r3, #3
 8002972:	9300      	str	r3, [sp, #0]
 8002974:	2303      	movs	r3, #3
 8002976:	4a07      	ldr	r2, [pc, #28]	; (8002994 <Update+0x180>)
 8002978:	4807      	ldr	r0, [pc, #28]	; (8002998 <Update+0x184>)
 800297a:	f000 f81f 	bl	80029bc <Multiply_matrix>
	equal(P_t,multiply,3,3);
 800297e:	2303      	movs	r3, #3
 8002980:	2203      	movs	r2, #3
 8002982:	4904      	ldr	r1, [pc, #16]	; (8002994 <Update+0x180>)
 8002984:	480c      	ldr	r0, [pc, #48]	; (80029b8 <Update+0x1a4>)
 8002986:	f000 f947 	bl	8002c18 <equal>
}
 800298a:	bf00      	nop
 800298c:	3710      	adds	r7, #16
 800298e:	46bd      	mov	sp, r7
 8002990:	bd80      	pop	{r7, pc}
 8002992:	bf00      	nop
 8002994:	20000648 	.word	0x20000648
 8002998:	2000066c 	.word	0x2000066c
 800299c:	200006b4 	.word	0x200006b4
 80029a0:	20000690 	.word	0x20000690
 80029a4:	200000d4 	.word	0x200000d4
 80029a8:	200006d8 	.word	0x200006d8
 80029ac:	200006fc 	.word	0x200006fc
 80029b0:	20000720 	.word	0x20000720
 80029b4:	20000044 	.word	0x20000044
 80029b8:	20000768 	.word	0x20000768

080029bc <Multiply_matrix>:

void Multiply_matrix(float A[][3], float B[][3],float multiply[][3],int row1,int col1,int row2,int col2)
{
 80029bc:	b480      	push	{r7}
 80029be:	b087      	sub	sp, #28
 80029c0:	af00      	add	r7, sp, #0
 80029c2:	60f8      	str	r0, [r7, #12]
 80029c4:	60b9      	str	r1, [r7, #8]
 80029c6:	607a      	str	r2, [r7, #4]
 80029c8:	603b      	str	r3, [r7, #0]
	uint8_t i,j,k;
	//set zero
	for(i=0; i<3 ;i++){
 80029ca:	2300      	movs	r3, #0
 80029cc:	75fb      	strb	r3, [r7, #23]
 80029ce:	e019      	b.n	8002a04 <Multiply_matrix+0x48>
		for(j=0; j<3;j++){
 80029d0:	2300      	movs	r3, #0
 80029d2:	75bb      	strb	r3, [r7, #22]
 80029d4:	e010      	b.n	80029f8 <Multiply_matrix+0x3c>
			multiply[i][j] = 0;
 80029d6:	7dfa      	ldrb	r2, [r7, #23]
 80029d8:	4613      	mov	r3, r2
 80029da:	005b      	lsls	r3, r3, #1
 80029dc:	4413      	add	r3, r2
 80029de:	009b      	lsls	r3, r3, #2
 80029e0:	461a      	mov	r2, r3
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	441a      	add	r2, r3
 80029e6:	7dbb      	ldrb	r3, [r7, #22]
 80029e8:	009b      	lsls	r3, r3, #2
 80029ea:	4413      	add	r3, r2
 80029ec:	f04f 0200 	mov.w	r2, #0
 80029f0:	601a      	str	r2, [r3, #0]
		for(j=0; j<3;j++){
 80029f2:	7dbb      	ldrb	r3, [r7, #22]
 80029f4:	3301      	adds	r3, #1
 80029f6:	75bb      	strb	r3, [r7, #22]
 80029f8:	7dbb      	ldrb	r3, [r7, #22]
 80029fa:	2b02      	cmp	r3, #2
 80029fc:	d9eb      	bls.n	80029d6 <Multiply_matrix+0x1a>
	for(i=0; i<3 ;i++){
 80029fe:	7dfb      	ldrb	r3, [r7, #23]
 8002a00:	3301      	adds	r3, #1
 8002a02:	75fb      	strb	r3, [r7, #23]
 8002a04:	7dfb      	ldrb	r3, [r7, #23]
 8002a06:	2b02      	cmp	r3, #2
 8002a08:	d9e2      	bls.n	80029d0 <Multiply_matrix+0x14>
		}
	}

	for(i=0;i<row1;i++){
 8002a0a:	2300      	movs	r3, #0
 8002a0c:	75fb      	strb	r3, [r7, #23]
 8002a0e:	e04e      	b.n	8002aae <Multiply_matrix+0xf2>
		for(j=0;j<col2;j++){
 8002a10:	2300      	movs	r3, #0
 8002a12:	75bb      	strb	r3, [r7, #22]
 8002a14:	e044      	b.n	8002aa0 <Multiply_matrix+0xe4>
			for(k=0;k<col1;k++){
 8002a16:	2300      	movs	r3, #0
 8002a18:	757b      	strb	r3, [r7, #21]
 8002a1a:	e03a      	b.n	8002a92 <Multiply_matrix+0xd6>
				multiply[i][j] += A[i][k]*B[k][j];
 8002a1c:	7dfa      	ldrb	r2, [r7, #23]
 8002a1e:	4613      	mov	r3, r2
 8002a20:	005b      	lsls	r3, r3, #1
 8002a22:	4413      	add	r3, r2
 8002a24:	009b      	lsls	r3, r3, #2
 8002a26:	461a      	mov	r2, r3
 8002a28:	687b      	ldr	r3, [r7, #4]
 8002a2a:	441a      	add	r2, r3
 8002a2c:	7dbb      	ldrb	r3, [r7, #22]
 8002a2e:	009b      	lsls	r3, r3, #2
 8002a30:	4413      	add	r3, r2
 8002a32:	ed93 7a00 	vldr	s14, [r3]
 8002a36:	7dfa      	ldrb	r2, [r7, #23]
 8002a38:	4613      	mov	r3, r2
 8002a3a:	005b      	lsls	r3, r3, #1
 8002a3c:	4413      	add	r3, r2
 8002a3e:	009b      	lsls	r3, r3, #2
 8002a40:	461a      	mov	r2, r3
 8002a42:	68fb      	ldr	r3, [r7, #12]
 8002a44:	441a      	add	r2, r3
 8002a46:	7d7b      	ldrb	r3, [r7, #21]
 8002a48:	009b      	lsls	r3, r3, #2
 8002a4a:	4413      	add	r3, r2
 8002a4c:	edd3 6a00 	vldr	s13, [r3]
 8002a50:	7d7a      	ldrb	r2, [r7, #21]
 8002a52:	4613      	mov	r3, r2
 8002a54:	005b      	lsls	r3, r3, #1
 8002a56:	4413      	add	r3, r2
 8002a58:	009b      	lsls	r3, r3, #2
 8002a5a:	461a      	mov	r2, r3
 8002a5c:	68bb      	ldr	r3, [r7, #8]
 8002a5e:	441a      	add	r2, r3
 8002a60:	7dbb      	ldrb	r3, [r7, #22]
 8002a62:	009b      	lsls	r3, r3, #2
 8002a64:	4413      	add	r3, r2
 8002a66:	edd3 7a00 	vldr	s15, [r3]
 8002a6a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002a6e:	7dfa      	ldrb	r2, [r7, #23]
 8002a70:	4613      	mov	r3, r2
 8002a72:	005b      	lsls	r3, r3, #1
 8002a74:	4413      	add	r3, r2
 8002a76:	009b      	lsls	r3, r3, #2
 8002a78:	461a      	mov	r2, r3
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	441a      	add	r2, r3
 8002a7e:	7dbb      	ldrb	r3, [r7, #22]
 8002a80:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002a84:	009b      	lsls	r3, r3, #2
 8002a86:	4413      	add	r3, r2
 8002a88:	edc3 7a00 	vstr	s15, [r3]
			for(k=0;k<col1;k++){
 8002a8c:	7d7b      	ldrb	r3, [r7, #21]
 8002a8e:	3301      	adds	r3, #1
 8002a90:	757b      	strb	r3, [r7, #21]
 8002a92:	7d7b      	ldrb	r3, [r7, #21]
 8002a94:	6a3a      	ldr	r2, [r7, #32]
 8002a96:	429a      	cmp	r2, r3
 8002a98:	dcc0      	bgt.n	8002a1c <Multiply_matrix+0x60>
		for(j=0;j<col2;j++){
 8002a9a:	7dbb      	ldrb	r3, [r7, #22]
 8002a9c:	3301      	adds	r3, #1
 8002a9e:	75bb      	strb	r3, [r7, #22]
 8002aa0:	7dbb      	ldrb	r3, [r7, #22]
 8002aa2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002aa4:	429a      	cmp	r2, r3
 8002aa6:	dcb6      	bgt.n	8002a16 <Multiply_matrix+0x5a>
	for(i=0;i<row1;i++){
 8002aa8:	7dfb      	ldrb	r3, [r7, #23]
 8002aaa:	3301      	adds	r3, #1
 8002aac:	75fb      	strb	r3, [r7, #23]
 8002aae:	7dfb      	ldrb	r3, [r7, #23]
 8002ab0:	683a      	ldr	r2, [r7, #0]
 8002ab2:	429a      	cmp	r2, r3
 8002ab4:	dcac      	bgt.n	8002a10 <Multiply_matrix+0x54>
			}
		}
	}
}
 8002ab6:	bf00      	nop
 8002ab8:	bf00      	nop
 8002aba:	371c      	adds	r7, #28
 8002abc:	46bd      	mov	sp, r7
 8002abe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ac2:	4770      	bx	lr

08002ac4 <PlusOrMinus>:

void PlusOrMinus(float A[][3], float B[][3],int row,int col,int con)
{
 8002ac4:	b480      	push	{r7}
 8002ac6:	b087      	sub	sp, #28
 8002ac8:	af00      	add	r7, sp, #0
 8002aca:	60f8      	str	r0, [r7, #12]
 8002acc:	60b9      	str	r1, [r7, #8]
 8002ace:	607a      	str	r2, [r7, #4]
 8002ad0:	603b      	str	r3, [r7, #0]
	uint8_t i,j;
	//set zeros
	for(i=0; i<3 ;i++){
 8002ad2:	2300      	movs	r3, #0
 8002ad4:	75fb      	strb	r3, [r7, #23]
 8002ad6:	e017      	b.n	8002b08 <PlusOrMinus+0x44>
			for(j=0; j<3;j++){
 8002ad8:	2300      	movs	r3, #0
 8002ada:	75bb      	strb	r3, [r7, #22]
 8002adc:	e00e      	b.n	8002afc <PlusOrMinus+0x38>
				pm3_3[i][j] = 0;
 8002ade:	7dfa      	ldrb	r2, [r7, #23]
 8002ae0:	7db9      	ldrb	r1, [r7, #22]
 8002ae2:	484c      	ldr	r0, [pc, #304]	; (8002c14 <PlusOrMinus+0x150>)
 8002ae4:	4613      	mov	r3, r2
 8002ae6:	005b      	lsls	r3, r3, #1
 8002ae8:	4413      	add	r3, r2
 8002aea:	440b      	add	r3, r1
 8002aec:	009b      	lsls	r3, r3, #2
 8002aee:	4403      	add	r3, r0
 8002af0:	f04f 0200 	mov.w	r2, #0
 8002af4:	601a      	str	r2, [r3, #0]
			for(j=0; j<3;j++){
 8002af6:	7dbb      	ldrb	r3, [r7, #22]
 8002af8:	3301      	adds	r3, #1
 8002afa:	75bb      	strb	r3, [r7, #22]
 8002afc:	7dbb      	ldrb	r3, [r7, #22]
 8002afe:	2b02      	cmp	r3, #2
 8002b00:	d9ed      	bls.n	8002ade <PlusOrMinus+0x1a>
	for(i=0; i<3 ;i++){
 8002b02:	7dfb      	ldrb	r3, [r7, #23]
 8002b04:	3301      	adds	r3, #1
 8002b06:	75fb      	strb	r3, [r7, #23]
 8002b08:	7dfb      	ldrb	r3, [r7, #23]
 8002b0a:	2b02      	cmp	r3, #2
 8002b0c:	d9e4      	bls.n	8002ad8 <PlusOrMinus+0x14>
			}
		}
	//condition for plus
	if(con == 1){
 8002b0e:	6a3b      	ldr	r3, [r7, #32]
 8002b10:	2b01      	cmp	r3, #1
 8002b12:	d13b      	bne.n	8002b8c <PlusOrMinus+0xc8>
		for(i = 0; i < row; ++i){
 8002b14:	2300      	movs	r3, #0
 8002b16:	75fb      	strb	r3, [r7, #23]
 8002b18:	e033      	b.n	8002b82 <PlusOrMinus+0xbe>
			for (j = 0; j < col; ++j){
 8002b1a:	2300      	movs	r3, #0
 8002b1c:	75bb      	strb	r3, [r7, #22]
 8002b1e:	e029      	b.n	8002b74 <PlusOrMinus+0xb0>
				pm3_3[i][j] = A[i][j] + B[i][j];
 8002b20:	7dfa      	ldrb	r2, [r7, #23]
 8002b22:	4613      	mov	r3, r2
 8002b24:	005b      	lsls	r3, r3, #1
 8002b26:	4413      	add	r3, r2
 8002b28:	009b      	lsls	r3, r3, #2
 8002b2a:	461a      	mov	r2, r3
 8002b2c:	68fb      	ldr	r3, [r7, #12]
 8002b2e:	441a      	add	r2, r3
 8002b30:	7dbb      	ldrb	r3, [r7, #22]
 8002b32:	009b      	lsls	r3, r3, #2
 8002b34:	4413      	add	r3, r2
 8002b36:	ed93 7a00 	vldr	s14, [r3]
 8002b3a:	7dfa      	ldrb	r2, [r7, #23]
 8002b3c:	4613      	mov	r3, r2
 8002b3e:	005b      	lsls	r3, r3, #1
 8002b40:	4413      	add	r3, r2
 8002b42:	009b      	lsls	r3, r3, #2
 8002b44:	461a      	mov	r2, r3
 8002b46:	68bb      	ldr	r3, [r7, #8]
 8002b48:	441a      	add	r2, r3
 8002b4a:	7dbb      	ldrb	r3, [r7, #22]
 8002b4c:	009b      	lsls	r3, r3, #2
 8002b4e:	4413      	add	r3, r2
 8002b50:	edd3 7a00 	vldr	s15, [r3]
 8002b54:	7dfa      	ldrb	r2, [r7, #23]
 8002b56:	7db9      	ldrb	r1, [r7, #22]
 8002b58:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002b5c:	482d      	ldr	r0, [pc, #180]	; (8002c14 <PlusOrMinus+0x150>)
 8002b5e:	4613      	mov	r3, r2
 8002b60:	005b      	lsls	r3, r3, #1
 8002b62:	4413      	add	r3, r2
 8002b64:	440b      	add	r3, r1
 8002b66:	009b      	lsls	r3, r3, #2
 8002b68:	4403      	add	r3, r0
 8002b6a:	edc3 7a00 	vstr	s15, [r3]
			for (j = 0; j < col; ++j){
 8002b6e:	7dbb      	ldrb	r3, [r7, #22]
 8002b70:	3301      	adds	r3, #1
 8002b72:	75bb      	strb	r3, [r7, #22]
 8002b74:	7dbb      	ldrb	r3, [r7, #22]
 8002b76:	683a      	ldr	r2, [r7, #0]
 8002b78:	429a      	cmp	r2, r3
 8002b7a:	dcd1      	bgt.n	8002b20 <PlusOrMinus+0x5c>
		for(i = 0; i < row; ++i){
 8002b7c:	7dfb      	ldrb	r3, [r7, #23]
 8002b7e:	3301      	adds	r3, #1
 8002b80:	75fb      	strb	r3, [r7, #23]
 8002b82:	7dfb      	ldrb	r3, [r7, #23]
 8002b84:	687a      	ldr	r2, [r7, #4]
 8002b86:	429a      	cmp	r2, r3
 8002b88:	dcc7      	bgt.n	8002b1a <PlusOrMinus+0x56>
			for (j = 0; j < col; ++j){
				pm3_3[i][j] = A[i][j] - B[i][j];
			}
		}
	}
}
 8002b8a:	e03d      	b.n	8002c08 <PlusOrMinus+0x144>
	else if(con == 2){
 8002b8c:	6a3b      	ldr	r3, [r7, #32]
 8002b8e:	2b02      	cmp	r3, #2
 8002b90:	d13a      	bne.n	8002c08 <PlusOrMinus+0x144>
		for(i = 0; i < row; ++i){
 8002b92:	2300      	movs	r3, #0
 8002b94:	75fb      	strb	r3, [r7, #23]
 8002b96:	e033      	b.n	8002c00 <PlusOrMinus+0x13c>
			for (j = 0; j < col; ++j){
 8002b98:	2300      	movs	r3, #0
 8002b9a:	75bb      	strb	r3, [r7, #22]
 8002b9c:	e029      	b.n	8002bf2 <PlusOrMinus+0x12e>
				pm3_3[i][j] = A[i][j] - B[i][j];
 8002b9e:	7dfa      	ldrb	r2, [r7, #23]
 8002ba0:	4613      	mov	r3, r2
 8002ba2:	005b      	lsls	r3, r3, #1
 8002ba4:	4413      	add	r3, r2
 8002ba6:	009b      	lsls	r3, r3, #2
 8002ba8:	461a      	mov	r2, r3
 8002baa:	68fb      	ldr	r3, [r7, #12]
 8002bac:	441a      	add	r2, r3
 8002bae:	7dbb      	ldrb	r3, [r7, #22]
 8002bb0:	009b      	lsls	r3, r3, #2
 8002bb2:	4413      	add	r3, r2
 8002bb4:	ed93 7a00 	vldr	s14, [r3]
 8002bb8:	7dfa      	ldrb	r2, [r7, #23]
 8002bba:	4613      	mov	r3, r2
 8002bbc:	005b      	lsls	r3, r3, #1
 8002bbe:	4413      	add	r3, r2
 8002bc0:	009b      	lsls	r3, r3, #2
 8002bc2:	461a      	mov	r2, r3
 8002bc4:	68bb      	ldr	r3, [r7, #8]
 8002bc6:	441a      	add	r2, r3
 8002bc8:	7dbb      	ldrb	r3, [r7, #22]
 8002bca:	009b      	lsls	r3, r3, #2
 8002bcc:	4413      	add	r3, r2
 8002bce:	edd3 7a00 	vldr	s15, [r3]
 8002bd2:	7dfa      	ldrb	r2, [r7, #23]
 8002bd4:	7db9      	ldrb	r1, [r7, #22]
 8002bd6:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002bda:	480e      	ldr	r0, [pc, #56]	; (8002c14 <PlusOrMinus+0x150>)
 8002bdc:	4613      	mov	r3, r2
 8002bde:	005b      	lsls	r3, r3, #1
 8002be0:	4413      	add	r3, r2
 8002be2:	440b      	add	r3, r1
 8002be4:	009b      	lsls	r3, r3, #2
 8002be6:	4403      	add	r3, r0
 8002be8:	edc3 7a00 	vstr	s15, [r3]
			for (j = 0; j < col; ++j){
 8002bec:	7dbb      	ldrb	r3, [r7, #22]
 8002bee:	3301      	adds	r3, #1
 8002bf0:	75bb      	strb	r3, [r7, #22]
 8002bf2:	7dbb      	ldrb	r3, [r7, #22]
 8002bf4:	683a      	ldr	r2, [r7, #0]
 8002bf6:	429a      	cmp	r2, r3
 8002bf8:	dcd1      	bgt.n	8002b9e <PlusOrMinus+0xda>
		for(i = 0; i < row; ++i){
 8002bfa:	7dfb      	ldrb	r3, [r7, #23]
 8002bfc:	3301      	adds	r3, #1
 8002bfe:	75fb      	strb	r3, [r7, #23]
 8002c00:	7dfb      	ldrb	r3, [r7, #23]
 8002c02:	687a      	ldr	r2, [r7, #4]
 8002c04:	429a      	cmp	r2, r3
 8002c06:	dcc7      	bgt.n	8002b98 <PlusOrMinus+0xd4>
}
 8002c08:	bf00      	nop
 8002c0a:	371c      	adds	r7, #28
 8002c0c:	46bd      	mov	sp, r7
 8002c0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c12:	4770      	bx	lr
 8002c14:	2000066c 	.word	0x2000066c

08002c18 <equal>:

void equal(float A[][3],float B[][3],int row,int col)
{
 8002c18:	b490      	push	{r4, r7}
 8002c1a:	b086      	sub	sp, #24
 8002c1c:	af00      	add	r7, sp, #0
 8002c1e:	60f8      	str	r0, [r7, #12]
 8002c20:	60b9      	str	r1, [r7, #8]
 8002c22:	607a      	str	r2, [r7, #4]
 8002c24:	603b      	str	r3, [r7, #0]
	uint8_t i,j;
	for(i = 0; i < row; ++i){
 8002c26:	2300      	movs	r3, #0
 8002c28:	75fb      	strb	r3, [r7, #23]
 8002c2a:	e024      	b.n	8002c76 <equal+0x5e>
		for (j = 0; j < col; ++j){
 8002c2c:	2300      	movs	r3, #0
 8002c2e:	75bb      	strb	r3, [r7, #22]
 8002c30:	e01a      	b.n	8002c68 <equal+0x50>
			A[i][j] = B[i][j];
 8002c32:	7dfa      	ldrb	r2, [r7, #23]
 8002c34:	4613      	mov	r3, r2
 8002c36:	005b      	lsls	r3, r3, #1
 8002c38:	4413      	add	r3, r2
 8002c3a:	009b      	lsls	r3, r3, #2
 8002c3c:	461a      	mov	r2, r3
 8002c3e:	68bb      	ldr	r3, [r7, #8]
 8002c40:	1898      	adds	r0, r3, r2
 8002c42:	7dbc      	ldrb	r4, [r7, #22]
 8002c44:	7dfa      	ldrb	r2, [r7, #23]
 8002c46:	4613      	mov	r3, r2
 8002c48:	005b      	lsls	r3, r3, #1
 8002c4a:	4413      	add	r3, r2
 8002c4c:	009b      	lsls	r3, r3, #2
 8002c4e:	461a      	mov	r2, r3
 8002c50:	68fb      	ldr	r3, [r7, #12]
 8002c52:	1899      	adds	r1, r3, r2
 8002c54:	7dbb      	ldrb	r3, [r7, #22]
 8002c56:	00a2      	lsls	r2, r4, #2
 8002c58:	4402      	add	r2, r0
 8002c5a:	6812      	ldr	r2, [r2, #0]
 8002c5c:	009b      	lsls	r3, r3, #2
 8002c5e:	440b      	add	r3, r1
 8002c60:	601a      	str	r2, [r3, #0]
		for (j = 0; j < col; ++j){
 8002c62:	7dbb      	ldrb	r3, [r7, #22]
 8002c64:	3301      	adds	r3, #1
 8002c66:	75bb      	strb	r3, [r7, #22]
 8002c68:	7dbb      	ldrb	r3, [r7, #22]
 8002c6a:	683a      	ldr	r2, [r7, #0]
 8002c6c:	429a      	cmp	r2, r3
 8002c6e:	dce0      	bgt.n	8002c32 <equal+0x1a>
	for(i = 0; i < row; ++i){
 8002c70:	7dfb      	ldrb	r3, [r7, #23]
 8002c72:	3301      	adds	r3, #1
 8002c74:	75fb      	strb	r3, [r7, #23]
 8002c76:	7dfb      	ldrb	r3, [r7, #23]
 8002c78:	687a      	ldr	r2, [r7, #4]
 8002c7a:	429a      	cmp	r2, r3
 8002c7c:	dcd6      	bgt.n	8002c2c <equal+0x14>
		}
	}
}
 8002c7e:	bf00      	nop
 8002c80:	bf00      	nop
 8002c82:	3718      	adds	r7, #24
 8002c84:	46bd      	mov	sp, r7
 8002c86:	bc90      	pop	{r4, r7}
 8002c88:	4770      	bx	lr
 8002c8a:	0000      	movs	r0, r0
 8002c8c:	0000      	movs	r0, r0
	...

08002c90 <Trajectory>:


void Trajectory(float qf,float vb)
{
 8002c90:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8002c94:	b084      	sub	sp, #16
 8002c96:	af00      	add	r7, sp, #0
 8002c98:	ed87 0a01 	vstr	s0, [r7, #4]
 8002c9c:	edc7 0a00 	vstr	s1, [r7]
	vb = vb/9.5493;
 8002ca0:	6838      	ldr	r0, [r7, #0]
 8002ca2:	f7fd fbfd 	bl	80004a0 <__aeabi_f2d>
 8002ca6:	a3b4      	add	r3, pc, #720	; (adr r3, 8002f78 <Trajectory+0x2e8>)
 8002ca8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002cac:	f7fd fd7a 	bl	80007a4 <__aeabi_ddiv>
 8002cb0:	4602      	mov	r2, r0
 8002cb2:	460b      	mov	r3, r1
 8002cb4:	4610      	mov	r0, r2
 8002cb6:	4619      	mov	r1, r3
 8002cb8:	f7fd ff1a 	bl	8000af0 <__aeabi_d2f>
 8002cbc:	4603      	mov	r3, r0
 8002cbe:	603b      	str	r3, [r7, #0]
	float ab = 0.4;
 8002cc0:	4ba1      	ldr	r3, [pc, #644]	; (8002f48 <Trajectory+0x2b8>)
 8002cc2:	60fb      	str	r3, [r7, #12]
	if(qf < 0.1){
 8002cc4:	6878      	ldr	r0, [r7, #4]
 8002cc6:	f7fd fbeb 	bl	80004a0 <__aeabi_f2d>
 8002cca:	a39d      	add	r3, pc, #628	; (adr r3, 8002f40 <Trajectory+0x2b0>)
 8002ccc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002cd0:	f7fd feb0 	bl	8000a34 <__aeabi_dcmplt>
 8002cd4:	4603      	mov	r3, r0
 8002cd6:	2b00      	cmp	r3, #0
 8002cd8:	d003      	beq.n	8002ce2 <Trajectory+0x52>
		ab = 0.4;
 8002cda:	4b9b      	ldr	r3, [pc, #620]	; (8002f48 <Trajectory+0x2b8>)
 8002cdc:	60fb      	str	r3, [r7, #12]
		vb = 1.5/9.5493;
 8002cde:	4b9b      	ldr	r3, [pc, #620]	; (8002f4c <Trajectory+0x2bc>)
 8002ce0:	603b      	str	r3, [r7, #0]
	}
	if(tuaall >= 0){
 8002ce2:	4b9b      	ldr	r3, [pc, #620]	; (8002f50 <Trajectory+0x2c0>)
 8002ce4:	edd3 7a00 	vldr	s15, [r3]
 8002ce8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002cec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002cf0:	f2c0 827a 	blt.w	80031e8 <Trajectory+0x558>
		tua = tuaall - 0;
 8002cf4:	4b96      	ldr	r3, [pc, #600]	; (8002f50 <Trajectory+0x2c0>)
 8002cf6:	681b      	ldr	r3, [r3, #0]
 8002cf8:	4a96      	ldr	r2, [pc, #600]	; (8002f54 <Trajectory+0x2c4>)
 8002cfa:	6013      	str	r3, [r2, #0]
		if(qf/vb > vb/ab){
 8002cfc:	edd7 6a01 	vldr	s13, [r7, #4]
 8002d00:	edd7 7a00 	vldr	s15, [r7]
 8002d04:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8002d08:	ed97 6a00 	vldr	s12, [r7]
 8002d0c:	edd7 6a03 	vldr	s13, [r7, #12]
 8002d10:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8002d14:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002d18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002d1c:	dd0c      	ble.n	8002d38 <Trajectory+0xa8>
			tb = vb/ab;
 8002d1e:	edd7 6a00 	vldr	s13, [r7]
 8002d22:	ed97 7a03 	vldr	s14, [r7, #12]
 8002d26:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8002d2a:	4b8b      	ldr	r3, [pc, #556]	; (8002f58 <Trajectory+0x2c8>)
 8002d2c:	edc3 7a00 	vstr	s15, [r3]
			vb_n = vb;
 8002d30:	4a8a      	ldr	r2, [pc, #552]	; (8002f5c <Trajectory+0x2cc>)
 8002d32:	683b      	ldr	r3, [r7, #0]
 8002d34:	6013      	str	r3, [r2, #0]
 8002d36:	e033      	b.n	8002da0 <Trajectory+0x110>

		}
		else{
			ab = 0.4;
 8002d38:	4b83      	ldr	r3, [pc, #524]	; (8002f48 <Trajectory+0x2b8>)
 8002d3a:	60fb      	str	r3, [r7, #12]
			tb = sqrt(qf/ab);
 8002d3c:	ed97 7a01 	vldr	s14, [r7, #4]
 8002d40:	edd7 7a03 	vldr	s15, [r7, #12]
 8002d44:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8002d48:	ee16 0a90 	vmov	r0, s13
 8002d4c:	f7fd fba8 	bl	80004a0 <__aeabi_f2d>
 8002d50:	4602      	mov	r2, r0
 8002d52:	460b      	mov	r3, r1
 8002d54:	ec43 2b10 	vmov	d0, r2, r3
 8002d58:	f008 fee4 	bl	800bb24 <sqrt>
 8002d5c:	ec53 2b10 	vmov	r2, r3, d0
 8002d60:	4610      	mov	r0, r2
 8002d62:	4619      	mov	r1, r3
 8002d64:	f7fd fec4 	bl	8000af0 <__aeabi_d2f>
 8002d68:	4603      	mov	r3, r0
 8002d6a:	4a7b      	ldr	r2, [pc, #492]	; (8002f58 <Trajectory+0x2c8>)
 8002d6c:	6013      	str	r3, [r2, #0]
			vb_n = sqrt(qf*ab);
 8002d6e:	ed97 7a01 	vldr	s14, [r7, #4]
 8002d72:	edd7 7a03 	vldr	s15, [r7, #12]
 8002d76:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002d7a:	ee17 0a90 	vmov	r0, s15
 8002d7e:	f7fd fb8f 	bl	80004a0 <__aeabi_f2d>
 8002d82:	4602      	mov	r2, r0
 8002d84:	460b      	mov	r3, r1
 8002d86:	ec43 2b10 	vmov	d0, r2, r3
 8002d8a:	f008 fecb 	bl	800bb24 <sqrt>
 8002d8e:	ec53 2b10 	vmov	r2, r3, d0
 8002d92:	4610      	mov	r0, r2
 8002d94:	4619      	mov	r1, r3
 8002d96:	f7fd feab 	bl	8000af0 <__aeabi_d2f>
 8002d9a:	4603      	mov	r3, r0
 8002d9c:	4a6f      	ldr	r2, [pc, #444]	; (8002f5c <Trajectory+0x2cc>)
 8002d9e:	6013      	str	r3, [r2, #0]
		}
		tf = (2*tb) + ((qf-(vb_n*vb_n/ab))/vb_n);
 8002da0:	4b6d      	ldr	r3, [pc, #436]	; (8002f58 <Trajectory+0x2c8>)
 8002da2:	edd3 7a00 	vldr	s15, [r3]
 8002da6:	ee37 7aa7 	vadd.f32	s14, s15, s15
 8002daa:	4b6c      	ldr	r3, [pc, #432]	; (8002f5c <Trajectory+0x2cc>)
 8002dac:	edd3 6a00 	vldr	s13, [r3]
 8002db0:	4b6a      	ldr	r3, [pc, #424]	; (8002f5c <Trajectory+0x2cc>)
 8002db2:	edd3 7a00 	vldr	s15, [r3]
 8002db6:	ee26 6aa7 	vmul.f32	s12, s13, s15
 8002dba:	edd7 6a03 	vldr	s13, [r7, #12]
 8002dbe:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8002dc2:	edd7 6a01 	vldr	s13, [r7, #4]
 8002dc6:	ee36 6ae7 	vsub.f32	s12, s13, s15
 8002dca:	4b64      	ldr	r3, [pc, #400]	; (8002f5c <Trajectory+0x2cc>)
 8002dcc:	edd3 6a00 	vldr	s13, [r3]
 8002dd0:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8002dd4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002dd8:	4b61      	ldr	r3, [pc, #388]	; (8002f60 <Trajectory+0x2d0>)
 8002dda:	edc3 7a00 	vstr	s15, [r3]
		if(tua <= tb){
 8002dde:	4b5d      	ldr	r3, [pc, #372]	; (8002f54 <Trajectory+0x2c4>)
 8002de0:	ed93 7a00 	vldr	s14, [r3]
 8002de4:	4b5c      	ldr	r3, [pc, #368]	; (8002f58 <Trajectory+0x2c8>)
 8002de6:	edd3 7a00 	vldr	s15, [r3]
 8002dea:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002dee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002df2:	d83f      	bhi.n	8002e74 <Trajectory+0x1e4>
			tra_pos = 0.5*ab*tua*tua;
 8002df4:	68f8      	ldr	r0, [r7, #12]
 8002df6:	f7fd fb53 	bl	80004a0 <__aeabi_f2d>
 8002dfa:	f04f 0200 	mov.w	r2, #0
 8002dfe:	4b59      	ldr	r3, [pc, #356]	; (8002f64 <Trajectory+0x2d4>)
 8002e00:	f7fd fba6 	bl	8000550 <__aeabi_dmul>
 8002e04:	4602      	mov	r2, r0
 8002e06:	460b      	mov	r3, r1
 8002e08:	4614      	mov	r4, r2
 8002e0a:	461d      	mov	r5, r3
 8002e0c:	4b51      	ldr	r3, [pc, #324]	; (8002f54 <Trajectory+0x2c4>)
 8002e0e:	681b      	ldr	r3, [r3, #0]
 8002e10:	4618      	mov	r0, r3
 8002e12:	f7fd fb45 	bl	80004a0 <__aeabi_f2d>
 8002e16:	4602      	mov	r2, r0
 8002e18:	460b      	mov	r3, r1
 8002e1a:	4620      	mov	r0, r4
 8002e1c:	4629      	mov	r1, r5
 8002e1e:	f7fd fb97 	bl	8000550 <__aeabi_dmul>
 8002e22:	4602      	mov	r2, r0
 8002e24:	460b      	mov	r3, r1
 8002e26:	4614      	mov	r4, r2
 8002e28:	461d      	mov	r5, r3
 8002e2a:	4b4a      	ldr	r3, [pc, #296]	; (8002f54 <Trajectory+0x2c4>)
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	4618      	mov	r0, r3
 8002e30:	f7fd fb36 	bl	80004a0 <__aeabi_f2d>
 8002e34:	4602      	mov	r2, r0
 8002e36:	460b      	mov	r3, r1
 8002e38:	4620      	mov	r0, r4
 8002e3a:	4629      	mov	r1, r5
 8002e3c:	f7fd fb88 	bl	8000550 <__aeabi_dmul>
 8002e40:	4602      	mov	r2, r0
 8002e42:	460b      	mov	r3, r1
 8002e44:	4610      	mov	r0, r2
 8002e46:	4619      	mov	r1, r3
 8002e48:	f7fd fe52 	bl	8000af0 <__aeabi_d2f>
 8002e4c:	4603      	mov	r3, r0
 8002e4e:	4a46      	ldr	r2, [pc, #280]	; (8002f68 <Trajectory+0x2d8>)
 8002e50:	6013      	str	r3, [r2, #0]
			tra_velo = ab*tua;
 8002e52:	4b40      	ldr	r3, [pc, #256]	; (8002f54 <Trajectory+0x2c4>)
 8002e54:	ed93 7a00 	vldr	s14, [r3]
 8002e58:	edd7 7a03 	vldr	s15, [r7, #12]
 8002e5c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002e60:	4b42      	ldr	r3, [pc, #264]	; (8002f6c <Trajectory+0x2dc>)
 8002e62:	edc3 7a00 	vstr	s15, [r3]
			tra_acc = ab;
 8002e66:	4a42      	ldr	r2, [pc, #264]	; (8002f70 <Trajectory+0x2e0>)
 8002e68:	68fb      	ldr	r3, [r7, #12]
 8002e6a:	6013      	str	r3, [r2, #0]
			/*if(tra_velo < velostart){
				tra_velo = velostart;
			}*/
			start_tra = 1;
 8002e6c:	4b41      	ldr	r3, [pc, #260]	; (8002f74 <Trajectory+0x2e4>)
 8002e6e:	2201      	movs	r2, #1
 8002e70:	701a      	strb	r2, [r3, #0]
 8002e72:	e179      	b.n	8003168 <Trajectory+0x4d8>
		}
		else if(tua < (tf-tb)){
 8002e74:	4b3a      	ldr	r3, [pc, #232]	; (8002f60 <Trajectory+0x2d0>)
 8002e76:	ed93 7a00 	vldr	s14, [r3]
 8002e7a:	4b37      	ldr	r3, [pc, #220]	; (8002f58 <Trajectory+0x2c8>)
 8002e7c:	edd3 7a00 	vldr	s15, [r3]
 8002e80:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002e84:	4b33      	ldr	r3, [pc, #204]	; (8002f54 <Trajectory+0x2c4>)
 8002e86:	edd3 7a00 	vldr	s15, [r3]
 8002e8a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002e8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002e92:	dd75      	ble.n	8002f80 <Trajectory+0x2f0>
			tra_pos = (0.5*ab*tb*tb) + (vb_n*(tua-tb));
 8002e94:	68f8      	ldr	r0, [r7, #12]
 8002e96:	f7fd fb03 	bl	80004a0 <__aeabi_f2d>
 8002e9a:	f04f 0200 	mov.w	r2, #0
 8002e9e:	4b31      	ldr	r3, [pc, #196]	; (8002f64 <Trajectory+0x2d4>)
 8002ea0:	f7fd fb56 	bl	8000550 <__aeabi_dmul>
 8002ea4:	4602      	mov	r2, r0
 8002ea6:	460b      	mov	r3, r1
 8002ea8:	4614      	mov	r4, r2
 8002eaa:	461d      	mov	r5, r3
 8002eac:	4b2a      	ldr	r3, [pc, #168]	; (8002f58 <Trajectory+0x2c8>)
 8002eae:	681b      	ldr	r3, [r3, #0]
 8002eb0:	4618      	mov	r0, r3
 8002eb2:	f7fd faf5 	bl	80004a0 <__aeabi_f2d>
 8002eb6:	4602      	mov	r2, r0
 8002eb8:	460b      	mov	r3, r1
 8002eba:	4620      	mov	r0, r4
 8002ebc:	4629      	mov	r1, r5
 8002ebe:	f7fd fb47 	bl	8000550 <__aeabi_dmul>
 8002ec2:	4602      	mov	r2, r0
 8002ec4:	460b      	mov	r3, r1
 8002ec6:	4614      	mov	r4, r2
 8002ec8:	461d      	mov	r5, r3
 8002eca:	4b23      	ldr	r3, [pc, #140]	; (8002f58 <Trajectory+0x2c8>)
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	4618      	mov	r0, r3
 8002ed0:	f7fd fae6 	bl	80004a0 <__aeabi_f2d>
 8002ed4:	4602      	mov	r2, r0
 8002ed6:	460b      	mov	r3, r1
 8002ed8:	4620      	mov	r0, r4
 8002eda:	4629      	mov	r1, r5
 8002edc:	f7fd fb38 	bl	8000550 <__aeabi_dmul>
 8002ee0:	4602      	mov	r2, r0
 8002ee2:	460b      	mov	r3, r1
 8002ee4:	4614      	mov	r4, r2
 8002ee6:	461d      	mov	r5, r3
 8002ee8:	4b1a      	ldr	r3, [pc, #104]	; (8002f54 <Trajectory+0x2c4>)
 8002eea:	ed93 7a00 	vldr	s14, [r3]
 8002eee:	4b1a      	ldr	r3, [pc, #104]	; (8002f58 <Trajectory+0x2c8>)
 8002ef0:	edd3 7a00 	vldr	s15, [r3]
 8002ef4:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002ef8:	4b18      	ldr	r3, [pc, #96]	; (8002f5c <Trajectory+0x2cc>)
 8002efa:	edd3 7a00 	vldr	s15, [r3]
 8002efe:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002f02:	ee17 0a90 	vmov	r0, s15
 8002f06:	f7fd facb 	bl	80004a0 <__aeabi_f2d>
 8002f0a:	4602      	mov	r2, r0
 8002f0c:	460b      	mov	r3, r1
 8002f0e:	4620      	mov	r0, r4
 8002f10:	4629      	mov	r1, r5
 8002f12:	f7fd f967 	bl	80001e4 <__adddf3>
 8002f16:	4602      	mov	r2, r0
 8002f18:	460b      	mov	r3, r1
 8002f1a:	4610      	mov	r0, r2
 8002f1c:	4619      	mov	r1, r3
 8002f1e:	f7fd fde7 	bl	8000af0 <__aeabi_d2f>
 8002f22:	4603      	mov	r3, r0
 8002f24:	4a10      	ldr	r2, [pc, #64]	; (8002f68 <Trajectory+0x2d8>)
 8002f26:	6013      	str	r3, [r2, #0]
			tra_velo = vb_n;
 8002f28:	4b0c      	ldr	r3, [pc, #48]	; (8002f5c <Trajectory+0x2cc>)
 8002f2a:	681b      	ldr	r3, [r3, #0]
 8002f2c:	4a0f      	ldr	r2, [pc, #60]	; (8002f6c <Trajectory+0x2dc>)
 8002f2e:	6013      	str	r3, [r2, #0]
			tra_acc = 0;
 8002f30:	4b0f      	ldr	r3, [pc, #60]	; (8002f70 <Trajectory+0x2e0>)
 8002f32:	f04f 0200 	mov.w	r2, #0
 8002f36:	601a      	str	r2, [r3, #0]
			start_tra = 0;
 8002f38:	4b0e      	ldr	r3, [pc, #56]	; (8002f74 <Trajectory+0x2e4>)
 8002f3a:	2200      	movs	r2, #0
 8002f3c:	701a      	strb	r2, [r3, #0]
 8002f3e:	e113      	b.n	8003168 <Trajectory+0x4d8>
 8002f40:	9999999a 	.word	0x9999999a
 8002f44:	3fb99999 	.word	0x3fb99999
 8002f48:	3ecccccd 	.word	0x3ecccccd
 8002f4c:	3e20d978 	.word	0x3e20d978
 8002f50:	200005d4 	.word	0x200005d4
 8002f54:	200005d0 	.word	0x200005d0
 8002f58:	200005c4 	.word	0x200005c4
 8002f5c:	200005c8 	.word	0x200005c8
 8002f60:	200005cc 	.word	0x200005cc
 8002f64:	3fe00000 	.word	0x3fe00000
 8002f68:	200005b8 	.word	0x200005b8
 8002f6c:	200005bc 	.word	0x200005bc
 8002f70:	200005c0 	.word	0x200005c0
 8002f74:	200005e6 	.word	0x200005e6
 8002f78:	d97f62b7 	.word	0xd97f62b7
 8002f7c:	4023193d 	.word	0x4023193d

		}
		else if(tua >= tf-tb && tua <= tf){
 8002f80:	4ba2      	ldr	r3, [pc, #648]	; (800320c <Trajectory+0x57c>)
 8002f82:	ed93 7a00 	vldr	s14, [r3]
 8002f86:	4ba2      	ldr	r3, [pc, #648]	; (8003210 <Trajectory+0x580>)
 8002f88:	edd3 7a00 	vldr	s15, [r3]
 8002f8c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002f90:	4ba0      	ldr	r3, [pc, #640]	; (8003214 <Trajectory+0x584>)
 8002f92:	edd3 7a00 	vldr	s15, [r3]
 8002f96:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002f9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002f9e:	f200 80e3 	bhi.w	8003168 <Trajectory+0x4d8>
 8002fa2:	4b9c      	ldr	r3, [pc, #624]	; (8003214 <Trajectory+0x584>)
 8002fa4:	ed93 7a00 	vldr	s14, [r3]
 8002fa8:	4b98      	ldr	r3, [pc, #608]	; (800320c <Trajectory+0x57c>)
 8002faa:	edd3 7a00 	vldr	s15, [r3]
 8002fae:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002fb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002fb6:	f200 80d7 	bhi.w	8003168 <Trajectory+0x4d8>
			tra_pos = (0.5*ab*tb*tb) + (vb_n*(tua-(tf-tb))) + (vb_n*(tf-(2*tb))) - (0.5*ab*(tua-(tf-tb))*(tua-(tf-tb)));
 8002fba:	68f8      	ldr	r0, [r7, #12]
 8002fbc:	f7fd fa70 	bl	80004a0 <__aeabi_f2d>
 8002fc0:	f04f 0200 	mov.w	r2, #0
 8002fc4:	4b94      	ldr	r3, [pc, #592]	; (8003218 <Trajectory+0x588>)
 8002fc6:	f7fd fac3 	bl	8000550 <__aeabi_dmul>
 8002fca:	4602      	mov	r2, r0
 8002fcc:	460b      	mov	r3, r1
 8002fce:	4614      	mov	r4, r2
 8002fd0:	461d      	mov	r5, r3
 8002fd2:	4b8f      	ldr	r3, [pc, #572]	; (8003210 <Trajectory+0x580>)
 8002fd4:	681b      	ldr	r3, [r3, #0]
 8002fd6:	4618      	mov	r0, r3
 8002fd8:	f7fd fa62 	bl	80004a0 <__aeabi_f2d>
 8002fdc:	4602      	mov	r2, r0
 8002fde:	460b      	mov	r3, r1
 8002fe0:	4620      	mov	r0, r4
 8002fe2:	4629      	mov	r1, r5
 8002fe4:	f7fd fab4 	bl	8000550 <__aeabi_dmul>
 8002fe8:	4602      	mov	r2, r0
 8002fea:	460b      	mov	r3, r1
 8002fec:	4614      	mov	r4, r2
 8002fee:	461d      	mov	r5, r3
 8002ff0:	4b87      	ldr	r3, [pc, #540]	; (8003210 <Trajectory+0x580>)
 8002ff2:	681b      	ldr	r3, [r3, #0]
 8002ff4:	4618      	mov	r0, r3
 8002ff6:	f7fd fa53 	bl	80004a0 <__aeabi_f2d>
 8002ffa:	4602      	mov	r2, r0
 8002ffc:	460b      	mov	r3, r1
 8002ffe:	4620      	mov	r0, r4
 8003000:	4629      	mov	r1, r5
 8003002:	f7fd faa5 	bl	8000550 <__aeabi_dmul>
 8003006:	4602      	mov	r2, r0
 8003008:	460b      	mov	r3, r1
 800300a:	4614      	mov	r4, r2
 800300c:	461d      	mov	r5, r3
 800300e:	4b81      	ldr	r3, [pc, #516]	; (8003214 <Trajectory+0x584>)
 8003010:	ed93 7a00 	vldr	s14, [r3]
 8003014:	4b7d      	ldr	r3, [pc, #500]	; (800320c <Trajectory+0x57c>)
 8003016:	edd3 6a00 	vldr	s13, [r3]
 800301a:	4b7d      	ldr	r3, [pc, #500]	; (8003210 <Trajectory+0x580>)
 800301c:	edd3 7a00 	vldr	s15, [r3]
 8003020:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8003024:	ee37 7a67 	vsub.f32	s14, s14, s15
 8003028:	4b7c      	ldr	r3, [pc, #496]	; (800321c <Trajectory+0x58c>)
 800302a:	edd3 7a00 	vldr	s15, [r3]
 800302e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003032:	ee17 0a90 	vmov	r0, s15
 8003036:	f7fd fa33 	bl	80004a0 <__aeabi_f2d>
 800303a:	4602      	mov	r2, r0
 800303c:	460b      	mov	r3, r1
 800303e:	4620      	mov	r0, r4
 8003040:	4629      	mov	r1, r5
 8003042:	f7fd f8cf 	bl	80001e4 <__adddf3>
 8003046:	4602      	mov	r2, r0
 8003048:	460b      	mov	r3, r1
 800304a:	4614      	mov	r4, r2
 800304c:	461d      	mov	r5, r3
 800304e:	4b6f      	ldr	r3, [pc, #444]	; (800320c <Trajectory+0x57c>)
 8003050:	ed93 7a00 	vldr	s14, [r3]
 8003054:	4b6e      	ldr	r3, [pc, #440]	; (8003210 <Trajectory+0x580>)
 8003056:	edd3 7a00 	vldr	s15, [r3]
 800305a:	ee77 7aa7 	vadd.f32	s15, s15, s15
 800305e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8003062:	4b6e      	ldr	r3, [pc, #440]	; (800321c <Trajectory+0x58c>)
 8003064:	edd3 7a00 	vldr	s15, [r3]
 8003068:	ee67 7a27 	vmul.f32	s15, s14, s15
 800306c:	ee17 0a90 	vmov	r0, s15
 8003070:	f7fd fa16 	bl	80004a0 <__aeabi_f2d>
 8003074:	4602      	mov	r2, r0
 8003076:	460b      	mov	r3, r1
 8003078:	4620      	mov	r0, r4
 800307a:	4629      	mov	r1, r5
 800307c:	f7fd f8b2 	bl	80001e4 <__adddf3>
 8003080:	4602      	mov	r2, r0
 8003082:	460b      	mov	r3, r1
 8003084:	4614      	mov	r4, r2
 8003086:	461d      	mov	r5, r3
 8003088:	68f8      	ldr	r0, [r7, #12]
 800308a:	f7fd fa09 	bl	80004a0 <__aeabi_f2d>
 800308e:	f04f 0200 	mov.w	r2, #0
 8003092:	4b61      	ldr	r3, [pc, #388]	; (8003218 <Trajectory+0x588>)
 8003094:	f7fd fa5c 	bl	8000550 <__aeabi_dmul>
 8003098:	4602      	mov	r2, r0
 800309a:	460b      	mov	r3, r1
 800309c:	4690      	mov	r8, r2
 800309e:	4699      	mov	r9, r3
 80030a0:	4b5c      	ldr	r3, [pc, #368]	; (8003214 <Trajectory+0x584>)
 80030a2:	ed93 7a00 	vldr	s14, [r3]
 80030a6:	4b59      	ldr	r3, [pc, #356]	; (800320c <Trajectory+0x57c>)
 80030a8:	edd3 6a00 	vldr	s13, [r3]
 80030ac:	4b58      	ldr	r3, [pc, #352]	; (8003210 <Trajectory+0x580>)
 80030ae:	edd3 7a00 	vldr	s15, [r3]
 80030b2:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80030b6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80030ba:	ee17 0a90 	vmov	r0, s15
 80030be:	f7fd f9ef 	bl	80004a0 <__aeabi_f2d>
 80030c2:	4602      	mov	r2, r0
 80030c4:	460b      	mov	r3, r1
 80030c6:	4640      	mov	r0, r8
 80030c8:	4649      	mov	r1, r9
 80030ca:	f7fd fa41 	bl	8000550 <__aeabi_dmul>
 80030ce:	4602      	mov	r2, r0
 80030d0:	460b      	mov	r3, r1
 80030d2:	4690      	mov	r8, r2
 80030d4:	4699      	mov	r9, r3
 80030d6:	4b4f      	ldr	r3, [pc, #316]	; (8003214 <Trajectory+0x584>)
 80030d8:	ed93 7a00 	vldr	s14, [r3]
 80030dc:	4b4b      	ldr	r3, [pc, #300]	; (800320c <Trajectory+0x57c>)
 80030de:	edd3 6a00 	vldr	s13, [r3]
 80030e2:	4b4b      	ldr	r3, [pc, #300]	; (8003210 <Trajectory+0x580>)
 80030e4:	edd3 7a00 	vldr	s15, [r3]
 80030e8:	ee76 7ae7 	vsub.f32	s15, s13, s15
 80030ec:	ee77 7a67 	vsub.f32	s15, s14, s15
 80030f0:	ee17 0a90 	vmov	r0, s15
 80030f4:	f7fd f9d4 	bl	80004a0 <__aeabi_f2d>
 80030f8:	4602      	mov	r2, r0
 80030fa:	460b      	mov	r3, r1
 80030fc:	4640      	mov	r0, r8
 80030fe:	4649      	mov	r1, r9
 8003100:	f7fd fa26 	bl	8000550 <__aeabi_dmul>
 8003104:	4602      	mov	r2, r0
 8003106:	460b      	mov	r3, r1
 8003108:	4620      	mov	r0, r4
 800310a:	4629      	mov	r1, r5
 800310c:	f7fd f868 	bl	80001e0 <__aeabi_dsub>
 8003110:	4602      	mov	r2, r0
 8003112:	460b      	mov	r3, r1
 8003114:	4610      	mov	r0, r2
 8003116:	4619      	mov	r1, r3
 8003118:	f7fd fcea 	bl	8000af0 <__aeabi_d2f>
 800311c:	4603      	mov	r3, r0
 800311e:	4a40      	ldr	r2, [pc, #256]	; (8003220 <Trajectory+0x590>)
 8003120:	6013      	str	r3, [r2, #0]
			tra_velo = vb_n - (ab*(tua-(tf-tb)));
 8003122:	4b3e      	ldr	r3, [pc, #248]	; (800321c <Trajectory+0x58c>)
 8003124:	ed93 7a00 	vldr	s14, [r3]
 8003128:	4b3a      	ldr	r3, [pc, #232]	; (8003214 <Trajectory+0x584>)
 800312a:	edd3 6a00 	vldr	s13, [r3]
 800312e:	4b37      	ldr	r3, [pc, #220]	; (800320c <Trajectory+0x57c>)
 8003130:	ed93 6a00 	vldr	s12, [r3]
 8003134:	4b36      	ldr	r3, [pc, #216]	; (8003210 <Trajectory+0x580>)
 8003136:	edd3 7a00 	vldr	s15, [r3]
 800313a:	ee76 7a67 	vsub.f32	s15, s12, s15
 800313e:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8003142:	edd7 7a03 	vldr	s15, [r7, #12]
 8003146:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800314a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800314e:	4b35      	ldr	r3, [pc, #212]	; (8003224 <Trajectory+0x594>)
 8003150:	edc3 7a00 	vstr	s15, [r3]
			tra_acc = -ab;
 8003154:	edd7 7a03 	vldr	s15, [r7, #12]
 8003158:	eef1 7a67 	vneg.f32	s15, s15
 800315c:	4b32      	ldr	r3, [pc, #200]	; (8003228 <Trajectory+0x598>)
 800315e:	edc3 7a00 	vstr	s15, [r3]
			start_tra = 0;
 8003162:	4b32      	ldr	r3, [pc, #200]	; (800322c <Trajectory+0x59c>)
 8003164:	2200      	movs	r2, #0
 8003166:	701a      	strb	r2, [r3, #0]
		}
		if(tua <= tf){
 8003168:	4b2a      	ldr	r3, [pc, #168]	; (8003214 <Trajectory+0x584>)
 800316a:	ed93 7a00 	vldr	s14, [r3]
 800316e:	4b27      	ldr	r3, [pc, #156]	; (800320c <Trajectory+0x57c>)
 8003170:	edd3 7a00 	vldr	s15, [r3]
 8003174:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8003178:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800317c:	d900      	bls.n	8003180 <Trajectory+0x4f0>
		tra_velo = 0;
		tra_acc = 0;
	}


}
 800317e:	e03f      	b.n	8003200 <Trajectory+0x570>
			if(direct == 0){
 8003180:	4b2b      	ldr	r3, [pc, #172]	; (8003230 <Trajectory+0x5a0>)
 8003182:	781b      	ldrb	r3, [r3, #0]
 8003184:	2b00      	cmp	r3, #0
 8003186:	d123      	bne.n	80031d0 <Trajectory+0x540>
				tra_pos = tra_pos*-1;
 8003188:	4b25      	ldr	r3, [pc, #148]	; (8003220 <Trajectory+0x590>)
 800318a:	edd3 7a00 	vldr	s15, [r3]
 800318e:	eef1 7a67 	vneg.f32	s15, s15
 8003192:	4b23      	ldr	r3, [pc, #140]	; (8003220 <Trajectory+0x590>)
 8003194:	edc3 7a00 	vstr	s15, [r3]
				tra_velo = tra_velo *-1;
 8003198:	4b22      	ldr	r3, [pc, #136]	; (8003224 <Trajectory+0x594>)
 800319a:	edd3 7a00 	vldr	s15, [r3]
 800319e:	eef1 7a67 	vneg.f32	s15, s15
 80031a2:	4b20      	ldr	r3, [pc, #128]	; (8003224 <Trajectory+0x594>)
 80031a4:	edc3 7a00 	vstr	s15, [r3]
				tra_acc = tra_acc *-1;
 80031a8:	4b1f      	ldr	r3, [pc, #124]	; (8003228 <Trajectory+0x598>)
 80031aa:	edd3 7a00 	vldr	s15, [r3]
 80031ae:	eef1 7a67 	vneg.f32	s15, s15
 80031b2:	4b1d      	ldr	r3, [pc, #116]	; (8003228 <Trajectory+0x598>)
 80031b4:	edc3 7a00 	vstr	s15, [r3]
				tra_pos += rad_before;
 80031b8:	4b19      	ldr	r3, [pc, #100]	; (8003220 <Trajectory+0x590>)
 80031ba:	ed93 7a00 	vldr	s14, [r3]
 80031be:	4b1d      	ldr	r3, [pc, #116]	; (8003234 <Trajectory+0x5a4>)
 80031c0:	edd3 7a00 	vldr	s15, [r3]
 80031c4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80031c8:	4b15      	ldr	r3, [pc, #84]	; (8003220 <Trajectory+0x590>)
 80031ca:	edc3 7a00 	vstr	s15, [r3]
}
 80031ce:	e017      	b.n	8003200 <Trajectory+0x570>
				tra_pos += rad_before;
 80031d0:	4b13      	ldr	r3, [pc, #76]	; (8003220 <Trajectory+0x590>)
 80031d2:	ed93 7a00 	vldr	s14, [r3]
 80031d6:	4b17      	ldr	r3, [pc, #92]	; (8003234 <Trajectory+0x5a4>)
 80031d8:	edd3 7a00 	vldr	s15, [r3]
 80031dc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80031e0:	4b0f      	ldr	r3, [pc, #60]	; (8003220 <Trajectory+0x590>)
 80031e2:	edc3 7a00 	vstr	s15, [r3]
}
 80031e6:	e00b      	b.n	8003200 <Trajectory+0x570>
		tra_pos = 0;
 80031e8:	4b0d      	ldr	r3, [pc, #52]	; (8003220 <Trajectory+0x590>)
 80031ea:	f04f 0200 	mov.w	r2, #0
 80031ee:	601a      	str	r2, [r3, #0]
		tra_velo = 0;
 80031f0:	4b0c      	ldr	r3, [pc, #48]	; (8003224 <Trajectory+0x594>)
 80031f2:	f04f 0200 	mov.w	r2, #0
 80031f6:	601a      	str	r2, [r3, #0]
		tra_acc = 0;
 80031f8:	4b0b      	ldr	r3, [pc, #44]	; (8003228 <Trajectory+0x598>)
 80031fa:	f04f 0200 	mov.w	r2, #0
 80031fe:	601a      	str	r2, [r3, #0]
}
 8003200:	bf00      	nop
 8003202:	3710      	adds	r7, #16
 8003204:	46bd      	mov	sp, r7
 8003206:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 800320a:	bf00      	nop
 800320c:	200005cc 	.word	0x200005cc
 8003210:	200005c4 	.word	0x200005c4
 8003214:	200005d0 	.word	0x200005d0
 8003218:	3fe00000 	.word	0x3fe00000
 800321c:	200005c8 	.word	0x200005c8
 8003220:	200005b8 	.word	0x200005b8
 8003224:	200005bc 	.word	0x200005bc
 8003228:	200005c0 	.word	0x200005c0
 800322c:	200005e6 	.word	0x200005e6
 8003230:	20000034 	.word	0x20000034
 8003234:	200005e0 	.word	0x200005e0

08003238 <Drivemotor>:
void Drivemotor(int PWM){
 8003238:	b590      	push	{r4, r7, lr}
 800323a:	b083      	sub	sp, #12
 800323c:	af00      	add	r7, sp, #0
 800323e:	6078      	str	r0, [r7, #4]
	if(PWM<=0 && PWM>=-10000){
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	2b00      	cmp	r3, #0
 8003244:	dc18      	bgt.n	8003278 <Drivemotor+0x40>
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	4a29      	ldr	r2, [pc, #164]	; (80032f0 <Drivemotor+0xb8>)
 800324a:	4293      	cmp	r3, r2
 800324c:	db14      	blt.n	8003278 <Drivemotor+0x40>
		PWM = 10000-aaabs(PWM);
 800324e:	6878      	ldr	r0, [r7, #4]
 8003250:	f000 faa8 	bl	80037a4 <aaabs>
 8003254:	4603      	mov	r3, r0
 8003256:	f5c3 531c 	rsb	r3, r3, #9984	; 0x2700
 800325a:	3310      	adds	r3, #16
 800325c:	607b      	str	r3, [r7, #4]
		htim2.Instance->CCR1=aaabs(PWM);
 800325e:	4b25      	ldr	r3, [pc, #148]	; (80032f4 <Drivemotor+0xbc>)
 8003260:	681c      	ldr	r4, [r3, #0]
 8003262:	6878      	ldr	r0, [r7, #4]
 8003264:	f000 fa9e 	bl	80037a4 <aaabs>
 8003268:	4603      	mov	r3, r0
 800326a:	6363      	str	r3, [r4, #52]	; 0x34
		htim2.Instance->CCR2=10000;
 800326c:	4b21      	ldr	r3, [pc, #132]	; (80032f4 <Drivemotor+0xbc>)
 800326e:	681b      	ldr	r3, [r3, #0]
 8003270:	f242 7210 	movw	r2, #10000	; 0x2710
 8003274:	639a      	str	r2, [r3, #56]	; 0x38
 8003276:	e036      	b.n	80032e6 <Drivemotor+0xae>
		}
	else if (PWM<-10000){
 8003278:	687b      	ldr	r3, [r7, #4]
 800327a:	4a1d      	ldr	r2, [pc, #116]	; (80032f0 <Drivemotor+0xb8>)
 800327c:	4293      	cmp	r3, r2
 800327e:	da09      	bge.n	8003294 <Drivemotor+0x5c>
		htim2.Instance->CCR1=0;
 8003280:	4b1c      	ldr	r3, [pc, #112]	; (80032f4 <Drivemotor+0xbc>)
 8003282:	681b      	ldr	r3, [r3, #0]
 8003284:	2200      	movs	r2, #0
 8003286:	635a      	str	r2, [r3, #52]	; 0x34
		htim2.Instance->CCR2=10000;
 8003288:	4b1a      	ldr	r3, [pc, #104]	; (80032f4 <Drivemotor+0xbc>)
 800328a:	681b      	ldr	r3, [r3, #0]
 800328c:	f242 7210 	movw	r2, #10000	; 0x2710
 8003290:	639a      	str	r2, [r3, #56]	; 0x38
		htim2.Instance->CCR2=aaabs(PWM);
	}else if(PWM>10000){
		htim2.Instance->CCR1=10000;
		htim2.Instance->CCR2=0;
	}
}
 8003292:	e028      	b.n	80032e6 <Drivemotor+0xae>
	}else if(PWM>0 && PWM<=10000){
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	2b00      	cmp	r3, #0
 8003298:	dd16      	ble.n	80032c8 <Drivemotor+0x90>
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	f242 7210 	movw	r2, #10000	; 0x2710
 80032a0:	4293      	cmp	r3, r2
 80032a2:	dc11      	bgt.n	80032c8 <Drivemotor+0x90>
		PWM = 10000-PWM;
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	f5c3 531c 	rsb	r3, r3, #9984	; 0x2700
 80032aa:	3310      	adds	r3, #16
 80032ac:	607b      	str	r3, [r7, #4]
		htim2.Instance->CCR1=10000;
 80032ae:	4b11      	ldr	r3, [pc, #68]	; (80032f4 <Drivemotor+0xbc>)
 80032b0:	681b      	ldr	r3, [r3, #0]
 80032b2:	f242 7210 	movw	r2, #10000	; 0x2710
 80032b6:	635a      	str	r2, [r3, #52]	; 0x34
		htim2.Instance->CCR2=aaabs(PWM);
 80032b8:	4b0e      	ldr	r3, [pc, #56]	; (80032f4 <Drivemotor+0xbc>)
 80032ba:	681c      	ldr	r4, [r3, #0]
 80032bc:	6878      	ldr	r0, [r7, #4]
 80032be:	f000 fa71 	bl	80037a4 <aaabs>
 80032c2:	4603      	mov	r3, r0
 80032c4:	63a3      	str	r3, [r4, #56]	; 0x38
 80032c6:	e00e      	b.n	80032e6 <Drivemotor+0xae>
	}else if(PWM>10000){
 80032c8:	687b      	ldr	r3, [r7, #4]
 80032ca:	f242 7210 	movw	r2, #10000	; 0x2710
 80032ce:	4293      	cmp	r3, r2
 80032d0:	dd09      	ble.n	80032e6 <Drivemotor+0xae>
		htim2.Instance->CCR1=10000;
 80032d2:	4b08      	ldr	r3, [pc, #32]	; (80032f4 <Drivemotor+0xbc>)
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	f242 7210 	movw	r2, #10000	; 0x2710
 80032da:	635a      	str	r2, [r3, #52]	; 0x34
		htim2.Instance->CCR2=0;
 80032dc:	4b05      	ldr	r3, [pc, #20]	; (80032f4 <Drivemotor+0xbc>)
 80032de:	681b      	ldr	r3, [r3, #0]
 80032e0:	2200      	movs	r2, #0
 80032e2:	639a      	str	r2, [r3, #56]	; 0x38
}
 80032e4:	e7ff      	b.n	80032e6 <Drivemotor+0xae>
 80032e6:	bf00      	nop
 80032e8:	370c      	adds	r7, #12
 80032ea:	46bd      	mov	sp, r7
 80032ec:	bd90      	pop	{r4, r7, pc}
 80032ee:	bf00      	nop
 80032f0:	ffffd8f0 	.word	0xffffd8f0
 80032f4:	20000338 	.word	0x20000338

080032f8 <NFcontacton>:

void NFcontacton(){
 80032f8:	b580      	push	{r7, lr}
 80032fa:	b082      	sub	sp, #8
 80032fc:	af02      	add	r7, sp, #8
	HAL_I2C_Master_Transmit(&hi2c1, NFW_ADDR, &NFREG_ON, 1, 10);
 80032fe:	230a      	movs	r3, #10
 8003300:	9300      	str	r3, [sp, #0]
 8003302:	2301      	movs	r3, #1
 8003304:	4a05      	ldr	r2, [pc, #20]	; (800331c <NFcontacton+0x24>)
 8003306:	2146      	movs	r1, #70	; 0x46
 8003308:	4805      	ldr	r0, [pc, #20]	; (8003320 <NFcontacton+0x28>)
 800330a:	f002 fc81 	bl	8005c10 <HAL_I2C_Master_Transmit>
	microsecDelay(60);
 800330e:	203c      	movs	r0, #60	; 0x3c
 8003310:	f000 fa2a 	bl	8003768 <microsecDelay>
	//NFwriteFlag = 0;
}
 8003314:	bf00      	nop
 8003316:	46bd      	mov	sp, r7
 8003318:	bd80      	pop	{r7, pc}
 800331a:	bf00      	nop
 800331c:	20000027 	.word	0x20000027
 8003320:	200001cc 	.word	0x200001cc

08003324 <NFgetstate>:

void NFgetstate(){
 8003324:	b580      	push	{r7, lr}
 8003326:	b082      	sub	sp, #8
 8003328:	af02      	add	r7, sp, #8
	if( (hi2c1.State == HAL_I2C_STATE_READY && (HAL_GetTick()-NFtimest>500))){
 800332a:	4b17      	ldr	r3, [pc, #92]	; (8003388 <NFgetstate+0x64>)
 800332c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003330:	b2db      	uxtb	r3, r3
 8003332:	2b20      	cmp	r3, #32
 8003334:	d124      	bne.n	8003380 <NFgetstate+0x5c>
 8003336:	f001 fc2b 	bl	8004b90 <HAL_GetTick>
 800333a:	4603      	mov	r3, r0
 800333c:	4a13      	ldr	r2, [pc, #76]	; (800338c <NFgetstate+0x68>)
 800333e:	8812      	ldrh	r2, [r2, #0]
 8003340:	1a9b      	subs	r3, r3, r2
 8003342:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8003346:	d91b      	bls.n	8003380 <NFgetstate+0x5c>
		NFtimest = HAL_GetTick();
 8003348:	f001 fc22 	bl	8004b90 <HAL_GetTick>
 800334c:	4603      	mov	r3, r0
 800334e:	b29a      	uxth	r2, r3
 8003350:	4b0e      	ldr	r3, [pc, #56]	; (800338c <NFgetstate+0x68>)
 8003352:	801a      	strh	r2, [r3, #0]
		HAL_I2C_Master_Transmit(&hi2c1, NFW_ADDR, &NFREG_INIT, 1, 10);
 8003354:	230a      	movs	r3, #10
 8003356:	9300      	str	r3, [sp, #0]
 8003358:	2301      	movs	r3, #1
 800335a:	4a0d      	ldr	r2, [pc, #52]	; (8003390 <NFgetstate+0x6c>)
 800335c:	2146      	movs	r1, #70	; 0x46
 800335e:	480a      	ldr	r0, [pc, #40]	; (8003388 <NFgetstate+0x64>)
 8003360:	f002 fc56 	bl	8005c10 <HAL_I2C_Master_Transmit>
		microsecDelay(100);
 8003364:	2064      	movs	r0, #100	; 0x64
 8003366:	f000 f9ff 	bl	8003768 <microsecDelay>
		HAL_I2C_Master_Receive(&hi2c1, NFR_ADDR, &NFstate, 1, 10);
 800336a:	230a      	movs	r3, #10
 800336c:	9300      	str	r3, [sp, #0]
 800336e:	2301      	movs	r3, #1
 8003370:	4a08      	ldr	r2, [pc, #32]	; (8003394 <NFgetstate+0x70>)
 8003372:	2147      	movs	r1, #71	; 0x47
 8003374:	4804      	ldr	r0, [pc, #16]	; (8003388 <NFgetstate+0x64>)
 8003376:	f002 fd49 	bl	8005e0c <HAL_I2C_Master_Receive>
		microsecDelay(100);
 800337a:	2064      	movs	r0, #100	; 0x64
 800337c:	f000 f9f4 	bl	8003768 <microsecDelay>
		//NFreadFlag = 0;
	}
}
 8003380:	bf00      	nop
 8003382:	46bd      	mov	sp, r7
 8003384:	bd80      	pop	{r7, pc}
 8003386:	bf00      	nop
 8003388:	200001cc 	.word	0x200001cc
 800338c:	20000570 	.word	0x20000570
 8003390:	20000028 	.word	0x20000028
 8003394:	2000056e 	.word	0x2000056e

08003398 <AMT222getpos>:

void AMT222getpos(uint16_t *data){
 8003398:	b580      	push	{r7, lr}
 800339a:	b082      	sub	sp, #8
 800339c:	af00      	add	r7, sp, #0
 800339e:	6078      	str	r0, [r7, #4]

	switch(AMTstate){
 80033a0:	4b4f      	ldr	r3, [pc, #316]	; (80034e0 <AMT222getpos+0x148>)
 80033a2:	781b      	ldrb	r3, [r3, #0]
 80033a4:	2b03      	cmp	r3, #3
 80033a6:	f200 8091 	bhi.w	80034cc <AMT222getpos+0x134>
 80033aa:	a201      	add	r2, pc, #4	; (adr r2, 80033b0 <AMT222getpos+0x18>)
 80033ac:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80033b0:	080033c1 	.word	0x080033c1
 80033b4:	080033ed 	.word	0x080033ed
 80033b8:	08003401 	.word	0x08003401
 80033bc:	08003415 	.word	0x08003415
	case 0:
		timeStamp = micros();
 80033c0:	f000 fa52 	bl	8003868 <micros>
 80033c4:	4602      	mov	r2, r0
 80033c6:	460b      	mov	r3, r1
 80033c8:	4b46      	ldr	r3, [pc, #280]	; (80034e4 <AMT222getpos+0x14c>)
 80033ca:	601a      	str	r2, [r3, #0]
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 80033cc:	2200      	movs	r2, #0
 80033ce:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80033d2:	4845      	ldr	r0, [pc, #276]	; (80034e8 <AMT222getpos+0x150>)
 80033d4:	f002 faa6 	bl	8005924 <HAL_GPIO_WritePin>
	    HAL_SPI_TransmitReceive_DMA(&hspi3, &AMTGETPOS[0], &AMTHbyte, 1);
 80033d8:	2301      	movs	r3, #1
 80033da:	4a44      	ldr	r2, [pc, #272]	; (80034ec <AMT222getpos+0x154>)
 80033dc:	4944      	ldr	r1, [pc, #272]	; (80034f0 <AMT222getpos+0x158>)
 80033de:	4845      	ldr	r0, [pc, #276]	; (80034f4 <AMT222getpos+0x15c>)
 80033e0:	f005 fc64 	bl	8008cac <HAL_SPI_TransmitReceive_DMA>
	    AMTcomplete = 0;
 80033e4:	4b44      	ldr	r3, [pc, #272]	; (80034f8 <AMT222getpos+0x160>)
 80033e6:	2200      	movs	r2, #0
 80033e8:	701a      	strb	r2, [r3, #0]
		break;
 80033ea:	e06f      	b.n	80034cc <AMT222getpos+0x134>
	case 1:
		//microsecDelay(5);
		AMTstate+=1;
 80033ec:	4b3c      	ldr	r3, [pc, #240]	; (80034e0 <AMT222getpos+0x148>)
 80033ee:	781b      	ldrb	r3, [r3, #0]
 80033f0:	3301      	adds	r3, #1
 80033f2:	b2da      	uxtb	r2, r3
 80033f4:	4b3a      	ldr	r3, [pc, #232]	; (80034e0 <AMT222getpos+0x148>)
 80033f6:	701a      	strb	r2, [r3, #0]
		AMTcomplete = 1;
 80033f8:	4b3f      	ldr	r3, [pc, #252]	; (80034f8 <AMT222getpos+0x160>)
 80033fa:	2201      	movs	r2, #1
 80033fc:	701a      	strb	r2, [r3, #0]
		break;
 80033fe:	e065      	b.n	80034cc <AMT222getpos+0x134>
	case 2:
		HAL_SPI_TransmitReceive_DMA(&hspi3, &AMTGETPOS[1], &AMTLbyte, 1);
 8003400:	2301      	movs	r3, #1
 8003402:	4a3e      	ldr	r2, [pc, #248]	; (80034fc <AMT222getpos+0x164>)
 8003404:	493e      	ldr	r1, [pc, #248]	; (8003500 <AMT222getpos+0x168>)
 8003406:	483b      	ldr	r0, [pc, #236]	; (80034f4 <AMT222getpos+0x15c>)
 8003408:	f005 fc50 	bl	8008cac <HAL_SPI_TransmitReceive_DMA>
		AMTcomplete = 0;
 800340c:	4b3a      	ldr	r3, [pc, #232]	; (80034f8 <AMT222getpos+0x160>)
 800340e:	2200      	movs	r2, #0
 8003410:	701a      	strb	r2, [r3, #0]
		break;
 8003412:	e05b      	b.n	80034cc <AMT222getpos+0x134>
	case 3:
		AMTlogic_checkbit = AMT222checkbit( AMTHbyte, AMTLbyte);
 8003414:	4b35      	ldr	r3, [pc, #212]	; (80034ec <AMT222getpos+0x154>)
 8003416:	781b      	ldrb	r3, [r3, #0]
 8003418:	461a      	mov	r2, r3
 800341a:	4b38      	ldr	r3, [pc, #224]	; (80034fc <AMT222getpos+0x164>)
 800341c:	781b      	ldrb	r3, [r3, #0]
 800341e:	4619      	mov	r1, r3
 8003420:	4610      	mov	r0, r2
 8003422:	f000 f8b3 	bl	800358c <AMT222checkbit>
 8003426:	4603      	mov	r3, r0
 8003428:	461a      	mov	r2, r3
 800342a:	4b36      	ldr	r3, [pc, #216]	; (8003504 <AMT222getpos+0x16c>)
 800342c:	701a      	strb	r2, [r3, #0]
	    if( AMTlogic_checkbit){
 800342e:	4b35      	ldr	r3, [pc, #212]	; (8003504 <AMT222getpos+0x16c>)
 8003430:	781b      	ldrb	r3, [r3, #0]
 8003432:	2b00      	cmp	r3, #0
 8003434:	d043      	beq.n	80034be <AMT222getpos+0x126>
		    // Shift high bit to correct position and sum them.
		    rawPos = AMTLbyte + ((AMTHbyte & 0b00111111)<<8);
 8003436:	4b31      	ldr	r3, [pc, #196]	; (80034fc <AMT222getpos+0x164>)
 8003438:	781b      	ldrb	r3, [r3, #0]
 800343a:	b29a      	uxth	r2, r3
 800343c:	4b2b      	ldr	r3, [pc, #172]	; (80034ec <AMT222getpos+0x154>)
 800343e:	781b      	ldrb	r3, [r3, #0]
 8003440:	021b      	lsls	r3, r3, #8
 8003442:	b29b      	uxth	r3, r3
 8003444:	f403 537c 	and.w	r3, r3, #16128	; 0x3f00
 8003448:	b29b      	uxth	r3, r3
 800344a:	4413      	add	r3, r2
 800344c:	b29a      	uxth	r2, r3
 800344e:	4b2e      	ldr	r3, [pc, #184]	; (8003508 <AMT222getpos+0x170>)
 8003450:	801a      	strh	r2, [r3, #0]
		     // Convert uint16 to angle variable.
		    current_rad = (((rawPos)*2*PI)/(16384));
 8003452:	4b2d      	ldr	r3, [pc, #180]	; (8003508 <AMT222getpos+0x170>)
 8003454:	881b      	ldrh	r3, [r3, #0]
 8003456:	005b      	lsls	r3, r3, #1
 8003458:	ee07 3a90 	vmov	s15, r3
 800345c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003460:	ed9f 7a2a 	vldr	s14, [pc, #168]	; 800350c <AMT222getpos+0x174>
 8003464:	ee27 7a87 	vmul.f32	s14, s15, s14
 8003468:	eddf 6a29 	vldr	s13, [pc, #164]	; 8003510 <AMT222getpos+0x178>
 800346c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8003470:	4b28      	ldr	r3, [pc, #160]	; (8003514 <AMT222getpos+0x17c>)
 8003472:	edc3 7a00 	vstr	s15, [r3]
		    if(setzero == 0){
 8003476:	4b28      	ldr	r3, [pc, #160]	; (8003518 <AMT222getpos+0x180>)
 8003478:	781b      	ldrb	r3, [r3, #0]
 800347a:	2b00      	cmp	r3, #0
 800347c:	d11f      	bne.n	80034be <AMT222getpos+0x126>
		    current_rad = offset - current_rad;
 800347e:	4b27      	ldr	r3, [pc, #156]	; (800351c <AMT222getpos+0x184>)
 8003480:	ed93 7a00 	vldr	s14, [r3]
 8003484:	4b23      	ldr	r3, [pc, #140]	; (8003514 <AMT222getpos+0x17c>)
 8003486:	edd3 7a00 	vldr	s15, [r3]
 800348a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800348e:	4b21      	ldr	r3, [pc, #132]	; (8003514 <AMT222getpos+0x17c>)
 8003490:	edc3 7a00 	vstr	s15, [r3]
		    unwrapping();
 8003494:	f000 f8fc 	bl	8003690 <unwrapping>
		    deg = current_rad_wrap*57.2957795;
 8003498:	4b21      	ldr	r3, [pc, #132]	; (8003520 <AMT222getpos+0x188>)
 800349a:	681b      	ldr	r3, [r3, #0]
 800349c:	4618      	mov	r0, r3
 800349e:	f7fc ffff 	bl	80004a0 <__aeabi_f2d>
 80034a2:	a30d      	add	r3, pc, #52	; (adr r3, 80034d8 <AMT222getpos+0x140>)
 80034a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80034a8:	f7fd f852 	bl	8000550 <__aeabi_dmul>
 80034ac:	4602      	mov	r2, r0
 80034ae:	460b      	mov	r3, r1
 80034b0:	4610      	mov	r0, r2
 80034b2:	4619      	mov	r1, r3
 80034b4:	f7fd fb1c 	bl	8000af0 <__aeabi_d2f>
 80034b8:	4603      	mov	r3, r0
 80034ba:	4a1a      	ldr	r2, [pc, #104]	; (8003524 <AMT222getpos+0x18c>)
 80034bc:	6013      	str	r3, [r2, #0]
		    }
			  /*if(current_rad <= 0){
				  current_rad = 6.28-(current_rad*-1);
			  }*/
	    }
		AMTstate = 0;
 80034be:	4b08      	ldr	r3, [pc, #32]	; (80034e0 <AMT222getpos+0x148>)
 80034c0:	2200      	movs	r2, #0
 80034c2:	701a      	strb	r2, [r3, #0]
		AMTcomplete = 0;
 80034c4:	4b0c      	ldr	r3, [pc, #48]	; (80034f8 <AMT222getpos+0x160>)
 80034c6:	2200      	movs	r2, #0
 80034c8:	701a      	strb	r2, [r3, #0]
		break;
 80034ca:	bf00      	nop
	}
}
 80034cc:	bf00      	nop
 80034ce:	3708      	adds	r7, #8
 80034d0:	46bd      	mov	sp, r7
 80034d2:	bd80      	pop	{r7, pc}
 80034d4:	f3af 8000 	nop.w
 80034d8:	1a47a9e3 	.word	0x1a47a9e3
 80034dc:	404ca5dc 	.word	0x404ca5dc
 80034e0:	20000588 	.word	0x20000588
 80034e4:	20000568 	.word	0x20000568
 80034e8:	40020400 	.word	0x40020400
 80034ec:	20000576 	.word	0x20000576
 80034f0:	20000574 	.word	0x20000574
 80034f4:	20000220 	.word	0x20000220
 80034f8:	2000002b 	.word	0x2000002b
 80034fc:	20000577 	.word	0x20000577
 8003500:	20000575 	.word	0x20000575
 8003504:	20000578 	.word	0x20000578
 8003508:	2000057a 	.word	0x2000057a
 800350c:	40490fdb 	.word	0x40490fdb
 8003510:	46800000 	.word	0x46800000
 8003514:	2000057c 	.word	0x2000057c
 8003518:	20000014 	.word	0x20000014
 800351c:	20000018 	.word	0x20000018
 8003520:	20000580 	.word	0x20000580
 8003524:	20000584 	.word	0x20000584

08003528 <HAL_SPI_TxRxCpltCallback>:
void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi){
 8003528:	b580      	push	{r7, lr}
 800352a:	b082      	sub	sp, #8
 800352c:	af00      	add	r7, sp, #0
 800352e:	6078      	str	r0, [r7, #4]
	if(hspi == &hspi3){
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	4a12      	ldr	r2, [pc, #72]	; (800357c <HAL_SPI_TxRxCpltCallback+0x54>)
 8003534:	4293      	cmp	r3, r2
 8003536:	d11d      	bne.n	8003574 <HAL_SPI_TxRxCpltCallback+0x4c>
		AMTstate+=1;
 8003538:	4b11      	ldr	r3, [pc, #68]	; (8003580 <HAL_SPI_TxRxCpltCallback+0x58>)
 800353a:	781b      	ldrb	r3, [r3, #0]
 800353c:	3301      	adds	r3, #1
 800353e:	b2da      	uxtb	r2, r3
 8003540:	4b0f      	ldr	r3, [pc, #60]	; (8003580 <HAL_SPI_TxRxCpltCallback+0x58>)
 8003542:	701a      	strb	r2, [r3, #0]
		AMTcomplete = 1;
 8003544:	4b0f      	ldr	r3, [pc, #60]	; (8003584 <HAL_SPI_TxRxCpltCallback+0x5c>)
 8003546:	2201      	movs	r2, #1
 8003548:	701a      	strb	r2, [r3, #0]
		if(AMTstate == 1){
 800354a:	4b0d      	ldr	r3, [pc, #52]	; (8003580 <HAL_SPI_TxRxCpltCallback+0x58>)
 800354c:	781b      	ldrb	r3, [r3, #0]
 800354e:	2b01      	cmp	r3, #1
 8003550:	d103      	bne.n	800355a <HAL_SPI_TxRxCpltCallback+0x32>
			HAL_SPI_DMAStop(&hspi3);
 8003552:	480a      	ldr	r0, [pc, #40]	; (800357c <HAL_SPI_TxRxCpltCallback+0x54>)
 8003554:	f005 fcac 	bl	8008eb0 <HAL_SPI_DMAStop>
			//microsecDelay(5);
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
			HAL_SPI_DMAStop(&hspi3);
		}
	}
}
 8003558:	e00c      	b.n	8003574 <HAL_SPI_TxRxCpltCallback+0x4c>
		else if(AMTstate == 3){
 800355a:	4b09      	ldr	r3, [pc, #36]	; (8003580 <HAL_SPI_TxRxCpltCallback+0x58>)
 800355c:	781b      	ldrb	r3, [r3, #0]
 800355e:	2b03      	cmp	r3, #3
 8003560:	d108      	bne.n	8003574 <HAL_SPI_TxRxCpltCallback+0x4c>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 8003562:	2201      	movs	r2, #1
 8003564:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003568:	4807      	ldr	r0, [pc, #28]	; (8003588 <HAL_SPI_TxRxCpltCallback+0x60>)
 800356a:	f002 f9db 	bl	8005924 <HAL_GPIO_WritePin>
			HAL_SPI_DMAStop(&hspi3);
 800356e:	4803      	ldr	r0, [pc, #12]	; (800357c <HAL_SPI_TxRxCpltCallback+0x54>)
 8003570:	f005 fc9e 	bl	8008eb0 <HAL_SPI_DMAStop>
}
 8003574:	bf00      	nop
 8003576:	3708      	adds	r7, #8
 8003578:	46bd      	mov	sp, r7
 800357a:	bd80      	pop	{r7, pc}
 800357c:	20000220 	.word	0x20000220
 8003580:	20000588 	.word	0x20000588
 8003584:	2000002b 	.word	0x2000002b
 8003588:	40020400 	.word	0x40020400

0800358c <AMT222checkbit>:

uint8_t AMT222checkbit( uint8_t *H, uint8_t *L){
 800358c:	b480      	push	{r7}
 800358e:	b085      	sub	sp, #20
 8003590:	af00      	add	r7, sp, #0
 8003592:	6078      	str	r0, [r7, #4]
 8003594:	6039      	str	r1, [r7, #0]

	uint8_t K1 = 0;
 8003596:	2300      	movs	r3, #0
 8003598:	73fb      	strb	r3, [r7, #15]
	uint8_t K0 = 0;
 800359a:	2300      	movs	r3, #0
 800359c:	73bb      	strb	r3, [r7, #14]

	K1 = !( ((*H>>5) & 0x01) ^ ((*H>>3) & 0x01) ^ ((*H>>1) & 0x01) ^
 800359e:	687b      	ldr	r3, [r7, #4]
 80035a0:	781b      	ldrb	r3, [r3, #0]
 80035a2:	095b      	lsrs	r3, r3, #5
 80035a4:	b2da      	uxtb	r2, r3
 80035a6:	687b      	ldr	r3, [r7, #4]
 80035a8:	781b      	ldrb	r3, [r3, #0]
 80035aa:	08db      	lsrs	r3, r3, #3
 80035ac:	b2db      	uxtb	r3, r3
 80035ae:	4053      	eors	r3, r2
 80035b0:	b2da      	uxtb	r2, r3
 80035b2:	687b      	ldr	r3, [r7, #4]
 80035b4:	781b      	ldrb	r3, [r3, #0]
 80035b6:	085b      	lsrs	r3, r3, #1
 80035b8:	b2db      	uxtb	r3, r3
 80035ba:	4053      	eors	r3, r2
 80035bc:	b2da      	uxtb	r2, r3
			((*L>>7) & 0x01) ^ ((*L>>5) & 0x01) ^ ((*L>>7) & 0x03) ^
 80035be:	683b      	ldr	r3, [r7, #0]
 80035c0:	781b      	ldrb	r3, [r3, #0]
	K1 = !( ((*H>>5) & 0x01) ^ ((*H>>3) & 0x01) ^ ((*H>>1) & 0x01) ^
 80035c2:	09db      	lsrs	r3, r3, #7
 80035c4:	b2db      	uxtb	r3, r3
 80035c6:	4053      	eors	r3, r2
 80035c8:	b2da      	uxtb	r2, r3
			((*L>>7) & 0x01) ^ ((*L>>5) & 0x01) ^ ((*L>>7) & 0x03) ^
 80035ca:	683b      	ldr	r3, [r7, #0]
 80035cc:	781b      	ldrb	r3, [r3, #0]
 80035ce:	095b      	lsrs	r3, r3, #5
 80035d0:	b2db      	uxtb	r3, r3
 80035d2:	4053      	eors	r3, r2
 80035d4:	b2db      	uxtb	r3, r3
 80035d6:	f003 0201 	and.w	r2, r3, #1
 80035da:	683b      	ldr	r3, [r7, #0]
 80035dc:	781b      	ldrb	r3, [r3, #0]
 80035de:	09db      	lsrs	r3, r3, #7
 80035e0:	b2db      	uxtb	r3, r3
 80035e2:	f003 0303 	and.w	r3, r3, #3
 80035e6:	405a      	eors	r2, r3
			((*L>>1) & 0x01) );
 80035e8:	683b      	ldr	r3, [r7, #0]
 80035ea:	781b      	ldrb	r3, [r3, #0]
 80035ec:	085b      	lsrs	r3, r3, #1
 80035ee:	b2db      	uxtb	r3, r3
 80035f0:	f003 0301 	and.w	r3, r3, #1
	K1 = !( ((*H>>5) & 0x01) ^ ((*H>>3) & 0x01) ^ ((*H>>1) & 0x01) ^
 80035f4:	429a      	cmp	r2, r3
 80035f6:	bf0c      	ite	eq
 80035f8:	2301      	moveq	r3, #1
 80035fa:	2300      	movne	r3, #0
 80035fc:	b2db      	uxtb	r3, r3
 80035fe:	73fb      	strb	r3, [r7, #15]

	K0 = !( ((*H>>4) & 0x01) ^ ((*H>>2) & 0x01) ^ ((*H>>0) & 0x01) ^
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	781b      	ldrb	r3, [r3, #0]
 8003604:	091b      	lsrs	r3, r3, #4
 8003606:	b2da      	uxtb	r2, r3
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	781b      	ldrb	r3, [r3, #0]
 800360c:	089b      	lsrs	r3, r3, #2
 800360e:	b2db      	uxtb	r3, r3
 8003610:	4053      	eors	r3, r2
 8003612:	b2da      	uxtb	r2, r3
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	781b      	ldrb	r3, [r3, #0]
 8003618:	4053      	eors	r3, r2
 800361a:	b2da      	uxtb	r2, r3
			((*L>>6) & 0x01) ^ ((*L>>4) & 0x01) ^ ((*L>>2) & 0x03) ^
 800361c:	683b      	ldr	r3, [r7, #0]
 800361e:	781b      	ldrb	r3, [r3, #0]
	K0 = !( ((*H>>4) & 0x01) ^ ((*H>>2) & 0x01) ^ ((*H>>0) & 0x01) ^
 8003620:	099b      	lsrs	r3, r3, #6
 8003622:	b2db      	uxtb	r3, r3
 8003624:	4053      	eors	r3, r2
 8003626:	b2da      	uxtb	r2, r3
			((*L>>6) & 0x01) ^ ((*L>>4) & 0x01) ^ ((*L>>2) & 0x03) ^
 8003628:	683b      	ldr	r3, [r7, #0]
 800362a:	781b      	ldrb	r3, [r3, #0]
 800362c:	091b      	lsrs	r3, r3, #4
 800362e:	b2db      	uxtb	r3, r3
 8003630:	4053      	eors	r3, r2
 8003632:	b2db      	uxtb	r3, r3
 8003634:	f003 0201 	and.w	r2, r3, #1
 8003638:	683b      	ldr	r3, [r7, #0]
 800363a:	781b      	ldrb	r3, [r3, #0]
 800363c:	089b      	lsrs	r3, r3, #2
 800363e:	b2db      	uxtb	r3, r3
 8003640:	f003 0303 	and.w	r3, r3, #3
 8003644:	405a      	eors	r2, r3
			((*L>>0) & 0x01) );
 8003646:	683b      	ldr	r3, [r7, #0]
 8003648:	781b      	ldrb	r3, [r3, #0]
 800364a:	f003 0301 	and.w	r3, r3, #1
	K0 = !( ((*H>>4) & 0x01) ^ ((*H>>2) & 0x01) ^ ((*H>>0) & 0x01) ^
 800364e:	429a      	cmp	r2, r3
 8003650:	bf0c      	ite	eq
 8003652:	2301      	moveq	r3, #1
 8003654:	2300      	movne	r3, #0
 8003656:	b2db      	uxtb	r3, r3
 8003658:	73bb      	strb	r3, [r7, #14]

	if( (K1 == ((*H>>7) & 0x01)) && (K0 == ((*H>>6) & 0x01)) ){
 800365a:	7bfa      	ldrb	r2, [r7, #15]
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	781b      	ldrb	r3, [r3, #0]
 8003660:	09db      	lsrs	r3, r3, #7
 8003662:	b2db      	uxtb	r3, r3
 8003664:	f003 0301 	and.w	r3, r3, #1
 8003668:	429a      	cmp	r2, r3
 800366a:	d10a      	bne.n	8003682 <AMT222checkbit+0xf6>
 800366c:	7bba      	ldrb	r2, [r7, #14]
 800366e:	687b      	ldr	r3, [r7, #4]
 8003670:	781b      	ldrb	r3, [r3, #0]
 8003672:	099b      	lsrs	r3, r3, #6
 8003674:	b2db      	uxtb	r3, r3
 8003676:	f003 0301 	and.w	r3, r3, #1
 800367a:	429a      	cmp	r2, r3
 800367c:	d101      	bne.n	8003682 <AMT222checkbit+0xf6>
		return 1;
 800367e:	2301      	movs	r3, #1
 8003680:	e000      	b.n	8003684 <AMT222checkbit+0xf8>
	}
	else{
		return 0;
 8003682:	2300      	movs	r3, #0
	}
}
 8003684:	4618      	mov	r0, r3
 8003686:	3714      	adds	r7, #20
 8003688:	46bd      	mov	sp, r7
 800368a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800368e:	4770      	bx	lr

08003690 <unwrapping>:
void unwrapping(){
 8003690:	b480      	push	{r7}
 8003692:	af00      	add	r7, sp, #0
	  p_n = current_rad;
 8003694:	4b2c      	ldr	r3, [pc, #176]	; (8003748 <unwrapping+0xb8>)
 8003696:	681b      	ldr	r3, [r3, #0]
 8003698:	4a2c      	ldr	r2, [pc, #176]	; (800374c <unwrapping+0xbc>)
 800369a:	6013      	str	r3, [r2, #0]
		if (p_n - p_n_1 <= -1*e)
 800369c:	4b2b      	ldr	r3, [pc, #172]	; (800374c <unwrapping+0xbc>)
 800369e:	ed93 7a00 	vldr	s14, [r3]
 80036a2:	4b2b      	ldr	r3, [pc, #172]	; (8003750 <unwrapping+0xc0>)
 80036a4:	edd3 7a00 	vldr	s15, [r3]
 80036a8:	ee37 7a67 	vsub.f32	s14, s14, s15
 80036ac:	4b29      	ldr	r3, [pc, #164]	; (8003754 <unwrapping+0xc4>)
 80036ae:	edd3 7a00 	vldr	s15, [r3]
 80036b2:	eef1 7a67 	vneg.f32	s15, s15
 80036b6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80036ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036be:	d80b      	bhi.n	80036d8 <unwrapping+0x48>
		{
			p_0 = p_0_1 + p_max;
 80036c0:	4b25      	ldr	r3, [pc, #148]	; (8003758 <unwrapping+0xc8>)
 80036c2:	ed93 7a00 	vldr	s14, [r3]
 80036c6:	4b25      	ldr	r3, [pc, #148]	; (800375c <unwrapping+0xcc>)
 80036c8:	edd3 7a00 	vldr	s15, [r3]
 80036cc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80036d0:	4b23      	ldr	r3, [pc, #140]	; (8003760 <unwrapping+0xd0>)
 80036d2:	edc3 7a00 	vstr	s15, [r3]
 80036d6:	e01f      	b.n	8003718 <unwrapping+0x88>
		}
		else if(p_n - p_n_1 >= e)
 80036d8:	4b1c      	ldr	r3, [pc, #112]	; (800374c <unwrapping+0xbc>)
 80036da:	ed93 7a00 	vldr	s14, [r3]
 80036de:	4b1c      	ldr	r3, [pc, #112]	; (8003750 <unwrapping+0xc0>)
 80036e0:	edd3 7a00 	vldr	s15, [r3]
 80036e4:	ee37 7a67 	vsub.f32	s14, s14, s15
 80036e8:	4b1a      	ldr	r3, [pc, #104]	; (8003754 <unwrapping+0xc4>)
 80036ea:	edd3 7a00 	vldr	s15, [r3]
 80036ee:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80036f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036f6:	db0b      	blt.n	8003710 <unwrapping+0x80>
		{
			p_0 = p_0_1 - p_max;
 80036f8:	4b17      	ldr	r3, [pc, #92]	; (8003758 <unwrapping+0xc8>)
 80036fa:	ed93 7a00 	vldr	s14, [r3]
 80036fe:	4b17      	ldr	r3, [pc, #92]	; (800375c <unwrapping+0xcc>)
 8003700:	edd3 7a00 	vldr	s15, [r3]
 8003704:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003708:	4b15      	ldr	r3, [pc, #84]	; (8003760 <unwrapping+0xd0>)
 800370a:	edc3 7a00 	vstr	s15, [r3]
 800370e:	e003      	b.n	8003718 <unwrapping+0x88>
		}
		else
		{
			p_0 = p_0_1;
 8003710:	4b11      	ldr	r3, [pc, #68]	; (8003758 <unwrapping+0xc8>)
 8003712:	681b      	ldr	r3, [r3, #0]
 8003714:	4a12      	ldr	r2, [pc, #72]	; (8003760 <unwrapping+0xd0>)
 8003716:	6013      	str	r3, [r2, #0]
		}
		//DegAbs[0][0] = (p_n + p_0); //สั�?�?าณที่ผ่าน�?าร unwrap �?ล้ว
		current_rad_wrap = (p_n + p_0);
 8003718:	4b0c      	ldr	r3, [pc, #48]	; (800374c <unwrapping+0xbc>)
 800371a:	ed93 7a00 	vldr	s14, [r3]
 800371e:	4b10      	ldr	r3, [pc, #64]	; (8003760 <unwrapping+0xd0>)
 8003720:	edd3 7a00 	vldr	s15, [r3]
 8003724:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003728:	4b0e      	ldr	r3, [pc, #56]	; (8003764 <unwrapping+0xd4>)
 800372a:	edc3 7a00 	vstr	s15, [r3]
		//Memory ให้�?ับตัว�?ปร p[n-1] �?ละ p0[n-1]
		p_n_1 = p_n;
 800372e:	4b07      	ldr	r3, [pc, #28]	; (800374c <unwrapping+0xbc>)
 8003730:	681b      	ldr	r3, [r3, #0]
 8003732:	4a07      	ldr	r2, [pc, #28]	; (8003750 <unwrapping+0xc0>)
 8003734:	6013      	str	r3, [r2, #0]
		p_0_1 = p_0;
 8003736:	4b0a      	ldr	r3, [pc, #40]	; (8003760 <unwrapping+0xd0>)
 8003738:	681b      	ldr	r3, [r3, #0]
 800373a:	4a07      	ldr	r2, [pc, #28]	; (8003758 <unwrapping+0xc8>)
 800373c:	6013      	str	r3, [r2, #0]
}
 800373e:	bf00      	nop
 8003740:	46bd      	mov	sp, r7
 8003742:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003746:	4770      	bx	lr
 8003748:	2000057c 	.word	0x2000057c
 800374c:	2000058c 	.word	0x2000058c
 8003750:	20000590 	.word	0x20000590
 8003754:	20000030 	.word	0x20000030
 8003758:	20000598 	.word	0x20000598
 800375c:	2000002c 	.word	0x2000002c
 8003760:	20000594 	.word	0x20000594
 8003764:	20000580 	.word	0x20000580

08003768 <microsecDelay>:
void microsecDelay(uint8_t delayTime){
 8003768:	b580      	push	{r7, lr}
 800376a:	b084      	sub	sp, #16
 800376c:	af00      	add	r7, sp, #0
 800376e:	4603      	mov	r3, r0
 8003770:	71fb      	strb	r3, [r7, #7]
	uint32_t startTime = micros(); 	//reference point to count passed time
 8003772:	f000 f879 	bl	8003868 <micros>
 8003776:	4602      	mov	r2, r0
 8003778:	460b      	mov	r3, r1
 800377a:	4613      	mov	r3, r2
 800377c:	60bb      	str	r3, [r7, #8]
	uint32_t passedTime  = 0;
 800377e:	2300      	movs	r3, #0
 8003780:	60fb      	str	r3, [r7, #12]
	while (passedTime<delayTime){
 8003782:	e006      	b.n	8003792 <microsecDelay+0x2a>
		passedTime = micros() - startTime;
 8003784:	f000 f870 	bl	8003868 <micros>
 8003788:	4602      	mov	r2, r0
 800378a:	460b      	mov	r3, r1
 800378c:	68bb      	ldr	r3, [r7, #8]
 800378e:	1ad3      	subs	r3, r2, r3
 8003790:	60fb      	str	r3, [r7, #12]
	while (passedTime<delayTime){
 8003792:	79fb      	ldrb	r3, [r7, #7]
 8003794:	68fa      	ldr	r2, [r7, #12]
 8003796:	429a      	cmp	r2, r3
 8003798:	d3f4      	bcc.n	8003784 <microsecDelay+0x1c>
	}
}
 800379a:	bf00      	nop
 800379c:	bf00      	nop
 800379e:	3710      	adds	r7, #16
 80037a0:	46bd      	mov	sp, r7
 80037a2:	bd80      	pop	{r7, pc}

080037a4 <aaabs>:


uint32_t aaabs(int x){
 80037a4:	b480      	push	{r7}
 80037a6:	b083      	sub	sp, #12
 80037a8:	af00      	add	r7, sp, #0
 80037aa:	6078      	str	r0, [r7, #4]

	if(x<0){
 80037ac:	687b      	ldr	r3, [r7, #4]
 80037ae:	2b00      	cmp	r3, #0
 80037b0:	da02      	bge.n	80037b8 <aaabs+0x14>
		return x*-1;
 80037b2:	687b      	ldr	r3, [r7, #4]
 80037b4:	425b      	negs	r3, r3
 80037b6:	e000      	b.n	80037ba <aaabs+0x16>
	}else{
		return x;
 80037b8:	687b      	ldr	r3, [r7, #4]
	}
}
 80037ba:	4618      	mov	r0, r3
 80037bc:	370c      	adds	r7, #12
 80037be:	46bd      	mov	sp, r7
 80037c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037c4:	4770      	bx	lr
	...

080037c8 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 80037c8:	b580      	push	{r7, lr}
 80037ca:	b082      	sub	sp, #8
 80037cc:	af00      	add	r7, sp, #0
 80037ce:	4603      	mov	r3, r0
 80037d0:	80fb      	strh	r3, [r7, #6]
	if(GPIO_Pin == GPIO_PIN_13){
 80037d2:	88fb      	ldrh	r3, [r7, #6]
 80037d4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80037d8:	d102      	bne.n	80037e0 <HAL_GPIO_EXTI_Callback+0x18>
		blue = 1; // 0% duty cycle
 80037da:	4b11      	ldr	r3, [pc, #68]	; (8003820 <HAL_GPIO_EXTI_Callback+0x58>)
 80037dc:	2201      	movs	r2, #1
 80037de:	701a      	strb	r2, [r3, #0]
	}

	if(GPIO_Pin == GPIO_PIN_8){
 80037e0:	88fb      	ldrh	r3, [r7, #6]
 80037e2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80037e6:	d117      	bne.n	8003818 <HAL_GPIO_EXTI_Callback+0x50>
		static GPIO_PinState B1State[2] = {0};
		B1State[0]= HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_8);
 80037e8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80037ec:	480d      	ldr	r0, [pc, #52]	; (8003824 <HAL_GPIO_EXTI_Callback+0x5c>)
 80037ee:	f002 f881 	bl	80058f4 <HAL_GPIO_ReadPin>
 80037f2:	4603      	mov	r3, r0
 80037f4:	461a      	mov	r2, r3
 80037f6:	4b0c      	ldr	r3, [pc, #48]	; (8003828 <HAL_GPIO_EXTI_Callback+0x60>)
 80037f8:	701a      	strb	r2, [r3, #0]
		if(B1State[1] == GPIO_PIN_RESET && B1State[0] == GPIO_PIN_SET){
 80037fa:	4b0b      	ldr	r3, [pc, #44]	; (8003828 <HAL_GPIO_EXTI_Callback+0x60>)
 80037fc:	785b      	ldrb	r3, [r3, #1]
 80037fe:	2b00      	cmp	r3, #0
 8003800:	d106      	bne.n	8003810 <HAL_GPIO_EXTI_Callback+0x48>
 8003802:	4b09      	ldr	r3, [pc, #36]	; (8003828 <HAL_GPIO_EXTI_Callback+0x60>)
 8003804:	781b      	ldrb	r3, [r3, #0]
 8003806:	2b01      	cmp	r3, #1
 8003808:	d102      	bne.n	8003810 <HAL_GPIO_EXTI_Callback+0x48>
			stop = 1;
 800380a:	4b08      	ldr	r3, [pc, #32]	; (800382c <HAL_GPIO_EXTI_Callback+0x64>)
 800380c:	2201      	movs	r2, #1
 800380e:	701a      	strb	r2, [r3, #0]
		}
		B1State[1] = B1State[0];
 8003810:	4b05      	ldr	r3, [pc, #20]	; (8003828 <HAL_GPIO_EXTI_Callback+0x60>)
 8003812:	781a      	ldrb	r2, [r3, #0]
 8003814:	4b04      	ldr	r3, [pc, #16]	; (8003828 <HAL_GPIO_EXTI_Callback+0x60>)
 8003816:	705a      	strb	r2, [r3, #1]


	}
}
 8003818:	bf00      	nop
 800381a:	3708      	adds	r7, #8
 800381c:	46bd      	mov	sp, r7
 800381e:	bd80      	pop	{r7, pc}
 8003820:	200005e5 	.word	0x200005e5
 8003824:	40020000 	.word	0x40020000
 8003828:	20000800 	.word	0x20000800
 800382c:	200005a8 	.word	0x200005a8

08003830 <HAL_TIM_PeriodElapsedCallback>:

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8003830:	b4b0      	push	{r4, r5, r7}
 8003832:	b083      	sub	sp, #12
 8003834:	af00      	add	r7, sp, #0
 8003836:	6078      	str	r0, [r7, #4]
	if (htim == &htim11) {
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	4a09      	ldr	r2, [pc, #36]	; (8003860 <HAL_TIM_PeriodElapsedCallback+0x30>)
 800383c:	4293      	cmp	r3, r2
 800383e:	d10a      	bne.n	8003856 <HAL_TIM_PeriodElapsedCallback+0x26>
		_micro += 65535;
 8003840:	4b08      	ldr	r3, [pc, #32]	; (8003864 <HAL_TIM_PeriodElapsedCallback+0x34>)
 8003842:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003846:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800384a:	1854      	adds	r4, r2, r1
 800384c:	f143 0500 	adc.w	r5, r3, #0
 8003850:	4b04      	ldr	r3, [pc, #16]	; (8003864 <HAL_TIM_PeriodElapsedCallback+0x34>)
 8003852:	e9c3 4500 	strd	r4, r5, [r3]
	}
}
 8003856:	bf00      	nop
 8003858:	370c      	adds	r7, #12
 800385a:	46bd      	mov	sp, r7
 800385c:	bcb0      	pop	{r4, r5, r7}
 800385e:	4770      	bx	lr
 8003860:	20000380 	.word	0x20000380
 8003864:	200005a0 	.word	0x200005a0

08003868 <micros>:

uint64_t micros()
{
 8003868:	b4b0      	push	{r4, r5, r7}
 800386a:	af00      	add	r7, sp, #0
	return _micro + htim11.Instance->CNT;
 800386c:	4b09      	ldr	r3, [pc, #36]	; (8003894 <micros+0x2c>)
 800386e:	681b      	ldr	r3, [r3, #0]
 8003870:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003872:	2200      	movs	r2, #0
 8003874:	4618      	mov	r0, r3
 8003876:	4611      	mov	r1, r2
 8003878:	4b07      	ldr	r3, [pc, #28]	; (8003898 <micros+0x30>)
 800387a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800387e:	1884      	adds	r4, r0, r2
 8003880:	eb41 0503 	adc.w	r5, r1, r3
 8003884:	4622      	mov	r2, r4
 8003886:	462b      	mov	r3, r5
}
 8003888:	4610      	mov	r0, r2
 800388a:	4619      	mov	r1, r3
 800388c:	46bd      	mov	sp, r7
 800388e:	bcb0      	pop	{r4, r5, r7}
 8003890:	4770      	bx	lr
 8003892:	bf00      	nop
 8003894:	20000380 	.word	0x20000380
 8003898:	200005a0 	.word	0x200005a0

0800389c <callUART>:

//----------------------------------------------------------------< UART >

void callUART(){
 800389c:	b598      	push	{r3, r4, r7, lr}
 800389e:	af00      	add	r7, sp, #0
	HAL_UART_DMAStop(&huart2);
 80038a0:	4896      	ldr	r0, [pc, #600]	; (8003afc <callUART+0x260>)
 80038a2:	f006 ffa3 	bl	800a7ec <HAL_UART_DMAStop>
	switch(RxState){
 80038a6:	4b96      	ldr	r3, [pc, #600]	; (8003b00 <callUART+0x264>)
 80038a8:	781b      	ldrb	r3, [r3, #0]
 80038aa:	2b03      	cmp	r3, #3
 80038ac:	f200 8113 	bhi.w	8003ad6 <callUART+0x23a>
 80038b0:	a201      	add	r2, pc, #4	; (adr r2, 80038b8 <callUART+0x1c>)
 80038b2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80038b6:	bf00      	nop
 80038b8:	080038c9 	.word	0x080038c9
 80038bc:	0800392d 	.word	0x0800392d
 80038c0:	080039a3 	.word	0x080039a3
 80038c4:	08003a01 	.word	0x08003a01
	case 0:											// Receive 1 byte first by default.
		Start = (Receive[0] & 0xF0)>>4;
 80038c8:	4b8e      	ldr	r3, [pc, #568]	; (8003b04 <callUART+0x268>)
 80038ca:	781b      	ldrb	r3, [r3, #0]
 80038cc:	091b      	lsrs	r3, r3, #4
 80038ce:	b2da      	uxtb	r2, r3
 80038d0:	4b8d      	ldr	r3, [pc, #564]	; (8003b08 <callUART+0x26c>)
 80038d2:	701a      	strb	r2, [r3, #0]
		Mode = (Receive[0] & 0x0F);
 80038d4:	4b8b      	ldr	r3, [pc, #556]	; (8003b04 <callUART+0x268>)
 80038d6:	781b      	ldrb	r3, [r3, #0]
 80038d8:	f003 030f 	and.w	r3, r3, #15
 80038dc:	b2da      	uxtb	r2, r3
 80038de:	4b8b      	ldr	r3, [pc, #556]	; (8003b0c <callUART+0x270>)
 80038e0:	701a      	strb	r2, [r3, #0]
		if(Start == 0b1001){
 80038e2:	4b89      	ldr	r3, [pc, #548]	; (8003b08 <callUART+0x26c>)
 80038e4:	781b      	ldrb	r3, [r3, #0]
 80038e6:	2b09      	cmp	r3, #9
 80038e8:	f040 80f2 	bne.w	8003ad0 <callUART+0x234>
			// 0b1001, 0b0100]
			sum = 0;
 80038ec:	4b88      	ldr	r3, [pc, #544]	; (8003b10 <callUART+0x274>)
 80038ee:	2200      	movs	r2, #0
 80038f0:	701a      	strb	r2, [r3, #0]
			sum += (Receive[0]);					// Sum the START & MODE bit.
 80038f2:	4b84      	ldr	r3, [pc, #528]	; (8003b04 <callUART+0x268>)
 80038f4:	781a      	ldrb	r2, [r3, #0]
 80038f6:	4b86      	ldr	r3, [pc, #536]	; (8003b10 <callUART+0x274>)
 80038f8:	781b      	ldrb	r3, [r3, #0]
 80038fa:	4413      	add	r3, r2
 80038fc:	b2da      	uxtb	r2, r3
 80038fe:	4b84      	ldr	r3, [pc, #528]	; (8003b10 <callUART+0x274>)
 8003900:	701a      	strb	r2, [r3, #0]
			if(Mode == 0b0111){						// Mode7
 8003902:	4b82      	ldr	r3, [pc, #520]	; (8003b0c <callUART+0x270>)
 8003904:	781b      	ldrb	r3, [r3, #0]
 8003906:	2b07      	cmp	r3, #7
 8003908:	d103      	bne.n	8003912 <callUART+0x76>
				RxState = 2;
 800390a:	4b7d      	ldr	r3, [pc, #500]	; (8003b00 <callUART+0x264>)
 800390c:	2202      	movs	r2, #2
 800390e:	701a      	strb	r2, [r3, #0]
 8003910:	e002      	b.n	8003918 <callUART+0x7c>
			}
			else{
				RxState = 1;						// Go to Interrupt Receive next round.
 8003912:	4b7b      	ldr	r3, [pc, #492]	; (8003b00 <callUART+0x264>)
 8003914:	2201      	movs	r2, #1
 8003916:	701a      	strb	r2, [r3, #0]
			}
			nbyte = frameConfig(Mode);				// Set a new size of buffer.
 8003918:	4b7c      	ldr	r3, [pc, #496]	; (8003b0c <callUART+0x270>)
 800391a:	781b      	ldrb	r3, [r3, #0]
 800391c:	4618      	mov	r0, r3
 800391e:	f000 fd03 	bl	8004328 <frameConfig>
 8003922:	4603      	mov	r3, r0
 8003924:	461a      	mov	r2, r3
 8003926:	4b7b      	ldr	r3, [pc, #492]	; (8003b14 <callUART+0x278>)
 8003928:	701a      	strb	r2, [r3, #0]
		}
		break;
 800392a:	e0d1      	b.n	8003ad0 <callUART+0x234>
	case 1:
		sum += frameSum( Receive, nbyte-1);			// (nbyte-1) Minus checksum out.
 800392c:	4b79      	ldr	r3, [pc, #484]	; (8003b14 <callUART+0x278>)
 800392e:	781b      	ldrb	r3, [r3, #0]
 8003930:	3b01      	subs	r3, #1
 8003932:	b2db      	uxtb	r3, r3
 8003934:	4619      	mov	r1, r3
 8003936:	4873      	ldr	r0, [pc, #460]	; (8003b04 <callUART+0x268>)
 8003938:	f000 fd45 	bl	80043c6 <frameSum>
 800393c:	4603      	mov	r3, r0
 800393e:	461a      	mov	r2, r3
 8003940:	4b73      	ldr	r3, [pc, #460]	; (8003b10 <callUART+0x274>)
 8003942:	781b      	ldrb	r3, [r3, #0]
 8003944:	4413      	add	r3, r2
 8003946:	b2da      	uxtb	r2, r3
 8003948:	4b71      	ldr	r3, [pc, #452]	; (8003b10 <callUART+0x274>)
 800394a:	701a      	strb	r2, [r3, #0]
		if(Receive[nbyte-1] == checkSum(sum)){		// Corrected.
 800394c:	4b71      	ldr	r3, [pc, #452]	; (8003b14 <callUART+0x278>)
 800394e:	781b      	ldrb	r3, [r3, #0]
 8003950:	3b01      	subs	r3, #1
 8003952:	4a6c      	ldr	r2, [pc, #432]	; (8003b04 <callUART+0x268>)
 8003954:	5cd4      	ldrb	r4, [r2, r3]
 8003956:	4b6e      	ldr	r3, [pc, #440]	; (8003b10 <callUART+0x274>)
 8003958:	781b      	ldrb	r3, [r3, #0]
 800395a:	4618      	mov	r0, r3
 800395c:	f000 fd20 	bl	80043a0 <checkSum>
 8003960:	4603      	mov	r3, r0
 8003962:	429c      	cmp	r4, r3
 8003964:	d102      	bne.n	800396c <callUART+0xd0>
			// Receive[nbyte-1] == checkSum(sum)
			TxState = 1;
 8003966:	4b6c      	ldr	r3, [pc, #432]	; (8003b18 <callUART+0x27c>)
 8003968:	2201      	movs	r2, #1
 800396a:	701a      	strb	r2, [r3, #0]
		}
		if(Mode == 1 || Mode == 9 || Mode == 10 || Mode == 11){
 800396c:	4b67      	ldr	r3, [pc, #412]	; (8003b0c <callUART+0x270>)
 800396e:	781b      	ldrb	r3, [r3, #0]
 8003970:	2b01      	cmp	r3, #1
 8003972:	d00b      	beq.n	800398c <callUART+0xf0>
 8003974:	4b65      	ldr	r3, [pc, #404]	; (8003b0c <callUART+0x270>)
 8003976:	781b      	ldrb	r3, [r3, #0]
 8003978:	2b09      	cmp	r3, #9
 800397a:	d007      	beq.n	800398c <callUART+0xf0>
 800397c:	4b63      	ldr	r3, [pc, #396]	; (8003b0c <callUART+0x270>)
 800397e:	781b      	ldrb	r3, [r3, #0]
 8003980:	2b0a      	cmp	r3, #10
 8003982:	d003      	beq.n	800398c <callUART+0xf0>
 8003984:	4b61      	ldr	r3, [pc, #388]	; (8003b0c <callUART+0x270>)
 8003986:	781b      	ldrb	r3, [r3, #0]
 8003988:	2b0b      	cmp	r3, #11
 800398a:	d106      	bne.n	800399a <callUART+0xfe>
			nbyte = 1;								// For receive ACK
 800398c:	4b61      	ldr	r3, [pc, #388]	; (8003b14 <callUART+0x278>)
 800398e:	2201      	movs	r2, #1
 8003990:	701a      	strb	r2, [r3, #0]
			RxState = 3;
 8003992:	4b5b      	ldr	r3, [pc, #364]	; (8003b00 <callUART+0x264>)
 8003994:	2203      	movs	r2, #3
 8003996:	701a      	strb	r2, [r3, #0]
		}
		else{
			endReceive = 1;
		}

		break;
 8003998:	e09d      	b.n	8003ad6 <callUART+0x23a>
			endReceive = 1;
 800399a:	4b60      	ldr	r3, [pc, #384]	; (8003b1c <callUART+0x280>)
 800399c:	2201      	movs	r2, #1
 800399e:	701a      	strb	r2, [r3, #0]
		break;
 80039a0:	e099      	b.n	8003ad6 <callUART+0x23a>
	case 2:
		sum += (Receive[0]);
 80039a2:	4b58      	ldr	r3, [pc, #352]	; (8003b04 <callUART+0x268>)
 80039a4:	781a      	ldrb	r2, [r3, #0]
 80039a6:	4b5a      	ldr	r3, [pc, #360]	; (8003b10 <callUART+0x274>)
 80039a8:	781b      	ldrb	r3, [r3, #0]
 80039aa:	4413      	add	r3, r2
 80039ac:	b2da      	uxtb	r2, r3
 80039ae:	4b58      	ldr	r3, [pc, #352]	; (8003b10 <callUART+0x274>)
 80039b0:	701a      	strb	r2, [r3, #0]
		nStation = Receive[0];					// Set received station.
 80039b2:	4b54      	ldr	r3, [pc, #336]	; (8003b04 <callUART+0x268>)
 80039b4:	781a      	ldrb	r2, [r3, #0]
 80039b6:	4b5a      	ldr	r3, [pc, #360]	; (8003b20 <callUART+0x284>)
 80039b8:	701a      	strb	r2, [r3, #0]
		nDestination = Receive[0];				// Set received station.
 80039ba:	4b52      	ldr	r3, [pc, #328]	; (8003b04 <callUART+0x268>)
 80039bc:	781a      	ldrb	r2, [r3, #0]
 80039be:	4b59      	ldr	r3, [pc, #356]	; (8003b24 <callUART+0x288>)
 80039c0:	701a      	strb	r2, [r3, #0]
		if(Receive[0] % 2 == 1){
 80039c2:	4b50      	ldr	r3, [pc, #320]	; (8003b04 <callUART+0x268>)
 80039c4:	781b      	ldrb	r3, [r3, #0]
 80039c6:	f003 0301 	and.w	r3, r3, #1
 80039ca:	b2db      	uxtb	r3, r3
 80039cc:	2b00      	cmp	r3, #0
 80039ce:	d00b      	beq.n	80039e8 <callUART+0x14c>
			nbyte = ((Receive[0] + 1)/2)+1;
 80039d0:	4b4c      	ldr	r3, [pc, #304]	; (8003b04 <callUART+0x268>)
 80039d2:	781b      	ldrb	r3, [r3, #0]
 80039d4:	3301      	adds	r3, #1
 80039d6:	0fda      	lsrs	r2, r3, #31
 80039d8:	4413      	add	r3, r2
 80039da:	105b      	asrs	r3, r3, #1
 80039dc:	b2db      	uxtb	r3, r3
 80039de:	3301      	adds	r3, #1
 80039e0:	b2da      	uxtb	r2, r3
 80039e2:	4b4c      	ldr	r3, [pc, #304]	; (8003b14 <callUART+0x278>)
 80039e4:	701a      	strb	r2, [r3, #0]
 80039e6:	e007      	b.n	80039f8 <callUART+0x15c>
		}
		else{
			nbyte = (Receive[0]/2)+1;
 80039e8:	4b46      	ldr	r3, [pc, #280]	; (8003b04 <callUART+0x268>)
 80039ea:	781b      	ldrb	r3, [r3, #0]
 80039ec:	085b      	lsrs	r3, r3, #1
 80039ee:	b2db      	uxtb	r3, r3
 80039f0:	3301      	adds	r3, #1
 80039f2:	b2da      	uxtb	r2, r3
 80039f4:	4b47      	ldr	r3, [pc, #284]	; (8003b14 <callUART+0x278>)
 80039f6:	701a      	strb	r2, [r3, #0]
		}
		RxState = 1;
 80039f8:	4b41      	ldr	r3, [pc, #260]	; (8003b00 <callUART+0x264>)
 80039fa:	2201      	movs	r2, #1
 80039fc:	701a      	strb	r2, [r3, #0]
		break;
 80039fe:	e06a      	b.n	8003ad6 <callUART+0x23a>
	case 3:						// For Receive ACK frame
		if(Receive[0] == ACK1[0]){
 8003a00:	4b40      	ldr	r3, [pc, #256]	; (8003b04 <callUART+0x268>)
 8003a02:	781a      	ldrb	r2, [r3, #0]
 8003a04:	4b48      	ldr	r3, [pc, #288]	; (8003b28 <callUART+0x28c>)
 8003a06:	781b      	ldrb	r3, [r3, #0]
 8003a08:	429a      	cmp	r2, r3
 8003a0a:	d104      	bne.n	8003a16 <callUART+0x17a>
			keepACK[0] = Receive[0];
 8003a0c:	4b3d      	ldr	r3, [pc, #244]	; (8003b04 <callUART+0x268>)
 8003a0e:	781a      	ldrb	r2, [r3, #0]
 8003a10:	4b46      	ldr	r3, [pc, #280]	; (8003b2c <callUART+0x290>)
 8003a12:	701a      	strb	r2, [r3, #0]
 8003a14:	e040      	b.n	8003a98 <callUART+0x1fc>
		}
		else if(Receive[0] == ACK1[1]){
 8003a16:	4b3b      	ldr	r3, [pc, #236]	; (8003b04 <callUART+0x268>)
 8003a18:	781a      	ldrb	r2, [r3, #0]
 8003a1a:	4b43      	ldr	r3, [pc, #268]	; (8003b28 <callUART+0x28c>)
 8003a1c:	785b      	ldrb	r3, [r3, #1]
 8003a1e:	429a      	cmp	r2, r3
 8003a20:	d104      	bne.n	8003a2c <callUART+0x190>
			keepACK[1] = Receive[0];
 8003a22:	4b38      	ldr	r3, [pc, #224]	; (8003b04 <callUART+0x268>)
 8003a24:	781a      	ldrb	r2, [r3, #0]
 8003a26:	4b41      	ldr	r3, [pc, #260]	; (8003b2c <callUART+0x290>)
 8003a28:	705a      	strb	r2, [r3, #1]
 8003a2a:	e035      	b.n	8003a98 <callUART+0x1fc>
		}
		else{
			Start = (Receive[0] & 0xF0)>>4;
 8003a2c:	4b35      	ldr	r3, [pc, #212]	; (8003b04 <callUART+0x268>)
 8003a2e:	781b      	ldrb	r3, [r3, #0]
 8003a30:	091b      	lsrs	r3, r3, #4
 8003a32:	b2da      	uxtb	r2, r3
 8003a34:	4b34      	ldr	r3, [pc, #208]	; (8003b08 <callUART+0x26c>)
 8003a36:	701a      	strb	r2, [r3, #0]
			Mode = (Receive[0] & 0x0F);
 8003a38:	4b32      	ldr	r3, [pc, #200]	; (8003b04 <callUART+0x268>)
 8003a3a:	781b      	ldrb	r3, [r3, #0]
 8003a3c:	f003 030f 	and.w	r3, r3, #15
 8003a40:	b2da      	uxtb	r2, r3
 8003a42:	4b32      	ldr	r3, [pc, #200]	; (8003b0c <callUART+0x270>)
 8003a44:	701a      	strb	r2, [r3, #0]
			if(Start == 0b1001){
 8003a46:	4b30      	ldr	r3, [pc, #192]	; (8003b08 <callUART+0x26c>)
 8003a48:	781b      	ldrb	r3, [r3, #0]
 8003a4a:	2b09      	cmp	r3, #9
 8003a4c:	d11e      	bne.n	8003a8c <callUART+0x1f0>
				// 0b1001, 0b0100
				sum = 0;
 8003a4e:	4b30      	ldr	r3, [pc, #192]	; (8003b10 <callUART+0x274>)
 8003a50:	2200      	movs	r2, #0
 8003a52:	701a      	strb	r2, [r3, #0]
				sum += (Receive[0]);				// Sum the START & MODE bit.
 8003a54:	4b2b      	ldr	r3, [pc, #172]	; (8003b04 <callUART+0x268>)
 8003a56:	781a      	ldrb	r2, [r3, #0]
 8003a58:	4b2d      	ldr	r3, [pc, #180]	; (8003b10 <callUART+0x274>)
 8003a5a:	781b      	ldrb	r3, [r3, #0]
 8003a5c:	4413      	add	r3, r2
 8003a5e:	b2da      	uxtb	r2, r3
 8003a60:	4b2b      	ldr	r3, [pc, #172]	; (8003b10 <callUART+0x274>)
 8003a62:	701a      	strb	r2, [r3, #0]
				if(Mode == 0b0111){					// Mode7
 8003a64:	4b29      	ldr	r3, [pc, #164]	; (8003b0c <callUART+0x270>)
 8003a66:	781b      	ldrb	r3, [r3, #0]
 8003a68:	2b07      	cmp	r3, #7
 8003a6a:	d103      	bne.n	8003a74 <callUART+0x1d8>
					RxState = 2;
 8003a6c:	4b24      	ldr	r3, [pc, #144]	; (8003b00 <callUART+0x264>)
 8003a6e:	2202      	movs	r2, #2
 8003a70:	701a      	strb	r2, [r3, #0]
 8003a72:	e002      	b.n	8003a7a <callUART+0x1de>
				}
				else{
					RxState = 1;					// Go to Interrupt Receive next round.
 8003a74:	4b22      	ldr	r3, [pc, #136]	; (8003b00 <callUART+0x264>)
 8003a76:	2201      	movs	r2, #1
 8003a78:	701a      	strb	r2, [r3, #0]
				}
				nbyte = frameConfig(Mode);			// Set a new size of buffer.
 8003a7a:	4b24      	ldr	r3, [pc, #144]	; (8003b0c <callUART+0x270>)
 8003a7c:	781b      	ldrb	r3, [r3, #0]
 8003a7e:	4618      	mov	r0, r3
 8003a80:	f000 fc52 	bl	8004328 <frameConfig>
 8003a84:	4603      	mov	r3, r0
 8003a86:	461a      	mov	r2, r3
 8003a88:	4b22      	ldr	r3, [pc, #136]	; (8003b14 <callUART+0x278>)
 8003a8a:	701a      	strb	r2, [r3, #0]
			}
			TxState = 0;
 8003a8c:	4b22      	ldr	r3, [pc, #136]	; (8003b18 <callUART+0x27c>)
 8003a8e:	2200      	movs	r2, #0
 8003a90:	701a      	strb	r2, [r3, #0]
			RxState = 1;
 8003a92:	4b1b      	ldr	r3, [pc, #108]	; (8003b00 <callUART+0x264>)
 8003a94:	2201      	movs	r2, #1
 8003a96:	701a      	strb	r2, [r3, #0]
		}
		if(keepACK[0] == ACK1[0] && keepACK[1] == ACK1[1]){			// It's ACK
 8003a98:	4b24      	ldr	r3, [pc, #144]	; (8003b2c <callUART+0x290>)
 8003a9a:	781a      	ldrb	r2, [r3, #0]
 8003a9c:	4b22      	ldr	r3, [pc, #136]	; (8003b28 <callUART+0x28c>)
 8003a9e:	781b      	ldrb	r3, [r3, #0]
 8003aa0:	429a      	cmp	r2, r3
 8003aa2:	d117      	bne.n	8003ad4 <callUART+0x238>
 8003aa4:	4b21      	ldr	r3, [pc, #132]	; (8003b2c <callUART+0x290>)
 8003aa6:	785a      	ldrb	r2, [r3, #1]
 8003aa8:	4b1f      	ldr	r3, [pc, #124]	; (8003b28 <callUART+0x28c>)
 8003aaa:	785b      	ldrb	r3, [r3, #1]
 8003aac:	429a      	cmp	r2, r3
 8003aae:	d111      	bne.n	8003ad4 <callUART+0x238>
			keepACK[0] = 0;
 8003ab0:	4b1e      	ldr	r3, [pc, #120]	; (8003b2c <callUART+0x290>)
 8003ab2:	2200      	movs	r2, #0
 8003ab4:	701a      	strb	r2, [r3, #0]
			keepACK[1] = 0;
 8003ab6:	4b1d      	ldr	r3, [pc, #116]	; (8003b2c <callUART+0x290>)
 8003ab8:	2200      	movs	r2, #0
 8003aba:	705a      	strb	r2, [r3, #1]
			ACKFlag = 1;
 8003abc:	4b1c      	ldr	r3, [pc, #112]	; (8003b30 <callUART+0x294>)
 8003abe:	2201      	movs	r2, #1
 8003ac0:	701a      	strb	r2, [r3, #0]
			RxState = 0;
 8003ac2:	4b0f      	ldr	r3, [pc, #60]	; (8003b00 <callUART+0x264>)
 8003ac4:	2200      	movs	r2, #0
 8003ac6:	701a      	strb	r2, [r3, #0]
			endReceive = 1;
 8003ac8:	4b14      	ldr	r3, [pc, #80]	; (8003b1c <callUART+0x280>)
 8003aca:	2201      	movs	r2, #1
 8003acc:	701a      	strb	r2, [r3, #0]
		}
		break;
 8003ace:	e001      	b.n	8003ad4 <callUART+0x238>
		break;
 8003ad0:	bf00      	nop
 8003ad2:	e000      	b.n	8003ad6 <callUART+0x23a>
		break;
 8003ad4:	bf00      	nop
	}
	// if complete or fail -> reset communication rxstate=0, sum=0, mode=0, nbyte=1,
	if(endReceive){
 8003ad6:	4b11      	ldr	r3, [pc, #68]	; (8003b1c <callUART+0x280>)
 8003ad8:	781b      	ldrb	r3, [r3, #0]
 8003ada:	2b00      	cmp	r3, #0
 8003adc:	d00b      	beq.n	8003af6 <callUART+0x25a>
		RxState = 0;
 8003ade:	4b08      	ldr	r3, [pc, #32]	; (8003b00 <callUART+0x264>)
 8003ae0:	2200      	movs	r2, #0
 8003ae2:	701a      	strb	r2, [r3, #0]
		nbyte = 1;
 8003ae4:	4b0b      	ldr	r3, [pc, #44]	; (8003b14 <callUART+0x278>)
 8003ae6:	2201      	movs	r2, #1
 8003ae8:	701a      	strb	r2, [r3, #0]
		sum = 0;
 8003aea:	4b09      	ldr	r3, [pc, #36]	; (8003b10 <callUART+0x274>)
 8003aec:	2200      	movs	r2, #0
 8003aee:	701a      	strb	r2, [r3, #0]
		endReceive = 0;
 8003af0:	4b0a      	ldr	r3, [pc, #40]	; (8003b1c <callUART+0x280>)
 8003af2:	2200      	movs	r2, #0
 8003af4:	701a      	strb	r2, [r3, #0]
	}

	//RxComplete = 0;
}
 8003af6:	bf00      	nop
 8003af8:	bd98      	pop	{r3, r4, r7, pc}
 8003afa:	bf00      	nop
 8003afc:	200003c8 	.word	0x200003c8
 8003b00:	2000054a 	.word	0x2000054a
 8003b04:	20000554 	.word	0x20000554
 8003b08:	2000054b 	.word	0x2000054b
 8003b0c:	2000054c 	.word	0x2000054c
 8003b10:	2000054d 	.word	0x2000054d
 8003b14:	20000026 	.word	0x20000026
 8003b18:	20000549 	.word	0x20000549
 8003b1c:	20000566 	.word	0x20000566
 8003b20:	20000538 	.word	0x20000538
 8003b24:	200004d0 	.word	0x200004d0
 8003b28:	20000020 	.word	0x20000020
 8003b2c:	20000564 	.word	0x20000564
 8003b30:	20000567 	.word	0x20000567
 8003b34:	00000000 	.word	0x00000000

08003b38 <responseUART>:

void responseUART(){
 8003b38:	b590      	push	{r4, r7, lr}
 8003b3a:	b085      	sub	sp, #20
 8003b3c:	af00      	add	r7, sp, #0

	switch(Mode){
 8003b3e:	4ba2      	ldr	r3, [pc, #648]	; (8003dc8 <responseUART+0x290>)
 8003b40:	781b      	ldrb	r3, [r3, #0]
 8003b42:	2b0e      	cmp	r3, #14
 8003b44:	f200 8369 	bhi.w	800421a <responseUART+0x6e2>
 8003b48:	a201      	add	r2, pc, #4	; (adr r2, 8003b50 <responseUART+0x18>)
 8003b4a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003b4e:	bf00      	nop
 8003b50:	080041e5 	.word	0x080041e5
 8003b54:	08003b8d 	.word	0x08003b8d
 8003b58:	08003c3f 	.word	0x08003c3f
 8003b5c:	08003c6f 	.word	0x08003c6f
 8003b60:	08003c9f 	.word	0x08003c9f
 8003b64:	08003cfb 	.word	0x08003cfb
 8003b68:	08003d5b 	.word	0x08003d5b
 8003b6c:	08003d9d 	.word	0x08003d9d
 8003b70:	08003e83 	.word	0x08003e83
 8003b74:	08003ead 	.word	0x08003ead
 8003b78:	08003f5d 	.word	0x08003f5d
 8003b7c:	0800405d 	.word	0x0800405d
 8003b80:	08004169 	.word	0x08004169
 8003b84:	08004199 	.word	0x08004199
 8003b88:	080041c1 	.word	0x080041c1

	case 0:
		break;

	case 1:	// <<<< 95% COMPLETE >>>>
		switch(TxState){
 8003b8c:	4b8f      	ldr	r3, [pc, #572]	; (8003dcc <responseUART+0x294>)
 8003b8e:	781b      	ldrb	r3, [r3, #0]
 8003b90:	2b04      	cmp	r3, #4
 8003b92:	f200 8329 	bhi.w	80041e8 <responseUART+0x6b0>
 8003b96:	a201      	add	r2, pc, #4	; (adr r2, 8003b9c <responseUART+0x64>)
 8003b98:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003b9c:	08003c33 	.word	0x08003c33
 8003ba0:	08003bb1 	.word	0x08003bb1
 8003ba4:	08003bc3 	.word	0x08003bc3
 8003ba8:	08003bff 	.word	0x08003bff
 8003bac:	08003c1d 	.word	0x08003c1d
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003bb0:	2202      	movs	r2, #2
 8003bb2:	4987      	ldr	r1, [pc, #540]	; (8003dd0 <responseUART+0x298>)
 8003bb4:	4887      	ldr	r0, [pc, #540]	; (8003dd4 <responseUART+0x29c>)
 8003bb6:	f006 fd6b 	bl	800a690 <HAL_UART_Transmit_DMA>
			TxState = 2;
 8003bba:	4b84      	ldr	r3, [pc, #528]	; (8003dcc <responseUART+0x294>)
 8003bbc:	2202      	movs	r2, #2
 8003bbe:	701a      	strb	r2, [r3, #0]
			break;
 8003bc0:	e03c      	b.n	8003c3c <responseUART+0x104>
		case 2:
			Transmit[0] = 0b10010001;								// Store byte to Transmit.
 8003bc2:	4b85      	ldr	r3, [pc, #532]	; (8003dd8 <responseUART+0x2a0>)
 8003bc4:	2291      	movs	r2, #145	; 0x91
 8003bc6:	701a      	strb	r2, [r3, #0]
			Transmit[1] = Receive[0];
 8003bc8:	4b84      	ldr	r3, [pc, #528]	; (8003ddc <responseUART+0x2a4>)
 8003bca:	781a      	ldrb	r2, [r3, #0]
 8003bcc:	4b82      	ldr	r3, [pc, #520]	; (8003dd8 <responseUART+0x2a0>)
 8003bce:	705a      	strb	r2, [r3, #1]
			Transmit[2] = Receive[1];
 8003bd0:	4b82      	ldr	r3, [pc, #520]	; (8003ddc <responseUART+0x2a4>)
 8003bd2:	785a      	ldrb	r2, [r3, #1]
 8003bd4:	4b80      	ldr	r3, [pc, #512]	; (8003dd8 <responseUART+0x2a0>)
 8003bd6:	709a      	strb	r2, [r3, #2]
			Transmit[3] = checkSum(frameSum(Transmit, 3));			// Let the last byte equal to checksum of 1st-3rd byte.
 8003bd8:	2103      	movs	r1, #3
 8003bda:	487f      	ldr	r0, [pc, #508]	; (8003dd8 <responseUART+0x2a0>)
 8003bdc:	f000 fbf3 	bl	80043c6 <frameSum>
 8003be0:	4603      	mov	r3, r0
 8003be2:	4618      	mov	r0, r3
 8003be4:	f000 fbdc 	bl	80043a0 <checkSum>
 8003be8:	4603      	mov	r3, r0
 8003bea:	461a      	mov	r2, r3
 8003bec:	4b7a      	ldr	r3, [pc, #488]	; (8003dd8 <responseUART+0x2a0>)
 8003bee:	70da      	strb	r2, [r3, #3]
			RxState = 3;
 8003bf0:	4b7b      	ldr	r3, [pc, #492]	; (8003de0 <responseUART+0x2a8>)
 8003bf2:	2203      	movs	r2, #3
 8003bf4:	701a      	strb	r2, [r3, #0]
			TxState = 3;
 8003bf6:	4b75      	ldr	r3, [pc, #468]	; (8003dcc <responseUART+0x294>)
 8003bf8:	2203      	movs	r2, #3
 8003bfa:	701a      	strb	r2, [r3, #0]
			break;
 8003bfc:	e01e      	b.n	8003c3c <responseUART+0x104>
		case 3:
			if(huart2.gState == HAL_UART_STATE_READY){
 8003bfe:	4b75      	ldr	r3, [pc, #468]	; (8003dd4 <responseUART+0x29c>)
 8003c00:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003c04:	b2db      	uxtb	r3, r3
 8003c06:	2b20      	cmp	r3, #32
 8003c08:	d115      	bne.n	8003c36 <responseUART+0xfe>
				HAL_UART_Transmit_DMA(&huart2, Transmit, 4);		// Transmit command back.
 8003c0a:	2204      	movs	r2, #4
 8003c0c:	4972      	ldr	r1, [pc, #456]	; (8003dd8 <responseUART+0x2a0>)
 8003c0e:	4871      	ldr	r0, [pc, #452]	; (8003dd4 <responseUART+0x29c>)
 8003c10:	f006 fd3e 	bl	800a690 <HAL_UART_Transmit_DMA>
				TxState = 4;
 8003c14:	4b6d      	ldr	r3, [pc, #436]	; (8003dcc <responseUART+0x294>)
 8003c16:	2204      	movs	r2, #4
 8003c18:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003c1a:	e00c      	b.n	8003c36 <responseUART+0xfe>
		case 4:
			if(ACKFlag){
 8003c1c:	4b71      	ldr	r3, [pc, #452]	; (8003de4 <responseUART+0x2ac>)
 8003c1e:	781b      	ldrb	r3, [r3, #0]
 8003c20:	2b00      	cmp	r3, #0
 8003c22:	d00a      	beq.n	8003c3a <responseUART+0x102>
				ACKFlag = 0;
 8003c24:	4b6f      	ldr	r3, [pc, #444]	; (8003de4 <responseUART+0x2ac>)
 8003c26:	2200      	movs	r2, #0
 8003c28:	701a      	strb	r2, [r3, #0]
				TxState = 0;
 8003c2a:	4b68      	ldr	r3, [pc, #416]	; (8003dcc <responseUART+0x294>)
 8003c2c:	2200      	movs	r2, #0
 8003c2e:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003c30:	e003      	b.n	8003c3a <responseUART+0x102>
			break;
 8003c32:	bf00      	nop
 8003c34:	e2d8      	b.n	80041e8 <responseUART+0x6b0>
			break;
 8003c36:	bf00      	nop
 8003c38:	e2d6      	b.n	80041e8 <responseUART+0x6b0>
			break;
 8003c3a:	bf00      	nop
		}
		break;
 8003c3c:	e2d4      	b.n	80041e8 <responseUART+0x6b0>

	case 2:	// <<<< COMPLETE >>>>
		// Connect
		switch(TxState){
 8003c3e:	4b63      	ldr	r3, [pc, #396]	; (8003dcc <responseUART+0x294>)
 8003c40:	781b      	ldrb	r3, [r3, #0]
 8003c42:	2b00      	cmp	r3, #0
 8003c44:	d011      	beq.n	8003c6a <responseUART+0x132>
 8003c46:	2b01      	cmp	r3, #1
 8003c48:	f040 82d0 	bne.w	80041ec <responseUART+0x6b4>
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003c4c:	2202      	movs	r2, #2
 8003c4e:	4960      	ldr	r1, [pc, #384]	; (8003dd0 <responseUART+0x298>)
 8003c50:	4860      	ldr	r0, [pc, #384]	; (8003dd4 <responseUART+0x29c>)
 8003c52:	f006 fd1d 	bl	800a690 <HAL_UART_Transmit_DMA>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_SET);
 8003c56:	2201      	movs	r2, #1
 8003c58:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003c5c:	4862      	ldr	r0, [pc, #392]	; (8003de8 <responseUART+0x2b0>)
 8003c5e:	f001 fe61 	bl	8005924 <HAL_GPIO_WritePin>
			TxState = 0;
 8003c62:	4b5a      	ldr	r3, [pc, #360]	; (8003dcc <responseUART+0x294>)
 8003c64:	2200      	movs	r2, #0
 8003c66:	701a      	strb	r2, [r3, #0]
			break;
 8003c68:	e000      	b.n	8003c6c <responseUART+0x134>
			break;
 8003c6a:	bf00      	nop
		}
		break;
 8003c6c:	e2be      	b.n	80041ec <responseUART+0x6b4>

	case 3:	// <<<< COMPLETE >>>>
		// Disconnect
		switch(TxState){
 8003c6e:	4b57      	ldr	r3, [pc, #348]	; (8003dcc <responseUART+0x294>)
 8003c70:	781b      	ldrb	r3, [r3, #0]
 8003c72:	2b00      	cmp	r3, #0
 8003c74:	d011      	beq.n	8003c9a <responseUART+0x162>
 8003c76:	2b01      	cmp	r3, #1
 8003c78:	f040 82ba 	bne.w	80041f0 <responseUART+0x6b8>
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003c7c:	2202      	movs	r2, #2
 8003c7e:	4954      	ldr	r1, [pc, #336]	; (8003dd0 <responseUART+0x298>)
 8003c80:	4854      	ldr	r0, [pc, #336]	; (8003dd4 <responseUART+0x29c>)
 8003c82:	f006 fd05 	bl	800a690 <HAL_UART_Transmit_DMA>
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 8003c86:	2200      	movs	r2, #0
 8003c88:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003c8c:	4856      	ldr	r0, [pc, #344]	; (8003de8 <responseUART+0x2b0>)
 8003c8e:	f001 fe49 	bl	8005924 <HAL_GPIO_WritePin>
			TxState = 0;
 8003c92:	4b4e      	ldr	r3, [pc, #312]	; (8003dcc <responseUART+0x294>)
 8003c94:	2200      	movs	r2, #0
 8003c96:	701a      	strb	r2, [r3, #0]
			break;
 8003c98:	e000      	b.n	8003c9c <responseUART+0x164>
			break;
 8003c9a:	bf00      	nop
		}
		break;
 8003c9c:	e2a8      	b.n	80041f0 <responseUART+0x6b8>

	case 4:	// <<<< COMPLETE >>>>
		// Set limit of omega
		switch(TxState){
 8003c9e:	4b4b      	ldr	r3, [pc, #300]	; (8003dcc <responseUART+0x294>)
 8003ca0:	781b      	ldrb	r3, [r3, #0]
 8003ca2:	2b00      	cmp	r3, #0
 8003ca4:	d027      	beq.n	8003cf6 <responseUART+0x1be>
 8003ca6:	2b01      	cmp	r3, #1
 8003ca8:	f040 82a4 	bne.w	80041f4 <responseUART+0x6bc>
		case 0:
			break;
		case 1:
			limitOmega = (Receive[1]*10.0)/(255.0);
 8003cac:	4b4b      	ldr	r3, [pc, #300]	; (8003ddc <responseUART+0x2a4>)
 8003cae:	785b      	ldrb	r3, [r3, #1]
 8003cb0:	4618      	mov	r0, r3
 8003cb2:	f7fc fbe3 	bl	800047c <__aeabi_i2d>
 8003cb6:	f04f 0200 	mov.w	r2, #0
 8003cba:	4b4c      	ldr	r3, [pc, #304]	; (8003dec <responseUART+0x2b4>)
 8003cbc:	f7fc fc48 	bl	8000550 <__aeabi_dmul>
 8003cc0:	4602      	mov	r2, r0
 8003cc2:	460b      	mov	r3, r1
 8003cc4:	4610      	mov	r0, r2
 8003cc6:	4619      	mov	r1, r3
 8003cc8:	a33b      	add	r3, pc, #236	; (adr r3, 8003db8 <responseUART+0x280>)
 8003cca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003cce:	f7fc fd69 	bl	80007a4 <__aeabi_ddiv>
 8003cd2:	4602      	mov	r2, r0
 8003cd4:	460b      	mov	r3, r1
 8003cd6:	4610      	mov	r0, r2
 8003cd8:	4619      	mov	r1, r3
 8003cda:	f7fc ff09 	bl	8000af0 <__aeabi_d2f>
 8003cde:	4603      	mov	r3, r0
 8003ce0:	4a43      	ldr	r2, [pc, #268]	; (8003df0 <responseUART+0x2b8>)
 8003ce2:	6013      	str	r3, [r2, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003ce4:	2202      	movs	r2, #2
 8003ce6:	493a      	ldr	r1, [pc, #232]	; (8003dd0 <responseUART+0x298>)
 8003ce8:	483a      	ldr	r0, [pc, #232]	; (8003dd4 <responseUART+0x29c>)
 8003cea:	f006 fcd1 	bl	800a690 <HAL_UART_Transmit_DMA>
			TxState = 0;
 8003cee:	4b37      	ldr	r3, [pc, #220]	; (8003dcc <responseUART+0x294>)
 8003cf0:	2200      	movs	r2, #0
 8003cf2:	701a      	strb	r2, [r3, #0]
			break;
 8003cf4:	e000      	b.n	8003cf8 <responseUART+0x1c0>
			break;
 8003cf6:	bf00      	nop
		}
		break;
 8003cf8:	e27c      	b.n	80041f4 <responseUART+0x6bc>

	case 5: // <<<< 95% COMPLETE >>>>
		// Set new position()
		switch(TxState){
 8003cfa:	4b34      	ldr	r3, [pc, #208]	; (8003dcc <responseUART+0x294>)
 8003cfc:	781b      	ldrb	r3, [r3, #0]
 8003cfe:	2b00      	cmp	r3, #0
 8003d00:	d029      	beq.n	8003d56 <responseUART+0x21e>
 8003d02:	2b01      	cmp	r3, #1
 8003d04:	f040 8278 	bne.w	80041f8 <responseUART+0x6c0>
		case 0:
			break;
		case 1:
			nDestination = 1;
 8003d08:	4b3a      	ldr	r3, [pc, #232]	; (8003df4 <responseUART+0x2bc>)
 8003d0a:	2201      	movs	r2, #1
 8003d0c:	701a      	strb	r2, [r3, #0]
			Destination[0] = ( ( (Receive[0]*256)+(Receive[1]) )*(180) )/(10000*3.14);
 8003d0e:	4b33      	ldr	r3, [pc, #204]	; (8003ddc <responseUART+0x2a4>)
 8003d10:	781b      	ldrb	r3, [r3, #0]
 8003d12:	021b      	lsls	r3, r3, #8
 8003d14:	4a31      	ldr	r2, [pc, #196]	; (8003ddc <responseUART+0x2a4>)
 8003d16:	7852      	ldrb	r2, [r2, #1]
 8003d18:	4413      	add	r3, r2
 8003d1a:	22b4      	movs	r2, #180	; 0xb4
 8003d1c:	fb02 f303 	mul.w	r3, r2, r3
 8003d20:	4618      	mov	r0, r3
 8003d22:	f7fc fbab 	bl	800047c <__aeabi_i2d>
 8003d26:	a326      	add	r3, pc, #152	; (adr r3, 8003dc0 <responseUART+0x288>)
 8003d28:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d2c:	f7fc fd3a 	bl	80007a4 <__aeabi_ddiv>
 8003d30:	4602      	mov	r2, r0
 8003d32:	460b      	mov	r3, r1
 8003d34:	4610      	mov	r0, r2
 8003d36:	4619      	mov	r1, r3
 8003d38:	f7fc feba 	bl	8000ab0 <__aeabi_d2uiz>
 8003d3c:	4603      	mov	r3, r0
 8003d3e:	b29a      	uxth	r2, r3
 8003d40:	4b2d      	ldr	r3, [pc, #180]	; (8003df8 <responseUART+0x2c0>)
 8003d42:	801a      	strh	r2, [r3, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003d44:	2202      	movs	r2, #2
 8003d46:	4922      	ldr	r1, [pc, #136]	; (8003dd0 <responseUART+0x298>)
 8003d48:	4822      	ldr	r0, [pc, #136]	; (8003dd4 <responseUART+0x29c>)
 8003d4a:	f006 fca1 	bl	800a690 <HAL_UART_Transmit_DMA>
			TxState = 0;
 8003d4e:	4b1f      	ldr	r3, [pc, #124]	; (8003dcc <responseUART+0x294>)
 8003d50:	2200      	movs	r2, #0
 8003d52:	701a      	strb	r2, [r3, #0]
			//timeStamp = HAL_GetTick();								// Optional
			break;
 8003d54:	e000      	b.n	8003d58 <responseUART+0x220>
			break;
 8003d56:	bf00      	nop
		}
		break;
 8003d58:	e24e      	b.n	80041f8 <responseUART+0x6c0>

	case 6:	// <<<< 95% COMPLETE >>>>
		// Set 1 station
		switch(TxState){
 8003d5a:	4b1c      	ldr	r3, [pc, #112]	; (8003dcc <responseUART+0x294>)
 8003d5c:	781b      	ldrb	r3, [r3, #0]
 8003d5e:	2b00      	cmp	r3, #0
 8003d60:	d01a      	beq.n	8003d98 <responseUART+0x260>
 8003d62:	2b01      	cmp	r3, #1
 8003d64:	f040 824a 	bne.w	80041fc <responseUART+0x6c4>
		case 0:
			break;
		case 1:
			nStation = 1;
 8003d68:	4b24      	ldr	r3, [pc, #144]	; (8003dfc <responseUART+0x2c4>)
 8003d6a:	2201      	movs	r2, #1
 8003d6c:	701a      	strb	r2, [r3, #0]
			nDestination = 1;
 8003d6e:	4b21      	ldr	r3, [pc, #132]	; (8003df4 <responseUART+0x2bc>)
 8003d70:	2201      	movs	r2, #1
 8003d72:	701a      	strb	r2, [r3, #0]
			Destination[0] = tranStation(Receive[1]);
 8003d74:	4b19      	ldr	r3, [pc, #100]	; (8003ddc <responseUART+0x2a4>)
 8003d76:	785b      	ldrb	r3, [r3, #1]
 8003d78:	4618      	mov	r0, r3
 8003d7a:	f000 fa69 	bl	8004250 <tranStation>
 8003d7e:	4603      	mov	r3, r0
 8003d80:	461a      	mov	r2, r3
 8003d82:	4b1d      	ldr	r3, [pc, #116]	; (8003df8 <responseUART+0x2c0>)
 8003d84:	801a      	strh	r2, [r3, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003d86:	2202      	movs	r2, #2
 8003d88:	4911      	ldr	r1, [pc, #68]	; (8003dd0 <responseUART+0x298>)
 8003d8a:	4812      	ldr	r0, [pc, #72]	; (8003dd4 <responseUART+0x29c>)
 8003d8c:	f006 fc80 	bl	800a690 <HAL_UART_Transmit_DMA>
			TxState = 0;
 8003d90:	4b0e      	ldr	r3, [pc, #56]	; (8003dcc <responseUART+0x294>)
 8003d92:	2200      	movs	r2, #0
 8003d94:	701a      	strb	r2, [r3, #0]
			//timeStamp = HAL_GetTick();								// Optional
			break;
 8003d96:	e000      	b.n	8003d9a <responseUART+0x262>
			break;
 8003d98:	bf00      	nop
		}
		break;
 8003d9a:	e22f      	b.n	80041fc <responseUART+0x6c4>

	case 7:
		// set n station
		switch(TxState){
 8003d9c:	4b0b      	ldr	r3, [pc, #44]	; (8003dcc <responseUART+0x294>)
 8003d9e:	781b      	ldrb	r3, [r3, #0]
 8003da0:	2b00      	cmp	r3, #0
 8003da2:	d06c      	beq.n	8003e7e <responseUART+0x346>
 8003da4:	2b01      	cmp	r3, #1
 8003da6:	f040 822b 	bne.w	8004200 <responseUART+0x6c8>
		case 0:
			break;
		case 1:
			nDestination = nStation;
 8003daa:	4b14      	ldr	r3, [pc, #80]	; (8003dfc <responseUART+0x2c4>)
 8003dac:	781a      	ldrb	r2, [r3, #0]
 8003dae:	4b11      	ldr	r3, [pc, #68]	; (8003df4 <responseUART+0x2bc>)
 8003db0:	701a      	strb	r2, [r3, #0]
			for(int i=0; i<(nStation+(nStation%2)); i+=2){
 8003db2:	2300      	movs	r3, #0
 8003db4:	60fb      	str	r3, [r7, #12]
 8003db6:	e04e      	b.n	8003e56 <responseUART+0x31e>
 8003db8:	00000000 	.word	0x00000000
 8003dbc:	406fe000 	.word	0x406fe000
 8003dc0:	00000000 	.word	0x00000000
 8003dc4:	40deaa00 	.word	0x40deaa00
 8003dc8:	2000054c 	.word	0x2000054c
 8003dcc:	20000549 	.word	0x20000549
 8003dd0:	20000020 	.word	0x20000020
 8003dd4:	200003c8 	.word	0x200003c8
 8003dd8:	20000550 	.word	0x20000550
 8003ddc:	20000554 	.word	0x20000554
 8003de0:	2000054a 	.word	0x2000054a
 8003de4:	20000567 	.word	0x20000567
 8003de8:	40020400 	.word	0x40020400
 8003dec:	40240000 	.word	0x40240000
 8003df0:	2000001c 	.word	0x2000001c
 8003df4:	200004d0 	.word	0x200004d0
 8003df8:	200004d4 	.word	0x200004d4
 8003dfc:	20000538 	.word	0x20000538
				Destination[i] = tranStation(Receive[j] & 0x0F);
 8003e00:	4ba4      	ldr	r3, [pc, #656]	; (8004094 <responseUART+0x55c>)
 8003e02:	781b      	ldrb	r3, [r3, #0]
 8003e04:	461a      	mov	r2, r3
 8003e06:	4ba4      	ldr	r3, [pc, #656]	; (8004098 <responseUART+0x560>)
 8003e08:	5c9b      	ldrb	r3, [r3, r2]
 8003e0a:	f003 030f 	and.w	r3, r3, #15
 8003e0e:	b2db      	uxtb	r3, r3
 8003e10:	4618      	mov	r0, r3
 8003e12:	f000 fa1d 	bl	8004250 <tranStation>
 8003e16:	4603      	mov	r3, r0
 8003e18:	4619      	mov	r1, r3
 8003e1a:	4aa0      	ldr	r2, [pc, #640]	; (800409c <responseUART+0x564>)
 8003e1c:	68fb      	ldr	r3, [r7, #12]
 8003e1e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
				Destination[i+1] = tranStation((Receive[j] & 0xF0)>>4);
 8003e22:	4b9c      	ldr	r3, [pc, #624]	; (8004094 <responseUART+0x55c>)
 8003e24:	781b      	ldrb	r3, [r3, #0]
 8003e26:	461a      	mov	r2, r3
 8003e28:	4b9b      	ldr	r3, [pc, #620]	; (8004098 <responseUART+0x560>)
 8003e2a:	5c9b      	ldrb	r3, [r3, r2]
 8003e2c:	091b      	lsrs	r3, r3, #4
 8003e2e:	b2da      	uxtb	r2, r3
 8003e30:	68fb      	ldr	r3, [r7, #12]
 8003e32:	1c5c      	adds	r4, r3, #1
 8003e34:	4610      	mov	r0, r2
 8003e36:	f000 fa0b 	bl	8004250 <tranStation>
 8003e3a:	4603      	mov	r3, r0
 8003e3c:	461a      	mov	r2, r3
 8003e3e:	4b97      	ldr	r3, [pc, #604]	; (800409c <responseUART+0x564>)
 8003e40:	f823 2014 	strh.w	r2, [r3, r4, lsl #1]
				j+=1;
 8003e44:	4b93      	ldr	r3, [pc, #588]	; (8004094 <responseUART+0x55c>)
 8003e46:	781b      	ldrb	r3, [r3, #0]
 8003e48:	3301      	adds	r3, #1
 8003e4a:	b2da      	uxtb	r2, r3
 8003e4c:	4b91      	ldr	r3, [pc, #580]	; (8004094 <responseUART+0x55c>)
 8003e4e:	701a      	strb	r2, [r3, #0]
			for(int i=0; i<(nStation+(nStation%2)); i+=2){
 8003e50:	68fb      	ldr	r3, [r7, #12]
 8003e52:	3302      	adds	r3, #2
 8003e54:	60fb      	str	r3, [r7, #12]
 8003e56:	4b92      	ldr	r3, [pc, #584]	; (80040a0 <responseUART+0x568>)
 8003e58:	781b      	ldrb	r3, [r3, #0]
 8003e5a:	3301      	adds	r3, #1
 8003e5c:	f023 0301 	bic.w	r3, r3, #1
 8003e60:	68fa      	ldr	r2, [r7, #12]
 8003e62:	429a      	cmp	r2, r3
 8003e64:	dbcc      	blt.n	8003e00 <responseUART+0x2c8>
			}
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003e66:	2202      	movs	r2, #2
 8003e68:	498e      	ldr	r1, [pc, #568]	; (80040a4 <responseUART+0x56c>)
 8003e6a:	488f      	ldr	r0, [pc, #572]	; (80040a8 <responseUART+0x570>)
 8003e6c:	f006 fc10 	bl	800a690 <HAL_UART_Transmit_DMA>
			j = 0;
 8003e70:	4b88      	ldr	r3, [pc, #544]	; (8004094 <responseUART+0x55c>)
 8003e72:	2200      	movs	r2, #0
 8003e74:	701a      	strb	r2, [r3, #0]
			TxState = 0;
 8003e76:	4b8d      	ldr	r3, [pc, #564]	; (80040ac <responseUART+0x574>)
 8003e78:	2200      	movs	r2, #0
 8003e7a:	701a      	strb	r2, [r3, #0]
			break;
 8003e7c:	e000      	b.n	8003e80 <responseUART+0x348>
			break;
 8003e7e:	bf00      	nop
		}
		break;
 8003e80:	e1be      	b.n	8004200 <responseUART+0x6c8>

	case 8:	// <<<< 95% COMPLETE >>>>
		// Go!
		switch(TxState){
 8003e82:	4b8a      	ldr	r3, [pc, #552]	; (80040ac <responseUART+0x574>)
 8003e84:	781b      	ldrb	r3, [r3, #0]
 8003e86:	2b00      	cmp	r3, #0
 8003e88:	d00e      	beq.n	8003ea8 <responseUART+0x370>
 8003e8a:	2b01      	cmp	r3, #1
 8003e8c:	f040 81ba 	bne.w	8004204 <responseUART+0x6cc>
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003e90:	2202      	movs	r2, #2
 8003e92:	4984      	ldr	r1, [pc, #528]	; (80040a4 <responseUART+0x56c>)
 8003e94:	4884      	ldr	r0, [pc, #528]	; (80040a8 <responseUART+0x570>)
 8003e96:	f006 fbfb 	bl	800a690 <HAL_UART_Transmit_DMA>
			movingFlag = 8;
 8003e9a:	4b85      	ldr	r3, [pc, #532]	; (80040b0 <responseUART+0x578>)
 8003e9c:	2208      	movs	r2, #8
 8003e9e:	701a      	strb	r2, [r3, #0]
			TxState = 0;
 8003ea0:	4b82      	ldr	r3, [pc, #520]	; (80040ac <responseUART+0x574>)
 8003ea2:	2200      	movs	r2, #0
 8003ea4:	701a      	strb	r2, [r3, #0]
			//timeStamp = HAL_GetTick();								// Optional
			break;
 8003ea6:	e000      	b.n	8003eaa <responseUART+0x372>
			break;
 8003ea8:	bf00      	nop
		}
		break;
 8003eaa:	e1ab      	b.n	8004204 <responseUART+0x6cc>

	case 9:	// <<<< 95% COMPLETE >>>>
		// transmit station
		switch(TxState){
 8003eac:	4b7f      	ldr	r3, [pc, #508]	; (80040ac <responseUART+0x574>)
 8003eae:	781b      	ldrb	r3, [r3, #0]
 8003eb0:	2b04      	cmp	r3, #4
 8003eb2:	f200 81a9 	bhi.w	8004208 <responseUART+0x6d0>
 8003eb6:	a201      	add	r2, pc, #4	; (adr r2, 8003ebc <responseUART+0x384>)
 8003eb8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003ebc:	08003f51 	.word	0x08003f51
 8003ec0:	08003ed1 	.word	0x08003ed1
 8003ec4:	08003ee3 	.word	0x08003ee3
 8003ec8:	08003f1d 	.word	0x08003f1d
 8003ecc:	08003f3b 	.word	0x08003f3b
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003ed0:	2202      	movs	r2, #2
 8003ed2:	4974      	ldr	r1, [pc, #464]	; (80040a4 <responseUART+0x56c>)
 8003ed4:	4874      	ldr	r0, [pc, #464]	; (80040a8 <responseUART+0x570>)
 8003ed6:	f006 fbdb 	bl	800a690 <HAL_UART_Transmit_DMA>
			TxState = 2;
 8003eda:	4b74      	ldr	r3, [pc, #464]	; (80040ac <responseUART+0x574>)
 8003edc:	2202      	movs	r2, #2
 8003ede:	701a      	strb	r2, [r3, #0]
			break;
 8003ee0:	e03b      	b.n	8003f5a <responseUART+0x422>
		case 2:
			Transmit[0] = 0b10011001;								// Store byte to Transmit.
 8003ee2:	4b74      	ldr	r3, [pc, #464]	; (80040b4 <responseUART+0x57c>)
 8003ee4:	2299      	movs	r2, #153	; 0x99
 8003ee6:	701a      	strb	r2, [r3, #0]
			Transmit[1] = 0;
 8003ee8:	4b72      	ldr	r3, [pc, #456]	; (80040b4 <responseUART+0x57c>)
 8003eea:	2200      	movs	r2, #0
 8003eec:	705a      	strb	r2, [r3, #1]
			Transmit[2] = nowStation;								// Value from state machine.
 8003eee:	4b72      	ldr	r3, [pc, #456]	; (80040b8 <responseUART+0x580>)
 8003ef0:	781a      	ldrb	r2, [r3, #0]
 8003ef2:	4b70      	ldr	r3, [pc, #448]	; (80040b4 <responseUART+0x57c>)
 8003ef4:	709a      	strb	r2, [r3, #2]
			Transmit[3] = checkSum(frameSum(Transmit, 3));			// Let the last byte equal to checksum of 1st-3rd byte.
 8003ef6:	2103      	movs	r1, #3
 8003ef8:	486e      	ldr	r0, [pc, #440]	; (80040b4 <responseUART+0x57c>)
 8003efa:	f000 fa64 	bl	80043c6 <frameSum>
 8003efe:	4603      	mov	r3, r0
 8003f00:	4618      	mov	r0, r3
 8003f02:	f000 fa4d 	bl	80043a0 <checkSum>
 8003f06:	4603      	mov	r3, r0
 8003f08:	461a      	mov	r2, r3
 8003f0a:	4b6a      	ldr	r3, [pc, #424]	; (80040b4 <responseUART+0x57c>)
 8003f0c:	70da      	strb	r2, [r3, #3]
			RxState = 3;
 8003f0e:	4b6b      	ldr	r3, [pc, #428]	; (80040bc <responseUART+0x584>)
 8003f10:	2203      	movs	r2, #3
 8003f12:	701a      	strb	r2, [r3, #0]
			TxState = 3;
 8003f14:	4b65      	ldr	r3, [pc, #404]	; (80040ac <responseUART+0x574>)
 8003f16:	2203      	movs	r2, #3
 8003f18:	701a      	strb	r2, [r3, #0]
			break;
 8003f1a:	e01e      	b.n	8003f5a <responseUART+0x422>
		case 3:
			if(huart2.gState == HAL_UART_STATE_READY){
 8003f1c:	4b62      	ldr	r3, [pc, #392]	; (80040a8 <responseUART+0x570>)
 8003f1e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003f22:	b2db      	uxtb	r3, r3
 8003f24:	2b20      	cmp	r3, #32
 8003f26:	d115      	bne.n	8003f54 <responseUART+0x41c>
				HAL_UART_Transmit_DMA(&huart2, Transmit, 4);		// Transmit command back.
 8003f28:	2204      	movs	r2, #4
 8003f2a:	4962      	ldr	r1, [pc, #392]	; (80040b4 <responseUART+0x57c>)
 8003f2c:	485e      	ldr	r0, [pc, #376]	; (80040a8 <responseUART+0x570>)
 8003f2e:	f006 fbaf 	bl	800a690 <HAL_UART_Transmit_DMA>
				TxState = 4;
 8003f32:	4b5e      	ldr	r3, [pc, #376]	; (80040ac <responseUART+0x574>)
 8003f34:	2204      	movs	r2, #4
 8003f36:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003f38:	e00c      	b.n	8003f54 <responseUART+0x41c>
		case 4:
			if(ACKFlag){
 8003f3a:	4b61      	ldr	r3, [pc, #388]	; (80040c0 <responseUART+0x588>)
 8003f3c:	781b      	ldrb	r3, [r3, #0]
 8003f3e:	2b00      	cmp	r3, #0
 8003f40:	d00a      	beq.n	8003f58 <responseUART+0x420>
				ACKFlag = 0;
 8003f42:	4b5f      	ldr	r3, [pc, #380]	; (80040c0 <responseUART+0x588>)
 8003f44:	2200      	movs	r2, #0
 8003f46:	701a      	strb	r2, [r3, #0]
				TxState = 0;
 8003f48:	4b58      	ldr	r3, [pc, #352]	; (80040ac <responseUART+0x574>)
 8003f4a:	2200      	movs	r2, #0
 8003f4c:	701a      	strb	r2, [r3, #0]
			}
			break;
 8003f4e:	e003      	b.n	8003f58 <responseUART+0x420>
			break;
 8003f50:	bf00      	nop
 8003f52:	e159      	b.n	8004208 <responseUART+0x6d0>
			break;
 8003f54:	bf00      	nop
 8003f56:	e157      	b.n	8004208 <responseUART+0x6d0>
			break;
 8003f58:	bf00      	nop
		}
		break;
 8003f5a:	e155      	b.n	8004208 <responseUART+0x6d0>

	case 10:	// <<<< 95% COMPLETE >>>>
		// transmit theta (rad variable)
		switch(TxState){
 8003f5c:	4b53      	ldr	r3, [pc, #332]	; (80040ac <responseUART+0x574>)
 8003f5e:	781b      	ldrb	r3, [r3, #0]
 8003f60:	2b04      	cmp	r3, #4
 8003f62:	f200 8153 	bhi.w	800420c <responseUART+0x6d4>
 8003f66:	a201      	add	r2, pc, #4	; (adr r2, 8003f6c <responseUART+0x434>)
 8003f68:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f6c:	08004051 	.word	0x08004051
 8003f70:	08003f81 	.word	0x08003f81
 8003f74:	08003f93 	.word	0x08003f93
 8003f78:	0800401d 	.word	0x0800401d
 8003f7c:	0800403b 	.word	0x0800403b
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8003f80:	2202      	movs	r2, #2
 8003f82:	4948      	ldr	r1, [pc, #288]	; (80040a4 <responseUART+0x56c>)
 8003f84:	4848      	ldr	r0, [pc, #288]	; (80040a8 <responseUART+0x570>)
 8003f86:	f006 fb83 	bl	800a690 <HAL_UART_Transmit_DMA>
			TxState = 2;
 8003f8a:	4b48      	ldr	r3, [pc, #288]	; (80040ac <responseUART+0x574>)
 8003f8c:	2202      	movs	r2, #2
 8003f8e:	701a      	strb	r2, [r3, #0]
			break;
 8003f90:	e063      	b.n	800405a <responseUART+0x522>
		case 2:
			Transmit[0] = 0b10011010;								// Store byte to Transmit.
 8003f92:	4b48      	ldr	r3, [pc, #288]	; (80040b4 <responseUART+0x57c>)
 8003f94:	229a      	movs	r2, #154	; 0x9a
 8003f96:	701a      	strb	r2, [r3, #0]
			Transmit[1] = ( (uint16_t)(current_rad_wrap*10000)) >> 8;									// 16bit value from encoder.
 8003f98:	4b4a      	ldr	r3, [pc, #296]	; (80040c4 <responseUART+0x58c>)
 8003f9a:	edd3 7a00 	vldr	s15, [r3]
 8003f9e:	ed9f 7a4a 	vldr	s14, [pc, #296]	; 80040c8 <responseUART+0x590>
 8003fa2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003fa6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003faa:	ee17 3a90 	vmov	r3, s15
 8003fae:	b29b      	uxth	r3, r3
 8003fb0:	0a1b      	lsrs	r3, r3, #8
 8003fb2:	b29b      	uxth	r3, r3
 8003fb4:	b2da      	uxtb	r2, r3
 8003fb6:	4b3f      	ldr	r3, [pc, #252]	; (80040b4 <responseUART+0x57c>)
 8003fb8:	705a      	strb	r2, [r3, #1]
			Transmit[2] = ( (uint16_t)(current_rad_wrap*10000)) & 0xFF;
 8003fba:	4b42      	ldr	r3, [pc, #264]	; (80040c4 <responseUART+0x58c>)
 8003fbc:	edd3 7a00 	vldr	s15, [r3]
 8003fc0:	ed9f 7a41 	vldr	s14, [pc, #260]	; 80040c8 <responseUART+0x590>
 8003fc4:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003fc8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003fcc:	ee17 3a90 	vmov	r3, s15
 8003fd0:	b29b      	uxth	r3, r3
 8003fd2:	b2da      	uxtb	r2, r3
 8003fd4:	4b37      	ldr	r3, [pc, #220]	; (80040b4 <responseUART+0x57c>)
 8003fd6:	709a      	strb	r2, [r3, #2]
			if(HAL_GetTick()-HMEtimeStamp < 1000){
 8003fd8:	f000 fdda 	bl	8004b90 <HAL_GetTick>
 8003fdc:	4603      	mov	r3, r0
 8003fde:	4a3b      	ldr	r2, [pc, #236]	; (80040cc <responseUART+0x594>)
 8003fe0:	8812      	ldrh	r2, [r2, #0]
 8003fe2:	1a9b      	subs	r3, r3, r2
 8003fe4:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8003fe8:	d205      	bcs.n	8003ff6 <responseUART+0x4be>
				Transmit[1] = 0;
 8003fea:	4b32      	ldr	r3, [pc, #200]	; (80040b4 <responseUART+0x57c>)
 8003fec:	2200      	movs	r2, #0
 8003fee:	705a      	strb	r2, [r3, #1]
				Transmit[2] = 0;
 8003ff0:	4b30      	ldr	r3, [pc, #192]	; (80040b4 <responseUART+0x57c>)
 8003ff2:	2200      	movs	r2, #0
 8003ff4:	709a      	strb	r2, [r3, #2]
			}
			Transmit[3] = checkSum(frameSum(Transmit, 3));			// Let the last byte equal to checksum of 1st-3rd byte.
 8003ff6:	2103      	movs	r1, #3
 8003ff8:	482e      	ldr	r0, [pc, #184]	; (80040b4 <responseUART+0x57c>)
 8003ffa:	f000 f9e4 	bl	80043c6 <frameSum>
 8003ffe:	4603      	mov	r3, r0
 8004000:	4618      	mov	r0, r3
 8004002:	f000 f9cd 	bl	80043a0 <checkSum>
 8004006:	4603      	mov	r3, r0
 8004008:	461a      	mov	r2, r3
 800400a:	4b2a      	ldr	r3, [pc, #168]	; (80040b4 <responseUART+0x57c>)
 800400c:	70da      	strb	r2, [r3, #3]
			RxState = 3;
 800400e:	4b2b      	ldr	r3, [pc, #172]	; (80040bc <responseUART+0x584>)
 8004010:	2203      	movs	r2, #3
 8004012:	701a      	strb	r2, [r3, #0]
			TxState = 3;
 8004014:	4b25      	ldr	r3, [pc, #148]	; (80040ac <responseUART+0x574>)
 8004016:	2203      	movs	r2, #3
 8004018:	701a      	strb	r2, [r3, #0]
			break;
 800401a:	e01e      	b.n	800405a <responseUART+0x522>
		case 3:
			if(huart2.gState == HAL_UART_STATE_READY){
 800401c:	4b22      	ldr	r3, [pc, #136]	; (80040a8 <responseUART+0x570>)
 800401e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8004022:	b2db      	uxtb	r3, r3
 8004024:	2b20      	cmp	r3, #32
 8004026:	d115      	bne.n	8004054 <responseUART+0x51c>
				HAL_UART_Transmit_DMA(&huart2, Transmit, 4);		// Transmit command back.
 8004028:	2204      	movs	r2, #4
 800402a:	4922      	ldr	r1, [pc, #136]	; (80040b4 <responseUART+0x57c>)
 800402c:	481e      	ldr	r0, [pc, #120]	; (80040a8 <responseUART+0x570>)
 800402e:	f006 fb2f 	bl	800a690 <HAL_UART_Transmit_DMA>
				TxState = 4;
 8004032:	4b1e      	ldr	r3, [pc, #120]	; (80040ac <responseUART+0x574>)
 8004034:	2204      	movs	r2, #4
 8004036:	701a      	strb	r2, [r3, #0]
			}
			break;
 8004038:	e00c      	b.n	8004054 <responseUART+0x51c>
		case 4:
			if(ACKFlag){
 800403a:	4b21      	ldr	r3, [pc, #132]	; (80040c0 <responseUART+0x588>)
 800403c:	781b      	ldrb	r3, [r3, #0]
 800403e:	2b00      	cmp	r3, #0
 8004040:	d00a      	beq.n	8004058 <responseUART+0x520>
				ACKFlag = 0;
 8004042:	4b1f      	ldr	r3, [pc, #124]	; (80040c0 <responseUART+0x588>)
 8004044:	2200      	movs	r2, #0
 8004046:	701a      	strb	r2, [r3, #0]
				TxState = 0;
 8004048:	4b18      	ldr	r3, [pc, #96]	; (80040ac <responseUART+0x574>)
 800404a:	2200      	movs	r2, #0
 800404c:	701a      	strb	r2, [r3, #0]
			}
			break;
 800404e:	e003      	b.n	8004058 <responseUART+0x520>
			break;
 8004050:	bf00      	nop
 8004052:	e0db      	b.n	800420c <responseUART+0x6d4>
			break;
 8004054:	bf00      	nop
 8004056:	e0d9      	b.n	800420c <responseUART+0x6d4>
			break;
 8004058:	bf00      	nop
		}
		break;
 800405a:	e0d7      	b.n	800420c <responseUART+0x6d4>

	case 11:	// <<<< 95% COMPLETE >>>>
		// transmit top omega (rad variable)
		switch(TxState){
 800405c:	4b13      	ldr	r3, [pc, #76]	; (80040ac <responseUART+0x574>)
 800405e:	781b      	ldrb	r3, [r3, #0]
 8004060:	2b04      	cmp	r3, #4
 8004062:	f200 80d5 	bhi.w	8004210 <responseUART+0x6d8>
 8004066:	a201      	add	r2, pc, #4	; (adr r2, 800406c <responseUART+0x534>)
 8004068:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800406c:	0800415d 	.word	0x0800415d
 8004070:	08004081 	.word	0x08004081
 8004074:	080040d1 	.word	0x080040d1
 8004078:	08004129 	.word	0x08004129
 800407c:	08004147 	.word	0x08004147
		case 0:
			break;
		case 1:
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8004080:	2202      	movs	r2, #2
 8004082:	4908      	ldr	r1, [pc, #32]	; (80040a4 <responseUART+0x56c>)
 8004084:	4808      	ldr	r0, [pc, #32]	; (80040a8 <responseUART+0x570>)
 8004086:	f006 fb03 	bl	800a690 <HAL_UART_Transmit_DMA>
			TxState = 2;
 800408a:	4b08      	ldr	r3, [pc, #32]	; (80040ac <responseUART+0x574>)
 800408c:	2202      	movs	r2, #2
 800408e:	701a      	strb	r2, [r3, #0]
			break;
 8004090:	e069      	b.n	8004166 <responseUART+0x62e>
 8004092:	bf00      	nop
 8004094:	2000053a 	.word	0x2000053a
 8004098:	20000554 	.word	0x20000554
 800409c:	200004d4 	.word	0x200004d4
 80040a0:	20000538 	.word	0x20000538
 80040a4:	20000020 	.word	0x20000020
 80040a8:	200003c8 	.word	0x200003c8
 80040ac:	20000549 	.word	0x20000549
 80040b0:	2000053c 	.word	0x2000053c
 80040b4:	20000550 	.word	0x20000550
 80040b8:	20000539 	.word	0x20000539
 80040bc:	2000054a 	.word	0x2000054a
 80040c0:	20000567 	.word	0x20000567
 80040c4:	20000580 	.word	0x20000580
 80040c8:	461c4000 	.word	0x461c4000
 80040cc:	2000056c 	.word	0x2000056c
		case 2:
			Transmit[0] = 0b10011011;								// Store byte to Transmit.
 80040d0:	4b54      	ldr	r3, [pc, #336]	; (8004224 <responseUART+0x6ec>)
 80040d2:	229b      	movs	r2, #155	; 0x9b
 80040d4:	701a      	strb	r2, [r3, #0]
			Transmit[1] = 0;
 80040d6:	4b53      	ldr	r3, [pc, #332]	; (8004224 <responseUART+0x6ec>)
 80040d8:	2200      	movs	r2, #0
 80040da:	705a      	strb	r2, [r3, #1]
			Transmit[2] = (topOmega*255)/(10);
 80040dc:	4b52      	ldr	r3, [pc, #328]	; (8004228 <responseUART+0x6f0>)
 80040de:	edd3 7a00 	vldr	s15, [r3]
 80040e2:	ed9f 7a52 	vldr	s14, [pc, #328]	; 800422c <responseUART+0x6f4>
 80040e6:	ee27 7a87 	vmul.f32	s14, s15, s14
 80040ea:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 80040ee:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80040f2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80040f6:	edc7 7a01 	vstr	s15, [r7, #4]
 80040fa:	793b      	ldrb	r3, [r7, #4]
 80040fc:	b2da      	uxtb	r2, r3
 80040fe:	4b49      	ldr	r3, [pc, #292]	; (8004224 <responseUART+0x6ec>)
 8004100:	709a      	strb	r2, [r3, #2]
			// Transmit[2] = ((topOmega*255)/(10))
			Transmit[3] = checkSum(frameSum(Transmit, 3));			// Let the last byte equal to checksum of 1st-3rd byte.
 8004102:	2103      	movs	r1, #3
 8004104:	4847      	ldr	r0, [pc, #284]	; (8004224 <responseUART+0x6ec>)
 8004106:	f000 f95e 	bl	80043c6 <frameSum>
 800410a:	4603      	mov	r3, r0
 800410c:	4618      	mov	r0, r3
 800410e:	f000 f947 	bl	80043a0 <checkSum>
 8004112:	4603      	mov	r3, r0
 8004114:	461a      	mov	r2, r3
 8004116:	4b43      	ldr	r3, [pc, #268]	; (8004224 <responseUART+0x6ec>)
 8004118:	70da      	strb	r2, [r3, #3]
			RxState = 3;
 800411a:	4b45      	ldr	r3, [pc, #276]	; (8004230 <responseUART+0x6f8>)
 800411c:	2203      	movs	r2, #3
 800411e:	701a      	strb	r2, [r3, #0]
			TxState = 3;
 8004120:	4b44      	ldr	r3, [pc, #272]	; (8004234 <responseUART+0x6fc>)
 8004122:	2203      	movs	r2, #3
 8004124:	701a      	strb	r2, [r3, #0]
			break;
 8004126:	e01e      	b.n	8004166 <responseUART+0x62e>
		case 3:
			if(huart2.gState == HAL_UART_STATE_READY){
 8004128:	4b43      	ldr	r3, [pc, #268]	; (8004238 <responseUART+0x700>)
 800412a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800412e:	b2db      	uxtb	r3, r3
 8004130:	2b20      	cmp	r3, #32
 8004132:	d115      	bne.n	8004160 <responseUART+0x628>
				HAL_UART_Transmit_DMA(&huart2, Transmit, 4);		// Transmit command back.
 8004134:	2204      	movs	r2, #4
 8004136:	493b      	ldr	r1, [pc, #236]	; (8004224 <responseUART+0x6ec>)
 8004138:	483f      	ldr	r0, [pc, #252]	; (8004238 <responseUART+0x700>)
 800413a:	f006 faa9 	bl	800a690 <HAL_UART_Transmit_DMA>
				TxState = 4;
 800413e:	4b3d      	ldr	r3, [pc, #244]	; (8004234 <responseUART+0x6fc>)
 8004140:	2204      	movs	r2, #4
 8004142:	701a      	strb	r2, [r3, #0]
			}
			break;
 8004144:	e00c      	b.n	8004160 <responseUART+0x628>
		case 4:
			if(ACKFlag){
 8004146:	4b3d      	ldr	r3, [pc, #244]	; (800423c <responseUART+0x704>)
 8004148:	781b      	ldrb	r3, [r3, #0]
 800414a:	2b00      	cmp	r3, #0
 800414c:	d00a      	beq.n	8004164 <responseUART+0x62c>
				ACKFlag = 0;
 800414e:	4b3b      	ldr	r3, [pc, #236]	; (800423c <responseUART+0x704>)
 8004150:	2200      	movs	r2, #0
 8004152:	701a      	strb	r2, [r3, #0]
				TxState = 0;
 8004154:	4b37      	ldr	r3, [pc, #220]	; (8004234 <responseUART+0x6fc>)
 8004156:	2200      	movs	r2, #0
 8004158:	701a      	strb	r2, [r3, #0]
			}
			break;
 800415a:	e003      	b.n	8004164 <responseUART+0x62c>
			break;
 800415c:	bf00      	nop
 800415e:	e057      	b.n	8004210 <responseUART+0x6d8>
			break;
 8004160:	bf00      	nop
 8004162:	e055      	b.n	8004210 <responseUART+0x6d8>
			break;
 8004164:	bf00      	nop
		}
		break;
 8004166:	e053      	b.n	8004210 <responseUART+0x6d8>

	case 12:
		// Enable end-effector
		switch(TxState){
 8004168:	4b32      	ldr	r3, [pc, #200]	; (8004234 <responseUART+0x6fc>)
 800416a:	781b      	ldrb	r3, [r3, #0]
 800416c:	2b00      	cmp	r3, #0
 800416e:	d002      	beq.n	8004176 <responseUART+0x63e>
 8004170:	2b01      	cmp	r3, #1
 8004172:	d004      	beq.n	800417e <responseUART+0x646>
			NFenable = 1;
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
			TxState = 0;
			break;
		}
		break;
 8004174:	e051      	b.n	800421a <responseUART+0x6e2>
			if(huart2.gState == HAL_UART_STATE_READY){
 8004176:	4b30      	ldr	r3, [pc, #192]	; (8004238 <responseUART+0x700>)
 8004178:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
			break;
 800417c:	e00b      	b.n	8004196 <responseUART+0x65e>
			NFenable = 1;
 800417e:	4b30      	ldr	r3, [pc, #192]	; (8004240 <responseUART+0x708>)
 8004180:	2201      	movs	r2, #1
 8004182:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 8004184:	2202      	movs	r2, #2
 8004186:	492f      	ldr	r1, [pc, #188]	; (8004244 <responseUART+0x70c>)
 8004188:	482b      	ldr	r0, [pc, #172]	; (8004238 <responseUART+0x700>)
 800418a:	f006 fa81 	bl	800a690 <HAL_UART_Transmit_DMA>
			TxState = 0;
 800418e:	4b29      	ldr	r3, [pc, #164]	; (8004234 <responseUART+0x6fc>)
 8004190:	2200      	movs	r2, #0
 8004192:	701a      	strb	r2, [r3, #0]
			break;
 8004194:	bf00      	nop
		break;
 8004196:	e040      	b.n	800421a <responseUART+0x6e2>

	case 13:
		// Disable end-effector
		switch(TxState){
 8004198:	4b26      	ldr	r3, [pc, #152]	; (8004234 <responseUART+0x6fc>)
 800419a:	781b      	ldrb	r3, [r3, #0]
 800419c:	2b00      	cmp	r3, #0
 800419e:	d00d      	beq.n	80041bc <responseUART+0x684>
 80041a0:	2b01      	cmp	r3, #1
 80041a2:	d137      	bne.n	8004214 <responseUART+0x6dc>
		case 0:
			break;
		case 1:
			NFenable = 0;
 80041a4:	4b26      	ldr	r3, [pc, #152]	; (8004240 <responseUART+0x708>)
 80041a6:	2200      	movs	r2, #0
 80041a8:	701a      	strb	r2, [r3, #0]
			HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 80041aa:	2202      	movs	r2, #2
 80041ac:	4925      	ldr	r1, [pc, #148]	; (8004244 <responseUART+0x70c>)
 80041ae:	4822      	ldr	r0, [pc, #136]	; (8004238 <responseUART+0x700>)
 80041b0:	f006 fa6e 	bl	800a690 <HAL_UART_Transmit_DMA>
			TxState = 0;
 80041b4:	4b1f      	ldr	r3, [pc, #124]	; (8004234 <responseUART+0x6fc>)
 80041b6:	2200      	movs	r2, #0
 80041b8:	701a      	strb	r2, [r3, #0]
			break;
 80041ba:	e000      	b.n	80041be <responseUART+0x686>
			break;
 80041bc:	bf00      	nop
		}
		break;
 80041be:	e029      	b.n	8004214 <responseUART+0x6dc>

	case 14:	// <<<< 95% COMPLETE >>>>
		// Set home
		switch(TxState){
 80041c0:	4b1c      	ldr	r3, [pc, #112]	; (8004234 <responseUART+0x6fc>)
 80041c2:	781b      	ldrb	r3, [r3, #0]
 80041c4:	2b00      	cmp	r3, #0
 80041c6:	d00b      	beq.n	80041e0 <responseUART+0x6a8>
 80041c8:	2b01      	cmp	r3, #1
 80041ca:	d125      	bne.n	8004218 <responseUART+0x6e0>
		case 0:
			break;
		case 1:
			//HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
			setzero = 1;
 80041cc:	4b1e      	ldr	r3, [pc, #120]	; (8004248 <responseUART+0x710>)
 80041ce:	2201      	movs	r2, #1
 80041d0:	701a      	strb	r2, [r3, #0]
			movingFlag = 14;
 80041d2:	4b1e      	ldr	r3, [pc, #120]	; (800424c <responseUART+0x714>)
 80041d4:	220e      	movs	r2, #14
 80041d6:	701a      	strb	r2, [r3, #0]
			TxState = 0;
 80041d8:	4b16      	ldr	r3, [pc, #88]	; (8004234 <responseUART+0x6fc>)
 80041da:	2200      	movs	r2, #0
 80041dc:	701a      	strb	r2, [r3, #0]
			//timeStamp = HAL_GetTick();								// Optional
			break;
 80041de:	e000      	b.n	80041e2 <responseUART+0x6aa>
			break;
 80041e0:	bf00      	nop
		}
		break;
 80041e2:	e019      	b.n	8004218 <responseUART+0x6e0>
		break;
 80041e4:	bf00      	nop
 80041e6:	e018      	b.n	800421a <responseUART+0x6e2>
		break;
 80041e8:	bf00      	nop
 80041ea:	e016      	b.n	800421a <responseUART+0x6e2>
		break;
 80041ec:	bf00      	nop
 80041ee:	e014      	b.n	800421a <responseUART+0x6e2>
		break;
 80041f0:	bf00      	nop
 80041f2:	e012      	b.n	800421a <responseUART+0x6e2>
		break;
 80041f4:	bf00      	nop
 80041f6:	e010      	b.n	800421a <responseUART+0x6e2>
		break;
 80041f8:	bf00      	nop
 80041fa:	e00e      	b.n	800421a <responseUART+0x6e2>
		break;
 80041fc:	bf00      	nop
 80041fe:	e00c      	b.n	800421a <responseUART+0x6e2>
		break;
 8004200:	bf00      	nop
 8004202:	e00a      	b.n	800421a <responseUART+0x6e2>
		break;
 8004204:	bf00      	nop
 8004206:	e008      	b.n	800421a <responseUART+0x6e2>
		break;
 8004208:	bf00      	nop
 800420a:	e006      	b.n	800421a <responseUART+0x6e2>
		break;
 800420c:	bf00      	nop
 800420e:	e004      	b.n	800421a <responseUART+0x6e2>
		break;
 8004210:	bf00      	nop
 8004212:	e002      	b.n	800421a <responseUART+0x6e2>
		break;
 8004214:	bf00      	nop
 8004216:	e000      	b.n	800421a <responseUART+0x6e2>
		break;
 8004218:	bf00      	nop
	}
}
 800421a:	bf00      	nop
 800421c:	3714      	adds	r7, #20
 800421e:	46bd      	mov	sp, r7
 8004220:	bd90      	pop	{r4, r7, pc}
 8004222:	bf00      	nop
 8004224:	20000550 	.word	0x20000550
 8004228:	20000544 	.word	0x20000544
 800422c:	437f0000 	.word	0x437f0000
 8004230:	2000054a 	.word	0x2000054a
 8004234:	20000549 	.word	0x20000549
 8004238:	200003c8 	.word	0x200003c8
 800423c:	20000567 	.word	0x20000567
 8004240:	20000029 	.word	0x20000029
 8004244:	20000020 	.word	0x20000020
 8004248:	20000014 	.word	0x20000014
 800424c:	2000053c 	.word	0x2000053c

08004250 <tranStation>:

uint16_t tranStation(uint8_t num){
 8004250:	b480      	push	{r7}
 8004252:	b083      	sub	sp, #12
 8004254:	af00      	add	r7, sp, #0
 8004256:	4603      	mov	r3, r0
 8004258:	71fb      	strb	r3, [r7, #7]
	switch(num){
 800425a:	79fb      	ldrb	r3, [r7, #7]
 800425c:	3b01      	subs	r3, #1
 800425e:	2b09      	cmp	r3, #9
 8004260:	d82b      	bhi.n	80042ba <tranStation+0x6a>
 8004262:	a201      	add	r2, pc, #4	; (adr r2, 8004268 <tranStation+0x18>)
 8004264:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004268:	08004291 	.word	0x08004291
 800426c:	08004295 	.word	0x08004295
 8004270:	08004299 	.word	0x08004299
 8004274:	0800429f 	.word	0x0800429f
 8004278:	080042a3 	.word	0x080042a3
 800427c:	080042a7 	.word	0x080042a7
 8004280:	080042ab 	.word	0x080042ab
 8004284:	080042af 	.word	0x080042af
 8004288:	080042b3 	.word	0x080042b3
 800428c:	080042b7 	.word	0x080042b7
	case 1:
		return 90;
 8004290:	235a      	movs	r3, #90	; 0x5a
 8004292:	e012      	b.n	80042ba <tranStation+0x6a>
		break;
	case 2:
		return 180;
 8004294:	23b4      	movs	r3, #180	; 0xb4
 8004296:	e010      	b.n	80042ba <tranStation+0x6a>
		break;
	case 3:
		return 270;
 8004298:	f44f 7387 	mov.w	r3, #270	; 0x10e
 800429c:	e00d      	b.n	80042ba <tranStation+0x6a>
		break;
	case 4:
		return 0;
 800429e:	2300      	movs	r3, #0
 80042a0:	e00b      	b.n	80042ba <tranStation+0x6a>
		break;
	case 5:
		return 180;
 80042a2:	23b4      	movs	r3, #180	; 0xb4
 80042a4:	e009      	b.n	80042ba <tranStation+0x6a>
		break;
	case 6:
		return 210;
 80042a6:	23d2      	movs	r3, #210	; 0xd2
 80042a8:	e007      	b.n	80042ba <tranStation+0x6a>
		break;
	case 7:
		return 250;
 80042aa:	23fa      	movs	r3, #250	; 0xfa
 80042ac:	e005      	b.n	80042ba <tranStation+0x6a>
		break;
	case 8:
		return 180;
 80042ae:	23b4      	movs	r3, #180	; 0xb4
 80042b0:	e003      	b.n	80042ba <tranStation+0x6a>
		break;
	case 9:
		return 90;
 80042b2:	235a      	movs	r3, #90	; 0x5a
 80042b4:	e001      	b.n	80042ba <tranStation+0x6a>
		break;
	case 10:
		return 0;
 80042b6:	2300      	movs	r3, #0
 80042b8:	e7ff      	b.n	80042ba <tranStation+0x6a>
		break;
	}
}
 80042ba:	4618      	mov	r0, r3
 80042bc:	370c      	adds	r7, #12
 80042be:	46bd      	mov	sp, r7
 80042c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042c4:	4770      	bx	lr
 80042c6:	bf00      	nop

080042c8 <destinationACK>:

void destinationACK(){
 80042c8:	b580      	push	{r7, lr}
 80042ca:	af00      	add	r7, sp, #0
	if(movingFlag != 0 && Reached ){
 80042cc:	4b11      	ldr	r3, [pc, #68]	; (8004314 <destinationACK+0x4c>)
 80042ce:	781b      	ldrb	r3, [r3, #0]
 80042d0:	2b00      	cmp	r3, #0
 80042d2:	d01c      	beq.n	800430e <destinationACK+0x46>
 80042d4:	4b10      	ldr	r3, [pc, #64]	; (8004318 <destinationACK+0x50>)
 80042d6:	781b      	ldrb	r3, [r3, #0]
 80042d8:	2b00      	cmp	r3, #0
 80042da:	d018      	beq.n	800430e <destinationACK+0x46>
		//((HAL_GetTick()-timeStamp > 10000) || Reached)
	    switch(movingFlag){
 80042dc:	4b0d      	ldr	r3, [pc, #52]	; (8004314 <destinationACK+0x4c>)
 80042de:	781b      	ldrb	r3, [r3, #0]
 80042e0:	2b08      	cmp	r3, #8
 80042e2:	d002      	beq.n	80042ea <destinationACK+0x22>
 80042e4:	2b0e      	cmp	r3, #14
 80042e6:	d006      	beq.n	80042f6 <destinationACK+0x2e>
 80042e8:	e00b      	b.n	8004302 <destinationACK+0x3a>
	    case 8:
		  HAL_UART_Transmit_DMA(&huart2, ACK2, 2);
 80042ea:	2202      	movs	r2, #2
 80042ec:	490b      	ldr	r1, [pc, #44]	; (800431c <destinationACK+0x54>)
 80042ee:	480c      	ldr	r0, [pc, #48]	; (8004320 <destinationACK+0x58>)
 80042f0:	f006 f9ce 	bl	800a690 <HAL_UART_Transmit_DMA>
		  break;
 80042f4:	e005      	b.n	8004302 <destinationACK+0x3a>
	    case 14:
	    	HAL_UART_Transmit_DMA(&huart2, ACK1, 2);
 80042f6:	2202      	movs	r2, #2
 80042f8:	490a      	ldr	r1, [pc, #40]	; (8004324 <destinationACK+0x5c>)
 80042fa:	4809      	ldr	r0, [pc, #36]	; (8004320 <destinationACK+0x58>)
 80042fc:	f006 f9c8 	bl	800a690 <HAL_UART_Transmit_DMA>
		  break;
 8004300:	bf00      	nop
	    }
	    movingFlag = 0;
 8004302:	4b04      	ldr	r3, [pc, #16]	; (8004314 <destinationACK+0x4c>)
 8004304:	2200      	movs	r2, #0
 8004306:	701a      	strb	r2, [r3, #0]
	    Reached = 0;
 8004308:	4b03      	ldr	r3, [pc, #12]	; (8004318 <destinationACK+0x50>)
 800430a:	2200      	movs	r2, #0
 800430c:	701a      	strb	r2, [r3, #0]
  }
}
 800430e:	bf00      	nop
 8004310:	bd80      	pop	{r7, pc}
 8004312:	bf00      	nop
 8004314:	2000053c 	.word	0x2000053c
 8004318:	2000053b 	.word	0x2000053b
 800431c:	20000024 	.word	0x20000024
 8004320:	200003c8 	.word	0x200003c8
 8004324:	20000020 	.word	0x20000020

08004328 <frameConfig>:

uint8_t frameConfig(uint8_t mode){
 8004328:	b480      	push	{r7}
 800432a:	b083      	sub	sp, #12
 800432c:	af00      	add	r7, sp, #0
 800432e:	4603      	mov	r3, r0
 8004330:	71fb      	strb	r3, [r7, #7]
	if(mode == 2 || mode == 3 || mode == 8 || mode == 9 || mode == 10 || mode == 11 || mode == 12 || mode == 13 || mode == 14){
 8004332:	79fb      	ldrb	r3, [r7, #7]
 8004334:	2b02      	cmp	r3, #2
 8004336:	d017      	beq.n	8004368 <frameConfig+0x40>
 8004338:	79fb      	ldrb	r3, [r7, #7]
 800433a:	2b03      	cmp	r3, #3
 800433c:	d014      	beq.n	8004368 <frameConfig+0x40>
 800433e:	79fb      	ldrb	r3, [r7, #7]
 8004340:	2b08      	cmp	r3, #8
 8004342:	d011      	beq.n	8004368 <frameConfig+0x40>
 8004344:	79fb      	ldrb	r3, [r7, #7]
 8004346:	2b09      	cmp	r3, #9
 8004348:	d00e      	beq.n	8004368 <frameConfig+0x40>
 800434a:	79fb      	ldrb	r3, [r7, #7]
 800434c:	2b0a      	cmp	r3, #10
 800434e:	d00b      	beq.n	8004368 <frameConfig+0x40>
 8004350:	79fb      	ldrb	r3, [r7, #7]
 8004352:	2b0b      	cmp	r3, #11
 8004354:	d008      	beq.n	8004368 <frameConfig+0x40>
 8004356:	79fb      	ldrb	r3, [r7, #7]
 8004358:	2b0c      	cmp	r3, #12
 800435a:	d005      	beq.n	8004368 <frameConfig+0x40>
 800435c:	79fb      	ldrb	r3, [r7, #7]
 800435e:	2b0d      	cmp	r3, #13
 8004360:	d002      	beq.n	8004368 <frameConfig+0x40>
 8004362:	79fb      	ldrb	r3, [r7, #7]
 8004364:	2b0e      	cmp	r3, #14
 8004366:	d101      	bne.n	800436c <frameConfig+0x44>
		return 1;
 8004368:	2301      	movs	r3, #1
 800436a:	e013      	b.n	8004394 <frameConfig+0x6c>
	}
	else if(mode == 1 || mode == 4 || mode == 5 ||  mode == 6){
 800436c:	79fb      	ldrb	r3, [r7, #7]
 800436e:	2b01      	cmp	r3, #1
 8004370:	d008      	beq.n	8004384 <frameConfig+0x5c>
 8004372:	79fb      	ldrb	r3, [r7, #7]
 8004374:	2b04      	cmp	r3, #4
 8004376:	d005      	beq.n	8004384 <frameConfig+0x5c>
 8004378:	79fb      	ldrb	r3, [r7, #7]
 800437a:	2b05      	cmp	r3, #5
 800437c:	d002      	beq.n	8004384 <frameConfig+0x5c>
 800437e:	79fb      	ldrb	r3, [r7, #7]
 8004380:	2b06      	cmp	r3, #6
 8004382:	d101      	bne.n	8004388 <frameConfig+0x60>
		return 3;
 8004384:	2303      	movs	r3, #3
 8004386:	e005      	b.n	8004394 <frameConfig+0x6c>
	}
	else if(mode == 7){
 8004388:	79fb      	ldrb	r3, [r7, #7]
 800438a:	2b07      	cmp	r3, #7
 800438c:	d101      	bne.n	8004392 <frameConfig+0x6a>
		return 1;									// Keep the number of byte first. (nStation)
 800438e:	2301      	movs	r3, #1
 8004390:	e000      	b.n	8004394 <frameConfig+0x6c>
	}
	return 0;
 8004392:	2300      	movs	r3, #0
}
 8004394:	4618      	mov	r0, r3
 8004396:	370c      	adds	r7, #12
 8004398:	46bd      	mov	sp, r7
 800439a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800439e:	4770      	bx	lr

080043a0 <checkSum>:

uint8_t checkSum(uint8_t var){
 80043a0:	b480      	push	{r7}
 80043a2:	b083      	sub	sp, #12
 80043a4:	af00      	add	r7, sp, #0
 80043a6:	4603      	mov	r3, r0
 80043a8:	71fb      	strb	r3, [r7, #7]
	//cSum = (~(var%256))%256;						// Spectrator variable
	return (~(var%256))%256;
 80043aa:	79fb      	ldrb	r3, [r7, #7]
 80043ac:	43db      	mvns	r3, r3
 80043ae:	425a      	negs	r2, r3
 80043b0:	b2db      	uxtb	r3, r3
 80043b2:	b2d2      	uxtb	r2, r2
 80043b4:	bf58      	it	pl
 80043b6:	4253      	negpl	r3, r2
 80043b8:	b2db      	uxtb	r3, r3
}
 80043ba:	4618      	mov	r0, r3
 80043bc:	370c      	adds	r7, #12
 80043be:	46bd      	mov	sp, r7
 80043c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043c4:	4770      	bx	lr

080043c6 <frameSum>:

uint8_t frameSum(uint8_t *frame, uint8_t num){
 80043c6:	b480      	push	{r7}
 80043c8:	b085      	sub	sp, #20
 80043ca:	af00      	add	r7, sp, #0
 80043cc:	6078      	str	r0, [r7, #4]
 80043ce:	460b      	mov	r3, r1
 80043d0:	70fb      	strb	r3, [r7, #3]
	uint8_t var = 0;
 80043d2:	2300      	movs	r3, #0
 80043d4:	73fb      	strb	r3, [r7, #15]
	for( int i=0; i<num; i+=1){
 80043d6:	2300      	movs	r3, #0
 80043d8:	60bb      	str	r3, [r7, #8]
 80043da:	e009      	b.n	80043f0 <frameSum+0x2a>
		var += frame[i];							// Sum all the bits in buffer.
 80043dc:	68bb      	ldr	r3, [r7, #8]
 80043de:	687a      	ldr	r2, [r7, #4]
 80043e0:	4413      	add	r3, r2
 80043e2:	781a      	ldrb	r2, [r3, #0]
 80043e4:	7bfb      	ldrb	r3, [r7, #15]
 80043e6:	4413      	add	r3, r2
 80043e8:	73fb      	strb	r3, [r7, #15]
	for( int i=0; i<num; i+=1){
 80043ea:	68bb      	ldr	r3, [r7, #8]
 80043ec:	3301      	adds	r3, #1
 80043ee:	60bb      	str	r3, [r7, #8]
 80043f0:	78fb      	ldrb	r3, [r7, #3]
 80043f2:	68ba      	ldr	r2, [r7, #8]
 80043f4:	429a      	cmp	r2, r3
 80043f6:	dbf1      	blt.n	80043dc <frameSum+0x16>
	}
	return var;
 80043f8:	7bfb      	ldrb	r3, [r7, #15]
}
 80043fa:	4618      	mov	r0, r3
 80043fc:	3714      	adds	r7, #20
 80043fe:	46bd      	mov	sp, r7
 8004400:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004404:	4770      	bx	lr
	...

08004408 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
 8004408:	b580      	push	{r7, lr}
 800440a:	b082      	sub	sp, #8
 800440c:	af00      	add	r7, sp, #0
 800440e:	6078      	str	r0, [r7, #4]
	//RxComplete = 1;
	callUART();
 8004410:	f7ff fa44 	bl	800389c <callUART>
	HAL_UART_Receive_DMA(&huart2, Receive, nbyte);
 8004414:	4b05      	ldr	r3, [pc, #20]	; (800442c <HAL_UART_RxCpltCallback+0x24>)
 8004416:	781b      	ldrb	r3, [r3, #0]
 8004418:	b29b      	uxth	r3, r3
 800441a:	461a      	mov	r2, r3
 800441c:	4904      	ldr	r1, [pc, #16]	; (8004430 <HAL_UART_RxCpltCallback+0x28>)
 800441e:	4805      	ldr	r0, [pc, #20]	; (8004434 <HAL_UART_RxCpltCallback+0x2c>)
 8004420:	f006 f9b4 	bl	800a78c <HAL_UART_Receive_DMA>
}
 8004424:	bf00      	nop
 8004426:	3708      	adds	r7, #8
 8004428:	46bd      	mov	sp, r7
 800442a:	bd80      	pop	{r7, pc}
 800442c:	20000026 	.word	0x20000026
 8004430:	20000554 	.word	0x20000554
 8004434:	200003c8 	.word	0x200003c8

08004438 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8004438:	b480      	push	{r7}
 800443a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800443c:	b672      	cpsid	i
}
 800443e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8004440:	e7fe      	b.n	8004440 <Error_Handler+0x8>
	...

08004444 <HAL_MspInit>:
 8004444:	b580      	push	{r7, lr}
 8004446:	b082      	sub	sp, #8
 8004448:	af00      	add	r7, sp, #0
 800444a:	2300      	movs	r3, #0
 800444c:	607b      	str	r3, [r7, #4]
 800444e:	4b10      	ldr	r3, [pc, #64]	; (8004490 <HAL_MspInit+0x4c>)
 8004450:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004452:	4a0f      	ldr	r2, [pc, #60]	; (8004490 <HAL_MspInit+0x4c>)
 8004454:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004458:	6453      	str	r3, [r2, #68]	; 0x44
 800445a:	4b0d      	ldr	r3, [pc, #52]	; (8004490 <HAL_MspInit+0x4c>)
 800445c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800445e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004462:	607b      	str	r3, [r7, #4]
 8004464:	687b      	ldr	r3, [r7, #4]
 8004466:	2300      	movs	r3, #0
 8004468:	603b      	str	r3, [r7, #0]
 800446a:	4b09      	ldr	r3, [pc, #36]	; (8004490 <HAL_MspInit+0x4c>)
 800446c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800446e:	4a08      	ldr	r2, [pc, #32]	; (8004490 <HAL_MspInit+0x4c>)
 8004470:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004474:	6413      	str	r3, [r2, #64]	; 0x40
 8004476:	4b06      	ldr	r3, [pc, #24]	; (8004490 <HAL_MspInit+0x4c>)
 8004478:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800447a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800447e:	603b      	str	r3, [r7, #0]
 8004480:	683b      	ldr	r3, [r7, #0]
 8004482:	2007      	movs	r0, #7
 8004484:	f000 fc60 	bl	8004d48 <HAL_NVIC_SetPriorityGrouping>
 8004488:	bf00      	nop
 800448a:	3708      	adds	r7, #8
 800448c:	46bd      	mov	sp, r7
 800448e:	bd80      	pop	{r7, pc}
 8004490:	40023800 	.word	0x40023800

08004494 <HAL_I2C_MspInit>:
 8004494:	b580      	push	{r7, lr}
 8004496:	b08a      	sub	sp, #40	; 0x28
 8004498:	af00      	add	r7, sp, #0
 800449a:	6078      	str	r0, [r7, #4]
 800449c:	f107 0314 	add.w	r3, r7, #20
 80044a0:	2200      	movs	r2, #0
 80044a2:	601a      	str	r2, [r3, #0]
 80044a4:	605a      	str	r2, [r3, #4]
 80044a6:	609a      	str	r2, [r3, #8]
 80044a8:	60da      	str	r2, [r3, #12]
 80044aa:	611a      	str	r2, [r3, #16]
 80044ac:	687b      	ldr	r3, [r7, #4]
 80044ae:	681b      	ldr	r3, [r3, #0]
 80044b0:	4a21      	ldr	r2, [pc, #132]	; (8004538 <HAL_I2C_MspInit+0xa4>)
 80044b2:	4293      	cmp	r3, r2
 80044b4:	d13c      	bne.n	8004530 <HAL_I2C_MspInit+0x9c>
 80044b6:	2300      	movs	r3, #0
 80044b8:	613b      	str	r3, [r7, #16]
 80044ba:	4b20      	ldr	r3, [pc, #128]	; (800453c <HAL_I2C_MspInit+0xa8>)
 80044bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80044be:	4a1f      	ldr	r2, [pc, #124]	; (800453c <HAL_I2C_MspInit+0xa8>)
 80044c0:	f043 0302 	orr.w	r3, r3, #2
 80044c4:	6313      	str	r3, [r2, #48]	; 0x30
 80044c6:	4b1d      	ldr	r3, [pc, #116]	; (800453c <HAL_I2C_MspInit+0xa8>)
 80044c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80044ca:	f003 0302 	and.w	r3, r3, #2
 80044ce:	613b      	str	r3, [r7, #16]
 80044d0:	693b      	ldr	r3, [r7, #16]
 80044d2:	f44f 7340 	mov.w	r3, #768	; 0x300
 80044d6:	617b      	str	r3, [r7, #20]
 80044d8:	2312      	movs	r3, #18
 80044da:	61bb      	str	r3, [r7, #24]
 80044dc:	2300      	movs	r3, #0
 80044de:	61fb      	str	r3, [r7, #28]
 80044e0:	2303      	movs	r3, #3
 80044e2:	623b      	str	r3, [r7, #32]
 80044e4:	2304      	movs	r3, #4
 80044e6:	627b      	str	r3, [r7, #36]	; 0x24
 80044e8:	f107 0314 	add.w	r3, r7, #20
 80044ec:	4619      	mov	r1, r3
 80044ee:	4814      	ldr	r0, [pc, #80]	; (8004540 <HAL_I2C_MspInit+0xac>)
 80044f0:	f001 f87c 	bl	80055ec <HAL_GPIO_Init>
 80044f4:	2300      	movs	r3, #0
 80044f6:	60fb      	str	r3, [r7, #12]
 80044f8:	4b10      	ldr	r3, [pc, #64]	; (800453c <HAL_I2C_MspInit+0xa8>)
 80044fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80044fc:	4a0f      	ldr	r2, [pc, #60]	; (800453c <HAL_I2C_MspInit+0xa8>)
 80044fe:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8004502:	6413      	str	r3, [r2, #64]	; 0x40
 8004504:	4b0d      	ldr	r3, [pc, #52]	; (800453c <HAL_I2C_MspInit+0xa8>)
 8004506:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004508:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800450c:	60fb      	str	r3, [r7, #12]
 800450e:	68fb      	ldr	r3, [r7, #12]
 8004510:	2200      	movs	r2, #0
 8004512:	2100      	movs	r1, #0
 8004514:	201f      	movs	r0, #31
 8004516:	f000 fc22 	bl	8004d5e <HAL_NVIC_SetPriority>
 800451a:	201f      	movs	r0, #31
 800451c:	f000 fc3b 	bl	8004d96 <HAL_NVIC_EnableIRQ>
 8004520:	2200      	movs	r2, #0
 8004522:	2100      	movs	r1, #0
 8004524:	2020      	movs	r0, #32
 8004526:	f000 fc1a 	bl	8004d5e <HAL_NVIC_SetPriority>
 800452a:	2020      	movs	r0, #32
 800452c:	f000 fc33 	bl	8004d96 <HAL_NVIC_EnableIRQ>
 8004530:	bf00      	nop
 8004532:	3728      	adds	r7, #40	; 0x28
 8004534:	46bd      	mov	sp, r7
 8004536:	bd80      	pop	{r7, pc}
 8004538:	40005400 	.word	0x40005400
 800453c:	40023800 	.word	0x40023800
 8004540:	40020400 	.word	0x40020400

08004544 <HAL_SPI_MspInit>:
 8004544:	b580      	push	{r7, lr}
 8004546:	b08a      	sub	sp, #40	; 0x28
 8004548:	af00      	add	r7, sp, #0
 800454a:	6078      	str	r0, [r7, #4]
 800454c:	f107 0314 	add.w	r3, r7, #20
 8004550:	2200      	movs	r2, #0
 8004552:	601a      	str	r2, [r3, #0]
 8004554:	605a      	str	r2, [r3, #4]
 8004556:	609a      	str	r2, [r3, #8]
 8004558:	60da      	str	r2, [r3, #12]
 800455a:	611a      	str	r2, [r3, #16]
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	681b      	ldr	r3, [r3, #0]
 8004560:	4a4b      	ldr	r2, [pc, #300]	; (8004690 <HAL_SPI_MspInit+0x14c>)
 8004562:	4293      	cmp	r3, r2
 8004564:	f040 8090 	bne.w	8004688 <HAL_SPI_MspInit+0x144>
 8004568:	2300      	movs	r3, #0
 800456a:	613b      	str	r3, [r7, #16]
 800456c:	4b49      	ldr	r3, [pc, #292]	; (8004694 <HAL_SPI_MspInit+0x150>)
 800456e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004570:	4a48      	ldr	r2, [pc, #288]	; (8004694 <HAL_SPI_MspInit+0x150>)
 8004572:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004576:	6413      	str	r3, [r2, #64]	; 0x40
 8004578:	4b46      	ldr	r3, [pc, #280]	; (8004694 <HAL_SPI_MspInit+0x150>)
 800457a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800457c:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8004580:	613b      	str	r3, [r7, #16]
 8004582:	693b      	ldr	r3, [r7, #16]
 8004584:	2300      	movs	r3, #0
 8004586:	60fb      	str	r3, [r7, #12]
 8004588:	4b42      	ldr	r3, [pc, #264]	; (8004694 <HAL_SPI_MspInit+0x150>)
 800458a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800458c:	4a41      	ldr	r2, [pc, #260]	; (8004694 <HAL_SPI_MspInit+0x150>)
 800458e:	f043 0302 	orr.w	r3, r3, #2
 8004592:	6313      	str	r3, [r2, #48]	; 0x30
 8004594:	4b3f      	ldr	r3, [pc, #252]	; (8004694 <HAL_SPI_MspInit+0x150>)
 8004596:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004598:	f003 0302 	and.w	r3, r3, #2
 800459c:	60fb      	str	r3, [r7, #12]
 800459e:	68fb      	ldr	r3, [r7, #12]
 80045a0:	2338      	movs	r3, #56	; 0x38
 80045a2:	617b      	str	r3, [r7, #20]
 80045a4:	2302      	movs	r3, #2
 80045a6:	61bb      	str	r3, [r7, #24]
 80045a8:	2300      	movs	r3, #0
 80045aa:	61fb      	str	r3, [r7, #28]
 80045ac:	2303      	movs	r3, #3
 80045ae:	623b      	str	r3, [r7, #32]
 80045b0:	2306      	movs	r3, #6
 80045b2:	627b      	str	r3, [r7, #36]	; 0x24
 80045b4:	f107 0314 	add.w	r3, r7, #20
 80045b8:	4619      	mov	r1, r3
 80045ba:	4837      	ldr	r0, [pc, #220]	; (8004698 <HAL_SPI_MspInit+0x154>)
 80045bc:	f001 f816 	bl	80055ec <HAL_GPIO_Init>
 80045c0:	4b36      	ldr	r3, [pc, #216]	; (800469c <HAL_SPI_MspInit+0x158>)
 80045c2:	4a37      	ldr	r2, [pc, #220]	; (80046a0 <HAL_SPI_MspInit+0x15c>)
 80045c4:	601a      	str	r2, [r3, #0]
 80045c6:	4b35      	ldr	r3, [pc, #212]	; (800469c <HAL_SPI_MspInit+0x158>)
 80045c8:	2200      	movs	r2, #0
 80045ca:	605a      	str	r2, [r3, #4]
 80045cc:	4b33      	ldr	r3, [pc, #204]	; (800469c <HAL_SPI_MspInit+0x158>)
 80045ce:	2200      	movs	r2, #0
 80045d0:	609a      	str	r2, [r3, #8]
 80045d2:	4b32      	ldr	r3, [pc, #200]	; (800469c <HAL_SPI_MspInit+0x158>)
 80045d4:	2200      	movs	r2, #0
 80045d6:	60da      	str	r2, [r3, #12]
 80045d8:	4b30      	ldr	r3, [pc, #192]	; (800469c <HAL_SPI_MspInit+0x158>)
 80045da:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80045de:	611a      	str	r2, [r3, #16]
 80045e0:	4b2e      	ldr	r3, [pc, #184]	; (800469c <HAL_SPI_MspInit+0x158>)
 80045e2:	2200      	movs	r2, #0
 80045e4:	615a      	str	r2, [r3, #20]
 80045e6:	4b2d      	ldr	r3, [pc, #180]	; (800469c <HAL_SPI_MspInit+0x158>)
 80045e8:	2200      	movs	r2, #0
 80045ea:	619a      	str	r2, [r3, #24]
 80045ec:	4b2b      	ldr	r3, [pc, #172]	; (800469c <HAL_SPI_MspInit+0x158>)
 80045ee:	f44f 7280 	mov.w	r2, #256	; 0x100
 80045f2:	61da      	str	r2, [r3, #28]
 80045f4:	4b29      	ldr	r3, [pc, #164]	; (800469c <HAL_SPI_MspInit+0x158>)
 80045f6:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80045fa:	621a      	str	r2, [r3, #32]
 80045fc:	4b27      	ldr	r3, [pc, #156]	; (800469c <HAL_SPI_MspInit+0x158>)
 80045fe:	2200      	movs	r2, #0
 8004600:	625a      	str	r2, [r3, #36]	; 0x24
 8004602:	4826      	ldr	r0, [pc, #152]	; (800469c <HAL_SPI_MspInit+0x158>)
 8004604:	f000 fbe2 	bl	8004dcc <HAL_DMA_Init>
 8004608:	4603      	mov	r3, r0
 800460a:	2b00      	cmp	r3, #0
 800460c:	d001      	beq.n	8004612 <HAL_SPI_MspInit+0xce>
 800460e:	f7ff ff13 	bl	8004438 <Error_Handler>
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	4a21      	ldr	r2, [pc, #132]	; (800469c <HAL_SPI_MspInit+0x158>)
 8004616:	64da      	str	r2, [r3, #76]	; 0x4c
 8004618:	4a20      	ldr	r2, [pc, #128]	; (800469c <HAL_SPI_MspInit+0x158>)
 800461a:	687b      	ldr	r3, [r7, #4]
 800461c:	6393      	str	r3, [r2, #56]	; 0x38
 800461e:	4b21      	ldr	r3, [pc, #132]	; (80046a4 <HAL_SPI_MspInit+0x160>)
 8004620:	4a21      	ldr	r2, [pc, #132]	; (80046a8 <HAL_SPI_MspInit+0x164>)
 8004622:	601a      	str	r2, [r3, #0]
 8004624:	4b1f      	ldr	r3, [pc, #124]	; (80046a4 <HAL_SPI_MspInit+0x160>)
 8004626:	2200      	movs	r2, #0
 8004628:	605a      	str	r2, [r3, #4]
 800462a:	4b1e      	ldr	r3, [pc, #120]	; (80046a4 <HAL_SPI_MspInit+0x160>)
 800462c:	2240      	movs	r2, #64	; 0x40
 800462e:	609a      	str	r2, [r3, #8]
 8004630:	4b1c      	ldr	r3, [pc, #112]	; (80046a4 <HAL_SPI_MspInit+0x160>)
 8004632:	2200      	movs	r2, #0
 8004634:	60da      	str	r2, [r3, #12]
 8004636:	4b1b      	ldr	r3, [pc, #108]	; (80046a4 <HAL_SPI_MspInit+0x160>)
 8004638:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800463c:	611a      	str	r2, [r3, #16]
 800463e:	4b19      	ldr	r3, [pc, #100]	; (80046a4 <HAL_SPI_MspInit+0x160>)
 8004640:	2200      	movs	r2, #0
 8004642:	615a      	str	r2, [r3, #20]
 8004644:	4b17      	ldr	r3, [pc, #92]	; (80046a4 <HAL_SPI_MspInit+0x160>)
 8004646:	2200      	movs	r2, #0
 8004648:	619a      	str	r2, [r3, #24]
 800464a:	4b16      	ldr	r3, [pc, #88]	; (80046a4 <HAL_SPI_MspInit+0x160>)
 800464c:	2200      	movs	r2, #0
 800464e:	61da      	str	r2, [r3, #28]
 8004650:	4b14      	ldr	r3, [pc, #80]	; (80046a4 <HAL_SPI_MspInit+0x160>)
 8004652:	2200      	movs	r2, #0
 8004654:	621a      	str	r2, [r3, #32]
 8004656:	4b13      	ldr	r3, [pc, #76]	; (80046a4 <HAL_SPI_MspInit+0x160>)
 8004658:	2200      	movs	r2, #0
 800465a:	625a      	str	r2, [r3, #36]	; 0x24
 800465c:	4811      	ldr	r0, [pc, #68]	; (80046a4 <HAL_SPI_MspInit+0x160>)
 800465e:	f000 fbb5 	bl	8004dcc <HAL_DMA_Init>
 8004662:	4603      	mov	r3, r0
 8004664:	2b00      	cmp	r3, #0
 8004666:	d001      	beq.n	800466c <HAL_SPI_MspInit+0x128>
 8004668:	f7ff fee6 	bl	8004438 <Error_Handler>
 800466c:	687b      	ldr	r3, [r7, #4]
 800466e:	4a0d      	ldr	r2, [pc, #52]	; (80046a4 <HAL_SPI_MspInit+0x160>)
 8004670:	649a      	str	r2, [r3, #72]	; 0x48
 8004672:	4a0c      	ldr	r2, [pc, #48]	; (80046a4 <HAL_SPI_MspInit+0x160>)
 8004674:	687b      	ldr	r3, [r7, #4]
 8004676:	6393      	str	r3, [r2, #56]	; 0x38
 8004678:	2200      	movs	r2, #0
 800467a:	2100      	movs	r1, #0
 800467c:	2033      	movs	r0, #51	; 0x33
 800467e:	f000 fb6e 	bl	8004d5e <HAL_NVIC_SetPriority>
 8004682:	2033      	movs	r0, #51	; 0x33
 8004684:	f000 fb87 	bl	8004d96 <HAL_NVIC_EnableIRQ>
 8004688:	bf00      	nop
 800468a:	3728      	adds	r7, #40	; 0x28
 800468c:	46bd      	mov	sp, r7
 800468e:	bd80      	pop	{r7, pc}
 8004690:	40003c00 	.word	0x40003c00
 8004694:	40023800 	.word	0x40023800
 8004698:	40020400 	.word	0x40020400
 800469c:	20000278 	.word	0x20000278
 80046a0:	40026010 	.word	0x40026010
 80046a4:	200002d8 	.word	0x200002d8
 80046a8:	400260b8 	.word	0x400260b8

080046ac <HAL_TIM_Base_MspInit>:
 80046ac:	b580      	push	{r7, lr}
 80046ae:	b084      	sub	sp, #16
 80046b0:	af00      	add	r7, sp, #0
 80046b2:	6078      	str	r0, [r7, #4]
 80046b4:	687b      	ldr	r3, [r7, #4]
 80046b6:	681b      	ldr	r3, [r3, #0]
 80046b8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80046bc:	d116      	bne.n	80046ec <HAL_TIM_Base_MspInit+0x40>
 80046be:	2300      	movs	r3, #0
 80046c0:	60fb      	str	r3, [r7, #12]
 80046c2:	4b1a      	ldr	r3, [pc, #104]	; (800472c <HAL_TIM_Base_MspInit+0x80>)
 80046c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80046c6:	4a19      	ldr	r2, [pc, #100]	; (800472c <HAL_TIM_Base_MspInit+0x80>)
 80046c8:	f043 0301 	orr.w	r3, r3, #1
 80046cc:	6413      	str	r3, [r2, #64]	; 0x40
 80046ce:	4b17      	ldr	r3, [pc, #92]	; (800472c <HAL_TIM_Base_MspInit+0x80>)
 80046d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80046d2:	f003 0301 	and.w	r3, r3, #1
 80046d6:	60fb      	str	r3, [r7, #12]
 80046d8:	68fb      	ldr	r3, [r7, #12]
 80046da:	2200      	movs	r2, #0
 80046dc:	2100      	movs	r1, #0
 80046de:	201c      	movs	r0, #28
 80046e0:	f000 fb3d 	bl	8004d5e <HAL_NVIC_SetPriority>
 80046e4:	201c      	movs	r0, #28
 80046e6:	f000 fb56 	bl	8004d96 <HAL_NVIC_EnableIRQ>
 80046ea:	e01a      	b.n	8004722 <HAL_TIM_Base_MspInit+0x76>
 80046ec:	687b      	ldr	r3, [r7, #4]
 80046ee:	681b      	ldr	r3, [r3, #0]
 80046f0:	4a0f      	ldr	r2, [pc, #60]	; (8004730 <HAL_TIM_Base_MspInit+0x84>)
 80046f2:	4293      	cmp	r3, r2
 80046f4:	d115      	bne.n	8004722 <HAL_TIM_Base_MspInit+0x76>
 80046f6:	2300      	movs	r3, #0
 80046f8:	60bb      	str	r3, [r7, #8]
 80046fa:	4b0c      	ldr	r3, [pc, #48]	; (800472c <HAL_TIM_Base_MspInit+0x80>)
 80046fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80046fe:	4a0b      	ldr	r2, [pc, #44]	; (800472c <HAL_TIM_Base_MspInit+0x80>)
 8004700:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004704:	6453      	str	r3, [r2, #68]	; 0x44
 8004706:	4b09      	ldr	r3, [pc, #36]	; (800472c <HAL_TIM_Base_MspInit+0x80>)
 8004708:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800470a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800470e:	60bb      	str	r3, [r7, #8]
 8004710:	68bb      	ldr	r3, [r7, #8]
 8004712:	2200      	movs	r2, #0
 8004714:	2100      	movs	r1, #0
 8004716:	201a      	movs	r0, #26
 8004718:	f000 fb21 	bl	8004d5e <HAL_NVIC_SetPriority>
 800471c:	201a      	movs	r0, #26
 800471e:	f000 fb3a 	bl	8004d96 <HAL_NVIC_EnableIRQ>
 8004722:	bf00      	nop
 8004724:	3710      	adds	r7, #16
 8004726:	46bd      	mov	sp, r7
 8004728:	bd80      	pop	{r7, pc}
 800472a:	bf00      	nop
 800472c:	40023800 	.word	0x40023800
 8004730:	40014800 	.word	0x40014800

08004734 <HAL_TIM_MspPostInit>:
 8004734:	b580      	push	{r7, lr}
 8004736:	b088      	sub	sp, #32
 8004738:	af00      	add	r7, sp, #0
 800473a:	6078      	str	r0, [r7, #4]
 800473c:	f107 030c 	add.w	r3, r7, #12
 8004740:	2200      	movs	r2, #0
 8004742:	601a      	str	r2, [r3, #0]
 8004744:	605a      	str	r2, [r3, #4]
 8004746:	609a      	str	r2, [r3, #8]
 8004748:	60da      	str	r2, [r3, #12]
 800474a:	611a      	str	r2, [r3, #16]
 800474c:	687b      	ldr	r3, [r7, #4]
 800474e:	681b      	ldr	r3, [r3, #0]
 8004750:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004754:	d11d      	bne.n	8004792 <HAL_TIM_MspPostInit+0x5e>
 8004756:	2300      	movs	r3, #0
 8004758:	60bb      	str	r3, [r7, #8]
 800475a:	4b10      	ldr	r3, [pc, #64]	; (800479c <HAL_TIM_MspPostInit+0x68>)
 800475c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800475e:	4a0f      	ldr	r2, [pc, #60]	; (800479c <HAL_TIM_MspPostInit+0x68>)
 8004760:	f043 0301 	orr.w	r3, r3, #1
 8004764:	6313      	str	r3, [r2, #48]	; 0x30
 8004766:	4b0d      	ldr	r3, [pc, #52]	; (800479c <HAL_TIM_MspPostInit+0x68>)
 8004768:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800476a:	f003 0301 	and.w	r3, r3, #1
 800476e:	60bb      	str	r3, [r7, #8]
 8004770:	68bb      	ldr	r3, [r7, #8]
 8004772:	2303      	movs	r3, #3
 8004774:	60fb      	str	r3, [r7, #12]
 8004776:	2302      	movs	r3, #2
 8004778:	613b      	str	r3, [r7, #16]
 800477a:	2300      	movs	r3, #0
 800477c:	617b      	str	r3, [r7, #20]
 800477e:	2300      	movs	r3, #0
 8004780:	61bb      	str	r3, [r7, #24]
 8004782:	2301      	movs	r3, #1
 8004784:	61fb      	str	r3, [r7, #28]
 8004786:	f107 030c 	add.w	r3, r7, #12
 800478a:	4619      	mov	r1, r3
 800478c:	4804      	ldr	r0, [pc, #16]	; (80047a0 <HAL_TIM_MspPostInit+0x6c>)
 800478e:	f000 ff2d 	bl	80055ec <HAL_GPIO_Init>
 8004792:	bf00      	nop
 8004794:	3720      	adds	r7, #32
 8004796:	46bd      	mov	sp, r7
 8004798:	bd80      	pop	{r7, pc}
 800479a:	bf00      	nop
 800479c:	40023800 	.word	0x40023800
 80047a0:	40020000 	.word	0x40020000

080047a4 <HAL_UART_MspInit>:
 80047a4:	b580      	push	{r7, lr}
 80047a6:	b08a      	sub	sp, #40	; 0x28
 80047a8:	af00      	add	r7, sp, #0
 80047aa:	6078      	str	r0, [r7, #4]
 80047ac:	f107 0314 	add.w	r3, r7, #20
 80047b0:	2200      	movs	r2, #0
 80047b2:	601a      	str	r2, [r3, #0]
 80047b4:	605a      	str	r2, [r3, #4]
 80047b6:	609a      	str	r2, [r3, #8]
 80047b8:	60da      	str	r2, [r3, #12]
 80047ba:	611a      	str	r2, [r3, #16]
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	681b      	ldr	r3, [r3, #0]
 80047c0:	4a4c      	ldr	r2, [pc, #304]	; (80048f4 <HAL_UART_MspInit+0x150>)
 80047c2:	4293      	cmp	r3, r2
 80047c4:	f040 8092 	bne.w	80048ec <HAL_UART_MspInit+0x148>
 80047c8:	2300      	movs	r3, #0
 80047ca:	613b      	str	r3, [r7, #16]
 80047cc:	4b4a      	ldr	r3, [pc, #296]	; (80048f8 <HAL_UART_MspInit+0x154>)
 80047ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047d0:	4a49      	ldr	r2, [pc, #292]	; (80048f8 <HAL_UART_MspInit+0x154>)
 80047d2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80047d6:	6413      	str	r3, [r2, #64]	; 0x40
 80047d8:	4b47      	ldr	r3, [pc, #284]	; (80048f8 <HAL_UART_MspInit+0x154>)
 80047da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80047dc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80047e0:	613b      	str	r3, [r7, #16]
 80047e2:	693b      	ldr	r3, [r7, #16]
 80047e4:	2300      	movs	r3, #0
 80047e6:	60fb      	str	r3, [r7, #12]
 80047e8:	4b43      	ldr	r3, [pc, #268]	; (80048f8 <HAL_UART_MspInit+0x154>)
 80047ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80047ec:	4a42      	ldr	r2, [pc, #264]	; (80048f8 <HAL_UART_MspInit+0x154>)
 80047ee:	f043 0301 	orr.w	r3, r3, #1
 80047f2:	6313      	str	r3, [r2, #48]	; 0x30
 80047f4:	4b40      	ldr	r3, [pc, #256]	; (80048f8 <HAL_UART_MspInit+0x154>)
 80047f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80047f8:	f003 0301 	and.w	r3, r3, #1
 80047fc:	60fb      	str	r3, [r7, #12]
 80047fe:	68fb      	ldr	r3, [r7, #12]
 8004800:	230c      	movs	r3, #12
 8004802:	617b      	str	r3, [r7, #20]
 8004804:	2302      	movs	r3, #2
 8004806:	61bb      	str	r3, [r7, #24]
 8004808:	2300      	movs	r3, #0
 800480a:	61fb      	str	r3, [r7, #28]
 800480c:	2303      	movs	r3, #3
 800480e:	623b      	str	r3, [r7, #32]
 8004810:	2307      	movs	r3, #7
 8004812:	627b      	str	r3, [r7, #36]	; 0x24
 8004814:	f107 0314 	add.w	r3, r7, #20
 8004818:	4619      	mov	r1, r3
 800481a:	4838      	ldr	r0, [pc, #224]	; (80048fc <HAL_UART_MspInit+0x158>)
 800481c:	f000 fee6 	bl	80055ec <HAL_GPIO_Init>
 8004820:	4b37      	ldr	r3, [pc, #220]	; (8004900 <HAL_UART_MspInit+0x15c>)
 8004822:	4a38      	ldr	r2, [pc, #224]	; (8004904 <HAL_UART_MspInit+0x160>)
 8004824:	601a      	str	r2, [r3, #0]
 8004826:	4b36      	ldr	r3, [pc, #216]	; (8004900 <HAL_UART_MspInit+0x15c>)
 8004828:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800482c:	605a      	str	r2, [r3, #4]
 800482e:	4b34      	ldr	r3, [pc, #208]	; (8004900 <HAL_UART_MspInit+0x15c>)
 8004830:	2240      	movs	r2, #64	; 0x40
 8004832:	609a      	str	r2, [r3, #8]
 8004834:	4b32      	ldr	r3, [pc, #200]	; (8004900 <HAL_UART_MspInit+0x15c>)
 8004836:	2200      	movs	r2, #0
 8004838:	60da      	str	r2, [r3, #12]
 800483a:	4b31      	ldr	r3, [pc, #196]	; (8004900 <HAL_UART_MspInit+0x15c>)
 800483c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004840:	611a      	str	r2, [r3, #16]
 8004842:	4b2f      	ldr	r3, [pc, #188]	; (8004900 <HAL_UART_MspInit+0x15c>)
 8004844:	2200      	movs	r2, #0
 8004846:	615a      	str	r2, [r3, #20]
 8004848:	4b2d      	ldr	r3, [pc, #180]	; (8004900 <HAL_UART_MspInit+0x15c>)
 800484a:	2200      	movs	r2, #0
 800484c:	619a      	str	r2, [r3, #24]
 800484e:	4b2c      	ldr	r3, [pc, #176]	; (8004900 <HAL_UART_MspInit+0x15c>)
 8004850:	2200      	movs	r2, #0
 8004852:	61da      	str	r2, [r3, #28]
 8004854:	4b2a      	ldr	r3, [pc, #168]	; (8004900 <HAL_UART_MspInit+0x15c>)
 8004856:	2200      	movs	r2, #0
 8004858:	621a      	str	r2, [r3, #32]
 800485a:	4b29      	ldr	r3, [pc, #164]	; (8004900 <HAL_UART_MspInit+0x15c>)
 800485c:	2200      	movs	r2, #0
 800485e:	625a      	str	r2, [r3, #36]	; 0x24
 8004860:	4827      	ldr	r0, [pc, #156]	; (8004900 <HAL_UART_MspInit+0x15c>)
 8004862:	f000 fab3 	bl	8004dcc <HAL_DMA_Init>
 8004866:	4603      	mov	r3, r0
 8004868:	2b00      	cmp	r3, #0
 800486a:	d001      	beq.n	8004870 <HAL_UART_MspInit+0xcc>
 800486c:	f7ff fde4 	bl	8004438 <Error_Handler>
 8004870:	687b      	ldr	r3, [r7, #4]
 8004872:	4a23      	ldr	r2, [pc, #140]	; (8004900 <HAL_UART_MspInit+0x15c>)
 8004874:	635a      	str	r2, [r3, #52]	; 0x34
 8004876:	4a22      	ldr	r2, [pc, #136]	; (8004900 <HAL_UART_MspInit+0x15c>)
 8004878:	687b      	ldr	r3, [r7, #4]
 800487a:	6393      	str	r3, [r2, #56]	; 0x38
 800487c:	4b22      	ldr	r3, [pc, #136]	; (8004908 <HAL_UART_MspInit+0x164>)
 800487e:	4a23      	ldr	r2, [pc, #140]	; (800490c <HAL_UART_MspInit+0x168>)
 8004880:	601a      	str	r2, [r3, #0]
 8004882:	4b21      	ldr	r3, [pc, #132]	; (8004908 <HAL_UART_MspInit+0x164>)
 8004884:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8004888:	605a      	str	r2, [r3, #4]
 800488a:	4b1f      	ldr	r3, [pc, #124]	; (8004908 <HAL_UART_MspInit+0x164>)
 800488c:	2200      	movs	r2, #0
 800488e:	609a      	str	r2, [r3, #8]
 8004890:	4b1d      	ldr	r3, [pc, #116]	; (8004908 <HAL_UART_MspInit+0x164>)
 8004892:	2200      	movs	r2, #0
 8004894:	60da      	str	r2, [r3, #12]
 8004896:	4b1c      	ldr	r3, [pc, #112]	; (8004908 <HAL_UART_MspInit+0x164>)
 8004898:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800489c:	611a      	str	r2, [r3, #16]
 800489e:	4b1a      	ldr	r3, [pc, #104]	; (8004908 <HAL_UART_MspInit+0x164>)
 80048a0:	2200      	movs	r2, #0
 80048a2:	615a      	str	r2, [r3, #20]
 80048a4:	4b18      	ldr	r3, [pc, #96]	; (8004908 <HAL_UART_MspInit+0x164>)
 80048a6:	2200      	movs	r2, #0
 80048a8:	619a      	str	r2, [r3, #24]
 80048aa:	4b17      	ldr	r3, [pc, #92]	; (8004908 <HAL_UART_MspInit+0x164>)
 80048ac:	f44f 7280 	mov.w	r2, #256	; 0x100
 80048b0:	61da      	str	r2, [r3, #28]
 80048b2:	4b15      	ldr	r3, [pc, #84]	; (8004908 <HAL_UART_MspInit+0x164>)
 80048b4:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 80048b8:	621a      	str	r2, [r3, #32]
 80048ba:	4b13      	ldr	r3, [pc, #76]	; (8004908 <HAL_UART_MspInit+0x164>)
 80048bc:	2200      	movs	r2, #0
 80048be:	625a      	str	r2, [r3, #36]	; 0x24
 80048c0:	4811      	ldr	r0, [pc, #68]	; (8004908 <HAL_UART_MspInit+0x164>)
 80048c2:	f000 fa83 	bl	8004dcc <HAL_DMA_Init>
 80048c6:	4603      	mov	r3, r0
 80048c8:	2b00      	cmp	r3, #0
 80048ca:	d001      	beq.n	80048d0 <HAL_UART_MspInit+0x12c>
 80048cc:	f7ff fdb4 	bl	8004438 <Error_Handler>
 80048d0:	687b      	ldr	r3, [r7, #4]
 80048d2:	4a0d      	ldr	r2, [pc, #52]	; (8004908 <HAL_UART_MspInit+0x164>)
 80048d4:	639a      	str	r2, [r3, #56]	; 0x38
 80048d6:	4a0c      	ldr	r2, [pc, #48]	; (8004908 <HAL_UART_MspInit+0x164>)
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	6393      	str	r3, [r2, #56]	; 0x38
 80048dc:	2200      	movs	r2, #0
 80048de:	2100      	movs	r1, #0
 80048e0:	2026      	movs	r0, #38	; 0x26
 80048e2:	f000 fa3c 	bl	8004d5e <HAL_NVIC_SetPriority>
 80048e6:	2026      	movs	r0, #38	; 0x26
 80048e8:	f000 fa55 	bl	8004d96 <HAL_NVIC_EnableIRQ>
 80048ec:	bf00      	nop
 80048ee:	3728      	adds	r7, #40	; 0x28
 80048f0:	46bd      	mov	sp, r7
 80048f2:	bd80      	pop	{r7, pc}
 80048f4:	40004400 	.word	0x40004400
 80048f8:	40023800 	.word	0x40023800
 80048fc:	40020000 	.word	0x40020000
 8004900:	2000040c 	.word	0x2000040c
 8004904:	400260a0 	.word	0x400260a0
 8004908:	2000046c 	.word	0x2000046c
 800490c:	40026088 	.word	0x40026088

08004910 <NMI_Handler>:
 8004910:	b480      	push	{r7}
 8004912:	af00      	add	r7, sp, #0
 8004914:	e7fe      	b.n	8004914 <NMI_Handler+0x4>

08004916 <HardFault_Handler>:
 8004916:	b480      	push	{r7}
 8004918:	af00      	add	r7, sp, #0
 800491a:	e7fe      	b.n	800491a <HardFault_Handler+0x4>

0800491c <MemManage_Handler>:
 800491c:	b480      	push	{r7}
 800491e:	af00      	add	r7, sp, #0
 8004920:	e7fe      	b.n	8004920 <MemManage_Handler+0x4>

08004922 <BusFault_Handler>:
 8004922:	b480      	push	{r7}
 8004924:	af00      	add	r7, sp, #0
 8004926:	e7fe      	b.n	8004926 <BusFault_Handler+0x4>

08004928 <UsageFault_Handler>:
 8004928:	b480      	push	{r7}
 800492a:	af00      	add	r7, sp, #0
 800492c:	e7fe      	b.n	800492c <UsageFault_Handler+0x4>

0800492e <SVC_Handler>:
 800492e:	b480      	push	{r7}
 8004930:	af00      	add	r7, sp, #0
 8004932:	bf00      	nop
 8004934:	46bd      	mov	sp, r7
 8004936:	f85d 7b04 	ldr.w	r7, [sp], #4
 800493a:	4770      	bx	lr

0800493c <DebugMon_Handler>:
 800493c:	b480      	push	{r7}
 800493e:	af00      	add	r7, sp, #0
 8004940:	bf00      	nop
 8004942:	46bd      	mov	sp, r7
 8004944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004948:	4770      	bx	lr

0800494a <PendSV_Handler>:
 800494a:	b480      	push	{r7}
 800494c:	af00      	add	r7, sp, #0
 800494e:	bf00      	nop
 8004950:	46bd      	mov	sp, r7
 8004952:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004956:	4770      	bx	lr

08004958 <SysTick_Handler>:
 8004958:	b580      	push	{r7, lr}
 800495a:	af00      	add	r7, sp, #0
 800495c:	f000 f904 	bl	8004b68 <HAL_IncTick>
 8004960:	bf00      	nop
 8004962:	bd80      	pop	{r7, pc}

08004964 <DMA1_Stream0_IRQHandler>:
 8004964:	b580      	push	{r7, lr}
 8004966:	af00      	add	r7, sp, #0
 8004968:	4802      	ldr	r0, [pc, #8]	; (8004974 <DMA1_Stream0_IRQHandler+0x10>)
 800496a:	f000 fbc7 	bl	80050fc <HAL_DMA_IRQHandler>
 800496e:	bf00      	nop
 8004970:	bd80      	pop	{r7, pc}
 8004972:	bf00      	nop
 8004974:	20000278 	.word	0x20000278

08004978 <DMA1_Stream5_IRQHandler>:
 8004978:	b580      	push	{r7, lr}
 800497a:	af00      	add	r7, sp, #0
 800497c:	4802      	ldr	r0, [pc, #8]	; (8004988 <DMA1_Stream5_IRQHandler+0x10>)
 800497e:	f000 fbbd 	bl	80050fc <HAL_DMA_IRQHandler>
 8004982:	bf00      	nop
 8004984:	bd80      	pop	{r7, pc}
 8004986:	bf00      	nop
 8004988:	2000046c 	.word	0x2000046c

0800498c <DMA1_Stream6_IRQHandler>:
 800498c:	b580      	push	{r7, lr}
 800498e:	af00      	add	r7, sp, #0
 8004990:	4802      	ldr	r0, [pc, #8]	; (800499c <DMA1_Stream6_IRQHandler+0x10>)
 8004992:	f000 fbb3 	bl	80050fc <HAL_DMA_IRQHandler>
 8004996:	bf00      	nop
 8004998:	bd80      	pop	{r7, pc}
 800499a:	bf00      	nop
 800499c:	2000040c 	.word	0x2000040c

080049a0 <EXTI9_5_IRQHandler>:
 80049a0:	b580      	push	{r7, lr}
 80049a2:	af00      	add	r7, sp, #0
 80049a4:	f44f 7080 	mov.w	r0, #256	; 0x100
 80049a8:	f000 ffd6 	bl	8005958 <HAL_GPIO_EXTI_IRQHandler>
 80049ac:	bf00      	nop
 80049ae:	bd80      	pop	{r7, pc}

080049b0 <TIM1_TRG_COM_TIM11_IRQHandler>:
 80049b0:	b580      	push	{r7, lr}
 80049b2:	af00      	add	r7, sp, #0
 80049b4:	4802      	ldr	r0, [pc, #8]	; (80049c0 <TIM1_TRG_COM_TIM11_IRQHandler+0x10>)
 80049b6:	f005 f815 	bl	80099e4 <HAL_TIM_IRQHandler>
 80049ba:	bf00      	nop
 80049bc:	bd80      	pop	{r7, pc}
 80049be:	bf00      	nop
 80049c0:	20000380 	.word	0x20000380

080049c4 <TIM2_IRQHandler>:
 80049c4:	b580      	push	{r7, lr}
 80049c6:	af00      	add	r7, sp, #0
 80049c8:	4802      	ldr	r0, [pc, #8]	; (80049d4 <TIM2_IRQHandler+0x10>)
 80049ca:	f005 f80b 	bl	80099e4 <HAL_TIM_IRQHandler>
 80049ce:	bf00      	nop
 80049d0:	bd80      	pop	{r7, pc}
 80049d2:	bf00      	nop
 80049d4:	20000338 	.word	0x20000338

080049d8 <I2C1_EV_IRQHandler>:
 80049d8:	b580      	push	{r7, lr}
 80049da:	af00      	add	r7, sp, #0
 80049dc:	4802      	ldr	r0, [pc, #8]	; (80049e8 <I2C1_EV_IRQHandler+0x10>)
 80049de:	f001 fc3b 	bl	8006258 <HAL_I2C_EV_IRQHandler>
 80049e2:	bf00      	nop
 80049e4:	bd80      	pop	{r7, pc}
 80049e6:	bf00      	nop
 80049e8:	200001cc 	.word	0x200001cc

080049ec <I2C1_ER_IRQHandler>:
 80049ec:	b580      	push	{r7, lr}
 80049ee:	af00      	add	r7, sp, #0
 80049f0:	4802      	ldr	r0, [pc, #8]	; (80049fc <I2C1_ER_IRQHandler+0x10>)
 80049f2:	f001 fda2 	bl	800653a <HAL_I2C_ER_IRQHandler>
 80049f6:	bf00      	nop
 80049f8:	bd80      	pop	{r7, pc}
 80049fa:	bf00      	nop
 80049fc:	200001cc 	.word	0x200001cc

08004a00 <USART2_IRQHandler>:
 8004a00:	b580      	push	{r7, lr}
 8004a02:	af00      	add	r7, sp, #0
 8004a04:	4802      	ldr	r0, [pc, #8]	; (8004a10 <USART2_IRQHandler+0x10>)
 8004a06:	f005 ff71 	bl	800a8ec <HAL_UART_IRQHandler>
 8004a0a:	bf00      	nop
 8004a0c:	bd80      	pop	{r7, pc}
 8004a0e:	bf00      	nop
 8004a10:	200003c8 	.word	0x200003c8

08004a14 <EXTI15_10_IRQHandler>:
 8004a14:	b580      	push	{r7, lr}
 8004a16:	af00      	add	r7, sp, #0
 8004a18:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8004a1c:	f000 ff9c 	bl	8005958 <HAL_GPIO_EXTI_IRQHandler>
 8004a20:	bf00      	nop
 8004a22:	bd80      	pop	{r7, pc}

08004a24 <DMA1_Stream7_IRQHandler>:
 8004a24:	b580      	push	{r7, lr}
 8004a26:	af00      	add	r7, sp, #0
 8004a28:	4802      	ldr	r0, [pc, #8]	; (8004a34 <DMA1_Stream7_IRQHandler+0x10>)
 8004a2a:	f000 fb67 	bl	80050fc <HAL_DMA_IRQHandler>
 8004a2e:	bf00      	nop
 8004a30:	bd80      	pop	{r7, pc}
 8004a32:	bf00      	nop
 8004a34:	200002d8 	.word	0x200002d8

08004a38 <SPI3_IRQHandler>:
 8004a38:	b580      	push	{r7, lr}
 8004a3a:	af00      	add	r7, sp, #0
 8004a3c:	4802      	ldr	r0, [pc, #8]	; (8004a48 <SPI3_IRQHandler+0x10>)
 8004a3e:	f004 fa77 	bl	8008f30 <HAL_SPI_IRQHandler>
 8004a42:	bf00      	nop
 8004a44:	bd80      	pop	{r7, pc}
 8004a46:	bf00      	nop
 8004a48:	20000220 	.word	0x20000220

08004a4c <SystemInit>:
 8004a4c:	b480      	push	{r7}
 8004a4e:	af00      	add	r7, sp, #0
 8004a50:	4b06      	ldr	r3, [pc, #24]	; (8004a6c <SystemInit+0x20>)
 8004a52:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004a56:	4a05      	ldr	r2, [pc, #20]	; (8004a6c <SystemInit+0x20>)
 8004a58:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8004a5c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8004a60:	bf00      	nop
 8004a62:	46bd      	mov	sp, r7
 8004a64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a68:	4770      	bx	lr
 8004a6a:	bf00      	nop
 8004a6c:	e000ed00 	.word	0xe000ed00

08004a70 <Reset_Handler>:
 8004a70:	f8df d034 	ldr.w	sp, [pc, #52]	; 8004aa8 <LoopFillZerobss+0x12>
 8004a74:	480d      	ldr	r0, [pc, #52]	; (8004aac <LoopFillZerobss+0x16>)
 8004a76:	490e      	ldr	r1, [pc, #56]	; (8004ab0 <LoopFillZerobss+0x1a>)
 8004a78:	4a0e      	ldr	r2, [pc, #56]	; (8004ab4 <LoopFillZerobss+0x1e>)
 8004a7a:	2300      	movs	r3, #0
 8004a7c:	e002      	b.n	8004a84 <LoopCopyDataInit>

08004a7e <CopyDataInit>:
 8004a7e:	58d4      	ldr	r4, [r2, r3]
 8004a80:	50c4      	str	r4, [r0, r3]
 8004a82:	3304      	adds	r3, #4

08004a84 <LoopCopyDataInit>:
 8004a84:	18c4      	adds	r4, r0, r3
 8004a86:	428c      	cmp	r4, r1
 8004a88:	d3f9      	bcc.n	8004a7e <CopyDataInit>
 8004a8a:	4a0b      	ldr	r2, [pc, #44]	; (8004ab8 <LoopFillZerobss+0x22>)
 8004a8c:	4c0b      	ldr	r4, [pc, #44]	; (8004abc <LoopFillZerobss+0x26>)
 8004a8e:	2300      	movs	r3, #0
 8004a90:	e001      	b.n	8004a96 <LoopFillZerobss>

08004a92 <FillZerobss>:
 8004a92:	6013      	str	r3, [r2, #0]
 8004a94:	3204      	adds	r2, #4

08004a96 <LoopFillZerobss>:
 8004a96:	42a2      	cmp	r2, r4
 8004a98:	d3fb      	bcc.n	8004a92 <FillZerobss>
 8004a9a:	f7ff ffd7 	bl	8004a4c <SystemInit>
 8004a9e:	f007 f815 	bl	800bacc <__libc_init_array>
 8004aa2:	f7fc f9f9 	bl	8000e98 <main>
 8004aa6:	4770      	bx	lr
 8004aa8:	20020000 	.word	0x20020000
 8004aac:	20000000 	.word	0x20000000
 8004ab0:	200001b0 	.word	0x200001b0
 8004ab4:	0800bd28 	.word	0x0800bd28
 8004ab8:	200001b0 	.word	0x200001b0
 8004abc:	20000808 	.word	0x20000808

08004ac0 <ADC_IRQHandler>:
 8004ac0:	e7fe      	b.n	8004ac0 <ADC_IRQHandler>
	...

08004ac4 <HAL_Init>:
 8004ac4:	b580      	push	{r7, lr}
 8004ac6:	af00      	add	r7, sp, #0
 8004ac8:	4b0e      	ldr	r3, [pc, #56]	; (8004b04 <HAL_Init+0x40>)
 8004aca:	681b      	ldr	r3, [r3, #0]
 8004acc:	4a0d      	ldr	r2, [pc, #52]	; (8004b04 <HAL_Init+0x40>)
 8004ace:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004ad2:	6013      	str	r3, [r2, #0]
 8004ad4:	4b0b      	ldr	r3, [pc, #44]	; (8004b04 <HAL_Init+0x40>)
 8004ad6:	681b      	ldr	r3, [r3, #0]
 8004ad8:	4a0a      	ldr	r2, [pc, #40]	; (8004b04 <HAL_Init+0x40>)
 8004ada:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8004ade:	6013      	str	r3, [r2, #0]
 8004ae0:	4b08      	ldr	r3, [pc, #32]	; (8004b04 <HAL_Init+0x40>)
 8004ae2:	681b      	ldr	r3, [r3, #0]
 8004ae4:	4a07      	ldr	r2, [pc, #28]	; (8004b04 <HAL_Init+0x40>)
 8004ae6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004aea:	6013      	str	r3, [r2, #0]
 8004aec:	2003      	movs	r0, #3
 8004aee:	f000 f92b 	bl	8004d48 <HAL_NVIC_SetPriorityGrouping>
 8004af2:	2000      	movs	r0, #0
 8004af4:	f000 f808 	bl	8004b08 <HAL_InitTick>
 8004af8:	f7ff fca4 	bl	8004444 <HAL_MspInit>
 8004afc:	2300      	movs	r3, #0
 8004afe:	4618      	mov	r0, r3
 8004b00:	bd80      	pop	{r7, pc}
 8004b02:	bf00      	nop
 8004b04:	40023c00 	.word	0x40023c00

08004b08 <HAL_InitTick>:
 8004b08:	b580      	push	{r7, lr}
 8004b0a:	b082      	sub	sp, #8
 8004b0c:	af00      	add	r7, sp, #0
 8004b0e:	6078      	str	r0, [r7, #4]
 8004b10:	4b12      	ldr	r3, [pc, #72]	; (8004b5c <HAL_InitTick+0x54>)
 8004b12:	681a      	ldr	r2, [r3, #0]
 8004b14:	4b12      	ldr	r3, [pc, #72]	; (8004b60 <HAL_InitTick+0x58>)
 8004b16:	781b      	ldrb	r3, [r3, #0]
 8004b18:	4619      	mov	r1, r3
 8004b1a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004b1e:	fbb3 f3f1 	udiv	r3, r3, r1
 8004b22:	fbb2 f3f3 	udiv	r3, r2, r3
 8004b26:	4618      	mov	r0, r3
 8004b28:	f000 f943 	bl	8004db2 <HAL_SYSTICK_Config>
 8004b2c:	4603      	mov	r3, r0
 8004b2e:	2b00      	cmp	r3, #0
 8004b30:	d001      	beq.n	8004b36 <HAL_InitTick+0x2e>
 8004b32:	2301      	movs	r3, #1
 8004b34:	e00e      	b.n	8004b54 <HAL_InitTick+0x4c>
 8004b36:	687b      	ldr	r3, [r7, #4]
 8004b38:	2b0f      	cmp	r3, #15
 8004b3a:	d80a      	bhi.n	8004b52 <HAL_InitTick+0x4a>
 8004b3c:	2200      	movs	r2, #0
 8004b3e:	6879      	ldr	r1, [r7, #4]
 8004b40:	f04f 30ff 	mov.w	r0, #4294967295
 8004b44:	f000 f90b 	bl	8004d5e <HAL_NVIC_SetPriority>
 8004b48:	4a06      	ldr	r2, [pc, #24]	; (8004b64 <HAL_InitTick+0x5c>)
 8004b4a:	687b      	ldr	r3, [r7, #4]
 8004b4c:	6013      	str	r3, [r2, #0]
 8004b4e:	2300      	movs	r3, #0
 8004b50:	e000      	b.n	8004b54 <HAL_InitTick+0x4c>
 8004b52:	2301      	movs	r3, #1
 8004b54:	4618      	mov	r0, r3
 8004b56:	3708      	adds	r7, #8
 8004b58:	46bd      	mov	sp, r7
 8004b5a:	bd80      	pop	{r7, pc}
 8004b5c:	20000140 	.word	0x20000140
 8004b60:	20000148 	.word	0x20000148
 8004b64:	20000144 	.word	0x20000144

08004b68 <HAL_IncTick>:
 8004b68:	b480      	push	{r7}
 8004b6a:	af00      	add	r7, sp, #0
 8004b6c:	4b06      	ldr	r3, [pc, #24]	; (8004b88 <HAL_IncTick+0x20>)
 8004b6e:	781b      	ldrb	r3, [r3, #0]
 8004b70:	461a      	mov	r2, r3
 8004b72:	4b06      	ldr	r3, [pc, #24]	; (8004b8c <HAL_IncTick+0x24>)
 8004b74:	681b      	ldr	r3, [r3, #0]
 8004b76:	4413      	add	r3, r2
 8004b78:	4a04      	ldr	r2, [pc, #16]	; (8004b8c <HAL_IncTick+0x24>)
 8004b7a:	6013      	str	r3, [r2, #0]
 8004b7c:	bf00      	nop
 8004b7e:	46bd      	mov	sp, r7
 8004b80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b84:	4770      	bx	lr
 8004b86:	bf00      	nop
 8004b88:	20000148 	.word	0x20000148
 8004b8c:	20000804 	.word	0x20000804

08004b90 <HAL_GetTick>:
 8004b90:	b480      	push	{r7}
 8004b92:	af00      	add	r7, sp, #0
 8004b94:	4b03      	ldr	r3, [pc, #12]	; (8004ba4 <HAL_GetTick+0x14>)
 8004b96:	681b      	ldr	r3, [r3, #0]
 8004b98:	4618      	mov	r0, r3
 8004b9a:	46bd      	mov	sp, r7
 8004b9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ba0:	4770      	bx	lr
 8004ba2:	bf00      	nop
 8004ba4:	20000804 	.word	0x20000804

08004ba8 <__NVIC_SetPriorityGrouping>:
 8004ba8:	b480      	push	{r7}
 8004baa:	b085      	sub	sp, #20
 8004bac:	af00      	add	r7, sp, #0
 8004bae:	6078      	str	r0, [r7, #4]
 8004bb0:	687b      	ldr	r3, [r7, #4]
 8004bb2:	f003 0307 	and.w	r3, r3, #7
 8004bb6:	60fb      	str	r3, [r7, #12]
 8004bb8:	4b0c      	ldr	r3, [pc, #48]	; (8004bec <__NVIC_SetPriorityGrouping+0x44>)
 8004bba:	68db      	ldr	r3, [r3, #12]
 8004bbc:	60bb      	str	r3, [r7, #8]
 8004bbe:	68ba      	ldr	r2, [r7, #8]
 8004bc0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8004bc4:	4013      	ands	r3, r2
 8004bc6:	60bb      	str	r3, [r7, #8]
 8004bc8:	68fb      	ldr	r3, [r7, #12]
 8004bca:	021a      	lsls	r2, r3, #8
 8004bcc:	68bb      	ldr	r3, [r7, #8]
 8004bce:	4313      	orrs	r3, r2
 8004bd0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004bd4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004bd8:	60bb      	str	r3, [r7, #8]
 8004bda:	4a04      	ldr	r2, [pc, #16]	; (8004bec <__NVIC_SetPriorityGrouping+0x44>)
 8004bdc:	68bb      	ldr	r3, [r7, #8]
 8004bde:	60d3      	str	r3, [r2, #12]
 8004be0:	bf00      	nop
 8004be2:	3714      	adds	r7, #20
 8004be4:	46bd      	mov	sp, r7
 8004be6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bea:	4770      	bx	lr
 8004bec:	e000ed00 	.word	0xe000ed00

08004bf0 <__NVIC_GetPriorityGrouping>:
 8004bf0:	b480      	push	{r7}
 8004bf2:	af00      	add	r7, sp, #0
 8004bf4:	4b04      	ldr	r3, [pc, #16]	; (8004c08 <__NVIC_GetPriorityGrouping+0x18>)
 8004bf6:	68db      	ldr	r3, [r3, #12]
 8004bf8:	0a1b      	lsrs	r3, r3, #8
 8004bfa:	f003 0307 	and.w	r3, r3, #7
 8004bfe:	4618      	mov	r0, r3
 8004c00:	46bd      	mov	sp, r7
 8004c02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c06:	4770      	bx	lr
 8004c08:	e000ed00 	.word	0xe000ed00

08004c0c <__NVIC_EnableIRQ>:
 8004c0c:	b480      	push	{r7}
 8004c0e:	b083      	sub	sp, #12
 8004c10:	af00      	add	r7, sp, #0
 8004c12:	4603      	mov	r3, r0
 8004c14:	71fb      	strb	r3, [r7, #7]
 8004c16:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004c1a:	2b00      	cmp	r3, #0
 8004c1c:	db0b      	blt.n	8004c36 <__NVIC_EnableIRQ+0x2a>
 8004c1e:	79fb      	ldrb	r3, [r7, #7]
 8004c20:	f003 021f 	and.w	r2, r3, #31
 8004c24:	4907      	ldr	r1, [pc, #28]	; (8004c44 <__NVIC_EnableIRQ+0x38>)
 8004c26:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004c2a:	095b      	lsrs	r3, r3, #5
 8004c2c:	2001      	movs	r0, #1
 8004c2e:	fa00 f202 	lsl.w	r2, r0, r2
 8004c32:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004c36:	bf00      	nop
 8004c38:	370c      	adds	r7, #12
 8004c3a:	46bd      	mov	sp, r7
 8004c3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c40:	4770      	bx	lr
 8004c42:	bf00      	nop
 8004c44:	e000e100 	.word	0xe000e100

08004c48 <__NVIC_SetPriority>:
 8004c48:	b480      	push	{r7}
 8004c4a:	b083      	sub	sp, #12
 8004c4c:	af00      	add	r7, sp, #0
 8004c4e:	4603      	mov	r3, r0
 8004c50:	6039      	str	r1, [r7, #0]
 8004c52:	71fb      	strb	r3, [r7, #7]
 8004c54:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004c58:	2b00      	cmp	r3, #0
 8004c5a:	db0a      	blt.n	8004c72 <__NVIC_SetPriority+0x2a>
 8004c5c:	683b      	ldr	r3, [r7, #0]
 8004c5e:	b2da      	uxtb	r2, r3
 8004c60:	490c      	ldr	r1, [pc, #48]	; (8004c94 <__NVIC_SetPriority+0x4c>)
 8004c62:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004c66:	0112      	lsls	r2, r2, #4
 8004c68:	b2d2      	uxtb	r2, r2
 8004c6a:	440b      	add	r3, r1
 8004c6c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8004c70:	e00a      	b.n	8004c88 <__NVIC_SetPriority+0x40>
 8004c72:	683b      	ldr	r3, [r7, #0]
 8004c74:	b2da      	uxtb	r2, r3
 8004c76:	4908      	ldr	r1, [pc, #32]	; (8004c98 <__NVIC_SetPriority+0x50>)
 8004c78:	79fb      	ldrb	r3, [r7, #7]
 8004c7a:	f003 030f 	and.w	r3, r3, #15
 8004c7e:	3b04      	subs	r3, #4
 8004c80:	0112      	lsls	r2, r2, #4
 8004c82:	b2d2      	uxtb	r2, r2
 8004c84:	440b      	add	r3, r1
 8004c86:	761a      	strb	r2, [r3, #24]
 8004c88:	bf00      	nop
 8004c8a:	370c      	adds	r7, #12
 8004c8c:	46bd      	mov	sp, r7
 8004c8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c92:	4770      	bx	lr
 8004c94:	e000e100 	.word	0xe000e100
 8004c98:	e000ed00 	.word	0xe000ed00

08004c9c <NVIC_EncodePriority>:
 8004c9c:	b480      	push	{r7}
 8004c9e:	b089      	sub	sp, #36	; 0x24
 8004ca0:	af00      	add	r7, sp, #0
 8004ca2:	60f8      	str	r0, [r7, #12]
 8004ca4:	60b9      	str	r1, [r7, #8]
 8004ca6:	607a      	str	r2, [r7, #4]
 8004ca8:	68fb      	ldr	r3, [r7, #12]
 8004caa:	f003 0307 	and.w	r3, r3, #7
 8004cae:	61fb      	str	r3, [r7, #28]
 8004cb0:	69fb      	ldr	r3, [r7, #28]
 8004cb2:	f1c3 0307 	rsb	r3, r3, #7
 8004cb6:	2b04      	cmp	r3, #4
 8004cb8:	bf28      	it	cs
 8004cba:	2304      	movcs	r3, #4
 8004cbc:	61bb      	str	r3, [r7, #24]
 8004cbe:	69fb      	ldr	r3, [r7, #28]
 8004cc0:	3304      	adds	r3, #4
 8004cc2:	2b06      	cmp	r3, #6
 8004cc4:	d902      	bls.n	8004ccc <NVIC_EncodePriority+0x30>
 8004cc6:	69fb      	ldr	r3, [r7, #28]
 8004cc8:	3b03      	subs	r3, #3
 8004cca:	e000      	b.n	8004cce <NVIC_EncodePriority+0x32>
 8004ccc:	2300      	movs	r3, #0
 8004cce:	617b      	str	r3, [r7, #20]
 8004cd0:	f04f 32ff 	mov.w	r2, #4294967295
 8004cd4:	69bb      	ldr	r3, [r7, #24]
 8004cd6:	fa02 f303 	lsl.w	r3, r2, r3
 8004cda:	43da      	mvns	r2, r3
 8004cdc:	68bb      	ldr	r3, [r7, #8]
 8004cde:	401a      	ands	r2, r3
 8004ce0:	697b      	ldr	r3, [r7, #20]
 8004ce2:	409a      	lsls	r2, r3
 8004ce4:	f04f 31ff 	mov.w	r1, #4294967295
 8004ce8:	697b      	ldr	r3, [r7, #20]
 8004cea:	fa01 f303 	lsl.w	r3, r1, r3
 8004cee:	43d9      	mvns	r1, r3
 8004cf0:	687b      	ldr	r3, [r7, #4]
 8004cf2:	400b      	ands	r3, r1
 8004cf4:	4313      	orrs	r3, r2
 8004cf6:	4618      	mov	r0, r3
 8004cf8:	3724      	adds	r7, #36	; 0x24
 8004cfa:	46bd      	mov	sp, r7
 8004cfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d00:	4770      	bx	lr
	...

08004d04 <SysTick_Config>:
 8004d04:	b580      	push	{r7, lr}
 8004d06:	b082      	sub	sp, #8
 8004d08:	af00      	add	r7, sp, #0
 8004d0a:	6078      	str	r0, [r7, #4]
 8004d0c:	687b      	ldr	r3, [r7, #4]
 8004d0e:	3b01      	subs	r3, #1
 8004d10:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004d14:	d301      	bcc.n	8004d1a <SysTick_Config+0x16>
 8004d16:	2301      	movs	r3, #1
 8004d18:	e00f      	b.n	8004d3a <SysTick_Config+0x36>
 8004d1a:	4a0a      	ldr	r2, [pc, #40]	; (8004d44 <SysTick_Config+0x40>)
 8004d1c:	687b      	ldr	r3, [r7, #4]
 8004d1e:	3b01      	subs	r3, #1
 8004d20:	6053      	str	r3, [r2, #4]
 8004d22:	210f      	movs	r1, #15
 8004d24:	f04f 30ff 	mov.w	r0, #4294967295
 8004d28:	f7ff ff8e 	bl	8004c48 <__NVIC_SetPriority>
 8004d2c:	4b05      	ldr	r3, [pc, #20]	; (8004d44 <SysTick_Config+0x40>)
 8004d2e:	2200      	movs	r2, #0
 8004d30:	609a      	str	r2, [r3, #8]
 8004d32:	4b04      	ldr	r3, [pc, #16]	; (8004d44 <SysTick_Config+0x40>)
 8004d34:	2207      	movs	r2, #7
 8004d36:	601a      	str	r2, [r3, #0]
 8004d38:	2300      	movs	r3, #0
 8004d3a:	4618      	mov	r0, r3
 8004d3c:	3708      	adds	r7, #8
 8004d3e:	46bd      	mov	sp, r7
 8004d40:	bd80      	pop	{r7, pc}
 8004d42:	bf00      	nop
 8004d44:	e000e010 	.word	0xe000e010

08004d48 <HAL_NVIC_SetPriorityGrouping>:
 8004d48:	b580      	push	{r7, lr}
 8004d4a:	b082      	sub	sp, #8
 8004d4c:	af00      	add	r7, sp, #0
 8004d4e:	6078      	str	r0, [r7, #4]
 8004d50:	6878      	ldr	r0, [r7, #4]
 8004d52:	f7ff ff29 	bl	8004ba8 <__NVIC_SetPriorityGrouping>
 8004d56:	bf00      	nop
 8004d58:	3708      	adds	r7, #8
 8004d5a:	46bd      	mov	sp, r7
 8004d5c:	bd80      	pop	{r7, pc}

08004d5e <HAL_NVIC_SetPriority>:
 8004d5e:	b580      	push	{r7, lr}
 8004d60:	b086      	sub	sp, #24
 8004d62:	af00      	add	r7, sp, #0
 8004d64:	4603      	mov	r3, r0
 8004d66:	60b9      	str	r1, [r7, #8]
 8004d68:	607a      	str	r2, [r7, #4]
 8004d6a:	73fb      	strb	r3, [r7, #15]
 8004d6c:	2300      	movs	r3, #0
 8004d6e:	617b      	str	r3, [r7, #20]
 8004d70:	f7ff ff3e 	bl	8004bf0 <__NVIC_GetPriorityGrouping>
 8004d74:	6178      	str	r0, [r7, #20]
 8004d76:	687a      	ldr	r2, [r7, #4]
 8004d78:	68b9      	ldr	r1, [r7, #8]
 8004d7a:	6978      	ldr	r0, [r7, #20]
 8004d7c:	f7ff ff8e 	bl	8004c9c <NVIC_EncodePriority>
 8004d80:	4602      	mov	r2, r0
 8004d82:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004d86:	4611      	mov	r1, r2
 8004d88:	4618      	mov	r0, r3
 8004d8a:	f7ff ff5d 	bl	8004c48 <__NVIC_SetPriority>
 8004d8e:	bf00      	nop
 8004d90:	3718      	adds	r7, #24
 8004d92:	46bd      	mov	sp, r7
 8004d94:	bd80      	pop	{r7, pc}

08004d96 <HAL_NVIC_EnableIRQ>:
 8004d96:	b580      	push	{r7, lr}
 8004d98:	b082      	sub	sp, #8
 8004d9a:	af00      	add	r7, sp, #0
 8004d9c:	4603      	mov	r3, r0
 8004d9e:	71fb      	strb	r3, [r7, #7]
 8004da0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004da4:	4618      	mov	r0, r3
 8004da6:	f7ff ff31 	bl	8004c0c <__NVIC_EnableIRQ>
 8004daa:	bf00      	nop
 8004dac:	3708      	adds	r7, #8
 8004dae:	46bd      	mov	sp, r7
 8004db0:	bd80      	pop	{r7, pc}

08004db2 <HAL_SYSTICK_Config>:
 8004db2:	b580      	push	{r7, lr}
 8004db4:	b082      	sub	sp, #8
 8004db6:	af00      	add	r7, sp, #0
 8004db8:	6078      	str	r0, [r7, #4]
 8004dba:	6878      	ldr	r0, [r7, #4]
 8004dbc:	f7ff ffa2 	bl	8004d04 <SysTick_Config>
 8004dc0:	4603      	mov	r3, r0
 8004dc2:	4618      	mov	r0, r3
 8004dc4:	3708      	adds	r7, #8
 8004dc6:	46bd      	mov	sp, r7
 8004dc8:	bd80      	pop	{r7, pc}
	...

08004dcc <HAL_DMA_Init>:
 8004dcc:	b580      	push	{r7, lr}
 8004dce:	b086      	sub	sp, #24
 8004dd0:	af00      	add	r7, sp, #0
 8004dd2:	6078      	str	r0, [r7, #4]
 8004dd4:	2300      	movs	r3, #0
 8004dd6:	617b      	str	r3, [r7, #20]
 8004dd8:	f7ff feda 	bl	8004b90 <HAL_GetTick>
 8004ddc:	6138      	str	r0, [r7, #16]
 8004dde:	687b      	ldr	r3, [r7, #4]
 8004de0:	2b00      	cmp	r3, #0
 8004de2:	d101      	bne.n	8004de8 <HAL_DMA_Init+0x1c>
 8004de4:	2301      	movs	r3, #1
 8004de6:	e099      	b.n	8004f1c <HAL_DMA_Init+0x150>
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	2202      	movs	r2, #2
 8004dec:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	2200      	movs	r2, #0
 8004df4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004df8:	687b      	ldr	r3, [r7, #4]
 8004dfa:	681b      	ldr	r3, [r3, #0]
 8004dfc:	681a      	ldr	r2, [r3, #0]
 8004dfe:	687b      	ldr	r3, [r7, #4]
 8004e00:	681b      	ldr	r3, [r3, #0]
 8004e02:	f022 0201 	bic.w	r2, r2, #1
 8004e06:	601a      	str	r2, [r3, #0]
 8004e08:	e00f      	b.n	8004e2a <HAL_DMA_Init+0x5e>
 8004e0a:	f7ff fec1 	bl	8004b90 <HAL_GetTick>
 8004e0e:	4602      	mov	r2, r0
 8004e10:	693b      	ldr	r3, [r7, #16]
 8004e12:	1ad3      	subs	r3, r2, r3
 8004e14:	2b05      	cmp	r3, #5
 8004e16:	d908      	bls.n	8004e2a <HAL_DMA_Init+0x5e>
 8004e18:	687b      	ldr	r3, [r7, #4]
 8004e1a:	2220      	movs	r2, #32
 8004e1c:	655a      	str	r2, [r3, #84]	; 0x54
 8004e1e:	687b      	ldr	r3, [r7, #4]
 8004e20:	2203      	movs	r2, #3
 8004e22:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004e26:	2303      	movs	r3, #3
 8004e28:	e078      	b.n	8004f1c <HAL_DMA_Init+0x150>
 8004e2a:	687b      	ldr	r3, [r7, #4]
 8004e2c:	681b      	ldr	r3, [r3, #0]
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	f003 0301 	and.w	r3, r3, #1
 8004e34:	2b00      	cmp	r3, #0
 8004e36:	d1e8      	bne.n	8004e0a <HAL_DMA_Init+0x3e>
 8004e38:	687b      	ldr	r3, [r7, #4]
 8004e3a:	681b      	ldr	r3, [r3, #0]
 8004e3c:	681b      	ldr	r3, [r3, #0]
 8004e3e:	617b      	str	r3, [r7, #20]
 8004e40:	697a      	ldr	r2, [r7, #20]
 8004e42:	4b38      	ldr	r3, [pc, #224]	; (8004f24 <HAL_DMA_Init+0x158>)
 8004e44:	4013      	ands	r3, r2
 8004e46:	617b      	str	r3, [r7, #20]
 8004e48:	687b      	ldr	r3, [r7, #4]
 8004e4a:	685a      	ldr	r2, [r3, #4]
 8004e4c:	687b      	ldr	r3, [r7, #4]
 8004e4e:	689b      	ldr	r3, [r3, #8]
 8004e50:	431a      	orrs	r2, r3
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	68db      	ldr	r3, [r3, #12]
 8004e56:	431a      	orrs	r2, r3
 8004e58:	687b      	ldr	r3, [r7, #4]
 8004e5a:	691b      	ldr	r3, [r3, #16]
 8004e5c:	431a      	orrs	r2, r3
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	695b      	ldr	r3, [r3, #20]
 8004e62:	431a      	orrs	r2, r3
 8004e64:	687b      	ldr	r3, [r7, #4]
 8004e66:	699b      	ldr	r3, [r3, #24]
 8004e68:	431a      	orrs	r2, r3
 8004e6a:	687b      	ldr	r3, [r7, #4]
 8004e6c:	69db      	ldr	r3, [r3, #28]
 8004e6e:	431a      	orrs	r2, r3
 8004e70:	687b      	ldr	r3, [r7, #4]
 8004e72:	6a1b      	ldr	r3, [r3, #32]
 8004e74:	4313      	orrs	r3, r2
 8004e76:	697a      	ldr	r2, [r7, #20]
 8004e78:	4313      	orrs	r3, r2
 8004e7a:	617b      	str	r3, [r7, #20]
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e80:	2b04      	cmp	r3, #4
 8004e82:	d107      	bne.n	8004e94 <HAL_DMA_Init+0xc8>
 8004e84:	687b      	ldr	r3, [r7, #4]
 8004e86:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004e88:	687b      	ldr	r3, [r7, #4]
 8004e8a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e8c:	4313      	orrs	r3, r2
 8004e8e:	697a      	ldr	r2, [r7, #20]
 8004e90:	4313      	orrs	r3, r2
 8004e92:	617b      	str	r3, [r7, #20]
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	681b      	ldr	r3, [r3, #0]
 8004e98:	697a      	ldr	r2, [r7, #20]
 8004e9a:	601a      	str	r2, [r3, #0]
 8004e9c:	687b      	ldr	r3, [r7, #4]
 8004e9e:	681b      	ldr	r3, [r3, #0]
 8004ea0:	695b      	ldr	r3, [r3, #20]
 8004ea2:	617b      	str	r3, [r7, #20]
 8004ea4:	697b      	ldr	r3, [r7, #20]
 8004ea6:	f023 0307 	bic.w	r3, r3, #7
 8004eaa:	617b      	str	r3, [r7, #20]
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004eb0:	697a      	ldr	r2, [r7, #20]
 8004eb2:	4313      	orrs	r3, r2
 8004eb4:	617b      	str	r3, [r7, #20]
 8004eb6:	687b      	ldr	r3, [r7, #4]
 8004eb8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004eba:	2b04      	cmp	r3, #4
 8004ebc:	d117      	bne.n	8004eee <HAL_DMA_Init+0x122>
 8004ebe:	687b      	ldr	r3, [r7, #4]
 8004ec0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004ec2:	697a      	ldr	r2, [r7, #20]
 8004ec4:	4313      	orrs	r3, r2
 8004ec6:	617b      	str	r3, [r7, #20]
 8004ec8:	687b      	ldr	r3, [r7, #4]
 8004eca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004ecc:	2b00      	cmp	r3, #0
 8004ece:	d00e      	beq.n	8004eee <HAL_DMA_Init+0x122>
 8004ed0:	6878      	ldr	r0, [r7, #4]
 8004ed2:	f000 fb0f 	bl	80054f4 <DMA_CheckFifoParam>
 8004ed6:	4603      	mov	r3, r0
 8004ed8:	2b00      	cmp	r3, #0
 8004eda:	d008      	beq.n	8004eee <HAL_DMA_Init+0x122>
 8004edc:	687b      	ldr	r3, [r7, #4]
 8004ede:	2240      	movs	r2, #64	; 0x40
 8004ee0:	655a      	str	r2, [r3, #84]	; 0x54
 8004ee2:	687b      	ldr	r3, [r7, #4]
 8004ee4:	2201      	movs	r2, #1
 8004ee6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004eea:	2301      	movs	r3, #1
 8004eec:	e016      	b.n	8004f1c <HAL_DMA_Init+0x150>
 8004eee:	687b      	ldr	r3, [r7, #4]
 8004ef0:	681b      	ldr	r3, [r3, #0]
 8004ef2:	697a      	ldr	r2, [r7, #20]
 8004ef4:	615a      	str	r2, [r3, #20]
 8004ef6:	6878      	ldr	r0, [r7, #4]
 8004ef8:	f000 fac6 	bl	8005488 <DMA_CalcBaseAndBitshift>
 8004efc:	4603      	mov	r3, r0
 8004efe:	60fb      	str	r3, [r7, #12]
 8004f00:	687b      	ldr	r3, [r7, #4]
 8004f02:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004f04:	223f      	movs	r2, #63	; 0x3f
 8004f06:	409a      	lsls	r2, r3
 8004f08:	68fb      	ldr	r3, [r7, #12]
 8004f0a:	609a      	str	r2, [r3, #8]
 8004f0c:	687b      	ldr	r3, [r7, #4]
 8004f0e:	2200      	movs	r2, #0
 8004f10:	655a      	str	r2, [r3, #84]	; 0x54
 8004f12:	687b      	ldr	r3, [r7, #4]
 8004f14:	2201      	movs	r2, #1
 8004f16:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004f1a:	2300      	movs	r3, #0
 8004f1c:	4618      	mov	r0, r3
 8004f1e:	3718      	adds	r7, #24
 8004f20:	46bd      	mov	sp, r7
 8004f22:	bd80      	pop	{r7, pc}
 8004f24:	f010803f 	.word	0xf010803f

08004f28 <HAL_DMA_Start_IT>:
 8004f28:	b580      	push	{r7, lr}
 8004f2a:	b086      	sub	sp, #24
 8004f2c:	af00      	add	r7, sp, #0
 8004f2e:	60f8      	str	r0, [r7, #12]
 8004f30:	60b9      	str	r1, [r7, #8]
 8004f32:	607a      	str	r2, [r7, #4]
 8004f34:	603b      	str	r3, [r7, #0]
 8004f36:	2300      	movs	r3, #0
 8004f38:	75fb      	strb	r3, [r7, #23]
 8004f3a:	68fb      	ldr	r3, [r7, #12]
 8004f3c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004f3e:	613b      	str	r3, [r7, #16]
 8004f40:	68fb      	ldr	r3, [r7, #12]
 8004f42:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8004f46:	2b01      	cmp	r3, #1
 8004f48:	d101      	bne.n	8004f4e <HAL_DMA_Start_IT+0x26>
 8004f4a:	2302      	movs	r3, #2
 8004f4c:	e040      	b.n	8004fd0 <HAL_DMA_Start_IT+0xa8>
 8004f4e:	68fb      	ldr	r3, [r7, #12]
 8004f50:	2201      	movs	r2, #1
 8004f52:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004f56:	68fb      	ldr	r3, [r7, #12]
 8004f58:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004f5c:	b2db      	uxtb	r3, r3
 8004f5e:	2b01      	cmp	r3, #1
 8004f60:	d12f      	bne.n	8004fc2 <HAL_DMA_Start_IT+0x9a>
 8004f62:	68fb      	ldr	r3, [r7, #12]
 8004f64:	2202      	movs	r2, #2
 8004f66:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004f6a:	68fb      	ldr	r3, [r7, #12]
 8004f6c:	2200      	movs	r2, #0
 8004f6e:	655a      	str	r2, [r3, #84]	; 0x54
 8004f70:	683b      	ldr	r3, [r7, #0]
 8004f72:	687a      	ldr	r2, [r7, #4]
 8004f74:	68b9      	ldr	r1, [r7, #8]
 8004f76:	68f8      	ldr	r0, [r7, #12]
 8004f78:	f000 fa58 	bl	800542c <DMA_SetConfig>
 8004f7c:	68fb      	ldr	r3, [r7, #12]
 8004f7e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004f80:	223f      	movs	r2, #63	; 0x3f
 8004f82:	409a      	lsls	r2, r3
 8004f84:	693b      	ldr	r3, [r7, #16]
 8004f86:	609a      	str	r2, [r3, #8]
 8004f88:	68fb      	ldr	r3, [r7, #12]
 8004f8a:	681b      	ldr	r3, [r3, #0]
 8004f8c:	681a      	ldr	r2, [r3, #0]
 8004f8e:	68fb      	ldr	r3, [r7, #12]
 8004f90:	681b      	ldr	r3, [r3, #0]
 8004f92:	f042 0216 	orr.w	r2, r2, #22
 8004f96:	601a      	str	r2, [r3, #0]
 8004f98:	68fb      	ldr	r3, [r7, #12]
 8004f9a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004f9c:	2b00      	cmp	r3, #0
 8004f9e:	d007      	beq.n	8004fb0 <HAL_DMA_Start_IT+0x88>
 8004fa0:	68fb      	ldr	r3, [r7, #12]
 8004fa2:	681b      	ldr	r3, [r3, #0]
 8004fa4:	681a      	ldr	r2, [r3, #0]
 8004fa6:	68fb      	ldr	r3, [r7, #12]
 8004fa8:	681b      	ldr	r3, [r3, #0]
 8004faa:	f042 0208 	orr.w	r2, r2, #8
 8004fae:	601a      	str	r2, [r3, #0]
 8004fb0:	68fb      	ldr	r3, [r7, #12]
 8004fb2:	681b      	ldr	r3, [r3, #0]
 8004fb4:	681a      	ldr	r2, [r3, #0]
 8004fb6:	68fb      	ldr	r3, [r7, #12]
 8004fb8:	681b      	ldr	r3, [r3, #0]
 8004fba:	f042 0201 	orr.w	r2, r2, #1
 8004fbe:	601a      	str	r2, [r3, #0]
 8004fc0:	e005      	b.n	8004fce <HAL_DMA_Start_IT+0xa6>
 8004fc2:	68fb      	ldr	r3, [r7, #12]
 8004fc4:	2200      	movs	r2, #0
 8004fc6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004fca:	2302      	movs	r3, #2
 8004fcc:	75fb      	strb	r3, [r7, #23]
 8004fce:	7dfb      	ldrb	r3, [r7, #23]
 8004fd0:	4618      	mov	r0, r3
 8004fd2:	3718      	adds	r7, #24
 8004fd4:	46bd      	mov	sp, r7
 8004fd6:	bd80      	pop	{r7, pc}

08004fd8 <HAL_DMA_Abort>:
 8004fd8:	b580      	push	{r7, lr}
 8004fda:	b084      	sub	sp, #16
 8004fdc:	af00      	add	r7, sp, #0
 8004fde:	6078      	str	r0, [r7, #4]
 8004fe0:	687b      	ldr	r3, [r7, #4]
 8004fe2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004fe4:	60fb      	str	r3, [r7, #12]
 8004fe6:	f7ff fdd3 	bl	8004b90 <HAL_GetTick>
 8004fea:	60b8      	str	r0, [r7, #8]
 8004fec:	687b      	ldr	r3, [r7, #4]
 8004fee:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004ff2:	b2db      	uxtb	r3, r3
 8004ff4:	2b02      	cmp	r3, #2
 8004ff6:	d008      	beq.n	800500a <HAL_DMA_Abort+0x32>
 8004ff8:	687b      	ldr	r3, [r7, #4]
 8004ffa:	2280      	movs	r2, #128	; 0x80
 8004ffc:	655a      	str	r2, [r3, #84]	; 0x54
 8004ffe:	687b      	ldr	r3, [r7, #4]
 8005000:	2200      	movs	r2, #0
 8005002:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8005006:	2301      	movs	r3, #1
 8005008:	e052      	b.n	80050b0 <HAL_DMA_Abort+0xd8>
 800500a:	687b      	ldr	r3, [r7, #4]
 800500c:	681b      	ldr	r3, [r3, #0]
 800500e:	681a      	ldr	r2, [r3, #0]
 8005010:	687b      	ldr	r3, [r7, #4]
 8005012:	681b      	ldr	r3, [r3, #0]
 8005014:	f022 0216 	bic.w	r2, r2, #22
 8005018:	601a      	str	r2, [r3, #0]
 800501a:	687b      	ldr	r3, [r7, #4]
 800501c:	681b      	ldr	r3, [r3, #0]
 800501e:	695a      	ldr	r2, [r3, #20]
 8005020:	687b      	ldr	r3, [r7, #4]
 8005022:	681b      	ldr	r3, [r3, #0]
 8005024:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005028:	615a      	str	r2, [r3, #20]
 800502a:	687b      	ldr	r3, [r7, #4]
 800502c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800502e:	2b00      	cmp	r3, #0
 8005030:	d103      	bne.n	800503a <HAL_DMA_Abort+0x62>
 8005032:	687b      	ldr	r3, [r7, #4]
 8005034:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005036:	2b00      	cmp	r3, #0
 8005038:	d007      	beq.n	800504a <HAL_DMA_Abort+0x72>
 800503a:	687b      	ldr	r3, [r7, #4]
 800503c:	681b      	ldr	r3, [r3, #0]
 800503e:	681a      	ldr	r2, [r3, #0]
 8005040:	687b      	ldr	r3, [r7, #4]
 8005042:	681b      	ldr	r3, [r3, #0]
 8005044:	f022 0208 	bic.w	r2, r2, #8
 8005048:	601a      	str	r2, [r3, #0]
 800504a:	687b      	ldr	r3, [r7, #4]
 800504c:	681b      	ldr	r3, [r3, #0]
 800504e:	681a      	ldr	r2, [r3, #0]
 8005050:	687b      	ldr	r3, [r7, #4]
 8005052:	681b      	ldr	r3, [r3, #0]
 8005054:	f022 0201 	bic.w	r2, r2, #1
 8005058:	601a      	str	r2, [r3, #0]
 800505a:	e013      	b.n	8005084 <HAL_DMA_Abort+0xac>
 800505c:	f7ff fd98 	bl	8004b90 <HAL_GetTick>
 8005060:	4602      	mov	r2, r0
 8005062:	68bb      	ldr	r3, [r7, #8]
 8005064:	1ad3      	subs	r3, r2, r3
 8005066:	2b05      	cmp	r3, #5
 8005068:	d90c      	bls.n	8005084 <HAL_DMA_Abort+0xac>
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	2220      	movs	r2, #32
 800506e:	655a      	str	r2, [r3, #84]	; 0x54
 8005070:	687b      	ldr	r3, [r7, #4]
 8005072:	2203      	movs	r2, #3
 8005074:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005078:	687b      	ldr	r3, [r7, #4]
 800507a:	2200      	movs	r2, #0
 800507c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8005080:	2303      	movs	r3, #3
 8005082:	e015      	b.n	80050b0 <HAL_DMA_Abort+0xd8>
 8005084:	687b      	ldr	r3, [r7, #4]
 8005086:	681b      	ldr	r3, [r3, #0]
 8005088:	681b      	ldr	r3, [r3, #0]
 800508a:	f003 0301 	and.w	r3, r3, #1
 800508e:	2b00      	cmp	r3, #0
 8005090:	d1e4      	bne.n	800505c <HAL_DMA_Abort+0x84>
 8005092:	687b      	ldr	r3, [r7, #4]
 8005094:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005096:	223f      	movs	r2, #63	; 0x3f
 8005098:	409a      	lsls	r2, r3
 800509a:	68fb      	ldr	r3, [r7, #12]
 800509c:	609a      	str	r2, [r3, #8]
 800509e:	687b      	ldr	r3, [r7, #4]
 80050a0:	2201      	movs	r2, #1
 80050a2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80050a6:	687b      	ldr	r3, [r7, #4]
 80050a8:	2200      	movs	r2, #0
 80050aa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80050ae:	2300      	movs	r3, #0
 80050b0:	4618      	mov	r0, r3
 80050b2:	3710      	adds	r7, #16
 80050b4:	46bd      	mov	sp, r7
 80050b6:	bd80      	pop	{r7, pc}

080050b8 <HAL_DMA_Abort_IT>:
 80050b8:	b480      	push	{r7}
 80050ba:	b083      	sub	sp, #12
 80050bc:	af00      	add	r7, sp, #0
 80050be:	6078      	str	r0, [r7, #4]
 80050c0:	687b      	ldr	r3, [r7, #4]
 80050c2:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80050c6:	b2db      	uxtb	r3, r3
 80050c8:	2b02      	cmp	r3, #2
 80050ca:	d004      	beq.n	80050d6 <HAL_DMA_Abort_IT+0x1e>
 80050cc:	687b      	ldr	r3, [r7, #4]
 80050ce:	2280      	movs	r2, #128	; 0x80
 80050d0:	655a      	str	r2, [r3, #84]	; 0x54
 80050d2:	2301      	movs	r3, #1
 80050d4:	e00c      	b.n	80050f0 <HAL_DMA_Abort_IT+0x38>
 80050d6:	687b      	ldr	r3, [r7, #4]
 80050d8:	2205      	movs	r2, #5
 80050da:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	681b      	ldr	r3, [r3, #0]
 80050e2:	681a      	ldr	r2, [r3, #0]
 80050e4:	687b      	ldr	r3, [r7, #4]
 80050e6:	681b      	ldr	r3, [r3, #0]
 80050e8:	f022 0201 	bic.w	r2, r2, #1
 80050ec:	601a      	str	r2, [r3, #0]
 80050ee:	2300      	movs	r3, #0
 80050f0:	4618      	mov	r0, r3
 80050f2:	370c      	adds	r7, #12
 80050f4:	46bd      	mov	sp, r7
 80050f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050fa:	4770      	bx	lr

080050fc <HAL_DMA_IRQHandler>:
 80050fc:	b580      	push	{r7, lr}
 80050fe:	b086      	sub	sp, #24
 8005100:	af00      	add	r7, sp, #0
 8005102:	6078      	str	r0, [r7, #4]
 8005104:	2300      	movs	r3, #0
 8005106:	60bb      	str	r3, [r7, #8]
 8005108:	4b8e      	ldr	r3, [pc, #568]	; (8005344 <HAL_DMA_IRQHandler+0x248>)
 800510a:	681b      	ldr	r3, [r3, #0]
 800510c:	4a8e      	ldr	r2, [pc, #568]	; (8005348 <HAL_DMA_IRQHandler+0x24c>)
 800510e:	fba2 2303 	umull	r2, r3, r2, r3
 8005112:	0a9b      	lsrs	r3, r3, #10
 8005114:	617b      	str	r3, [r7, #20]
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800511a:	613b      	str	r3, [r7, #16]
 800511c:	693b      	ldr	r3, [r7, #16]
 800511e:	681b      	ldr	r3, [r3, #0]
 8005120:	60fb      	str	r3, [r7, #12]
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005126:	2208      	movs	r2, #8
 8005128:	409a      	lsls	r2, r3
 800512a:	68fb      	ldr	r3, [r7, #12]
 800512c:	4013      	ands	r3, r2
 800512e:	2b00      	cmp	r3, #0
 8005130:	d01a      	beq.n	8005168 <HAL_DMA_IRQHandler+0x6c>
 8005132:	687b      	ldr	r3, [r7, #4]
 8005134:	681b      	ldr	r3, [r3, #0]
 8005136:	681b      	ldr	r3, [r3, #0]
 8005138:	f003 0304 	and.w	r3, r3, #4
 800513c:	2b00      	cmp	r3, #0
 800513e:	d013      	beq.n	8005168 <HAL_DMA_IRQHandler+0x6c>
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	681b      	ldr	r3, [r3, #0]
 8005144:	681a      	ldr	r2, [r3, #0]
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	681b      	ldr	r3, [r3, #0]
 800514a:	f022 0204 	bic.w	r2, r2, #4
 800514e:	601a      	str	r2, [r3, #0]
 8005150:	687b      	ldr	r3, [r7, #4]
 8005152:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005154:	2208      	movs	r2, #8
 8005156:	409a      	lsls	r2, r3
 8005158:	693b      	ldr	r3, [r7, #16]
 800515a:	609a      	str	r2, [r3, #8]
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005160:	f043 0201 	orr.w	r2, r3, #1
 8005164:	687b      	ldr	r3, [r7, #4]
 8005166:	655a      	str	r2, [r3, #84]	; 0x54
 8005168:	687b      	ldr	r3, [r7, #4]
 800516a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800516c:	2201      	movs	r2, #1
 800516e:	409a      	lsls	r2, r3
 8005170:	68fb      	ldr	r3, [r7, #12]
 8005172:	4013      	ands	r3, r2
 8005174:	2b00      	cmp	r3, #0
 8005176:	d012      	beq.n	800519e <HAL_DMA_IRQHandler+0xa2>
 8005178:	687b      	ldr	r3, [r7, #4]
 800517a:	681b      	ldr	r3, [r3, #0]
 800517c:	695b      	ldr	r3, [r3, #20]
 800517e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005182:	2b00      	cmp	r3, #0
 8005184:	d00b      	beq.n	800519e <HAL_DMA_IRQHandler+0xa2>
 8005186:	687b      	ldr	r3, [r7, #4]
 8005188:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800518a:	2201      	movs	r2, #1
 800518c:	409a      	lsls	r2, r3
 800518e:	693b      	ldr	r3, [r7, #16]
 8005190:	609a      	str	r2, [r3, #8]
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005196:	f043 0202 	orr.w	r2, r3, #2
 800519a:	687b      	ldr	r3, [r7, #4]
 800519c:	655a      	str	r2, [r3, #84]	; 0x54
 800519e:	687b      	ldr	r3, [r7, #4]
 80051a0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80051a2:	2204      	movs	r2, #4
 80051a4:	409a      	lsls	r2, r3
 80051a6:	68fb      	ldr	r3, [r7, #12]
 80051a8:	4013      	ands	r3, r2
 80051aa:	2b00      	cmp	r3, #0
 80051ac:	d012      	beq.n	80051d4 <HAL_DMA_IRQHandler+0xd8>
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	681b      	ldr	r3, [r3, #0]
 80051b2:	681b      	ldr	r3, [r3, #0]
 80051b4:	f003 0302 	and.w	r3, r3, #2
 80051b8:	2b00      	cmp	r3, #0
 80051ba:	d00b      	beq.n	80051d4 <HAL_DMA_IRQHandler+0xd8>
 80051bc:	687b      	ldr	r3, [r7, #4]
 80051be:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80051c0:	2204      	movs	r2, #4
 80051c2:	409a      	lsls	r2, r3
 80051c4:	693b      	ldr	r3, [r7, #16]
 80051c6:	609a      	str	r2, [r3, #8]
 80051c8:	687b      	ldr	r3, [r7, #4]
 80051ca:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80051cc:	f043 0204 	orr.w	r2, r3, #4
 80051d0:	687b      	ldr	r3, [r7, #4]
 80051d2:	655a      	str	r2, [r3, #84]	; 0x54
 80051d4:	687b      	ldr	r3, [r7, #4]
 80051d6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80051d8:	2210      	movs	r2, #16
 80051da:	409a      	lsls	r2, r3
 80051dc:	68fb      	ldr	r3, [r7, #12]
 80051de:	4013      	ands	r3, r2
 80051e0:	2b00      	cmp	r3, #0
 80051e2:	d043      	beq.n	800526c <HAL_DMA_IRQHandler+0x170>
 80051e4:	687b      	ldr	r3, [r7, #4]
 80051e6:	681b      	ldr	r3, [r3, #0]
 80051e8:	681b      	ldr	r3, [r3, #0]
 80051ea:	f003 0308 	and.w	r3, r3, #8
 80051ee:	2b00      	cmp	r3, #0
 80051f0:	d03c      	beq.n	800526c <HAL_DMA_IRQHandler+0x170>
 80051f2:	687b      	ldr	r3, [r7, #4]
 80051f4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80051f6:	2210      	movs	r2, #16
 80051f8:	409a      	lsls	r2, r3
 80051fa:	693b      	ldr	r3, [r7, #16]
 80051fc:	609a      	str	r2, [r3, #8]
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	681b      	ldr	r3, [r3, #0]
 8005202:	681b      	ldr	r3, [r3, #0]
 8005204:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005208:	2b00      	cmp	r3, #0
 800520a:	d018      	beq.n	800523e <HAL_DMA_IRQHandler+0x142>
 800520c:	687b      	ldr	r3, [r7, #4]
 800520e:	681b      	ldr	r3, [r3, #0]
 8005210:	681b      	ldr	r3, [r3, #0]
 8005212:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8005216:	2b00      	cmp	r3, #0
 8005218:	d108      	bne.n	800522c <HAL_DMA_IRQHandler+0x130>
 800521a:	687b      	ldr	r3, [r7, #4]
 800521c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800521e:	2b00      	cmp	r3, #0
 8005220:	d024      	beq.n	800526c <HAL_DMA_IRQHandler+0x170>
 8005222:	687b      	ldr	r3, [r7, #4]
 8005224:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005226:	6878      	ldr	r0, [r7, #4]
 8005228:	4798      	blx	r3
 800522a:	e01f      	b.n	800526c <HAL_DMA_IRQHandler+0x170>
 800522c:	687b      	ldr	r3, [r7, #4]
 800522e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005230:	2b00      	cmp	r3, #0
 8005232:	d01b      	beq.n	800526c <HAL_DMA_IRQHandler+0x170>
 8005234:	687b      	ldr	r3, [r7, #4]
 8005236:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8005238:	6878      	ldr	r0, [r7, #4]
 800523a:	4798      	blx	r3
 800523c:	e016      	b.n	800526c <HAL_DMA_IRQHandler+0x170>
 800523e:	687b      	ldr	r3, [r7, #4]
 8005240:	681b      	ldr	r3, [r3, #0]
 8005242:	681b      	ldr	r3, [r3, #0]
 8005244:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005248:	2b00      	cmp	r3, #0
 800524a:	d107      	bne.n	800525c <HAL_DMA_IRQHandler+0x160>
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	681b      	ldr	r3, [r3, #0]
 8005250:	681a      	ldr	r2, [r3, #0]
 8005252:	687b      	ldr	r3, [r7, #4]
 8005254:	681b      	ldr	r3, [r3, #0]
 8005256:	f022 0208 	bic.w	r2, r2, #8
 800525a:	601a      	str	r2, [r3, #0]
 800525c:	687b      	ldr	r3, [r7, #4]
 800525e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005260:	2b00      	cmp	r3, #0
 8005262:	d003      	beq.n	800526c <HAL_DMA_IRQHandler+0x170>
 8005264:	687b      	ldr	r3, [r7, #4]
 8005266:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005268:	6878      	ldr	r0, [r7, #4]
 800526a:	4798      	blx	r3
 800526c:	687b      	ldr	r3, [r7, #4]
 800526e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005270:	2220      	movs	r2, #32
 8005272:	409a      	lsls	r2, r3
 8005274:	68fb      	ldr	r3, [r7, #12]
 8005276:	4013      	ands	r3, r2
 8005278:	2b00      	cmp	r3, #0
 800527a:	f000 808f 	beq.w	800539c <HAL_DMA_IRQHandler+0x2a0>
 800527e:	687b      	ldr	r3, [r7, #4]
 8005280:	681b      	ldr	r3, [r3, #0]
 8005282:	681b      	ldr	r3, [r3, #0]
 8005284:	f003 0310 	and.w	r3, r3, #16
 8005288:	2b00      	cmp	r3, #0
 800528a:	f000 8087 	beq.w	800539c <HAL_DMA_IRQHandler+0x2a0>
 800528e:	687b      	ldr	r3, [r7, #4]
 8005290:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005292:	2220      	movs	r2, #32
 8005294:	409a      	lsls	r2, r3
 8005296:	693b      	ldr	r3, [r7, #16]
 8005298:	609a      	str	r2, [r3, #8]
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80052a0:	b2db      	uxtb	r3, r3
 80052a2:	2b05      	cmp	r3, #5
 80052a4:	d136      	bne.n	8005314 <HAL_DMA_IRQHandler+0x218>
 80052a6:	687b      	ldr	r3, [r7, #4]
 80052a8:	681b      	ldr	r3, [r3, #0]
 80052aa:	681a      	ldr	r2, [r3, #0]
 80052ac:	687b      	ldr	r3, [r7, #4]
 80052ae:	681b      	ldr	r3, [r3, #0]
 80052b0:	f022 0216 	bic.w	r2, r2, #22
 80052b4:	601a      	str	r2, [r3, #0]
 80052b6:	687b      	ldr	r3, [r7, #4]
 80052b8:	681b      	ldr	r3, [r3, #0]
 80052ba:	695a      	ldr	r2, [r3, #20]
 80052bc:	687b      	ldr	r3, [r7, #4]
 80052be:	681b      	ldr	r3, [r3, #0]
 80052c0:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80052c4:	615a      	str	r2, [r3, #20]
 80052c6:	687b      	ldr	r3, [r7, #4]
 80052c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80052ca:	2b00      	cmp	r3, #0
 80052cc:	d103      	bne.n	80052d6 <HAL_DMA_IRQHandler+0x1da>
 80052ce:	687b      	ldr	r3, [r7, #4]
 80052d0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80052d2:	2b00      	cmp	r3, #0
 80052d4:	d007      	beq.n	80052e6 <HAL_DMA_IRQHandler+0x1ea>
 80052d6:	687b      	ldr	r3, [r7, #4]
 80052d8:	681b      	ldr	r3, [r3, #0]
 80052da:	681a      	ldr	r2, [r3, #0]
 80052dc:	687b      	ldr	r3, [r7, #4]
 80052de:	681b      	ldr	r3, [r3, #0]
 80052e0:	f022 0208 	bic.w	r2, r2, #8
 80052e4:	601a      	str	r2, [r3, #0]
 80052e6:	687b      	ldr	r3, [r7, #4]
 80052e8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80052ea:	223f      	movs	r2, #63	; 0x3f
 80052ec:	409a      	lsls	r2, r3
 80052ee:	693b      	ldr	r3, [r7, #16]
 80052f0:	609a      	str	r2, [r3, #8]
 80052f2:	687b      	ldr	r3, [r7, #4]
 80052f4:	2201      	movs	r2, #1
 80052f6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80052fa:	687b      	ldr	r3, [r7, #4]
 80052fc:	2200      	movs	r2, #0
 80052fe:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8005302:	687b      	ldr	r3, [r7, #4]
 8005304:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8005306:	2b00      	cmp	r3, #0
 8005308:	d07e      	beq.n	8005408 <HAL_DMA_IRQHandler+0x30c>
 800530a:	687b      	ldr	r3, [r7, #4]
 800530c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800530e:	6878      	ldr	r0, [r7, #4]
 8005310:	4798      	blx	r3
 8005312:	e079      	b.n	8005408 <HAL_DMA_IRQHandler+0x30c>
 8005314:	687b      	ldr	r3, [r7, #4]
 8005316:	681b      	ldr	r3, [r3, #0]
 8005318:	681b      	ldr	r3, [r3, #0]
 800531a:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800531e:	2b00      	cmp	r3, #0
 8005320:	d01d      	beq.n	800535e <HAL_DMA_IRQHandler+0x262>
 8005322:	687b      	ldr	r3, [r7, #4]
 8005324:	681b      	ldr	r3, [r3, #0]
 8005326:	681b      	ldr	r3, [r3, #0]
 8005328:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800532c:	2b00      	cmp	r3, #0
 800532e:	d10d      	bne.n	800534c <HAL_DMA_IRQHandler+0x250>
 8005330:	687b      	ldr	r3, [r7, #4]
 8005332:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005334:	2b00      	cmp	r3, #0
 8005336:	d031      	beq.n	800539c <HAL_DMA_IRQHandler+0x2a0>
 8005338:	687b      	ldr	r3, [r7, #4]
 800533a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800533c:	6878      	ldr	r0, [r7, #4]
 800533e:	4798      	blx	r3
 8005340:	e02c      	b.n	800539c <HAL_DMA_IRQHandler+0x2a0>
 8005342:	bf00      	nop
 8005344:	20000140 	.word	0x20000140
 8005348:	1b4e81b5 	.word	0x1b4e81b5
 800534c:	687b      	ldr	r3, [r7, #4]
 800534e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005350:	2b00      	cmp	r3, #0
 8005352:	d023      	beq.n	800539c <HAL_DMA_IRQHandler+0x2a0>
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005358:	6878      	ldr	r0, [r7, #4]
 800535a:	4798      	blx	r3
 800535c:	e01e      	b.n	800539c <HAL_DMA_IRQHandler+0x2a0>
 800535e:	687b      	ldr	r3, [r7, #4]
 8005360:	681b      	ldr	r3, [r3, #0]
 8005362:	681b      	ldr	r3, [r3, #0]
 8005364:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005368:	2b00      	cmp	r3, #0
 800536a:	d10f      	bne.n	800538c <HAL_DMA_IRQHandler+0x290>
 800536c:	687b      	ldr	r3, [r7, #4]
 800536e:	681b      	ldr	r3, [r3, #0]
 8005370:	681a      	ldr	r2, [r3, #0]
 8005372:	687b      	ldr	r3, [r7, #4]
 8005374:	681b      	ldr	r3, [r3, #0]
 8005376:	f022 0210 	bic.w	r2, r2, #16
 800537a:	601a      	str	r2, [r3, #0]
 800537c:	687b      	ldr	r3, [r7, #4]
 800537e:	2201      	movs	r2, #1
 8005380:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	2200      	movs	r2, #0
 8005388:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800538c:	687b      	ldr	r3, [r7, #4]
 800538e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005390:	2b00      	cmp	r3, #0
 8005392:	d003      	beq.n	800539c <HAL_DMA_IRQHandler+0x2a0>
 8005394:	687b      	ldr	r3, [r7, #4]
 8005396:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8005398:	6878      	ldr	r0, [r7, #4]
 800539a:	4798      	blx	r3
 800539c:	687b      	ldr	r3, [r7, #4]
 800539e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80053a0:	2b00      	cmp	r3, #0
 80053a2:	d032      	beq.n	800540a <HAL_DMA_IRQHandler+0x30e>
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80053a8:	f003 0301 	and.w	r3, r3, #1
 80053ac:	2b00      	cmp	r3, #0
 80053ae:	d022      	beq.n	80053f6 <HAL_DMA_IRQHandler+0x2fa>
 80053b0:	687b      	ldr	r3, [r7, #4]
 80053b2:	2205      	movs	r2, #5
 80053b4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80053b8:	687b      	ldr	r3, [r7, #4]
 80053ba:	681b      	ldr	r3, [r3, #0]
 80053bc:	681a      	ldr	r2, [r3, #0]
 80053be:	687b      	ldr	r3, [r7, #4]
 80053c0:	681b      	ldr	r3, [r3, #0]
 80053c2:	f022 0201 	bic.w	r2, r2, #1
 80053c6:	601a      	str	r2, [r3, #0]
 80053c8:	68bb      	ldr	r3, [r7, #8]
 80053ca:	3301      	adds	r3, #1
 80053cc:	60bb      	str	r3, [r7, #8]
 80053ce:	697a      	ldr	r2, [r7, #20]
 80053d0:	429a      	cmp	r2, r3
 80053d2:	d307      	bcc.n	80053e4 <HAL_DMA_IRQHandler+0x2e8>
 80053d4:	687b      	ldr	r3, [r7, #4]
 80053d6:	681b      	ldr	r3, [r3, #0]
 80053d8:	681b      	ldr	r3, [r3, #0]
 80053da:	f003 0301 	and.w	r3, r3, #1
 80053de:	2b00      	cmp	r3, #0
 80053e0:	d1f2      	bne.n	80053c8 <HAL_DMA_IRQHandler+0x2cc>
 80053e2:	e000      	b.n	80053e6 <HAL_DMA_IRQHandler+0x2ea>
 80053e4:	bf00      	nop
 80053e6:	687b      	ldr	r3, [r7, #4]
 80053e8:	2201      	movs	r2, #1
 80053ea:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80053ee:	687b      	ldr	r3, [r7, #4]
 80053f0:	2200      	movs	r2, #0
 80053f2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80053f6:	687b      	ldr	r3, [r7, #4]
 80053f8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80053fa:	2b00      	cmp	r3, #0
 80053fc:	d005      	beq.n	800540a <HAL_DMA_IRQHandler+0x30e>
 80053fe:	687b      	ldr	r3, [r7, #4]
 8005400:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005402:	6878      	ldr	r0, [r7, #4]
 8005404:	4798      	blx	r3
 8005406:	e000      	b.n	800540a <HAL_DMA_IRQHandler+0x30e>
 8005408:	bf00      	nop
 800540a:	3718      	adds	r7, #24
 800540c:	46bd      	mov	sp, r7
 800540e:	bd80      	pop	{r7, pc}

08005410 <HAL_DMA_GetState>:
 8005410:	b480      	push	{r7}
 8005412:	b083      	sub	sp, #12
 8005414:	af00      	add	r7, sp, #0
 8005416:	6078      	str	r0, [r7, #4]
 8005418:	687b      	ldr	r3, [r7, #4]
 800541a:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800541e:	b2db      	uxtb	r3, r3
 8005420:	4618      	mov	r0, r3
 8005422:	370c      	adds	r7, #12
 8005424:	46bd      	mov	sp, r7
 8005426:	f85d 7b04 	ldr.w	r7, [sp], #4
 800542a:	4770      	bx	lr

0800542c <DMA_SetConfig>:
 800542c:	b480      	push	{r7}
 800542e:	b085      	sub	sp, #20
 8005430:	af00      	add	r7, sp, #0
 8005432:	60f8      	str	r0, [r7, #12]
 8005434:	60b9      	str	r1, [r7, #8]
 8005436:	607a      	str	r2, [r7, #4]
 8005438:	603b      	str	r3, [r7, #0]
 800543a:	68fb      	ldr	r3, [r7, #12]
 800543c:	681b      	ldr	r3, [r3, #0]
 800543e:	681a      	ldr	r2, [r3, #0]
 8005440:	68fb      	ldr	r3, [r7, #12]
 8005442:	681b      	ldr	r3, [r3, #0]
 8005444:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8005448:	601a      	str	r2, [r3, #0]
 800544a:	68fb      	ldr	r3, [r7, #12]
 800544c:	681b      	ldr	r3, [r3, #0]
 800544e:	683a      	ldr	r2, [r7, #0]
 8005450:	605a      	str	r2, [r3, #4]
 8005452:	68fb      	ldr	r3, [r7, #12]
 8005454:	689b      	ldr	r3, [r3, #8]
 8005456:	2b40      	cmp	r3, #64	; 0x40
 8005458:	d108      	bne.n	800546c <DMA_SetConfig+0x40>
 800545a:	68fb      	ldr	r3, [r7, #12]
 800545c:	681b      	ldr	r3, [r3, #0]
 800545e:	687a      	ldr	r2, [r7, #4]
 8005460:	609a      	str	r2, [r3, #8]
 8005462:	68fb      	ldr	r3, [r7, #12]
 8005464:	681b      	ldr	r3, [r3, #0]
 8005466:	68ba      	ldr	r2, [r7, #8]
 8005468:	60da      	str	r2, [r3, #12]
 800546a:	e007      	b.n	800547c <DMA_SetConfig+0x50>
 800546c:	68fb      	ldr	r3, [r7, #12]
 800546e:	681b      	ldr	r3, [r3, #0]
 8005470:	68ba      	ldr	r2, [r7, #8]
 8005472:	609a      	str	r2, [r3, #8]
 8005474:	68fb      	ldr	r3, [r7, #12]
 8005476:	681b      	ldr	r3, [r3, #0]
 8005478:	687a      	ldr	r2, [r7, #4]
 800547a:	60da      	str	r2, [r3, #12]
 800547c:	bf00      	nop
 800547e:	3714      	adds	r7, #20
 8005480:	46bd      	mov	sp, r7
 8005482:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005486:	4770      	bx	lr

08005488 <DMA_CalcBaseAndBitshift>:
 8005488:	b480      	push	{r7}
 800548a:	b085      	sub	sp, #20
 800548c:	af00      	add	r7, sp, #0
 800548e:	6078      	str	r0, [r7, #4]
 8005490:	687b      	ldr	r3, [r7, #4]
 8005492:	681b      	ldr	r3, [r3, #0]
 8005494:	b2db      	uxtb	r3, r3
 8005496:	3b10      	subs	r3, #16
 8005498:	4a14      	ldr	r2, [pc, #80]	; (80054ec <DMA_CalcBaseAndBitshift+0x64>)
 800549a:	fba2 2303 	umull	r2, r3, r2, r3
 800549e:	091b      	lsrs	r3, r3, #4
 80054a0:	60fb      	str	r3, [r7, #12]
 80054a2:	4a13      	ldr	r2, [pc, #76]	; (80054f0 <DMA_CalcBaseAndBitshift+0x68>)
 80054a4:	68fb      	ldr	r3, [r7, #12]
 80054a6:	4413      	add	r3, r2
 80054a8:	781b      	ldrb	r3, [r3, #0]
 80054aa:	461a      	mov	r2, r3
 80054ac:	687b      	ldr	r3, [r7, #4]
 80054ae:	65da      	str	r2, [r3, #92]	; 0x5c
 80054b0:	68fb      	ldr	r3, [r7, #12]
 80054b2:	2b03      	cmp	r3, #3
 80054b4:	d909      	bls.n	80054ca <DMA_CalcBaseAndBitshift+0x42>
 80054b6:	687b      	ldr	r3, [r7, #4]
 80054b8:	681b      	ldr	r3, [r3, #0]
 80054ba:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80054be:	f023 0303 	bic.w	r3, r3, #3
 80054c2:	1d1a      	adds	r2, r3, #4
 80054c4:	687b      	ldr	r3, [r7, #4]
 80054c6:	659a      	str	r2, [r3, #88]	; 0x58
 80054c8:	e007      	b.n	80054da <DMA_CalcBaseAndBitshift+0x52>
 80054ca:	687b      	ldr	r3, [r7, #4]
 80054cc:	681b      	ldr	r3, [r3, #0]
 80054ce:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80054d2:	f023 0303 	bic.w	r3, r3, #3
 80054d6:	687a      	ldr	r2, [r7, #4]
 80054d8:	6593      	str	r3, [r2, #88]	; 0x58
 80054da:	687b      	ldr	r3, [r7, #4]
 80054dc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80054de:	4618      	mov	r0, r3
 80054e0:	3714      	adds	r7, #20
 80054e2:	46bd      	mov	sp, r7
 80054e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054e8:	4770      	bx	lr
 80054ea:	bf00      	nop
 80054ec:	aaaaaaab 	.word	0xaaaaaaab
 80054f0:	0800bd10 	.word	0x0800bd10

080054f4 <DMA_CheckFifoParam>:
 80054f4:	b480      	push	{r7}
 80054f6:	b085      	sub	sp, #20
 80054f8:	af00      	add	r7, sp, #0
 80054fa:	6078      	str	r0, [r7, #4]
 80054fc:	2300      	movs	r3, #0
 80054fe:	73fb      	strb	r3, [r7, #15]
 8005500:	687b      	ldr	r3, [r7, #4]
 8005502:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005504:	60bb      	str	r3, [r7, #8]
 8005506:	687b      	ldr	r3, [r7, #4]
 8005508:	699b      	ldr	r3, [r3, #24]
 800550a:	2b00      	cmp	r3, #0
 800550c:	d11f      	bne.n	800554e <DMA_CheckFifoParam+0x5a>
 800550e:	68bb      	ldr	r3, [r7, #8]
 8005510:	2b03      	cmp	r3, #3
 8005512:	d856      	bhi.n	80055c2 <DMA_CheckFifoParam+0xce>
 8005514:	a201      	add	r2, pc, #4	; (adr r2, 800551c <DMA_CheckFifoParam+0x28>)
 8005516:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800551a:	bf00      	nop
 800551c:	0800552d 	.word	0x0800552d
 8005520:	0800553f 	.word	0x0800553f
 8005524:	0800552d 	.word	0x0800552d
 8005528:	080055c3 	.word	0x080055c3
 800552c:	687b      	ldr	r3, [r7, #4]
 800552e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005530:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005534:	2b00      	cmp	r3, #0
 8005536:	d046      	beq.n	80055c6 <DMA_CheckFifoParam+0xd2>
 8005538:	2301      	movs	r3, #1
 800553a:	73fb      	strb	r3, [r7, #15]
 800553c:	e043      	b.n	80055c6 <DMA_CheckFifoParam+0xd2>
 800553e:	687b      	ldr	r3, [r7, #4]
 8005540:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005542:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8005546:	d140      	bne.n	80055ca <DMA_CheckFifoParam+0xd6>
 8005548:	2301      	movs	r3, #1
 800554a:	73fb      	strb	r3, [r7, #15]
 800554c:	e03d      	b.n	80055ca <DMA_CheckFifoParam+0xd6>
 800554e:	687b      	ldr	r3, [r7, #4]
 8005550:	699b      	ldr	r3, [r3, #24]
 8005552:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8005556:	d121      	bne.n	800559c <DMA_CheckFifoParam+0xa8>
 8005558:	68bb      	ldr	r3, [r7, #8]
 800555a:	2b03      	cmp	r3, #3
 800555c:	d837      	bhi.n	80055ce <DMA_CheckFifoParam+0xda>
 800555e:	a201      	add	r2, pc, #4	; (adr r2, 8005564 <DMA_CheckFifoParam+0x70>)
 8005560:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005564:	08005575 	.word	0x08005575
 8005568:	0800557b 	.word	0x0800557b
 800556c:	08005575 	.word	0x08005575
 8005570:	0800558d 	.word	0x0800558d
 8005574:	2301      	movs	r3, #1
 8005576:	73fb      	strb	r3, [r7, #15]
 8005578:	e030      	b.n	80055dc <DMA_CheckFifoParam+0xe8>
 800557a:	687b      	ldr	r3, [r7, #4]
 800557c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800557e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005582:	2b00      	cmp	r3, #0
 8005584:	d025      	beq.n	80055d2 <DMA_CheckFifoParam+0xde>
 8005586:	2301      	movs	r3, #1
 8005588:	73fb      	strb	r3, [r7, #15]
 800558a:	e022      	b.n	80055d2 <DMA_CheckFifoParam+0xde>
 800558c:	687b      	ldr	r3, [r7, #4]
 800558e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005590:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8005594:	d11f      	bne.n	80055d6 <DMA_CheckFifoParam+0xe2>
 8005596:	2301      	movs	r3, #1
 8005598:	73fb      	strb	r3, [r7, #15]
 800559a:	e01c      	b.n	80055d6 <DMA_CheckFifoParam+0xe2>
 800559c:	68bb      	ldr	r3, [r7, #8]
 800559e:	2b02      	cmp	r3, #2
 80055a0:	d903      	bls.n	80055aa <DMA_CheckFifoParam+0xb6>
 80055a2:	68bb      	ldr	r3, [r7, #8]
 80055a4:	2b03      	cmp	r3, #3
 80055a6:	d003      	beq.n	80055b0 <DMA_CheckFifoParam+0xbc>
 80055a8:	e018      	b.n	80055dc <DMA_CheckFifoParam+0xe8>
 80055aa:	2301      	movs	r3, #1
 80055ac:	73fb      	strb	r3, [r7, #15]
 80055ae:	e015      	b.n	80055dc <DMA_CheckFifoParam+0xe8>
 80055b0:	687b      	ldr	r3, [r7, #4]
 80055b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80055b4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80055b8:	2b00      	cmp	r3, #0
 80055ba:	d00e      	beq.n	80055da <DMA_CheckFifoParam+0xe6>
 80055bc:	2301      	movs	r3, #1
 80055be:	73fb      	strb	r3, [r7, #15]
 80055c0:	e00b      	b.n	80055da <DMA_CheckFifoParam+0xe6>
 80055c2:	bf00      	nop
 80055c4:	e00a      	b.n	80055dc <DMA_CheckFifoParam+0xe8>
 80055c6:	bf00      	nop
 80055c8:	e008      	b.n	80055dc <DMA_CheckFifoParam+0xe8>
 80055ca:	bf00      	nop
 80055cc:	e006      	b.n	80055dc <DMA_CheckFifoParam+0xe8>
 80055ce:	bf00      	nop
 80055d0:	e004      	b.n	80055dc <DMA_CheckFifoParam+0xe8>
 80055d2:	bf00      	nop
 80055d4:	e002      	b.n	80055dc <DMA_CheckFifoParam+0xe8>
 80055d6:	bf00      	nop
 80055d8:	e000      	b.n	80055dc <DMA_CheckFifoParam+0xe8>
 80055da:	bf00      	nop
 80055dc:	7bfb      	ldrb	r3, [r7, #15]
 80055de:	4618      	mov	r0, r3
 80055e0:	3714      	adds	r7, #20
 80055e2:	46bd      	mov	sp, r7
 80055e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055e8:	4770      	bx	lr
 80055ea:	bf00      	nop

080055ec <HAL_GPIO_Init>:
 80055ec:	b480      	push	{r7}
 80055ee:	b089      	sub	sp, #36	; 0x24
 80055f0:	af00      	add	r7, sp, #0
 80055f2:	6078      	str	r0, [r7, #4]
 80055f4:	6039      	str	r1, [r7, #0]
 80055f6:	2300      	movs	r3, #0
 80055f8:	617b      	str	r3, [r7, #20]
 80055fa:	2300      	movs	r3, #0
 80055fc:	613b      	str	r3, [r7, #16]
 80055fe:	2300      	movs	r3, #0
 8005600:	61bb      	str	r3, [r7, #24]
 8005602:	2300      	movs	r3, #0
 8005604:	61fb      	str	r3, [r7, #28]
 8005606:	e159      	b.n	80058bc <HAL_GPIO_Init+0x2d0>
 8005608:	2201      	movs	r2, #1
 800560a:	69fb      	ldr	r3, [r7, #28]
 800560c:	fa02 f303 	lsl.w	r3, r2, r3
 8005610:	617b      	str	r3, [r7, #20]
 8005612:	683b      	ldr	r3, [r7, #0]
 8005614:	681b      	ldr	r3, [r3, #0]
 8005616:	697a      	ldr	r2, [r7, #20]
 8005618:	4013      	ands	r3, r2
 800561a:	613b      	str	r3, [r7, #16]
 800561c:	693a      	ldr	r2, [r7, #16]
 800561e:	697b      	ldr	r3, [r7, #20]
 8005620:	429a      	cmp	r2, r3
 8005622:	f040 8148 	bne.w	80058b6 <HAL_GPIO_Init+0x2ca>
 8005626:	683b      	ldr	r3, [r7, #0]
 8005628:	685b      	ldr	r3, [r3, #4]
 800562a:	f003 0303 	and.w	r3, r3, #3
 800562e:	2b01      	cmp	r3, #1
 8005630:	d005      	beq.n	800563e <HAL_GPIO_Init+0x52>
 8005632:	683b      	ldr	r3, [r7, #0]
 8005634:	685b      	ldr	r3, [r3, #4]
 8005636:	f003 0303 	and.w	r3, r3, #3
 800563a:	2b02      	cmp	r3, #2
 800563c:	d130      	bne.n	80056a0 <HAL_GPIO_Init+0xb4>
 800563e:	687b      	ldr	r3, [r7, #4]
 8005640:	689b      	ldr	r3, [r3, #8]
 8005642:	61bb      	str	r3, [r7, #24]
 8005644:	69fb      	ldr	r3, [r7, #28]
 8005646:	005b      	lsls	r3, r3, #1
 8005648:	2203      	movs	r2, #3
 800564a:	fa02 f303 	lsl.w	r3, r2, r3
 800564e:	43db      	mvns	r3, r3
 8005650:	69ba      	ldr	r2, [r7, #24]
 8005652:	4013      	ands	r3, r2
 8005654:	61bb      	str	r3, [r7, #24]
 8005656:	683b      	ldr	r3, [r7, #0]
 8005658:	68da      	ldr	r2, [r3, #12]
 800565a:	69fb      	ldr	r3, [r7, #28]
 800565c:	005b      	lsls	r3, r3, #1
 800565e:	fa02 f303 	lsl.w	r3, r2, r3
 8005662:	69ba      	ldr	r2, [r7, #24]
 8005664:	4313      	orrs	r3, r2
 8005666:	61bb      	str	r3, [r7, #24]
 8005668:	687b      	ldr	r3, [r7, #4]
 800566a:	69ba      	ldr	r2, [r7, #24]
 800566c:	609a      	str	r2, [r3, #8]
 800566e:	687b      	ldr	r3, [r7, #4]
 8005670:	685b      	ldr	r3, [r3, #4]
 8005672:	61bb      	str	r3, [r7, #24]
 8005674:	2201      	movs	r2, #1
 8005676:	69fb      	ldr	r3, [r7, #28]
 8005678:	fa02 f303 	lsl.w	r3, r2, r3
 800567c:	43db      	mvns	r3, r3
 800567e:	69ba      	ldr	r2, [r7, #24]
 8005680:	4013      	ands	r3, r2
 8005682:	61bb      	str	r3, [r7, #24]
 8005684:	683b      	ldr	r3, [r7, #0]
 8005686:	685b      	ldr	r3, [r3, #4]
 8005688:	091b      	lsrs	r3, r3, #4
 800568a:	f003 0201 	and.w	r2, r3, #1
 800568e:	69fb      	ldr	r3, [r7, #28]
 8005690:	fa02 f303 	lsl.w	r3, r2, r3
 8005694:	69ba      	ldr	r2, [r7, #24]
 8005696:	4313      	orrs	r3, r2
 8005698:	61bb      	str	r3, [r7, #24]
 800569a:	687b      	ldr	r3, [r7, #4]
 800569c:	69ba      	ldr	r2, [r7, #24]
 800569e:	605a      	str	r2, [r3, #4]
 80056a0:	683b      	ldr	r3, [r7, #0]
 80056a2:	685b      	ldr	r3, [r3, #4]
 80056a4:	f003 0303 	and.w	r3, r3, #3
 80056a8:	2b03      	cmp	r3, #3
 80056aa:	d017      	beq.n	80056dc <HAL_GPIO_Init+0xf0>
 80056ac:	687b      	ldr	r3, [r7, #4]
 80056ae:	68db      	ldr	r3, [r3, #12]
 80056b0:	61bb      	str	r3, [r7, #24]
 80056b2:	69fb      	ldr	r3, [r7, #28]
 80056b4:	005b      	lsls	r3, r3, #1
 80056b6:	2203      	movs	r2, #3
 80056b8:	fa02 f303 	lsl.w	r3, r2, r3
 80056bc:	43db      	mvns	r3, r3
 80056be:	69ba      	ldr	r2, [r7, #24]
 80056c0:	4013      	ands	r3, r2
 80056c2:	61bb      	str	r3, [r7, #24]
 80056c4:	683b      	ldr	r3, [r7, #0]
 80056c6:	689a      	ldr	r2, [r3, #8]
 80056c8:	69fb      	ldr	r3, [r7, #28]
 80056ca:	005b      	lsls	r3, r3, #1
 80056cc:	fa02 f303 	lsl.w	r3, r2, r3
 80056d0:	69ba      	ldr	r2, [r7, #24]
 80056d2:	4313      	orrs	r3, r2
 80056d4:	61bb      	str	r3, [r7, #24]
 80056d6:	687b      	ldr	r3, [r7, #4]
 80056d8:	69ba      	ldr	r2, [r7, #24]
 80056da:	60da      	str	r2, [r3, #12]
 80056dc:	683b      	ldr	r3, [r7, #0]
 80056de:	685b      	ldr	r3, [r3, #4]
 80056e0:	f003 0303 	and.w	r3, r3, #3
 80056e4:	2b02      	cmp	r3, #2
 80056e6:	d123      	bne.n	8005730 <HAL_GPIO_Init+0x144>
 80056e8:	69fb      	ldr	r3, [r7, #28]
 80056ea:	08da      	lsrs	r2, r3, #3
 80056ec:	687b      	ldr	r3, [r7, #4]
 80056ee:	3208      	adds	r2, #8
 80056f0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80056f4:	61bb      	str	r3, [r7, #24]
 80056f6:	69fb      	ldr	r3, [r7, #28]
 80056f8:	f003 0307 	and.w	r3, r3, #7
 80056fc:	009b      	lsls	r3, r3, #2
 80056fe:	220f      	movs	r2, #15
 8005700:	fa02 f303 	lsl.w	r3, r2, r3
 8005704:	43db      	mvns	r3, r3
 8005706:	69ba      	ldr	r2, [r7, #24]
 8005708:	4013      	ands	r3, r2
 800570a:	61bb      	str	r3, [r7, #24]
 800570c:	683b      	ldr	r3, [r7, #0]
 800570e:	691a      	ldr	r2, [r3, #16]
 8005710:	69fb      	ldr	r3, [r7, #28]
 8005712:	f003 0307 	and.w	r3, r3, #7
 8005716:	009b      	lsls	r3, r3, #2
 8005718:	fa02 f303 	lsl.w	r3, r2, r3
 800571c:	69ba      	ldr	r2, [r7, #24]
 800571e:	4313      	orrs	r3, r2
 8005720:	61bb      	str	r3, [r7, #24]
 8005722:	69fb      	ldr	r3, [r7, #28]
 8005724:	08da      	lsrs	r2, r3, #3
 8005726:	687b      	ldr	r3, [r7, #4]
 8005728:	3208      	adds	r2, #8
 800572a:	69b9      	ldr	r1, [r7, #24]
 800572c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8005730:	687b      	ldr	r3, [r7, #4]
 8005732:	681b      	ldr	r3, [r3, #0]
 8005734:	61bb      	str	r3, [r7, #24]
 8005736:	69fb      	ldr	r3, [r7, #28]
 8005738:	005b      	lsls	r3, r3, #1
 800573a:	2203      	movs	r2, #3
 800573c:	fa02 f303 	lsl.w	r3, r2, r3
 8005740:	43db      	mvns	r3, r3
 8005742:	69ba      	ldr	r2, [r7, #24]
 8005744:	4013      	ands	r3, r2
 8005746:	61bb      	str	r3, [r7, #24]
 8005748:	683b      	ldr	r3, [r7, #0]
 800574a:	685b      	ldr	r3, [r3, #4]
 800574c:	f003 0203 	and.w	r2, r3, #3
 8005750:	69fb      	ldr	r3, [r7, #28]
 8005752:	005b      	lsls	r3, r3, #1
 8005754:	fa02 f303 	lsl.w	r3, r2, r3
 8005758:	69ba      	ldr	r2, [r7, #24]
 800575a:	4313      	orrs	r3, r2
 800575c:	61bb      	str	r3, [r7, #24]
 800575e:	687b      	ldr	r3, [r7, #4]
 8005760:	69ba      	ldr	r2, [r7, #24]
 8005762:	601a      	str	r2, [r3, #0]
 8005764:	683b      	ldr	r3, [r7, #0]
 8005766:	685b      	ldr	r3, [r3, #4]
 8005768:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800576c:	2b00      	cmp	r3, #0
 800576e:	f000 80a2 	beq.w	80058b6 <HAL_GPIO_Init+0x2ca>
 8005772:	2300      	movs	r3, #0
 8005774:	60fb      	str	r3, [r7, #12]
 8005776:	4b57      	ldr	r3, [pc, #348]	; (80058d4 <HAL_GPIO_Init+0x2e8>)
 8005778:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800577a:	4a56      	ldr	r2, [pc, #344]	; (80058d4 <HAL_GPIO_Init+0x2e8>)
 800577c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005780:	6453      	str	r3, [r2, #68]	; 0x44
 8005782:	4b54      	ldr	r3, [pc, #336]	; (80058d4 <HAL_GPIO_Init+0x2e8>)
 8005784:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005786:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800578a:	60fb      	str	r3, [r7, #12]
 800578c:	68fb      	ldr	r3, [r7, #12]
 800578e:	4a52      	ldr	r2, [pc, #328]	; (80058d8 <HAL_GPIO_Init+0x2ec>)
 8005790:	69fb      	ldr	r3, [r7, #28]
 8005792:	089b      	lsrs	r3, r3, #2
 8005794:	3302      	adds	r3, #2
 8005796:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800579a:	61bb      	str	r3, [r7, #24]
 800579c:	69fb      	ldr	r3, [r7, #28]
 800579e:	f003 0303 	and.w	r3, r3, #3
 80057a2:	009b      	lsls	r3, r3, #2
 80057a4:	220f      	movs	r2, #15
 80057a6:	fa02 f303 	lsl.w	r3, r2, r3
 80057aa:	43db      	mvns	r3, r3
 80057ac:	69ba      	ldr	r2, [r7, #24]
 80057ae:	4013      	ands	r3, r2
 80057b0:	61bb      	str	r3, [r7, #24]
 80057b2:	687b      	ldr	r3, [r7, #4]
 80057b4:	4a49      	ldr	r2, [pc, #292]	; (80058dc <HAL_GPIO_Init+0x2f0>)
 80057b6:	4293      	cmp	r3, r2
 80057b8:	d019      	beq.n	80057ee <HAL_GPIO_Init+0x202>
 80057ba:	687b      	ldr	r3, [r7, #4]
 80057bc:	4a48      	ldr	r2, [pc, #288]	; (80058e0 <HAL_GPIO_Init+0x2f4>)
 80057be:	4293      	cmp	r3, r2
 80057c0:	d013      	beq.n	80057ea <HAL_GPIO_Init+0x1fe>
 80057c2:	687b      	ldr	r3, [r7, #4]
 80057c4:	4a47      	ldr	r2, [pc, #284]	; (80058e4 <HAL_GPIO_Init+0x2f8>)
 80057c6:	4293      	cmp	r3, r2
 80057c8:	d00d      	beq.n	80057e6 <HAL_GPIO_Init+0x1fa>
 80057ca:	687b      	ldr	r3, [r7, #4]
 80057cc:	4a46      	ldr	r2, [pc, #280]	; (80058e8 <HAL_GPIO_Init+0x2fc>)
 80057ce:	4293      	cmp	r3, r2
 80057d0:	d007      	beq.n	80057e2 <HAL_GPIO_Init+0x1f6>
 80057d2:	687b      	ldr	r3, [r7, #4]
 80057d4:	4a45      	ldr	r2, [pc, #276]	; (80058ec <HAL_GPIO_Init+0x300>)
 80057d6:	4293      	cmp	r3, r2
 80057d8:	d101      	bne.n	80057de <HAL_GPIO_Init+0x1f2>
 80057da:	2304      	movs	r3, #4
 80057dc:	e008      	b.n	80057f0 <HAL_GPIO_Init+0x204>
 80057de:	2307      	movs	r3, #7
 80057e0:	e006      	b.n	80057f0 <HAL_GPIO_Init+0x204>
 80057e2:	2303      	movs	r3, #3
 80057e4:	e004      	b.n	80057f0 <HAL_GPIO_Init+0x204>
 80057e6:	2302      	movs	r3, #2
 80057e8:	e002      	b.n	80057f0 <HAL_GPIO_Init+0x204>
 80057ea:	2301      	movs	r3, #1
 80057ec:	e000      	b.n	80057f0 <HAL_GPIO_Init+0x204>
 80057ee:	2300      	movs	r3, #0
 80057f0:	69fa      	ldr	r2, [r7, #28]
 80057f2:	f002 0203 	and.w	r2, r2, #3
 80057f6:	0092      	lsls	r2, r2, #2
 80057f8:	4093      	lsls	r3, r2
 80057fa:	69ba      	ldr	r2, [r7, #24]
 80057fc:	4313      	orrs	r3, r2
 80057fe:	61bb      	str	r3, [r7, #24]
 8005800:	4935      	ldr	r1, [pc, #212]	; (80058d8 <HAL_GPIO_Init+0x2ec>)
 8005802:	69fb      	ldr	r3, [r7, #28]
 8005804:	089b      	lsrs	r3, r3, #2
 8005806:	3302      	adds	r3, #2
 8005808:	69ba      	ldr	r2, [r7, #24]
 800580a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800580e:	4b38      	ldr	r3, [pc, #224]	; (80058f0 <HAL_GPIO_Init+0x304>)
 8005810:	689b      	ldr	r3, [r3, #8]
 8005812:	61bb      	str	r3, [r7, #24]
 8005814:	693b      	ldr	r3, [r7, #16]
 8005816:	43db      	mvns	r3, r3
 8005818:	69ba      	ldr	r2, [r7, #24]
 800581a:	4013      	ands	r3, r2
 800581c:	61bb      	str	r3, [r7, #24]
 800581e:	683b      	ldr	r3, [r7, #0]
 8005820:	685b      	ldr	r3, [r3, #4]
 8005822:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005826:	2b00      	cmp	r3, #0
 8005828:	d003      	beq.n	8005832 <HAL_GPIO_Init+0x246>
 800582a:	69ba      	ldr	r2, [r7, #24]
 800582c:	693b      	ldr	r3, [r7, #16]
 800582e:	4313      	orrs	r3, r2
 8005830:	61bb      	str	r3, [r7, #24]
 8005832:	4a2f      	ldr	r2, [pc, #188]	; (80058f0 <HAL_GPIO_Init+0x304>)
 8005834:	69bb      	ldr	r3, [r7, #24]
 8005836:	6093      	str	r3, [r2, #8]
 8005838:	4b2d      	ldr	r3, [pc, #180]	; (80058f0 <HAL_GPIO_Init+0x304>)
 800583a:	68db      	ldr	r3, [r3, #12]
 800583c:	61bb      	str	r3, [r7, #24]
 800583e:	693b      	ldr	r3, [r7, #16]
 8005840:	43db      	mvns	r3, r3
 8005842:	69ba      	ldr	r2, [r7, #24]
 8005844:	4013      	ands	r3, r2
 8005846:	61bb      	str	r3, [r7, #24]
 8005848:	683b      	ldr	r3, [r7, #0]
 800584a:	685b      	ldr	r3, [r3, #4]
 800584c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005850:	2b00      	cmp	r3, #0
 8005852:	d003      	beq.n	800585c <HAL_GPIO_Init+0x270>
 8005854:	69ba      	ldr	r2, [r7, #24]
 8005856:	693b      	ldr	r3, [r7, #16]
 8005858:	4313      	orrs	r3, r2
 800585a:	61bb      	str	r3, [r7, #24]
 800585c:	4a24      	ldr	r2, [pc, #144]	; (80058f0 <HAL_GPIO_Init+0x304>)
 800585e:	69bb      	ldr	r3, [r7, #24]
 8005860:	60d3      	str	r3, [r2, #12]
 8005862:	4b23      	ldr	r3, [pc, #140]	; (80058f0 <HAL_GPIO_Init+0x304>)
 8005864:	685b      	ldr	r3, [r3, #4]
 8005866:	61bb      	str	r3, [r7, #24]
 8005868:	693b      	ldr	r3, [r7, #16]
 800586a:	43db      	mvns	r3, r3
 800586c:	69ba      	ldr	r2, [r7, #24]
 800586e:	4013      	ands	r3, r2
 8005870:	61bb      	str	r3, [r7, #24]
 8005872:	683b      	ldr	r3, [r7, #0]
 8005874:	685b      	ldr	r3, [r3, #4]
 8005876:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800587a:	2b00      	cmp	r3, #0
 800587c:	d003      	beq.n	8005886 <HAL_GPIO_Init+0x29a>
 800587e:	69ba      	ldr	r2, [r7, #24]
 8005880:	693b      	ldr	r3, [r7, #16]
 8005882:	4313      	orrs	r3, r2
 8005884:	61bb      	str	r3, [r7, #24]
 8005886:	4a1a      	ldr	r2, [pc, #104]	; (80058f0 <HAL_GPIO_Init+0x304>)
 8005888:	69bb      	ldr	r3, [r7, #24]
 800588a:	6053      	str	r3, [r2, #4]
 800588c:	4b18      	ldr	r3, [pc, #96]	; (80058f0 <HAL_GPIO_Init+0x304>)
 800588e:	681b      	ldr	r3, [r3, #0]
 8005890:	61bb      	str	r3, [r7, #24]
 8005892:	693b      	ldr	r3, [r7, #16]
 8005894:	43db      	mvns	r3, r3
 8005896:	69ba      	ldr	r2, [r7, #24]
 8005898:	4013      	ands	r3, r2
 800589a:	61bb      	str	r3, [r7, #24]
 800589c:	683b      	ldr	r3, [r7, #0]
 800589e:	685b      	ldr	r3, [r3, #4]
 80058a0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80058a4:	2b00      	cmp	r3, #0
 80058a6:	d003      	beq.n	80058b0 <HAL_GPIO_Init+0x2c4>
 80058a8:	69ba      	ldr	r2, [r7, #24]
 80058aa:	693b      	ldr	r3, [r7, #16]
 80058ac:	4313      	orrs	r3, r2
 80058ae:	61bb      	str	r3, [r7, #24]
 80058b0:	4a0f      	ldr	r2, [pc, #60]	; (80058f0 <HAL_GPIO_Init+0x304>)
 80058b2:	69bb      	ldr	r3, [r7, #24]
 80058b4:	6013      	str	r3, [r2, #0]
 80058b6:	69fb      	ldr	r3, [r7, #28]
 80058b8:	3301      	adds	r3, #1
 80058ba:	61fb      	str	r3, [r7, #28]
 80058bc:	69fb      	ldr	r3, [r7, #28]
 80058be:	2b0f      	cmp	r3, #15
 80058c0:	f67f aea2 	bls.w	8005608 <HAL_GPIO_Init+0x1c>
 80058c4:	bf00      	nop
 80058c6:	bf00      	nop
 80058c8:	3724      	adds	r7, #36	; 0x24
 80058ca:	46bd      	mov	sp, r7
 80058cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058d0:	4770      	bx	lr
 80058d2:	bf00      	nop
 80058d4:	40023800 	.word	0x40023800
 80058d8:	40013800 	.word	0x40013800
 80058dc:	40020000 	.word	0x40020000
 80058e0:	40020400 	.word	0x40020400
 80058e4:	40020800 	.word	0x40020800
 80058e8:	40020c00 	.word	0x40020c00
 80058ec:	40021000 	.word	0x40021000
 80058f0:	40013c00 	.word	0x40013c00

080058f4 <HAL_GPIO_ReadPin>:
 80058f4:	b480      	push	{r7}
 80058f6:	b085      	sub	sp, #20
 80058f8:	af00      	add	r7, sp, #0
 80058fa:	6078      	str	r0, [r7, #4]
 80058fc:	460b      	mov	r3, r1
 80058fe:	807b      	strh	r3, [r7, #2]
 8005900:	687b      	ldr	r3, [r7, #4]
 8005902:	691a      	ldr	r2, [r3, #16]
 8005904:	887b      	ldrh	r3, [r7, #2]
 8005906:	4013      	ands	r3, r2
 8005908:	2b00      	cmp	r3, #0
 800590a:	d002      	beq.n	8005912 <HAL_GPIO_ReadPin+0x1e>
 800590c:	2301      	movs	r3, #1
 800590e:	73fb      	strb	r3, [r7, #15]
 8005910:	e001      	b.n	8005916 <HAL_GPIO_ReadPin+0x22>
 8005912:	2300      	movs	r3, #0
 8005914:	73fb      	strb	r3, [r7, #15]
 8005916:	7bfb      	ldrb	r3, [r7, #15]
 8005918:	4618      	mov	r0, r3
 800591a:	3714      	adds	r7, #20
 800591c:	46bd      	mov	sp, r7
 800591e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005922:	4770      	bx	lr

08005924 <HAL_GPIO_WritePin>:
 8005924:	b480      	push	{r7}
 8005926:	b083      	sub	sp, #12
 8005928:	af00      	add	r7, sp, #0
 800592a:	6078      	str	r0, [r7, #4]
 800592c:	460b      	mov	r3, r1
 800592e:	807b      	strh	r3, [r7, #2]
 8005930:	4613      	mov	r3, r2
 8005932:	707b      	strb	r3, [r7, #1]
 8005934:	787b      	ldrb	r3, [r7, #1]
 8005936:	2b00      	cmp	r3, #0
 8005938:	d003      	beq.n	8005942 <HAL_GPIO_WritePin+0x1e>
 800593a:	887a      	ldrh	r2, [r7, #2]
 800593c:	687b      	ldr	r3, [r7, #4]
 800593e:	619a      	str	r2, [r3, #24]
 8005940:	e003      	b.n	800594a <HAL_GPIO_WritePin+0x26>
 8005942:	887b      	ldrh	r3, [r7, #2]
 8005944:	041a      	lsls	r2, r3, #16
 8005946:	687b      	ldr	r3, [r7, #4]
 8005948:	619a      	str	r2, [r3, #24]
 800594a:	bf00      	nop
 800594c:	370c      	adds	r7, #12
 800594e:	46bd      	mov	sp, r7
 8005950:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005954:	4770      	bx	lr
	...

08005958 <HAL_GPIO_EXTI_IRQHandler>:
 8005958:	b580      	push	{r7, lr}
 800595a:	b082      	sub	sp, #8
 800595c:	af00      	add	r7, sp, #0
 800595e:	4603      	mov	r3, r0
 8005960:	80fb      	strh	r3, [r7, #6]
 8005962:	4b08      	ldr	r3, [pc, #32]	; (8005984 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8005964:	695a      	ldr	r2, [r3, #20]
 8005966:	88fb      	ldrh	r3, [r7, #6]
 8005968:	4013      	ands	r3, r2
 800596a:	2b00      	cmp	r3, #0
 800596c:	d006      	beq.n	800597c <HAL_GPIO_EXTI_IRQHandler+0x24>
 800596e:	4a05      	ldr	r2, [pc, #20]	; (8005984 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8005970:	88fb      	ldrh	r3, [r7, #6]
 8005972:	6153      	str	r3, [r2, #20]
 8005974:	88fb      	ldrh	r3, [r7, #6]
 8005976:	4618      	mov	r0, r3
 8005978:	f7fd ff26 	bl	80037c8 <HAL_GPIO_EXTI_Callback>
 800597c:	bf00      	nop
 800597e:	3708      	adds	r7, #8
 8005980:	46bd      	mov	sp, r7
 8005982:	bd80      	pop	{r7, pc}
 8005984:	40013c00 	.word	0x40013c00

08005988 <HAL_I2C_Init>:
 8005988:	b580      	push	{r7, lr}
 800598a:	b084      	sub	sp, #16
 800598c:	af00      	add	r7, sp, #0
 800598e:	6078      	str	r0, [r7, #4]
 8005990:	687b      	ldr	r3, [r7, #4]
 8005992:	2b00      	cmp	r3, #0
 8005994:	d101      	bne.n	800599a <HAL_I2C_Init+0x12>
 8005996:	2301      	movs	r3, #1
 8005998:	e12b      	b.n	8005bf2 <HAL_I2C_Init+0x26a>
 800599a:	687b      	ldr	r3, [r7, #4]
 800599c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80059a0:	b2db      	uxtb	r3, r3
 80059a2:	2b00      	cmp	r3, #0
 80059a4:	d106      	bne.n	80059b4 <HAL_I2C_Init+0x2c>
 80059a6:	687b      	ldr	r3, [r7, #4]
 80059a8:	2200      	movs	r2, #0
 80059aa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80059ae:	6878      	ldr	r0, [r7, #4]
 80059b0:	f7fe fd70 	bl	8004494 <HAL_I2C_MspInit>
 80059b4:	687b      	ldr	r3, [r7, #4]
 80059b6:	2224      	movs	r2, #36	; 0x24
 80059b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80059bc:	687b      	ldr	r3, [r7, #4]
 80059be:	681b      	ldr	r3, [r3, #0]
 80059c0:	681a      	ldr	r2, [r3, #0]
 80059c2:	687b      	ldr	r3, [r7, #4]
 80059c4:	681b      	ldr	r3, [r3, #0]
 80059c6:	f022 0201 	bic.w	r2, r2, #1
 80059ca:	601a      	str	r2, [r3, #0]
 80059cc:	687b      	ldr	r3, [r7, #4]
 80059ce:	681b      	ldr	r3, [r3, #0]
 80059d0:	681a      	ldr	r2, [r3, #0]
 80059d2:	687b      	ldr	r3, [r7, #4]
 80059d4:	681b      	ldr	r3, [r3, #0]
 80059d6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80059da:	601a      	str	r2, [r3, #0]
 80059dc:	687b      	ldr	r3, [r7, #4]
 80059de:	681b      	ldr	r3, [r3, #0]
 80059e0:	681a      	ldr	r2, [r3, #0]
 80059e2:	687b      	ldr	r3, [r7, #4]
 80059e4:	681b      	ldr	r3, [r3, #0]
 80059e6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80059ea:	601a      	str	r2, [r3, #0]
 80059ec:	f003 f8ac 	bl	8008b48 <HAL_RCC_GetPCLK1Freq>
 80059f0:	60f8      	str	r0, [r7, #12]
 80059f2:	687b      	ldr	r3, [r7, #4]
 80059f4:	685b      	ldr	r3, [r3, #4]
 80059f6:	4a81      	ldr	r2, [pc, #516]	; (8005bfc <HAL_I2C_Init+0x274>)
 80059f8:	4293      	cmp	r3, r2
 80059fa:	d807      	bhi.n	8005a0c <HAL_I2C_Init+0x84>
 80059fc:	68fb      	ldr	r3, [r7, #12]
 80059fe:	4a80      	ldr	r2, [pc, #512]	; (8005c00 <HAL_I2C_Init+0x278>)
 8005a00:	4293      	cmp	r3, r2
 8005a02:	bf94      	ite	ls
 8005a04:	2301      	movls	r3, #1
 8005a06:	2300      	movhi	r3, #0
 8005a08:	b2db      	uxtb	r3, r3
 8005a0a:	e006      	b.n	8005a1a <HAL_I2C_Init+0x92>
 8005a0c:	68fb      	ldr	r3, [r7, #12]
 8005a0e:	4a7d      	ldr	r2, [pc, #500]	; (8005c04 <HAL_I2C_Init+0x27c>)
 8005a10:	4293      	cmp	r3, r2
 8005a12:	bf94      	ite	ls
 8005a14:	2301      	movls	r3, #1
 8005a16:	2300      	movhi	r3, #0
 8005a18:	b2db      	uxtb	r3, r3
 8005a1a:	2b00      	cmp	r3, #0
 8005a1c:	d001      	beq.n	8005a22 <HAL_I2C_Init+0x9a>
 8005a1e:	2301      	movs	r3, #1
 8005a20:	e0e7      	b.n	8005bf2 <HAL_I2C_Init+0x26a>
 8005a22:	68fb      	ldr	r3, [r7, #12]
 8005a24:	4a78      	ldr	r2, [pc, #480]	; (8005c08 <HAL_I2C_Init+0x280>)
 8005a26:	fba2 2303 	umull	r2, r3, r2, r3
 8005a2a:	0c9b      	lsrs	r3, r3, #18
 8005a2c:	60bb      	str	r3, [r7, #8]
 8005a2e:	687b      	ldr	r3, [r7, #4]
 8005a30:	681b      	ldr	r3, [r3, #0]
 8005a32:	685b      	ldr	r3, [r3, #4]
 8005a34:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8005a38:	687b      	ldr	r3, [r7, #4]
 8005a3a:	681b      	ldr	r3, [r3, #0]
 8005a3c:	68ba      	ldr	r2, [r7, #8]
 8005a3e:	430a      	orrs	r2, r1
 8005a40:	605a      	str	r2, [r3, #4]
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	681b      	ldr	r3, [r3, #0]
 8005a46:	6a1b      	ldr	r3, [r3, #32]
 8005a48:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8005a4c:	687b      	ldr	r3, [r7, #4]
 8005a4e:	685b      	ldr	r3, [r3, #4]
 8005a50:	4a6a      	ldr	r2, [pc, #424]	; (8005bfc <HAL_I2C_Init+0x274>)
 8005a52:	4293      	cmp	r3, r2
 8005a54:	d802      	bhi.n	8005a5c <HAL_I2C_Init+0xd4>
 8005a56:	68bb      	ldr	r3, [r7, #8]
 8005a58:	3301      	adds	r3, #1
 8005a5a:	e009      	b.n	8005a70 <HAL_I2C_Init+0xe8>
 8005a5c:	68bb      	ldr	r3, [r7, #8]
 8005a5e:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8005a62:	fb02 f303 	mul.w	r3, r2, r3
 8005a66:	4a69      	ldr	r2, [pc, #420]	; (8005c0c <HAL_I2C_Init+0x284>)
 8005a68:	fba2 2303 	umull	r2, r3, r2, r3
 8005a6c:	099b      	lsrs	r3, r3, #6
 8005a6e:	3301      	adds	r3, #1
 8005a70:	687a      	ldr	r2, [r7, #4]
 8005a72:	6812      	ldr	r2, [r2, #0]
 8005a74:	430b      	orrs	r3, r1
 8005a76:	6213      	str	r3, [r2, #32]
 8005a78:	687b      	ldr	r3, [r7, #4]
 8005a7a:	681b      	ldr	r3, [r3, #0]
 8005a7c:	69db      	ldr	r3, [r3, #28]
 8005a7e:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8005a82:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8005a86:	687b      	ldr	r3, [r7, #4]
 8005a88:	685b      	ldr	r3, [r3, #4]
 8005a8a:	495c      	ldr	r1, [pc, #368]	; (8005bfc <HAL_I2C_Init+0x274>)
 8005a8c:	428b      	cmp	r3, r1
 8005a8e:	d819      	bhi.n	8005ac4 <HAL_I2C_Init+0x13c>
 8005a90:	68fb      	ldr	r3, [r7, #12]
 8005a92:	1e59      	subs	r1, r3, #1
 8005a94:	687b      	ldr	r3, [r7, #4]
 8005a96:	685b      	ldr	r3, [r3, #4]
 8005a98:	005b      	lsls	r3, r3, #1
 8005a9a:	fbb1 f3f3 	udiv	r3, r1, r3
 8005a9e:	1c59      	adds	r1, r3, #1
 8005aa0:	f640 73fc 	movw	r3, #4092	; 0xffc
 8005aa4:	400b      	ands	r3, r1
 8005aa6:	2b00      	cmp	r3, #0
 8005aa8:	d00a      	beq.n	8005ac0 <HAL_I2C_Init+0x138>
 8005aaa:	68fb      	ldr	r3, [r7, #12]
 8005aac:	1e59      	subs	r1, r3, #1
 8005aae:	687b      	ldr	r3, [r7, #4]
 8005ab0:	685b      	ldr	r3, [r3, #4]
 8005ab2:	005b      	lsls	r3, r3, #1
 8005ab4:	fbb1 f3f3 	udiv	r3, r1, r3
 8005ab8:	3301      	adds	r3, #1
 8005aba:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005abe:	e051      	b.n	8005b64 <HAL_I2C_Init+0x1dc>
 8005ac0:	2304      	movs	r3, #4
 8005ac2:	e04f      	b.n	8005b64 <HAL_I2C_Init+0x1dc>
 8005ac4:	687b      	ldr	r3, [r7, #4]
 8005ac6:	689b      	ldr	r3, [r3, #8]
 8005ac8:	2b00      	cmp	r3, #0
 8005aca:	d111      	bne.n	8005af0 <HAL_I2C_Init+0x168>
 8005acc:	68fb      	ldr	r3, [r7, #12]
 8005ace:	1e58      	subs	r0, r3, #1
 8005ad0:	687b      	ldr	r3, [r7, #4]
 8005ad2:	6859      	ldr	r1, [r3, #4]
 8005ad4:	460b      	mov	r3, r1
 8005ad6:	005b      	lsls	r3, r3, #1
 8005ad8:	440b      	add	r3, r1
 8005ada:	fbb0 f3f3 	udiv	r3, r0, r3
 8005ade:	3301      	adds	r3, #1
 8005ae0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005ae4:	2b00      	cmp	r3, #0
 8005ae6:	bf0c      	ite	eq
 8005ae8:	2301      	moveq	r3, #1
 8005aea:	2300      	movne	r3, #0
 8005aec:	b2db      	uxtb	r3, r3
 8005aee:	e012      	b.n	8005b16 <HAL_I2C_Init+0x18e>
 8005af0:	68fb      	ldr	r3, [r7, #12]
 8005af2:	1e58      	subs	r0, r3, #1
 8005af4:	687b      	ldr	r3, [r7, #4]
 8005af6:	6859      	ldr	r1, [r3, #4]
 8005af8:	460b      	mov	r3, r1
 8005afa:	009b      	lsls	r3, r3, #2
 8005afc:	440b      	add	r3, r1
 8005afe:	0099      	lsls	r1, r3, #2
 8005b00:	440b      	add	r3, r1
 8005b02:	fbb0 f3f3 	udiv	r3, r0, r3
 8005b06:	3301      	adds	r3, #1
 8005b08:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005b0c:	2b00      	cmp	r3, #0
 8005b0e:	bf0c      	ite	eq
 8005b10:	2301      	moveq	r3, #1
 8005b12:	2300      	movne	r3, #0
 8005b14:	b2db      	uxtb	r3, r3
 8005b16:	2b00      	cmp	r3, #0
 8005b18:	d001      	beq.n	8005b1e <HAL_I2C_Init+0x196>
 8005b1a:	2301      	movs	r3, #1
 8005b1c:	e022      	b.n	8005b64 <HAL_I2C_Init+0x1dc>
 8005b1e:	687b      	ldr	r3, [r7, #4]
 8005b20:	689b      	ldr	r3, [r3, #8]
 8005b22:	2b00      	cmp	r3, #0
 8005b24:	d10e      	bne.n	8005b44 <HAL_I2C_Init+0x1bc>
 8005b26:	68fb      	ldr	r3, [r7, #12]
 8005b28:	1e58      	subs	r0, r3, #1
 8005b2a:	687b      	ldr	r3, [r7, #4]
 8005b2c:	6859      	ldr	r1, [r3, #4]
 8005b2e:	460b      	mov	r3, r1
 8005b30:	005b      	lsls	r3, r3, #1
 8005b32:	440b      	add	r3, r1
 8005b34:	fbb0 f3f3 	udiv	r3, r0, r3
 8005b38:	3301      	adds	r3, #1
 8005b3a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005b3e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005b42:	e00f      	b.n	8005b64 <HAL_I2C_Init+0x1dc>
 8005b44:	68fb      	ldr	r3, [r7, #12]
 8005b46:	1e58      	subs	r0, r3, #1
 8005b48:	687b      	ldr	r3, [r7, #4]
 8005b4a:	6859      	ldr	r1, [r3, #4]
 8005b4c:	460b      	mov	r3, r1
 8005b4e:	009b      	lsls	r3, r3, #2
 8005b50:	440b      	add	r3, r1
 8005b52:	0099      	lsls	r1, r3, #2
 8005b54:	440b      	add	r3, r1
 8005b56:	fbb0 f3f3 	udiv	r3, r0, r3
 8005b5a:	3301      	adds	r3, #1
 8005b5c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005b60:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005b64:	6879      	ldr	r1, [r7, #4]
 8005b66:	6809      	ldr	r1, [r1, #0]
 8005b68:	4313      	orrs	r3, r2
 8005b6a:	61cb      	str	r3, [r1, #28]
 8005b6c:	687b      	ldr	r3, [r7, #4]
 8005b6e:	681b      	ldr	r3, [r3, #0]
 8005b70:	681b      	ldr	r3, [r3, #0]
 8005b72:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	69da      	ldr	r2, [r3, #28]
 8005b7a:	687b      	ldr	r3, [r7, #4]
 8005b7c:	6a1b      	ldr	r3, [r3, #32]
 8005b7e:	431a      	orrs	r2, r3
 8005b80:	687b      	ldr	r3, [r7, #4]
 8005b82:	681b      	ldr	r3, [r3, #0]
 8005b84:	430a      	orrs	r2, r1
 8005b86:	601a      	str	r2, [r3, #0]
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	681b      	ldr	r3, [r3, #0]
 8005b8c:	689b      	ldr	r3, [r3, #8]
 8005b8e:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8005b92:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8005b96:	687a      	ldr	r2, [r7, #4]
 8005b98:	6911      	ldr	r1, [r2, #16]
 8005b9a:	687a      	ldr	r2, [r7, #4]
 8005b9c:	68d2      	ldr	r2, [r2, #12]
 8005b9e:	4311      	orrs	r1, r2
 8005ba0:	687a      	ldr	r2, [r7, #4]
 8005ba2:	6812      	ldr	r2, [r2, #0]
 8005ba4:	430b      	orrs	r3, r1
 8005ba6:	6093      	str	r3, [r2, #8]
 8005ba8:	687b      	ldr	r3, [r7, #4]
 8005baa:	681b      	ldr	r3, [r3, #0]
 8005bac:	68db      	ldr	r3, [r3, #12]
 8005bae:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 8005bb2:	687b      	ldr	r3, [r7, #4]
 8005bb4:	695a      	ldr	r2, [r3, #20]
 8005bb6:	687b      	ldr	r3, [r7, #4]
 8005bb8:	699b      	ldr	r3, [r3, #24]
 8005bba:	431a      	orrs	r2, r3
 8005bbc:	687b      	ldr	r3, [r7, #4]
 8005bbe:	681b      	ldr	r3, [r3, #0]
 8005bc0:	430a      	orrs	r2, r1
 8005bc2:	60da      	str	r2, [r3, #12]
 8005bc4:	687b      	ldr	r3, [r7, #4]
 8005bc6:	681b      	ldr	r3, [r3, #0]
 8005bc8:	681a      	ldr	r2, [r3, #0]
 8005bca:	687b      	ldr	r3, [r7, #4]
 8005bcc:	681b      	ldr	r3, [r3, #0]
 8005bce:	f042 0201 	orr.w	r2, r2, #1
 8005bd2:	601a      	str	r2, [r3, #0]
 8005bd4:	687b      	ldr	r3, [r7, #4]
 8005bd6:	2200      	movs	r2, #0
 8005bd8:	641a      	str	r2, [r3, #64]	; 0x40
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	2220      	movs	r2, #32
 8005bde:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005be2:	687b      	ldr	r3, [r7, #4]
 8005be4:	2200      	movs	r2, #0
 8005be6:	631a      	str	r2, [r3, #48]	; 0x30
 8005be8:	687b      	ldr	r3, [r7, #4]
 8005bea:	2200      	movs	r2, #0
 8005bec:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005bf0:	2300      	movs	r3, #0
 8005bf2:	4618      	mov	r0, r3
 8005bf4:	3710      	adds	r7, #16
 8005bf6:	46bd      	mov	sp, r7
 8005bf8:	bd80      	pop	{r7, pc}
 8005bfa:	bf00      	nop
 8005bfc:	000186a0 	.word	0x000186a0
 8005c00:	001e847f 	.word	0x001e847f
 8005c04:	003d08ff 	.word	0x003d08ff
 8005c08:	431bde83 	.word	0x431bde83
 8005c0c:	10624dd3 	.word	0x10624dd3

08005c10 <HAL_I2C_Master_Transmit>:
 8005c10:	b580      	push	{r7, lr}
 8005c12:	b088      	sub	sp, #32
 8005c14:	af02      	add	r7, sp, #8
 8005c16:	60f8      	str	r0, [r7, #12]
 8005c18:	607a      	str	r2, [r7, #4]
 8005c1a:	461a      	mov	r2, r3
 8005c1c:	460b      	mov	r3, r1
 8005c1e:	817b      	strh	r3, [r7, #10]
 8005c20:	4613      	mov	r3, r2
 8005c22:	813b      	strh	r3, [r7, #8]
 8005c24:	f7fe ffb4 	bl	8004b90 <HAL_GetTick>
 8005c28:	6178      	str	r0, [r7, #20]
 8005c2a:	68fb      	ldr	r3, [r7, #12]
 8005c2c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005c30:	b2db      	uxtb	r3, r3
 8005c32:	2b20      	cmp	r3, #32
 8005c34:	f040 80e0 	bne.w	8005df8 <HAL_I2C_Master_Transmit+0x1e8>
 8005c38:	697b      	ldr	r3, [r7, #20]
 8005c3a:	9300      	str	r3, [sp, #0]
 8005c3c:	2319      	movs	r3, #25
 8005c3e:	2201      	movs	r2, #1
 8005c40:	4970      	ldr	r1, [pc, #448]	; (8005e04 <HAL_I2C_Master_Transmit+0x1f4>)
 8005c42:	68f8      	ldr	r0, [r7, #12]
 8005c44:	f002 f8e6 	bl	8007e14 <I2C_WaitOnFlagUntilTimeout>
 8005c48:	4603      	mov	r3, r0
 8005c4a:	2b00      	cmp	r3, #0
 8005c4c:	d001      	beq.n	8005c52 <HAL_I2C_Master_Transmit+0x42>
 8005c4e:	2302      	movs	r3, #2
 8005c50:	e0d3      	b.n	8005dfa <HAL_I2C_Master_Transmit+0x1ea>
 8005c52:	68fb      	ldr	r3, [r7, #12]
 8005c54:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005c58:	2b01      	cmp	r3, #1
 8005c5a:	d101      	bne.n	8005c60 <HAL_I2C_Master_Transmit+0x50>
 8005c5c:	2302      	movs	r3, #2
 8005c5e:	e0cc      	b.n	8005dfa <HAL_I2C_Master_Transmit+0x1ea>
 8005c60:	68fb      	ldr	r3, [r7, #12]
 8005c62:	2201      	movs	r2, #1
 8005c64:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005c68:	68fb      	ldr	r3, [r7, #12]
 8005c6a:	681b      	ldr	r3, [r3, #0]
 8005c6c:	681b      	ldr	r3, [r3, #0]
 8005c6e:	f003 0301 	and.w	r3, r3, #1
 8005c72:	2b01      	cmp	r3, #1
 8005c74:	d007      	beq.n	8005c86 <HAL_I2C_Master_Transmit+0x76>
 8005c76:	68fb      	ldr	r3, [r7, #12]
 8005c78:	681b      	ldr	r3, [r3, #0]
 8005c7a:	681a      	ldr	r2, [r3, #0]
 8005c7c:	68fb      	ldr	r3, [r7, #12]
 8005c7e:	681b      	ldr	r3, [r3, #0]
 8005c80:	f042 0201 	orr.w	r2, r2, #1
 8005c84:	601a      	str	r2, [r3, #0]
 8005c86:	68fb      	ldr	r3, [r7, #12]
 8005c88:	681b      	ldr	r3, [r3, #0]
 8005c8a:	681a      	ldr	r2, [r3, #0]
 8005c8c:	68fb      	ldr	r3, [r7, #12]
 8005c8e:	681b      	ldr	r3, [r3, #0]
 8005c90:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005c94:	601a      	str	r2, [r3, #0]
 8005c96:	68fb      	ldr	r3, [r7, #12]
 8005c98:	2221      	movs	r2, #33	; 0x21
 8005c9a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005c9e:	68fb      	ldr	r3, [r7, #12]
 8005ca0:	2210      	movs	r2, #16
 8005ca2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005ca6:	68fb      	ldr	r3, [r7, #12]
 8005ca8:	2200      	movs	r2, #0
 8005caa:	641a      	str	r2, [r3, #64]	; 0x40
 8005cac:	68fb      	ldr	r3, [r7, #12]
 8005cae:	687a      	ldr	r2, [r7, #4]
 8005cb0:	625a      	str	r2, [r3, #36]	; 0x24
 8005cb2:	68fb      	ldr	r3, [r7, #12]
 8005cb4:	893a      	ldrh	r2, [r7, #8]
 8005cb6:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005cb8:	68fb      	ldr	r3, [r7, #12]
 8005cba:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005cbc:	b29a      	uxth	r2, r3
 8005cbe:	68fb      	ldr	r3, [r7, #12]
 8005cc0:	851a      	strh	r2, [r3, #40]	; 0x28
 8005cc2:	68fb      	ldr	r3, [r7, #12]
 8005cc4:	4a50      	ldr	r2, [pc, #320]	; (8005e08 <HAL_I2C_Master_Transmit+0x1f8>)
 8005cc6:	62da      	str	r2, [r3, #44]	; 0x2c
 8005cc8:	8979      	ldrh	r1, [r7, #10]
 8005cca:	697b      	ldr	r3, [r7, #20]
 8005ccc:	6a3a      	ldr	r2, [r7, #32]
 8005cce:	68f8      	ldr	r0, [r7, #12]
 8005cd0:	f001 fea8 	bl	8007a24 <I2C_MasterRequestWrite>
 8005cd4:	4603      	mov	r3, r0
 8005cd6:	2b00      	cmp	r3, #0
 8005cd8:	d001      	beq.n	8005cde <HAL_I2C_Master_Transmit+0xce>
 8005cda:	2301      	movs	r3, #1
 8005cdc:	e08d      	b.n	8005dfa <HAL_I2C_Master_Transmit+0x1ea>
 8005cde:	2300      	movs	r3, #0
 8005ce0:	613b      	str	r3, [r7, #16]
 8005ce2:	68fb      	ldr	r3, [r7, #12]
 8005ce4:	681b      	ldr	r3, [r3, #0]
 8005ce6:	695b      	ldr	r3, [r3, #20]
 8005ce8:	613b      	str	r3, [r7, #16]
 8005cea:	68fb      	ldr	r3, [r7, #12]
 8005cec:	681b      	ldr	r3, [r3, #0]
 8005cee:	699b      	ldr	r3, [r3, #24]
 8005cf0:	613b      	str	r3, [r7, #16]
 8005cf2:	693b      	ldr	r3, [r7, #16]
 8005cf4:	e066      	b.n	8005dc4 <HAL_I2C_Master_Transmit+0x1b4>
 8005cf6:	697a      	ldr	r2, [r7, #20]
 8005cf8:	6a39      	ldr	r1, [r7, #32]
 8005cfa:	68f8      	ldr	r0, [r7, #12]
 8005cfc:	f002 f960 	bl	8007fc0 <I2C_WaitOnTXEFlagUntilTimeout>
 8005d00:	4603      	mov	r3, r0
 8005d02:	2b00      	cmp	r3, #0
 8005d04:	d00d      	beq.n	8005d22 <HAL_I2C_Master_Transmit+0x112>
 8005d06:	68fb      	ldr	r3, [r7, #12]
 8005d08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005d0a:	2b04      	cmp	r3, #4
 8005d0c:	d107      	bne.n	8005d1e <HAL_I2C_Master_Transmit+0x10e>
 8005d0e:	68fb      	ldr	r3, [r7, #12]
 8005d10:	681b      	ldr	r3, [r3, #0]
 8005d12:	681a      	ldr	r2, [r3, #0]
 8005d14:	68fb      	ldr	r3, [r7, #12]
 8005d16:	681b      	ldr	r3, [r3, #0]
 8005d18:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005d1c:	601a      	str	r2, [r3, #0]
 8005d1e:	2301      	movs	r3, #1
 8005d20:	e06b      	b.n	8005dfa <HAL_I2C_Master_Transmit+0x1ea>
 8005d22:	68fb      	ldr	r3, [r7, #12]
 8005d24:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d26:	781a      	ldrb	r2, [r3, #0]
 8005d28:	68fb      	ldr	r3, [r7, #12]
 8005d2a:	681b      	ldr	r3, [r3, #0]
 8005d2c:	611a      	str	r2, [r3, #16]
 8005d2e:	68fb      	ldr	r3, [r7, #12]
 8005d30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d32:	1c5a      	adds	r2, r3, #1
 8005d34:	68fb      	ldr	r3, [r7, #12]
 8005d36:	625a      	str	r2, [r3, #36]	; 0x24
 8005d38:	68fb      	ldr	r3, [r7, #12]
 8005d3a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005d3c:	b29b      	uxth	r3, r3
 8005d3e:	3b01      	subs	r3, #1
 8005d40:	b29a      	uxth	r2, r3
 8005d42:	68fb      	ldr	r3, [r7, #12]
 8005d44:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005d46:	68fb      	ldr	r3, [r7, #12]
 8005d48:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005d4a:	3b01      	subs	r3, #1
 8005d4c:	b29a      	uxth	r2, r3
 8005d4e:	68fb      	ldr	r3, [r7, #12]
 8005d50:	851a      	strh	r2, [r3, #40]	; 0x28
 8005d52:	68fb      	ldr	r3, [r7, #12]
 8005d54:	681b      	ldr	r3, [r3, #0]
 8005d56:	695b      	ldr	r3, [r3, #20]
 8005d58:	f003 0304 	and.w	r3, r3, #4
 8005d5c:	2b04      	cmp	r3, #4
 8005d5e:	d11b      	bne.n	8005d98 <HAL_I2C_Master_Transmit+0x188>
 8005d60:	68fb      	ldr	r3, [r7, #12]
 8005d62:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005d64:	2b00      	cmp	r3, #0
 8005d66:	d017      	beq.n	8005d98 <HAL_I2C_Master_Transmit+0x188>
 8005d68:	68fb      	ldr	r3, [r7, #12]
 8005d6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d6c:	781a      	ldrb	r2, [r3, #0]
 8005d6e:	68fb      	ldr	r3, [r7, #12]
 8005d70:	681b      	ldr	r3, [r3, #0]
 8005d72:	611a      	str	r2, [r3, #16]
 8005d74:	68fb      	ldr	r3, [r7, #12]
 8005d76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005d78:	1c5a      	adds	r2, r3, #1
 8005d7a:	68fb      	ldr	r3, [r7, #12]
 8005d7c:	625a      	str	r2, [r3, #36]	; 0x24
 8005d7e:	68fb      	ldr	r3, [r7, #12]
 8005d80:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005d82:	b29b      	uxth	r3, r3
 8005d84:	3b01      	subs	r3, #1
 8005d86:	b29a      	uxth	r2, r3
 8005d88:	68fb      	ldr	r3, [r7, #12]
 8005d8a:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005d8c:	68fb      	ldr	r3, [r7, #12]
 8005d8e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005d90:	3b01      	subs	r3, #1
 8005d92:	b29a      	uxth	r2, r3
 8005d94:	68fb      	ldr	r3, [r7, #12]
 8005d96:	851a      	strh	r2, [r3, #40]	; 0x28
 8005d98:	697a      	ldr	r2, [r7, #20]
 8005d9a:	6a39      	ldr	r1, [r7, #32]
 8005d9c:	68f8      	ldr	r0, [r7, #12]
 8005d9e:	f002 f950 	bl	8008042 <I2C_WaitOnBTFFlagUntilTimeout>
 8005da2:	4603      	mov	r3, r0
 8005da4:	2b00      	cmp	r3, #0
 8005da6:	d00d      	beq.n	8005dc4 <HAL_I2C_Master_Transmit+0x1b4>
 8005da8:	68fb      	ldr	r3, [r7, #12]
 8005daa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005dac:	2b04      	cmp	r3, #4
 8005dae:	d107      	bne.n	8005dc0 <HAL_I2C_Master_Transmit+0x1b0>
 8005db0:	68fb      	ldr	r3, [r7, #12]
 8005db2:	681b      	ldr	r3, [r3, #0]
 8005db4:	681a      	ldr	r2, [r3, #0]
 8005db6:	68fb      	ldr	r3, [r7, #12]
 8005db8:	681b      	ldr	r3, [r3, #0]
 8005dba:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005dbe:	601a      	str	r2, [r3, #0]
 8005dc0:	2301      	movs	r3, #1
 8005dc2:	e01a      	b.n	8005dfa <HAL_I2C_Master_Transmit+0x1ea>
 8005dc4:	68fb      	ldr	r3, [r7, #12]
 8005dc6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005dc8:	2b00      	cmp	r3, #0
 8005dca:	d194      	bne.n	8005cf6 <HAL_I2C_Master_Transmit+0xe6>
 8005dcc:	68fb      	ldr	r3, [r7, #12]
 8005dce:	681b      	ldr	r3, [r3, #0]
 8005dd0:	681a      	ldr	r2, [r3, #0]
 8005dd2:	68fb      	ldr	r3, [r7, #12]
 8005dd4:	681b      	ldr	r3, [r3, #0]
 8005dd6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005dda:	601a      	str	r2, [r3, #0]
 8005ddc:	68fb      	ldr	r3, [r7, #12]
 8005dde:	2220      	movs	r2, #32
 8005de0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005de4:	68fb      	ldr	r3, [r7, #12]
 8005de6:	2200      	movs	r2, #0
 8005de8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005dec:	68fb      	ldr	r3, [r7, #12]
 8005dee:	2200      	movs	r2, #0
 8005df0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005df4:	2300      	movs	r3, #0
 8005df6:	e000      	b.n	8005dfa <HAL_I2C_Master_Transmit+0x1ea>
 8005df8:	2302      	movs	r3, #2
 8005dfa:	4618      	mov	r0, r3
 8005dfc:	3718      	adds	r7, #24
 8005dfe:	46bd      	mov	sp, r7
 8005e00:	bd80      	pop	{r7, pc}
 8005e02:	bf00      	nop
 8005e04:	00100002 	.word	0x00100002
 8005e08:	ffff0000 	.word	0xffff0000

08005e0c <HAL_I2C_Master_Receive>:
 8005e0c:	b580      	push	{r7, lr}
 8005e0e:	b08c      	sub	sp, #48	; 0x30
 8005e10:	af02      	add	r7, sp, #8
 8005e12:	60f8      	str	r0, [r7, #12]
 8005e14:	607a      	str	r2, [r7, #4]
 8005e16:	461a      	mov	r2, r3
 8005e18:	460b      	mov	r3, r1
 8005e1a:	817b      	strh	r3, [r7, #10]
 8005e1c:	4613      	mov	r3, r2
 8005e1e:	813b      	strh	r3, [r7, #8]
 8005e20:	f7fe feb6 	bl	8004b90 <HAL_GetTick>
 8005e24:	6278      	str	r0, [r7, #36]	; 0x24
 8005e26:	68fb      	ldr	r3, [r7, #12]
 8005e28:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005e2c:	b2db      	uxtb	r3, r3
 8005e2e:	2b20      	cmp	r3, #32
 8005e30:	f040 820b 	bne.w	800624a <HAL_I2C_Master_Receive+0x43e>
 8005e34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005e36:	9300      	str	r3, [sp, #0]
 8005e38:	2319      	movs	r3, #25
 8005e3a:	2201      	movs	r2, #1
 8005e3c:	497c      	ldr	r1, [pc, #496]	; (8006030 <HAL_I2C_Master_Receive+0x224>)
 8005e3e:	68f8      	ldr	r0, [r7, #12]
 8005e40:	f001 ffe8 	bl	8007e14 <I2C_WaitOnFlagUntilTimeout>
 8005e44:	4603      	mov	r3, r0
 8005e46:	2b00      	cmp	r3, #0
 8005e48:	d001      	beq.n	8005e4e <HAL_I2C_Master_Receive+0x42>
 8005e4a:	2302      	movs	r3, #2
 8005e4c:	e1fe      	b.n	800624c <HAL_I2C_Master_Receive+0x440>
 8005e4e:	68fb      	ldr	r3, [r7, #12]
 8005e50:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005e54:	2b01      	cmp	r3, #1
 8005e56:	d101      	bne.n	8005e5c <HAL_I2C_Master_Receive+0x50>
 8005e58:	2302      	movs	r3, #2
 8005e5a:	e1f7      	b.n	800624c <HAL_I2C_Master_Receive+0x440>
 8005e5c:	68fb      	ldr	r3, [r7, #12]
 8005e5e:	2201      	movs	r2, #1
 8005e60:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005e64:	68fb      	ldr	r3, [r7, #12]
 8005e66:	681b      	ldr	r3, [r3, #0]
 8005e68:	681b      	ldr	r3, [r3, #0]
 8005e6a:	f003 0301 	and.w	r3, r3, #1
 8005e6e:	2b01      	cmp	r3, #1
 8005e70:	d007      	beq.n	8005e82 <HAL_I2C_Master_Receive+0x76>
 8005e72:	68fb      	ldr	r3, [r7, #12]
 8005e74:	681b      	ldr	r3, [r3, #0]
 8005e76:	681a      	ldr	r2, [r3, #0]
 8005e78:	68fb      	ldr	r3, [r7, #12]
 8005e7a:	681b      	ldr	r3, [r3, #0]
 8005e7c:	f042 0201 	orr.w	r2, r2, #1
 8005e80:	601a      	str	r2, [r3, #0]
 8005e82:	68fb      	ldr	r3, [r7, #12]
 8005e84:	681b      	ldr	r3, [r3, #0]
 8005e86:	681a      	ldr	r2, [r3, #0]
 8005e88:	68fb      	ldr	r3, [r7, #12]
 8005e8a:	681b      	ldr	r3, [r3, #0]
 8005e8c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005e90:	601a      	str	r2, [r3, #0]
 8005e92:	68fb      	ldr	r3, [r7, #12]
 8005e94:	2222      	movs	r2, #34	; 0x22
 8005e96:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005e9a:	68fb      	ldr	r3, [r7, #12]
 8005e9c:	2210      	movs	r2, #16
 8005e9e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8005ea2:	68fb      	ldr	r3, [r7, #12]
 8005ea4:	2200      	movs	r2, #0
 8005ea6:	641a      	str	r2, [r3, #64]	; 0x40
 8005ea8:	68fb      	ldr	r3, [r7, #12]
 8005eaa:	687a      	ldr	r2, [r7, #4]
 8005eac:	625a      	str	r2, [r3, #36]	; 0x24
 8005eae:	68fb      	ldr	r3, [r7, #12]
 8005eb0:	893a      	ldrh	r2, [r7, #8]
 8005eb2:	855a      	strh	r2, [r3, #42]	; 0x2a
 8005eb4:	68fb      	ldr	r3, [r7, #12]
 8005eb6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005eb8:	b29a      	uxth	r2, r3
 8005eba:	68fb      	ldr	r3, [r7, #12]
 8005ebc:	851a      	strh	r2, [r3, #40]	; 0x28
 8005ebe:	68fb      	ldr	r3, [r7, #12]
 8005ec0:	4a5c      	ldr	r2, [pc, #368]	; (8006034 <HAL_I2C_Master_Receive+0x228>)
 8005ec2:	62da      	str	r2, [r3, #44]	; 0x2c
 8005ec4:	8979      	ldrh	r1, [r7, #10]
 8005ec6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005ec8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8005eca:	68f8      	ldr	r0, [r7, #12]
 8005ecc:	f001 fe2c 	bl	8007b28 <I2C_MasterRequestRead>
 8005ed0:	4603      	mov	r3, r0
 8005ed2:	2b00      	cmp	r3, #0
 8005ed4:	d001      	beq.n	8005eda <HAL_I2C_Master_Receive+0xce>
 8005ed6:	2301      	movs	r3, #1
 8005ed8:	e1b8      	b.n	800624c <HAL_I2C_Master_Receive+0x440>
 8005eda:	68fb      	ldr	r3, [r7, #12]
 8005edc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005ede:	2b00      	cmp	r3, #0
 8005ee0:	d113      	bne.n	8005f0a <HAL_I2C_Master_Receive+0xfe>
 8005ee2:	2300      	movs	r3, #0
 8005ee4:	623b      	str	r3, [r7, #32]
 8005ee6:	68fb      	ldr	r3, [r7, #12]
 8005ee8:	681b      	ldr	r3, [r3, #0]
 8005eea:	695b      	ldr	r3, [r3, #20]
 8005eec:	623b      	str	r3, [r7, #32]
 8005eee:	68fb      	ldr	r3, [r7, #12]
 8005ef0:	681b      	ldr	r3, [r3, #0]
 8005ef2:	699b      	ldr	r3, [r3, #24]
 8005ef4:	623b      	str	r3, [r7, #32]
 8005ef6:	6a3b      	ldr	r3, [r7, #32]
 8005ef8:	68fb      	ldr	r3, [r7, #12]
 8005efa:	681b      	ldr	r3, [r3, #0]
 8005efc:	681a      	ldr	r2, [r3, #0]
 8005efe:	68fb      	ldr	r3, [r7, #12]
 8005f00:	681b      	ldr	r3, [r3, #0]
 8005f02:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005f06:	601a      	str	r2, [r3, #0]
 8005f08:	e18c      	b.n	8006224 <HAL_I2C_Master_Receive+0x418>
 8005f0a:	68fb      	ldr	r3, [r7, #12]
 8005f0c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005f0e:	2b01      	cmp	r3, #1
 8005f10:	d11b      	bne.n	8005f4a <HAL_I2C_Master_Receive+0x13e>
 8005f12:	68fb      	ldr	r3, [r7, #12]
 8005f14:	681b      	ldr	r3, [r3, #0]
 8005f16:	681a      	ldr	r2, [r3, #0]
 8005f18:	68fb      	ldr	r3, [r7, #12]
 8005f1a:	681b      	ldr	r3, [r3, #0]
 8005f1c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005f20:	601a      	str	r2, [r3, #0]
 8005f22:	2300      	movs	r3, #0
 8005f24:	61fb      	str	r3, [r7, #28]
 8005f26:	68fb      	ldr	r3, [r7, #12]
 8005f28:	681b      	ldr	r3, [r3, #0]
 8005f2a:	695b      	ldr	r3, [r3, #20]
 8005f2c:	61fb      	str	r3, [r7, #28]
 8005f2e:	68fb      	ldr	r3, [r7, #12]
 8005f30:	681b      	ldr	r3, [r3, #0]
 8005f32:	699b      	ldr	r3, [r3, #24]
 8005f34:	61fb      	str	r3, [r7, #28]
 8005f36:	69fb      	ldr	r3, [r7, #28]
 8005f38:	68fb      	ldr	r3, [r7, #12]
 8005f3a:	681b      	ldr	r3, [r3, #0]
 8005f3c:	681a      	ldr	r2, [r3, #0]
 8005f3e:	68fb      	ldr	r3, [r7, #12]
 8005f40:	681b      	ldr	r3, [r3, #0]
 8005f42:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005f46:	601a      	str	r2, [r3, #0]
 8005f48:	e16c      	b.n	8006224 <HAL_I2C_Master_Receive+0x418>
 8005f4a:	68fb      	ldr	r3, [r7, #12]
 8005f4c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005f4e:	2b02      	cmp	r3, #2
 8005f50:	d11b      	bne.n	8005f8a <HAL_I2C_Master_Receive+0x17e>
 8005f52:	68fb      	ldr	r3, [r7, #12]
 8005f54:	681b      	ldr	r3, [r3, #0]
 8005f56:	681a      	ldr	r2, [r3, #0]
 8005f58:	68fb      	ldr	r3, [r7, #12]
 8005f5a:	681b      	ldr	r3, [r3, #0]
 8005f5c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005f60:	601a      	str	r2, [r3, #0]
 8005f62:	68fb      	ldr	r3, [r7, #12]
 8005f64:	681b      	ldr	r3, [r3, #0]
 8005f66:	681a      	ldr	r2, [r3, #0]
 8005f68:	68fb      	ldr	r3, [r7, #12]
 8005f6a:	681b      	ldr	r3, [r3, #0]
 8005f6c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005f70:	601a      	str	r2, [r3, #0]
 8005f72:	2300      	movs	r3, #0
 8005f74:	61bb      	str	r3, [r7, #24]
 8005f76:	68fb      	ldr	r3, [r7, #12]
 8005f78:	681b      	ldr	r3, [r3, #0]
 8005f7a:	695b      	ldr	r3, [r3, #20]
 8005f7c:	61bb      	str	r3, [r7, #24]
 8005f7e:	68fb      	ldr	r3, [r7, #12]
 8005f80:	681b      	ldr	r3, [r3, #0]
 8005f82:	699b      	ldr	r3, [r3, #24]
 8005f84:	61bb      	str	r3, [r7, #24]
 8005f86:	69bb      	ldr	r3, [r7, #24]
 8005f88:	e14c      	b.n	8006224 <HAL_I2C_Master_Receive+0x418>
 8005f8a:	68fb      	ldr	r3, [r7, #12]
 8005f8c:	681b      	ldr	r3, [r3, #0]
 8005f8e:	681a      	ldr	r2, [r3, #0]
 8005f90:	68fb      	ldr	r3, [r7, #12]
 8005f92:	681b      	ldr	r3, [r3, #0]
 8005f94:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005f98:	601a      	str	r2, [r3, #0]
 8005f9a:	2300      	movs	r3, #0
 8005f9c:	617b      	str	r3, [r7, #20]
 8005f9e:	68fb      	ldr	r3, [r7, #12]
 8005fa0:	681b      	ldr	r3, [r3, #0]
 8005fa2:	695b      	ldr	r3, [r3, #20]
 8005fa4:	617b      	str	r3, [r7, #20]
 8005fa6:	68fb      	ldr	r3, [r7, #12]
 8005fa8:	681b      	ldr	r3, [r3, #0]
 8005faa:	699b      	ldr	r3, [r3, #24]
 8005fac:	617b      	str	r3, [r7, #20]
 8005fae:	697b      	ldr	r3, [r7, #20]
 8005fb0:	e138      	b.n	8006224 <HAL_I2C_Master_Receive+0x418>
 8005fb2:	68fb      	ldr	r3, [r7, #12]
 8005fb4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005fb6:	2b03      	cmp	r3, #3
 8005fb8:	f200 80f1 	bhi.w	800619e <HAL_I2C_Master_Receive+0x392>
 8005fbc:	68fb      	ldr	r3, [r7, #12]
 8005fbe:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005fc0:	2b01      	cmp	r3, #1
 8005fc2:	d123      	bne.n	800600c <HAL_I2C_Master_Receive+0x200>
 8005fc4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8005fc6:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8005fc8:	68f8      	ldr	r0, [r7, #12]
 8005fca:	f002 f8ad 	bl	8008128 <I2C_WaitOnRXNEFlagUntilTimeout>
 8005fce:	4603      	mov	r3, r0
 8005fd0:	2b00      	cmp	r3, #0
 8005fd2:	d001      	beq.n	8005fd8 <HAL_I2C_Master_Receive+0x1cc>
 8005fd4:	2301      	movs	r3, #1
 8005fd6:	e139      	b.n	800624c <HAL_I2C_Master_Receive+0x440>
 8005fd8:	68fb      	ldr	r3, [r7, #12]
 8005fda:	681b      	ldr	r3, [r3, #0]
 8005fdc:	691a      	ldr	r2, [r3, #16]
 8005fde:	68fb      	ldr	r3, [r7, #12]
 8005fe0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fe2:	b2d2      	uxtb	r2, r2
 8005fe4:	701a      	strb	r2, [r3, #0]
 8005fe6:	68fb      	ldr	r3, [r7, #12]
 8005fe8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005fea:	1c5a      	adds	r2, r3, #1
 8005fec:	68fb      	ldr	r3, [r7, #12]
 8005fee:	625a      	str	r2, [r3, #36]	; 0x24
 8005ff0:	68fb      	ldr	r3, [r7, #12]
 8005ff2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8005ff4:	3b01      	subs	r3, #1
 8005ff6:	b29a      	uxth	r2, r3
 8005ff8:	68fb      	ldr	r3, [r7, #12]
 8005ffa:	851a      	strh	r2, [r3, #40]	; 0x28
 8005ffc:	68fb      	ldr	r3, [r7, #12]
 8005ffe:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006000:	b29b      	uxth	r3, r3
 8006002:	3b01      	subs	r3, #1
 8006004:	b29a      	uxth	r2, r3
 8006006:	68fb      	ldr	r3, [r7, #12]
 8006008:	855a      	strh	r2, [r3, #42]	; 0x2a
 800600a:	e10b      	b.n	8006224 <HAL_I2C_Master_Receive+0x418>
 800600c:	68fb      	ldr	r3, [r7, #12]
 800600e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006010:	2b02      	cmp	r3, #2
 8006012:	d14e      	bne.n	80060b2 <HAL_I2C_Master_Receive+0x2a6>
 8006014:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006016:	9300      	str	r3, [sp, #0]
 8006018:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800601a:	2200      	movs	r2, #0
 800601c:	4906      	ldr	r1, [pc, #24]	; (8006038 <HAL_I2C_Master_Receive+0x22c>)
 800601e:	68f8      	ldr	r0, [r7, #12]
 8006020:	f001 fef8 	bl	8007e14 <I2C_WaitOnFlagUntilTimeout>
 8006024:	4603      	mov	r3, r0
 8006026:	2b00      	cmp	r3, #0
 8006028:	d008      	beq.n	800603c <HAL_I2C_Master_Receive+0x230>
 800602a:	2301      	movs	r3, #1
 800602c:	e10e      	b.n	800624c <HAL_I2C_Master_Receive+0x440>
 800602e:	bf00      	nop
 8006030:	00100002 	.word	0x00100002
 8006034:	ffff0000 	.word	0xffff0000
 8006038:	00010004 	.word	0x00010004
 800603c:	68fb      	ldr	r3, [r7, #12]
 800603e:	681b      	ldr	r3, [r3, #0]
 8006040:	681a      	ldr	r2, [r3, #0]
 8006042:	68fb      	ldr	r3, [r7, #12]
 8006044:	681b      	ldr	r3, [r3, #0]
 8006046:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800604a:	601a      	str	r2, [r3, #0]
 800604c:	68fb      	ldr	r3, [r7, #12]
 800604e:	681b      	ldr	r3, [r3, #0]
 8006050:	691a      	ldr	r2, [r3, #16]
 8006052:	68fb      	ldr	r3, [r7, #12]
 8006054:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006056:	b2d2      	uxtb	r2, r2
 8006058:	701a      	strb	r2, [r3, #0]
 800605a:	68fb      	ldr	r3, [r7, #12]
 800605c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800605e:	1c5a      	adds	r2, r3, #1
 8006060:	68fb      	ldr	r3, [r7, #12]
 8006062:	625a      	str	r2, [r3, #36]	; 0x24
 8006064:	68fb      	ldr	r3, [r7, #12]
 8006066:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006068:	3b01      	subs	r3, #1
 800606a:	b29a      	uxth	r2, r3
 800606c:	68fb      	ldr	r3, [r7, #12]
 800606e:	851a      	strh	r2, [r3, #40]	; 0x28
 8006070:	68fb      	ldr	r3, [r7, #12]
 8006072:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006074:	b29b      	uxth	r3, r3
 8006076:	3b01      	subs	r3, #1
 8006078:	b29a      	uxth	r2, r3
 800607a:	68fb      	ldr	r3, [r7, #12]
 800607c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800607e:	68fb      	ldr	r3, [r7, #12]
 8006080:	681b      	ldr	r3, [r3, #0]
 8006082:	691a      	ldr	r2, [r3, #16]
 8006084:	68fb      	ldr	r3, [r7, #12]
 8006086:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006088:	b2d2      	uxtb	r2, r2
 800608a:	701a      	strb	r2, [r3, #0]
 800608c:	68fb      	ldr	r3, [r7, #12]
 800608e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006090:	1c5a      	adds	r2, r3, #1
 8006092:	68fb      	ldr	r3, [r7, #12]
 8006094:	625a      	str	r2, [r3, #36]	; 0x24
 8006096:	68fb      	ldr	r3, [r7, #12]
 8006098:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800609a:	3b01      	subs	r3, #1
 800609c:	b29a      	uxth	r2, r3
 800609e:	68fb      	ldr	r3, [r7, #12]
 80060a0:	851a      	strh	r2, [r3, #40]	; 0x28
 80060a2:	68fb      	ldr	r3, [r7, #12]
 80060a4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80060a6:	b29b      	uxth	r3, r3
 80060a8:	3b01      	subs	r3, #1
 80060aa:	b29a      	uxth	r2, r3
 80060ac:	68fb      	ldr	r3, [r7, #12]
 80060ae:	855a      	strh	r2, [r3, #42]	; 0x2a
 80060b0:	e0b8      	b.n	8006224 <HAL_I2C_Master_Receive+0x418>
 80060b2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80060b4:	9300      	str	r3, [sp, #0]
 80060b6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80060b8:	2200      	movs	r2, #0
 80060ba:	4966      	ldr	r1, [pc, #408]	; (8006254 <HAL_I2C_Master_Receive+0x448>)
 80060bc:	68f8      	ldr	r0, [r7, #12]
 80060be:	f001 fea9 	bl	8007e14 <I2C_WaitOnFlagUntilTimeout>
 80060c2:	4603      	mov	r3, r0
 80060c4:	2b00      	cmp	r3, #0
 80060c6:	d001      	beq.n	80060cc <HAL_I2C_Master_Receive+0x2c0>
 80060c8:	2301      	movs	r3, #1
 80060ca:	e0bf      	b.n	800624c <HAL_I2C_Master_Receive+0x440>
 80060cc:	68fb      	ldr	r3, [r7, #12]
 80060ce:	681b      	ldr	r3, [r3, #0]
 80060d0:	681a      	ldr	r2, [r3, #0]
 80060d2:	68fb      	ldr	r3, [r7, #12]
 80060d4:	681b      	ldr	r3, [r3, #0]
 80060d6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80060da:	601a      	str	r2, [r3, #0]
 80060dc:	68fb      	ldr	r3, [r7, #12]
 80060de:	681b      	ldr	r3, [r3, #0]
 80060e0:	691a      	ldr	r2, [r3, #16]
 80060e2:	68fb      	ldr	r3, [r7, #12]
 80060e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060e6:	b2d2      	uxtb	r2, r2
 80060e8:	701a      	strb	r2, [r3, #0]
 80060ea:	68fb      	ldr	r3, [r7, #12]
 80060ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060ee:	1c5a      	adds	r2, r3, #1
 80060f0:	68fb      	ldr	r3, [r7, #12]
 80060f2:	625a      	str	r2, [r3, #36]	; 0x24
 80060f4:	68fb      	ldr	r3, [r7, #12]
 80060f6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80060f8:	3b01      	subs	r3, #1
 80060fa:	b29a      	uxth	r2, r3
 80060fc:	68fb      	ldr	r3, [r7, #12]
 80060fe:	851a      	strh	r2, [r3, #40]	; 0x28
 8006100:	68fb      	ldr	r3, [r7, #12]
 8006102:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006104:	b29b      	uxth	r3, r3
 8006106:	3b01      	subs	r3, #1
 8006108:	b29a      	uxth	r2, r3
 800610a:	68fb      	ldr	r3, [r7, #12]
 800610c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800610e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006110:	9300      	str	r3, [sp, #0]
 8006112:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006114:	2200      	movs	r2, #0
 8006116:	494f      	ldr	r1, [pc, #316]	; (8006254 <HAL_I2C_Master_Receive+0x448>)
 8006118:	68f8      	ldr	r0, [r7, #12]
 800611a:	f001 fe7b 	bl	8007e14 <I2C_WaitOnFlagUntilTimeout>
 800611e:	4603      	mov	r3, r0
 8006120:	2b00      	cmp	r3, #0
 8006122:	d001      	beq.n	8006128 <HAL_I2C_Master_Receive+0x31c>
 8006124:	2301      	movs	r3, #1
 8006126:	e091      	b.n	800624c <HAL_I2C_Master_Receive+0x440>
 8006128:	68fb      	ldr	r3, [r7, #12]
 800612a:	681b      	ldr	r3, [r3, #0]
 800612c:	681a      	ldr	r2, [r3, #0]
 800612e:	68fb      	ldr	r3, [r7, #12]
 8006130:	681b      	ldr	r3, [r3, #0]
 8006132:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006136:	601a      	str	r2, [r3, #0]
 8006138:	68fb      	ldr	r3, [r7, #12]
 800613a:	681b      	ldr	r3, [r3, #0]
 800613c:	691a      	ldr	r2, [r3, #16]
 800613e:	68fb      	ldr	r3, [r7, #12]
 8006140:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006142:	b2d2      	uxtb	r2, r2
 8006144:	701a      	strb	r2, [r3, #0]
 8006146:	68fb      	ldr	r3, [r7, #12]
 8006148:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800614a:	1c5a      	adds	r2, r3, #1
 800614c:	68fb      	ldr	r3, [r7, #12]
 800614e:	625a      	str	r2, [r3, #36]	; 0x24
 8006150:	68fb      	ldr	r3, [r7, #12]
 8006152:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006154:	3b01      	subs	r3, #1
 8006156:	b29a      	uxth	r2, r3
 8006158:	68fb      	ldr	r3, [r7, #12]
 800615a:	851a      	strh	r2, [r3, #40]	; 0x28
 800615c:	68fb      	ldr	r3, [r7, #12]
 800615e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006160:	b29b      	uxth	r3, r3
 8006162:	3b01      	subs	r3, #1
 8006164:	b29a      	uxth	r2, r3
 8006166:	68fb      	ldr	r3, [r7, #12]
 8006168:	855a      	strh	r2, [r3, #42]	; 0x2a
 800616a:	68fb      	ldr	r3, [r7, #12]
 800616c:	681b      	ldr	r3, [r3, #0]
 800616e:	691a      	ldr	r2, [r3, #16]
 8006170:	68fb      	ldr	r3, [r7, #12]
 8006172:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006174:	b2d2      	uxtb	r2, r2
 8006176:	701a      	strb	r2, [r3, #0]
 8006178:	68fb      	ldr	r3, [r7, #12]
 800617a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800617c:	1c5a      	adds	r2, r3, #1
 800617e:	68fb      	ldr	r3, [r7, #12]
 8006180:	625a      	str	r2, [r3, #36]	; 0x24
 8006182:	68fb      	ldr	r3, [r7, #12]
 8006184:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006186:	3b01      	subs	r3, #1
 8006188:	b29a      	uxth	r2, r3
 800618a:	68fb      	ldr	r3, [r7, #12]
 800618c:	851a      	strh	r2, [r3, #40]	; 0x28
 800618e:	68fb      	ldr	r3, [r7, #12]
 8006190:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006192:	b29b      	uxth	r3, r3
 8006194:	3b01      	subs	r3, #1
 8006196:	b29a      	uxth	r2, r3
 8006198:	68fb      	ldr	r3, [r7, #12]
 800619a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800619c:	e042      	b.n	8006224 <HAL_I2C_Master_Receive+0x418>
 800619e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80061a0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80061a2:	68f8      	ldr	r0, [r7, #12]
 80061a4:	f001 ffc0 	bl	8008128 <I2C_WaitOnRXNEFlagUntilTimeout>
 80061a8:	4603      	mov	r3, r0
 80061aa:	2b00      	cmp	r3, #0
 80061ac:	d001      	beq.n	80061b2 <HAL_I2C_Master_Receive+0x3a6>
 80061ae:	2301      	movs	r3, #1
 80061b0:	e04c      	b.n	800624c <HAL_I2C_Master_Receive+0x440>
 80061b2:	68fb      	ldr	r3, [r7, #12]
 80061b4:	681b      	ldr	r3, [r3, #0]
 80061b6:	691a      	ldr	r2, [r3, #16]
 80061b8:	68fb      	ldr	r3, [r7, #12]
 80061ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80061bc:	b2d2      	uxtb	r2, r2
 80061be:	701a      	strb	r2, [r3, #0]
 80061c0:	68fb      	ldr	r3, [r7, #12]
 80061c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80061c4:	1c5a      	adds	r2, r3, #1
 80061c6:	68fb      	ldr	r3, [r7, #12]
 80061c8:	625a      	str	r2, [r3, #36]	; 0x24
 80061ca:	68fb      	ldr	r3, [r7, #12]
 80061cc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80061ce:	3b01      	subs	r3, #1
 80061d0:	b29a      	uxth	r2, r3
 80061d2:	68fb      	ldr	r3, [r7, #12]
 80061d4:	851a      	strh	r2, [r3, #40]	; 0x28
 80061d6:	68fb      	ldr	r3, [r7, #12]
 80061d8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80061da:	b29b      	uxth	r3, r3
 80061dc:	3b01      	subs	r3, #1
 80061de:	b29a      	uxth	r2, r3
 80061e0:	68fb      	ldr	r3, [r7, #12]
 80061e2:	855a      	strh	r2, [r3, #42]	; 0x2a
 80061e4:	68fb      	ldr	r3, [r7, #12]
 80061e6:	681b      	ldr	r3, [r3, #0]
 80061e8:	695b      	ldr	r3, [r3, #20]
 80061ea:	f003 0304 	and.w	r3, r3, #4
 80061ee:	2b04      	cmp	r3, #4
 80061f0:	d118      	bne.n	8006224 <HAL_I2C_Master_Receive+0x418>
 80061f2:	68fb      	ldr	r3, [r7, #12]
 80061f4:	681b      	ldr	r3, [r3, #0]
 80061f6:	691a      	ldr	r2, [r3, #16]
 80061f8:	68fb      	ldr	r3, [r7, #12]
 80061fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80061fc:	b2d2      	uxtb	r2, r2
 80061fe:	701a      	strb	r2, [r3, #0]
 8006200:	68fb      	ldr	r3, [r7, #12]
 8006202:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006204:	1c5a      	adds	r2, r3, #1
 8006206:	68fb      	ldr	r3, [r7, #12]
 8006208:	625a      	str	r2, [r3, #36]	; 0x24
 800620a:	68fb      	ldr	r3, [r7, #12]
 800620c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800620e:	3b01      	subs	r3, #1
 8006210:	b29a      	uxth	r2, r3
 8006212:	68fb      	ldr	r3, [r7, #12]
 8006214:	851a      	strh	r2, [r3, #40]	; 0x28
 8006216:	68fb      	ldr	r3, [r7, #12]
 8006218:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800621a:	b29b      	uxth	r3, r3
 800621c:	3b01      	subs	r3, #1
 800621e:	b29a      	uxth	r2, r3
 8006220:	68fb      	ldr	r3, [r7, #12]
 8006222:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006224:	68fb      	ldr	r3, [r7, #12]
 8006226:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006228:	2b00      	cmp	r3, #0
 800622a:	f47f aec2 	bne.w	8005fb2 <HAL_I2C_Master_Receive+0x1a6>
 800622e:	68fb      	ldr	r3, [r7, #12]
 8006230:	2220      	movs	r2, #32
 8006232:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006236:	68fb      	ldr	r3, [r7, #12]
 8006238:	2200      	movs	r2, #0
 800623a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800623e:	68fb      	ldr	r3, [r7, #12]
 8006240:	2200      	movs	r2, #0
 8006242:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006246:	2300      	movs	r3, #0
 8006248:	e000      	b.n	800624c <HAL_I2C_Master_Receive+0x440>
 800624a:	2302      	movs	r3, #2
 800624c:	4618      	mov	r0, r3
 800624e:	3728      	adds	r7, #40	; 0x28
 8006250:	46bd      	mov	sp, r7
 8006252:	bd80      	pop	{r7, pc}
 8006254:	00010004 	.word	0x00010004

08006258 <HAL_I2C_EV_IRQHandler>:
 8006258:	b580      	push	{r7, lr}
 800625a:	b088      	sub	sp, #32
 800625c:	af00      	add	r7, sp, #0
 800625e:	6078      	str	r0, [r7, #4]
 8006260:	2300      	movs	r3, #0
 8006262:	61bb      	str	r3, [r7, #24]
 8006264:	687b      	ldr	r3, [r7, #4]
 8006266:	681b      	ldr	r3, [r3, #0]
 8006268:	685b      	ldr	r3, [r3, #4]
 800626a:	617b      	str	r3, [r7, #20]
 800626c:	687b      	ldr	r3, [r7, #4]
 800626e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006270:	613b      	str	r3, [r7, #16]
 8006272:	687b      	ldr	r3, [r7, #4]
 8006274:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006278:	73fb      	strb	r3, [r7, #15]
 800627a:	687b      	ldr	r3, [r7, #4]
 800627c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006280:	73bb      	strb	r3, [r7, #14]
 8006282:	7bfb      	ldrb	r3, [r7, #15]
 8006284:	2b10      	cmp	r3, #16
 8006286:	d003      	beq.n	8006290 <HAL_I2C_EV_IRQHandler+0x38>
 8006288:	7bfb      	ldrb	r3, [r7, #15]
 800628a:	2b40      	cmp	r3, #64	; 0x40
 800628c:	f040 80c1 	bne.w	8006412 <HAL_I2C_EV_IRQHandler+0x1ba>
 8006290:	687b      	ldr	r3, [r7, #4]
 8006292:	681b      	ldr	r3, [r3, #0]
 8006294:	699b      	ldr	r3, [r3, #24]
 8006296:	61bb      	str	r3, [r7, #24]
 8006298:	687b      	ldr	r3, [r7, #4]
 800629a:	681b      	ldr	r3, [r3, #0]
 800629c:	695b      	ldr	r3, [r3, #20]
 800629e:	61fb      	str	r3, [r7, #28]
 80062a0:	69fb      	ldr	r3, [r7, #28]
 80062a2:	f003 0301 	and.w	r3, r3, #1
 80062a6:	2b00      	cmp	r3, #0
 80062a8:	d10d      	bne.n	80062c6 <HAL_I2C_EV_IRQHandler+0x6e>
 80062aa:	693b      	ldr	r3, [r7, #16]
 80062ac:	f5b3 0f2a 	cmp.w	r3, #11141120	; 0xaa0000
 80062b0:	d003      	beq.n	80062ba <HAL_I2C_EV_IRQHandler+0x62>
 80062b2:	693b      	ldr	r3, [r7, #16]
 80062b4:	f1b3 4f2a 	cmp.w	r3, #2852126720	; 0xaa000000
 80062b8:	d101      	bne.n	80062be <HAL_I2C_EV_IRQHandler+0x66>
 80062ba:	2301      	movs	r3, #1
 80062bc:	e000      	b.n	80062c0 <HAL_I2C_EV_IRQHandler+0x68>
 80062be:	2300      	movs	r3, #0
 80062c0:	2b01      	cmp	r3, #1
 80062c2:	f000 8132 	beq.w	800652a <HAL_I2C_EV_IRQHandler+0x2d2>
 80062c6:	69fb      	ldr	r3, [r7, #28]
 80062c8:	f003 0301 	and.w	r3, r3, #1
 80062cc:	2b00      	cmp	r3, #0
 80062ce:	d00c      	beq.n	80062ea <HAL_I2C_EV_IRQHandler+0x92>
 80062d0:	697b      	ldr	r3, [r7, #20]
 80062d2:	0a5b      	lsrs	r3, r3, #9
 80062d4:	f003 0301 	and.w	r3, r3, #1
 80062d8:	2b00      	cmp	r3, #0
 80062da:	d006      	beq.n	80062ea <HAL_I2C_EV_IRQHandler+0x92>
 80062dc:	6878      	ldr	r0, [r7, #4]
 80062de:	f001 ffa8 	bl	8008232 <I2C_ConvertOtherXferOptions>
 80062e2:	6878      	ldr	r0, [r7, #4]
 80062e4:	f000 fd83 	bl	8006dee <I2C_Master_SB>
 80062e8:	e092      	b.n	8006410 <HAL_I2C_EV_IRQHandler+0x1b8>
 80062ea:	69fb      	ldr	r3, [r7, #28]
 80062ec:	08db      	lsrs	r3, r3, #3
 80062ee:	f003 0301 	and.w	r3, r3, #1
 80062f2:	2b00      	cmp	r3, #0
 80062f4:	d009      	beq.n	800630a <HAL_I2C_EV_IRQHandler+0xb2>
 80062f6:	697b      	ldr	r3, [r7, #20]
 80062f8:	0a5b      	lsrs	r3, r3, #9
 80062fa:	f003 0301 	and.w	r3, r3, #1
 80062fe:	2b00      	cmp	r3, #0
 8006300:	d003      	beq.n	800630a <HAL_I2C_EV_IRQHandler+0xb2>
 8006302:	6878      	ldr	r0, [r7, #4]
 8006304:	f000 fdf9 	bl	8006efa <I2C_Master_ADD10>
 8006308:	e082      	b.n	8006410 <HAL_I2C_EV_IRQHandler+0x1b8>
 800630a:	69fb      	ldr	r3, [r7, #28]
 800630c:	085b      	lsrs	r3, r3, #1
 800630e:	f003 0301 	and.w	r3, r3, #1
 8006312:	2b00      	cmp	r3, #0
 8006314:	d009      	beq.n	800632a <HAL_I2C_EV_IRQHandler+0xd2>
 8006316:	697b      	ldr	r3, [r7, #20]
 8006318:	0a5b      	lsrs	r3, r3, #9
 800631a:	f003 0301 	and.w	r3, r3, #1
 800631e:	2b00      	cmp	r3, #0
 8006320:	d003      	beq.n	800632a <HAL_I2C_EV_IRQHandler+0xd2>
 8006322:	6878      	ldr	r0, [r7, #4]
 8006324:	f000 fe13 	bl	8006f4e <I2C_Master_ADDR>
 8006328:	e072      	b.n	8006410 <HAL_I2C_EV_IRQHandler+0x1b8>
 800632a:	69bb      	ldr	r3, [r7, #24]
 800632c:	089b      	lsrs	r3, r3, #2
 800632e:	f003 0301 	and.w	r3, r3, #1
 8006332:	2b00      	cmp	r3, #0
 8006334:	d03b      	beq.n	80063ae <HAL_I2C_EV_IRQHandler+0x156>
 8006336:	687b      	ldr	r3, [r7, #4]
 8006338:	681b      	ldr	r3, [r3, #0]
 800633a:	685b      	ldr	r3, [r3, #4]
 800633c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8006340:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006344:	f000 80f3 	beq.w	800652e <HAL_I2C_EV_IRQHandler+0x2d6>
 8006348:	69fb      	ldr	r3, [r7, #28]
 800634a:	09db      	lsrs	r3, r3, #7
 800634c:	f003 0301 	and.w	r3, r3, #1
 8006350:	2b00      	cmp	r3, #0
 8006352:	d00f      	beq.n	8006374 <HAL_I2C_EV_IRQHandler+0x11c>
 8006354:	697b      	ldr	r3, [r7, #20]
 8006356:	0a9b      	lsrs	r3, r3, #10
 8006358:	f003 0301 	and.w	r3, r3, #1
 800635c:	2b00      	cmp	r3, #0
 800635e:	d009      	beq.n	8006374 <HAL_I2C_EV_IRQHandler+0x11c>
 8006360:	69fb      	ldr	r3, [r7, #28]
 8006362:	089b      	lsrs	r3, r3, #2
 8006364:	f003 0301 	and.w	r3, r3, #1
 8006368:	2b00      	cmp	r3, #0
 800636a:	d103      	bne.n	8006374 <HAL_I2C_EV_IRQHandler+0x11c>
 800636c:	6878      	ldr	r0, [r7, #4]
 800636e:	f000 f9f3 	bl	8006758 <I2C_MasterTransmit_TXE>
 8006372:	e04d      	b.n	8006410 <HAL_I2C_EV_IRQHandler+0x1b8>
 8006374:	69fb      	ldr	r3, [r7, #28]
 8006376:	089b      	lsrs	r3, r3, #2
 8006378:	f003 0301 	and.w	r3, r3, #1
 800637c:	2b00      	cmp	r3, #0
 800637e:	f000 80d6 	beq.w	800652e <HAL_I2C_EV_IRQHandler+0x2d6>
 8006382:	697b      	ldr	r3, [r7, #20]
 8006384:	0a5b      	lsrs	r3, r3, #9
 8006386:	f003 0301 	and.w	r3, r3, #1
 800638a:	2b00      	cmp	r3, #0
 800638c:	f000 80cf 	beq.w	800652e <HAL_I2C_EV_IRQHandler+0x2d6>
 8006390:	7bbb      	ldrb	r3, [r7, #14]
 8006392:	2b21      	cmp	r3, #33	; 0x21
 8006394:	d103      	bne.n	800639e <HAL_I2C_EV_IRQHandler+0x146>
 8006396:	6878      	ldr	r0, [r7, #4]
 8006398:	f000 fa7a 	bl	8006890 <I2C_MasterTransmit_BTF>
 800639c:	e0c7      	b.n	800652e <HAL_I2C_EV_IRQHandler+0x2d6>
 800639e:	7bfb      	ldrb	r3, [r7, #15]
 80063a0:	2b40      	cmp	r3, #64	; 0x40
 80063a2:	f040 80c4 	bne.w	800652e <HAL_I2C_EV_IRQHandler+0x2d6>
 80063a6:	6878      	ldr	r0, [r7, #4]
 80063a8:	f000 fae8 	bl	800697c <I2C_MemoryTransmit_TXE_BTF>
 80063ac:	e0bf      	b.n	800652e <HAL_I2C_EV_IRQHandler+0x2d6>
 80063ae:	687b      	ldr	r3, [r7, #4]
 80063b0:	681b      	ldr	r3, [r3, #0]
 80063b2:	685b      	ldr	r3, [r3, #4]
 80063b4:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80063b8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80063bc:	f000 80b7 	beq.w	800652e <HAL_I2C_EV_IRQHandler+0x2d6>
 80063c0:	69fb      	ldr	r3, [r7, #28]
 80063c2:	099b      	lsrs	r3, r3, #6
 80063c4:	f003 0301 	and.w	r3, r3, #1
 80063c8:	2b00      	cmp	r3, #0
 80063ca:	d00f      	beq.n	80063ec <HAL_I2C_EV_IRQHandler+0x194>
 80063cc:	697b      	ldr	r3, [r7, #20]
 80063ce:	0a9b      	lsrs	r3, r3, #10
 80063d0:	f003 0301 	and.w	r3, r3, #1
 80063d4:	2b00      	cmp	r3, #0
 80063d6:	d009      	beq.n	80063ec <HAL_I2C_EV_IRQHandler+0x194>
 80063d8:	69fb      	ldr	r3, [r7, #28]
 80063da:	089b      	lsrs	r3, r3, #2
 80063dc:	f003 0301 	and.w	r3, r3, #1
 80063e0:	2b00      	cmp	r3, #0
 80063e2:	d103      	bne.n	80063ec <HAL_I2C_EV_IRQHandler+0x194>
 80063e4:	6878      	ldr	r0, [r7, #4]
 80063e6:	f000 fb5d 	bl	8006aa4 <I2C_MasterReceive_RXNE>
 80063ea:	e011      	b.n	8006410 <HAL_I2C_EV_IRQHandler+0x1b8>
 80063ec:	69fb      	ldr	r3, [r7, #28]
 80063ee:	089b      	lsrs	r3, r3, #2
 80063f0:	f003 0301 	and.w	r3, r3, #1
 80063f4:	2b00      	cmp	r3, #0
 80063f6:	f000 809a 	beq.w	800652e <HAL_I2C_EV_IRQHandler+0x2d6>
 80063fa:	697b      	ldr	r3, [r7, #20]
 80063fc:	0a5b      	lsrs	r3, r3, #9
 80063fe:	f003 0301 	and.w	r3, r3, #1
 8006402:	2b00      	cmp	r3, #0
 8006404:	f000 8093 	beq.w	800652e <HAL_I2C_EV_IRQHandler+0x2d6>
 8006408:	6878      	ldr	r0, [r7, #4]
 800640a:	f000 fc06 	bl	8006c1a <I2C_MasterReceive_BTF>
 800640e:	e08e      	b.n	800652e <HAL_I2C_EV_IRQHandler+0x2d6>
 8006410:	e08d      	b.n	800652e <HAL_I2C_EV_IRQHandler+0x2d6>
 8006412:	687b      	ldr	r3, [r7, #4]
 8006414:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006416:	2b00      	cmp	r3, #0
 8006418:	d004      	beq.n	8006424 <HAL_I2C_EV_IRQHandler+0x1cc>
 800641a:	687b      	ldr	r3, [r7, #4]
 800641c:	681b      	ldr	r3, [r3, #0]
 800641e:	695b      	ldr	r3, [r3, #20]
 8006420:	61fb      	str	r3, [r7, #28]
 8006422:	e007      	b.n	8006434 <HAL_I2C_EV_IRQHandler+0x1dc>
 8006424:	687b      	ldr	r3, [r7, #4]
 8006426:	681b      	ldr	r3, [r3, #0]
 8006428:	699b      	ldr	r3, [r3, #24]
 800642a:	61bb      	str	r3, [r7, #24]
 800642c:	687b      	ldr	r3, [r7, #4]
 800642e:	681b      	ldr	r3, [r3, #0]
 8006430:	695b      	ldr	r3, [r3, #20]
 8006432:	61fb      	str	r3, [r7, #28]
 8006434:	69fb      	ldr	r3, [r7, #28]
 8006436:	085b      	lsrs	r3, r3, #1
 8006438:	f003 0301 	and.w	r3, r3, #1
 800643c:	2b00      	cmp	r3, #0
 800643e:	d012      	beq.n	8006466 <HAL_I2C_EV_IRQHandler+0x20e>
 8006440:	697b      	ldr	r3, [r7, #20]
 8006442:	0a5b      	lsrs	r3, r3, #9
 8006444:	f003 0301 	and.w	r3, r3, #1
 8006448:	2b00      	cmp	r3, #0
 800644a:	d00c      	beq.n	8006466 <HAL_I2C_EV_IRQHandler+0x20e>
 800644c:	687b      	ldr	r3, [r7, #4]
 800644e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006450:	2b00      	cmp	r3, #0
 8006452:	d003      	beq.n	800645c <HAL_I2C_EV_IRQHandler+0x204>
 8006454:	687b      	ldr	r3, [r7, #4]
 8006456:	681b      	ldr	r3, [r3, #0]
 8006458:	699b      	ldr	r3, [r3, #24]
 800645a:	61bb      	str	r3, [r7, #24]
 800645c:	69b9      	ldr	r1, [r7, #24]
 800645e:	6878      	ldr	r0, [r7, #4]
 8006460:	f000 ffc4 	bl	80073ec <I2C_Slave_ADDR>
 8006464:	e066      	b.n	8006534 <HAL_I2C_EV_IRQHandler+0x2dc>
 8006466:	69fb      	ldr	r3, [r7, #28]
 8006468:	091b      	lsrs	r3, r3, #4
 800646a:	f003 0301 	and.w	r3, r3, #1
 800646e:	2b00      	cmp	r3, #0
 8006470:	d009      	beq.n	8006486 <HAL_I2C_EV_IRQHandler+0x22e>
 8006472:	697b      	ldr	r3, [r7, #20]
 8006474:	0a5b      	lsrs	r3, r3, #9
 8006476:	f003 0301 	and.w	r3, r3, #1
 800647a:	2b00      	cmp	r3, #0
 800647c:	d003      	beq.n	8006486 <HAL_I2C_EV_IRQHandler+0x22e>
 800647e:	6878      	ldr	r0, [r7, #4]
 8006480:	f000 fffe 	bl	8007480 <I2C_Slave_STOPF>
 8006484:	e056      	b.n	8006534 <HAL_I2C_EV_IRQHandler+0x2dc>
 8006486:	7bbb      	ldrb	r3, [r7, #14]
 8006488:	2b21      	cmp	r3, #33	; 0x21
 800648a:	d002      	beq.n	8006492 <HAL_I2C_EV_IRQHandler+0x23a>
 800648c:	7bbb      	ldrb	r3, [r7, #14]
 800648e:	2b29      	cmp	r3, #41	; 0x29
 8006490:	d125      	bne.n	80064de <HAL_I2C_EV_IRQHandler+0x286>
 8006492:	69fb      	ldr	r3, [r7, #28]
 8006494:	09db      	lsrs	r3, r3, #7
 8006496:	f003 0301 	and.w	r3, r3, #1
 800649a:	2b00      	cmp	r3, #0
 800649c:	d00f      	beq.n	80064be <HAL_I2C_EV_IRQHandler+0x266>
 800649e:	697b      	ldr	r3, [r7, #20]
 80064a0:	0a9b      	lsrs	r3, r3, #10
 80064a2:	f003 0301 	and.w	r3, r3, #1
 80064a6:	2b00      	cmp	r3, #0
 80064a8:	d009      	beq.n	80064be <HAL_I2C_EV_IRQHandler+0x266>
 80064aa:	69fb      	ldr	r3, [r7, #28]
 80064ac:	089b      	lsrs	r3, r3, #2
 80064ae:	f003 0301 	and.w	r3, r3, #1
 80064b2:	2b00      	cmp	r3, #0
 80064b4:	d103      	bne.n	80064be <HAL_I2C_EV_IRQHandler+0x266>
 80064b6:	6878      	ldr	r0, [r7, #4]
 80064b8:	f000 feda 	bl	8007270 <I2C_SlaveTransmit_TXE>
 80064bc:	e039      	b.n	8006532 <HAL_I2C_EV_IRQHandler+0x2da>
 80064be:	69fb      	ldr	r3, [r7, #28]
 80064c0:	089b      	lsrs	r3, r3, #2
 80064c2:	f003 0301 	and.w	r3, r3, #1
 80064c6:	2b00      	cmp	r3, #0
 80064c8:	d033      	beq.n	8006532 <HAL_I2C_EV_IRQHandler+0x2da>
 80064ca:	697b      	ldr	r3, [r7, #20]
 80064cc:	0a5b      	lsrs	r3, r3, #9
 80064ce:	f003 0301 	and.w	r3, r3, #1
 80064d2:	2b00      	cmp	r3, #0
 80064d4:	d02d      	beq.n	8006532 <HAL_I2C_EV_IRQHandler+0x2da>
 80064d6:	6878      	ldr	r0, [r7, #4]
 80064d8:	f000 ff07 	bl	80072ea <I2C_SlaveTransmit_BTF>
 80064dc:	e029      	b.n	8006532 <HAL_I2C_EV_IRQHandler+0x2da>
 80064de:	69fb      	ldr	r3, [r7, #28]
 80064e0:	099b      	lsrs	r3, r3, #6
 80064e2:	f003 0301 	and.w	r3, r3, #1
 80064e6:	2b00      	cmp	r3, #0
 80064e8:	d00f      	beq.n	800650a <HAL_I2C_EV_IRQHandler+0x2b2>
 80064ea:	697b      	ldr	r3, [r7, #20]
 80064ec:	0a9b      	lsrs	r3, r3, #10
 80064ee:	f003 0301 	and.w	r3, r3, #1
 80064f2:	2b00      	cmp	r3, #0
 80064f4:	d009      	beq.n	800650a <HAL_I2C_EV_IRQHandler+0x2b2>
 80064f6:	69fb      	ldr	r3, [r7, #28]
 80064f8:	089b      	lsrs	r3, r3, #2
 80064fa:	f003 0301 	and.w	r3, r3, #1
 80064fe:	2b00      	cmp	r3, #0
 8006500:	d103      	bne.n	800650a <HAL_I2C_EV_IRQHandler+0x2b2>
 8006502:	6878      	ldr	r0, [r7, #4]
 8006504:	f000 ff12 	bl	800732c <I2C_SlaveReceive_RXNE>
 8006508:	e014      	b.n	8006534 <HAL_I2C_EV_IRQHandler+0x2dc>
 800650a:	69fb      	ldr	r3, [r7, #28]
 800650c:	089b      	lsrs	r3, r3, #2
 800650e:	f003 0301 	and.w	r3, r3, #1
 8006512:	2b00      	cmp	r3, #0
 8006514:	d00e      	beq.n	8006534 <HAL_I2C_EV_IRQHandler+0x2dc>
 8006516:	697b      	ldr	r3, [r7, #20]
 8006518:	0a5b      	lsrs	r3, r3, #9
 800651a:	f003 0301 	and.w	r3, r3, #1
 800651e:	2b00      	cmp	r3, #0
 8006520:	d008      	beq.n	8006534 <HAL_I2C_EV_IRQHandler+0x2dc>
 8006522:	6878      	ldr	r0, [r7, #4]
 8006524:	f000 ff40 	bl	80073a8 <I2C_SlaveReceive_BTF>
 8006528:	e004      	b.n	8006534 <HAL_I2C_EV_IRQHandler+0x2dc>
 800652a:	bf00      	nop
 800652c:	e002      	b.n	8006534 <HAL_I2C_EV_IRQHandler+0x2dc>
 800652e:	bf00      	nop
 8006530:	e000      	b.n	8006534 <HAL_I2C_EV_IRQHandler+0x2dc>
 8006532:	bf00      	nop
 8006534:	3720      	adds	r7, #32
 8006536:	46bd      	mov	sp, r7
 8006538:	bd80      	pop	{r7, pc}

0800653a <HAL_I2C_ER_IRQHandler>:
 800653a:	b580      	push	{r7, lr}
 800653c:	b08a      	sub	sp, #40	; 0x28
 800653e:	af00      	add	r7, sp, #0
 8006540:	6078      	str	r0, [r7, #4]
 8006542:	687b      	ldr	r3, [r7, #4]
 8006544:	681b      	ldr	r3, [r3, #0]
 8006546:	695b      	ldr	r3, [r3, #20]
 8006548:	623b      	str	r3, [r7, #32]
 800654a:	687b      	ldr	r3, [r7, #4]
 800654c:	681b      	ldr	r3, [r3, #0]
 800654e:	685b      	ldr	r3, [r3, #4]
 8006550:	61fb      	str	r3, [r7, #28]
 8006552:	2300      	movs	r3, #0
 8006554:	627b      	str	r3, [r7, #36]	; 0x24
 8006556:	687b      	ldr	r3, [r7, #4]
 8006558:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800655c:	76fb      	strb	r3, [r7, #27]
 800655e:	6a3b      	ldr	r3, [r7, #32]
 8006560:	0a1b      	lsrs	r3, r3, #8
 8006562:	f003 0301 	and.w	r3, r3, #1
 8006566:	2b00      	cmp	r3, #0
 8006568:	d00e      	beq.n	8006588 <HAL_I2C_ER_IRQHandler+0x4e>
 800656a:	69fb      	ldr	r3, [r7, #28]
 800656c:	0a1b      	lsrs	r3, r3, #8
 800656e:	f003 0301 	and.w	r3, r3, #1
 8006572:	2b00      	cmp	r3, #0
 8006574:	d008      	beq.n	8006588 <HAL_I2C_ER_IRQHandler+0x4e>
 8006576:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006578:	f043 0301 	orr.w	r3, r3, #1
 800657c:	627b      	str	r3, [r7, #36]	; 0x24
 800657e:	687b      	ldr	r3, [r7, #4]
 8006580:	681b      	ldr	r3, [r3, #0]
 8006582:	f46f 7280 	mvn.w	r2, #256	; 0x100
 8006586:	615a      	str	r2, [r3, #20]
 8006588:	6a3b      	ldr	r3, [r7, #32]
 800658a:	0a5b      	lsrs	r3, r3, #9
 800658c:	f003 0301 	and.w	r3, r3, #1
 8006590:	2b00      	cmp	r3, #0
 8006592:	d00e      	beq.n	80065b2 <HAL_I2C_ER_IRQHandler+0x78>
 8006594:	69fb      	ldr	r3, [r7, #28]
 8006596:	0a1b      	lsrs	r3, r3, #8
 8006598:	f003 0301 	and.w	r3, r3, #1
 800659c:	2b00      	cmp	r3, #0
 800659e:	d008      	beq.n	80065b2 <HAL_I2C_ER_IRQHandler+0x78>
 80065a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80065a2:	f043 0302 	orr.w	r3, r3, #2
 80065a6:	627b      	str	r3, [r7, #36]	; 0x24
 80065a8:	687b      	ldr	r3, [r7, #4]
 80065aa:	681b      	ldr	r3, [r3, #0]
 80065ac:	f46f 7200 	mvn.w	r2, #512	; 0x200
 80065b0:	615a      	str	r2, [r3, #20]
 80065b2:	6a3b      	ldr	r3, [r7, #32]
 80065b4:	0a9b      	lsrs	r3, r3, #10
 80065b6:	f003 0301 	and.w	r3, r3, #1
 80065ba:	2b00      	cmp	r3, #0
 80065bc:	d03f      	beq.n	800663e <HAL_I2C_ER_IRQHandler+0x104>
 80065be:	69fb      	ldr	r3, [r7, #28]
 80065c0:	0a1b      	lsrs	r3, r3, #8
 80065c2:	f003 0301 	and.w	r3, r3, #1
 80065c6:	2b00      	cmp	r3, #0
 80065c8:	d039      	beq.n	800663e <HAL_I2C_ER_IRQHandler+0x104>
 80065ca:	7efb      	ldrb	r3, [r7, #27]
 80065cc:	76bb      	strb	r3, [r7, #26]
 80065ce:	687b      	ldr	r3, [r7, #4]
 80065d0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80065d2:	b29b      	uxth	r3, r3
 80065d4:	617b      	str	r3, [r7, #20]
 80065d6:	687b      	ldr	r3, [r7, #4]
 80065d8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80065dc:	74fb      	strb	r3, [r7, #19]
 80065de:	687b      	ldr	r3, [r7, #4]
 80065e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80065e2:	60fb      	str	r3, [r7, #12]
 80065e4:	7ebb      	ldrb	r3, [r7, #26]
 80065e6:	2b20      	cmp	r3, #32
 80065e8:	d112      	bne.n	8006610 <HAL_I2C_ER_IRQHandler+0xd6>
 80065ea:	697b      	ldr	r3, [r7, #20]
 80065ec:	2b00      	cmp	r3, #0
 80065ee:	d10f      	bne.n	8006610 <HAL_I2C_ER_IRQHandler+0xd6>
 80065f0:	7cfb      	ldrb	r3, [r7, #19]
 80065f2:	2b21      	cmp	r3, #33	; 0x21
 80065f4:	d008      	beq.n	8006608 <HAL_I2C_ER_IRQHandler+0xce>
 80065f6:	7cfb      	ldrb	r3, [r7, #19]
 80065f8:	2b29      	cmp	r3, #41	; 0x29
 80065fa:	d005      	beq.n	8006608 <HAL_I2C_ER_IRQHandler+0xce>
 80065fc:	7cfb      	ldrb	r3, [r7, #19]
 80065fe:	2b28      	cmp	r3, #40	; 0x28
 8006600:	d106      	bne.n	8006610 <HAL_I2C_ER_IRQHandler+0xd6>
 8006602:	68fb      	ldr	r3, [r7, #12]
 8006604:	2b21      	cmp	r3, #33	; 0x21
 8006606:	d103      	bne.n	8006610 <HAL_I2C_ER_IRQHandler+0xd6>
 8006608:	6878      	ldr	r0, [r7, #4]
 800660a:	f001 f869 	bl	80076e0 <I2C_Slave_AF>
 800660e:	e016      	b.n	800663e <HAL_I2C_ER_IRQHandler+0x104>
 8006610:	687b      	ldr	r3, [r7, #4]
 8006612:	681b      	ldr	r3, [r3, #0]
 8006614:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8006618:	615a      	str	r2, [r3, #20]
 800661a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800661c:	f043 0304 	orr.w	r3, r3, #4
 8006620:	627b      	str	r3, [r7, #36]	; 0x24
 8006622:	7efb      	ldrb	r3, [r7, #27]
 8006624:	2b10      	cmp	r3, #16
 8006626:	d002      	beq.n	800662e <HAL_I2C_ER_IRQHandler+0xf4>
 8006628:	7efb      	ldrb	r3, [r7, #27]
 800662a:	2b40      	cmp	r3, #64	; 0x40
 800662c:	d107      	bne.n	800663e <HAL_I2C_ER_IRQHandler+0x104>
 800662e:	687b      	ldr	r3, [r7, #4]
 8006630:	681b      	ldr	r3, [r3, #0]
 8006632:	681a      	ldr	r2, [r3, #0]
 8006634:	687b      	ldr	r3, [r7, #4]
 8006636:	681b      	ldr	r3, [r3, #0]
 8006638:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800663c:	601a      	str	r2, [r3, #0]
 800663e:	6a3b      	ldr	r3, [r7, #32]
 8006640:	0adb      	lsrs	r3, r3, #11
 8006642:	f003 0301 	and.w	r3, r3, #1
 8006646:	2b00      	cmp	r3, #0
 8006648:	d00e      	beq.n	8006668 <HAL_I2C_ER_IRQHandler+0x12e>
 800664a:	69fb      	ldr	r3, [r7, #28]
 800664c:	0a1b      	lsrs	r3, r3, #8
 800664e:	f003 0301 	and.w	r3, r3, #1
 8006652:	2b00      	cmp	r3, #0
 8006654:	d008      	beq.n	8006668 <HAL_I2C_ER_IRQHandler+0x12e>
 8006656:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006658:	f043 0308 	orr.w	r3, r3, #8
 800665c:	627b      	str	r3, [r7, #36]	; 0x24
 800665e:	687b      	ldr	r3, [r7, #4]
 8006660:	681b      	ldr	r3, [r3, #0]
 8006662:	f46f 6200 	mvn.w	r2, #2048	; 0x800
 8006666:	615a      	str	r2, [r3, #20]
 8006668:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800666a:	2b00      	cmp	r3, #0
 800666c:	d008      	beq.n	8006680 <HAL_I2C_ER_IRQHandler+0x146>
 800666e:	687b      	ldr	r3, [r7, #4]
 8006670:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006672:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006674:	431a      	orrs	r2, r3
 8006676:	687b      	ldr	r3, [r7, #4]
 8006678:	641a      	str	r2, [r3, #64]	; 0x40
 800667a:	6878      	ldr	r0, [r7, #4]
 800667c:	f001 f8a0 	bl	80077c0 <I2C_ITError>
 8006680:	bf00      	nop
 8006682:	3728      	adds	r7, #40	; 0x28
 8006684:	46bd      	mov	sp, r7
 8006686:	bd80      	pop	{r7, pc}

08006688 <HAL_I2C_MasterTxCpltCallback>:
 8006688:	b480      	push	{r7}
 800668a:	b083      	sub	sp, #12
 800668c:	af00      	add	r7, sp, #0
 800668e:	6078      	str	r0, [r7, #4]
 8006690:	bf00      	nop
 8006692:	370c      	adds	r7, #12
 8006694:	46bd      	mov	sp, r7
 8006696:	f85d 7b04 	ldr.w	r7, [sp], #4
 800669a:	4770      	bx	lr

0800669c <HAL_I2C_MasterRxCpltCallback>:
 800669c:	b480      	push	{r7}
 800669e:	b083      	sub	sp, #12
 80066a0:	af00      	add	r7, sp, #0
 80066a2:	6078      	str	r0, [r7, #4]
 80066a4:	bf00      	nop
 80066a6:	370c      	adds	r7, #12
 80066a8:	46bd      	mov	sp, r7
 80066aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066ae:	4770      	bx	lr

080066b0 <HAL_I2C_SlaveTxCpltCallback>:
 80066b0:	b480      	push	{r7}
 80066b2:	b083      	sub	sp, #12
 80066b4:	af00      	add	r7, sp, #0
 80066b6:	6078      	str	r0, [r7, #4]
 80066b8:	bf00      	nop
 80066ba:	370c      	adds	r7, #12
 80066bc:	46bd      	mov	sp, r7
 80066be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066c2:	4770      	bx	lr

080066c4 <HAL_I2C_SlaveRxCpltCallback>:
 80066c4:	b480      	push	{r7}
 80066c6:	b083      	sub	sp, #12
 80066c8:	af00      	add	r7, sp, #0
 80066ca:	6078      	str	r0, [r7, #4]
 80066cc:	bf00      	nop
 80066ce:	370c      	adds	r7, #12
 80066d0:	46bd      	mov	sp, r7
 80066d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066d6:	4770      	bx	lr

080066d8 <HAL_I2C_AddrCallback>:
 80066d8:	b480      	push	{r7}
 80066da:	b083      	sub	sp, #12
 80066dc:	af00      	add	r7, sp, #0
 80066de:	6078      	str	r0, [r7, #4]
 80066e0:	460b      	mov	r3, r1
 80066e2:	70fb      	strb	r3, [r7, #3]
 80066e4:	4613      	mov	r3, r2
 80066e6:	803b      	strh	r3, [r7, #0]
 80066e8:	bf00      	nop
 80066ea:	370c      	adds	r7, #12
 80066ec:	46bd      	mov	sp, r7
 80066ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066f2:	4770      	bx	lr

080066f4 <HAL_I2C_ListenCpltCallback>:
 80066f4:	b480      	push	{r7}
 80066f6:	b083      	sub	sp, #12
 80066f8:	af00      	add	r7, sp, #0
 80066fa:	6078      	str	r0, [r7, #4]
 80066fc:	bf00      	nop
 80066fe:	370c      	adds	r7, #12
 8006700:	46bd      	mov	sp, r7
 8006702:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006706:	4770      	bx	lr

08006708 <HAL_I2C_MemTxCpltCallback>:
 8006708:	b480      	push	{r7}
 800670a:	b083      	sub	sp, #12
 800670c:	af00      	add	r7, sp, #0
 800670e:	6078      	str	r0, [r7, #4]
 8006710:	bf00      	nop
 8006712:	370c      	adds	r7, #12
 8006714:	46bd      	mov	sp, r7
 8006716:	f85d 7b04 	ldr.w	r7, [sp], #4
 800671a:	4770      	bx	lr

0800671c <HAL_I2C_MemRxCpltCallback>:
 800671c:	b480      	push	{r7}
 800671e:	b083      	sub	sp, #12
 8006720:	af00      	add	r7, sp, #0
 8006722:	6078      	str	r0, [r7, #4]
 8006724:	bf00      	nop
 8006726:	370c      	adds	r7, #12
 8006728:	46bd      	mov	sp, r7
 800672a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800672e:	4770      	bx	lr

08006730 <HAL_I2C_ErrorCallback>:
 8006730:	b480      	push	{r7}
 8006732:	b083      	sub	sp, #12
 8006734:	af00      	add	r7, sp, #0
 8006736:	6078      	str	r0, [r7, #4]
 8006738:	bf00      	nop
 800673a:	370c      	adds	r7, #12
 800673c:	46bd      	mov	sp, r7
 800673e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006742:	4770      	bx	lr

08006744 <HAL_I2C_AbortCpltCallback>:
 8006744:	b480      	push	{r7}
 8006746:	b083      	sub	sp, #12
 8006748:	af00      	add	r7, sp, #0
 800674a:	6078      	str	r0, [r7, #4]
 800674c:	bf00      	nop
 800674e:	370c      	adds	r7, #12
 8006750:	46bd      	mov	sp, r7
 8006752:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006756:	4770      	bx	lr

08006758 <I2C_MasterTransmit_TXE>:
 8006758:	b580      	push	{r7, lr}
 800675a:	b084      	sub	sp, #16
 800675c:	af00      	add	r7, sp, #0
 800675e:	6078      	str	r0, [r7, #4]
 8006760:	687b      	ldr	r3, [r7, #4]
 8006762:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006766:	73fb      	strb	r3, [r7, #15]
 8006768:	687b      	ldr	r3, [r7, #4]
 800676a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800676e:	73bb      	strb	r3, [r7, #14]
 8006770:	687b      	ldr	r3, [r7, #4]
 8006772:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006774:	60bb      	str	r3, [r7, #8]
 8006776:	687b      	ldr	r3, [r7, #4]
 8006778:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800677a:	2b00      	cmp	r3, #0
 800677c:	d150      	bne.n	8006820 <I2C_MasterTransmit_TXE+0xc8>
 800677e:	7bfb      	ldrb	r3, [r7, #15]
 8006780:	2b21      	cmp	r3, #33	; 0x21
 8006782:	d14d      	bne.n	8006820 <I2C_MasterTransmit_TXE+0xc8>
 8006784:	68bb      	ldr	r3, [r7, #8]
 8006786:	2b08      	cmp	r3, #8
 8006788:	d01d      	beq.n	80067c6 <I2C_MasterTransmit_TXE+0x6e>
 800678a:	68bb      	ldr	r3, [r7, #8]
 800678c:	2b20      	cmp	r3, #32
 800678e:	d01a      	beq.n	80067c6 <I2C_MasterTransmit_TXE+0x6e>
 8006790:	68bb      	ldr	r3, [r7, #8]
 8006792:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8006796:	d016      	beq.n	80067c6 <I2C_MasterTransmit_TXE+0x6e>
 8006798:	687b      	ldr	r3, [r7, #4]
 800679a:	681b      	ldr	r3, [r3, #0]
 800679c:	685a      	ldr	r2, [r3, #4]
 800679e:	687b      	ldr	r3, [r7, #4]
 80067a0:	681b      	ldr	r3, [r3, #0]
 80067a2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80067a6:	605a      	str	r2, [r3, #4]
 80067a8:	687b      	ldr	r3, [r7, #4]
 80067aa:	2211      	movs	r2, #17
 80067ac:	631a      	str	r2, [r3, #48]	; 0x30
 80067ae:	687b      	ldr	r3, [r7, #4]
 80067b0:	2200      	movs	r2, #0
 80067b2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80067b6:	687b      	ldr	r3, [r7, #4]
 80067b8:	2220      	movs	r2, #32
 80067ba:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80067be:	6878      	ldr	r0, [r7, #4]
 80067c0:	f7ff ff62 	bl	8006688 <HAL_I2C_MasterTxCpltCallback>
 80067c4:	e060      	b.n	8006888 <I2C_MasterTransmit_TXE+0x130>
 80067c6:	687b      	ldr	r3, [r7, #4]
 80067c8:	681b      	ldr	r3, [r3, #0]
 80067ca:	685a      	ldr	r2, [r3, #4]
 80067cc:	687b      	ldr	r3, [r7, #4]
 80067ce:	681b      	ldr	r3, [r3, #0]
 80067d0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80067d4:	605a      	str	r2, [r3, #4]
 80067d6:	687b      	ldr	r3, [r7, #4]
 80067d8:	681b      	ldr	r3, [r3, #0]
 80067da:	681a      	ldr	r2, [r3, #0]
 80067dc:	687b      	ldr	r3, [r7, #4]
 80067de:	681b      	ldr	r3, [r3, #0]
 80067e0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80067e4:	601a      	str	r2, [r3, #0]
 80067e6:	687b      	ldr	r3, [r7, #4]
 80067e8:	2200      	movs	r2, #0
 80067ea:	631a      	str	r2, [r3, #48]	; 0x30
 80067ec:	687b      	ldr	r3, [r7, #4]
 80067ee:	2220      	movs	r2, #32
 80067f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80067f4:	687b      	ldr	r3, [r7, #4]
 80067f6:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80067fa:	b2db      	uxtb	r3, r3
 80067fc:	2b40      	cmp	r3, #64	; 0x40
 80067fe:	d107      	bne.n	8006810 <I2C_MasterTransmit_TXE+0xb8>
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	2200      	movs	r2, #0
 8006804:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006808:	6878      	ldr	r0, [r7, #4]
 800680a:	f7ff ff7d 	bl	8006708 <HAL_I2C_MemTxCpltCallback>
 800680e:	e03b      	b.n	8006888 <I2C_MasterTransmit_TXE+0x130>
 8006810:	687b      	ldr	r3, [r7, #4]
 8006812:	2200      	movs	r2, #0
 8006814:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006818:	6878      	ldr	r0, [r7, #4]
 800681a:	f7ff ff35 	bl	8006688 <HAL_I2C_MasterTxCpltCallback>
 800681e:	e033      	b.n	8006888 <I2C_MasterTransmit_TXE+0x130>
 8006820:	7bfb      	ldrb	r3, [r7, #15]
 8006822:	2b21      	cmp	r3, #33	; 0x21
 8006824:	d005      	beq.n	8006832 <I2C_MasterTransmit_TXE+0xda>
 8006826:	7bbb      	ldrb	r3, [r7, #14]
 8006828:	2b40      	cmp	r3, #64	; 0x40
 800682a:	d12d      	bne.n	8006888 <I2C_MasterTransmit_TXE+0x130>
 800682c:	7bfb      	ldrb	r3, [r7, #15]
 800682e:	2b22      	cmp	r3, #34	; 0x22
 8006830:	d12a      	bne.n	8006888 <I2C_MasterTransmit_TXE+0x130>
 8006832:	687b      	ldr	r3, [r7, #4]
 8006834:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006836:	b29b      	uxth	r3, r3
 8006838:	2b00      	cmp	r3, #0
 800683a:	d108      	bne.n	800684e <I2C_MasterTransmit_TXE+0xf6>
 800683c:	687b      	ldr	r3, [r7, #4]
 800683e:	681b      	ldr	r3, [r3, #0]
 8006840:	685a      	ldr	r2, [r3, #4]
 8006842:	687b      	ldr	r3, [r7, #4]
 8006844:	681b      	ldr	r3, [r3, #0]
 8006846:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800684a:	605a      	str	r2, [r3, #4]
 800684c:	e01c      	b.n	8006888 <I2C_MasterTransmit_TXE+0x130>
 800684e:	687b      	ldr	r3, [r7, #4]
 8006850:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006854:	b2db      	uxtb	r3, r3
 8006856:	2b40      	cmp	r3, #64	; 0x40
 8006858:	d103      	bne.n	8006862 <I2C_MasterTransmit_TXE+0x10a>
 800685a:	6878      	ldr	r0, [r7, #4]
 800685c:	f000 f88e 	bl	800697c <I2C_MemoryTransmit_TXE_BTF>
 8006860:	e012      	b.n	8006888 <I2C_MasterTransmit_TXE+0x130>
 8006862:	687b      	ldr	r3, [r7, #4]
 8006864:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006866:	781a      	ldrb	r2, [r3, #0]
 8006868:	687b      	ldr	r3, [r7, #4]
 800686a:	681b      	ldr	r3, [r3, #0]
 800686c:	611a      	str	r2, [r3, #16]
 800686e:	687b      	ldr	r3, [r7, #4]
 8006870:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006872:	1c5a      	adds	r2, r3, #1
 8006874:	687b      	ldr	r3, [r7, #4]
 8006876:	625a      	str	r2, [r3, #36]	; 0x24
 8006878:	687b      	ldr	r3, [r7, #4]
 800687a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800687c:	b29b      	uxth	r3, r3
 800687e:	3b01      	subs	r3, #1
 8006880:	b29a      	uxth	r2, r3
 8006882:	687b      	ldr	r3, [r7, #4]
 8006884:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006886:	e7ff      	b.n	8006888 <I2C_MasterTransmit_TXE+0x130>
 8006888:	bf00      	nop
 800688a:	3710      	adds	r7, #16
 800688c:	46bd      	mov	sp, r7
 800688e:	bd80      	pop	{r7, pc}

08006890 <I2C_MasterTransmit_BTF>:
 8006890:	b580      	push	{r7, lr}
 8006892:	b084      	sub	sp, #16
 8006894:	af00      	add	r7, sp, #0
 8006896:	6078      	str	r0, [r7, #4]
 8006898:	687b      	ldr	r3, [r7, #4]
 800689a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800689c:	60fb      	str	r3, [r7, #12]
 800689e:	687b      	ldr	r3, [r7, #4]
 80068a0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80068a4:	b2db      	uxtb	r3, r3
 80068a6:	2b21      	cmp	r3, #33	; 0x21
 80068a8:	d164      	bne.n	8006974 <I2C_MasterTransmit_BTF+0xe4>
 80068aa:	687b      	ldr	r3, [r7, #4]
 80068ac:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80068ae:	b29b      	uxth	r3, r3
 80068b0:	2b00      	cmp	r3, #0
 80068b2:	d012      	beq.n	80068da <I2C_MasterTransmit_BTF+0x4a>
 80068b4:	687b      	ldr	r3, [r7, #4]
 80068b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80068b8:	781a      	ldrb	r2, [r3, #0]
 80068ba:	687b      	ldr	r3, [r7, #4]
 80068bc:	681b      	ldr	r3, [r3, #0]
 80068be:	611a      	str	r2, [r3, #16]
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80068c4:	1c5a      	adds	r2, r3, #1
 80068c6:	687b      	ldr	r3, [r7, #4]
 80068c8:	625a      	str	r2, [r3, #36]	; 0x24
 80068ca:	687b      	ldr	r3, [r7, #4]
 80068cc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80068ce:	b29b      	uxth	r3, r3
 80068d0:	3b01      	subs	r3, #1
 80068d2:	b29a      	uxth	r2, r3
 80068d4:	687b      	ldr	r3, [r7, #4]
 80068d6:	855a      	strh	r2, [r3, #42]	; 0x2a
 80068d8:	e04c      	b.n	8006974 <I2C_MasterTransmit_BTF+0xe4>
 80068da:	68fb      	ldr	r3, [r7, #12]
 80068dc:	2b08      	cmp	r3, #8
 80068de:	d01d      	beq.n	800691c <I2C_MasterTransmit_BTF+0x8c>
 80068e0:	68fb      	ldr	r3, [r7, #12]
 80068e2:	2b20      	cmp	r3, #32
 80068e4:	d01a      	beq.n	800691c <I2C_MasterTransmit_BTF+0x8c>
 80068e6:	68fb      	ldr	r3, [r7, #12]
 80068e8:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 80068ec:	d016      	beq.n	800691c <I2C_MasterTransmit_BTF+0x8c>
 80068ee:	687b      	ldr	r3, [r7, #4]
 80068f0:	681b      	ldr	r3, [r3, #0]
 80068f2:	685a      	ldr	r2, [r3, #4]
 80068f4:	687b      	ldr	r3, [r7, #4]
 80068f6:	681b      	ldr	r3, [r3, #0]
 80068f8:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80068fc:	605a      	str	r2, [r3, #4]
 80068fe:	687b      	ldr	r3, [r7, #4]
 8006900:	2211      	movs	r2, #17
 8006902:	631a      	str	r2, [r3, #48]	; 0x30
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	2200      	movs	r2, #0
 8006908:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800690c:	687b      	ldr	r3, [r7, #4]
 800690e:	2220      	movs	r2, #32
 8006910:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006914:	6878      	ldr	r0, [r7, #4]
 8006916:	f7ff feb7 	bl	8006688 <HAL_I2C_MasterTxCpltCallback>
 800691a:	e02b      	b.n	8006974 <I2C_MasterTransmit_BTF+0xe4>
 800691c:	687b      	ldr	r3, [r7, #4]
 800691e:	681b      	ldr	r3, [r3, #0]
 8006920:	685a      	ldr	r2, [r3, #4]
 8006922:	687b      	ldr	r3, [r7, #4]
 8006924:	681b      	ldr	r3, [r3, #0]
 8006926:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800692a:	605a      	str	r2, [r3, #4]
 800692c:	687b      	ldr	r3, [r7, #4]
 800692e:	681b      	ldr	r3, [r3, #0]
 8006930:	681a      	ldr	r2, [r3, #0]
 8006932:	687b      	ldr	r3, [r7, #4]
 8006934:	681b      	ldr	r3, [r3, #0]
 8006936:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800693a:	601a      	str	r2, [r3, #0]
 800693c:	687b      	ldr	r3, [r7, #4]
 800693e:	2200      	movs	r2, #0
 8006940:	631a      	str	r2, [r3, #48]	; 0x30
 8006942:	687b      	ldr	r3, [r7, #4]
 8006944:	2220      	movs	r2, #32
 8006946:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800694a:	687b      	ldr	r3, [r7, #4]
 800694c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006950:	b2db      	uxtb	r3, r3
 8006952:	2b40      	cmp	r3, #64	; 0x40
 8006954:	d107      	bne.n	8006966 <I2C_MasterTransmit_BTF+0xd6>
 8006956:	687b      	ldr	r3, [r7, #4]
 8006958:	2200      	movs	r2, #0
 800695a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800695e:	6878      	ldr	r0, [r7, #4]
 8006960:	f7ff fed2 	bl	8006708 <HAL_I2C_MemTxCpltCallback>
 8006964:	e006      	b.n	8006974 <I2C_MasterTransmit_BTF+0xe4>
 8006966:	687b      	ldr	r3, [r7, #4]
 8006968:	2200      	movs	r2, #0
 800696a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800696e:	6878      	ldr	r0, [r7, #4]
 8006970:	f7ff fe8a 	bl	8006688 <HAL_I2C_MasterTxCpltCallback>
 8006974:	bf00      	nop
 8006976:	3710      	adds	r7, #16
 8006978:	46bd      	mov	sp, r7
 800697a:	bd80      	pop	{r7, pc}

0800697c <I2C_MemoryTransmit_TXE_BTF>:
 800697c:	b580      	push	{r7, lr}
 800697e:	b084      	sub	sp, #16
 8006980:	af00      	add	r7, sp, #0
 8006982:	6078      	str	r0, [r7, #4]
 8006984:	687b      	ldr	r3, [r7, #4]
 8006986:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800698a:	73fb      	strb	r3, [r7, #15]
 800698c:	687b      	ldr	r3, [r7, #4]
 800698e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006990:	2b00      	cmp	r3, #0
 8006992:	d11d      	bne.n	80069d0 <I2C_MemoryTransmit_TXE_BTF+0x54>
 8006994:	687b      	ldr	r3, [r7, #4]
 8006996:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006998:	2b01      	cmp	r3, #1
 800699a:	d10b      	bne.n	80069b4 <I2C_MemoryTransmit_TXE_BTF+0x38>
 800699c:	687b      	ldr	r3, [r7, #4]
 800699e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80069a0:	b2da      	uxtb	r2, r3
 80069a2:	687b      	ldr	r3, [r7, #4]
 80069a4:	681b      	ldr	r3, [r3, #0]
 80069a6:	611a      	str	r2, [r3, #16]
 80069a8:	687b      	ldr	r3, [r7, #4]
 80069aa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80069ac:	1c9a      	adds	r2, r3, #2
 80069ae:	687b      	ldr	r3, [r7, #4]
 80069b0:	651a      	str	r2, [r3, #80]	; 0x50
 80069b2:	e073      	b.n	8006a9c <I2C_MemoryTransmit_TXE_BTF+0x120>
 80069b4:	687b      	ldr	r3, [r7, #4]
 80069b6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80069b8:	b29b      	uxth	r3, r3
 80069ba:	121b      	asrs	r3, r3, #8
 80069bc:	b2da      	uxtb	r2, r3
 80069be:	687b      	ldr	r3, [r7, #4]
 80069c0:	681b      	ldr	r3, [r3, #0]
 80069c2:	611a      	str	r2, [r3, #16]
 80069c4:	687b      	ldr	r3, [r7, #4]
 80069c6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80069c8:	1c5a      	adds	r2, r3, #1
 80069ca:	687b      	ldr	r3, [r7, #4]
 80069cc:	651a      	str	r2, [r3, #80]	; 0x50
 80069ce:	e065      	b.n	8006a9c <I2C_MemoryTransmit_TXE_BTF+0x120>
 80069d0:	687b      	ldr	r3, [r7, #4]
 80069d2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80069d4:	2b01      	cmp	r3, #1
 80069d6:	d10b      	bne.n	80069f0 <I2C_MemoryTransmit_TXE_BTF+0x74>
 80069d8:	687b      	ldr	r3, [r7, #4]
 80069da:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80069dc:	b2da      	uxtb	r2, r3
 80069de:	687b      	ldr	r3, [r7, #4]
 80069e0:	681b      	ldr	r3, [r3, #0]
 80069e2:	611a      	str	r2, [r3, #16]
 80069e4:	687b      	ldr	r3, [r7, #4]
 80069e6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80069e8:	1c5a      	adds	r2, r3, #1
 80069ea:	687b      	ldr	r3, [r7, #4]
 80069ec:	651a      	str	r2, [r3, #80]	; 0x50
 80069ee:	e055      	b.n	8006a9c <I2C_MemoryTransmit_TXE_BTF+0x120>
 80069f0:	687b      	ldr	r3, [r7, #4]
 80069f2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80069f4:	2b02      	cmp	r3, #2
 80069f6:	d151      	bne.n	8006a9c <I2C_MemoryTransmit_TXE_BTF+0x120>
 80069f8:	7bfb      	ldrb	r3, [r7, #15]
 80069fa:	2b22      	cmp	r3, #34	; 0x22
 80069fc:	d10d      	bne.n	8006a1a <I2C_MemoryTransmit_TXE_BTF+0x9e>
 80069fe:	687b      	ldr	r3, [r7, #4]
 8006a00:	681b      	ldr	r3, [r3, #0]
 8006a02:	681a      	ldr	r2, [r3, #0]
 8006a04:	687b      	ldr	r3, [r7, #4]
 8006a06:	681b      	ldr	r3, [r3, #0]
 8006a08:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006a0c:	601a      	str	r2, [r3, #0]
 8006a0e:	687b      	ldr	r3, [r7, #4]
 8006a10:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006a12:	1c5a      	adds	r2, r3, #1
 8006a14:	687b      	ldr	r3, [r7, #4]
 8006a16:	651a      	str	r2, [r3, #80]	; 0x50
 8006a18:	e040      	b.n	8006a9c <I2C_MemoryTransmit_TXE_BTF+0x120>
 8006a1a:	687b      	ldr	r3, [r7, #4]
 8006a1c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006a1e:	b29b      	uxth	r3, r3
 8006a20:	2b00      	cmp	r3, #0
 8006a22:	d015      	beq.n	8006a50 <I2C_MemoryTransmit_TXE_BTF+0xd4>
 8006a24:	7bfb      	ldrb	r3, [r7, #15]
 8006a26:	2b21      	cmp	r3, #33	; 0x21
 8006a28:	d112      	bne.n	8006a50 <I2C_MemoryTransmit_TXE_BTF+0xd4>
 8006a2a:	687b      	ldr	r3, [r7, #4]
 8006a2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006a2e:	781a      	ldrb	r2, [r3, #0]
 8006a30:	687b      	ldr	r3, [r7, #4]
 8006a32:	681b      	ldr	r3, [r3, #0]
 8006a34:	611a      	str	r2, [r3, #16]
 8006a36:	687b      	ldr	r3, [r7, #4]
 8006a38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006a3a:	1c5a      	adds	r2, r3, #1
 8006a3c:	687b      	ldr	r3, [r7, #4]
 8006a3e:	625a      	str	r2, [r3, #36]	; 0x24
 8006a40:	687b      	ldr	r3, [r7, #4]
 8006a42:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006a44:	b29b      	uxth	r3, r3
 8006a46:	3b01      	subs	r3, #1
 8006a48:	b29a      	uxth	r2, r3
 8006a4a:	687b      	ldr	r3, [r7, #4]
 8006a4c:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006a4e:	e025      	b.n	8006a9c <I2C_MemoryTransmit_TXE_BTF+0x120>
 8006a50:	687b      	ldr	r3, [r7, #4]
 8006a52:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006a54:	b29b      	uxth	r3, r3
 8006a56:	2b00      	cmp	r3, #0
 8006a58:	d120      	bne.n	8006a9c <I2C_MemoryTransmit_TXE_BTF+0x120>
 8006a5a:	7bfb      	ldrb	r3, [r7, #15]
 8006a5c:	2b21      	cmp	r3, #33	; 0x21
 8006a5e:	d11d      	bne.n	8006a9c <I2C_MemoryTransmit_TXE_BTF+0x120>
 8006a60:	687b      	ldr	r3, [r7, #4]
 8006a62:	681b      	ldr	r3, [r3, #0]
 8006a64:	685a      	ldr	r2, [r3, #4]
 8006a66:	687b      	ldr	r3, [r7, #4]
 8006a68:	681b      	ldr	r3, [r3, #0]
 8006a6a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006a6e:	605a      	str	r2, [r3, #4]
 8006a70:	687b      	ldr	r3, [r7, #4]
 8006a72:	681b      	ldr	r3, [r3, #0]
 8006a74:	681a      	ldr	r2, [r3, #0]
 8006a76:	687b      	ldr	r3, [r7, #4]
 8006a78:	681b      	ldr	r3, [r3, #0]
 8006a7a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006a7e:	601a      	str	r2, [r3, #0]
 8006a80:	687b      	ldr	r3, [r7, #4]
 8006a82:	2200      	movs	r2, #0
 8006a84:	631a      	str	r2, [r3, #48]	; 0x30
 8006a86:	687b      	ldr	r3, [r7, #4]
 8006a88:	2220      	movs	r2, #32
 8006a8a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006a8e:	687b      	ldr	r3, [r7, #4]
 8006a90:	2200      	movs	r2, #0
 8006a92:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006a96:	6878      	ldr	r0, [r7, #4]
 8006a98:	f7ff fe36 	bl	8006708 <HAL_I2C_MemTxCpltCallback>
 8006a9c:	bf00      	nop
 8006a9e:	3710      	adds	r7, #16
 8006aa0:	46bd      	mov	sp, r7
 8006aa2:	bd80      	pop	{r7, pc}

08006aa4 <I2C_MasterReceive_RXNE>:
 8006aa4:	b580      	push	{r7, lr}
 8006aa6:	b084      	sub	sp, #16
 8006aa8:	af00      	add	r7, sp, #0
 8006aaa:	6078      	str	r0, [r7, #4]
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006ab2:	b2db      	uxtb	r3, r3
 8006ab4:	2b22      	cmp	r3, #34	; 0x22
 8006ab6:	f040 80ac 	bne.w	8006c12 <I2C_MasterReceive_RXNE+0x16e>
 8006aba:	687b      	ldr	r3, [r7, #4]
 8006abc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006abe:	b29b      	uxth	r3, r3
 8006ac0:	60fb      	str	r3, [r7, #12]
 8006ac2:	68fb      	ldr	r3, [r7, #12]
 8006ac4:	2b03      	cmp	r3, #3
 8006ac6:	d921      	bls.n	8006b0c <I2C_MasterReceive_RXNE+0x68>
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	681b      	ldr	r3, [r3, #0]
 8006acc:	691a      	ldr	r2, [r3, #16]
 8006ace:	687b      	ldr	r3, [r7, #4]
 8006ad0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006ad2:	b2d2      	uxtb	r2, r2
 8006ad4:	701a      	strb	r2, [r3, #0]
 8006ad6:	687b      	ldr	r3, [r7, #4]
 8006ad8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006ada:	1c5a      	adds	r2, r3, #1
 8006adc:	687b      	ldr	r3, [r7, #4]
 8006ade:	625a      	str	r2, [r3, #36]	; 0x24
 8006ae0:	687b      	ldr	r3, [r7, #4]
 8006ae2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006ae4:	b29b      	uxth	r3, r3
 8006ae6:	3b01      	subs	r3, #1
 8006ae8:	b29a      	uxth	r2, r3
 8006aea:	687b      	ldr	r3, [r7, #4]
 8006aec:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006aee:	687b      	ldr	r3, [r7, #4]
 8006af0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006af2:	b29b      	uxth	r3, r3
 8006af4:	2b03      	cmp	r3, #3
 8006af6:	f040 808c 	bne.w	8006c12 <I2C_MasterReceive_RXNE+0x16e>
 8006afa:	687b      	ldr	r3, [r7, #4]
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	685a      	ldr	r2, [r3, #4]
 8006b00:	687b      	ldr	r3, [r7, #4]
 8006b02:	681b      	ldr	r3, [r3, #0]
 8006b04:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006b08:	605a      	str	r2, [r3, #4]
 8006b0a:	e082      	b.n	8006c12 <I2C_MasterReceive_RXNE+0x16e>
 8006b0c:	687b      	ldr	r3, [r7, #4]
 8006b0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006b10:	2b02      	cmp	r3, #2
 8006b12:	d075      	beq.n	8006c00 <I2C_MasterReceive_RXNE+0x15c>
 8006b14:	68fb      	ldr	r3, [r7, #12]
 8006b16:	2b01      	cmp	r3, #1
 8006b18:	d002      	beq.n	8006b20 <I2C_MasterReceive_RXNE+0x7c>
 8006b1a:	68fb      	ldr	r3, [r7, #12]
 8006b1c:	2b00      	cmp	r3, #0
 8006b1e:	d16f      	bne.n	8006c00 <I2C_MasterReceive_RXNE+0x15c>
 8006b20:	6878      	ldr	r0, [r7, #4]
 8006b22:	f001 facf 	bl	80080c4 <I2C_WaitOnSTOPRequestThroughIT>
 8006b26:	4603      	mov	r3, r0
 8006b28:	2b00      	cmp	r3, #0
 8006b2a:	d142      	bne.n	8006bb2 <I2C_MasterReceive_RXNE+0x10e>
 8006b2c:	687b      	ldr	r3, [r7, #4]
 8006b2e:	681b      	ldr	r3, [r3, #0]
 8006b30:	681a      	ldr	r2, [r3, #0]
 8006b32:	687b      	ldr	r3, [r7, #4]
 8006b34:	681b      	ldr	r3, [r3, #0]
 8006b36:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006b3a:	601a      	str	r2, [r3, #0]
 8006b3c:	687b      	ldr	r3, [r7, #4]
 8006b3e:	681b      	ldr	r3, [r3, #0]
 8006b40:	685a      	ldr	r2, [r3, #4]
 8006b42:	687b      	ldr	r3, [r7, #4]
 8006b44:	681b      	ldr	r3, [r3, #0]
 8006b46:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006b4a:	605a      	str	r2, [r3, #4]
 8006b4c:	687b      	ldr	r3, [r7, #4]
 8006b4e:	681b      	ldr	r3, [r3, #0]
 8006b50:	691a      	ldr	r2, [r3, #16]
 8006b52:	687b      	ldr	r3, [r7, #4]
 8006b54:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006b56:	b2d2      	uxtb	r2, r2
 8006b58:	701a      	strb	r2, [r3, #0]
 8006b5a:	687b      	ldr	r3, [r7, #4]
 8006b5c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006b5e:	1c5a      	adds	r2, r3, #1
 8006b60:	687b      	ldr	r3, [r7, #4]
 8006b62:	625a      	str	r2, [r3, #36]	; 0x24
 8006b64:	687b      	ldr	r3, [r7, #4]
 8006b66:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006b68:	b29b      	uxth	r3, r3
 8006b6a:	3b01      	subs	r3, #1
 8006b6c:	b29a      	uxth	r2, r3
 8006b6e:	687b      	ldr	r3, [r7, #4]
 8006b70:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006b72:	687b      	ldr	r3, [r7, #4]
 8006b74:	2220      	movs	r2, #32
 8006b76:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006b7a:	687b      	ldr	r3, [r7, #4]
 8006b7c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006b80:	b2db      	uxtb	r3, r3
 8006b82:	2b40      	cmp	r3, #64	; 0x40
 8006b84:	d10a      	bne.n	8006b9c <I2C_MasterReceive_RXNE+0xf8>
 8006b86:	687b      	ldr	r3, [r7, #4]
 8006b88:	2200      	movs	r2, #0
 8006b8a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006b8e:	687b      	ldr	r3, [r7, #4]
 8006b90:	2200      	movs	r2, #0
 8006b92:	631a      	str	r2, [r3, #48]	; 0x30
 8006b94:	6878      	ldr	r0, [r7, #4]
 8006b96:	f7ff fdc1 	bl	800671c <HAL_I2C_MemRxCpltCallback>
 8006b9a:	e03a      	b.n	8006c12 <I2C_MasterReceive_RXNE+0x16e>
 8006b9c:	687b      	ldr	r3, [r7, #4]
 8006b9e:	2200      	movs	r2, #0
 8006ba0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006ba4:	687b      	ldr	r3, [r7, #4]
 8006ba6:	2212      	movs	r2, #18
 8006ba8:	631a      	str	r2, [r3, #48]	; 0x30
 8006baa:	6878      	ldr	r0, [r7, #4]
 8006bac:	f7ff fd76 	bl	800669c <HAL_I2C_MasterRxCpltCallback>
 8006bb0:	e02f      	b.n	8006c12 <I2C_MasterReceive_RXNE+0x16e>
 8006bb2:	687b      	ldr	r3, [r7, #4]
 8006bb4:	681b      	ldr	r3, [r3, #0]
 8006bb6:	685a      	ldr	r2, [r3, #4]
 8006bb8:	687b      	ldr	r3, [r7, #4]
 8006bba:	681b      	ldr	r3, [r3, #0]
 8006bbc:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8006bc0:	605a      	str	r2, [r3, #4]
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	681b      	ldr	r3, [r3, #0]
 8006bc6:	691a      	ldr	r2, [r3, #16]
 8006bc8:	687b      	ldr	r3, [r7, #4]
 8006bca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006bcc:	b2d2      	uxtb	r2, r2
 8006bce:	701a      	strb	r2, [r3, #0]
 8006bd0:	687b      	ldr	r3, [r7, #4]
 8006bd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006bd4:	1c5a      	adds	r2, r3, #1
 8006bd6:	687b      	ldr	r3, [r7, #4]
 8006bd8:	625a      	str	r2, [r3, #36]	; 0x24
 8006bda:	687b      	ldr	r3, [r7, #4]
 8006bdc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006bde:	b29b      	uxth	r3, r3
 8006be0:	3b01      	subs	r3, #1
 8006be2:	b29a      	uxth	r2, r3
 8006be4:	687b      	ldr	r3, [r7, #4]
 8006be6:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006be8:	687b      	ldr	r3, [r7, #4]
 8006bea:	2220      	movs	r2, #32
 8006bec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006bf0:	687b      	ldr	r3, [r7, #4]
 8006bf2:	2200      	movs	r2, #0
 8006bf4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006bf8:	6878      	ldr	r0, [r7, #4]
 8006bfa:	f7ff fd99 	bl	8006730 <HAL_I2C_ErrorCallback>
 8006bfe:	e008      	b.n	8006c12 <I2C_MasterReceive_RXNE+0x16e>
 8006c00:	687b      	ldr	r3, [r7, #4]
 8006c02:	681b      	ldr	r3, [r3, #0]
 8006c04:	685a      	ldr	r2, [r3, #4]
 8006c06:	687b      	ldr	r3, [r7, #4]
 8006c08:	681b      	ldr	r3, [r3, #0]
 8006c0a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006c0e:	605a      	str	r2, [r3, #4]
 8006c10:	e7ff      	b.n	8006c12 <I2C_MasterReceive_RXNE+0x16e>
 8006c12:	bf00      	nop
 8006c14:	3710      	adds	r7, #16
 8006c16:	46bd      	mov	sp, r7
 8006c18:	bd80      	pop	{r7, pc}

08006c1a <I2C_MasterReceive_BTF>:
 8006c1a:	b580      	push	{r7, lr}
 8006c1c:	b084      	sub	sp, #16
 8006c1e:	af00      	add	r7, sp, #0
 8006c20:	6078      	str	r0, [r7, #4]
 8006c22:	687b      	ldr	r3, [r7, #4]
 8006c24:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006c26:	60fb      	str	r3, [r7, #12]
 8006c28:	687b      	ldr	r3, [r7, #4]
 8006c2a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006c2c:	b29b      	uxth	r3, r3
 8006c2e:	2b04      	cmp	r3, #4
 8006c30:	d11b      	bne.n	8006c6a <I2C_MasterReceive_BTF+0x50>
 8006c32:	687b      	ldr	r3, [r7, #4]
 8006c34:	681b      	ldr	r3, [r3, #0]
 8006c36:	685a      	ldr	r2, [r3, #4]
 8006c38:	687b      	ldr	r3, [r7, #4]
 8006c3a:	681b      	ldr	r3, [r3, #0]
 8006c3c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006c40:	605a      	str	r2, [r3, #4]
 8006c42:	687b      	ldr	r3, [r7, #4]
 8006c44:	681b      	ldr	r3, [r3, #0]
 8006c46:	691a      	ldr	r2, [r3, #16]
 8006c48:	687b      	ldr	r3, [r7, #4]
 8006c4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006c4c:	b2d2      	uxtb	r2, r2
 8006c4e:	701a      	strb	r2, [r3, #0]
 8006c50:	687b      	ldr	r3, [r7, #4]
 8006c52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006c54:	1c5a      	adds	r2, r3, #1
 8006c56:	687b      	ldr	r3, [r7, #4]
 8006c58:	625a      	str	r2, [r3, #36]	; 0x24
 8006c5a:	687b      	ldr	r3, [r7, #4]
 8006c5c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006c5e:	b29b      	uxth	r3, r3
 8006c60:	3b01      	subs	r3, #1
 8006c62:	b29a      	uxth	r2, r3
 8006c64:	687b      	ldr	r3, [r7, #4]
 8006c66:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006c68:	e0bd      	b.n	8006de6 <I2C_MasterReceive_BTF+0x1cc>
 8006c6a:	687b      	ldr	r3, [r7, #4]
 8006c6c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006c6e:	b29b      	uxth	r3, r3
 8006c70:	2b03      	cmp	r3, #3
 8006c72:	d129      	bne.n	8006cc8 <I2C_MasterReceive_BTF+0xae>
 8006c74:	687b      	ldr	r3, [r7, #4]
 8006c76:	681b      	ldr	r3, [r3, #0]
 8006c78:	685a      	ldr	r2, [r3, #4]
 8006c7a:	687b      	ldr	r3, [r7, #4]
 8006c7c:	681b      	ldr	r3, [r3, #0]
 8006c7e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006c82:	605a      	str	r2, [r3, #4]
 8006c84:	68fb      	ldr	r3, [r7, #12]
 8006c86:	2b04      	cmp	r3, #4
 8006c88:	d00a      	beq.n	8006ca0 <I2C_MasterReceive_BTF+0x86>
 8006c8a:	68fb      	ldr	r3, [r7, #12]
 8006c8c:	2b02      	cmp	r3, #2
 8006c8e:	d007      	beq.n	8006ca0 <I2C_MasterReceive_BTF+0x86>
 8006c90:	687b      	ldr	r3, [r7, #4]
 8006c92:	681b      	ldr	r3, [r3, #0]
 8006c94:	681a      	ldr	r2, [r3, #0]
 8006c96:	687b      	ldr	r3, [r7, #4]
 8006c98:	681b      	ldr	r3, [r3, #0]
 8006c9a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006c9e:	601a      	str	r2, [r3, #0]
 8006ca0:	687b      	ldr	r3, [r7, #4]
 8006ca2:	681b      	ldr	r3, [r3, #0]
 8006ca4:	691a      	ldr	r2, [r3, #16]
 8006ca6:	687b      	ldr	r3, [r7, #4]
 8006ca8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006caa:	b2d2      	uxtb	r2, r2
 8006cac:	701a      	strb	r2, [r3, #0]
 8006cae:	687b      	ldr	r3, [r7, #4]
 8006cb0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006cb2:	1c5a      	adds	r2, r3, #1
 8006cb4:	687b      	ldr	r3, [r7, #4]
 8006cb6:	625a      	str	r2, [r3, #36]	; 0x24
 8006cb8:	687b      	ldr	r3, [r7, #4]
 8006cba:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006cbc:	b29b      	uxth	r3, r3
 8006cbe:	3b01      	subs	r3, #1
 8006cc0:	b29a      	uxth	r2, r3
 8006cc2:	687b      	ldr	r3, [r7, #4]
 8006cc4:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006cc6:	e08e      	b.n	8006de6 <I2C_MasterReceive_BTF+0x1cc>
 8006cc8:	687b      	ldr	r3, [r7, #4]
 8006cca:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006ccc:	b29b      	uxth	r3, r3
 8006cce:	2b02      	cmp	r3, #2
 8006cd0:	d176      	bne.n	8006dc0 <I2C_MasterReceive_BTF+0x1a6>
 8006cd2:	68fb      	ldr	r3, [r7, #12]
 8006cd4:	2b01      	cmp	r3, #1
 8006cd6:	d002      	beq.n	8006cde <I2C_MasterReceive_BTF+0xc4>
 8006cd8:	68fb      	ldr	r3, [r7, #12]
 8006cda:	2b10      	cmp	r3, #16
 8006cdc:	d108      	bne.n	8006cf0 <I2C_MasterReceive_BTF+0xd6>
 8006cde:	687b      	ldr	r3, [r7, #4]
 8006ce0:	681b      	ldr	r3, [r3, #0]
 8006ce2:	681a      	ldr	r2, [r3, #0]
 8006ce4:	687b      	ldr	r3, [r7, #4]
 8006ce6:	681b      	ldr	r3, [r3, #0]
 8006ce8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006cec:	601a      	str	r2, [r3, #0]
 8006cee:	e019      	b.n	8006d24 <I2C_MasterReceive_BTF+0x10a>
 8006cf0:	68fb      	ldr	r3, [r7, #12]
 8006cf2:	2b04      	cmp	r3, #4
 8006cf4:	d002      	beq.n	8006cfc <I2C_MasterReceive_BTF+0xe2>
 8006cf6:	68fb      	ldr	r3, [r7, #12]
 8006cf8:	2b02      	cmp	r3, #2
 8006cfa:	d108      	bne.n	8006d0e <I2C_MasterReceive_BTF+0xf4>
 8006cfc:	687b      	ldr	r3, [r7, #4]
 8006cfe:	681b      	ldr	r3, [r3, #0]
 8006d00:	681a      	ldr	r2, [r3, #0]
 8006d02:	687b      	ldr	r3, [r7, #4]
 8006d04:	681b      	ldr	r3, [r3, #0]
 8006d06:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006d0a:	601a      	str	r2, [r3, #0]
 8006d0c:	e00a      	b.n	8006d24 <I2C_MasterReceive_BTF+0x10a>
 8006d0e:	68fb      	ldr	r3, [r7, #12]
 8006d10:	2b10      	cmp	r3, #16
 8006d12:	d007      	beq.n	8006d24 <I2C_MasterReceive_BTF+0x10a>
 8006d14:	687b      	ldr	r3, [r7, #4]
 8006d16:	681b      	ldr	r3, [r3, #0]
 8006d18:	681a      	ldr	r2, [r3, #0]
 8006d1a:	687b      	ldr	r3, [r7, #4]
 8006d1c:	681b      	ldr	r3, [r3, #0]
 8006d1e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006d22:	601a      	str	r2, [r3, #0]
 8006d24:	687b      	ldr	r3, [r7, #4]
 8006d26:	681b      	ldr	r3, [r3, #0]
 8006d28:	691a      	ldr	r2, [r3, #16]
 8006d2a:	687b      	ldr	r3, [r7, #4]
 8006d2c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006d2e:	b2d2      	uxtb	r2, r2
 8006d30:	701a      	strb	r2, [r3, #0]
 8006d32:	687b      	ldr	r3, [r7, #4]
 8006d34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006d36:	1c5a      	adds	r2, r3, #1
 8006d38:	687b      	ldr	r3, [r7, #4]
 8006d3a:	625a      	str	r2, [r3, #36]	; 0x24
 8006d3c:	687b      	ldr	r3, [r7, #4]
 8006d3e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006d40:	b29b      	uxth	r3, r3
 8006d42:	3b01      	subs	r3, #1
 8006d44:	b29a      	uxth	r2, r3
 8006d46:	687b      	ldr	r3, [r7, #4]
 8006d48:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006d4a:	687b      	ldr	r3, [r7, #4]
 8006d4c:	681b      	ldr	r3, [r3, #0]
 8006d4e:	691a      	ldr	r2, [r3, #16]
 8006d50:	687b      	ldr	r3, [r7, #4]
 8006d52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006d54:	b2d2      	uxtb	r2, r2
 8006d56:	701a      	strb	r2, [r3, #0]
 8006d58:	687b      	ldr	r3, [r7, #4]
 8006d5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006d5c:	1c5a      	adds	r2, r3, #1
 8006d5e:	687b      	ldr	r3, [r7, #4]
 8006d60:	625a      	str	r2, [r3, #36]	; 0x24
 8006d62:	687b      	ldr	r3, [r7, #4]
 8006d64:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006d66:	b29b      	uxth	r3, r3
 8006d68:	3b01      	subs	r3, #1
 8006d6a:	b29a      	uxth	r2, r3
 8006d6c:	687b      	ldr	r3, [r7, #4]
 8006d6e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	681b      	ldr	r3, [r3, #0]
 8006d74:	685a      	ldr	r2, [r3, #4]
 8006d76:	687b      	ldr	r3, [r7, #4]
 8006d78:	681b      	ldr	r3, [r3, #0]
 8006d7a:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8006d7e:	605a      	str	r2, [r3, #4]
 8006d80:	687b      	ldr	r3, [r7, #4]
 8006d82:	2220      	movs	r2, #32
 8006d84:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006d88:	687b      	ldr	r3, [r7, #4]
 8006d8a:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006d8e:	b2db      	uxtb	r3, r3
 8006d90:	2b40      	cmp	r3, #64	; 0x40
 8006d92:	d10a      	bne.n	8006daa <I2C_MasterReceive_BTF+0x190>
 8006d94:	687b      	ldr	r3, [r7, #4]
 8006d96:	2200      	movs	r2, #0
 8006d98:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006d9c:	687b      	ldr	r3, [r7, #4]
 8006d9e:	2200      	movs	r2, #0
 8006da0:	631a      	str	r2, [r3, #48]	; 0x30
 8006da2:	6878      	ldr	r0, [r7, #4]
 8006da4:	f7ff fcba 	bl	800671c <HAL_I2C_MemRxCpltCallback>
 8006da8:	e01d      	b.n	8006de6 <I2C_MasterReceive_BTF+0x1cc>
 8006daa:	687b      	ldr	r3, [r7, #4]
 8006dac:	2200      	movs	r2, #0
 8006dae:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006db2:	687b      	ldr	r3, [r7, #4]
 8006db4:	2212      	movs	r2, #18
 8006db6:	631a      	str	r2, [r3, #48]	; 0x30
 8006db8:	6878      	ldr	r0, [r7, #4]
 8006dba:	f7ff fc6f 	bl	800669c <HAL_I2C_MasterRxCpltCallback>
 8006dbe:	e012      	b.n	8006de6 <I2C_MasterReceive_BTF+0x1cc>
 8006dc0:	687b      	ldr	r3, [r7, #4]
 8006dc2:	681b      	ldr	r3, [r3, #0]
 8006dc4:	691a      	ldr	r2, [r3, #16]
 8006dc6:	687b      	ldr	r3, [r7, #4]
 8006dc8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006dca:	b2d2      	uxtb	r2, r2
 8006dcc:	701a      	strb	r2, [r3, #0]
 8006dce:	687b      	ldr	r3, [r7, #4]
 8006dd0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006dd2:	1c5a      	adds	r2, r3, #1
 8006dd4:	687b      	ldr	r3, [r7, #4]
 8006dd6:	625a      	str	r2, [r3, #36]	; 0x24
 8006dd8:	687b      	ldr	r3, [r7, #4]
 8006dda:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006ddc:	b29b      	uxth	r3, r3
 8006dde:	3b01      	subs	r3, #1
 8006de0:	b29a      	uxth	r2, r3
 8006de2:	687b      	ldr	r3, [r7, #4]
 8006de4:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006de6:	bf00      	nop
 8006de8:	3710      	adds	r7, #16
 8006dea:	46bd      	mov	sp, r7
 8006dec:	bd80      	pop	{r7, pc}

08006dee <I2C_Master_SB>:
 8006dee:	b480      	push	{r7}
 8006df0:	b083      	sub	sp, #12
 8006df2:	af00      	add	r7, sp, #0
 8006df4:	6078      	str	r0, [r7, #4]
 8006df6:	687b      	ldr	r3, [r7, #4]
 8006df8:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006dfc:	b2db      	uxtb	r3, r3
 8006dfe:	2b40      	cmp	r3, #64	; 0x40
 8006e00:	d117      	bne.n	8006e32 <I2C_Master_SB+0x44>
 8006e02:	687b      	ldr	r3, [r7, #4]
 8006e04:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006e06:	2b00      	cmp	r3, #0
 8006e08:	d109      	bne.n	8006e1e <I2C_Master_SB+0x30>
 8006e0a:	687b      	ldr	r3, [r7, #4]
 8006e0c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e0e:	b2db      	uxtb	r3, r3
 8006e10:	461a      	mov	r2, r3
 8006e12:	687b      	ldr	r3, [r7, #4]
 8006e14:	681b      	ldr	r3, [r3, #0]
 8006e16:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8006e1a:	611a      	str	r2, [r3, #16]
 8006e1c:	e067      	b.n	8006eee <I2C_Master_SB+0x100>
 8006e1e:	687b      	ldr	r3, [r7, #4]
 8006e20:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e22:	b2db      	uxtb	r3, r3
 8006e24:	f043 0301 	orr.w	r3, r3, #1
 8006e28:	b2da      	uxtb	r2, r3
 8006e2a:	687b      	ldr	r3, [r7, #4]
 8006e2c:	681b      	ldr	r3, [r3, #0]
 8006e2e:	611a      	str	r2, [r3, #16]
 8006e30:	e05d      	b.n	8006eee <I2C_Master_SB+0x100>
 8006e32:	687b      	ldr	r3, [r7, #4]
 8006e34:	691b      	ldr	r3, [r3, #16]
 8006e36:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8006e3a:	d133      	bne.n	8006ea4 <I2C_Master_SB+0xb6>
 8006e3c:	687b      	ldr	r3, [r7, #4]
 8006e3e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006e42:	b2db      	uxtb	r3, r3
 8006e44:	2b21      	cmp	r3, #33	; 0x21
 8006e46:	d109      	bne.n	8006e5c <I2C_Master_SB+0x6e>
 8006e48:	687b      	ldr	r3, [r7, #4]
 8006e4a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e4c:	b2db      	uxtb	r3, r3
 8006e4e:	461a      	mov	r2, r3
 8006e50:	687b      	ldr	r3, [r7, #4]
 8006e52:	681b      	ldr	r3, [r3, #0]
 8006e54:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8006e58:	611a      	str	r2, [r3, #16]
 8006e5a:	e008      	b.n	8006e6e <I2C_Master_SB+0x80>
 8006e5c:	687b      	ldr	r3, [r7, #4]
 8006e5e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006e60:	b2db      	uxtb	r3, r3
 8006e62:	f043 0301 	orr.w	r3, r3, #1
 8006e66:	b2da      	uxtb	r2, r3
 8006e68:	687b      	ldr	r3, [r7, #4]
 8006e6a:	681b      	ldr	r3, [r3, #0]
 8006e6c:	611a      	str	r2, [r3, #16]
 8006e6e:	687b      	ldr	r3, [r7, #4]
 8006e70:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006e72:	2b00      	cmp	r3, #0
 8006e74:	d004      	beq.n	8006e80 <I2C_Master_SB+0x92>
 8006e76:	687b      	ldr	r3, [r7, #4]
 8006e78:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006e7a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006e7c:	2b00      	cmp	r3, #0
 8006e7e:	d108      	bne.n	8006e92 <I2C_Master_SB+0xa4>
 8006e80:	687b      	ldr	r3, [r7, #4]
 8006e82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006e84:	2b00      	cmp	r3, #0
 8006e86:	d032      	beq.n	8006eee <I2C_Master_SB+0x100>
 8006e88:	687b      	ldr	r3, [r7, #4]
 8006e8a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006e8c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006e8e:	2b00      	cmp	r3, #0
 8006e90:	d02d      	beq.n	8006eee <I2C_Master_SB+0x100>
 8006e92:	687b      	ldr	r3, [r7, #4]
 8006e94:	681b      	ldr	r3, [r3, #0]
 8006e96:	685a      	ldr	r2, [r3, #4]
 8006e98:	687b      	ldr	r3, [r7, #4]
 8006e9a:	681b      	ldr	r3, [r3, #0]
 8006e9c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006ea0:	605a      	str	r2, [r3, #4]
 8006ea2:	e024      	b.n	8006eee <I2C_Master_SB+0x100>
 8006ea4:	687b      	ldr	r3, [r7, #4]
 8006ea6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006ea8:	2b00      	cmp	r3, #0
 8006eaa:	d10e      	bne.n	8006eca <I2C_Master_SB+0xdc>
 8006eac:	687b      	ldr	r3, [r7, #4]
 8006eae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006eb0:	b29b      	uxth	r3, r3
 8006eb2:	11db      	asrs	r3, r3, #7
 8006eb4:	b2db      	uxtb	r3, r3
 8006eb6:	f003 0306 	and.w	r3, r3, #6
 8006eba:	b2db      	uxtb	r3, r3
 8006ebc:	f063 030f 	orn	r3, r3, #15
 8006ec0:	b2da      	uxtb	r2, r3
 8006ec2:	687b      	ldr	r3, [r7, #4]
 8006ec4:	681b      	ldr	r3, [r3, #0]
 8006ec6:	611a      	str	r2, [r3, #16]
 8006ec8:	e011      	b.n	8006eee <I2C_Master_SB+0x100>
 8006eca:	687b      	ldr	r3, [r7, #4]
 8006ecc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006ece:	2b01      	cmp	r3, #1
 8006ed0:	d10d      	bne.n	8006eee <I2C_Master_SB+0x100>
 8006ed2:	687b      	ldr	r3, [r7, #4]
 8006ed4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006ed6:	b29b      	uxth	r3, r3
 8006ed8:	11db      	asrs	r3, r3, #7
 8006eda:	b2db      	uxtb	r3, r3
 8006edc:	f003 0306 	and.w	r3, r3, #6
 8006ee0:	b2db      	uxtb	r3, r3
 8006ee2:	f063 030e 	orn	r3, r3, #14
 8006ee6:	b2da      	uxtb	r2, r3
 8006ee8:	687b      	ldr	r3, [r7, #4]
 8006eea:	681b      	ldr	r3, [r3, #0]
 8006eec:	611a      	str	r2, [r3, #16]
 8006eee:	bf00      	nop
 8006ef0:	370c      	adds	r7, #12
 8006ef2:	46bd      	mov	sp, r7
 8006ef4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ef8:	4770      	bx	lr

08006efa <I2C_Master_ADD10>:
 8006efa:	b480      	push	{r7}
 8006efc:	b083      	sub	sp, #12
 8006efe:	af00      	add	r7, sp, #0
 8006f00:	6078      	str	r0, [r7, #4]
 8006f02:	687b      	ldr	r3, [r7, #4]
 8006f04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006f06:	b2da      	uxtb	r2, r3
 8006f08:	687b      	ldr	r3, [r7, #4]
 8006f0a:	681b      	ldr	r3, [r3, #0]
 8006f0c:	611a      	str	r2, [r3, #16]
 8006f0e:	687b      	ldr	r3, [r7, #4]
 8006f10:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006f12:	2b00      	cmp	r3, #0
 8006f14:	d004      	beq.n	8006f20 <I2C_Master_ADD10+0x26>
 8006f16:	687b      	ldr	r3, [r7, #4]
 8006f18:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006f1a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006f1c:	2b00      	cmp	r3, #0
 8006f1e:	d108      	bne.n	8006f32 <I2C_Master_ADD10+0x38>
 8006f20:	687b      	ldr	r3, [r7, #4]
 8006f22:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006f24:	2b00      	cmp	r3, #0
 8006f26:	d00c      	beq.n	8006f42 <I2C_Master_ADD10+0x48>
 8006f28:	687b      	ldr	r3, [r7, #4]
 8006f2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006f2c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006f2e:	2b00      	cmp	r3, #0
 8006f30:	d007      	beq.n	8006f42 <I2C_Master_ADD10+0x48>
 8006f32:	687b      	ldr	r3, [r7, #4]
 8006f34:	681b      	ldr	r3, [r3, #0]
 8006f36:	685a      	ldr	r2, [r3, #4]
 8006f38:	687b      	ldr	r3, [r7, #4]
 8006f3a:	681b      	ldr	r3, [r3, #0]
 8006f3c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006f40:	605a      	str	r2, [r3, #4]
 8006f42:	bf00      	nop
 8006f44:	370c      	adds	r7, #12
 8006f46:	46bd      	mov	sp, r7
 8006f48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f4c:	4770      	bx	lr

08006f4e <I2C_Master_ADDR>:
 8006f4e:	b480      	push	{r7}
 8006f50:	b091      	sub	sp, #68	; 0x44
 8006f52:	af00      	add	r7, sp, #0
 8006f54:	6078      	str	r0, [r7, #4]
 8006f56:	687b      	ldr	r3, [r7, #4]
 8006f58:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006f5c:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
 8006f60:	687b      	ldr	r3, [r7, #4]
 8006f62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006f64:	63bb      	str	r3, [r7, #56]	; 0x38
 8006f66:	687b      	ldr	r3, [r7, #4]
 8006f68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006f6a:	637b      	str	r3, [r7, #52]	; 0x34
 8006f6c:	687b      	ldr	r3, [r7, #4]
 8006f6e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006f72:	b2db      	uxtb	r3, r3
 8006f74:	2b22      	cmp	r3, #34	; 0x22
 8006f76:	f040 8169 	bne.w	800724c <I2C_Master_ADDR+0x2fe>
 8006f7a:	687b      	ldr	r3, [r7, #4]
 8006f7c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006f7e:	2b00      	cmp	r3, #0
 8006f80:	d10f      	bne.n	8006fa2 <I2C_Master_ADDR+0x54>
 8006f82:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 8006f86:	2b40      	cmp	r3, #64	; 0x40
 8006f88:	d10b      	bne.n	8006fa2 <I2C_Master_ADDR+0x54>
 8006f8a:	2300      	movs	r3, #0
 8006f8c:	633b      	str	r3, [r7, #48]	; 0x30
 8006f8e:	687b      	ldr	r3, [r7, #4]
 8006f90:	681b      	ldr	r3, [r3, #0]
 8006f92:	695b      	ldr	r3, [r3, #20]
 8006f94:	633b      	str	r3, [r7, #48]	; 0x30
 8006f96:	687b      	ldr	r3, [r7, #4]
 8006f98:	681b      	ldr	r3, [r3, #0]
 8006f9a:	699b      	ldr	r3, [r3, #24]
 8006f9c:	633b      	str	r3, [r7, #48]	; 0x30
 8006f9e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8006fa0:	e160      	b.n	8007264 <I2C_Master_ADDR+0x316>
 8006fa2:	687b      	ldr	r3, [r7, #4]
 8006fa4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006fa6:	2b00      	cmp	r3, #0
 8006fa8:	d11d      	bne.n	8006fe6 <I2C_Master_ADDR+0x98>
 8006faa:	687b      	ldr	r3, [r7, #4]
 8006fac:	691b      	ldr	r3, [r3, #16]
 8006fae:	f5b3 4f40 	cmp.w	r3, #49152	; 0xc000
 8006fb2:	d118      	bne.n	8006fe6 <I2C_Master_ADDR+0x98>
 8006fb4:	2300      	movs	r3, #0
 8006fb6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006fb8:	687b      	ldr	r3, [r7, #4]
 8006fba:	681b      	ldr	r3, [r3, #0]
 8006fbc:	695b      	ldr	r3, [r3, #20]
 8006fbe:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006fc0:	687b      	ldr	r3, [r7, #4]
 8006fc2:	681b      	ldr	r3, [r3, #0]
 8006fc4:	699b      	ldr	r3, [r3, #24]
 8006fc6:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006fc8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006fca:	687b      	ldr	r3, [r7, #4]
 8006fcc:	681b      	ldr	r3, [r3, #0]
 8006fce:	681a      	ldr	r2, [r3, #0]
 8006fd0:	687b      	ldr	r3, [r7, #4]
 8006fd2:	681b      	ldr	r3, [r3, #0]
 8006fd4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006fd8:	601a      	str	r2, [r3, #0]
 8006fda:	687b      	ldr	r3, [r7, #4]
 8006fdc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006fde:	1c5a      	adds	r2, r3, #1
 8006fe0:	687b      	ldr	r3, [r7, #4]
 8006fe2:	651a      	str	r2, [r3, #80]	; 0x50
 8006fe4:	e13e      	b.n	8007264 <I2C_Master_ADDR+0x316>
 8006fe6:	687b      	ldr	r3, [r7, #4]
 8006fe8:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006fea:	b29b      	uxth	r3, r3
 8006fec:	2b00      	cmp	r3, #0
 8006fee:	d113      	bne.n	8007018 <I2C_Master_ADDR+0xca>
 8006ff0:	2300      	movs	r3, #0
 8006ff2:	62bb      	str	r3, [r7, #40]	; 0x28
 8006ff4:	687b      	ldr	r3, [r7, #4]
 8006ff6:	681b      	ldr	r3, [r3, #0]
 8006ff8:	695b      	ldr	r3, [r3, #20]
 8006ffa:	62bb      	str	r3, [r7, #40]	; 0x28
 8006ffc:	687b      	ldr	r3, [r7, #4]
 8006ffe:	681b      	ldr	r3, [r3, #0]
 8007000:	699b      	ldr	r3, [r3, #24]
 8007002:	62bb      	str	r3, [r7, #40]	; 0x28
 8007004:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007006:	687b      	ldr	r3, [r7, #4]
 8007008:	681b      	ldr	r3, [r3, #0]
 800700a:	681a      	ldr	r2, [r3, #0]
 800700c:	687b      	ldr	r3, [r7, #4]
 800700e:	681b      	ldr	r3, [r3, #0]
 8007010:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007014:	601a      	str	r2, [r3, #0]
 8007016:	e115      	b.n	8007244 <I2C_Master_ADDR+0x2f6>
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800701c:	b29b      	uxth	r3, r3
 800701e:	2b01      	cmp	r3, #1
 8007020:	f040 808a 	bne.w	8007138 <I2C_Master_ADDR+0x1ea>
 8007024:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007026:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800702a:	d137      	bne.n	800709c <I2C_Master_ADDR+0x14e>
 800702c:	687b      	ldr	r3, [r7, #4]
 800702e:	681b      	ldr	r3, [r3, #0]
 8007030:	681a      	ldr	r2, [r3, #0]
 8007032:	687b      	ldr	r3, [r7, #4]
 8007034:	681b      	ldr	r3, [r3, #0]
 8007036:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800703a:	601a      	str	r2, [r3, #0]
 800703c:	687b      	ldr	r3, [r7, #4]
 800703e:	681b      	ldr	r3, [r3, #0]
 8007040:	685b      	ldr	r3, [r3, #4]
 8007042:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8007046:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800704a:	d113      	bne.n	8007074 <I2C_Master_ADDR+0x126>
 800704c:	687b      	ldr	r3, [r7, #4]
 800704e:	681b      	ldr	r3, [r3, #0]
 8007050:	681a      	ldr	r2, [r3, #0]
 8007052:	687b      	ldr	r3, [r7, #4]
 8007054:	681b      	ldr	r3, [r3, #0]
 8007056:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800705a:	601a      	str	r2, [r3, #0]
 800705c:	2300      	movs	r3, #0
 800705e:	627b      	str	r3, [r7, #36]	; 0x24
 8007060:	687b      	ldr	r3, [r7, #4]
 8007062:	681b      	ldr	r3, [r3, #0]
 8007064:	695b      	ldr	r3, [r3, #20]
 8007066:	627b      	str	r3, [r7, #36]	; 0x24
 8007068:	687b      	ldr	r3, [r7, #4]
 800706a:	681b      	ldr	r3, [r3, #0]
 800706c:	699b      	ldr	r3, [r3, #24]
 800706e:	627b      	str	r3, [r7, #36]	; 0x24
 8007070:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007072:	e0e7      	b.n	8007244 <I2C_Master_ADDR+0x2f6>
 8007074:	2300      	movs	r3, #0
 8007076:	623b      	str	r3, [r7, #32]
 8007078:	687b      	ldr	r3, [r7, #4]
 800707a:	681b      	ldr	r3, [r3, #0]
 800707c:	695b      	ldr	r3, [r3, #20]
 800707e:	623b      	str	r3, [r7, #32]
 8007080:	687b      	ldr	r3, [r7, #4]
 8007082:	681b      	ldr	r3, [r3, #0]
 8007084:	699b      	ldr	r3, [r3, #24]
 8007086:	623b      	str	r3, [r7, #32]
 8007088:	6a3b      	ldr	r3, [r7, #32]
 800708a:	687b      	ldr	r3, [r7, #4]
 800708c:	681b      	ldr	r3, [r3, #0]
 800708e:	681a      	ldr	r2, [r3, #0]
 8007090:	687b      	ldr	r3, [r7, #4]
 8007092:	681b      	ldr	r3, [r3, #0]
 8007094:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007098:	601a      	str	r2, [r3, #0]
 800709a:	e0d3      	b.n	8007244 <I2C_Master_ADDR+0x2f6>
 800709c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800709e:	2b08      	cmp	r3, #8
 80070a0:	d02e      	beq.n	8007100 <I2C_Master_ADDR+0x1b2>
 80070a2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070a4:	2b20      	cmp	r3, #32
 80070a6:	d02b      	beq.n	8007100 <I2C_Master_ADDR+0x1b2>
 80070a8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80070aa:	2b12      	cmp	r3, #18
 80070ac:	d102      	bne.n	80070b4 <I2C_Master_ADDR+0x166>
 80070ae:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070b0:	2b01      	cmp	r3, #1
 80070b2:	d125      	bne.n	8007100 <I2C_Master_ADDR+0x1b2>
 80070b4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070b6:	2b04      	cmp	r3, #4
 80070b8:	d00e      	beq.n	80070d8 <I2C_Master_ADDR+0x18a>
 80070ba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070bc:	2b02      	cmp	r3, #2
 80070be:	d00b      	beq.n	80070d8 <I2C_Master_ADDR+0x18a>
 80070c0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80070c2:	2b10      	cmp	r3, #16
 80070c4:	d008      	beq.n	80070d8 <I2C_Master_ADDR+0x18a>
 80070c6:	687b      	ldr	r3, [r7, #4]
 80070c8:	681b      	ldr	r3, [r3, #0]
 80070ca:	681a      	ldr	r2, [r3, #0]
 80070cc:	687b      	ldr	r3, [r7, #4]
 80070ce:	681b      	ldr	r3, [r3, #0]
 80070d0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80070d4:	601a      	str	r2, [r3, #0]
 80070d6:	e007      	b.n	80070e8 <I2C_Master_ADDR+0x19a>
 80070d8:	687b      	ldr	r3, [r7, #4]
 80070da:	681b      	ldr	r3, [r3, #0]
 80070dc:	681a      	ldr	r2, [r3, #0]
 80070de:	687b      	ldr	r3, [r7, #4]
 80070e0:	681b      	ldr	r3, [r3, #0]
 80070e2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80070e6:	601a      	str	r2, [r3, #0]
 80070e8:	2300      	movs	r3, #0
 80070ea:	61fb      	str	r3, [r7, #28]
 80070ec:	687b      	ldr	r3, [r7, #4]
 80070ee:	681b      	ldr	r3, [r3, #0]
 80070f0:	695b      	ldr	r3, [r3, #20]
 80070f2:	61fb      	str	r3, [r7, #28]
 80070f4:	687b      	ldr	r3, [r7, #4]
 80070f6:	681b      	ldr	r3, [r3, #0]
 80070f8:	699b      	ldr	r3, [r3, #24]
 80070fa:	61fb      	str	r3, [r7, #28]
 80070fc:	69fb      	ldr	r3, [r7, #28]
 80070fe:	e0a1      	b.n	8007244 <I2C_Master_ADDR+0x2f6>
 8007100:	687b      	ldr	r3, [r7, #4]
 8007102:	681b      	ldr	r3, [r3, #0]
 8007104:	681a      	ldr	r2, [r3, #0]
 8007106:	687b      	ldr	r3, [r7, #4]
 8007108:	681b      	ldr	r3, [r3, #0]
 800710a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800710e:	601a      	str	r2, [r3, #0]
 8007110:	2300      	movs	r3, #0
 8007112:	61bb      	str	r3, [r7, #24]
 8007114:	687b      	ldr	r3, [r7, #4]
 8007116:	681b      	ldr	r3, [r3, #0]
 8007118:	695b      	ldr	r3, [r3, #20]
 800711a:	61bb      	str	r3, [r7, #24]
 800711c:	687b      	ldr	r3, [r7, #4]
 800711e:	681b      	ldr	r3, [r3, #0]
 8007120:	699b      	ldr	r3, [r3, #24]
 8007122:	61bb      	str	r3, [r7, #24]
 8007124:	69bb      	ldr	r3, [r7, #24]
 8007126:	687b      	ldr	r3, [r7, #4]
 8007128:	681b      	ldr	r3, [r3, #0]
 800712a:	681a      	ldr	r2, [r3, #0]
 800712c:	687b      	ldr	r3, [r7, #4]
 800712e:	681b      	ldr	r3, [r3, #0]
 8007130:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007134:	601a      	str	r2, [r3, #0]
 8007136:	e085      	b.n	8007244 <I2C_Master_ADDR+0x2f6>
 8007138:	687b      	ldr	r3, [r7, #4]
 800713a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800713c:	b29b      	uxth	r3, r3
 800713e:	2b02      	cmp	r3, #2
 8007140:	d14d      	bne.n	80071de <I2C_Master_ADDR+0x290>
 8007142:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007144:	2b04      	cmp	r3, #4
 8007146:	d016      	beq.n	8007176 <I2C_Master_ADDR+0x228>
 8007148:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800714a:	2b02      	cmp	r3, #2
 800714c:	d013      	beq.n	8007176 <I2C_Master_ADDR+0x228>
 800714e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007150:	2b10      	cmp	r3, #16
 8007152:	d010      	beq.n	8007176 <I2C_Master_ADDR+0x228>
 8007154:	687b      	ldr	r3, [r7, #4]
 8007156:	681b      	ldr	r3, [r3, #0]
 8007158:	681a      	ldr	r2, [r3, #0]
 800715a:	687b      	ldr	r3, [r7, #4]
 800715c:	681b      	ldr	r3, [r3, #0]
 800715e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007162:	601a      	str	r2, [r3, #0]
 8007164:	687b      	ldr	r3, [r7, #4]
 8007166:	681b      	ldr	r3, [r3, #0]
 8007168:	681a      	ldr	r2, [r3, #0]
 800716a:	687b      	ldr	r3, [r7, #4]
 800716c:	681b      	ldr	r3, [r3, #0]
 800716e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007172:	601a      	str	r2, [r3, #0]
 8007174:	e007      	b.n	8007186 <I2C_Master_ADDR+0x238>
 8007176:	687b      	ldr	r3, [r7, #4]
 8007178:	681b      	ldr	r3, [r3, #0]
 800717a:	681a      	ldr	r2, [r3, #0]
 800717c:	687b      	ldr	r3, [r7, #4]
 800717e:	681b      	ldr	r3, [r3, #0]
 8007180:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007184:	601a      	str	r2, [r3, #0]
 8007186:	687b      	ldr	r3, [r7, #4]
 8007188:	681b      	ldr	r3, [r3, #0]
 800718a:	685b      	ldr	r3, [r3, #4]
 800718c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8007190:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007194:	d117      	bne.n	80071c6 <I2C_Master_ADDR+0x278>
 8007196:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007198:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 800719c:	d00b      	beq.n	80071b6 <I2C_Master_ADDR+0x268>
 800719e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80071a0:	2b01      	cmp	r3, #1
 80071a2:	d008      	beq.n	80071b6 <I2C_Master_ADDR+0x268>
 80071a4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80071a6:	2b08      	cmp	r3, #8
 80071a8:	d005      	beq.n	80071b6 <I2C_Master_ADDR+0x268>
 80071aa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80071ac:	2b10      	cmp	r3, #16
 80071ae:	d002      	beq.n	80071b6 <I2C_Master_ADDR+0x268>
 80071b0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80071b2:	2b20      	cmp	r3, #32
 80071b4:	d107      	bne.n	80071c6 <I2C_Master_ADDR+0x278>
 80071b6:	687b      	ldr	r3, [r7, #4]
 80071b8:	681b      	ldr	r3, [r3, #0]
 80071ba:	685a      	ldr	r2, [r3, #4]
 80071bc:	687b      	ldr	r3, [r7, #4]
 80071be:	681b      	ldr	r3, [r3, #0]
 80071c0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80071c4:	605a      	str	r2, [r3, #4]
 80071c6:	2300      	movs	r3, #0
 80071c8:	617b      	str	r3, [r7, #20]
 80071ca:	687b      	ldr	r3, [r7, #4]
 80071cc:	681b      	ldr	r3, [r3, #0]
 80071ce:	695b      	ldr	r3, [r3, #20]
 80071d0:	617b      	str	r3, [r7, #20]
 80071d2:	687b      	ldr	r3, [r7, #4]
 80071d4:	681b      	ldr	r3, [r3, #0]
 80071d6:	699b      	ldr	r3, [r3, #24]
 80071d8:	617b      	str	r3, [r7, #20]
 80071da:	697b      	ldr	r3, [r7, #20]
 80071dc:	e032      	b.n	8007244 <I2C_Master_ADDR+0x2f6>
 80071de:	687b      	ldr	r3, [r7, #4]
 80071e0:	681b      	ldr	r3, [r3, #0]
 80071e2:	681a      	ldr	r2, [r3, #0]
 80071e4:	687b      	ldr	r3, [r7, #4]
 80071e6:	681b      	ldr	r3, [r3, #0]
 80071e8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80071ec:	601a      	str	r2, [r3, #0]
 80071ee:	687b      	ldr	r3, [r7, #4]
 80071f0:	681b      	ldr	r3, [r3, #0]
 80071f2:	685b      	ldr	r3, [r3, #4]
 80071f4:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80071f8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80071fc:	d117      	bne.n	800722e <I2C_Master_ADDR+0x2e0>
 80071fe:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007200:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8007204:	d00b      	beq.n	800721e <I2C_Master_ADDR+0x2d0>
 8007206:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007208:	2b01      	cmp	r3, #1
 800720a:	d008      	beq.n	800721e <I2C_Master_ADDR+0x2d0>
 800720c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800720e:	2b08      	cmp	r3, #8
 8007210:	d005      	beq.n	800721e <I2C_Master_ADDR+0x2d0>
 8007212:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007214:	2b10      	cmp	r3, #16
 8007216:	d002      	beq.n	800721e <I2C_Master_ADDR+0x2d0>
 8007218:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800721a:	2b20      	cmp	r3, #32
 800721c:	d107      	bne.n	800722e <I2C_Master_ADDR+0x2e0>
 800721e:	687b      	ldr	r3, [r7, #4]
 8007220:	681b      	ldr	r3, [r3, #0]
 8007222:	685a      	ldr	r2, [r3, #4]
 8007224:	687b      	ldr	r3, [r7, #4]
 8007226:	681b      	ldr	r3, [r3, #0]
 8007228:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800722c:	605a      	str	r2, [r3, #4]
 800722e:	2300      	movs	r3, #0
 8007230:	613b      	str	r3, [r7, #16]
 8007232:	687b      	ldr	r3, [r7, #4]
 8007234:	681b      	ldr	r3, [r3, #0]
 8007236:	695b      	ldr	r3, [r3, #20]
 8007238:	613b      	str	r3, [r7, #16]
 800723a:	687b      	ldr	r3, [r7, #4]
 800723c:	681b      	ldr	r3, [r3, #0]
 800723e:	699b      	ldr	r3, [r3, #24]
 8007240:	613b      	str	r3, [r7, #16]
 8007242:	693b      	ldr	r3, [r7, #16]
 8007244:	687b      	ldr	r3, [r7, #4]
 8007246:	2200      	movs	r2, #0
 8007248:	651a      	str	r2, [r3, #80]	; 0x50
 800724a:	e00b      	b.n	8007264 <I2C_Master_ADDR+0x316>
 800724c:	2300      	movs	r3, #0
 800724e:	60fb      	str	r3, [r7, #12]
 8007250:	687b      	ldr	r3, [r7, #4]
 8007252:	681b      	ldr	r3, [r3, #0]
 8007254:	695b      	ldr	r3, [r3, #20]
 8007256:	60fb      	str	r3, [r7, #12]
 8007258:	687b      	ldr	r3, [r7, #4]
 800725a:	681b      	ldr	r3, [r3, #0]
 800725c:	699b      	ldr	r3, [r3, #24]
 800725e:	60fb      	str	r3, [r7, #12]
 8007260:	68fb      	ldr	r3, [r7, #12]
 8007262:	e7ff      	b.n	8007264 <I2C_Master_ADDR+0x316>
 8007264:	bf00      	nop
 8007266:	3744      	adds	r7, #68	; 0x44
 8007268:	46bd      	mov	sp, r7
 800726a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800726e:	4770      	bx	lr

08007270 <I2C_SlaveTransmit_TXE>:
 8007270:	b580      	push	{r7, lr}
 8007272:	b084      	sub	sp, #16
 8007274:	af00      	add	r7, sp, #0
 8007276:	6078      	str	r0, [r7, #4]
 8007278:	687b      	ldr	r3, [r7, #4]
 800727a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800727e:	73fb      	strb	r3, [r7, #15]
 8007280:	687b      	ldr	r3, [r7, #4]
 8007282:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007284:	b29b      	uxth	r3, r3
 8007286:	2b00      	cmp	r3, #0
 8007288:	d02b      	beq.n	80072e2 <I2C_SlaveTransmit_TXE+0x72>
 800728a:	687b      	ldr	r3, [r7, #4]
 800728c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800728e:	781a      	ldrb	r2, [r3, #0]
 8007290:	687b      	ldr	r3, [r7, #4]
 8007292:	681b      	ldr	r3, [r3, #0]
 8007294:	611a      	str	r2, [r3, #16]
 8007296:	687b      	ldr	r3, [r7, #4]
 8007298:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800729a:	1c5a      	adds	r2, r3, #1
 800729c:	687b      	ldr	r3, [r7, #4]
 800729e:	625a      	str	r2, [r3, #36]	; 0x24
 80072a0:	687b      	ldr	r3, [r7, #4]
 80072a2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80072a4:	b29b      	uxth	r3, r3
 80072a6:	3b01      	subs	r3, #1
 80072a8:	b29a      	uxth	r2, r3
 80072aa:	687b      	ldr	r3, [r7, #4]
 80072ac:	855a      	strh	r2, [r3, #42]	; 0x2a
 80072ae:	687b      	ldr	r3, [r7, #4]
 80072b0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80072b2:	b29b      	uxth	r3, r3
 80072b4:	2b00      	cmp	r3, #0
 80072b6:	d114      	bne.n	80072e2 <I2C_SlaveTransmit_TXE+0x72>
 80072b8:	7bfb      	ldrb	r3, [r7, #15]
 80072ba:	2b29      	cmp	r3, #41	; 0x29
 80072bc:	d111      	bne.n	80072e2 <I2C_SlaveTransmit_TXE+0x72>
 80072be:	687b      	ldr	r3, [r7, #4]
 80072c0:	681b      	ldr	r3, [r3, #0]
 80072c2:	685a      	ldr	r2, [r3, #4]
 80072c4:	687b      	ldr	r3, [r7, #4]
 80072c6:	681b      	ldr	r3, [r3, #0]
 80072c8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80072cc:	605a      	str	r2, [r3, #4]
 80072ce:	687b      	ldr	r3, [r7, #4]
 80072d0:	2221      	movs	r2, #33	; 0x21
 80072d2:	631a      	str	r2, [r3, #48]	; 0x30
 80072d4:	687b      	ldr	r3, [r7, #4]
 80072d6:	2228      	movs	r2, #40	; 0x28
 80072d8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80072dc:	6878      	ldr	r0, [r7, #4]
 80072de:	f7ff f9e7 	bl	80066b0 <HAL_I2C_SlaveTxCpltCallback>
 80072e2:	bf00      	nop
 80072e4:	3710      	adds	r7, #16
 80072e6:	46bd      	mov	sp, r7
 80072e8:	bd80      	pop	{r7, pc}

080072ea <I2C_SlaveTransmit_BTF>:
 80072ea:	b480      	push	{r7}
 80072ec:	b083      	sub	sp, #12
 80072ee:	af00      	add	r7, sp, #0
 80072f0:	6078      	str	r0, [r7, #4]
 80072f2:	687b      	ldr	r3, [r7, #4]
 80072f4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80072f6:	b29b      	uxth	r3, r3
 80072f8:	2b00      	cmp	r3, #0
 80072fa:	d011      	beq.n	8007320 <I2C_SlaveTransmit_BTF+0x36>
 80072fc:	687b      	ldr	r3, [r7, #4]
 80072fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007300:	781a      	ldrb	r2, [r3, #0]
 8007302:	687b      	ldr	r3, [r7, #4]
 8007304:	681b      	ldr	r3, [r3, #0]
 8007306:	611a      	str	r2, [r3, #16]
 8007308:	687b      	ldr	r3, [r7, #4]
 800730a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800730c:	1c5a      	adds	r2, r3, #1
 800730e:	687b      	ldr	r3, [r7, #4]
 8007310:	625a      	str	r2, [r3, #36]	; 0x24
 8007312:	687b      	ldr	r3, [r7, #4]
 8007314:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007316:	b29b      	uxth	r3, r3
 8007318:	3b01      	subs	r3, #1
 800731a:	b29a      	uxth	r2, r3
 800731c:	687b      	ldr	r3, [r7, #4]
 800731e:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007320:	bf00      	nop
 8007322:	370c      	adds	r7, #12
 8007324:	46bd      	mov	sp, r7
 8007326:	f85d 7b04 	ldr.w	r7, [sp], #4
 800732a:	4770      	bx	lr

0800732c <I2C_SlaveReceive_RXNE>:
 800732c:	b580      	push	{r7, lr}
 800732e:	b084      	sub	sp, #16
 8007330:	af00      	add	r7, sp, #0
 8007332:	6078      	str	r0, [r7, #4]
 8007334:	687b      	ldr	r3, [r7, #4]
 8007336:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800733a:	73fb      	strb	r3, [r7, #15]
 800733c:	687b      	ldr	r3, [r7, #4]
 800733e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007340:	b29b      	uxth	r3, r3
 8007342:	2b00      	cmp	r3, #0
 8007344:	d02c      	beq.n	80073a0 <I2C_SlaveReceive_RXNE+0x74>
 8007346:	687b      	ldr	r3, [r7, #4]
 8007348:	681b      	ldr	r3, [r3, #0]
 800734a:	691a      	ldr	r2, [r3, #16]
 800734c:	687b      	ldr	r3, [r7, #4]
 800734e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007350:	b2d2      	uxtb	r2, r2
 8007352:	701a      	strb	r2, [r3, #0]
 8007354:	687b      	ldr	r3, [r7, #4]
 8007356:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007358:	1c5a      	adds	r2, r3, #1
 800735a:	687b      	ldr	r3, [r7, #4]
 800735c:	625a      	str	r2, [r3, #36]	; 0x24
 800735e:	687b      	ldr	r3, [r7, #4]
 8007360:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007362:	b29b      	uxth	r3, r3
 8007364:	3b01      	subs	r3, #1
 8007366:	b29a      	uxth	r2, r3
 8007368:	687b      	ldr	r3, [r7, #4]
 800736a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800736c:	687b      	ldr	r3, [r7, #4]
 800736e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007370:	b29b      	uxth	r3, r3
 8007372:	2b00      	cmp	r3, #0
 8007374:	d114      	bne.n	80073a0 <I2C_SlaveReceive_RXNE+0x74>
 8007376:	7bfb      	ldrb	r3, [r7, #15]
 8007378:	2b2a      	cmp	r3, #42	; 0x2a
 800737a:	d111      	bne.n	80073a0 <I2C_SlaveReceive_RXNE+0x74>
 800737c:	687b      	ldr	r3, [r7, #4]
 800737e:	681b      	ldr	r3, [r3, #0]
 8007380:	685a      	ldr	r2, [r3, #4]
 8007382:	687b      	ldr	r3, [r7, #4]
 8007384:	681b      	ldr	r3, [r3, #0]
 8007386:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800738a:	605a      	str	r2, [r3, #4]
 800738c:	687b      	ldr	r3, [r7, #4]
 800738e:	2222      	movs	r2, #34	; 0x22
 8007390:	631a      	str	r2, [r3, #48]	; 0x30
 8007392:	687b      	ldr	r3, [r7, #4]
 8007394:	2228      	movs	r2, #40	; 0x28
 8007396:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800739a:	6878      	ldr	r0, [r7, #4]
 800739c:	f7ff f992 	bl	80066c4 <HAL_I2C_SlaveRxCpltCallback>
 80073a0:	bf00      	nop
 80073a2:	3710      	adds	r7, #16
 80073a4:	46bd      	mov	sp, r7
 80073a6:	bd80      	pop	{r7, pc}

080073a8 <I2C_SlaveReceive_BTF>:
 80073a8:	b480      	push	{r7}
 80073aa:	b083      	sub	sp, #12
 80073ac:	af00      	add	r7, sp, #0
 80073ae:	6078      	str	r0, [r7, #4]
 80073b0:	687b      	ldr	r3, [r7, #4]
 80073b2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80073b4:	b29b      	uxth	r3, r3
 80073b6:	2b00      	cmp	r3, #0
 80073b8:	d012      	beq.n	80073e0 <I2C_SlaveReceive_BTF+0x38>
 80073ba:	687b      	ldr	r3, [r7, #4]
 80073bc:	681b      	ldr	r3, [r3, #0]
 80073be:	691a      	ldr	r2, [r3, #16]
 80073c0:	687b      	ldr	r3, [r7, #4]
 80073c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80073c4:	b2d2      	uxtb	r2, r2
 80073c6:	701a      	strb	r2, [r3, #0]
 80073c8:	687b      	ldr	r3, [r7, #4]
 80073ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80073cc:	1c5a      	adds	r2, r3, #1
 80073ce:	687b      	ldr	r3, [r7, #4]
 80073d0:	625a      	str	r2, [r3, #36]	; 0x24
 80073d2:	687b      	ldr	r3, [r7, #4]
 80073d4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80073d6:	b29b      	uxth	r3, r3
 80073d8:	3b01      	subs	r3, #1
 80073da:	b29a      	uxth	r2, r3
 80073dc:	687b      	ldr	r3, [r7, #4]
 80073de:	855a      	strh	r2, [r3, #42]	; 0x2a
 80073e0:	bf00      	nop
 80073e2:	370c      	adds	r7, #12
 80073e4:	46bd      	mov	sp, r7
 80073e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073ea:	4770      	bx	lr

080073ec <I2C_Slave_ADDR>:
 80073ec:	b580      	push	{r7, lr}
 80073ee:	b084      	sub	sp, #16
 80073f0:	af00      	add	r7, sp, #0
 80073f2:	6078      	str	r0, [r7, #4]
 80073f4:	6039      	str	r1, [r7, #0]
 80073f6:	2300      	movs	r3, #0
 80073f8:	73fb      	strb	r3, [r7, #15]
 80073fa:	687b      	ldr	r3, [r7, #4]
 80073fc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007400:	b2db      	uxtb	r3, r3
 8007402:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8007406:	2b28      	cmp	r3, #40	; 0x28
 8007408:	d127      	bne.n	800745a <I2C_Slave_ADDR+0x6e>
 800740a:	687b      	ldr	r3, [r7, #4]
 800740c:	681b      	ldr	r3, [r3, #0]
 800740e:	685a      	ldr	r2, [r3, #4]
 8007410:	687b      	ldr	r3, [r7, #4]
 8007412:	681b      	ldr	r3, [r3, #0]
 8007414:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007418:	605a      	str	r2, [r3, #4]
 800741a:	683b      	ldr	r3, [r7, #0]
 800741c:	089b      	lsrs	r3, r3, #2
 800741e:	f003 0301 	and.w	r3, r3, #1
 8007422:	2b00      	cmp	r3, #0
 8007424:	d101      	bne.n	800742a <I2C_Slave_ADDR+0x3e>
 8007426:	2301      	movs	r3, #1
 8007428:	73fb      	strb	r3, [r7, #15]
 800742a:	683b      	ldr	r3, [r7, #0]
 800742c:	09db      	lsrs	r3, r3, #7
 800742e:	f003 0301 	and.w	r3, r3, #1
 8007432:	2b00      	cmp	r3, #0
 8007434:	d103      	bne.n	800743e <I2C_Slave_ADDR+0x52>
 8007436:	687b      	ldr	r3, [r7, #4]
 8007438:	68db      	ldr	r3, [r3, #12]
 800743a:	81bb      	strh	r3, [r7, #12]
 800743c:	e002      	b.n	8007444 <I2C_Slave_ADDR+0x58>
 800743e:	687b      	ldr	r3, [r7, #4]
 8007440:	699b      	ldr	r3, [r3, #24]
 8007442:	81bb      	strh	r3, [r7, #12]
 8007444:	687b      	ldr	r3, [r7, #4]
 8007446:	2200      	movs	r2, #0
 8007448:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800744c:	89ba      	ldrh	r2, [r7, #12]
 800744e:	7bfb      	ldrb	r3, [r7, #15]
 8007450:	4619      	mov	r1, r3
 8007452:	6878      	ldr	r0, [r7, #4]
 8007454:	f7ff f940 	bl	80066d8 <HAL_I2C_AddrCallback>
 8007458:	e00e      	b.n	8007478 <I2C_Slave_ADDR+0x8c>
 800745a:	2300      	movs	r3, #0
 800745c:	60bb      	str	r3, [r7, #8]
 800745e:	687b      	ldr	r3, [r7, #4]
 8007460:	681b      	ldr	r3, [r3, #0]
 8007462:	695b      	ldr	r3, [r3, #20]
 8007464:	60bb      	str	r3, [r7, #8]
 8007466:	687b      	ldr	r3, [r7, #4]
 8007468:	681b      	ldr	r3, [r3, #0]
 800746a:	699b      	ldr	r3, [r3, #24]
 800746c:	60bb      	str	r3, [r7, #8]
 800746e:	68bb      	ldr	r3, [r7, #8]
 8007470:	687b      	ldr	r3, [r7, #4]
 8007472:	2200      	movs	r2, #0
 8007474:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007478:	bf00      	nop
 800747a:	3710      	adds	r7, #16
 800747c:	46bd      	mov	sp, r7
 800747e:	bd80      	pop	{r7, pc}

08007480 <I2C_Slave_STOPF>:
 8007480:	b580      	push	{r7, lr}
 8007482:	b084      	sub	sp, #16
 8007484:	af00      	add	r7, sp, #0
 8007486:	6078      	str	r0, [r7, #4]
 8007488:	687b      	ldr	r3, [r7, #4]
 800748a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800748e:	73fb      	strb	r3, [r7, #15]
 8007490:	687b      	ldr	r3, [r7, #4]
 8007492:	681b      	ldr	r3, [r3, #0]
 8007494:	685a      	ldr	r2, [r3, #4]
 8007496:	687b      	ldr	r3, [r7, #4]
 8007498:	681b      	ldr	r3, [r3, #0]
 800749a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800749e:	605a      	str	r2, [r3, #4]
 80074a0:	2300      	movs	r3, #0
 80074a2:	60bb      	str	r3, [r7, #8]
 80074a4:	687b      	ldr	r3, [r7, #4]
 80074a6:	681b      	ldr	r3, [r3, #0]
 80074a8:	695b      	ldr	r3, [r3, #20]
 80074aa:	60bb      	str	r3, [r7, #8]
 80074ac:	687b      	ldr	r3, [r7, #4]
 80074ae:	681b      	ldr	r3, [r3, #0]
 80074b0:	681a      	ldr	r2, [r3, #0]
 80074b2:	687b      	ldr	r3, [r7, #4]
 80074b4:	681b      	ldr	r3, [r3, #0]
 80074b6:	f042 0201 	orr.w	r2, r2, #1
 80074ba:	601a      	str	r2, [r3, #0]
 80074bc:	68bb      	ldr	r3, [r7, #8]
 80074be:	687b      	ldr	r3, [r7, #4]
 80074c0:	681b      	ldr	r3, [r3, #0]
 80074c2:	681a      	ldr	r2, [r3, #0]
 80074c4:	687b      	ldr	r3, [r7, #4]
 80074c6:	681b      	ldr	r3, [r3, #0]
 80074c8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80074cc:	601a      	str	r2, [r3, #0]
 80074ce:	687b      	ldr	r3, [r7, #4]
 80074d0:	681b      	ldr	r3, [r3, #0]
 80074d2:	685b      	ldr	r3, [r3, #4]
 80074d4:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80074d8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80074dc:	d172      	bne.n	80075c4 <I2C_Slave_STOPF+0x144>
 80074de:	7bfb      	ldrb	r3, [r7, #15]
 80074e0:	2b22      	cmp	r3, #34	; 0x22
 80074e2:	d002      	beq.n	80074ea <I2C_Slave_STOPF+0x6a>
 80074e4:	7bfb      	ldrb	r3, [r7, #15]
 80074e6:	2b2a      	cmp	r3, #42	; 0x2a
 80074e8:	d135      	bne.n	8007556 <I2C_Slave_STOPF+0xd6>
 80074ea:	687b      	ldr	r3, [r7, #4]
 80074ec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80074ee:	681b      	ldr	r3, [r3, #0]
 80074f0:	685b      	ldr	r3, [r3, #4]
 80074f2:	b29a      	uxth	r2, r3
 80074f4:	687b      	ldr	r3, [r7, #4]
 80074f6:	855a      	strh	r2, [r3, #42]	; 0x2a
 80074f8:	687b      	ldr	r3, [r7, #4]
 80074fa:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80074fc:	b29b      	uxth	r3, r3
 80074fe:	2b00      	cmp	r3, #0
 8007500:	d005      	beq.n	800750e <I2C_Slave_STOPF+0x8e>
 8007502:	687b      	ldr	r3, [r7, #4]
 8007504:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007506:	f043 0204 	orr.w	r2, r3, #4
 800750a:	687b      	ldr	r3, [r7, #4]
 800750c:	641a      	str	r2, [r3, #64]	; 0x40
 800750e:	687b      	ldr	r3, [r7, #4]
 8007510:	681b      	ldr	r3, [r3, #0]
 8007512:	685a      	ldr	r2, [r3, #4]
 8007514:	687b      	ldr	r3, [r7, #4]
 8007516:	681b      	ldr	r3, [r3, #0]
 8007518:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800751c:	605a      	str	r2, [r3, #4]
 800751e:	687b      	ldr	r3, [r7, #4]
 8007520:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007522:	4618      	mov	r0, r3
 8007524:	f7fd ff74 	bl	8005410 <HAL_DMA_GetState>
 8007528:	4603      	mov	r3, r0
 800752a:	2b01      	cmp	r3, #1
 800752c:	d049      	beq.n	80075c2 <I2C_Slave_STOPF+0x142>
 800752e:	687b      	ldr	r3, [r7, #4]
 8007530:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007532:	4a69      	ldr	r2, [pc, #420]	; (80076d8 <I2C_Slave_STOPF+0x258>)
 8007534:	651a      	str	r2, [r3, #80]	; 0x50
 8007536:	687b      	ldr	r3, [r7, #4]
 8007538:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800753a:	4618      	mov	r0, r3
 800753c:	f7fd fdbc 	bl	80050b8 <HAL_DMA_Abort_IT>
 8007540:	4603      	mov	r3, r0
 8007542:	2b00      	cmp	r3, #0
 8007544:	d03d      	beq.n	80075c2 <I2C_Slave_STOPF+0x142>
 8007546:	687b      	ldr	r3, [r7, #4]
 8007548:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800754a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800754c:	687a      	ldr	r2, [r7, #4]
 800754e:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8007550:	4610      	mov	r0, r2
 8007552:	4798      	blx	r3
 8007554:	e035      	b.n	80075c2 <I2C_Slave_STOPF+0x142>
 8007556:	687b      	ldr	r3, [r7, #4]
 8007558:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800755a:	681b      	ldr	r3, [r3, #0]
 800755c:	685b      	ldr	r3, [r3, #4]
 800755e:	b29a      	uxth	r2, r3
 8007560:	687b      	ldr	r3, [r7, #4]
 8007562:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007564:	687b      	ldr	r3, [r7, #4]
 8007566:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8007568:	b29b      	uxth	r3, r3
 800756a:	2b00      	cmp	r3, #0
 800756c:	d005      	beq.n	800757a <I2C_Slave_STOPF+0xfa>
 800756e:	687b      	ldr	r3, [r7, #4]
 8007570:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007572:	f043 0204 	orr.w	r2, r3, #4
 8007576:	687b      	ldr	r3, [r7, #4]
 8007578:	641a      	str	r2, [r3, #64]	; 0x40
 800757a:	687b      	ldr	r3, [r7, #4]
 800757c:	681b      	ldr	r3, [r3, #0]
 800757e:	685a      	ldr	r2, [r3, #4]
 8007580:	687b      	ldr	r3, [r7, #4]
 8007582:	681b      	ldr	r3, [r3, #0]
 8007584:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8007588:	605a      	str	r2, [r3, #4]
 800758a:	687b      	ldr	r3, [r7, #4]
 800758c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800758e:	4618      	mov	r0, r3
 8007590:	f7fd ff3e 	bl	8005410 <HAL_DMA_GetState>
 8007594:	4603      	mov	r3, r0
 8007596:	2b01      	cmp	r3, #1
 8007598:	d014      	beq.n	80075c4 <I2C_Slave_STOPF+0x144>
 800759a:	687b      	ldr	r3, [r7, #4]
 800759c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800759e:	4a4e      	ldr	r2, [pc, #312]	; (80076d8 <I2C_Slave_STOPF+0x258>)
 80075a0:	651a      	str	r2, [r3, #80]	; 0x50
 80075a2:	687b      	ldr	r3, [r7, #4]
 80075a4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80075a6:	4618      	mov	r0, r3
 80075a8:	f7fd fd86 	bl	80050b8 <HAL_DMA_Abort_IT>
 80075ac:	4603      	mov	r3, r0
 80075ae:	2b00      	cmp	r3, #0
 80075b0:	d008      	beq.n	80075c4 <I2C_Slave_STOPF+0x144>
 80075b2:	687b      	ldr	r3, [r7, #4]
 80075b4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80075b6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80075b8:	687a      	ldr	r2, [r7, #4]
 80075ba:	6b52      	ldr	r2, [r2, #52]	; 0x34
 80075bc:	4610      	mov	r0, r2
 80075be:	4798      	blx	r3
 80075c0:	e000      	b.n	80075c4 <I2C_Slave_STOPF+0x144>
 80075c2:	bf00      	nop
 80075c4:	687b      	ldr	r3, [r7, #4]
 80075c6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80075c8:	b29b      	uxth	r3, r3
 80075ca:	2b00      	cmp	r3, #0
 80075cc:	d03e      	beq.n	800764c <I2C_Slave_STOPF+0x1cc>
 80075ce:	687b      	ldr	r3, [r7, #4]
 80075d0:	681b      	ldr	r3, [r3, #0]
 80075d2:	695b      	ldr	r3, [r3, #20]
 80075d4:	f003 0304 	and.w	r3, r3, #4
 80075d8:	2b04      	cmp	r3, #4
 80075da:	d112      	bne.n	8007602 <I2C_Slave_STOPF+0x182>
 80075dc:	687b      	ldr	r3, [r7, #4]
 80075de:	681b      	ldr	r3, [r3, #0]
 80075e0:	691a      	ldr	r2, [r3, #16]
 80075e2:	687b      	ldr	r3, [r7, #4]
 80075e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80075e6:	b2d2      	uxtb	r2, r2
 80075e8:	701a      	strb	r2, [r3, #0]
 80075ea:	687b      	ldr	r3, [r7, #4]
 80075ec:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80075ee:	1c5a      	adds	r2, r3, #1
 80075f0:	687b      	ldr	r3, [r7, #4]
 80075f2:	625a      	str	r2, [r3, #36]	; 0x24
 80075f4:	687b      	ldr	r3, [r7, #4]
 80075f6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80075f8:	b29b      	uxth	r3, r3
 80075fa:	3b01      	subs	r3, #1
 80075fc:	b29a      	uxth	r2, r3
 80075fe:	687b      	ldr	r3, [r7, #4]
 8007600:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007602:	687b      	ldr	r3, [r7, #4]
 8007604:	681b      	ldr	r3, [r3, #0]
 8007606:	695b      	ldr	r3, [r3, #20]
 8007608:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800760c:	2b40      	cmp	r3, #64	; 0x40
 800760e:	d112      	bne.n	8007636 <I2C_Slave_STOPF+0x1b6>
 8007610:	687b      	ldr	r3, [r7, #4]
 8007612:	681b      	ldr	r3, [r3, #0]
 8007614:	691a      	ldr	r2, [r3, #16]
 8007616:	687b      	ldr	r3, [r7, #4]
 8007618:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800761a:	b2d2      	uxtb	r2, r2
 800761c:	701a      	strb	r2, [r3, #0]
 800761e:	687b      	ldr	r3, [r7, #4]
 8007620:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007622:	1c5a      	adds	r2, r3, #1
 8007624:	687b      	ldr	r3, [r7, #4]
 8007626:	625a      	str	r2, [r3, #36]	; 0x24
 8007628:	687b      	ldr	r3, [r7, #4]
 800762a:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800762c:	b29b      	uxth	r3, r3
 800762e:	3b01      	subs	r3, #1
 8007630:	b29a      	uxth	r2, r3
 8007632:	687b      	ldr	r3, [r7, #4]
 8007634:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007636:	687b      	ldr	r3, [r7, #4]
 8007638:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800763a:	b29b      	uxth	r3, r3
 800763c:	2b00      	cmp	r3, #0
 800763e:	d005      	beq.n	800764c <I2C_Slave_STOPF+0x1cc>
 8007640:	687b      	ldr	r3, [r7, #4]
 8007642:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007644:	f043 0204 	orr.w	r2, r3, #4
 8007648:	687b      	ldr	r3, [r7, #4]
 800764a:	641a      	str	r2, [r3, #64]	; 0x40
 800764c:	687b      	ldr	r3, [r7, #4]
 800764e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007650:	2b00      	cmp	r3, #0
 8007652:	d003      	beq.n	800765c <I2C_Slave_STOPF+0x1dc>
 8007654:	6878      	ldr	r0, [r7, #4]
 8007656:	f000 f8b3 	bl	80077c0 <I2C_ITError>
 800765a:	e039      	b.n	80076d0 <I2C_Slave_STOPF+0x250>
 800765c:	7bfb      	ldrb	r3, [r7, #15]
 800765e:	2b2a      	cmp	r3, #42	; 0x2a
 8007660:	d109      	bne.n	8007676 <I2C_Slave_STOPF+0x1f6>
 8007662:	687b      	ldr	r3, [r7, #4]
 8007664:	2200      	movs	r2, #0
 8007666:	631a      	str	r2, [r3, #48]	; 0x30
 8007668:	687b      	ldr	r3, [r7, #4]
 800766a:	2228      	movs	r2, #40	; 0x28
 800766c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007670:	6878      	ldr	r0, [r7, #4]
 8007672:	f7ff f827 	bl	80066c4 <HAL_I2C_SlaveRxCpltCallback>
 8007676:	687b      	ldr	r3, [r7, #4]
 8007678:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800767c:	b2db      	uxtb	r3, r3
 800767e:	2b28      	cmp	r3, #40	; 0x28
 8007680:	d111      	bne.n	80076a6 <I2C_Slave_STOPF+0x226>
 8007682:	687b      	ldr	r3, [r7, #4]
 8007684:	4a15      	ldr	r2, [pc, #84]	; (80076dc <I2C_Slave_STOPF+0x25c>)
 8007686:	62da      	str	r2, [r3, #44]	; 0x2c
 8007688:	687b      	ldr	r3, [r7, #4]
 800768a:	2200      	movs	r2, #0
 800768c:	631a      	str	r2, [r3, #48]	; 0x30
 800768e:	687b      	ldr	r3, [r7, #4]
 8007690:	2220      	movs	r2, #32
 8007692:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007696:	687b      	ldr	r3, [r7, #4]
 8007698:	2200      	movs	r2, #0
 800769a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800769e:	6878      	ldr	r0, [r7, #4]
 80076a0:	f7ff f828 	bl	80066f4 <HAL_I2C_ListenCpltCallback>
 80076a4:	e014      	b.n	80076d0 <I2C_Slave_STOPF+0x250>
 80076a6:	687b      	ldr	r3, [r7, #4]
 80076a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80076aa:	2b22      	cmp	r3, #34	; 0x22
 80076ac:	d002      	beq.n	80076b4 <I2C_Slave_STOPF+0x234>
 80076ae:	7bfb      	ldrb	r3, [r7, #15]
 80076b0:	2b22      	cmp	r3, #34	; 0x22
 80076b2:	d10d      	bne.n	80076d0 <I2C_Slave_STOPF+0x250>
 80076b4:	687b      	ldr	r3, [r7, #4]
 80076b6:	2200      	movs	r2, #0
 80076b8:	631a      	str	r2, [r3, #48]	; 0x30
 80076ba:	687b      	ldr	r3, [r7, #4]
 80076bc:	2220      	movs	r2, #32
 80076be:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80076c2:	687b      	ldr	r3, [r7, #4]
 80076c4:	2200      	movs	r2, #0
 80076c6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80076ca:	6878      	ldr	r0, [r7, #4]
 80076cc:	f7fe fffa 	bl	80066c4 <HAL_I2C_SlaveRxCpltCallback>
 80076d0:	bf00      	nop
 80076d2:	3710      	adds	r7, #16
 80076d4:	46bd      	mov	sp, r7
 80076d6:	bd80      	pop	{r7, pc}
 80076d8:	08007cc5 	.word	0x08007cc5
 80076dc:	ffff0000 	.word	0xffff0000

080076e0 <I2C_Slave_AF>:
 80076e0:	b580      	push	{r7, lr}
 80076e2:	b084      	sub	sp, #16
 80076e4:	af00      	add	r7, sp, #0
 80076e6:	6078      	str	r0, [r7, #4]
 80076e8:	687b      	ldr	r3, [r7, #4]
 80076ea:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80076ee:	73fb      	strb	r3, [r7, #15]
 80076f0:	687b      	ldr	r3, [r7, #4]
 80076f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80076f4:	60bb      	str	r3, [r7, #8]
 80076f6:	68bb      	ldr	r3, [r7, #8]
 80076f8:	2b08      	cmp	r3, #8
 80076fa:	d002      	beq.n	8007702 <I2C_Slave_AF+0x22>
 80076fc:	68bb      	ldr	r3, [r7, #8]
 80076fe:	2b20      	cmp	r3, #32
 8007700:	d129      	bne.n	8007756 <I2C_Slave_AF+0x76>
 8007702:	7bfb      	ldrb	r3, [r7, #15]
 8007704:	2b28      	cmp	r3, #40	; 0x28
 8007706:	d126      	bne.n	8007756 <I2C_Slave_AF+0x76>
 8007708:	687b      	ldr	r3, [r7, #4]
 800770a:	4a2c      	ldr	r2, [pc, #176]	; (80077bc <I2C_Slave_AF+0xdc>)
 800770c:	62da      	str	r2, [r3, #44]	; 0x2c
 800770e:	687b      	ldr	r3, [r7, #4]
 8007710:	681b      	ldr	r3, [r3, #0]
 8007712:	685a      	ldr	r2, [r3, #4]
 8007714:	687b      	ldr	r3, [r7, #4]
 8007716:	681b      	ldr	r3, [r3, #0]
 8007718:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800771c:	605a      	str	r2, [r3, #4]
 800771e:	687b      	ldr	r3, [r7, #4]
 8007720:	681b      	ldr	r3, [r3, #0]
 8007722:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8007726:	615a      	str	r2, [r3, #20]
 8007728:	687b      	ldr	r3, [r7, #4]
 800772a:	681b      	ldr	r3, [r3, #0]
 800772c:	681a      	ldr	r2, [r3, #0]
 800772e:	687b      	ldr	r3, [r7, #4]
 8007730:	681b      	ldr	r3, [r3, #0]
 8007732:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007736:	601a      	str	r2, [r3, #0]
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	2200      	movs	r2, #0
 800773c:	631a      	str	r2, [r3, #48]	; 0x30
 800773e:	687b      	ldr	r3, [r7, #4]
 8007740:	2220      	movs	r2, #32
 8007742:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007746:	687b      	ldr	r3, [r7, #4]
 8007748:	2200      	movs	r2, #0
 800774a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800774e:	6878      	ldr	r0, [r7, #4]
 8007750:	f7fe ffd0 	bl	80066f4 <HAL_I2C_ListenCpltCallback>
 8007754:	e02e      	b.n	80077b4 <I2C_Slave_AF+0xd4>
 8007756:	7bfb      	ldrb	r3, [r7, #15]
 8007758:	2b21      	cmp	r3, #33	; 0x21
 800775a:	d126      	bne.n	80077aa <I2C_Slave_AF+0xca>
 800775c:	687b      	ldr	r3, [r7, #4]
 800775e:	4a17      	ldr	r2, [pc, #92]	; (80077bc <I2C_Slave_AF+0xdc>)
 8007760:	62da      	str	r2, [r3, #44]	; 0x2c
 8007762:	687b      	ldr	r3, [r7, #4]
 8007764:	2221      	movs	r2, #33	; 0x21
 8007766:	631a      	str	r2, [r3, #48]	; 0x30
 8007768:	687b      	ldr	r3, [r7, #4]
 800776a:	2220      	movs	r2, #32
 800776c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007770:	687b      	ldr	r3, [r7, #4]
 8007772:	2200      	movs	r2, #0
 8007774:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007778:	687b      	ldr	r3, [r7, #4]
 800777a:	681b      	ldr	r3, [r3, #0]
 800777c:	685a      	ldr	r2, [r3, #4]
 800777e:	687b      	ldr	r3, [r7, #4]
 8007780:	681b      	ldr	r3, [r3, #0]
 8007782:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8007786:	605a      	str	r2, [r3, #4]
 8007788:	687b      	ldr	r3, [r7, #4]
 800778a:	681b      	ldr	r3, [r3, #0]
 800778c:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8007790:	615a      	str	r2, [r3, #20]
 8007792:	687b      	ldr	r3, [r7, #4]
 8007794:	681b      	ldr	r3, [r3, #0]
 8007796:	681a      	ldr	r2, [r3, #0]
 8007798:	687b      	ldr	r3, [r7, #4]
 800779a:	681b      	ldr	r3, [r3, #0]
 800779c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80077a0:	601a      	str	r2, [r3, #0]
 80077a2:	6878      	ldr	r0, [r7, #4]
 80077a4:	f7fe ff84 	bl	80066b0 <HAL_I2C_SlaveTxCpltCallback>
 80077a8:	e004      	b.n	80077b4 <I2C_Slave_AF+0xd4>
 80077aa:	687b      	ldr	r3, [r7, #4]
 80077ac:	681b      	ldr	r3, [r3, #0]
 80077ae:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80077b2:	615a      	str	r2, [r3, #20]
 80077b4:	bf00      	nop
 80077b6:	3710      	adds	r7, #16
 80077b8:	46bd      	mov	sp, r7
 80077ba:	bd80      	pop	{r7, pc}
 80077bc:	ffff0000 	.word	0xffff0000

080077c0 <I2C_ITError>:
 80077c0:	b580      	push	{r7, lr}
 80077c2:	b084      	sub	sp, #16
 80077c4:	af00      	add	r7, sp, #0
 80077c6:	6078      	str	r0, [r7, #4]
 80077c8:	687b      	ldr	r3, [r7, #4]
 80077ca:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80077ce:	73fb      	strb	r3, [r7, #15]
 80077d0:	687b      	ldr	r3, [r7, #4]
 80077d2:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80077d6:	73bb      	strb	r3, [r7, #14]
 80077d8:	7bbb      	ldrb	r3, [r7, #14]
 80077da:	2b10      	cmp	r3, #16
 80077dc:	d002      	beq.n	80077e4 <I2C_ITError+0x24>
 80077de:	7bbb      	ldrb	r3, [r7, #14]
 80077e0:	2b40      	cmp	r3, #64	; 0x40
 80077e2:	d10a      	bne.n	80077fa <I2C_ITError+0x3a>
 80077e4:	7bfb      	ldrb	r3, [r7, #15]
 80077e6:	2b22      	cmp	r3, #34	; 0x22
 80077e8:	d107      	bne.n	80077fa <I2C_ITError+0x3a>
 80077ea:	687b      	ldr	r3, [r7, #4]
 80077ec:	681b      	ldr	r3, [r3, #0]
 80077ee:	681a      	ldr	r2, [r3, #0]
 80077f0:	687b      	ldr	r3, [r7, #4]
 80077f2:	681b      	ldr	r3, [r3, #0]
 80077f4:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80077f8:	601a      	str	r2, [r3, #0]
 80077fa:	7bfb      	ldrb	r3, [r7, #15]
 80077fc:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8007800:	2b28      	cmp	r3, #40	; 0x28
 8007802:	d107      	bne.n	8007814 <I2C_ITError+0x54>
 8007804:	687b      	ldr	r3, [r7, #4]
 8007806:	2200      	movs	r2, #0
 8007808:	631a      	str	r2, [r3, #48]	; 0x30
 800780a:	687b      	ldr	r3, [r7, #4]
 800780c:	2228      	movs	r2, #40	; 0x28
 800780e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007812:	e015      	b.n	8007840 <I2C_ITError+0x80>
 8007814:	687b      	ldr	r3, [r7, #4]
 8007816:	681b      	ldr	r3, [r3, #0]
 8007818:	685b      	ldr	r3, [r3, #4]
 800781a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800781e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007822:	d00a      	beq.n	800783a <I2C_ITError+0x7a>
 8007824:	7bfb      	ldrb	r3, [r7, #15]
 8007826:	2b60      	cmp	r3, #96	; 0x60
 8007828:	d007      	beq.n	800783a <I2C_ITError+0x7a>
 800782a:	687b      	ldr	r3, [r7, #4]
 800782c:	2220      	movs	r2, #32
 800782e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007832:	687b      	ldr	r3, [r7, #4]
 8007834:	2200      	movs	r2, #0
 8007836:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800783a:	687b      	ldr	r3, [r7, #4]
 800783c:	2200      	movs	r2, #0
 800783e:	631a      	str	r2, [r3, #48]	; 0x30
 8007840:	687b      	ldr	r3, [r7, #4]
 8007842:	681b      	ldr	r3, [r3, #0]
 8007844:	685b      	ldr	r3, [r3, #4]
 8007846:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800784a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800784e:	d162      	bne.n	8007916 <I2C_ITError+0x156>
 8007850:	687b      	ldr	r3, [r7, #4]
 8007852:	681b      	ldr	r3, [r3, #0]
 8007854:	685a      	ldr	r2, [r3, #4]
 8007856:	687b      	ldr	r3, [r7, #4]
 8007858:	681b      	ldr	r3, [r3, #0]
 800785a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800785e:	605a      	str	r2, [r3, #4]
 8007860:	687b      	ldr	r3, [r7, #4]
 8007862:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007864:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8007868:	b2db      	uxtb	r3, r3
 800786a:	2b01      	cmp	r3, #1
 800786c:	d020      	beq.n	80078b0 <I2C_ITError+0xf0>
 800786e:	687b      	ldr	r3, [r7, #4]
 8007870:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007872:	4a6a      	ldr	r2, [pc, #424]	; (8007a1c <I2C_ITError+0x25c>)
 8007874:	651a      	str	r2, [r3, #80]	; 0x50
 8007876:	687b      	ldr	r3, [r7, #4]
 8007878:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800787a:	4618      	mov	r0, r3
 800787c:	f7fd fc1c 	bl	80050b8 <HAL_DMA_Abort_IT>
 8007880:	4603      	mov	r3, r0
 8007882:	2b00      	cmp	r3, #0
 8007884:	f000 8089 	beq.w	800799a <I2C_ITError+0x1da>
 8007888:	687b      	ldr	r3, [r7, #4]
 800788a:	681b      	ldr	r3, [r3, #0]
 800788c:	681a      	ldr	r2, [r3, #0]
 800788e:	687b      	ldr	r3, [r7, #4]
 8007890:	681b      	ldr	r3, [r3, #0]
 8007892:	f022 0201 	bic.w	r2, r2, #1
 8007896:	601a      	str	r2, [r3, #0]
 8007898:	687b      	ldr	r3, [r7, #4]
 800789a:	2220      	movs	r2, #32
 800789c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80078a0:	687b      	ldr	r3, [r7, #4]
 80078a2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80078a4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80078a6:	687a      	ldr	r2, [r7, #4]
 80078a8:	6b52      	ldr	r2, [r2, #52]	; 0x34
 80078aa:	4610      	mov	r0, r2
 80078ac:	4798      	blx	r3
 80078ae:	e074      	b.n	800799a <I2C_ITError+0x1da>
 80078b0:	687b      	ldr	r3, [r7, #4]
 80078b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80078b4:	4a59      	ldr	r2, [pc, #356]	; (8007a1c <I2C_ITError+0x25c>)
 80078b6:	651a      	str	r2, [r3, #80]	; 0x50
 80078b8:	687b      	ldr	r3, [r7, #4]
 80078ba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80078bc:	4618      	mov	r0, r3
 80078be:	f7fd fbfb 	bl	80050b8 <HAL_DMA_Abort_IT>
 80078c2:	4603      	mov	r3, r0
 80078c4:	2b00      	cmp	r3, #0
 80078c6:	d068      	beq.n	800799a <I2C_ITError+0x1da>
 80078c8:	687b      	ldr	r3, [r7, #4]
 80078ca:	681b      	ldr	r3, [r3, #0]
 80078cc:	695b      	ldr	r3, [r3, #20]
 80078ce:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80078d2:	2b40      	cmp	r3, #64	; 0x40
 80078d4:	d10b      	bne.n	80078ee <I2C_ITError+0x12e>
 80078d6:	687b      	ldr	r3, [r7, #4]
 80078d8:	681b      	ldr	r3, [r3, #0]
 80078da:	691a      	ldr	r2, [r3, #16]
 80078dc:	687b      	ldr	r3, [r7, #4]
 80078de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80078e0:	b2d2      	uxtb	r2, r2
 80078e2:	701a      	strb	r2, [r3, #0]
 80078e4:	687b      	ldr	r3, [r7, #4]
 80078e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80078e8:	1c5a      	adds	r2, r3, #1
 80078ea:	687b      	ldr	r3, [r7, #4]
 80078ec:	625a      	str	r2, [r3, #36]	; 0x24
 80078ee:	687b      	ldr	r3, [r7, #4]
 80078f0:	681b      	ldr	r3, [r3, #0]
 80078f2:	681a      	ldr	r2, [r3, #0]
 80078f4:	687b      	ldr	r3, [r7, #4]
 80078f6:	681b      	ldr	r3, [r3, #0]
 80078f8:	f022 0201 	bic.w	r2, r2, #1
 80078fc:	601a      	str	r2, [r3, #0]
 80078fe:	687b      	ldr	r3, [r7, #4]
 8007900:	2220      	movs	r2, #32
 8007902:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007906:	687b      	ldr	r3, [r7, #4]
 8007908:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800790a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800790c:	687a      	ldr	r2, [r7, #4]
 800790e:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8007910:	4610      	mov	r0, r2
 8007912:	4798      	blx	r3
 8007914:	e041      	b.n	800799a <I2C_ITError+0x1da>
 8007916:	687b      	ldr	r3, [r7, #4]
 8007918:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800791c:	b2db      	uxtb	r3, r3
 800791e:	2b60      	cmp	r3, #96	; 0x60
 8007920:	d125      	bne.n	800796e <I2C_ITError+0x1ae>
 8007922:	687b      	ldr	r3, [r7, #4]
 8007924:	2220      	movs	r2, #32
 8007926:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800792a:	687b      	ldr	r3, [r7, #4]
 800792c:	2200      	movs	r2, #0
 800792e:	641a      	str	r2, [r3, #64]	; 0x40
 8007930:	687b      	ldr	r3, [r7, #4]
 8007932:	681b      	ldr	r3, [r3, #0]
 8007934:	695b      	ldr	r3, [r3, #20]
 8007936:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800793a:	2b40      	cmp	r3, #64	; 0x40
 800793c:	d10b      	bne.n	8007956 <I2C_ITError+0x196>
 800793e:	687b      	ldr	r3, [r7, #4]
 8007940:	681b      	ldr	r3, [r3, #0]
 8007942:	691a      	ldr	r2, [r3, #16]
 8007944:	687b      	ldr	r3, [r7, #4]
 8007946:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007948:	b2d2      	uxtb	r2, r2
 800794a:	701a      	strb	r2, [r3, #0]
 800794c:	687b      	ldr	r3, [r7, #4]
 800794e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007950:	1c5a      	adds	r2, r3, #1
 8007952:	687b      	ldr	r3, [r7, #4]
 8007954:	625a      	str	r2, [r3, #36]	; 0x24
 8007956:	687b      	ldr	r3, [r7, #4]
 8007958:	681b      	ldr	r3, [r3, #0]
 800795a:	681a      	ldr	r2, [r3, #0]
 800795c:	687b      	ldr	r3, [r7, #4]
 800795e:	681b      	ldr	r3, [r3, #0]
 8007960:	f022 0201 	bic.w	r2, r2, #1
 8007964:	601a      	str	r2, [r3, #0]
 8007966:	6878      	ldr	r0, [r7, #4]
 8007968:	f7fe feec 	bl	8006744 <HAL_I2C_AbortCpltCallback>
 800796c:	e015      	b.n	800799a <I2C_ITError+0x1da>
 800796e:	687b      	ldr	r3, [r7, #4]
 8007970:	681b      	ldr	r3, [r3, #0]
 8007972:	695b      	ldr	r3, [r3, #20]
 8007974:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007978:	2b40      	cmp	r3, #64	; 0x40
 800797a:	d10b      	bne.n	8007994 <I2C_ITError+0x1d4>
 800797c:	687b      	ldr	r3, [r7, #4]
 800797e:	681b      	ldr	r3, [r3, #0]
 8007980:	691a      	ldr	r2, [r3, #16]
 8007982:	687b      	ldr	r3, [r7, #4]
 8007984:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007986:	b2d2      	uxtb	r2, r2
 8007988:	701a      	strb	r2, [r3, #0]
 800798a:	687b      	ldr	r3, [r7, #4]
 800798c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800798e:	1c5a      	adds	r2, r3, #1
 8007990:	687b      	ldr	r3, [r7, #4]
 8007992:	625a      	str	r2, [r3, #36]	; 0x24
 8007994:	6878      	ldr	r0, [r7, #4]
 8007996:	f7fe fecb 	bl	8006730 <HAL_I2C_ErrorCallback>
 800799a:	687b      	ldr	r3, [r7, #4]
 800799c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800799e:	60bb      	str	r3, [r7, #8]
 80079a0:	68bb      	ldr	r3, [r7, #8]
 80079a2:	f003 0301 	and.w	r3, r3, #1
 80079a6:	2b00      	cmp	r3, #0
 80079a8:	d10e      	bne.n	80079c8 <I2C_ITError+0x208>
 80079aa:	68bb      	ldr	r3, [r7, #8]
 80079ac:	f003 0302 	and.w	r3, r3, #2
 80079b0:	2b00      	cmp	r3, #0
 80079b2:	d109      	bne.n	80079c8 <I2C_ITError+0x208>
 80079b4:	68bb      	ldr	r3, [r7, #8]
 80079b6:	f003 0304 	and.w	r3, r3, #4
 80079ba:	2b00      	cmp	r3, #0
 80079bc:	d104      	bne.n	80079c8 <I2C_ITError+0x208>
 80079be:	68bb      	ldr	r3, [r7, #8]
 80079c0:	f003 0308 	and.w	r3, r3, #8
 80079c4:	2b00      	cmp	r3, #0
 80079c6:	d007      	beq.n	80079d8 <I2C_ITError+0x218>
 80079c8:	687b      	ldr	r3, [r7, #4]
 80079ca:	681b      	ldr	r3, [r3, #0]
 80079cc:	685a      	ldr	r2, [r3, #4]
 80079ce:	687b      	ldr	r3, [r7, #4]
 80079d0:	681b      	ldr	r3, [r3, #0]
 80079d2:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80079d6:	605a      	str	r2, [r3, #4]
 80079d8:	687b      	ldr	r3, [r7, #4]
 80079da:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80079de:	73fb      	strb	r3, [r7, #15]
 80079e0:	687b      	ldr	r3, [r7, #4]
 80079e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80079e4:	f003 0304 	and.w	r3, r3, #4
 80079e8:	2b04      	cmp	r3, #4
 80079ea:	d113      	bne.n	8007a14 <I2C_ITError+0x254>
 80079ec:	7bfb      	ldrb	r3, [r7, #15]
 80079ee:	2b28      	cmp	r3, #40	; 0x28
 80079f0:	d110      	bne.n	8007a14 <I2C_ITError+0x254>
 80079f2:	687b      	ldr	r3, [r7, #4]
 80079f4:	4a0a      	ldr	r2, [pc, #40]	; (8007a20 <I2C_ITError+0x260>)
 80079f6:	62da      	str	r2, [r3, #44]	; 0x2c
 80079f8:	687b      	ldr	r3, [r7, #4]
 80079fa:	2200      	movs	r2, #0
 80079fc:	631a      	str	r2, [r3, #48]	; 0x30
 80079fe:	687b      	ldr	r3, [r7, #4]
 8007a00:	2220      	movs	r2, #32
 8007a02:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007a06:	687b      	ldr	r3, [r7, #4]
 8007a08:	2200      	movs	r2, #0
 8007a0a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007a0e:	6878      	ldr	r0, [r7, #4]
 8007a10:	f7fe fe70 	bl	80066f4 <HAL_I2C_ListenCpltCallback>
 8007a14:	bf00      	nop
 8007a16:	3710      	adds	r7, #16
 8007a18:	46bd      	mov	sp, r7
 8007a1a:	bd80      	pop	{r7, pc}
 8007a1c:	08007cc5 	.word	0x08007cc5
 8007a20:	ffff0000 	.word	0xffff0000

08007a24 <I2C_MasterRequestWrite>:
 8007a24:	b580      	push	{r7, lr}
 8007a26:	b088      	sub	sp, #32
 8007a28:	af02      	add	r7, sp, #8
 8007a2a:	60f8      	str	r0, [r7, #12]
 8007a2c:	607a      	str	r2, [r7, #4]
 8007a2e:	603b      	str	r3, [r7, #0]
 8007a30:	460b      	mov	r3, r1
 8007a32:	817b      	strh	r3, [r7, #10]
 8007a34:	68fb      	ldr	r3, [r7, #12]
 8007a36:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007a38:	617b      	str	r3, [r7, #20]
 8007a3a:	697b      	ldr	r3, [r7, #20]
 8007a3c:	2b08      	cmp	r3, #8
 8007a3e:	d006      	beq.n	8007a4e <I2C_MasterRequestWrite+0x2a>
 8007a40:	697b      	ldr	r3, [r7, #20]
 8007a42:	2b01      	cmp	r3, #1
 8007a44:	d003      	beq.n	8007a4e <I2C_MasterRequestWrite+0x2a>
 8007a46:	697b      	ldr	r3, [r7, #20]
 8007a48:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8007a4c:	d108      	bne.n	8007a60 <I2C_MasterRequestWrite+0x3c>
 8007a4e:	68fb      	ldr	r3, [r7, #12]
 8007a50:	681b      	ldr	r3, [r3, #0]
 8007a52:	681a      	ldr	r2, [r3, #0]
 8007a54:	68fb      	ldr	r3, [r7, #12]
 8007a56:	681b      	ldr	r3, [r3, #0]
 8007a58:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007a5c:	601a      	str	r2, [r3, #0]
 8007a5e:	e00b      	b.n	8007a78 <I2C_MasterRequestWrite+0x54>
 8007a60:	68fb      	ldr	r3, [r7, #12]
 8007a62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007a64:	2b12      	cmp	r3, #18
 8007a66:	d107      	bne.n	8007a78 <I2C_MasterRequestWrite+0x54>
 8007a68:	68fb      	ldr	r3, [r7, #12]
 8007a6a:	681b      	ldr	r3, [r3, #0]
 8007a6c:	681a      	ldr	r2, [r3, #0]
 8007a6e:	68fb      	ldr	r3, [r7, #12]
 8007a70:	681b      	ldr	r3, [r3, #0]
 8007a72:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007a76:	601a      	str	r2, [r3, #0]
 8007a78:	683b      	ldr	r3, [r7, #0]
 8007a7a:	9300      	str	r3, [sp, #0]
 8007a7c:	687b      	ldr	r3, [r7, #4]
 8007a7e:	2200      	movs	r2, #0
 8007a80:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8007a84:	68f8      	ldr	r0, [r7, #12]
 8007a86:	f000 f9c5 	bl	8007e14 <I2C_WaitOnFlagUntilTimeout>
 8007a8a:	4603      	mov	r3, r0
 8007a8c:	2b00      	cmp	r3, #0
 8007a8e:	d00d      	beq.n	8007aac <I2C_MasterRequestWrite+0x88>
 8007a90:	68fb      	ldr	r3, [r7, #12]
 8007a92:	681b      	ldr	r3, [r3, #0]
 8007a94:	681b      	ldr	r3, [r3, #0]
 8007a96:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007a9a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007a9e:	d103      	bne.n	8007aa8 <I2C_MasterRequestWrite+0x84>
 8007aa0:	68fb      	ldr	r3, [r7, #12]
 8007aa2:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007aa6:	641a      	str	r2, [r3, #64]	; 0x40
 8007aa8:	2303      	movs	r3, #3
 8007aaa:	e035      	b.n	8007b18 <I2C_MasterRequestWrite+0xf4>
 8007aac:	68fb      	ldr	r3, [r7, #12]
 8007aae:	691b      	ldr	r3, [r3, #16]
 8007ab0:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007ab4:	d108      	bne.n	8007ac8 <I2C_MasterRequestWrite+0xa4>
 8007ab6:	897b      	ldrh	r3, [r7, #10]
 8007ab8:	b2db      	uxtb	r3, r3
 8007aba:	461a      	mov	r2, r3
 8007abc:	68fb      	ldr	r3, [r7, #12]
 8007abe:	681b      	ldr	r3, [r3, #0]
 8007ac0:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8007ac4:	611a      	str	r2, [r3, #16]
 8007ac6:	e01b      	b.n	8007b00 <I2C_MasterRequestWrite+0xdc>
 8007ac8:	897b      	ldrh	r3, [r7, #10]
 8007aca:	11db      	asrs	r3, r3, #7
 8007acc:	b2db      	uxtb	r3, r3
 8007ace:	f003 0306 	and.w	r3, r3, #6
 8007ad2:	b2db      	uxtb	r3, r3
 8007ad4:	f063 030f 	orn	r3, r3, #15
 8007ad8:	b2da      	uxtb	r2, r3
 8007ada:	68fb      	ldr	r3, [r7, #12]
 8007adc:	681b      	ldr	r3, [r3, #0]
 8007ade:	611a      	str	r2, [r3, #16]
 8007ae0:	683b      	ldr	r3, [r7, #0]
 8007ae2:	687a      	ldr	r2, [r7, #4]
 8007ae4:	490e      	ldr	r1, [pc, #56]	; (8007b20 <I2C_MasterRequestWrite+0xfc>)
 8007ae6:	68f8      	ldr	r0, [r7, #12]
 8007ae8:	f000 f9eb 	bl	8007ec2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007aec:	4603      	mov	r3, r0
 8007aee:	2b00      	cmp	r3, #0
 8007af0:	d001      	beq.n	8007af6 <I2C_MasterRequestWrite+0xd2>
 8007af2:	2301      	movs	r3, #1
 8007af4:	e010      	b.n	8007b18 <I2C_MasterRequestWrite+0xf4>
 8007af6:	897b      	ldrh	r3, [r7, #10]
 8007af8:	b2da      	uxtb	r2, r3
 8007afa:	68fb      	ldr	r3, [r7, #12]
 8007afc:	681b      	ldr	r3, [r3, #0]
 8007afe:	611a      	str	r2, [r3, #16]
 8007b00:	683b      	ldr	r3, [r7, #0]
 8007b02:	687a      	ldr	r2, [r7, #4]
 8007b04:	4907      	ldr	r1, [pc, #28]	; (8007b24 <I2C_MasterRequestWrite+0x100>)
 8007b06:	68f8      	ldr	r0, [r7, #12]
 8007b08:	f000 f9db 	bl	8007ec2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007b0c:	4603      	mov	r3, r0
 8007b0e:	2b00      	cmp	r3, #0
 8007b10:	d001      	beq.n	8007b16 <I2C_MasterRequestWrite+0xf2>
 8007b12:	2301      	movs	r3, #1
 8007b14:	e000      	b.n	8007b18 <I2C_MasterRequestWrite+0xf4>
 8007b16:	2300      	movs	r3, #0
 8007b18:	4618      	mov	r0, r3
 8007b1a:	3718      	adds	r7, #24
 8007b1c:	46bd      	mov	sp, r7
 8007b1e:	bd80      	pop	{r7, pc}
 8007b20:	00010008 	.word	0x00010008
 8007b24:	00010002 	.word	0x00010002

08007b28 <I2C_MasterRequestRead>:
 8007b28:	b580      	push	{r7, lr}
 8007b2a:	b088      	sub	sp, #32
 8007b2c:	af02      	add	r7, sp, #8
 8007b2e:	60f8      	str	r0, [r7, #12]
 8007b30:	607a      	str	r2, [r7, #4]
 8007b32:	603b      	str	r3, [r7, #0]
 8007b34:	460b      	mov	r3, r1
 8007b36:	817b      	strh	r3, [r7, #10]
 8007b38:	68fb      	ldr	r3, [r7, #12]
 8007b3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007b3c:	617b      	str	r3, [r7, #20]
 8007b3e:	68fb      	ldr	r3, [r7, #12]
 8007b40:	681b      	ldr	r3, [r3, #0]
 8007b42:	681a      	ldr	r2, [r3, #0]
 8007b44:	68fb      	ldr	r3, [r7, #12]
 8007b46:	681b      	ldr	r3, [r3, #0]
 8007b48:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007b4c:	601a      	str	r2, [r3, #0]
 8007b4e:	697b      	ldr	r3, [r7, #20]
 8007b50:	2b08      	cmp	r3, #8
 8007b52:	d006      	beq.n	8007b62 <I2C_MasterRequestRead+0x3a>
 8007b54:	697b      	ldr	r3, [r7, #20]
 8007b56:	2b01      	cmp	r3, #1
 8007b58:	d003      	beq.n	8007b62 <I2C_MasterRequestRead+0x3a>
 8007b5a:	697b      	ldr	r3, [r7, #20]
 8007b5c:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8007b60:	d108      	bne.n	8007b74 <I2C_MasterRequestRead+0x4c>
 8007b62:	68fb      	ldr	r3, [r7, #12]
 8007b64:	681b      	ldr	r3, [r3, #0]
 8007b66:	681a      	ldr	r2, [r3, #0]
 8007b68:	68fb      	ldr	r3, [r7, #12]
 8007b6a:	681b      	ldr	r3, [r3, #0]
 8007b6c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007b70:	601a      	str	r2, [r3, #0]
 8007b72:	e00b      	b.n	8007b8c <I2C_MasterRequestRead+0x64>
 8007b74:	68fb      	ldr	r3, [r7, #12]
 8007b76:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007b78:	2b11      	cmp	r3, #17
 8007b7a:	d107      	bne.n	8007b8c <I2C_MasterRequestRead+0x64>
 8007b7c:	68fb      	ldr	r3, [r7, #12]
 8007b7e:	681b      	ldr	r3, [r3, #0]
 8007b80:	681a      	ldr	r2, [r3, #0]
 8007b82:	68fb      	ldr	r3, [r7, #12]
 8007b84:	681b      	ldr	r3, [r3, #0]
 8007b86:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007b8a:	601a      	str	r2, [r3, #0]
 8007b8c:	683b      	ldr	r3, [r7, #0]
 8007b8e:	9300      	str	r3, [sp, #0]
 8007b90:	687b      	ldr	r3, [r7, #4]
 8007b92:	2200      	movs	r2, #0
 8007b94:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8007b98:	68f8      	ldr	r0, [r7, #12]
 8007b9a:	f000 f93b 	bl	8007e14 <I2C_WaitOnFlagUntilTimeout>
 8007b9e:	4603      	mov	r3, r0
 8007ba0:	2b00      	cmp	r3, #0
 8007ba2:	d00d      	beq.n	8007bc0 <I2C_MasterRequestRead+0x98>
 8007ba4:	68fb      	ldr	r3, [r7, #12]
 8007ba6:	681b      	ldr	r3, [r3, #0]
 8007ba8:	681b      	ldr	r3, [r3, #0]
 8007baa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007bae:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007bb2:	d103      	bne.n	8007bbc <I2C_MasterRequestRead+0x94>
 8007bb4:	68fb      	ldr	r3, [r7, #12]
 8007bb6:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007bba:	641a      	str	r2, [r3, #64]	; 0x40
 8007bbc:	2303      	movs	r3, #3
 8007bbe:	e079      	b.n	8007cb4 <I2C_MasterRequestRead+0x18c>
 8007bc0:	68fb      	ldr	r3, [r7, #12]
 8007bc2:	691b      	ldr	r3, [r3, #16]
 8007bc4:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007bc8:	d108      	bne.n	8007bdc <I2C_MasterRequestRead+0xb4>
 8007bca:	897b      	ldrh	r3, [r7, #10]
 8007bcc:	b2db      	uxtb	r3, r3
 8007bce:	f043 0301 	orr.w	r3, r3, #1
 8007bd2:	b2da      	uxtb	r2, r3
 8007bd4:	68fb      	ldr	r3, [r7, #12]
 8007bd6:	681b      	ldr	r3, [r3, #0]
 8007bd8:	611a      	str	r2, [r3, #16]
 8007bda:	e05f      	b.n	8007c9c <I2C_MasterRequestRead+0x174>
 8007bdc:	897b      	ldrh	r3, [r7, #10]
 8007bde:	11db      	asrs	r3, r3, #7
 8007be0:	b2db      	uxtb	r3, r3
 8007be2:	f003 0306 	and.w	r3, r3, #6
 8007be6:	b2db      	uxtb	r3, r3
 8007be8:	f063 030f 	orn	r3, r3, #15
 8007bec:	b2da      	uxtb	r2, r3
 8007bee:	68fb      	ldr	r3, [r7, #12]
 8007bf0:	681b      	ldr	r3, [r3, #0]
 8007bf2:	611a      	str	r2, [r3, #16]
 8007bf4:	683b      	ldr	r3, [r7, #0]
 8007bf6:	687a      	ldr	r2, [r7, #4]
 8007bf8:	4930      	ldr	r1, [pc, #192]	; (8007cbc <I2C_MasterRequestRead+0x194>)
 8007bfa:	68f8      	ldr	r0, [r7, #12]
 8007bfc:	f000 f961 	bl	8007ec2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007c00:	4603      	mov	r3, r0
 8007c02:	2b00      	cmp	r3, #0
 8007c04:	d001      	beq.n	8007c0a <I2C_MasterRequestRead+0xe2>
 8007c06:	2301      	movs	r3, #1
 8007c08:	e054      	b.n	8007cb4 <I2C_MasterRequestRead+0x18c>
 8007c0a:	897b      	ldrh	r3, [r7, #10]
 8007c0c:	b2da      	uxtb	r2, r3
 8007c0e:	68fb      	ldr	r3, [r7, #12]
 8007c10:	681b      	ldr	r3, [r3, #0]
 8007c12:	611a      	str	r2, [r3, #16]
 8007c14:	683b      	ldr	r3, [r7, #0]
 8007c16:	687a      	ldr	r2, [r7, #4]
 8007c18:	4929      	ldr	r1, [pc, #164]	; (8007cc0 <I2C_MasterRequestRead+0x198>)
 8007c1a:	68f8      	ldr	r0, [r7, #12]
 8007c1c:	f000 f951 	bl	8007ec2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007c20:	4603      	mov	r3, r0
 8007c22:	2b00      	cmp	r3, #0
 8007c24:	d001      	beq.n	8007c2a <I2C_MasterRequestRead+0x102>
 8007c26:	2301      	movs	r3, #1
 8007c28:	e044      	b.n	8007cb4 <I2C_MasterRequestRead+0x18c>
 8007c2a:	2300      	movs	r3, #0
 8007c2c:	613b      	str	r3, [r7, #16]
 8007c2e:	68fb      	ldr	r3, [r7, #12]
 8007c30:	681b      	ldr	r3, [r3, #0]
 8007c32:	695b      	ldr	r3, [r3, #20]
 8007c34:	613b      	str	r3, [r7, #16]
 8007c36:	68fb      	ldr	r3, [r7, #12]
 8007c38:	681b      	ldr	r3, [r3, #0]
 8007c3a:	699b      	ldr	r3, [r3, #24]
 8007c3c:	613b      	str	r3, [r7, #16]
 8007c3e:	693b      	ldr	r3, [r7, #16]
 8007c40:	68fb      	ldr	r3, [r7, #12]
 8007c42:	681b      	ldr	r3, [r3, #0]
 8007c44:	681a      	ldr	r2, [r3, #0]
 8007c46:	68fb      	ldr	r3, [r7, #12]
 8007c48:	681b      	ldr	r3, [r3, #0]
 8007c4a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007c4e:	601a      	str	r2, [r3, #0]
 8007c50:	683b      	ldr	r3, [r7, #0]
 8007c52:	9300      	str	r3, [sp, #0]
 8007c54:	687b      	ldr	r3, [r7, #4]
 8007c56:	2200      	movs	r2, #0
 8007c58:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8007c5c:	68f8      	ldr	r0, [r7, #12]
 8007c5e:	f000 f8d9 	bl	8007e14 <I2C_WaitOnFlagUntilTimeout>
 8007c62:	4603      	mov	r3, r0
 8007c64:	2b00      	cmp	r3, #0
 8007c66:	d00d      	beq.n	8007c84 <I2C_MasterRequestRead+0x15c>
 8007c68:	68fb      	ldr	r3, [r7, #12]
 8007c6a:	681b      	ldr	r3, [r3, #0]
 8007c6c:	681b      	ldr	r3, [r3, #0]
 8007c6e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007c72:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007c76:	d103      	bne.n	8007c80 <I2C_MasterRequestRead+0x158>
 8007c78:	68fb      	ldr	r3, [r7, #12]
 8007c7a:	f44f 7200 	mov.w	r2, #512	; 0x200
 8007c7e:	641a      	str	r2, [r3, #64]	; 0x40
 8007c80:	2303      	movs	r3, #3
 8007c82:	e017      	b.n	8007cb4 <I2C_MasterRequestRead+0x18c>
 8007c84:	897b      	ldrh	r3, [r7, #10]
 8007c86:	11db      	asrs	r3, r3, #7
 8007c88:	b2db      	uxtb	r3, r3
 8007c8a:	f003 0306 	and.w	r3, r3, #6
 8007c8e:	b2db      	uxtb	r3, r3
 8007c90:	f063 030e 	orn	r3, r3, #14
 8007c94:	b2da      	uxtb	r2, r3
 8007c96:	68fb      	ldr	r3, [r7, #12]
 8007c98:	681b      	ldr	r3, [r3, #0]
 8007c9a:	611a      	str	r2, [r3, #16]
 8007c9c:	683b      	ldr	r3, [r7, #0]
 8007c9e:	687a      	ldr	r2, [r7, #4]
 8007ca0:	4907      	ldr	r1, [pc, #28]	; (8007cc0 <I2C_MasterRequestRead+0x198>)
 8007ca2:	68f8      	ldr	r0, [r7, #12]
 8007ca4:	f000 f90d 	bl	8007ec2 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8007ca8:	4603      	mov	r3, r0
 8007caa:	2b00      	cmp	r3, #0
 8007cac:	d001      	beq.n	8007cb2 <I2C_MasterRequestRead+0x18a>
 8007cae:	2301      	movs	r3, #1
 8007cb0:	e000      	b.n	8007cb4 <I2C_MasterRequestRead+0x18c>
 8007cb2:	2300      	movs	r3, #0
 8007cb4:	4618      	mov	r0, r3
 8007cb6:	3718      	adds	r7, #24
 8007cb8:	46bd      	mov	sp, r7
 8007cba:	bd80      	pop	{r7, pc}
 8007cbc:	00010008 	.word	0x00010008
 8007cc0:	00010002 	.word	0x00010002

08007cc4 <I2C_DMAAbort>:
 8007cc4:	b580      	push	{r7, lr}
 8007cc6:	b086      	sub	sp, #24
 8007cc8:	af00      	add	r7, sp, #0
 8007cca:	6078      	str	r0, [r7, #4]
 8007ccc:	2300      	movs	r3, #0
 8007cce:	60fb      	str	r3, [r7, #12]
 8007cd0:	687b      	ldr	r3, [r7, #4]
 8007cd2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007cd4:	617b      	str	r3, [r7, #20]
 8007cd6:	697b      	ldr	r3, [r7, #20]
 8007cd8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007cdc:	74fb      	strb	r3, [r7, #19]
 8007cde:	4b4b      	ldr	r3, [pc, #300]	; (8007e0c <I2C_DMAAbort+0x148>)
 8007ce0:	681b      	ldr	r3, [r3, #0]
 8007ce2:	08db      	lsrs	r3, r3, #3
 8007ce4:	4a4a      	ldr	r2, [pc, #296]	; (8007e10 <I2C_DMAAbort+0x14c>)
 8007ce6:	fba2 2303 	umull	r2, r3, r2, r3
 8007cea:	0a1a      	lsrs	r2, r3, #8
 8007cec:	4613      	mov	r3, r2
 8007cee:	009b      	lsls	r3, r3, #2
 8007cf0:	4413      	add	r3, r2
 8007cf2:	00da      	lsls	r2, r3, #3
 8007cf4:	1ad3      	subs	r3, r2, r3
 8007cf6:	60fb      	str	r3, [r7, #12]
 8007cf8:	68fb      	ldr	r3, [r7, #12]
 8007cfa:	2b00      	cmp	r3, #0
 8007cfc:	d106      	bne.n	8007d0c <I2C_DMAAbort+0x48>
 8007cfe:	697b      	ldr	r3, [r7, #20]
 8007d00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007d02:	f043 0220 	orr.w	r2, r3, #32
 8007d06:	697b      	ldr	r3, [r7, #20]
 8007d08:	641a      	str	r2, [r3, #64]	; 0x40
 8007d0a:	e00a      	b.n	8007d22 <I2C_DMAAbort+0x5e>
 8007d0c:	68fb      	ldr	r3, [r7, #12]
 8007d0e:	3b01      	subs	r3, #1
 8007d10:	60fb      	str	r3, [r7, #12]
 8007d12:	697b      	ldr	r3, [r7, #20]
 8007d14:	681b      	ldr	r3, [r3, #0]
 8007d16:	681b      	ldr	r3, [r3, #0]
 8007d18:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8007d1c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8007d20:	d0ea      	beq.n	8007cf8 <I2C_DMAAbort+0x34>
 8007d22:	697b      	ldr	r3, [r7, #20]
 8007d24:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007d26:	2b00      	cmp	r3, #0
 8007d28:	d003      	beq.n	8007d32 <I2C_DMAAbort+0x6e>
 8007d2a:	697b      	ldr	r3, [r7, #20]
 8007d2c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007d2e:	2200      	movs	r2, #0
 8007d30:	63da      	str	r2, [r3, #60]	; 0x3c
 8007d32:	697b      	ldr	r3, [r7, #20]
 8007d34:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007d36:	2b00      	cmp	r3, #0
 8007d38:	d003      	beq.n	8007d42 <I2C_DMAAbort+0x7e>
 8007d3a:	697b      	ldr	r3, [r7, #20]
 8007d3c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007d3e:	2200      	movs	r2, #0
 8007d40:	63da      	str	r2, [r3, #60]	; 0x3c
 8007d42:	697b      	ldr	r3, [r7, #20]
 8007d44:	681b      	ldr	r3, [r3, #0]
 8007d46:	681a      	ldr	r2, [r3, #0]
 8007d48:	697b      	ldr	r3, [r7, #20]
 8007d4a:	681b      	ldr	r3, [r3, #0]
 8007d4c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007d50:	601a      	str	r2, [r3, #0]
 8007d52:	697b      	ldr	r3, [r7, #20]
 8007d54:	2200      	movs	r2, #0
 8007d56:	855a      	strh	r2, [r3, #42]	; 0x2a
 8007d58:	697b      	ldr	r3, [r7, #20]
 8007d5a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007d5c:	2b00      	cmp	r3, #0
 8007d5e:	d003      	beq.n	8007d68 <I2C_DMAAbort+0xa4>
 8007d60:	697b      	ldr	r3, [r7, #20]
 8007d62:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007d64:	2200      	movs	r2, #0
 8007d66:	651a      	str	r2, [r3, #80]	; 0x50
 8007d68:	697b      	ldr	r3, [r7, #20]
 8007d6a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007d6c:	2b00      	cmp	r3, #0
 8007d6e:	d003      	beq.n	8007d78 <I2C_DMAAbort+0xb4>
 8007d70:	697b      	ldr	r3, [r7, #20]
 8007d72:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007d74:	2200      	movs	r2, #0
 8007d76:	651a      	str	r2, [r3, #80]	; 0x50
 8007d78:	697b      	ldr	r3, [r7, #20]
 8007d7a:	681b      	ldr	r3, [r3, #0]
 8007d7c:	681a      	ldr	r2, [r3, #0]
 8007d7e:	697b      	ldr	r3, [r7, #20]
 8007d80:	681b      	ldr	r3, [r3, #0]
 8007d82:	f022 0201 	bic.w	r2, r2, #1
 8007d86:	601a      	str	r2, [r3, #0]
 8007d88:	697b      	ldr	r3, [r7, #20]
 8007d8a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007d8e:	b2db      	uxtb	r3, r3
 8007d90:	2b60      	cmp	r3, #96	; 0x60
 8007d92:	d10e      	bne.n	8007db2 <I2C_DMAAbort+0xee>
 8007d94:	697b      	ldr	r3, [r7, #20]
 8007d96:	2220      	movs	r2, #32
 8007d98:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007d9c:	697b      	ldr	r3, [r7, #20]
 8007d9e:	2200      	movs	r2, #0
 8007da0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007da4:	697b      	ldr	r3, [r7, #20]
 8007da6:	2200      	movs	r2, #0
 8007da8:	641a      	str	r2, [r3, #64]	; 0x40
 8007daa:	6978      	ldr	r0, [r7, #20]
 8007dac:	f7fe fcca 	bl	8006744 <HAL_I2C_AbortCpltCallback>
 8007db0:	e027      	b.n	8007e02 <I2C_DMAAbort+0x13e>
 8007db2:	7cfb      	ldrb	r3, [r7, #19]
 8007db4:	f003 0328 	and.w	r3, r3, #40	; 0x28
 8007db8:	2b28      	cmp	r3, #40	; 0x28
 8007dba:	d117      	bne.n	8007dec <I2C_DMAAbort+0x128>
 8007dbc:	697b      	ldr	r3, [r7, #20]
 8007dbe:	681b      	ldr	r3, [r3, #0]
 8007dc0:	681a      	ldr	r2, [r3, #0]
 8007dc2:	697b      	ldr	r3, [r7, #20]
 8007dc4:	681b      	ldr	r3, [r3, #0]
 8007dc6:	f042 0201 	orr.w	r2, r2, #1
 8007dca:	601a      	str	r2, [r3, #0]
 8007dcc:	697b      	ldr	r3, [r7, #20]
 8007dce:	681b      	ldr	r3, [r3, #0]
 8007dd0:	681a      	ldr	r2, [r3, #0]
 8007dd2:	697b      	ldr	r3, [r7, #20]
 8007dd4:	681b      	ldr	r3, [r3, #0]
 8007dd6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8007dda:	601a      	str	r2, [r3, #0]
 8007ddc:	697b      	ldr	r3, [r7, #20]
 8007dde:	2200      	movs	r2, #0
 8007de0:	631a      	str	r2, [r3, #48]	; 0x30
 8007de2:	697b      	ldr	r3, [r7, #20]
 8007de4:	2228      	movs	r2, #40	; 0x28
 8007de6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007dea:	e007      	b.n	8007dfc <I2C_DMAAbort+0x138>
 8007dec:	697b      	ldr	r3, [r7, #20]
 8007dee:	2220      	movs	r2, #32
 8007df0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007df4:	697b      	ldr	r3, [r7, #20]
 8007df6:	2200      	movs	r2, #0
 8007df8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007dfc:	6978      	ldr	r0, [r7, #20]
 8007dfe:	f7fe fc97 	bl	8006730 <HAL_I2C_ErrorCallback>
 8007e02:	bf00      	nop
 8007e04:	3718      	adds	r7, #24
 8007e06:	46bd      	mov	sp, r7
 8007e08:	bd80      	pop	{r7, pc}
 8007e0a:	bf00      	nop
 8007e0c:	20000140 	.word	0x20000140
 8007e10:	14f8b589 	.word	0x14f8b589

08007e14 <I2C_WaitOnFlagUntilTimeout>:
 8007e14:	b580      	push	{r7, lr}
 8007e16:	b084      	sub	sp, #16
 8007e18:	af00      	add	r7, sp, #0
 8007e1a:	60f8      	str	r0, [r7, #12]
 8007e1c:	60b9      	str	r1, [r7, #8]
 8007e1e:	603b      	str	r3, [r7, #0]
 8007e20:	4613      	mov	r3, r2
 8007e22:	71fb      	strb	r3, [r7, #7]
 8007e24:	e025      	b.n	8007e72 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8007e26:	683b      	ldr	r3, [r7, #0]
 8007e28:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007e2c:	d021      	beq.n	8007e72 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8007e2e:	f7fc feaf 	bl	8004b90 <HAL_GetTick>
 8007e32:	4602      	mov	r2, r0
 8007e34:	69bb      	ldr	r3, [r7, #24]
 8007e36:	1ad3      	subs	r3, r2, r3
 8007e38:	683a      	ldr	r2, [r7, #0]
 8007e3a:	429a      	cmp	r2, r3
 8007e3c:	d302      	bcc.n	8007e44 <I2C_WaitOnFlagUntilTimeout+0x30>
 8007e3e:	683b      	ldr	r3, [r7, #0]
 8007e40:	2b00      	cmp	r3, #0
 8007e42:	d116      	bne.n	8007e72 <I2C_WaitOnFlagUntilTimeout+0x5e>
 8007e44:	68fb      	ldr	r3, [r7, #12]
 8007e46:	2200      	movs	r2, #0
 8007e48:	631a      	str	r2, [r3, #48]	; 0x30
 8007e4a:	68fb      	ldr	r3, [r7, #12]
 8007e4c:	2220      	movs	r2, #32
 8007e4e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007e52:	68fb      	ldr	r3, [r7, #12]
 8007e54:	2200      	movs	r2, #0
 8007e56:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007e5a:	68fb      	ldr	r3, [r7, #12]
 8007e5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007e5e:	f043 0220 	orr.w	r2, r3, #32
 8007e62:	68fb      	ldr	r3, [r7, #12]
 8007e64:	641a      	str	r2, [r3, #64]	; 0x40
 8007e66:	68fb      	ldr	r3, [r7, #12]
 8007e68:	2200      	movs	r2, #0
 8007e6a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007e6e:	2301      	movs	r3, #1
 8007e70:	e023      	b.n	8007eba <I2C_WaitOnFlagUntilTimeout+0xa6>
 8007e72:	68bb      	ldr	r3, [r7, #8]
 8007e74:	0c1b      	lsrs	r3, r3, #16
 8007e76:	b2db      	uxtb	r3, r3
 8007e78:	2b01      	cmp	r3, #1
 8007e7a:	d10d      	bne.n	8007e98 <I2C_WaitOnFlagUntilTimeout+0x84>
 8007e7c:	68fb      	ldr	r3, [r7, #12]
 8007e7e:	681b      	ldr	r3, [r3, #0]
 8007e80:	695b      	ldr	r3, [r3, #20]
 8007e82:	43da      	mvns	r2, r3
 8007e84:	68bb      	ldr	r3, [r7, #8]
 8007e86:	4013      	ands	r3, r2
 8007e88:	b29b      	uxth	r3, r3
 8007e8a:	2b00      	cmp	r3, #0
 8007e8c:	bf0c      	ite	eq
 8007e8e:	2301      	moveq	r3, #1
 8007e90:	2300      	movne	r3, #0
 8007e92:	b2db      	uxtb	r3, r3
 8007e94:	461a      	mov	r2, r3
 8007e96:	e00c      	b.n	8007eb2 <I2C_WaitOnFlagUntilTimeout+0x9e>
 8007e98:	68fb      	ldr	r3, [r7, #12]
 8007e9a:	681b      	ldr	r3, [r3, #0]
 8007e9c:	699b      	ldr	r3, [r3, #24]
 8007e9e:	43da      	mvns	r2, r3
 8007ea0:	68bb      	ldr	r3, [r7, #8]
 8007ea2:	4013      	ands	r3, r2
 8007ea4:	b29b      	uxth	r3, r3
 8007ea6:	2b00      	cmp	r3, #0
 8007ea8:	bf0c      	ite	eq
 8007eaa:	2301      	moveq	r3, #1
 8007eac:	2300      	movne	r3, #0
 8007eae:	b2db      	uxtb	r3, r3
 8007eb0:	461a      	mov	r2, r3
 8007eb2:	79fb      	ldrb	r3, [r7, #7]
 8007eb4:	429a      	cmp	r2, r3
 8007eb6:	d0b6      	beq.n	8007e26 <I2C_WaitOnFlagUntilTimeout+0x12>
 8007eb8:	2300      	movs	r3, #0
 8007eba:	4618      	mov	r0, r3
 8007ebc:	3710      	adds	r7, #16
 8007ebe:	46bd      	mov	sp, r7
 8007ec0:	bd80      	pop	{r7, pc}

08007ec2 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8007ec2:	b580      	push	{r7, lr}
 8007ec4:	b084      	sub	sp, #16
 8007ec6:	af00      	add	r7, sp, #0
 8007ec8:	60f8      	str	r0, [r7, #12]
 8007eca:	60b9      	str	r1, [r7, #8]
 8007ecc:	607a      	str	r2, [r7, #4]
 8007ece:	603b      	str	r3, [r7, #0]
 8007ed0:	e051      	b.n	8007f76 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8007ed2:	68fb      	ldr	r3, [r7, #12]
 8007ed4:	681b      	ldr	r3, [r3, #0]
 8007ed6:	695b      	ldr	r3, [r3, #20]
 8007ed8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007edc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007ee0:	d123      	bne.n	8007f2a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8007ee2:	68fb      	ldr	r3, [r7, #12]
 8007ee4:	681b      	ldr	r3, [r3, #0]
 8007ee6:	681a      	ldr	r2, [r3, #0]
 8007ee8:	68fb      	ldr	r3, [r7, #12]
 8007eea:	681b      	ldr	r3, [r3, #0]
 8007eec:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007ef0:	601a      	str	r2, [r3, #0]
 8007ef2:	68fb      	ldr	r3, [r7, #12]
 8007ef4:	681b      	ldr	r3, [r3, #0]
 8007ef6:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8007efa:	615a      	str	r2, [r3, #20]
 8007efc:	68fb      	ldr	r3, [r7, #12]
 8007efe:	2200      	movs	r2, #0
 8007f00:	631a      	str	r2, [r3, #48]	; 0x30
 8007f02:	68fb      	ldr	r3, [r7, #12]
 8007f04:	2220      	movs	r2, #32
 8007f06:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007f0a:	68fb      	ldr	r3, [r7, #12]
 8007f0c:	2200      	movs	r2, #0
 8007f0e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007f12:	68fb      	ldr	r3, [r7, #12]
 8007f14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007f16:	f043 0204 	orr.w	r2, r3, #4
 8007f1a:	68fb      	ldr	r3, [r7, #12]
 8007f1c:	641a      	str	r2, [r3, #64]	; 0x40
 8007f1e:	68fb      	ldr	r3, [r7, #12]
 8007f20:	2200      	movs	r2, #0
 8007f22:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007f26:	2301      	movs	r3, #1
 8007f28:	e046      	b.n	8007fb8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8007f2a:	687b      	ldr	r3, [r7, #4]
 8007f2c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007f30:	d021      	beq.n	8007f76 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8007f32:	f7fc fe2d 	bl	8004b90 <HAL_GetTick>
 8007f36:	4602      	mov	r2, r0
 8007f38:	683b      	ldr	r3, [r7, #0]
 8007f3a:	1ad3      	subs	r3, r2, r3
 8007f3c:	687a      	ldr	r2, [r7, #4]
 8007f3e:	429a      	cmp	r2, r3
 8007f40:	d302      	bcc.n	8007f48 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8007f42:	687b      	ldr	r3, [r7, #4]
 8007f44:	2b00      	cmp	r3, #0
 8007f46:	d116      	bne.n	8007f76 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
 8007f48:	68fb      	ldr	r3, [r7, #12]
 8007f4a:	2200      	movs	r2, #0
 8007f4c:	631a      	str	r2, [r3, #48]	; 0x30
 8007f4e:	68fb      	ldr	r3, [r7, #12]
 8007f50:	2220      	movs	r2, #32
 8007f52:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007f56:	68fb      	ldr	r3, [r7, #12]
 8007f58:	2200      	movs	r2, #0
 8007f5a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007f5e:	68fb      	ldr	r3, [r7, #12]
 8007f60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007f62:	f043 0220 	orr.w	r2, r3, #32
 8007f66:	68fb      	ldr	r3, [r7, #12]
 8007f68:	641a      	str	r2, [r3, #64]	; 0x40
 8007f6a:	68fb      	ldr	r3, [r7, #12]
 8007f6c:	2200      	movs	r2, #0
 8007f6e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007f72:	2301      	movs	r3, #1
 8007f74:	e020      	b.n	8007fb8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
 8007f76:	68bb      	ldr	r3, [r7, #8]
 8007f78:	0c1b      	lsrs	r3, r3, #16
 8007f7a:	b2db      	uxtb	r3, r3
 8007f7c:	2b01      	cmp	r3, #1
 8007f7e:	d10c      	bne.n	8007f9a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 8007f80:	68fb      	ldr	r3, [r7, #12]
 8007f82:	681b      	ldr	r3, [r3, #0]
 8007f84:	695b      	ldr	r3, [r3, #20]
 8007f86:	43da      	mvns	r2, r3
 8007f88:	68bb      	ldr	r3, [r7, #8]
 8007f8a:	4013      	ands	r3, r2
 8007f8c:	b29b      	uxth	r3, r3
 8007f8e:	2b00      	cmp	r3, #0
 8007f90:	bf14      	ite	ne
 8007f92:	2301      	movne	r3, #1
 8007f94:	2300      	moveq	r3, #0
 8007f96:	b2db      	uxtb	r3, r3
 8007f98:	e00b      	b.n	8007fb2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 8007f9a:	68fb      	ldr	r3, [r7, #12]
 8007f9c:	681b      	ldr	r3, [r3, #0]
 8007f9e:	699b      	ldr	r3, [r3, #24]
 8007fa0:	43da      	mvns	r2, r3
 8007fa2:	68bb      	ldr	r3, [r7, #8]
 8007fa4:	4013      	ands	r3, r2
 8007fa6:	b29b      	uxth	r3, r3
 8007fa8:	2b00      	cmp	r3, #0
 8007faa:	bf14      	ite	ne
 8007fac:	2301      	movne	r3, #1
 8007fae:	2300      	moveq	r3, #0
 8007fb0:	b2db      	uxtb	r3, r3
 8007fb2:	2b00      	cmp	r3, #0
 8007fb4:	d18d      	bne.n	8007ed2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8007fb6:	2300      	movs	r3, #0
 8007fb8:	4618      	mov	r0, r3
 8007fba:	3710      	adds	r7, #16
 8007fbc:	46bd      	mov	sp, r7
 8007fbe:	bd80      	pop	{r7, pc}

08007fc0 <I2C_WaitOnTXEFlagUntilTimeout>:
 8007fc0:	b580      	push	{r7, lr}
 8007fc2:	b084      	sub	sp, #16
 8007fc4:	af00      	add	r7, sp, #0
 8007fc6:	60f8      	str	r0, [r7, #12]
 8007fc8:	60b9      	str	r1, [r7, #8]
 8007fca:	607a      	str	r2, [r7, #4]
 8007fcc:	e02d      	b.n	800802a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8007fce:	68f8      	ldr	r0, [r7, #12]
 8007fd0:	f000 f900 	bl	80081d4 <I2C_IsAcknowledgeFailed>
 8007fd4:	4603      	mov	r3, r0
 8007fd6:	2b00      	cmp	r3, #0
 8007fd8:	d001      	beq.n	8007fde <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8007fda:	2301      	movs	r3, #1
 8007fdc:	e02d      	b.n	800803a <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 8007fde:	68bb      	ldr	r3, [r7, #8]
 8007fe0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007fe4:	d021      	beq.n	800802a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8007fe6:	f7fc fdd3 	bl	8004b90 <HAL_GetTick>
 8007fea:	4602      	mov	r2, r0
 8007fec:	687b      	ldr	r3, [r7, #4]
 8007fee:	1ad3      	subs	r3, r2, r3
 8007ff0:	68ba      	ldr	r2, [r7, #8]
 8007ff2:	429a      	cmp	r2, r3
 8007ff4:	d302      	bcc.n	8007ffc <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8007ff6:	68bb      	ldr	r3, [r7, #8]
 8007ff8:	2b00      	cmp	r3, #0
 8007ffa:	d116      	bne.n	800802a <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
 8007ffc:	68fb      	ldr	r3, [r7, #12]
 8007ffe:	2200      	movs	r2, #0
 8008000:	631a      	str	r2, [r3, #48]	; 0x30
 8008002:	68fb      	ldr	r3, [r7, #12]
 8008004:	2220      	movs	r2, #32
 8008006:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800800a:	68fb      	ldr	r3, [r7, #12]
 800800c:	2200      	movs	r2, #0
 800800e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008012:	68fb      	ldr	r3, [r7, #12]
 8008014:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008016:	f043 0220 	orr.w	r2, r3, #32
 800801a:	68fb      	ldr	r3, [r7, #12]
 800801c:	641a      	str	r2, [r3, #64]	; 0x40
 800801e:	68fb      	ldr	r3, [r7, #12]
 8008020:	2200      	movs	r2, #0
 8008022:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008026:	2301      	movs	r3, #1
 8008028:	e007      	b.n	800803a <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
 800802a:	68fb      	ldr	r3, [r7, #12]
 800802c:	681b      	ldr	r3, [r3, #0]
 800802e:	695b      	ldr	r3, [r3, #20]
 8008030:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008034:	2b80      	cmp	r3, #128	; 0x80
 8008036:	d1ca      	bne.n	8007fce <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8008038:	2300      	movs	r3, #0
 800803a:	4618      	mov	r0, r3
 800803c:	3710      	adds	r7, #16
 800803e:	46bd      	mov	sp, r7
 8008040:	bd80      	pop	{r7, pc}

08008042 <I2C_WaitOnBTFFlagUntilTimeout>:
 8008042:	b580      	push	{r7, lr}
 8008044:	b084      	sub	sp, #16
 8008046:	af00      	add	r7, sp, #0
 8008048:	60f8      	str	r0, [r7, #12]
 800804a:	60b9      	str	r1, [r7, #8]
 800804c:	607a      	str	r2, [r7, #4]
 800804e:	e02d      	b.n	80080ac <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8008050:	68f8      	ldr	r0, [r7, #12]
 8008052:	f000 f8bf 	bl	80081d4 <I2C_IsAcknowledgeFailed>
 8008056:	4603      	mov	r3, r0
 8008058:	2b00      	cmp	r3, #0
 800805a:	d001      	beq.n	8008060 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800805c:	2301      	movs	r3, #1
 800805e:	e02d      	b.n	80080bc <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 8008060:	68bb      	ldr	r3, [r7, #8]
 8008062:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008066:	d021      	beq.n	80080ac <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 8008068:	f7fc fd92 	bl	8004b90 <HAL_GetTick>
 800806c:	4602      	mov	r2, r0
 800806e:	687b      	ldr	r3, [r7, #4]
 8008070:	1ad3      	subs	r3, r2, r3
 8008072:	68ba      	ldr	r2, [r7, #8]
 8008074:	429a      	cmp	r2, r3
 8008076:	d302      	bcc.n	800807e <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8008078:	68bb      	ldr	r3, [r7, #8]
 800807a:	2b00      	cmp	r3, #0
 800807c:	d116      	bne.n	80080ac <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
 800807e:	68fb      	ldr	r3, [r7, #12]
 8008080:	2200      	movs	r2, #0
 8008082:	631a      	str	r2, [r3, #48]	; 0x30
 8008084:	68fb      	ldr	r3, [r7, #12]
 8008086:	2220      	movs	r2, #32
 8008088:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800808c:	68fb      	ldr	r3, [r7, #12]
 800808e:	2200      	movs	r2, #0
 8008090:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008094:	68fb      	ldr	r3, [r7, #12]
 8008096:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008098:	f043 0220 	orr.w	r2, r3, #32
 800809c:	68fb      	ldr	r3, [r7, #12]
 800809e:	641a      	str	r2, [r3, #64]	; 0x40
 80080a0:	68fb      	ldr	r3, [r7, #12]
 80080a2:	2200      	movs	r2, #0
 80080a4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80080a8:	2301      	movs	r3, #1
 80080aa:	e007      	b.n	80080bc <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
 80080ac:	68fb      	ldr	r3, [r7, #12]
 80080ae:	681b      	ldr	r3, [r3, #0]
 80080b0:	695b      	ldr	r3, [r3, #20]
 80080b2:	f003 0304 	and.w	r3, r3, #4
 80080b6:	2b04      	cmp	r3, #4
 80080b8:	d1ca      	bne.n	8008050 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 80080ba:	2300      	movs	r3, #0
 80080bc:	4618      	mov	r0, r3
 80080be:	3710      	adds	r7, #16
 80080c0:	46bd      	mov	sp, r7
 80080c2:	bd80      	pop	{r7, pc}

080080c4 <I2C_WaitOnSTOPRequestThroughIT>:
 80080c4:	b480      	push	{r7}
 80080c6:	b085      	sub	sp, #20
 80080c8:	af00      	add	r7, sp, #0
 80080ca:	6078      	str	r0, [r7, #4]
 80080cc:	2300      	movs	r3, #0
 80080ce:	60fb      	str	r3, [r7, #12]
 80080d0:	4b13      	ldr	r3, [pc, #76]	; (8008120 <I2C_WaitOnSTOPRequestThroughIT+0x5c>)
 80080d2:	681b      	ldr	r3, [r3, #0]
 80080d4:	08db      	lsrs	r3, r3, #3
 80080d6:	4a13      	ldr	r2, [pc, #76]	; (8008124 <I2C_WaitOnSTOPRequestThroughIT+0x60>)
 80080d8:	fba2 2303 	umull	r2, r3, r2, r3
 80080dc:	0a1a      	lsrs	r2, r3, #8
 80080de:	4613      	mov	r3, r2
 80080e0:	009b      	lsls	r3, r3, #2
 80080e2:	4413      	add	r3, r2
 80080e4:	60fb      	str	r3, [r7, #12]
 80080e6:	68fb      	ldr	r3, [r7, #12]
 80080e8:	3b01      	subs	r3, #1
 80080ea:	60fb      	str	r3, [r7, #12]
 80080ec:	68fb      	ldr	r3, [r7, #12]
 80080ee:	2b00      	cmp	r3, #0
 80080f0:	d107      	bne.n	8008102 <I2C_WaitOnSTOPRequestThroughIT+0x3e>
 80080f2:	687b      	ldr	r3, [r7, #4]
 80080f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80080f6:	f043 0220 	orr.w	r2, r3, #32
 80080fa:	687b      	ldr	r3, [r7, #4]
 80080fc:	641a      	str	r2, [r3, #64]	; 0x40
 80080fe:	2301      	movs	r3, #1
 8008100:	e008      	b.n	8008114 <I2C_WaitOnSTOPRequestThroughIT+0x50>
 8008102:	687b      	ldr	r3, [r7, #4]
 8008104:	681b      	ldr	r3, [r3, #0]
 8008106:	681b      	ldr	r3, [r3, #0]
 8008108:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800810c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008110:	d0e9      	beq.n	80080e6 <I2C_WaitOnSTOPRequestThroughIT+0x22>
 8008112:	2300      	movs	r3, #0
 8008114:	4618      	mov	r0, r3
 8008116:	3714      	adds	r7, #20
 8008118:	46bd      	mov	sp, r7
 800811a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800811e:	4770      	bx	lr
 8008120:	20000140 	.word	0x20000140
 8008124:	14f8b589 	.word	0x14f8b589

08008128 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8008128:	b580      	push	{r7, lr}
 800812a:	b084      	sub	sp, #16
 800812c:	af00      	add	r7, sp, #0
 800812e:	60f8      	str	r0, [r7, #12]
 8008130:	60b9      	str	r1, [r7, #8]
 8008132:	607a      	str	r2, [r7, #4]
 8008134:	e042      	b.n	80081bc <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 8008136:	68fb      	ldr	r3, [r7, #12]
 8008138:	681b      	ldr	r3, [r3, #0]
 800813a:	695b      	ldr	r3, [r3, #20]
 800813c:	f003 0310 	and.w	r3, r3, #16
 8008140:	2b10      	cmp	r3, #16
 8008142:	d119      	bne.n	8008178 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8008144:	68fb      	ldr	r3, [r7, #12]
 8008146:	681b      	ldr	r3, [r3, #0]
 8008148:	f06f 0210 	mvn.w	r2, #16
 800814c:	615a      	str	r2, [r3, #20]
 800814e:	68fb      	ldr	r3, [r7, #12]
 8008150:	2200      	movs	r2, #0
 8008152:	631a      	str	r2, [r3, #48]	; 0x30
 8008154:	68fb      	ldr	r3, [r7, #12]
 8008156:	2220      	movs	r2, #32
 8008158:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800815c:	68fb      	ldr	r3, [r7, #12]
 800815e:	2200      	movs	r2, #0
 8008160:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008164:	68fb      	ldr	r3, [r7, #12]
 8008166:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008168:	68fb      	ldr	r3, [r7, #12]
 800816a:	641a      	str	r2, [r3, #64]	; 0x40
 800816c:	68fb      	ldr	r3, [r7, #12]
 800816e:	2200      	movs	r2, #0
 8008170:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008174:	2301      	movs	r3, #1
 8008176:	e029      	b.n	80081cc <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 8008178:	f7fc fd0a 	bl	8004b90 <HAL_GetTick>
 800817c:	4602      	mov	r2, r0
 800817e:	687b      	ldr	r3, [r7, #4]
 8008180:	1ad3      	subs	r3, r2, r3
 8008182:	68ba      	ldr	r2, [r7, #8]
 8008184:	429a      	cmp	r2, r3
 8008186:	d302      	bcc.n	800818e <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8008188:	68bb      	ldr	r3, [r7, #8]
 800818a:	2b00      	cmp	r3, #0
 800818c:	d116      	bne.n	80081bc <I2C_WaitOnRXNEFlagUntilTimeout+0x94>
 800818e:	68fb      	ldr	r3, [r7, #12]
 8008190:	2200      	movs	r2, #0
 8008192:	631a      	str	r2, [r3, #48]	; 0x30
 8008194:	68fb      	ldr	r3, [r7, #12]
 8008196:	2220      	movs	r2, #32
 8008198:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800819c:	68fb      	ldr	r3, [r7, #12]
 800819e:	2200      	movs	r2, #0
 80081a0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80081a4:	68fb      	ldr	r3, [r7, #12]
 80081a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80081a8:	f043 0220 	orr.w	r2, r3, #32
 80081ac:	68fb      	ldr	r3, [r7, #12]
 80081ae:	641a      	str	r2, [r3, #64]	; 0x40
 80081b0:	68fb      	ldr	r3, [r7, #12]
 80081b2:	2200      	movs	r2, #0
 80081b4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80081b8:	2301      	movs	r3, #1
 80081ba:	e007      	b.n	80081cc <I2C_WaitOnRXNEFlagUntilTimeout+0xa4>
 80081bc:	68fb      	ldr	r3, [r7, #12]
 80081be:	681b      	ldr	r3, [r3, #0]
 80081c0:	695b      	ldr	r3, [r3, #20]
 80081c2:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80081c6:	2b40      	cmp	r3, #64	; 0x40
 80081c8:	d1b5      	bne.n	8008136 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 80081ca:	2300      	movs	r3, #0
 80081cc:	4618      	mov	r0, r3
 80081ce:	3710      	adds	r7, #16
 80081d0:	46bd      	mov	sp, r7
 80081d2:	bd80      	pop	{r7, pc}

080081d4 <I2C_IsAcknowledgeFailed>:
 80081d4:	b480      	push	{r7}
 80081d6:	b083      	sub	sp, #12
 80081d8:	af00      	add	r7, sp, #0
 80081da:	6078      	str	r0, [r7, #4]
 80081dc:	687b      	ldr	r3, [r7, #4]
 80081de:	681b      	ldr	r3, [r3, #0]
 80081e0:	695b      	ldr	r3, [r3, #20]
 80081e2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80081e6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80081ea:	d11b      	bne.n	8008224 <I2C_IsAcknowledgeFailed+0x50>
 80081ec:	687b      	ldr	r3, [r7, #4]
 80081ee:	681b      	ldr	r3, [r3, #0]
 80081f0:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 80081f4:	615a      	str	r2, [r3, #20]
 80081f6:	687b      	ldr	r3, [r7, #4]
 80081f8:	2200      	movs	r2, #0
 80081fa:	631a      	str	r2, [r3, #48]	; 0x30
 80081fc:	687b      	ldr	r3, [r7, #4]
 80081fe:	2220      	movs	r2, #32
 8008200:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008204:	687b      	ldr	r3, [r7, #4]
 8008206:	2200      	movs	r2, #0
 8008208:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800820c:	687b      	ldr	r3, [r7, #4]
 800820e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008210:	f043 0204 	orr.w	r2, r3, #4
 8008214:	687b      	ldr	r3, [r7, #4]
 8008216:	641a      	str	r2, [r3, #64]	; 0x40
 8008218:	687b      	ldr	r3, [r7, #4]
 800821a:	2200      	movs	r2, #0
 800821c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008220:	2301      	movs	r3, #1
 8008222:	e000      	b.n	8008226 <I2C_IsAcknowledgeFailed+0x52>
 8008224:	2300      	movs	r3, #0
 8008226:	4618      	mov	r0, r3
 8008228:	370c      	adds	r7, #12
 800822a:	46bd      	mov	sp, r7
 800822c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008230:	4770      	bx	lr

08008232 <I2C_ConvertOtherXferOptions>:
 8008232:	b480      	push	{r7}
 8008234:	b083      	sub	sp, #12
 8008236:	af00      	add	r7, sp, #0
 8008238:	6078      	str	r0, [r7, #4]
 800823a:	687b      	ldr	r3, [r7, #4]
 800823c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800823e:	f5b3 0f2a 	cmp.w	r3, #11141120	; 0xaa0000
 8008242:	d103      	bne.n	800824c <I2C_ConvertOtherXferOptions+0x1a>
 8008244:	687b      	ldr	r3, [r7, #4]
 8008246:	2201      	movs	r2, #1
 8008248:	62da      	str	r2, [r3, #44]	; 0x2c
 800824a:	e007      	b.n	800825c <I2C_ConvertOtherXferOptions+0x2a>
 800824c:	687b      	ldr	r3, [r7, #4]
 800824e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008250:	f1b3 4f2a 	cmp.w	r3, #2852126720	; 0xaa000000
 8008254:	d102      	bne.n	800825c <I2C_ConvertOtherXferOptions+0x2a>
 8008256:	687b      	ldr	r3, [r7, #4]
 8008258:	2208      	movs	r2, #8
 800825a:	62da      	str	r2, [r3, #44]	; 0x2c
 800825c:	bf00      	nop
 800825e:	370c      	adds	r7, #12
 8008260:	46bd      	mov	sp, r7
 8008262:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008266:	4770      	bx	lr

08008268 <HAL_RCC_OscConfig>:
 8008268:	b580      	push	{r7, lr}
 800826a:	b086      	sub	sp, #24
 800826c:	af00      	add	r7, sp, #0
 800826e:	6078      	str	r0, [r7, #4]
 8008270:	687b      	ldr	r3, [r7, #4]
 8008272:	2b00      	cmp	r3, #0
 8008274:	d101      	bne.n	800827a <HAL_RCC_OscConfig+0x12>
 8008276:	2301      	movs	r3, #1
 8008278:	e267      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 800827a:	687b      	ldr	r3, [r7, #4]
 800827c:	681b      	ldr	r3, [r3, #0]
 800827e:	f003 0301 	and.w	r3, r3, #1
 8008282:	2b00      	cmp	r3, #0
 8008284:	d075      	beq.n	8008372 <HAL_RCC_OscConfig+0x10a>
 8008286:	4b88      	ldr	r3, [pc, #544]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 8008288:	689b      	ldr	r3, [r3, #8]
 800828a:	f003 030c 	and.w	r3, r3, #12
 800828e:	2b04      	cmp	r3, #4
 8008290:	d00c      	beq.n	80082ac <HAL_RCC_OscConfig+0x44>
 8008292:	4b85      	ldr	r3, [pc, #532]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 8008294:	689b      	ldr	r3, [r3, #8]
 8008296:	f003 030c 	and.w	r3, r3, #12
 800829a:	2b08      	cmp	r3, #8
 800829c:	d112      	bne.n	80082c4 <HAL_RCC_OscConfig+0x5c>
 800829e:	4b82      	ldr	r3, [pc, #520]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 80082a0:	685b      	ldr	r3, [r3, #4]
 80082a2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80082a6:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 80082aa:	d10b      	bne.n	80082c4 <HAL_RCC_OscConfig+0x5c>
 80082ac:	4b7e      	ldr	r3, [pc, #504]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 80082ae:	681b      	ldr	r3, [r3, #0]
 80082b0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80082b4:	2b00      	cmp	r3, #0
 80082b6:	d05b      	beq.n	8008370 <HAL_RCC_OscConfig+0x108>
 80082b8:	687b      	ldr	r3, [r7, #4]
 80082ba:	685b      	ldr	r3, [r3, #4]
 80082bc:	2b00      	cmp	r3, #0
 80082be:	d157      	bne.n	8008370 <HAL_RCC_OscConfig+0x108>
 80082c0:	2301      	movs	r3, #1
 80082c2:	e242      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 80082c4:	687b      	ldr	r3, [r7, #4]
 80082c6:	685b      	ldr	r3, [r3, #4]
 80082c8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80082cc:	d106      	bne.n	80082dc <HAL_RCC_OscConfig+0x74>
 80082ce:	4b76      	ldr	r3, [pc, #472]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 80082d0:	681b      	ldr	r3, [r3, #0]
 80082d2:	4a75      	ldr	r2, [pc, #468]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 80082d4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80082d8:	6013      	str	r3, [r2, #0]
 80082da:	e01d      	b.n	8008318 <HAL_RCC_OscConfig+0xb0>
 80082dc:	687b      	ldr	r3, [r7, #4]
 80082de:	685b      	ldr	r3, [r3, #4]
 80082e0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80082e4:	d10c      	bne.n	8008300 <HAL_RCC_OscConfig+0x98>
 80082e6:	4b70      	ldr	r3, [pc, #448]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 80082e8:	681b      	ldr	r3, [r3, #0]
 80082ea:	4a6f      	ldr	r2, [pc, #444]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 80082ec:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80082f0:	6013      	str	r3, [r2, #0]
 80082f2:	4b6d      	ldr	r3, [pc, #436]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 80082f4:	681b      	ldr	r3, [r3, #0]
 80082f6:	4a6c      	ldr	r2, [pc, #432]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 80082f8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80082fc:	6013      	str	r3, [r2, #0]
 80082fe:	e00b      	b.n	8008318 <HAL_RCC_OscConfig+0xb0>
 8008300:	4b69      	ldr	r3, [pc, #420]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 8008302:	681b      	ldr	r3, [r3, #0]
 8008304:	4a68      	ldr	r2, [pc, #416]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 8008306:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800830a:	6013      	str	r3, [r2, #0]
 800830c:	4b66      	ldr	r3, [pc, #408]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 800830e:	681b      	ldr	r3, [r3, #0]
 8008310:	4a65      	ldr	r2, [pc, #404]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 8008312:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8008316:	6013      	str	r3, [r2, #0]
 8008318:	687b      	ldr	r3, [r7, #4]
 800831a:	685b      	ldr	r3, [r3, #4]
 800831c:	2b00      	cmp	r3, #0
 800831e:	d013      	beq.n	8008348 <HAL_RCC_OscConfig+0xe0>
 8008320:	f7fc fc36 	bl	8004b90 <HAL_GetTick>
 8008324:	6138      	str	r0, [r7, #16]
 8008326:	e008      	b.n	800833a <HAL_RCC_OscConfig+0xd2>
 8008328:	f7fc fc32 	bl	8004b90 <HAL_GetTick>
 800832c:	4602      	mov	r2, r0
 800832e:	693b      	ldr	r3, [r7, #16]
 8008330:	1ad3      	subs	r3, r2, r3
 8008332:	2b64      	cmp	r3, #100	; 0x64
 8008334:	d901      	bls.n	800833a <HAL_RCC_OscConfig+0xd2>
 8008336:	2303      	movs	r3, #3
 8008338:	e207      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 800833a:	4b5b      	ldr	r3, [pc, #364]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 800833c:	681b      	ldr	r3, [r3, #0]
 800833e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8008342:	2b00      	cmp	r3, #0
 8008344:	d0f0      	beq.n	8008328 <HAL_RCC_OscConfig+0xc0>
 8008346:	e014      	b.n	8008372 <HAL_RCC_OscConfig+0x10a>
 8008348:	f7fc fc22 	bl	8004b90 <HAL_GetTick>
 800834c:	6138      	str	r0, [r7, #16]
 800834e:	e008      	b.n	8008362 <HAL_RCC_OscConfig+0xfa>
 8008350:	f7fc fc1e 	bl	8004b90 <HAL_GetTick>
 8008354:	4602      	mov	r2, r0
 8008356:	693b      	ldr	r3, [r7, #16]
 8008358:	1ad3      	subs	r3, r2, r3
 800835a:	2b64      	cmp	r3, #100	; 0x64
 800835c:	d901      	bls.n	8008362 <HAL_RCC_OscConfig+0xfa>
 800835e:	2303      	movs	r3, #3
 8008360:	e1f3      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 8008362:	4b51      	ldr	r3, [pc, #324]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 8008364:	681b      	ldr	r3, [r3, #0]
 8008366:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800836a:	2b00      	cmp	r3, #0
 800836c:	d1f0      	bne.n	8008350 <HAL_RCC_OscConfig+0xe8>
 800836e:	e000      	b.n	8008372 <HAL_RCC_OscConfig+0x10a>
 8008370:	bf00      	nop
 8008372:	687b      	ldr	r3, [r7, #4]
 8008374:	681b      	ldr	r3, [r3, #0]
 8008376:	f003 0302 	and.w	r3, r3, #2
 800837a:	2b00      	cmp	r3, #0
 800837c:	d063      	beq.n	8008446 <HAL_RCC_OscConfig+0x1de>
 800837e:	4b4a      	ldr	r3, [pc, #296]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 8008380:	689b      	ldr	r3, [r3, #8]
 8008382:	f003 030c 	and.w	r3, r3, #12
 8008386:	2b00      	cmp	r3, #0
 8008388:	d00b      	beq.n	80083a2 <HAL_RCC_OscConfig+0x13a>
 800838a:	4b47      	ldr	r3, [pc, #284]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 800838c:	689b      	ldr	r3, [r3, #8]
 800838e:	f003 030c 	and.w	r3, r3, #12
 8008392:	2b08      	cmp	r3, #8
 8008394:	d11c      	bne.n	80083d0 <HAL_RCC_OscConfig+0x168>
 8008396:	4b44      	ldr	r3, [pc, #272]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 8008398:	685b      	ldr	r3, [r3, #4]
 800839a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800839e:	2b00      	cmp	r3, #0
 80083a0:	d116      	bne.n	80083d0 <HAL_RCC_OscConfig+0x168>
 80083a2:	4b41      	ldr	r3, [pc, #260]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 80083a4:	681b      	ldr	r3, [r3, #0]
 80083a6:	f003 0302 	and.w	r3, r3, #2
 80083aa:	2b00      	cmp	r3, #0
 80083ac:	d005      	beq.n	80083ba <HAL_RCC_OscConfig+0x152>
 80083ae:	687b      	ldr	r3, [r7, #4]
 80083b0:	68db      	ldr	r3, [r3, #12]
 80083b2:	2b01      	cmp	r3, #1
 80083b4:	d001      	beq.n	80083ba <HAL_RCC_OscConfig+0x152>
 80083b6:	2301      	movs	r3, #1
 80083b8:	e1c7      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 80083ba:	4b3b      	ldr	r3, [pc, #236]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 80083bc:	681b      	ldr	r3, [r3, #0]
 80083be:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80083c2:	687b      	ldr	r3, [r7, #4]
 80083c4:	691b      	ldr	r3, [r3, #16]
 80083c6:	00db      	lsls	r3, r3, #3
 80083c8:	4937      	ldr	r1, [pc, #220]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 80083ca:	4313      	orrs	r3, r2
 80083cc:	600b      	str	r3, [r1, #0]
 80083ce:	e03a      	b.n	8008446 <HAL_RCC_OscConfig+0x1de>
 80083d0:	687b      	ldr	r3, [r7, #4]
 80083d2:	68db      	ldr	r3, [r3, #12]
 80083d4:	2b00      	cmp	r3, #0
 80083d6:	d020      	beq.n	800841a <HAL_RCC_OscConfig+0x1b2>
 80083d8:	4b34      	ldr	r3, [pc, #208]	; (80084ac <HAL_RCC_OscConfig+0x244>)
 80083da:	2201      	movs	r2, #1
 80083dc:	601a      	str	r2, [r3, #0]
 80083de:	f7fc fbd7 	bl	8004b90 <HAL_GetTick>
 80083e2:	6138      	str	r0, [r7, #16]
 80083e4:	e008      	b.n	80083f8 <HAL_RCC_OscConfig+0x190>
 80083e6:	f7fc fbd3 	bl	8004b90 <HAL_GetTick>
 80083ea:	4602      	mov	r2, r0
 80083ec:	693b      	ldr	r3, [r7, #16]
 80083ee:	1ad3      	subs	r3, r2, r3
 80083f0:	2b02      	cmp	r3, #2
 80083f2:	d901      	bls.n	80083f8 <HAL_RCC_OscConfig+0x190>
 80083f4:	2303      	movs	r3, #3
 80083f6:	e1a8      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 80083f8:	4b2b      	ldr	r3, [pc, #172]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 80083fa:	681b      	ldr	r3, [r3, #0]
 80083fc:	f003 0302 	and.w	r3, r3, #2
 8008400:	2b00      	cmp	r3, #0
 8008402:	d0f0      	beq.n	80083e6 <HAL_RCC_OscConfig+0x17e>
 8008404:	4b28      	ldr	r3, [pc, #160]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 8008406:	681b      	ldr	r3, [r3, #0]
 8008408:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800840c:	687b      	ldr	r3, [r7, #4]
 800840e:	691b      	ldr	r3, [r3, #16]
 8008410:	00db      	lsls	r3, r3, #3
 8008412:	4925      	ldr	r1, [pc, #148]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 8008414:	4313      	orrs	r3, r2
 8008416:	600b      	str	r3, [r1, #0]
 8008418:	e015      	b.n	8008446 <HAL_RCC_OscConfig+0x1de>
 800841a:	4b24      	ldr	r3, [pc, #144]	; (80084ac <HAL_RCC_OscConfig+0x244>)
 800841c:	2200      	movs	r2, #0
 800841e:	601a      	str	r2, [r3, #0]
 8008420:	f7fc fbb6 	bl	8004b90 <HAL_GetTick>
 8008424:	6138      	str	r0, [r7, #16]
 8008426:	e008      	b.n	800843a <HAL_RCC_OscConfig+0x1d2>
 8008428:	f7fc fbb2 	bl	8004b90 <HAL_GetTick>
 800842c:	4602      	mov	r2, r0
 800842e:	693b      	ldr	r3, [r7, #16]
 8008430:	1ad3      	subs	r3, r2, r3
 8008432:	2b02      	cmp	r3, #2
 8008434:	d901      	bls.n	800843a <HAL_RCC_OscConfig+0x1d2>
 8008436:	2303      	movs	r3, #3
 8008438:	e187      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 800843a:	4b1b      	ldr	r3, [pc, #108]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 800843c:	681b      	ldr	r3, [r3, #0]
 800843e:	f003 0302 	and.w	r3, r3, #2
 8008442:	2b00      	cmp	r3, #0
 8008444:	d1f0      	bne.n	8008428 <HAL_RCC_OscConfig+0x1c0>
 8008446:	687b      	ldr	r3, [r7, #4]
 8008448:	681b      	ldr	r3, [r3, #0]
 800844a:	f003 0308 	and.w	r3, r3, #8
 800844e:	2b00      	cmp	r3, #0
 8008450:	d036      	beq.n	80084c0 <HAL_RCC_OscConfig+0x258>
 8008452:	687b      	ldr	r3, [r7, #4]
 8008454:	695b      	ldr	r3, [r3, #20]
 8008456:	2b00      	cmp	r3, #0
 8008458:	d016      	beq.n	8008488 <HAL_RCC_OscConfig+0x220>
 800845a:	4b15      	ldr	r3, [pc, #84]	; (80084b0 <HAL_RCC_OscConfig+0x248>)
 800845c:	2201      	movs	r2, #1
 800845e:	601a      	str	r2, [r3, #0]
 8008460:	f7fc fb96 	bl	8004b90 <HAL_GetTick>
 8008464:	6138      	str	r0, [r7, #16]
 8008466:	e008      	b.n	800847a <HAL_RCC_OscConfig+0x212>
 8008468:	f7fc fb92 	bl	8004b90 <HAL_GetTick>
 800846c:	4602      	mov	r2, r0
 800846e:	693b      	ldr	r3, [r7, #16]
 8008470:	1ad3      	subs	r3, r2, r3
 8008472:	2b02      	cmp	r3, #2
 8008474:	d901      	bls.n	800847a <HAL_RCC_OscConfig+0x212>
 8008476:	2303      	movs	r3, #3
 8008478:	e167      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 800847a:	4b0b      	ldr	r3, [pc, #44]	; (80084a8 <HAL_RCC_OscConfig+0x240>)
 800847c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800847e:	f003 0302 	and.w	r3, r3, #2
 8008482:	2b00      	cmp	r3, #0
 8008484:	d0f0      	beq.n	8008468 <HAL_RCC_OscConfig+0x200>
 8008486:	e01b      	b.n	80084c0 <HAL_RCC_OscConfig+0x258>
 8008488:	4b09      	ldr	r3, [pc, #36]	; (80084b0 <HAL_RCC_OscConfig+0x248>)
 800848a:	2200      	movs	r2, #0
 800848c:	601a      	str	r2, [r3, #0]
 800848e:	f7fc fb7f 	bl	8004b90 <HAL_GetTick>
 8008492:	6138      	str	r0, [r7, #16]
 8008494:	e00e      	b.n	80084b4 <HAL_RCC_OscConfig+0x24c>
 8008496:	f7fc fb7b 	bl	8004b90 <HAL_GetTick>
 800849a:	4602      	mov	r2, r0
 800849c:	693b      	ldr	r3, [r7, #16]
 800849e:	1ad3      	subs	r3, r2, r3
 80084a0:	2b02      	cmp	r3, #2
 80084a2:	d907      	bls.n	80084b4 <HAL_RCC_OscConfig+0x24c>
 80084a4:	2303      	movs	r3, #3
 80084a6:	e150      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 80084a8:	40023800 	.word	0x40023800
 80084ac:	42470000 	.word	0x42470000
 80084b0:	42470e80 	.word	0x42470e80
 80084b4:	4b88      	ldr	r3, [pc, #544]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 80084b6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80084b8:	f003 0302 	and.w	r3, r3, #2
 80084bc:	2b00      	cmp	r3, #0
 80084be:	d1ea      	bne.n	8008496 <HAL_RCC_OscConfig+0x22e>
 80084c0:	687b      	ldr	r3, [r7, #4]
 80084c2:	681b      	ldr	r3, [r3, #0]
 80084c4:	f003 0304 	and.w	r3, r3, #4
 80084c8:	2b00      	cmp	r3, #0
 80084ca:	f000 8097 	beq.w	80085fc <HAL_RCC_OscConfig+0x394>
 80084ce:	2300      	movs	r3, #0
 80084d0:	75fb      	strb	r3, [r7, #23]
 80084d2:	4b81      	ldr	r3, [pc, #516]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 80084d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80084d6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80084da:	2b00      	cmp	r3, #0
 80084dc:	d10f      	bne.n	80084fe <HAL_RCC_OscConfig+0x296>
 80084de:	2300      	movs	r3, #0
 80084e0:	60bb      	str	r3, [r7, #8]
 80084e2:	4b7d      	ldr	r3, [pc, #500]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 80084e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80084e6:	4a7c      	ldr	r2, [pc, #496]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 80084e8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80084ec:	6413      	str	r3, [r2, #64]	; 0x40
 80084ee:	4b7a      	ldr	r3, [pc, #488]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 80084f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80084f2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80084f6:	60bb      	str	r3, [r7, #8]
 80084f8:	68bb      	ldr	r3, [r7, #8]
 80084fa:	2301      	movs	r3, #1
 80084fc:	75fb      	strb	r3, [r7, #23]
 80084fe:	4b77      	ldr	r3, [pc, #476]	; (80086dc <HAL_RCC_OscConfig+0x474>)
 8008500:	681b      	ldr	r3, [r3, #0]
 8008502:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008506:	2b00      	cmp	r3, #0
 8008508:	d118      	bne.n	800853c <HAL_RCC_OscConfig+0x2d4>
 800850a:	4b74      	ldr	r3, [pc, #464]	; (80086dc <HAL_RCC_OscConfig+0x474>)
 800850c:	681b      	ldr	r3, [r3, #0]
 800850e:	4a73      	ldr	r2, [pc, #460]	; (80086dc <HAL_RCC_OscConfig+0x474>)
 8008510:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008514:	6013      	str	r3, [r2, #0]
 8008516:	f7fc fb3b 	bl	8004b90 <HAL_GetTick>
 800851a:	6138      	str	r0, [r7, #16]
 800851c:	e008      	b.n	8008530 <HAL_RCC_OscConfig+0x2c8>
 800851e:	f7fc fb37 	bl	8004b90 <HAL_GetTick>
 8008522:	4602      	mov	r2, r0
 8008524:	693b      	ldr	r3, [r7, #16]
 8008526:	1ad3      	subs	r3, r2, r3
 8008528:	2b02      	cmp	r3, #2
 800852a:	d901      	bls.n	8008530 <HAL_RCC_OscConfig+0x2c8>
 800852c:	2303      	movs	r3, #3
 800852e:	e10c      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 8008530:	4b6a      	ldr	r3, [pc, #424]	; (80086dc <HAL_RCC_OscConfig+0x474>)
 8008532:	681b      	ldr	r3, [r3, #0]
 8008534:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008538:	2b00      	cmp	r3, #0
 800853a:	d0f0      	beq.n	800851e <HAL_RCC_OscConfig+0x2b6>
 800853c:	687b      	ldr	r3, [r7, #4]
 800853e:	689b      	ldr	r3, [r3, #8]
 8008540:	2b01      	cmp	r3, #1
 8008542:	d106      	bne.n	8008552 <HAL_RCC_OscConfig+0x2ea>
 8008544:	4b64      	ldr	r3, [pc, #400]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 8008546:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008548:	4a63      	ldr	r2, [pc, #396]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 800854a:	f043 0301 	orr.w	r3, r3, #1
 800854e:	6713      	str	r3, [r2, #112]	; 0x70
 8008550:	e01c      	b.n	800858c <HAL_RCC_OscConfig+0x324>
 8008552:	687b      	ldr	r3, [r7, #4]
 8008554:	689b      	ldr	r3, [r3, #8]
 8008556:	2b05      	cmp	r3, #5
 8008558:	d10c      	bne.n	8008574 <HAL_RCC_OscConfig+0x30c>
 800855a:	4b5f      	ldr	r3, [pc, #380]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 800855c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800855e:	4a5e      	ldr	r2, [pc, #376]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 8008560:	f043 0304 	orr.w	r3, r3, #4
 8008564:	6713      	str	r3, [r2, #112]	; 0x70
 8008566:	4b5c      	ldr	r3, [pc, #368]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 8008568:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800856a:	4a5b      	ldr	r2, [pc, #364]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 800856c:	f043 0301 	orr.w	r3, r3, #1
 8008570:	6713      	str	r3, [r2, #112]	; 0x70
 8008572:	e00b      	b.n	800858c <HAL_RCC_OscConfig+0x324>
 8008574:	4b58      	ldr	r3, [pc, #352]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 8008576:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008578:	4a57      	ldr	r2, [pc, #348]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 800857a:	f023 0301 	bic.w	r3, r3, #1
 800857e:	6713      	str	r3, [r2, #112]	; 0x70
 8008580:	4b55      	ldr	r3, [pc, #340]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 8008582:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008584:	4a54      	ldr	r2, [pc, #336]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 8008586:	f023 0304 	bic.w	r3, r3, #4
 800858a:	6713      	str	r3, [r2, #112]	; 0x70
 800858c:	687b      	ldr	r3, [r7, #4]
 800858e:	689b      	ldr	r3, [r3, #8]
 8008590:	2b00      	cmp	r3, #0
 8008592:	d015      	beq.n	80085c0 <HAL_RCC_OscConfig+0x358>
 8008594:	f7fc fafc 	bl	8004b90 <HAL_GetTick>
 8008598:	6138      	str	r0, [r7, #16]
 800859a:	e00a      	b.n	80085b2 <HAL_RCC_OscConfig+0x34a>
 800859c:	f7fc faf8 	bl	8004b90 <HAL_GetTick>
 80085a0:	4602      	mov	r2, r0
 80085a2:	693b      	ldr	r3, [r7, #16]
 80085a4:	1ad3      	subs	r3, r2, r3
 80085a6:	f241 3288 	movw	r2, #5000	; 0x1388
 80085aa:	4293      	cmp	r3, r2
 80085ac:	d901      	bls.n	80085b2 <HAL_RCC_OscConfig+0x34a>
 80085ae:	2303      	movs	r3, #3
 80085b0:	e0cb      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 80085b2:	4b49      	ldr	r3, [pc, #292]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 80085b4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80085b6:	f003 0302 	and.w	r3, r3, #2
 80085ba:	2b00      	cmp	r3, #0
 80085bc:	d0ee      	beq.n	800859c <HAL_RCC_OscConfig+0x334>
 80085be:	e014      	b.n	80085ea <HAL_RCC_OscConfig+0x382>
 80085c0:	f7fc fae6 	bl	8004b90 <HAL_GetTick>
 80085c4:	6138      	str	r0, [r7, #16]
 80085c6:	e00a      	b.n	80085de <HAL_RCC_OscConfig+0x376>
 80085c8:	f7fc fae2 	bl	8004b90 <HAL_GetTick>
 80085cc:	4602      	mov	r2, r0
 80085ce:	693b      	ldr	r3, [r7, #16]
 80085d0:	1ad3      	subs	r3, r2, r3
 80085d2:	f241 3288 	movw	r2, #5000	; 0x1388
 80085d6:	4293      	cmp	r3, r2
 80085d8:	d901      	bls.n	80085de <HAL_RCC_OscConfig+0x376>
 80085da:	2303      	movs	r3, #3
 80085dc:	e0b5      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 80085de:	4b3e      	ldr	r3, [pc, #248]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 80085e0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80085e2:	f003 0302 	and.w	r3, r3, #2
 80085e6:	2b00      	cmp	r3, #0
 80085e8:	d1ee      	bne.n	80085c8 <HAL_RCC_OscConfig+0x360>
 80085ea:	7dfb      	ldrb	r3, [r7, #23]
 80085ec:	2b01      	cmp	r3, #1
 80085ee:	d105      	bne.n	80085fc <HAL_RCC_OscConfig+0x394>
 80085f0:	4b39      	ldr	r3, [pc, #228]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 80085f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80085f4:	4a38      	ldr	r2, [pc, #224]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 80085f6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80085fa:	6413      	str	r3, [r2, #64]	; 0x40
 80085fc:	687b      	ldr	r3, [r7, #4]
 80085fe:	699b      	ldr	r3, [r3, #24]
 8008600:	2b00      	cmp	r3, #0
 8008602:	f000 80a1 	beq.w	8008748 <HAL_RCC_OscConfig+0x4e0>
 8008606:	4b34      	ldr	r3, [pc, #208]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 8008608:	689b      	ldr	r3, [r3, #8]
 800860a:	f003 030c 	and.w	r3, r3, #12
 800860e:	2b08      	cmp	r3, #8
 8008610:	d05c      	beq.n	80086cc <HAL_RCC_OscConfig+0x464>
 8008612:	687b      	ldr	r3, [r7, #4]
 8008614:	699b      	ldr	r3, [r3, #24]
 8008616:	2b02      	cmp	r3, #2
 8008618:	d141      	bne.n	800869e <HAL_RCC_OscConfig+0x436>
 800861a:	4b31      	ldr	r3, [pc, #196]	; (80086e0 <HAL_RCC_OscConfig+0x478>)
 800861c:	2200      	movs	r2, #0
 800861e:	601a      	str	r2, [r3, #0]
 8008620:	f7fc fab6 	bl	8004b90 <HAL_GetTick>
 8008624:	6138      	str	r0, [r7, #16]
 8008626:	e008      	b.n	800863a <HAL_RCC_OscConfig+0x3d2>
 8008628:	f7fc fab2 	bl	8004b90 <HAL_GetTick>
 800862c:	4602      	mov	r2, r0
 800862e:	693b      	ldr	r3, [r7, #16]
 8008630:	1ad3      	subs	r3, r2, r3
 8008632:	2b02      	cmp	r3, #2
 8008634:	d901      	bls.n	800863a <HAL_RCC_OscConfig+0x3d2>
 8008636:	2303      	movs	r3, #3
 8008638:	e087      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 800863a:	4b27      	ldr	r3, [pc, #156]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 800863c:	681b      	ldr	r3, [r3, #0]
 800863e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008642:	2b00      	cmp	r3, #0
 8008644:	d1f0      	bne.n	8008628 <HAL_RCC_OscConfig+0x3c0>
 8008646:	687b      	ldr	r3, [r7, #4]
 8008648:	69da      	ldr	r2, [r3, #28]
 800864a:	687b      	ldr	r3, [r7, #4]
 800864c:	6a1b      	ldr	r3, [r3, #32]
 800864e:	431a      	orrs	r2, r3
 8008650:	687b      	ldr	r3, [r7, #4]
 8008652:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008654:	019b      	lsls	r3, r3, #6
 8008656:	431a      	orrs	r2, r3
 8008658:	687b      	ldr	r3, [r7, #4]
 800865a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800865c:	085b      	lsrs	r3, r3, #1
 800865e:	3b01      	subs	r3, #1
 8008660:	041b      	lsls	r3, r3, #16
 8008662:	431a      	orrs	r2, r3
 8008664:	687b      	ldr	r3, [r7, #4]
 8008666:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008668:	061b      	lsls	r3, r3, #24
 800866a:	491b      	ldr	r1, [pc, #108]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 800866c:	4313      	orrs	r3, r2
 800866e:	604b      	str	r3, [r1, #4]
 8008670:	4b1b      	ldr	r3, [pc, #108]	; (80086e0 <HAL_RCC_OscConfig+0x478>)
 8008672:	2201      	movs	r2, #1
 8008674:	601a      	str	r2, [r3, #0]
 8008676:	f7fc fa8b 	bl	8004b90 <HAL_GetTick>
 800867a:	6138      	str	r0, [r7, #16]
 800867c:	e008      	b.n	8008690 <HAL_RCC_OscConfig+0x428>
 800867e:	f7fc fa87 	bl	8004b90 <HAL_GetTick>
 8008682:	4602      	mov	r2, r0
 8008684:	693b      	ldr	r3, [r7, #16]
 8008686:	1ad3      	subs	r3, r2, r3
 8008688:	2b02      	cmp	r3, #2
 800868a:	d901      	bls.n	8008690 <HAL_RCC_OscConfig+0x428>
 800868c:	2303      	movs	r3, #3
 800868e:	e05c      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 8008690:	4b11      	ldr	r3, [pc, #68]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 8008692:	681b      	ldr	r3, [r3, #0]
 8008694:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008698:	2b00      	cmp	r3, #0
 800869a:	d0f0      	beq.n	800867e <HAL_RCC_OscConfig+0x416>
 800869c:	e054      	b.n	8008748 <HAL_RCC_OscConfig+0x4e0>
 800869e:	4b10      	ldr	r3, [pc, #64]	; (80086e0 <HAL_RCC_OscConfig+0x478>)
 80086a0:	2200      	movs	r2, #0
 80086a2:	601a      	str	r2, [r3, #0]
 80086a4:	f7fc fa74 	bl	8004b90 <HAL_GetTick>
 80086a8:	6138      	str	r0, [r7, #16]
 80086aa:	e008      	b.n	80086be <HAL_RCC_OscConfig+0x456>
 80086ac:	f7fc fa70 	bl	8004b90 <HAL_GetTick>
 80086b0:	4602      	mov	r2, r0
 80086b2:	693b      	ldr	r3, [r7, #16]
 80086b4:	1ad3      	subs	r3, r2, r3
 80086b6:	2b02      	cmp	r3, #2
 80086b8:	d901      	bls.n	80086be <HAL_RCC_OscConfig+0x456>
 80086ba:	2303      	movs	r3, #3
 80086bc:	e045      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 80086be:	4b06      	ldr	r3, [pc, #24]	; (80086d8 <HAL_RCC_OscConfig+0x470>)
 80086c0:	681b      	ldr	r3, [r3, #0]
 80086c2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80086c6:	2b00      	cmp	r3, #0
 80086c8:	d1f0      	bne.n	80086ac <HAL_RCC_OscConfig+0x444>
 80086ca:	e03d      	b.n	8008748 <HAL_RCC_OscConfig+0x4e0>
 80086cc:	687b      	ldr	r3, [r7, #4]
 80086ce:	699b      	ldr	r3, [r3, #24]
 80086d0:	2b01      	cmp	r3, #1
 80086d2:	d107      	bne.n	80086e4 <HAL_RCC_OscConfig+0x47c>
 80086d4:	2301      	movs	r3, #1
 80086d6:	e038      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 80086d8:	40023800 	.word	0x40023800
 80086dc:	40007000 	.word	0x40007000
 80086e0:	42470060 	.word	0x42470060
 80086e4:	4b1b      	ldr	r3, [pc, #108]	; (8008754 <HAL_RCC_OscConfig+0x4ec>)
 80086e6:	685b      	ldr	r3, [r3, #4]
 80086e8:	60fb      	str	r3, [r7, #12]
 80086ea:	687b      	ldr	r3, [r7, #4]
 80086ec:	699b      	ldr	r3, [r3, #24]
 80086ee:	2b01      	cmp	r3, #1
 80086f0:	d028      	beq.n	8008744 <HAL_RCC_OscConfig+0x4dc>
 80086f2:	68fb      	ldr	r3, [r7, #12]
 80086f4:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80086f8:	687b      	ldr	r3, [r7, #4]
 80086fa:	69db      	ldr	r3, [r3, #28]
 80086fc:	429a      	cmp	r2, r3
 80086fe:	d121      	bne.n	8008744 <HAL_RCC_OscConfig+0x4dc>
 8008700:	68fb      	ldr	r3, [r7, #12]
 8008702:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8008706:	687b      	ldr	r3, [r7, #4]
 8008708:	6a1b      	ldr	r3, [r3, #32]
 800870a:	429a      	cmp	r2, r3
 800870c:	d11a      	bne.n	8008744 <HAL_RCC_OscConfig+0x4dc>
 800870e:	68fa      	ldr	r2, [r7, #12]
 8008710:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8008714:	4013      	ands	r3, r2
 8008716:	687a      	ldr	r2, [r7, #4]
 8008718:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800871a:	0192      	lsls	r2, r2, #6
 800871c:	4293      	cmp	r3, r2
 800871e:	d111      	bne.n	8008744 <HAL_RCC_OscConfig+0x4dc>
 8008720:	68fb      	ldr	r3, [r7, #12]
 8008722:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8008726:	687b      	ldr	r3, [r7, #4]
 8008728:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800872a:	085b      	lsrs	r3, r3, #1
 800872c:	3b01      	subs	r3, #1
 800872e:	041b      	lsls	r3, r3, #16
 8008730:	429a      	cmp	r2, r3
 8008732:	d107      	bne.n	8008744 <HAL_RCC_OscConfig+0x4dc>
 8008734:	68fb      	ldr	r3, [r7, #12]
 8008736:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800873a:	687b      	ldr	r3, [r7, #4]
 800873c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800873e:	061b      	lsls	r3, r3, #24
 8008740:	429a      	cmp	r2, r3
 8008742:	d001      	beq.n	8008748 <HAL_RCC_OscConfig+0x4e0>
 8008744:	2301      	movs	r3, #1
 8008746:	e000      	b.n	800874a <HAL_RCC_OscConfig+0x4e2>
 8008748:	2300      	movs	r3, #0
 800874a:	4618      	mov	r0, r3
 800874c:	3718      	adds	r7, #24
 800874e:	46bd      	mov	sp, r7
 8008750:	bd80      	pop	{r7, pc}
 8008752:	bf00      	nop
 8008754:	40023800 	.word	0x40023800

08008758 <HAL_RCC_ClockConfig>:
 8008758:	b580      	push	{r7, lr}
 800875a:	b084      	sub	sp, #16
 800875c:	af00      	add	r7, sp, #0
 800875e:	6078      	str	r0, [r7, #4]
 8008760:	6039      	str	r1, [r7, #0]
 8008762:	687b      	ldr	r3, [r7, #4]
 8008764:	2b00      	cmp	r3, #0
 8008766:	d101      	bne.n	800876c <HAL_RCC_ClockConfig+0x14>
 8008768:	2301      	movs	r3, #1
 800876a:	e0cc      	b.n	8008906 <HAL_RCC_ClockConfig+0x1ae>
 800876c:	4b68      	ldr	r3, [pc, #416]	; (8008910 <HAL_RCC_ClockConfig+0x1b8>)
 800876e:	681b      	ldr	r3, [r3, #0]
 8008770:	f003 0307 	and.w	r3, r3, #7
 8008774:	683a      	ldr	r2, [r7, #0]
 8008776:	429a      	cmp	r2, r3
 8008778:	d90c      	bls.n	8008794 <HAL_RCC_ClockConfig+0x3c>
 800877a:	4b65      	ldr	r3, [pc, #404]	; (8008910 <HAL_RCC_ClockConfig+0x1b8>)
 800877c:	683a      	ldr	r2, [r7, #0]
 800877e:	b2d2      	uxtb	r2, r2
 8008780:	701a      	strb	r2, [r3, #0]
 8008782:	4b63      	ldr	r3, [pc, #396]	; (8008910 <HAL_RCC_ClockConfig+0x1b8>)
 8008784:	681b      	ldr	r3, [r3, #0]
 8008786:	f003 0307 	and.w	r3, r3, #7
 800878a:	683a      	ldr	r2, [r7, #0]
 800878c:	429a      	cmp	r2, r3
 800878e:	d001      	beq.n	8008794 <HAL_RCC_ClockConfig+0x3c>
 8008790:	2301      	movs	r3, #1
 8008792:	e0b8      	b.n	8008906 <HAL_RCC_ClockConfig+0x1ae>
 8008794:	687b      	ldr	r3, [r7, #4]
 8008796:	681b      	ldr	r3, [r3, #0]
 8008798:	f003 0302 	and.w	r3, r3, #2
 800879c:	2b00      	cmp	r3, #0
 800879e:	d020      	beq.n	80087e2 <HAL_RCC_ClockConfig+0x8a>
 80087a0:	687b      	ldr	r3, [r7, #4]
 80087a2:	681b      	ldr	r3, [r3, #0]
 80087a4:	f003 0304 	and.w	r3, r3, #4
 80087a8:	2b00      	cmp	r3, #0
 80087aa:	d005      	beq.n	80087b8 <HAL_RCC_ClockConfig+0x60>
 80087ac:	4b59      	ldr	r3, [pc, #356]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 80087ae:	689b      	ldr	r3, [r3, #8]
 80087b0:	4a58      	ldr	r2, [pc, #352]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 80087b2:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80087b6:	6093      	str	r3, [r2, #8]
 80087b8:	687b      	ldr	r3, [r7, #4]
 80087ba:	681b      	ldr	r3, [r3, #0]
 80087bc:	f003 0308 	and.w	r3, r3, #8
 80087c0:	2b00      	cmp	r3, #0
 80087c2:	d005      	beq.n	80087d0 <HAL_RCC_ClockConfig+0x78>
 80087c4:	4b53      	ldr	r3, [pc, #332]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 80087c6:	689b      	ldr	r3, [r3, #8]
 80087c8:	4a52      	ldr	r2, [pc, #328]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 80087ca:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80087ce:	6093      	str	r3, [r2, #8]
 80087d0:	4b50      	ldr	r3, [pc, #320]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 80087d2:	689b      	ldr	r3, [r3, #8]
 80087d4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80087d8:	687b      	ldr	r3, [r7, #4]
 80087da:	689b      	ldr	r3, [r3, #8]
 80087dc:	494d      	ldr	r1, [pc, #308]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 80087de:	4313      	orrs	r3, r2
 80087e0:	608b      	str	r3, [r1, #8]
 80087e2:	687b      	ldr	r3, [r7, #4]
 80087e4:	681b      	ldr	r3, [r3, #0]
 80087e6:	f003 0301 	and.w	r3, r3, #1
 80087ea:	2b00      	cmp	r3, #0
 80087ec:	d044      	beq.n	8008878 <HAL_RCC_ClockConfig+0x120>
 80087ee:	687b      	ldr	r3, [r7, #4]
 80087f0:	685b      	ldr	r3, [r3, #4]
 80087f2:	2b01      	cmp	r3, #1
 80087f4:	d107      	bne.n	8008806 <HAL_RCC_ClockConfig+0xae>
 80087f6:	4b47      	ldr	r3, [pc, #284]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 80087f8:	681b      	ldr	r3, [r3, #0]
 80087fa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80087fe:	2b00      	cmp	r3, #0
 8008800:	d119      	bne.n	8008836 <HAL_RCC_ClockConfig+0xde>
 8008802:	2301      	movs	r3, #1
 8008804:	e07f      	b.n	8008906 <HAL_RCC_ClockConfig+0x1ae>
 8008806:	687b      	ldr	r3, [r7, #4]
 8008808:	685b      	ldr	r3, [r3, #4]
 800880a:	2b02      	cmp	r3, #2
 800880c:	d003      	beq.n	8008816 <HAL_RCC_ClockConfig+0xbe>
 800880e:	687b      	ldr	r3, [r7, #4]
 8008810:	685b      	ldr	r3, [r3, #4]
 8008812:	2b03      	cmp	r3, #3
 8008814:	d107      	bne.n	8008826 <HAL_RCC_ClockConfig+0xce>
 8008816:	4b3f      	ldr	r3, [pc, #252]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 8008818:	681b      	ldr	r3, [r3, #0]
 800881a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800881e:	2b00      	cmp	r3, #0
 8008820:	d109      	bne.n	8008836 <HAL_RCC_ClockConfig+0xde>
 8008822:	2301      	movs	r3, #1
 8008824:	e06f      	b.n	8008906 <HAL_RCC_ClockConfig+0x1ae>
 8008826:	4b3b      	ldr	r3, [pc, #236]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 8008828:	681b      	ldr	r3, [r3, #0]
 800882a:	f003 0302 	and.w	r3, r3, #2
 800882e:	2b00      	cmp	r3, #0
 8008830:	d101      	bne.n	8008836 <HAL_RCC_ClockConfig+0xde>
 8008832:	2301      	movs	r3, #1
 8008834:	e067      	b.n	8008906 <HAL_RCC_ClockConfig+0x1ae>
 8008836:	4b37      	ldr	r3, [pc, #220]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 8008838:	689b      	ldr	r3, [r3, #8]
 800883a:	f023 0203 	bic.w	r2, r3, #3
 800883e:	687b      	ldr	r3, [r7, #4]
 8008840:	685b      	ldr	r3, [r3, #4]
 8008842:	4934      	ldr	r1, [pc, #208]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 8008844:	4313      	orrs	r3, r2
 8008846:	608b      	str	r3, [r1, #8]
 8008848:	f7fc f9a2 	bl	8004b90 <HAL_GetTick>
 800884c:	60f8      	str	r0, [r7, #12]
 800884e:	e00a      	b.n	8008866 <HAL_RCC_ClockConfig+0x10e>
 8008850:	f7fc f99e 	bl	8004b90 <HAL_GetTick>
 8008854:	4602      	mov	r2, r0
 8008856:	68fb      	ldr	r3, [r7, #12]
 8008858:	1ad3      	subs	r3, r2, r3
 800885a:	f241 3288 	movw	r2, #5000	; 0x1388
 800885e:	4293      	cmp	r3, r2
 8008860:	d901      	bls.n	8008866 <HAL_RCC_ClockConfig+0x10e>
 8008862:	2303      	movs	r3, #3
 8008864:	e04f      	b.n	8008906 <HAL_RCC_ClockConfig+0x1ae>
 8008866:	4b2b      	ldr	r3, [pc, #172]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 8008868:	689b      	ldr	r3, [r3, #8]
 800886a:	f003 020c 	and.w	r2, r3, #12
 800886e:	687b      	ldr	r3, [r7, #4]
 8008870:	685b      	ldr	r3, [r3, #4]
 8008872:	009b      	lsls	r3, r3, #2
 8008874:	429a      	cmp	r2, r3
 8008876:	d1eb      	bne.n	8008850 <HAL_RCC_ClockConfig+0xf8>
 8008878:	4b25      	ldr	r3, [pc, #148]	; (8008910 <HAL_RCC_ClockConfig+0x1b8>)
 800887a:	681b      	ldr	r3, [r3, #0]
 800887c:	f003 0307 	and.w	r3, r3, #7
 8008880:	683a      	ldr	r2, [r7, #0]
 8008882:	429a      	cmp	r2, r3
 8008884:	d20c      	bcs.n	80088a0 <HAL_RCC_ClockConfig+0x148>
 8008886:	4b22      	ldr	r3, [pc, #136]	; (8008910 <HAL_RCC_ClockConfig+0x1b8>)
 8008888:	683a      	ldr	r2, [r7, #0]
 800888a:	b2d2      	uxtb	r2, r2
 800888c:	701a      	strb	r2, [r3, #0]
 800888e:	4b20      	ldr	r3, [pc, #128]	; (8008910 <HAL_RCC_ClockConfig+0x1b8>)
 8008890:	681b      	ldr	r3, [r3, #0]
 8008892:	f003 0307 	and.w	r3, r3, #7
 8008896:	683a      	ldr	r2, [r7, #0]
 8008898:	429a      	cmp	r2, r3
 800889a:	d001      	beq.n	80088a0 <HAL_RCC_ClockConfig+0x148>
 800889c:	2301      	movs	r3, #1
 800889e:	e032      	b.n	8008906 <HAL_RCC_ClockConfig+0x1ae>
 80088a0:	687b      	ldr	r3, [r7, #4]
 80088a2:	681b      	ldr	r3, [r3, #0]
 80088a4:	f003 0304 	and.w	r3, r3, #4
 80088a8:	2b00      	cmp	r3, #0
 80088aa:	d008      	beq.n	80088be <HAL_RCC_ClockConfig+0x166>
 80088ac:	4b19      	ldr	r3, [pc, #100]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 80088ae:	689b      	ldr	r3, [r3, #8]
 80088b0:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80088b4:	687b      	ldr	r3, [r7, #4]
 80088b6:	68db      	ldr	r3, [r3, #12]
 80088b8:	4916      	ldr	r1, [pc, #88]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 80088ba:	4313      	orrs	r3, r2
 80088bc:	608b      	str	r3, [r1, #8]
 80088be:	687b      	ldr	r3, [r7, #4]
 80088c0:	681b      	ldr	r3, [r3, #0]
 80088c2:	f003 0308 	and.w	r3, r3, #8
 80088c6:	2b00      	cmp	r3, #0
 80088c8:	d009      	beq.n	80088de <HAL_RCC_ClockConfig+0x186>
 80088ca:	4b12      	ldr	r3, [pc, #72]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 80088cc:	689b      	ldr	r3, [r3, #8]
 80088ce:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80088d2:	687b      	ldr	r3, [r7, #4]
 80088d4:	691b      	ldr	r3, [r3, #16]
 80088d6:	00db      	lsls	r3, r3, #3
 80088d8:	490e      	ldr	r1, [pc, #56]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 80088da:	4313      	orrs	r3, r2
 80088dc:	608b      	str	r3, [r1, #8]
 80088de:	f000 f821 	bl	8008924 <HAL_RCC_GetSysClockFreq>
 80088e2:	4602      	mov	r2, r0
 80088e4:	4b0b      	ldr	r3, [pc, #44]	; (8008914 <HAL_RCC_ClockConfig+0x1bc>)
 80088e6:	689b      	ldr	r3, [r3, #8]
 80088e8:	091b      	lsrs	r3, r3, #4
 80088ea:	f003 030f 	and.w	r3, r3, #15
 80088ee:	490a      	ldr	r1, [pc, #40]	; (8008918 <HAL_RCC_ClockConfig+0x1c0>)
 80088f0:	5ccb      	ldrb	r3, [r1, r3]
 80088f2:	fa22 f303 	lsr.w	r3, r2, r3
 80088f6:	4a09      	ldr	r2, [pc, #36]	; (800891c <HAL_RCC_ClockConfig+0x1c4>)
 80088f8:	6013      	str	r3, [r2, #0]
 80088fa:	4b09      	ldr	r3, [pc, #36]	; (8008920 <HAL_RCC_ClockConfig+0x1c8>)
 80088fc:	681b      	ldr	r3, [r3, #0]
 80088fe:	4618      	mov	r0, r3
 8008900:	f7fc f902 	bl	8004b08 <HAL_InitTick>
 8008904:	2300      	movs	r3, #0
 8008906:	4618      	mov	r0, r3
 8008908:	3710      	adds	r7, #16
 800890a:	46bd      	mov	sp, r7
 800890c:	bd80      	pop	{r7, pc}
 800890e:	bf00      	nop
 8008910:	40023c00 	.word	0x40023c00
 8008914:	40023800 	.word	0x40023800
 8008918:	0800bcf8 	.word	0x0800bcf8
 800891c:	20000140 	.word	0x20000140
 8008920:	20000144 	.word	0x20000144

08008924 <HAL_RCC_GetSysClockFreq>:
 8008924:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8008928:	b094      	sub	sp, #80	; 0x50
 800892a:	af00      	add	r7, sp, #0
 800892c:	2300      	movs	r3, #0
 800892e:	647b      	str	r3, [r7, #68]	; 0x44
 8008930:	2300      	movs	r3, #0
 8008932:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008934:	2300      	movs	r3, #0
 8008936:	643b      	str	r3, [r7, #64]	; 0x40
 8008938:	2300      	movs	r3, #0
 800893a:	64bb      	str	r3, [r7, #72]	; 0x48
 800893c:	4b79      	ldr	r3, [pc, #484]	; (8008b24 <HAL_RCC_GetSysClockFreq+0x200>)
 800893e:	689b      	ldr	r3, [r3, #8]
 8008940:	f003 030c 	and.w	r3, r3, #12
 8008944:	2b08      	cmp	r3, #8
 8008946:	d00d      	beq.n	8008964 <HAL_RCC_GetSysClockFreq+0x40>
 8008948:	2b08      	cmp	r3, #8
 800894a:	f200 80e1 	bhi.w	8008b10 <HAL_RCC_GetSysClockFreq+0x1ec>
 800894e:	2b00      	cmp	r3, #0
 8008950:	d002      	beq.n	8008958 <HAL_RCC_GetSysClockFreq+0x34>
 8008952:	2b04      	cmp	r3, #4
 8008954:	d003      	beq.n	800895e <HAL_RCC_GetSysClockFreq+0x3a>
 8008956:	e0db      	b.n	8008b10 <HAL_RCC_GetSysClockFreq+0x1ec>
 8008958:	4b73      	ldr	r3, [pc, #460]	; (8008b28 <HAL_RCC_GetSysClockFreq+0x204>)
 800895a:	64bb      	str	r3, [r7, #72]	; 0x48
 800895c:	e0db      	b.n	8008b16 <HAL_RCC_GetSysClockFreq+0x1f2>
 800895e:	4b73      	ldr	r3, [pc, #460]	; (8008b2c <HAL_RCC_GetSysClockFreq+0x208>)
 8008960:	64bb      	str	r3, [r7, #72]	; 0x48
 8008962:	e0d8      	b.n	8008b16 <HAL_RCC_GetSysClockFreq+0x1f2>
 8008964:	4b6f      	ldr	r3, [pc, #444]	; (8008b24 <HAL_RCC_GetSysClockFreq+0x200>)
 8008966:	685b      	ldr	r3, [r3, #4]
 8008968:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800896c:	647b      	str	r3, [r7, #68]	; 0x44
 800896e:	4b6d      	ldr	r3, [pc, #436]	; (8008b24 <HAL_RCC_GetSysClockFreq+0x200>)
 8008970:	685b      	ldr	r3, [r3, #4]
 8008972:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8008976:	2b00      	cmp	r3, #0
 8008978:	d063      	beq.n	8008a42 <HAL_RCC_GetSysClockFreq+0x11e>
 800897a:	4b6a      	ldr	r3, [pc, #424]	; (8008b24 <HAL_RCC_GetSysClockFreq+0x200>)
 800897c:	685b      	ldr	r3, [r3, #4]
 800897e:	099b      	lsrs	r3, r3, #6
 8008980:	2200      	movs	r2, #0
 8008982:	63bb      	str	r3, [r7, #56]	; 0x38
 8008984:	63fa      	str	r2, [r7, #60]	; 0x3c
 8008986:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8008988:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800898c:	633b      	str	r3, [r7, #48]	; 0x30
 800898e:	2300      	movs	r3, #0
 8008990:	637b      	str	r3, [r7, #52]	; 0x34
 8008992:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8008996:	4622      	mov	r2, r4
 8008998:	462b      	mov	r3, r5
 800899a:	f04f 0000 	mov.w	r0, #0
 800899e:	f04f 0100 	mov.w	r1, #0
 80089a2:	0159      	lsls	r1, r3, #5
 80089a4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80089a8:	0150      	lsls	r0, r2, #5
 80089aa:	4602      	mov	r2, r0
 80089ac:	460b      	mov	r3, r1
 80089ae:	4621      	mov	r1, r4
 80089b0:	1a51      	subs	r1, r2, r1
 80089b2:	6139      	str	r1, [r7, #16]
 80089b4:	4629      	mov	r1, r5
 80089b6:	eb63 0301 	sbc.w	r3, r3, r1
 80089ba:	617b      	str	r3, [r7, #20]
 80089bc:	f04f 0200 	mov.w	r2, #0
 80089c0:	f04f 0300 	mov.w	r3, #0
 80089c4:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80089c8:	4659      	mov	r1, fp
 80089ca:	018b      	lsls	r3, r1, #6
 80089cc:	4651      	mov	r1, sl
 80089ce:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80089d2:	4651      	mov	r1, sl
 80089d4:	018a      	lsls	r2, r1, #6
 80089d6:	4651      	mov	r1, sl
 80089d8:	ebb2 0801 	subs.w	r8, r2, r1
 80089dc:	4659      	mov	r1, fp
 80089de:	eb63 0901 	sbc.w	r9, r3, r1
 80089e2:	f04f 0200 	mov.w	r2, #0
 80089e6:	f04f 0300 	mov.w	r3, #0
 80089ea:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80089ee:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80089f2:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80089f6:	4690      	mov	r8, r2
 80089f8:	4699      	mov	r9, r3
 80089fa:	4623      	mov	r3, r4
 80089fc:	eb18 0303 	adds.w	r3, r8, r3
 8008a00:	60bb      	str	r3, [r7, #8]
 8008a02:	462b      	mov	r3, r5
 8008a04:	eb49 0303 	adc.w	r3, r9, r3
 8008a08:	60fb      	str	r3, [r7, #12]
 8008a0a:	f04f 0200 	mov.w	r2, #0
 8008a0e:	f04f 0300 	mov.w	r3, #0
 8008a12:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8008a16:	4629      	mov	r1, r5
 8008a18:	024b      	lsls	r3, r1, #9
 8008a1a:	4621      	mov	r1, r4
 8008a1c:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8008a20:	4621      	mov	r1, r4
 8008a22:	024a      	lsls	r2, r1, #9
 8008a24:	4610      	mov	r0, r2
 8008a26:	4619      	mov	r1, r3
 8008a28:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8008a2a:	2200      	movs	r2, #0
 8008a2c:	62bb      	str	r3, [r7, #40]	; 0x28
 8008a2e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8008a30:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8008a34:	f7f8 f8ac 	bl	8000b90 <__aeabi_uldivmod>
 8008a38:	4602      	mov	r2, r0
 8008a3a:	460b      	mov	r3, r1
 8008a3c:	4613      	mov	r3, r2
 8008a3e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008a40:	e058      	b.n	8008af4 <HAL_RCC_GetSysClockFreq+0x1d0>
 8008a42:	4b38      	ldr	r3, [pc, #224]	; (8008b24 <HAL_RCC_GetSysClockFreq+0x200>)
 8008a44:	685b      	ldr	r3, [r3, #4]
 8008a46:	099b      	lsrs	r3, r3, #6
 8008a48:	2200      	movs	r2, #0
 8008a4a:	4618      	mov	r0, r3
 8008a4c:	4611      	mov	r1, r2
 8008a4e:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8008a52:	623b      	str	r3, [r7, #32]
 8008a54:	2300      	movs	r3, #0
 8008a56:	627b      	str	r3, [r7, #36]	; 0x24
 8008a58:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8008a5c:	4642      	mov	r2, r8
 8008a5e:	464b      	mov	r3, r9
 8008a60:	f04f 0000 	mov.w	r0, #0
 8008a64:	f04f 0100 	mov.w	r1, #0
 8008a68:	0159      	lsls	r1, r3, #5
 8008a6a:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8008a6e:	0150      	lsls	r0, r2, #5
 8008a70:	4602      	mov	r2, r0
 8008a72:	460b      	mov	r3, r1
 8008a74:	4641      	mov	r1, r8
 8008a76:	ebb2 0a01 	subs.w	sl, r2, r1
 8008a7a:	4649      	mov	r1, r9
 8008a7c:	eb63 0b01 	sbc.w	fp, r3, r1
 8008a80:	f04f 0200 	mov.w	r2, #0
 8008a84:	f04f 0300 	mov.w	r3, #0
 8008a88:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8008a8c:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8008a90:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8008a94:	ebb2 040a 	subs.w	r4, r2, sl
 8008a98:	eb63 050b 	sbc.w	r5, r3, fp
 8008a9c:	f04f 0200 	mov.w	r2, #0
 8008aa0:	f04f 0300 	mov.w	r3, #0
 8008aa4:	00eb      	lsls	r3, r5, #3
 8008aa6:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8008aaa:	00e2      	lsls	r2, r4, #3
 8008aac:	4614      	mov	r4, r2
 8008aae:	461d      	mov	r5, r3
 8008ab0:	4643      	mov	r3, r8
 8008ab2:	18e3      	adds	r3, r4, r3
 8008ab4:	603b      	str	r3, [r7, #0]
 8008ab6:	464b      	mov	r3, r9
 8008ab8:	eb45 0303 	adc.w	r3, r5, r3
 8008abc:	607b      	str	r3, [r7, #4]
 8008abe:	f04f 0200 	mov.w	r2, #0
 8008ac2:	f04f 0300 	mov.w	r3, #0
 8008ac6:	e9d7 4500 	ldrd	r4, r5, [r7]
 8008aca:	4629      	mov	r1, r5
 8008acc:	028b      	lsls	r3, r1, #10
 8008ace:	4621      	mov	r1, r4
 8008ad0:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8008ad4:	4621      	mov	r1, r4
 8008ad6:	028a      	lsls	r2, r1, #10
 8008ad8:	4610      	mov	r0, r2
 8008ada:	4619      	mov	r1, r3
 8008adc:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8008ade:	2200      	movs	r2, #0
 8008ae0:	61bb      	str	r3, [r7, #24]
 8008ae2:	61fa      	str	r2, [r7, #28]
 8008ae4:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8008ae8:	f7f8 f852 	bl	8000b90 <__aeabi_uldivmod>
 8008aec:	4602      	mov	r2, r0
 8008aee:	460b      	mov	r3, r1
 8008af0:	4613      	mov	r3, r2
 8008af2:	64fb      	str	r3, [r7, #76]	; 0x4c
 8008af4:	4b0b      	ldr	r3, [pc, #44]	; (8008b24 <HAL_RCC_GetSysClockFreq+0x200>)
 8008af6:	685b      	ldr	r3, [r3, #4]
 8008af8:	0c1b      	lsrs	r3, r3, #16
 8008afa:	f003 0303 	and.w	r3, r3, #3
 8008afe:	3301      	adds	r3, #1
 8008b00:	005b      	lsls	r3, r3, #1
 8008b02:	643b      	str	r3, [r7, #64]	; 0x40
 8008b04:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8008b06:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8008b08:	fbb2 f3f3 	udiv	r3, r2, r3
 8008b0c:	64bb      	str	r3, [r7, #72]	; 0x48
 8008b0e:	e002      	b.n	8008b16 <HAL_RCC_GetSysClockFreq+0x1f2>
 8008b10:	4b05      	ldr	r3, [pc, #20]	; (8008b28 <HAL_RCC_GetSysClockFreq+0x204>)
 8008b12:	64bb      	str	r3, [r7, #72]	; 0x48
 8008b14:	bf00      	nop
 8008b16:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8008b18:	4618      	mov	r0, r3
 8008b1a:	3750      	adds	r7, #80	; 0x50
 8008b1c:	46bd      	mov	sp, r7
 8008b1e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8008b22:	bf00      	nop
 8008b24:	40023800 	.word	0x40023800
 8008b28:	00f42400 	.word	0x00f42400
 8008b2c:	007a1200 	.word	0x007a1200

08008b30 <HAL_RCC_GetHCLKFreq>:
 8008b30:	b480      	push	{r7}
 8008b32:	af00      	add	r7, sp, #0
 8008b34:	4b03      	ldr	r3, [pc, #12]	; (8008b44 <HAL_RCC_GetHCLKFreq+0x14>)
 8008b36:	681b      	ldr	r3, [r3, #0]
 8008b38:	4618      	mov	r0, r3
 8008b3a:	46bd      	mov	sp, r7
 8008b3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b40:	4770      	bx	lr
 8008b42:	bf00      	nop
 8008b44:	20000140 	.word	0x20000140

08008b48 <HAL_RCC_GetPCLK1Freq>:
 8008b48:	b580      	push	{r7, lr}
 8008b4a:	af00      	add	r7, sp, #0
 8008b4c:	f7ff fff0 	bl	8008b30 <HAL_RCC_GetHCLKFreq>
 8008b50:	4602      	mov	r2, r0
 8008b52:	4b05      	ldr	r3, [pc, #20]	; (8008b68 <HAL_RCC_GetPCLK1Freq+0x20>)
 8008b54:	689b      	ldr	r3, [r3, #8]
 8008b56:	0a9b      	lsrs	r3, r3, #10
 8008b58:	f003 0307 	and.w	r3, r3, #7
 8008b5c:	4903      	ldr	r1, [pc, #12]	; (8008b6c <HAL_RCC_GetPCLK1Freq+0x24>)
 8008b5e:	5ccb      	ldrb	r3, [r1, r3]
 8008b60:	fa22 f303 	lsr.w	r3, r2, r3
 8008b64:	4618      	mov	r0, r3
 8008b66:	bd80      	pop	{r7, pc}
 8008b68:	40023800 	.word	0x40023800
 8008b6c:	0800bd08 	.word	0x0800bd08

08008b70 <HAL_RCC_GetPCLK2Freq>:
 8008b70:	b580      	push	{r7, lr}
 8008b72:	af00      	add	r7, sp, #0
 8008b74:	f7ff ffdc 	bl	8008b30 <HAL_RCC_GetHCLKFreq>
 8008b78:	4602      	mov	r2, r0
 8008b7a:	4b05      	ldr	r3, [pc, #20]	; (8008b90 <HAL_RCC_GetPCLK2Freq+0x20>)
 8008b7c:	689b      	ldr	r3, [r3, #8]
 8008b7e:	0b5b      	lsrs	r3, r3, #13
 8008b80:	f003 0307 	and.w	r3, r3, #7
 8008b84:	4903      	ldr	r1, [pc, #12]	; (8008b94 <HAL_RCC_GetPCLK2Freq+0x24>)
 8008b86:	5ccb      	ldrb	r3, [r1, r3]
 8008b88:	fa22 f303 	lsr.w	r3, r2, r3
 8008b8c:	4618      	mov	r0, r3
 8008b8e:	bd80      	pop	{r7, pc}
 8008b90:	40023800 	.word	0x40023800
 8008b94:	0800bd08 	.word	0x0800bd08

08008b98 <HAL_SPI_Init>:
 8008b98:	b580      	push	{r7, lr}
 8008b9a:	b082      	sub	sp, #8
 8008b9c:	af00      	add	r7, sp, #0
 8008b9e:	6078      	str	r0, [r7, #4]
 8008ba0:	687b      	ldr	r3, [r7, #4]
 8008ba2:	2b00      	cmp	r3, #0
 8008ba4:	d101      	bne.n	8008baa <HAL_SPI_Init+0x12>
 8008ba6:	2301      	movs	r3, #1
 8008ba8:	e07b      	b.n	8008ca2 <HAL_SPI_Init+0x10a>
 8008baa:	687b      	ldr	r3, [r7, #4]
 8008bac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008bae:	2b00      	cmp	r3, #0
 8008bb0:	d108      	bne.n	8008bc4 <HAL_SPI_Init+0x2c>
 8008bb2:	687b      	ldr	r3, [r7, #4]
 8008bb4:	685b      	ldr	r3, [r3, #4]
 8008bb6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8008bba:	d009      	beq.n	8008bd0 <HAL_SPI_Init+0x38>
 8008bbc:	687b      	ldr	r3, [r7, #4]
 8008bbe:	2200      	movs	r2, #0
 8008bc0:	61da      	str	r2, [r3, #28]
 8008bc2:	e005      	b.n	8008bd0 <HAL_SPI_Init+0x38>
 8008bc4:	687b      	ldr	r3, [r7, #4]
 8008bc6:	2200      	movs	r2, #0
 8008bc8:	611a      	str	r2, [r3, #16]
 8008bca:	687b      	ldr	r3, [r7, #4]
 8008bcc:	2200      	movs	r2, #0
 8008bce:	615a      	str	r2, [r3, #20]
 8008bd0:	687b      	ldr	r3, [r7, #4]
 8008bd2:	2200      	movs	r2, #0
 8008bd4:	629a      	str	r2, [r3, #40]	; 0x28
 8008bd6:	687b      	ldr	r3, [r7, #4]
 8008bd8:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008bdc:	b2db      	uxtb	r3, r3
 8008bde:	2b00      	cmp	r3, #0
 8008be0:	d106      	bne.n	8008bf0 <HAL_SPI_Init+0x58>
 8008be2:	687b      	ldr	r3, [r7, #4]
 8008be4:	2200      	movs	r2, #0
 8008be6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8008bea:	6878      	ldr	r0, [r7, #4]
 8008bec:	f7fb fcaa 	bl	8004544 <HAL_SPI_MspInit>
 8008bf0:	687b      	ldr	r3, [r7, #4]
 8008bf2:	2202      	movs	r2, #2
 8008bf4:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008bf8:	687b      	ldr	r3, [r7, #4]
 8008bfa:	681b      	ldr	r3, [r3, #0]
 8008bfc:	681a      	ldr	r2, [r3, #0]
 8008bfe:	687b      	ldr	r3, [r7, #4]
 8008c00:	681b      	ldr	r3, [r3, #0]
 8008c02:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008c06:	601a      	str	r2, [r3, #0]
 8008c08:	687b      	ldr	r3, [r7, #4]
 8008c0a:	685b      	ldr	r3, [r3, #4]
 8008c0c:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8008c10:	687b      	ldr	r3, [r7, #4]
 8008c12:	689b      	ldr	r3, [r3, #8]
 8008c14:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8008c18:	431a      	orrs	r2, r3
 8008c1a:	687b      	ldr	r3, [r7, #4]
 8008c1c:	68db      	ldr	r3, [r3, #12]
 8008c1e:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8008c22:	431a      	orrs	r2, r3
 8008c24:	687b      	ldr	r3, [r7, #4]
 8008c26:	691b      	ldr	r3, [r3, #16]
 8008c28:	f003 0302 	and.w	r3, r3, #2
 8008c2c:	431a      	orrs	r2, r3
 8008c2e:	687b      	ldr	r3, [r7, #4]
 8008c30:	695b      	ldr	r3, [r3, #20]
 8008c32:	f003 0301 	and.w	r3, r3, #1
 8008c36:	431a      	orrs	r2, r3
 8008c38:	687b      	ldr	r3, [r7, #4]
 8008c3a:	699b      	ldr	r3, [r3, #24]
 8008c3c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8008c40:	431a      	orrs	r2, r3
 8008c42:	687b      	ldr	r3, [r7, #4]
 8008c44:	69db      	ldr	r3, [r3, #28]
 8008c46:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8008c4a:	431a      	orrs	r2, r3
 8008c4c:	687b      	ldr	r3, [r7, #4]
 8008c4e:	6a1b      	ldr	r3, [r3, #32]
 8008c50:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008c54:	ea42 0103 	orr.w	r1, r2, r3
 8008c58:	687b      	ldr	r3, [r7, #4]
 8008c5a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008c5c:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8008c60:	687b      	ldr	r3, [r7, #4]
 8008c62:	681b      	ldr	r3, [r3, #0]
 8008c64:	430a      	orrs	r2, r1
 8008c66:	601a      	str	r2, [r3, #0]
 8008c68:	687b      	ldr	r3, [r7, #4]
 8008c6a:	699b      	ldr	r3, [r3, #24]
 8008c6c:	0c1b      	lsrs	r3, r3, #16
 8008c6e:	f003 0104 	and.w	r1, r3, #4
 8008c72:	687b      	ldr	r3, [r7, #4]
 8008c74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008c76:	f003 0210 	and.w	r2, r3, #16
 8008c7a:	687b      	ldr	r3, [r7, #4]
 8008c7c:	681b      	ldr	r3, [r3, #0]
 8008c7e:	430a      	orrs	r2, r1
 8008c80:	605a      	str	r2, [r3, #4]
 8008c82:	687b      	ldr	r3, [r7, #4]
 8008c84:	681b      	ldr	r3, [r3, #0]
 8008c86:	69da      	ldr	r2, [r3, #28]
 8008c88:	687b      	ldr	r3, [r7, #4]
 8008c8a:	681b      	ldr	r3, [r3, #0]
 8008c8c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8008c90:	61da      	str	r2, [r3, #28]
 8008c92:	687b      	ldr	r3, [r7, #4]
 8008c94:	2200      	movs	r2, #0
 8008c96:	655a      	str	r2, [r3, #84]	; 0x54
 8008c98:	687b      	ldr	r3, [r7, #4]
 8008c9a:	2201      	movs	r2, #1
 8008c9c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008ca0:	2300      	movs	r3, #0
 8008ca2:	4618      	mov	r0, r3
 8008ca4:	3708      	adds	r7, #8
 8008ca6:	46bd      	mov	sp, r7
 8008ca8:	bd80      	pop	{r7, pc}
	...

08008cac <HAL_SPI_TransmitReceive_DMA>:
 8008cac:	b580      	push	{r7, lr}
 8008cae:	b086      	sub	sp, #24
 8008cb0:	af00      	add	r7, sp, #0
 8008cb2:	60f8      	str	r0, [r7, #12]
 8008cb4:	60b9      	str	r1, [r7, #8]
 8008cb6:	607a      	str	r2, [r7, #4]
 8008cb8:	807b      	strh	r3, [r7, #2]
 8008cba:	2300      	movs	r3, #0
 8008cbc:	75fb      	strb	r3, [r7, #23]
 8008cbe:	68fb      	ldr	r3, [r7, #12]
 8008cc0:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8008cc4:	2b01      	cmp	r3, #1
 8008cc6:	d101      	bne.n	8008ccc <HAL_SPI_TransmitReceive_DMA+0x20>
 8008cc8:	2302      	movs	r3, #2
 8008cca:	e0e3      	b.n	8008e94 <HAL_SPI_TransmitReceive_DMA+0x1e8>
 8008ccc:	68fb      	ldr	r3, [r7, #12]
 8008cce:	2201      	movs	r2, #1
 8008cd0:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8008cd4:	68fb      	ldr	r3, [r7, #12]
 8008cd6:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008cda:	75bb      	strb	r3, [r7, #22]
 8008cdc:	68fb      	ldr	r3, [r7, #12]
 8008cde:	685b      	ldr	r3, [r3, #4]
 8008ce0:	613b      	str	r3, [r7, #16]
 8008ce2:	7dbb      	ldrb	r3, [r7, #22]
 8008ce4:	2b01      	cmp	r3, #1
 8008ce6:	d00d      	beq.n	8008d04 <HAL_SPI_TransmitReceive_DMA+0x58>
 8008ce8:	693b      	ldr	r3, [r7, #16]
 8008cea:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8008cee:	d106      	bne.n	8008cfe <HAL_SPI_TransmitReceive_DMA+0x52>
 8008cf0:	68fb      	ldr	r3, [r7, #12]
 8008cf2:	689b      	ldr	r3, [r3, #8]
 8008cf4:	2b00      	cmp	r3, #0
 8008cf6:	d102      	bne.n	8008cfe <HAL_SPI_TransmitReceive_DMA+0x52>
 8008cf8:	7dbb      	ldrb	r3, [r7, #22]
 8008cfa:	2b04      	cmp	r3, #4
 8008cfc:	d002      	beq.n	8008d04 <HAL_SPI_TransmitReceive_DMA+0x58>
 8008cfe:	2302      	movs	r3, #2
 8008d00:	75fb      	strb	r3, [r7, #23]
 8008d02:	e0c2      	b.n	8008e8a <HAL_SPI_TransmitReceive_DMA+0x1de>
 8008d04:	68bb      	ldr	r3, [r7, #8]
 8008d06:	2b00      	cmp	r3, #0
 8008d08:	d005      	beq.n	8008d16 <HAL_SPI_TransmitReceive_DMA+0x6a>
 8008d0a:	687b      	ldr	r3, [r7, #4]
 8008d0c:	2b00      	cmp	r3, #0
 8008d0e:	d002      	beq.n	8008d16 <HAL_SPI_TransmitReceive_DMA+0x6a>
 8008d10:	887b      	ldrh	r3, [r7, #2]
 8008d12:	2b00      	cmp	r3, #0
 8008d14:	d102      	bne.n	8008d1c <HAL_SPI_TransmitReceive_DMA+0x70>
 8008d16:	2301      	movs	r3, #1
 8008d18:	75fb      	strb	r3, [r7, #23]
 8008d1a:	e0b6      	b.n	8008e8a <HAL_SPI_TransmitReceive_DMA+0x1de>
 8008d1c:	68fb      	ldr	r3, [r7, #12]
 8008d1e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008d22:	b2db      	uxtb	r3, r3
 8008d24:	2b04      	cmp	r3, #4
 8008d26:	d003      	beq.n	8008d30 <HAL_SPI_TransmitReceive_DMA+0x84>
 8008d28:	68fb      	ldr	r3, [r7, #12]
 8008d2a:	2205      	movs	r2, #5
 8008d2c:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008d30:	68fb      	ldr	r3, [r7, #12]
 8008d32:	2200      	movs	r2, #0
 8008d34:	655a      	str	r2, [r3, #84]	; 0x54
 8008d36:	68fb      	ldr	r3, [r7, #12]
 8008d38:	68ba      	ldr	r2, [r7, #8]
 8008d3a:	631a      	str	r2, [r3, #48]	; 0x30
 8008d3c:	68fb      	ldr	r3, [r7, #12]
 8008d3e:	887a      	ldrh	r2, [r7, #2]
 8008d40:	869a      	strh	r2, [r3, #52]	; 0x34
 8008d42:	68fb      	ldr	r3, [r7, #12]
 8008d44:	887a      	ldrh	r2, [r7, #2]
 8008d46:	86da      	strh	r2, [r3, #54]	; 0x36
 8008d48:	68fb      	ldr	r3, [r7, #12]
 8008d4a:	687a      	ldr	r2, [r7, #4]
 8008d4c:	639a      	str	r2, [r3, #56]	; 0x38
 8008d4e:	68fb      	ldr	r3, [r7, #12]
 8008d50:	887a      	ldrh	r2, [r7, #2]
 8008d52:	879a      	strh	r2, [r3, #60]	; 0x3c
 8008d54:	68fb      	ldr	r3, [r7, #12]
 8008d56:	887a      	ldrh	r2, [r7, #2]
 8008d58:	87da      	strh	r2, [r3, #62]	; 0x3e
 8008d5a:	68fb      	ldr	r3, [r7, #12]
 8008d5c:	2200      	movs	r2, #0
 8008d5e:	641a      	str	r2, [r3, #64]	; 0x40
 8008d60:	68fb      	ldr	r3, [r7, #12]
 8008d62:	2200      	movs	r2, #0
 8008d64:	645a      	str	r2, [r3, #68]	; 0x44
 8008d66:	68fb      	ldr	r3, [r7, #12]
 8008d68:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008d6c:	b2db      	uxtb	r3, r3
 8008d6e:	2b04      	cmp	r3, #4
 8008d70:	d108      	bne.n	8008d84 <HAL_SPI_TransmitReceive_DMA+0xd8>
 8008d72:	68fb      	ldr	r3, [r7, #12]
 8008d74:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008d76:	4a49      	ldr	r2, [pc, #292]	; (8008e9c <HAL_SPI_TransmitReceive_DMA+0x1f0>)
 8008d78:	641a      	str	r2, [r3, #64]	; 0x40
 8008d7a:	68fb      	ldr	r3, [r7, #12]
 8008d7c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008d7e:	4a48      	ldr	r2, [pc, #288]	; (8008ea0 <HAL_SPI_TransmitReceive_DMA+0x1f4>)
 8008d80:	63da      	str	r2, [r3, #60]	; 0x3c
 8008d82:	e007      	b.n	8008d94 <HAL_SPI_TransmitReceive_DMA+0xe8>
 8008d84:	68fb      	ldr	r3, [r7, #12]
 8008d86:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008d88:	4a46      	ldr	r2, [pc, #280]	; (8008ea4 <HAL_SPI_TransmitReceive_DMA+0x1f8>)
 8008d8a:	641a      	str	r2, [r3, #64]	; 0x40
 8008d8c:	68fb      	ldr	r3, [r7, #12]
 8008d8e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008d90:	4a45      	ldr	r2, [pc, #276]	; (8008ea8 <HAL_SPI_TransmitReceive_DMA+0x1fc>)
 8008d92:	63da      	str	r2, [r3, #60]	; 0x3c
 8008d94:	68fb      	ldr	r3, [r7, #12]
 8008d96:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008d98:	4a44      	ldr	r2, [pc, #272]	; (8008eac <HAL_SPI_TransmitReceive_DMA+0x200>)
 8008d9a:	64da      	str	r2, [r3, #76]	; 0x4c
 8008d9c:	68fb      	ldr	r3, [r7, #12]
 8008d9e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008da0:	2200      	movs	r2, #0
 8008da2:	651a      	str	r2, [r3, #80]	; 0x50
 8008da4:	68fb      	ldr	r3, [r7, #12]
 8008da6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8008da8:	68fb      	ldr	r3, [r7, #12]
 8008daa:	681b      	ldr	r3, [r3, #0]
 8008dac:	330c      	adds	r3, #12
 8008dae:	4619      	mov	r1, r3
 8008db0:	68fb      	ldr	r3, [r7, #12]
 8008db2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008db4:	461a      	mov	r2, r3
 8008db6:	68fb      	ldr	r3, [r7, #12]
 8008db8:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8008dba:	b29b      	uxth	r3, r3
 8008dbc:	f7fc f8b4 	bl	8004f28 <HAL_DMA_Start_IT>
 8008dc0:	4603      	mov	r3, r0
 8008dc2:	2b00      	cmp	r3, #0
 8008dc4:	d00c      	beq.n	8008de0 <HAL_SPI_TransmitReceive_DMA+0x134>
 8008dc6:	68fb      	ldr	r3, [r7, #12]
 8008dc8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008dca:	f043 0210 	orr.w	r2, r3, #16
 8008dce:	68fb      	ldr	r3, [r7, #12]
 8008dd0:	655a      	str	r2, [r3, #84]	; 0x54
 8008dd2:	2301      	movs	r3, #1
 8008dd4:	75fb      	strb	r3, [r7, #23]
 8008dd6:	68fb      	ldr	r3, [r7, #12]
 8008dd8:	2201      	movs	r2, #1
 8008dda:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008dde:	e054      	b.n	8008e8a <HAL_SPI_TransmitReceive_DMA+0x1de>
 8008de0:	68fb      	ldr	r3, [r7, #12]
 8008de2:	681b      	ldr	r3, [r3, #0]
 8008de4:	685a      	ldr	r2, [r3, #4]
 8008de6:	68fb      	ldr	r3, [r7, #12]
 8008de8:	681b      	ldr	r3, [r3, #0]
 8008dea:	f042 0201 	orr.w	r2, r2, #1
 8008dee:	605a      	str	r2, [r3, #4]
 8008df0:	68fb      	ldr	r3, [r7, #12]
 8008df2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008df4:	2200      	movs	r2, #0
 8008df6:	641a      	str	r2, [r3, #64]	; 0x40
 8008df8:	68fb      	ldr	r3, [r7, #12]
 8008dfa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008dfc:	2200      	movs	r2, #0
 8008dfe:	63da      	str	r2, [r3, #60]	; 0x3c
 8008e00:	68fb      	ldr	r3, [r7, #12]
 8008e02:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008e04:	2200      	movs	r2, #0
 8008e06:	64da      	str	r2, [r3, #76]	; 0x4c
 8008e08:	68fb      	ldr	r3, [r7, #12]
 8008e0a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008e0c:	2200      	movs	r2, #0
 8008e0e:	651a      	str	r2, [r3, #80]	; 0x50
 8008e10:	68fb      	ldr	r3, [r7, #12]
 8008e12:	6c98      	ldr	r0, [r3, #72]	; 0x48
 8008e14:	68fb      	ldr	r3, [r7, #12]
 8008e16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008e18:	4619      	mov	r1, r3
 8008e1a:	68fb      	ldr	r3, [r7, #12]
 8008e1c:	681b      	ldr	r3, [r3, #0]
 8008e1e:	330c      	adds	r3, #12
 8008e20:	461a      	mov	r2, r3
 8008e22:	68fb      	ldr	r3, [r7, #12]
 8008e24:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8008e26:	b29b      	uxth	r3, r3
 8008e28:	f7fc f87e 	bl	8004f28 <HAL_DMA_Start_IT>
 8008e2c:	4603      	mov	r3, r0
 8008e2e:	2b00      	cmp	r3, #0
 8008e30:	d00c      	beq.n	8008e4c <HAL_SPI_TransmitReceive_DMA+0x1a0>
 8008e32:	68fb      	ldr	r3, [r7, #12]
 8008e34:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008e36:	f043 0210 	orr.w	r2, r3, #16
 8008e3a:	68fb      	ldr	r3, [r7, #12]
 8008e3c:	655a      	str	r2, [r3, #84]	; 0x54
 8008e3e:	2301      	movs	r3, #1
 8008e40:	75fb      	strb	r3, [r7, #23]
 8008e42:	68fb      	ldr	r3, [r7, #12]
 8008e44:	2201      	movs	r2, #1
 8008e46:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008e4a:	e01e      	b.n	8008e8a <HAL_SPI_TransmitReceive_DMA+0x1de>
 8008e4c:	68fb      	ldr	r3, [r7, #12]
 8008e4e:	681b      	ldr	r3, [r3, #0]
 8008e50:	681b      	ldr	r3, [r3, #0]
 8008e52:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008e56:	2b40      	cmp	r3, #64	; 0x40
 8008e58:	d007      	beq.n	8008e6a <HAL_SPI_TransmitReceive_DMA+0x1be>
 8008e5a:	68fb      	ldr	r3, [r7, #12]
 8008e5c:	681b      	ldr	r3, [r3, #0]
 8008e5e:	681a      	ldr	r2, [r3, #0]
 8008e60:	68fb      	ldr	r3, [r7, #12]
 8008e62:	681b      	ldr	r3, [r3, #0]
 8008e64:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8008e68:	601a      	str	r2, [r3, #0]
 8008e6a:	68fb      	ldr	r3, [r7, #12]
 8008e6c:	681b      	ldr	r3, [r3, #0]
 8008e6e:	685a      	ldr	r2, [r3, #4]
 8008e70:	68fb      	ldr	r3, [r7, #12]
 8008e72:	681b      	ldr	r3, [r3, #0]
 8008e74:	f042 0220 	orr.w	r2, r2, #32
 8008e78:	605a      	str	r2, [r3, #4]
 8008e7a:	68fb      	ldr	r3, [r7, #12]
 8008e7c:	681b      	ldr	r3, [r3, #0]
 8008e7e:	685a      	ldr	r2, [r3, #4]
 8008e80:	68fb      	ldr	r3, [r7, #12]
 8008e82:	681b      	ldr	r3, [r3, #0]
 8008e84:	f042 0202 	orr.w	r2, r2, #2
 8008e88:	605a      	str	r2, [r3, #4]
 8008e8a:	68fb      	ldr	r3, [r7, #12]
 8008e8c:	2200      	movs	r2, #0
 8008e8e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8008e92:	7dfb      	ldrb	r3, [r7, #23]
 8008e94:	4618      	mov	r0, r3
 8008e96:	3718      	adds	r7, #24
 8008e98:	46bd      	mov	sp, r7
 8008e9a:	bd80      	pop	{r7, pc}
 8008e9c:	080092b9 	.word	0x080092b9
 8008ea0:	08009181 	.word	0x08009181
 8008ea4:	080092d5 	.word	0x080092d5
 8008ea8:	08009229 	.word	0x08009229
 8008eac:	080092f1 	.word	0x080092f1

08008eb0 <HAL_SPI_DMAStop>:
 8008eb0:	b580      	push	{r7, lr}
 8008eb2:	b084      	sub	sp, #16
 8008eb4:	af00      	add	r7, sp, #0
 8008eb6:	6078      	str	r0, [r7, #4]
 8008eb8:	2300      	movs	r3, #0
 8008eba:	73fb      	strb	r3, [r7, #15]
 8008ebc:	687b      	ldr	r3, [r7, #4]
 8008ebe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008ec0:	2b00      	cmp	r3, #0
 8008ec2:	d00f      	beq.n	8008ee4 <HAL_SPI_DMAStop+0x34>
 8008ec4:	687b      	ldr	r3, [r7, #4]
 8008ec6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008ec8:	4618      	mov	r0, r3
 8008eca:	f7fc f885 	bl	8004fd8 <HAL_DMA_Abort>
 8008ece:	4603      	mov	r3, r0
 8008ed0:	2b00      	cmp	r3, #0
 8008ed2:	d007      	beq.n	8008ee4 <HAL_SPI_DMAStop+0x34>
 8008ed4:	687b      	ldr	r3, [r7, #4]
 8008ed6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008ed8:	f043 0210 	orr.w	r2, r3, #16
 8008edc:	687b      	ldr	r3, [r7, #4]
 8008ede:	655a      	str	r2, [r3, #84]	; 0x54
 8008ee0:	2301      	movs	r3, #1
 8008ee2:	73fb      	strb	r3, [r7, #15]
 8008ee4:	687b      	ldr	r3, [r7, #4]
 8008ee6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008ee8:	2b00      	cmp	r3, #0
 8008eea:	d00f      	beq.n	8008f0c <HAL_SPI_DMAStop+0x5c>
 8008eec:	687b      	ldr	r3, [r7, #4]
 8008eee:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008ef0:	4618      	mov	r0, r3
 8008ef2:	f7fc f871 	bl	8004fd8 <HAL_DMA_Abort>
 8008ef6:	4603      	mov	r3, r0
 8008ef8:	2b00      	cmp	r3, #0
 8008efa:	d007      	beq.n	8008f0c <HAL_SPI_DMAStop+0x5c>
 8008efc:	687b      	ldr	r3, [r7, #4]
 8008efe:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008f00:	f043 0210 	orr.w	r2, r3, #16
 8008f04:	687b      	ldr	r3, [r7, #4]
 8008f06:	655a      	str	r2, [r3, #84]	; 0x54
 8008f08:	2301      	movs	r3, #1
 8008f0a:	73fb      	strb	r3, [r7, #15]
 8008f0c:	687b      	ldr	r3, [r7, #4]
 8008f0e:	681b      	ldr	r3, [r3, #0]
 8008f10:	685a      	ldr	r2, [r3, #4]
 8008f12:	687b      	ldr	r3, [r7, #4]
 8008f14:	681b      	ldr	r3, [r3, #0]
 8008f16:	f022 0203 	bic.w	r2, r2, #3
 8008f1a:	605a      	str	r2, [r3, #4]
 8008f1c:	687b      	ldr	r3, [r7, #4]
 8008f1e:	2201      	movs	r2, #1
 8008f20:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8008f24:	7bfb      	ldrb	r3, [r7, #15]
 8008f26:	4618      	mov	r0, r3
 8008f28:	3710      	adds	r7, #16
 8008f2a:	46bd      	mov	sp, r7
 8008f2c:	bd80      	pop	{r7, pc}
	...

08008f30 <HAL_SPI_IRQHandler>:
 8008f30:	b580      	push	{r7, lr}
 8008f32:	b088      	sub	sp, #32
 8008f34:	af00      	add	r7, sp, #0
 8008f36:	6078      	str	r0, [r7, #4]
 8008f38:	687b      	ldr	r3, [r7, #4]
 8008f3a:	681b      	ldr	r3, [r3, #0]
 8008f3c:	685b      	ldr	r3, [r3, #4]
 8008f3e:	61fb      	str	r3, [r7, #28]
 8008f40:	687b      	ldr	r3, [r7, #4]
 8008f42:	681b      	ldr	r3, [r3, #0]
 8008f44:	689b      	ldr	r3, [r3, #8]
 8008f46:	61bb      	str	r3, [r7, #24]
 8008f48:	69bb      	ldr	r3, [r7, #24]
 8008f4a:	099b      	lsrs	r3, r3, #6
 8008f4c:	f003 0301 	and.w	r3, r3, #1
 8008f50:	2b00      	cmp	r3, #0
 8008f52:	d10f      	bne.n	8008f74 <HAL_SPI_IRQHandler+0x44>
 8008f54:	69bb      	ldr	r3, [r7, #24]
 8008f56:	f003 0301 	and.w	r3, r3, #1
 8008f5a:	2b00      	cmp	r3, #0
 8008f5c:	d00a      	beq.n	8008f74 <HAL_SPI_IRQHandler+0x44>
 8008f5e:	69fb      	ldr	r3, [r7, #28]
 8008f60:	099b      	lsrs	r3, r3, #6
 8008f62:	f003 0301 	and.w	r3, r3, #1
 8008f66:	2b00      	cmp	r3, #0
 8008f68:	d004      	beq.n	8008f74 <HAL_SPI_IRQHandler+0x44>
 8008f6a:	687b      	ldr	r3, [r7, #4]
 8008f6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008f6e:	6878      	ldr	r0, [r7, #4]
 8008f70:	4798      	blx	r3
 8008f72:	e0d7      	b.n	8009124 <HAL_SPI_IRQHandler+0x1f4>
 8008f74:	69bb      	ldr	r3, [r7, #24]
 8008f76:	085b      	lsrs	r3, r3, #1
 8008f78:	f003 0301 	and.w	r3, r3, #1
 8008f7c:	2b00      	cmp	r3, #0
 8008f7e:	d00a      	beq.n	8008f96 <HAL_SPI_IRQHandler+0x66>
 8008f80:	69fb      	ldr	r3, [r7, #28]
 8008f82:	09db      	lsrs	r3, r3, #7
 8008f84:	f003 0301 	and.w	r3, r3, #1
 8008f88:	2b00      	cmp	r3, #0
 8008f8a:	d004      	beq.n	8008f96 <HAL_SPI_IRQHandler+0x66>
 8008f8c:	687b      	ldr	r3, [r7, #4]
 8008f8e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008f90:	6878      	ldr	r0, [r7, #4]
 8008f92:	4798      	blx	r3
 8008f94:	e0c6      	b.n	8009124 <HAL_SPI_IRQHandler+0x1f4>
 8008f96:	69bb      	ldr	r3, [r7, #24]
 8008f98:	095b      	lsrs	r3, r3, #5
 8008f9a:	f003 0301 	and.w	r3, r3, #1
 8008f9e:	2b00      	cmp	r3, #0
 8008fa0:	d10c      	bne.n	8008fbc <HAL_SPI_IRQHandler+0x8c>
 8008fa2:	69bb      	ldr	r3, [r7, #24]
 8008fa4:	099b      	lsrs	r3, r3, #6
 8008fa6:	f003 0301 	and.w	r3, r3, #1
 8008faa:	2b00      	cmp	r3, #0
 8008fac:	d106      	bne.n	8008fbc <HAL_SPI_IRQHandler+0x8c>
 8008fae:	69bb      	ldr	r3, [r7, #24]
 8008fb0:	0a1b      	lsrs	r3, r3, #8
 8008fb2:	f003 0301 	and.w	r3, r3, #1
 8008fb6:	2b00      	cmp	r3, #0
 8008fb8:	f000 80b4 	beq.w	8009124 <HAL_SPI_IRQHandler+0x1f4>
 8008fbc:	69fb      	ldr	r3, [r7, #28]
 8008fbe:	095b      	lsrs	r3, r3, #5
 8008fc0:	f003 0301 	and.w	r3, r3, #1
 8008fc4:	2b00      	cmp	r3, #0
 8008fc6:	f000 80ad 	beq.w	8009124 <HAL_SPI_IRQHandler+0x1f4>
 8008fca:	69bb      	ldr	r3, [r7, #24]
 8008fcc:	099b      	lsrs	r3, r3, #6
 8008fce:	f003 0301 	and.w	r3, r3, #1
 8008fd2:	2b00      	cmp	r3, #0
 8008fd4:	d023      	beq.n	800901e <HAL_SPI_IRQHandler+0xee>
 8008fd6:	687b      	ldr	r3, [r7, #4]
 8008fd8:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8008fdc:	b2db      	uxtb	r3, r3
 8008fde:	2b03      	cmp	r3, #3
 8008fe0:	d011      	beq.n	8009006 <HAL_SPI_IRQHandler+0xd6>
 8008fe2:	687b      	ldr	r3, [r7, #4]
 8008fe4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008fe6:	f043 0204 	orr.w	r2, r3, #4
 8008fea:	687b      	ldr	r3, [r7, #4]
 8008fec:	655a      	str	r2, [r3, #84]	; 0x54
 8008fee:	2300      	movs	r3, #0
 8008ff0:	617b      	str	r3, [r7, #20]
 8008ff2:	687b      	ldr	r3, [r7, #4]
 8008ff4:	681b      	ldr	r3, [r3, #0]
 8008ff6:	68db      	ldr	r3, [r3, #12]
 8008ff8:	617b      	str	r3, [r7, #20]
 8008ffa:	687b      	ldr	r3, [r7, #4]
 8008ffc:	681b      	ldr	r3, [r3, #0]
 8008ffe:	689b      	ldr	r3, [r3, #8]
 8009000:	617b      	str	r3, [r7, #20]
 8009002:	697b      	ldr	r3, [r7, #20]
 8009004:	e00b      	b.n	800901e <HAL_SPI_IRQHandler+0xee>
 8009006:	2300      	movs	r3, #0
 8009008:	613b      	str	r3, [r7, #16]
 800900a:	687b      	ldr	r3, [r7, #4]
 800900c:	681b      	ldr	r3, [r3, #0]
 800900e:	68db      	ldr	r3, [r3, #12]
 8009010:	613b      	str	r3, [r7, #16]
 8009012:	687b      	ldr	r3, [r7, #4]
 8009014:	681b      	ldr	r3, [r3, #0]
 8009016:	689b      	ldr	r3, [r3, #8]
 8009018:	613b      	str	r3, [r7, #16]
 800901a:	693b      	ldr	r3, [r7, #16]
 800901c:	e082      	b.n	8009124 <HAL_SPI_IRQHandler+0x1f4>
 800901e:	69bb      	ldr	r3, [r7, #24]
 8009020:	095b      	lsrs	r3, r3, #5
 8009022:	f003 0301 	and.w	r3, r3, #1
 8009026:	2b00      	cmp	r3, #0
 8009028:	d014      	beq.n	8009054 <HAL_SPI_IRQHandler+0x124>
 800902a:	687b      	ldr	r3, [r7, #4]
 800902c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800902e:	f043 0201 	orr.w	r2, r3, #1
 8009032:	687b      	ldr	r3, [r7, #4]
 8009034:	655a      	str	r2, [r3, #84]	; 0x54
 8009036:	2300      	movs	r3, #0
 8009038:	60fb      	str	r3, [r7, #12]
 800903a:	687b      	ldr	r3, [r7, #4]
 800903c:	681b      	ldr	r3, [r3, #0]
 800903e:	689b      	ldr	r3, [r3, #8]
 8009040:	60fb      	str	r3, [r7, #12]
 8009042:	687b      	ldr	r3, [r7, #4]
 8009044:	681b      	ldr	r3, [r3, #0]
 8009046:	681a      	ldr	r2, [r3, #0]
 8009048:	687b      	ldr	r3, [r7, #4]
 800904a:	681b      	ldr	r3, [r3, #0]
 800904c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8009050:	601a      	str	r2, [r3, #0]
 8009052:	68fb      	ldr	r3, [r7, #12]
 8009054:	69bb      	ldr	r3, [r7, #24]
 8009056:	0a1b      	lsrs	r3, r3, #8
 8009058:	f003 0301 	and.w	r3, r3, #1
 800905c:	2b00      	cmp	r3, #0
 800905e:	d00c      	beq.n	800907a <HAL_SPI_IRQHandler+0x14a>
 8009060:	687b      	ldr	r3, [r7, #4]
 8009062:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009064:	f043 0208 	orr.w	r2, r3, #8
 8009068:	687b      	ldr	r3, [r7, #4]
 800906a:	655a      	str	r2, [r3, #84]	; 0x54
 800906c:	2300      	movs	r3, #0
 800906e:	60bb      	str	r3, [r7, #8]
 8009070:	687b      	ldr	r3, [r7, #4]
 8009072:	681b      	ldr	r3, [r3, #0]
 8009074:	689b      	ldr	r3, [r3, #8]
 8009076:	60bb      	str	r3, [r7, #8]
 8009078:	68bb      	ldr	r3, [r7, #8]
 800907a:	687b      	ldr	r3, [r7, #4]
 800907c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800907e:	2b00      	cmp	r3, #0
 8009080:	d04f      	beq.n	8009122 <HAL_SPI_IRQHandler+0x1f2>
 8009082:	687b      	ldr	r3, [r7, #4]
 8009084:	681b      	ldr	r3, [r3, #0]
 8009086:	685a      	ldr	r2, [r3, #4]
 8009088:	687b      	ldr	r3, [r7, #4]
 800908a:	681b      	ldr	r3, [r3, #0]
 800908c:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8009090:	605a      	str	r2, [r3, #4]
 8009092:	687b      	ldr	r3, [r7, #4]
 8009094:	2201      	movs	r2, #1
 8009096:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800909a:	69fb      	ldr	r3, [r7, #28]
 800909c:	f003 0302 	and.w	r3, r3, #2
 80090a0:	2b00      	cmp	r3, #0
 80090a2:	d104      	bne.n	80090ae <HAL_SPI_IRQHandler+0x17e>
 80090a4:	69fb      	ldr	r3, [r7, #28]
 80090a6:	f003 0301 	and.w	r3, r3, #1
 80090aa:	2b00      	cmp	r3, #0
 80090ac:	d034      	beq.n	8009118 <HAL_SPI_IRQHandler+0x1e8>
 80090ae:	687b      	ldr	r3, [r7, #4]
 80090b0:	681b      	ldr	r3, [r3, #0]
 80090b2:	685a      	ldr	r2, [r3, #4]
 80090b4:	687b      	ldr	r3, [r7, #4]
 80090b6:	681b      	ldr	r3, [r3, #0]
 80090b8:	f022 0203 	bic.w	r2, r2, #3
 80090bc:	605a      	str	r2, [r3, #4]
 80090be:	687b      	ldr	r3, [r7, #4]
 80090c0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80090c2:	2b00      	cmp	r3, #0
 80090c4:	d011      	beq.n	80090ea <HAL_SPI_IRQHandler+0x1ba>
 80090c6:	687b      	ldr	r3, [r7, #4]
 80090c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80090ca:	4a18      	ldr	r2, [pc, #96]	; (800912c <HAL_SPI_IRQHandler+0x1fc>)
 80090cc:	651a      	str	r2, [r3, #80]	; 0x50
 80090ce:	687b      	ldr	r3, [r7, #4]
 80090d0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80090d2:	4618      	mov	r0, r3
 80090d4:	f7fb fff0 	bl	80050b8 <HAL_DMA_Abort_IT>
 80090d8:	4603      	mov	r3, r0
 80090da:	2b00      	cmp	r3, #0
 80090dc:	d005      	beq.n	80090ea <HAL_SPI_IRQHandler+0x1ba>
 80090de:	687b      	ldr	r3, [r7, #4]
 80090e0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80090e2:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 80090e6:	687b      	ldr	r3, [r7, #4]
 80090e8:	655a      	str	r2, [r3, #84]	; 0x54
 80090ea:	687b      	ldr	r3, [r7, #4]
 80090ec:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80090ee:	2b00      	cmp	r3, #0
 80090f0:	d016      	beq.n	8009120 <HAL_SPI_IRQHandler+0x1f0>
 80090f2:	687b      	ldr	r3, [r7, #4]
 80090f4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80090f6:	4a0d      	ldr	r2, [pc, #52]	; (800912c <HAL_SPI_IRQHandler+0x1fc>)
 80090f8:	651a      	str	r2, [r3, #80]	; 0x50
 80090fa:	687b      	ldr	r3, [r7, #4]
 80090fc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80090fe:	4618      	mov	r0, r3
 8009100:	f7fb ffda 	bl	80050b8 <HAL_DMA_Abort_IT>
 8009104:	4603      	mov	r3, r0
 8009106:	2b00      	cmp	r3, #0
 8009108:	d00a      	beq.n	8009120 <HAL_SPI_IRQHandler+0x1f0>
 800910a:	687b      	ldr	r3, [r7, #4]
 800910c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800910e:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8009112:	687b      	ldr	r3, [r7, #4]
 8009114:	655a      	str	r2, [r3, #84]	; 0x54
 8009116:	e003      	b.n	8009120 <HAL_SPI_IRQHandler+0x1f0>
 8009118:	6878      	ldr	r0, [r7, #4]
 800911a:	f000 f827 	bl	800916c <HAL_SPI_ErrorCallback>
 800911e:	e000      	b.n	8009122 <HAL_SPI_IRQHandler+0x1f2>
 8009120:	bf00      	nop
 8009122:	bf00      	nop
 8009124:	3720      	adds	r7, #32
 8009126:	46bd      	mov	sp, r7
 8009128:	bd80      	pop	{r7, pc}
 800912a:	bf00      	nop
 800912c:	08009331 	.word	0x08009331

08009130 <HAL_SPI_RxCpltCallback>:
 8009130:	b480      	push	{r7}
 8009132:	b083      	sub	sp, #12
 8009134:	af00      	add	r7, sp, #0
 8009136:	6078      	str	r0, [r7, #4]
 8009138:	bf00      	nop
 800913a:	370c      	adds	r7, #12
 800913c:	46bd      	mov	sp, r7
 800913e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009142:	4770      	bx	lr

08009144 <HAL_SPI_RxHalfCpltCallback>:
 8009144:	b480      	push	{r7}
 8009146:	b083      	sub	sp, #12
 8009148:	af00      	add	r7, sp, #0
 800914a:	6078      	str	r0, [r7, #4]
 800914c:	bf00      	nop
 800914e:	370c      	adds	r7, #12
 8009150:	46bd      	mov	sp, r7
 8009152:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009156:	4770      	bx	lr

08009158 <HAL_SPI_TxRxHalfCpltCallback>:
 8009158:	b480      	push	{r7}
 800915a:	b083      	sub	sp, #12
 800915c:	af00      	add	r7, sp, #0
 800915e:	6078      	str	r0, [r7, #4]
 8009160:	bf00      	nop
 8009162:	370c      	adds	r7, #12
 8009164:	46bd      	mov	sp, r7
 8009166:	f85d 7b04 	ldr.w	r7, [sp], #4
 800916a:	4770      	bx	lr

0800916c <HAL_SPI_ErrorCallback>:
 800916c:	b480      	push	{r7}
 800916e:	b083      	sub	sp, #12
 8009170:	af00      	add	r7, sp, #0
 8009172:	6078      	str	r0, [r7, #4]
 8009174:	bf00      	nop
 8009176:	370c      	adds	r7, #12
 8009178:	46bd      	mov	sp, r7
 800917a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800917e:	4770      	bx	lr

08009180 <SPI_DMAReceiveCplt>:
 8009180:	b580      	push	{r7, lr}
 8009182:	b084      	sub	sp, #16
 8009184:	af00      	add	r7, sp, #0
 8009186:	6078      	str	r0, [r7, #4]
 8009188:	687b      	ldr	r3, [r7, #4]
 800918a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800918c:	60fb      	str	r3, [r7, #12]
 800918e:	f7fb fcff 	bl	8004b90 <HAL_GetTick>
 8009192:	60b8      	str	r0, [r7, #8]
 8009194:	687b      	ldr	r3, [r7, #4]
 8009196:	681b      	ldr	r3, [r3, #0]
 8009198:	681b      	ldr	r3, [r3, #0]
 800919a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800919e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80091a2:	d03b      	beq.n	800921c <SPI_DMAReceiveCplt+0x9c>
 80091a4:	68fb      	ldr	r3, [r7, #12]
 80091a6:	681b      	ldr	r3, [r3, #0]
 80091a8:	685a      	ldr	r2, [r3, #4]
 80091aa:	68fb      	ldr	r3, [r7, #12]
 80091ac:	681b      	ldr	r3, [r3, #0]
 80091ae:	f022 0220 	bic.w	r2, r2, #32
 80091b2:	605a      	str	r2, [r3, #4]
 80091b4:	68fb      	ldr	r3, [r7, #12]
 80091b6:	689b      	ldr	r3, [r3, #8]
 80091b8:	2b00      	cmp	r3, #0
 80091ba:	d10d      	bne.n	80091d8 <SPI_DMAReceiveCplt+0x58>
 80091bc:	68fb      	ldr	r3, [r7, #12]
 80091be:	685b      	ldr	r3, [r3, #4]
 80091c0:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80091c4:	d108      	bne.n	80091d8 <SPI_DMAReceiveCplt+0x58>
 80091c6:	68fb      	ldr	r3, [r7, #12]
 80091c8:	681b      	ldr	r3, [r3, #0]
 80091ca:	685a      	ldr	r2, [r3, #4]
 80091cc:	68fb      	ldr	r3, [r7, #12]
 80091ce:	681b      	ldr	r3, [r3, #0]
 80091d0:	f022 0203 	bic.w	r2, r2, #3
 80091d4:	605a      	str	r2, [r3, #4]
 80091d6:	e007      	b.n	80091e8 <SPI_DMAReceiveCplt+0x68>
 80091d8:	68fb      	ldr	r3, [r7, #12]
 80091da:	681b      	ldr	r3, [r3, #0]
 80091dc:	685a      	ldr	r2, [r3, #4]
 80091de:	68fb      	ldr	r3, [r7, #12]
 80091e0:	681b      	ldr	r3, [r3, #0]
 80091e2:	f022 0201 	bic.w	r2, r2, #1
 80091e6:	605a      	str	r2, [r3, #4]
 80091e8:	68ba      	ldr	r2, [r7, #8]
 80091ea:	2164      	movs	r1, #100	; 0x64
 80091ec:	68f8      	ldr	r0, [r7, #12]
 80091ee:	f000 f93b 	bl	8009468 <SPI_EndRxTransaction>
 80091f2:	4603      	mov	r3, r0
 80091f4:	2b00      	cmp	r3, #0
 80091f6:	d002      	beq.n	80091fe <SPI_DMAReceiveCplt+0x7e>
 80091f8:	68fb      	ldr	r3, [r7, #12]
 80091fa:	2220      	movs	r2, #32
 80091fc:	655a      	str	r2, [r3, #84]	; 0x54
 80091fe:	68fb      	ldr	r3, [r7, #12]
 8009200:	2200      	movs	r2, #0
 8009202:	87da      	strh	r2, [r3, #62]	; 0x3e
 8009204:	68fb      	ldr	r3, [r7, #12]
 8009206:	2201      	movs	r2, #1
 8009208:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800920c:	68fb      	ldr	r3, [r7, #12]
 800920e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009210:	2b00      	cmp	r3, #0
 8009212:	d003      	beq.n	800921c <SPI_DMAReceiveCplt+0x9c>
 8009214:	68f8      	ldr	r0, [r7, #12]
 8009216:	f7ff ffa9 	bl	800916c <HAL_SPI_ErrorCallback>
 800921a:	e002      	b.n	8009222 <SPI_DMAReceiveCplt+0xa2>
 800921c:	68f8      	ldr	r0, [r7, #12]
 800921e:	f7ff ff87 	bl	8009130 <HAL_SPI_RxCpltCallback>
 8009222:	3710      	adds	r7, #16
 8009224:	46bd      	mov	sp, r7
 8009226:	bd80      	pop	{r7, pc}

08009228 <SPI_DMATransmitReceiveCplt>:
 8009228:	b580      	push	{r7, lr}
 800922a:	b084      	sub	sp, #16
 800922c:	af00      	add	r7, sp, #0
 800922e:	6078      	str	r0, [r7, #4]
 8009230:	687b      	ldr	r3, [r7, #4]
 8009232:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009234:	60fb      	str	r3, [r7, #12]
 8009236:	f7fb fcab 	bl	8004b90 <HAL_GetTick>
 800923a:	60b8      	str	r0, [r7, #8]
 800923c:	687b      	ldr	r3, [r7, #4]
 800923e:	681b      	ldr	r3, [r3, #0]
 8009240:	681b      	ldr	r3, [r3, #0]
 8009242:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009246:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800924a:	d02f      	beq.n	80092ac <SPI_DMATransmitReceiveCplt+0x84>
 800924c:	68fb      	ldr	r3, [r7, #12]
 800924e:	681b      	ldr	r3, [r3, #0]
 8009250:	685a      	ldr	r2, [r3, #4]
 8009252:	68fb      	ldr	r3, [r7, #12]
 8009254:	681b      	ldr	r3, [r3, #0]
 8009256:	f022 0220 	bic.w	r2, r2, #32
 800925a:	605a      	str	r2, [r3, #4]
 800925c:	68ba      	ldr	r2, [r7, #8]
 800925e:	2164      	movs	r1, #100	; 0x64
 8009260:	68f8      	ldr	r0, [r7, #12]
 8009262:	f000 f967 	bl	8009534 <SPI_EndRxTxTransaction>
 8009266:	4603      	mov	r3, r0
 8009268:	2b00      	cmp	r3, #0
 800926a:	d005      	beq.n	8009278 <SPI_DMATransmitReceiveCplt+0x50>
 800926c:	68fb      	ldr	r3, [r7, #12]
 800926e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009270:	f043 0220 	orr.w	r2, r3, #32
 8009274:	68fb      	ldr	r3, [r7, #12]
 8009276:	655a      	str	r2, [r3, #84]	; 0x54
 8009278:	68fb      	ldr	r3, [r7, #12]
 800927a:	681b      	ldr	r3, [r3, #0]
 800927c:	685a      	ldr	r2, [r3, #4]
 800927e:	68fb      	ldr	r3, [r7, #12]
 8009280:	681b      	ldr	r3, [r3, #0]
 8009282:	f022 0203 	bic.w	r2, r2, #3
 8009286:	605a      	str	r2, [r3, #4]
 8009288:	68fb      	ldr	r3, [r7, #12]
 800928a:	2200      	movs	r2, #0
 800928c:	86da      	strh	r2, [r3, #54]	; 0x36
 800928e:	68fb      	ldr	r3, [r7, #12]
 8009290:	2200      	movs	r2, #0
 8009292:	87da      	strh	r2, [r3, #62]	; 0x3e
 8009294:	68fb      	ldr	r3, [r7, #12]
 8009296:	2201      	movs	r2, #1
 8009298:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800929c:	68fb      	ldr	r3, [r7, #12]
 800929e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80092a0:	2b00      	cmp	r3, #0
 80092a2:	d003      	beq.n	80092ac <SPI_DMATransmitReceiveCplt+0x84>
 80092a4:	68f8      	ldr	r0, [r7, #12]
 80092a6:	f7ff ff61 	bl	800916c <HAL_SPI_ErrorCallback>
 80092aa:	e002      	b.n	80092b2 <SPI_DMATransmitReceiveCplt+0x8a>
 80092ac:	68f8      	ldr	r0, [r7, #12]
 80092ae:	f7fa f93b 	bl	8003528 <HAL_SPI_TxRxCpltCallback>
 80092b2:	3710      	adds	r7, #16
 80092b4:	46bd      	mov	sp, r7
 80092b6:	bd80      	pop	{r7, pc}

080092b8 <SPI_DMAHalfReceiveCplt>:
 80092b8:	b580      	push	{r7, lr}
 80092ba:	b084      	sub	sp, #16
 80092bc:	af00      	add	r7, sp, #0
 80092be:	6078      	str	r0, [r7, #4]
 80092c0:	687b      	ldr	r3, [r7, #4]
 80092c2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80092c4:	60fb      	str	r3, [r7, #12]
 80092c6:	68f8      	ldr	r0, [r7, #12]
 80092c8:	f7ff ff3c 	bl	8009144 <HAL_SPI_RxHalfCpltCallback>
 80092cc:	bf00      	nop
 80092ce:	3710      	adds	r7, #16
 80092d0:	46bd      	mov	sp, r7
 80092d2:	bd80      	pop	{r7, pc}

080092d4 <SPI_DMAHalfTransmitReceiveCplt>:
 80092d4:	b580      	push	{r7, lr}
 80092d6:	b084      	sub	sp, #16
 80092d8:	af00      	add	r7, sp, #0
 80092da:	6078      	str	r0, [r7, #4]
 80092dc:	687b      	ldr	r3, [r7, #4]
 80092de:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80092e0:	60fb      	str	r3, [r7, #12]
 80092e2:	68f8      	ldr	r0, [r7, #12]
 80092e4:	f7ff ff38 	bl	8009158 <HAL_SPI_TxRxHalfCpltCallback>
 80092e8:	bf00      	nop
 80092ea:	3710      	adds	r7, #16
 80092ec:	46bd      	mov	sp, r7
 80092ee:	bd80      	pop	{r7, pc}

080092f0 <SPI_DMAError>:
 80092f0:	b580      	push	{r7, lr}
 80092f2:	b084      	sub	sp, #16
 80092f4:	af00      	add	r7, sp, #0
 80092f6:	6078      	str	r0, [r7, #4]
 80092f8:	687b      	ldr	r3, [r7, #4]
 80092fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80092fc:	60fb      	str	r3, [r7, #12]
 80092fe:	68fb      	ldr	r3, [r7, #12]
 8009300:	681b      	ldr	r3, [r3, #0]
 8009302:	685a      	ldr	r2, [r3, #4]
 8009304:	68fb      	ldr	r3, [r7, #12]
 8009306:	681b      	ldr	r3, [r3, #0]
 8009308:	f022 0203 	bic.w	r2, r2, #3
 800930c:	605a      	str	r2, [r3, #4]
 800930e:	68fb      	ldr	r3, [r7, #12]
 8009310:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009312:	f043 0210 	orr.w	r2, r3, #16
 8009316:	68fb      	ldr	r3, [r7, #12]
 8009318:	655a      	str	r2, [r3, #84]	; 0x54
 800931a:	68fb      	ldr	r3, [r7, #12]
 800931c:	2201      	movs	r2, #1
 800931e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8009322:	68f8      	ldr	r0, [r7, #12]
 8009324:	f7ff ff22 	bl	800916c <HAL_SPI_ErrorCallback>
 8009328:	bf00      	nop
 800932a:	3710      	adds	r7, #16
 800932c:	46bd      	mov	sp, r7
 800932e:	bd80      	pop	{r7, pc}

08009330 <SPI_DMAAbortOnError>:
 8009330:	b580      	push	{r7, lr}
 8009332:	b084      	sub	sp, #16
 8009334:	af00      	add	r7, sp, #0
 8009336:	6078      	str	r0, [r7, #4]
 8009338:	687b      	ldr	r3, [r7, #4]
 800933a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800933c:	60fb      	str	r3, [r7, #12]
 800933e:	68fb      	ldr	r3, [r7, #12]
 8009340:	2200      	movs	r2, #0
 8009342:	87da      	strh	r2, [r3, #62]	; 0x3e
 8009344:	68fb      	ldr	r3, [r7, #12]
 8009346:	2200      	movs	r2, #0
 8009348:	86da      	strh	r2, [r3, #54]	; 0x36
 800934a:	68f8      	ldr	r0, [r7, #12]
 800934c:	f7ff ff0e 	bl	800916c <HAL_SPI_ErrorCallback>
 8009350:	bf00      	nop
 8009352:	3710      	adds	r7, #16
 8009354:	46bd      	mov	sp, r7
 8009356:	bd80      	pop	{r7, pc}

08009358 <SPI_WaitFlagStateUntilTimeout>:
 8009358:	b580      	push	{r7, lr}
 800935a:	b088      	sub	sp, #32
 800935c:	af00      	add	r7, sp, #0
 800935e:	60f8      	str	r0, [r7, #12]
 8009360:	60b9      	str	r1, [r7, #8]
 8009362:	603b      	str	r3, [r7, #0]
 8009364:	4613      	mov	r3, r2
 8009366:	71fb      	strb	r3, [r7, #7]
 8009368:	f7fb fc12 	bl	8004b90 <HAL_GetTick>
 800936c:	4602      	mov	r2, r0
 800936e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009370:	1a9b      	subs	r3, r3, r2
 8009372:	683a      	ldr	r2, [r7, #0]
 8009374:	4413      	add	r3, r2
 8009376:	61fb      	str	r3, [r7, #28]
 8009378:	f7fb fc0a 	bl	8004b90 <HAL_GetTick>
 800937c:	61b8      	str	r0, [r7, #24]
 800937e:	4b39      	ldr	r3, [pc, #228]	; (8009464 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8009380:	681b      	ldr	r3, [r3, #0]
 8009382:	015b      	lsls	r3, r3, #5
 8009384:	0d1b      	lsrs	r3, r3, #20
 8009386:	69fa      	ldr	r2, [r7, #28]
 8009388:	fb02 f303 	mul.w	r3, r2, r3
 800938c:	617b      	str	r3, [r7, #20]
 800938e:	e054      	b.n	800943a <SPI_WaitFlagStateUntilTimeout+0xe2>
 8009390:	683b      	ldr	r3, [r7, #0]
 8009392:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009396:	d050      	beq.n	800943a <SPI_WaitFlagStateUntilTimeout+0xe2>
 8009398:	f7fb fbfa 	bl	8004b90 <HAL_GetTick>
 800939c:	4602      	mov	r2, r0
 800939e:	69bb      	ldr	r3, [r7, #24]
 80093a0:	1ad3      	subs	r3, r2, r3
 80093a2:	69fa      	ldr	r2, [r7, #28]
 80093a4:	429a      	cmp	r2, r3
 80093a6:	d902      	bls.n	80093ae <SPI_WaitFlagStateUntilTimeout+0x56>
 80093a8:	69fb      	ldr	r3, [r7, #28]
 80093aa:	2b00      	cmp	r3, #0
 80093ac:	d13d      	bne.n	800942a <SPI_WaitFlagStateUntilTimeout+0xd2>
 80093ae:	68fb      	ldr	r3, [r7, #12]
 80093b0:	681b      	ldr	r3, [r3, #0]
 80093b2:	685a      	ldr	r2, [r3, #4]
 80093b4:	68fb      	ldr	r3, [r7, #12]
 80093b6:	681b      	ldr	r3, [r3, #0]
 80093b8:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80093bc:	605a      	str	r2, [r3, #4]
 80093be:	68fb      	ldr	r3, [r7, #12]
 80093c0:	685b      	ldr	r3, [r3, #4]
 80093c2:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80093c6:	d111      	bne.n	80093ec <SPI_WaitFlagStateUntilTimeout+0x94>
 80093c8:	68fb      	ldr	r3, [r7, #12]
 80093ca:	689b      	ldr	r3, [r3, #8]
 80093cc:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80093d0:	d004      	beq.n	80093dc <SPI_WaitFlagStateUntilTimeout+0x84>
 80093d2:	68fb      	ldr	r3, [r7, #12]
 80093d4:	689b      	ldr	r3, [r3, #8]
 80093d6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80093da:	d107      	bne.n	80093ec <SPI_WaitFlagStateUntilTimeout+0x94>
 80093dc:	68fb      	ldr	r3, [r7, #12]
 80093de:	681b      	ldr	r3, [r3, #0]
 80093e0:	681a      	ldr	r2, [r3, #0]
 80093e2:	68fb      	ldr	r3, [r7, #12]
 80093e4:	681b      	ldr	r3, [r3, #0]
 80093e6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80093ea:	601a      	str	r2, [r3, #0]
 80093ec:	68fb      	ldr	r3, [r7, #12]
 80093ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80093f0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80093f4:	d10f      	bne.n	8009416 <SPI_WaitFlagStateUntilTimeout+0xbe>
 80093f6:	68fb      	ldr	r3, [r7, #12]
 80093f8:	681b      	ldr	r3, [r3, #0]
 80093fa:	681a      	ldr	r2, [r3, #0]
 80093fc:	68fb      	ldr	r3, [r7, #12]
 80093fe:	681b      	ldr	r3, [r3, #0]
 8009400:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8009404:	601a      	str	r2, [r3, #0]
 8009406:	68fb      	ldr	r3, [r7, #12]
 8009408:	681b      	ldr	r3, [r3, #0]
 800940a:	681a      	ldr	r2, [r3, #0]
 800940c:	68fb      	ldr	r3, [r7, #12]
 800940e:	681b      	ldr	r3, [r3, #0]
 8009410:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8009414:	601a      	str	r2, [r3, #0]
 8009416:	68fb      	ldr	r3, [r7, #12]
 8009418:	2201      	movs	r2, #1
 800941a:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800941e:	68fb      	ldr	r3, [r7, #12]
 8009420:	2200      	movs	r2, #0
 8009422:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8009426:	2303      	movs	r3, #3
 8009428:	e017      	b.n	800945a <SPI_WaitFlagStateUntilTimeout+0x102>
 800942a:	697b      	ldr	r3, [r7, #20]
 800942c:	2b00      	cmp	r3, #0
 800942e:	d101      	bne.n	8009434 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8009430:	2300      	movs	r3, #0
 8009432:	61fb      	str	r3, [r7, #28]
 8009434:	697b      	ldr	r3, [r7, #20]
 8009436:	3b01      	subs	r3, #1
 8009438:	617b      	str	r3, [r7, #20]
 800943a:	68fb      	ldr	r3, [r7, #12]
 800943c:	681b      	ldr	r3, [r3, #0]
 800943e:	689a      	ldr	r2, [r3, #8]
 8009440:	68bb      	ldr	r3, [r7, #8]
 8009442:	4013      	ands	r3, r2
 8009444:	68ba      	ldr	r2, [r7, #8]
 8009446:	429a      	cmp	r2, r3
 8009448:	bf0c      	ite	eq
 800944a:	2301      	moveq	r3, #1
 800944c:	2300      	movne	r3, #0
 800944e:	b2db      	uxtb	r3, r3
 8009450:	461a      	mov	r2, r3
 8009452:	79fb      	ldrb	r3, [r7, #7]
 8009454:	429a      	cmp	r2, r3
 8009456:	d19b      	bne.n	8009390 <SPI_WaitFlagStateUntilTimeout+0x38>
 8009458:	2300      	movs	r3, #0
 800945a:	4618      	mov	r0, r3
 800945c:	3720      	adds	r7, #32
 800945e:	46bd      	mov	sp, r7
 8009460:	bd80      	pop	{r7, pc}
 8009462:	bf00      	nop
 8009464:	20000140 	.word	0x20000140

08009468 <SPI_EndRxTransaction>:
 8009468:	b580      	push	{r7, lr}
 800946a:	b086      	sub	sp, #24
 800946c:	af02      	add	r7, sp, #8
 800946e:	60f8      	str	r0, [r7, #12]
 8009470:	60b9      	str	r1, [r7, #8]
 8009472:	607a      	str	r2, [r7, #4]
 8009474:	68fb      	ldr	r3, [r7, #12]
 8009476:	685b      	ldr	r3, [r3, #4]
 8009478:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800947c:	d111      	bne.n	80094a2 <SPI_EndRxTransaction+0x3a>
 800947e:	68fb      	ldr	r3, [r7, #12]
 8009480:	689b      	ldr	r3, [r3, #8]
 8009482:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009486:	d004      	beq.n	8009492 <SPI_EndRxTransaction+0x2a>
 8009488:	68fb      	ldr	r3, [r7, #12]
 800948a:	689b      	ldr	r3, [r3, #8]
 800948c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009490:	d107      	bne.n	80094a2 <SPI_EndRxTransaction+0x3a>
 8009492:	68fb      	ldr	r3, [r7, #12]
 8009494:	681b      	ldr	r3, [r3, #0]
 8009496:	681a      	ldr	r2, [r3, #0]
 8009498:	68fb      	ldr	r3, [r7, #12]
 800949a:	681b      	ldr	r3, [r3, #0]
 800949c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80094a0:	601a      	str	r2, [r3, #0]
 80094a2:	68fb      	ldr	r3, [r7, #12]
 80094a4:	685b      	ldr	r3, [r3, #4]
 80094a6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80094aa:	d12a      	bne.n	8009502 <SPI_EndRxTransaction+0x9a>
 80094ac:	68fb      	ldr	r3, [r7, #12]
 80094ae:	689b      	ldr	r3, [r3, #8]
 80094b0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80094b4:	d012      	beq.n	80094dc <SPI_EndRxTransaction+0x74>
 80094b6:	687b      	ldr	r3, [r7, #4]
 80094b8:	9300      	str	r3, [sp, #0]
 80094ba:	68bb      	ldr	r3, [r7, #8]
 80094bc:	2200      	movs	r2, #0
 80094be:	2180      	movs	r1, #128	; 0x80
 80094c0:	68f8      	ldr	r0, [r7, #12]
 80094c2:	f7ff ff49 	bl	8009358 <SPI_WaitFlagStateUntilTimeout>
 80094c6:	4603      	mov	r3, r0
 80094c8:	2b00      	cmp	r3, #0
 80094ca:	d02d      	beq.n	8009528 <SPI_EndRxTransaction+0xc0>
 80094cc:	68fb      	ldr	r3, [r7, #12]
 80094ce:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80094d0:	f043 0220 	orr.w	r2, r3, #32
 80094d4:	68fb      	ldr	r3, [r7, #12]
 80094d6:	655a      	str	r2, [r3, #84]	; 0x54
 80094d8:	2303      	movs	r3, #3
 80094da:	e026      	b.n	800952a <SPI_EndRxTransaction+0xc2>
 80094dc:	687b      	ldr	r3, [r7, #4]
 80094de:	9300      	str	r3, [sp, #0]
 80094e0:	68bb      	ldr	r3, [r7, #8]
 80094e2:	2200      	movs	r2, #0
 80094e4:	2101      	movs	r1, #1
 80094e6:	68f8      	ldr	r0, [r7, #12]
 80094e8:	f7ff ff36 	bl	8009358 <SPI_WaitFlagStateUntilTimeout>
 80094ec:	4603      	mov	r3, r0
 80094ee:	2b00      	cmp	r3, #0
 80094f0:	d01a      	beq.n	8009528 <SPI_EndRxTransaction+0xc0>
 80094f2:	68fb      	ldr	r3, [r7, #12]
 80094f4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80094f6:	f043 0220 	orr.w	r2, r3, #32
 80094fa:	68fb      	ldr	r3, [r7, #12]
 80094fc:	655a      	str	r2, [r3, #84]	; 0x54
 80094fe:	2303      	movs	r3, #3
 8009500:	e013      	b.n	800952a <SPI_EndRxTransaction+0xc2>
 8009502:	687b      	ldr	r3, [r7, #4]
 8009504:	9300      	str	r3, [sp, #0]
 8009506:	68bb      	ldr	r3, [r7, #8]
 8009508:	2200      	movs	r2, #0
 800950a:	2101      	movs	r1, #1
 800950c:	68f8      	ldr	r0, [r7, #12]
 800950e:	f7ff ff23 	bl	8009358 <SPI_WaitFlagStateUntilTimeout>
 8009512:	4603      	mov	r3, r0
 8009514:	2b00      	cmp	r3, #0
 8009516:	d007      	beq.n	8009528 <SPI_EndRxTransaction+0xc0>
 8009518:	68fb      	ldr	r3, [r7, #12]
 800951a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800951c:	f043 0220 	orr.w	r2, r3, #32
 8009520:	68fb      	ldr	r3, [r7, #12]
 8009522:	655a      	str	r2, [r3, #84]	; 0x54
 8009524:	2303      	movs	r3, #3
 8009526:	e000      	b.n	800952a <SPI_EndRxTransaction+0xc2>
 8009528:	2300      	movs	r3, #0
 800952a:	4618      	mov	r0, r3
 800952c:	3710      	adds	r7, #16
 800952e:	46bd      	mov	sp, r7
 8009530:	bd80      	pop	{r7, pc}
	...

08009534 <SPI_EndRxTxTransaction>:
 8009534:	b580      	push	{r7, lr}
 8009536:	b088      	sub	sp, #32
 8009538:	af02      	add	r7, sp, #8
 800953a:	60f8      	str	r0, [r7, #12]
 800953c:	60b9      	str	r1, [r7, #8]
 800953e:	607a      	str	r2, [r7, #4]
 8009540:	4b1b      	ldr	r3, [pc, #108]	; (80095b0 <SPI_EndRxTxTransaction+0x7c>)
 8009542:	681b      	ldr	r3, [r3, #0]
 8009544:	4a1b      	ldr	r2, [pc, #108]	; (80095b4 <SPI_EndRxTxTransaction+0x80>)
 8009546:	fba2 2303 	umull	r2, r3, r2, r3
 800954a:	0d5b      	lsrs	r3, r3, #21
 800954c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8009550:	fb02 f303 	mul.w	r3, r2, r3
 8009554:	617b      	str	r3, [r7, #20]
 8009556:	68fb      	ldr	r3, [r7, #12]
 8009558:	685b      	ldr	r3, [r3, #4]
 800955a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800955e:	d112      	bne.n	8009586 <SPI_EndRxTxTransaction+0x52>
 8009560:	687b      	ldr	r3, [r7, #4]
 8009562:	9300      	str	r3, [sp, #0]
 8009564:	68bb      	ldr	r3, [r7, #8]
 8009566:	2200      	movs	r2, #0
 8009568:	2180      	movs	r1, #128	; 0x80
 800956a:	68f8      	ldr	r0, [r7, #12]
 800956c:	f7ff fef4 	bl	8009358 <SPI_WaitFlagStateUntilTimeout>
 8009570:	4603      	mov	r3, r0
 8009572:	2b00      	cmp	r3, #0
 8009574:	d016      	beq.n	80095a4 <SPI_EndRxTxTransaction+0x70>
 8009576:	68fb      	ldr	r3, [r7, #12]
 8009578:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800957a:	f043 0220 	orr.w	r2, r3, #32
 800957e:	68fb      	ldr	r3, [r7, #12]
 8009580:	655a      	str	r2, [r3, #84]	; 0x54
 8009582:	2303      	movs	r3, #3
 8009584:	e00f      	b.n	80095a6 <SPI_EndRxTxTransaction+0x72>
 8009586:	697b      	ldr	r3, [r7, #20]
 8009588:	2b00      	cmp	r3, #0
 800958a:	d00a      	beq.n	80095a2 <SPI_EndRxTxTransaction+0x6e>
 800958c:	697b      	ldr	r3, [r7, #20]
 800958e:	3b01      	subs	r3, #1
 8009590:	617b      	str	r3, [r7, #20]
 8009592:	68fb      	ldr	r3, [r7, #12]
 8009594:	681b      	ldr	r3, [r3, #0]
 8009596:	689b      	ldr	r3, [r3, #8]
 8009598:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800959c:	2b80      	cmp	r3, #128	; 0x80
 800959e:	d0f2      	beq.n	8009586 <SPI_EndRxTxTransaction+0x52>
 80095a0:	e000      	b.n	80095a4 <SPI_EndRxTxTransaction+0x70>
 80095a2:	bf00      	nop
 80095a4:	2300      	movs	r3, #0
 80095a6:	4618      	mov	r0, r3
 80095a8:	3718      	adds	r7, #24
 80095aa:	46bd      	mov	sp, r7
 80095ac:	bd80      	pop	{r7, pc}
 80095ae:	bf00      	nop
 80095b0:	20000140 	.word	0x20000140
 80095b4:	165e9f81 	.word	0x165e9f81

080095b8 <HAL_TIM_Base_Init>:
 80095b8:	b580      	push	{r7, lr}
 80095ba:	b082      	sub	sp, #8
 80095bc:	af00      	add	r7, sp, #0
 80095be:	6078      	str	r0, [r7, #4]
 80095c0:	687b      	ldr	r3, [r7, #4]
 80095c2:	2b00      	cmp	r3, #0
 80095c4:	d101      	bne.n	80095ca <HAL_TIM_Base_Init+0x12>
 80095c6:	2301      	movs	r3, #1
 80095c8:	e041      	b.n	800964e <HAL_TIM_Base_Init+0x96>
 80095ca:	687b      	ldr	r3, [r7, #4]
 80095cc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80095d0:	b2db      	uxtb	r3, r3
 80095d2:	2b00      	cmp	r3, #0
 80095d4:	d106      	bne.n	80095e4 <HAL_TIM_Base_Init+0x2c>
 80095d6:	687b      	ldr	r3, [r7, #4]
 80095d8:	2200      	movs	r2, #0
 80095da:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80095de:	6878      	ldr	r0, [r7, #4]
 80095e0:	f7fb f864 	bl	80046ac <HAL_TIM_Base_MspInit>
 80095e4:	687b      	ldr	r3, [r7, #4]
 80095e6:	2202      	movs	r2, #2
 80095e8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80095ec:	687b      	ldr	r3, [r7, #4]
 80095ee:	681a      	ldr	r2, [r3, #0]
 80095f0:	687b      	ldr	r3, [r7, #4]
 80095f2:	3304      	adds	r3, #4
 80095f4:	4619      	mov	r1, r3
 80095f6:	4610      	mov	r0, r2
 80095f8:	f000 fcae 	bl	8009f58 <TIM_Base_SetConfig>
 80095fc:	687b      	ldr	r3, [r7, #4]
 80095fe:	2201      	movs	r2, #1
 8009600:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8009604:	687b      	ldr	r3, [r7, #4]
 8009606:	2201      	movs	r2, #1
 8009608:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800960c:	687b      	ldr	r3, [r7, #4]
 800960e:	2201      	movs	r2, #1
 8009610:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8009614:	687b      	ldr	r3, [r7, #4]
 8009616:	2201      	movs	r2, #1
 8009618:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800961c:	687b      	ldr	r3, [r7, #4]
 800961e:	2201      	movs	r2, #1
 8009620:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009624:	687b      	ldr	r3, [r7, #4]
 8009626:	2201      	movs	r2, #1
 8009628:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800962c:	687b      	ldr	r3, [r7, #4]
 800962e:	2201      	movs	r2, #1
 8009630:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8009634:	687b      	ldr	r3, [r7, #4]
 8009636:	2201      	movs	r2, #1
 8009638:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800963c:	687b      	ldr	r3, [r7, #4]
 800963e:	2201      	movs	r2, #1
 8009640:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8009644:	687b      	ldr	r3, [r7, #4]
 8009646:	2201      	movs	r2, #1
 8009648:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800964c:	2300      	movs	r3, #0
 800964e:	4618      	mov	r0, r3
 8009650:	3708      	adds	r7, #8
 8009652:	46bd      	mov	sp, r7
 8009654:	bd80      	pop	{r7, pc}
	...

08009658 <HAL_TIM_Base_Start>:
 8009658:	b480      	push	{r7}
 800965a:	b085      	sub	sp, #20
 800965c:	af00      	add	r7, sp, #0
 800965e:	6078      	str	r0, [r7, #4]
 8009660:	687b      	ldr	r3, [r7, #4]
 8009662:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8009666:	b2db      	uxtb	r3, r3
 8009668:	2b01      	cmp	r3, #1
 800966a:	d001      	beq.n	8009670 <HAL_TIM_Base_Start+0x18>
 800966c:	2301      	movs	r3, #1
 800966e:	e03c      	b.n	80096ea <HAL_TIM_Base_Start+0x92>
 8009670:	687b      	ldr	r3, [r7, #4]
 8009672:	2202      	movs	r2, #2
 8009674:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009678:	687b      	ldr	r3, [r7, #4]
 800967a:	681b      	ldr	r3, [r3, #0]
 800967c:	4a1e      	ldr	r2, [pc, #120]	; (80096f8 <HAL_TIM_Base_Start+0xa0>)
 800967e:	4293      	cmp	r3, r2
 8009680:	d018      	beq.n	80096b4 <HAL_TIM_Base_Start+0x5c>
 8009682:	687b      	ldr	r3, [r7, #4]
 8009684:	681b      	ldr	r3, [r3, #0]
 8009686:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800968a:	d013      	beq.n	80096b4 <HAL_TIM_Base_Start+0x5c>
 800968c:	687b      	ldr	r3, [r7, #4]
 800968e:	681b      	ldr	r3, [r3, #0]
 8009690:	4a1a      	ldr	r2, [pc, #104]	; (80096fc <HAL_TIM_Base_Start+0xa4>)
 8009692:	4293      	cmp	r3, r2
 8009694:	d00e      	beq.n	80096b4 <HAL_TIM_Base_Start+0x5c>
 8009696:	687b      	ldr	r3, [r7, #4]
 8009698:	681b      	ldr	r3, [r3, #0]
 800969a:	4a19      	ldr	r2, [pc, #100]	; (8009700 <HAL_TIM_Base_Start+0xa8>)
 800969c:	4293      	cmp	r3, r2
 800969e:	d009      	beq.n	80096b4 <HAL_TIM_Base_Start+0x5c>
 80096a0:	687b      	ldr	r3, [r7, #4]
 80096a2:	681b      	ldr	r3, [r3, #0]
 80096a4:	4a17      	ldr	r2, [pc, #92]	; (8009704 <HAL_TIM_Base_Start+0xac>)
 80096a6:	4293      	cmp	r3, r2
 80096a8:	d004      	beq.n	80096b4 <HAL_TIM_Base_Start+0x5c>
 80096aa:	687b      	ldr	r3, [r7, #4]
 80096ac:	681b      	ldr	r3, [r3, #0]
 80096ae:	4a16      	ldr	r2, [pc, #88]	; (8009708 <HAL_TIM_Base_Start+0xb0>)
 80096b0:	4293      	cmp	r3, r2
 80096b2:	d111      	bne.n	80096d8 <HAL_TIM_Base_Start+0x80>
 80096b4:	687b      	ldr	r3, [r7, #4]
 80096b6:	681b      	ldr	r3, [r3, #0]
 80096b8:	689b      	ldr	r3, [r3, #8]
 80096ba:	f003 0307 	and.w	r3, r3, #7
 80096be:	60fb      	str	r3, [r7, #12]
 80096c0:	68fb      	ldr	r3, [r7, #12]
 80096c2:	2b06      	cmp	r3, #6
 80096c4:	d010      	beq.n	80096e8 <HAL_TIM_Base_Start+0x90>
 80096c6:	687b      	ldr	r3, [r7, #4]
 80096c8:	681b      	ldr	r3, [r3, #0]
 80096ca:	681a      	ldr	r2, [r3, #0]
 80096cc:	687b      	ldr	r3, [r7, #4]
 80096ce:	681b      	ldr	r3, [r3, #0]
 80096d0:	f042 0201 	orr.w	r2, r2, #1
 80096d4:	601a      	str	r2, [r3, #0]
 80096d6:	e007      	b.n	80096e8 <HAL_TIM_Base_Start+0x90>
 80096d8:	687b      	ldr	r3, [r7, #4]
 80096da:	681b      	ldr	r3, [r3, #0]
 80096dc:	681a      	ldr	r2, [r3, #0]
 80096de:	687b      	ldr	r3, [r7, #4]
 80096e0:	681b      	ldr	r3, [r3, #0]
 80096e2:	f042 0201 	orr.w	r2, r2, #1
 80096e6:	601a      	str	r2, [r3, #0]
 80096e8:	2300      	movs	r3, #0
 80096ea:	4618      	mov	r0, r3
 80096ec:	3714      	adds	r7, #20
 80096ee:	46bd      	mov	sp, r7
 80096f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096f4:	4770      	bx	lr
 80096f6:	bf00      	nop
 80096f8:	40010000 	.word	0x40010000
 80096fc:	40000400 	.word	0x40000400
 8009700:	40000800 	.word	0x40000800
 8009704:	40000c00 	.word	0x40000c00
 8009708:	40014000 	.word	0x40014000

0800970c <HAL_TIM_Base_Start_IT>:
 800970c:	b480      	push	{r7}
 800970e:	b085      	sub	sp, #20
 8009710:	af00      	add	r7, sp, #0
 8009712:	6078      	str	r0, [r7, #4]
 8009714:	687b      	ldr	r3, [r7, #4]
 8009716:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800971a:	b2db      	uxtb	r3, r3
 800971c:	2b01      	cmp	r3, #1
 800971e:	d001      	beq.n	8009724 <HAL_TIM_Base_Start_IT+0x18>
 8009720:	2301      	movs	r3, #1
 8009722:	e044      	b.n	80097ae <HAL_TIM_Base_Start_IT+0xa2>
 8009724:	687b      	ldr	r3, [r7, #4]
 8009726:	2202      	movs	r2, #2
 8009728:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800972c:	687b      	ldr	r3, [r7, #4]
 800972e:	681b      	ldr	r3, [r3, #0]
 8009730:	68da      	ldr	r2, [r3, #12]
 8009732:	687b      	ldr	r3, [r7, #4]
 8009734:	681b      	ldr	r3, [r3, #0]
 8009736:	f042 0201 	orr.w	r2, r2, #1
 800973a:	60da      	str	r2, [r3, #12]
 800973c:	687b      	ldr	r3, [r7, #4]
 800973e:	681b      	ldr	r3, [r3, #0]
 8009740:	4a1e      	ldr	r2, [pc, #120]	; (80097bc <HAL_TIM_Base_Start_IT+0xb0>)
 8009742:	4293      	cmp	r3, r2
 8009744:	d018      	beq.n	8009778 <HAL_TIM_Base_Start_IT+0x6c>
 8009746:	687b      	ldr	r3, [r7, #4]
 8009748:	681b      	ldr	r3, [r3, #0]
 800974a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800974e:	d013      	beq.n	8009778 <HAL_TIM_Base_Start_IT+0x6c>
 8009750:	687b      	ldr	r3, [r7, #4]
 8009752:	681b      	ldr	r3, [r3, #0]
 8009754:	4a1a      	ldr	r2, [pc, #104]	; (80097c0 <HAL_TIM_Base_Start_IT+0xb4>)
 8009756:	4293      	cmp	r3, r2
 8009758:	d00e      	beq.n	8009778 <HAL_TIM_Base_Start_IT+0x6c>
 800975a:	687b      	ldr	r3, [r7, #4]
 800975c:	681b      	ldr	r3, [r3, #0]
 800975e:	4a19      	ldr	r2, [pc, #100]	; (80097c4 <HAL_TIM_Base_Start_IT+0xb8>)
 8009760:	4293      	cmp	r3, r2
 8009762:	d009      	beq.n	8009778 <HAL_TIM_Base_Start_IT+0x6c>
 8009764:	687b      	ldr	r3, [r7, #4]
 8009766:	681b      	ldr	r3, [r3, #0]
 8009768:	4a17      	ldr	r2, [pc, #92]	; (80097c8 <HAL_TIM_Base_Start_IT+0xbc>)
 800976a:	4293      	cmp	r3, r2
 800976c:	d004      	beq.n	8009778 <HAL_TIM_Base_Start_IT+0x6c>
 800976e:	687b      	ldr	r3, [r7, #4]
 8009770:	681b      	ldr	r3, [r3, #0]
 8009772:	4a16      	ldr	r2, [pc, #88]	; (80097cc <HAL_TIM_Base_Start_IT+0xc0>)
 8009774:	4293      	cmp	r3, r2
 8009776:	d111      	bne.n	800979c <HAL_TIM_Base_Start_IT+0x90>
 8009778:	687b      	ldr	r3, [r7, #4]
 800977a:	681b      	ldr	r3, [r3, #0]
 800977c:	689b      	ldr	r3, [r3, #8]
 800977e:	f003 0307 	and.w	r3, r3, #7
 8009782:	60fb      	str	r3, [r7, #12]
 8009784:	68fb      	ldr	r3, [r7, #12]
 8009786:	2b06      	cmp	r3, #6
 8009788:	d010      	beq.n	80097ac <HAL_TIM_Base_Start_IT+0xa0>
 800978a:	687b      	ldr	r3, [r7, #4]
 800978c:	681b      	ldr	r3, [r3, #0]
 800978e:	681a      	ldr	r2, [r3, #0]
 8009790:	687b      	ldr	r3, [r7, #4]
 8009792:	681b      	ldr	r3, [r3, #0]
 8009794:	f042 0201 	orr.w	r2, r2, #1
 8009798:	601a      	str	r2, [r3, #0]
 800979a:	e007      	b.n	80097ac <HAL_TIM_Base_Start_IT+0xa0>
 800979c:	687b      	ldr	r3, [r7, #4]
 800979e:	681b      	ldr	r3, [r3, #0]
 80097a0:	681a      	ldr	r2, [r3, #0]
 80097a2:	687b      	ldr	r3, [r7, #4]
 80097a4:	681b      	ldr	r3, [r3, #0]
 80097a6:	f042 0201 	orr.w	r2, r2, #1
 80097aa:	601a      	str	r2, [r3, #0]
 80097ac:	2300      	movs	r3, #0
 80097ae:	4618      	mov	r0, r3
 80097b0:	3714      	adds	r7, #20
 80097b2:	46bd      	mov	sp, r7
 80097b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097b8:	4770      	bx	lr
 80097ba:	bf00      	nop
 80097bc:	40010000 	.word	0x40010000
 80097c0:	40000400 	.word	0x40000400
 80097c4:	40000800 	.word	0x40000800
 80097c8:	40000c00 	.word	0x40000c00
 80097cc:	40014000 	.word	0x40014000

080097d0 <HAL_TIM_PWM_Init>:
 80097d0:	b580      	push	{r7, lr}
 80097d2:	b082      	sub	sp, #8
 80097d4:	af00      	add	r7, sp, #0
 80097d6:	6078      	str	r0, [r7, #4]
 80097d8:	687b      	ldr	r3, [r7, #4]
 80097da:	2b00      	cmp	r3, #0
 80097dc:	d101      	bne.n	80097e2 <HAL_TIM_PWM_Init+0x12>
 80097de:	2301      	movs	r3, #1
 80097e0:	e041      	b.n	8009866 <HAL_TIM_PWM_Init+0x96>
 80097e2:	687b      	ldr	r3, [r7, #4]
 80097e4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80097e8:	b2db      	uxtb	r3, r3
 80097ea:	2b00      	cmp	r3, #0
 80097ec:	d106      	bne.n	80097fc <HAL_TIM_PWM_Init+0x2c>
 80097ee:	687b      	ldr	r3, [r7, #4]
 80097f0:	2200      	movs	r2, #0
 80097f2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80097f6:	6878      	ldr	r0, [r7, #4]
 80097f8:	f000 f839 	bl	800986e <HAL_TIM_PWM_MspInit>
 80097fc:	687b      	ldr	r3, [r7, #4]
 80097fe:	2202      	movs	r2, #2
 8009800:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009804:	687b      	ldr	r3, [r7, #4]
 8009806:	681a      	ldr	r2, [r3, #0]
 8009808:	687b      	ldr	r3, [r7, #4]
 800980a:	3304      	adds	r3, #4
 800980c:	4619      	mov	r1, r3
 800980e:	4610      	mov	r0, r2
 8009810:	f000 fba2 	bl	8009f58 <TIM_Base_SetConfig>
 8009814:	687b      	ldr	r3, [r7, #4]
 8009816:	2201      	movs	r2, #1
 8009818:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800981c:	687b      	ldr	r3, [r7, #4]
 800981e:	2201      	movs	r2, #1
 8009820:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009824:	687b      	ldr	r3, [r7, #4]
 8009826:	2201      	movs	r2, #1
 8009828:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800982c:	687b      	ldr	r3, [r7, #4]
 800982e:	2201      	movs	r2, #1
 8009830:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009834:	687b      	ldr	r3, [r7, #4]
 8009836:	2201      	movs	r2, #1
 8009838:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800983c:	687b      	ldr	r3, [r7, #4]
 800983e:	2201      	movs	r2, #1
 8009840:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009844:	687b      	ldr	r3, [r7, #4]
 8009846:	2201      	movs	r2, #1
 8009848:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800984c:	687b      	ldr	r3, [r7, #4]
 800984e:	2201      	movs	r2, #1
 8009850:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8009854:	687b      	ldr	r3, [r7, #4]
 8009856:	2201      	movs	r2, #1
 8009858:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800985c:	687b      	ldr	r3, [r7, #4]
 800985e:	2201      	movs	r2, #1
 8009860:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009864:	2300      	movs	r3, #0
 8009866:	4618      	mov	r0, r3
 8009868:	3708      	adds	r7, #8
 800986a:	46bd      	mov	sp, r7
 800986c:	bd80      	pop	{r7, pc}

0800986e <HAL_TIM_PWM_MspInit>:
 800986e:	b480      	push	{r7}
 8009870:	b083      	sub	sp, #12
 8009872:	af00      	add	r7, sp, #0
 8009874:	6078      	str	r0, [r7, #4]
 8009876:	bf00      	nop
 8009878:	370c      	adds	r7, #12
 800987a:	46bd      	mov	sp, r7
 800987c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009880:	4770      	bx	lr
	...

08009884 <HAL_TIM_PWM_Start>:
 8009884:	b580      	push	{r7, lr}
 8009886:	b084      	sub	sp, #16
 8009888:	af00      	add	r7, sp, #0
 800988a:	6078      	str	r0, [r7, #4]
 800988c:	6039      	str	r1, [r7, #0]
 800988e:	683b      	ldr	r3, [r7, #0]
 8009890:	2b00      	cmp	r3, #0
 8009892:	d109      	bne.n	80098a8 <HAL_TIM_PWM_Start+0x24>
 8009894:	687b      	ldr	r3, [r7, #4]
 8009896:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800989a:	b2db      	uxtb	r3, r3
 800989c:	2b01      	cmp	r3, #1
 800989e:	bf14      	ite	ne
 80098a0:	2301      	movne	r3, #1
 80098a2:	2300      	moveq	r3, #0
 80098a4:	b2db      	uxtb	r3, r3
 80098a6:	e022      	b.n	80098ee <HAL_TIM_PWM_Start+0x6a>
 80098a8:	683b      	ldr	r3, [r7, #0]
 80098aa:	2b04      	cmp	r3, #4
 80098ac:	d109      	bne.n	80098c2 <HAL_TIM_PWM_Start+0x3e>
 80098ae:	687b      	ldr	r3, [r7, #4]
 80098b0:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 80098b4:	b2db      	uxtb	r3, r3
 80098b6:	2b01      	cmp	r3, #1
 80098b8:	bf14      	ite	ne
 80098ba:	2301      	movne	r3, #1
 80098bc:	2300      	moveq	r3, #0
 80098be:	b2db      	uxtb	r3, r3
 80098c0:	e015      	b.n	80098ee <HAL_TIM_PWM_Start+0x6a>
 80098c2:	683b      	ldr	r3, [r7, #0]
 80098c4:	2b08      	cmp	r3, #8
 80098c6:	d109      	bne.n	80098dc <HAL_TIM_PWM_Start+0x58>
 80098c8:	687b      	ldr	r3, [r7, #4]
 80098ca:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 80098ce:	b2db      	uxtb	r3, r3
 80098d0:	2b01      	cmp	r3, #1
 80098d2:	bf14      	ite	ne
 80098d4:	2301      	movne	r3, #1
 80098d6:	2300      	moveq	r3, #0
 80098d8:	b2db      	uxtb	r3, r3
 80098da:	e008      	b.n	80098ee <HAL_TIM_PWM_Start+0x6a>
 80098dc:	687b      	ldr	r3, [r7, #4]
 80098de:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80098e2:	b2db      	uxtb	r3, r3
 80098e4:	2b01      	cmp	r3, #1
 80098e6:	bf14      	ite	ne
 80098e8:	2301      	movne	r3, #1
 80098ea:	2300      	moveq	r3, #0
 80098ec:	b2db      	uxtb	r3, r3
 80098ee:	2b00      	cmp	r3, #0
 80098f0:	d001      	beq.n	80098f6 <HAL_TIM_PWM_Start+0x72>
 80098f2:	2301      	movs	r3, #1
 80098f4:	e068      	b.n	80099c8 <HAL_TIM_PWM_Start+0x144>
 80098f6:	683b      	ldr	r3, [r7, #0]
 80098f8:	2b00      	cmp	r3, #0
 80098fa:	d104      	bne.n	8009906 <HAL_TIM_PWM_Start+0x82>
 80098fc:	687b      	ldr	r3, [r7, #4]
 80098fe:	2202      	movs	r2, #2
 8009900:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8009904:	e013      	b.n	800992e <HAL_TIM_PWM_Start+0xaa>
 8009906:	683b      	ldr	r3, [r7, #0]
 8009908:	2b04      	cmp	r3, #4
 800990a:	d104      	bne.n	8009916 <HAL_TIM_PWM_Start+0x92>
 800990c:	687b      	ldr	r3, [r7, #4]
 800990e:	2202      	movs	r2, #2
 8009910:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8009914:	e00b      	b.n	800992e <HAL_TIM_PWM_Start+0xaa>
 8009916:	683b      	ldr	r3, [r7, #0]
 8009918:	2b08      	cmp	r3, #8
 800991a:	d104      	bne.n	8009926 <HAL_TIM_PWM_Start+0xa2>
 800991c:	687b      	ldr	r3, [r7, #4]
 800991e:	2202      	movs	r2, #2
 8009920:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009924:	e003      	b.n	800992e <HAL_TIM_PWM_Start+0xaa>
 8009926:	687b      	ldr	r3, [r7, #4]
 8009928:	2202      	movs	r2, #2
 800992a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800992e:	687b      	ldr	r3, [r7, #4]
 8009930:	681b      	ldr	r3, [r3, #0]
 8009932:	2201      	movs	r2, #1
 8009934:	6839      	ldr	r1, [r7, #0]
 8009936:	4618      	mov	r0, r3
 8009938:	f000 fdb4 	bl	800a4a4 <TIM_CCxChannelCmd>
 800993c:	687b      	ldr	r3, [r7, #4]
 800993e:	681b      	ldr	r3, [r3, #0]
 8009940:	4a23      	ldr	r2, [pc, #140]	; (80099d0 <HAL_TIM_PWM_Start+0x14c>)
 8009942:	4293      	cmp	r3, r2
 8009944:	d107      	bne.n	8009956 <HAL_TIM_PWM_Start+0xd2>
 8009946:	687b      	ldr	r3, [r7, #4]
 8009948:	681b      	ldr	r3, [r3, #0]
 800994a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800994c:	687b      	ldr	r3, [r7, #4]
 800994e:	681b      	ldr	r3, [r3, #0]
 8009950:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009954:	645a      	str	r2, [r3, #68]	; 0x44
 8009956:	687b      	ldr	r3, [r7, #4]
 8009958:	681b      	ldr	r3, [r3, #0]
 800995a:	4a1d      	ldr	r2, [pc, #116]	; (80099d0 <HAL_TIM_PWM_Start+0x14c>)
 800995c:	4293      	cmp	r3, r2
 800995e:	d018      	beq.n	8009992 <HAL_TIM_PWM_Start+0x10e>
 8009960:	687b      	ldr	r3, [r7, #4]
 8009962:	681b      	ldr	r3, [r3, #0]
 8009964:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009968:	d013      	beq.n	8009992 <HAL_TIM_PWM_Start+0x10e>
 800996a:	687b      	ldr	r3, [r7, #4]
 800996c:	681b      	ldr	r3, [r3, #0]
 800996e:	4a19      	ldr	r2, [pc, #100]	; (80099d4 <HAL_TIM_PWM_Start+0x150>)
 8009970:	4293      	cmp	r3, r2
 8009972:	d00e      	beq.n	8009992 <HAL_TIM_PWM_Start+0x10e>
 8009974:	687b      	ldr	r3, [r7, #4]
 8009976:	681b      	ldr	r3, [r3, #0]
 8009978:	4a17      	ldr	r2, [pc, #92]	; (80099d8 <HAL_TIM_PWM_Start+0x154>)
 800997a:	4293      	cmp	r3, r2
 800997c:	d009      	beq.n	8009992 <HAL_TIM_PWM_Start+0x10e>
 800997e:	687b      	ldr	r3, [r7, #4]
 8009980:	681b      	ldr	r3, [r3, #0]
 8009982:	4a16      	ldr	r2, [pc, #88]	; (80099dc <HAL_TIM_PWM_Start+0x158>)
 8009984:	4293      	cmp	r3, r2
 8009986:	d004      	beq.n	8009992 <HAL_TIM_PWM_Start+0x10e>
 8009988:	687b      	ldr	r3, [r7, #4]
 800998a:	681b      	ldr	r3, [r3, #0]
 800998c:	4a14      	ldr	r2, [pc, #80]	; (80099e0 <HAL_TIM_PWM_Start+0x15c>)
 800998e:	4293      	cmp	r3, r2
 8009990:	d111      	bne.n	80099b6 <HAL_TIM_PWM_Start+0x132>
 8009992:	687b      	ldr	r3, [r7, #4]
 8009994:	681b      	ldr	r3, [r3, #0]
 8009996:	689b      	ldr	r3, [r3, #8]
 8009998:	f003 0307 	and.w	r3, r3, #7
 800999c:	60fb      	str	r3, [r7, #12]
 800999e:	68fb      	ldr	r3, [r7, #12]
 80099a0:	2b06      	cmp	r3, #6
 80099a2:	d010      	beq.n	80099c6 <HAL_TIM_PWM_Start+0x142>
 80099a4:	687b      	ldr	r3, [r7, #4]
 80099a6:	681b      	ldr	r3, [r3, #0]
 80099a8:	681a      	ldr	r2, [r3, #0]
 80099aa:	687b      	ldr	r3, [r7, #4]
 80099ac:	681b      	ldr	r3, [r3, #0]
 80099ae:	f042 0201 	orr.w	r2, r2, #1
 80099b2:	601a      	str	r2, [r3, #0]
 80099b4:	e007      	b.n	80099c6 <HAL_TIM_PWM_Start+0x142>
 80099b6:	687b      	ldr	r3, [r7, #4]
 80099b8:	681b      	ldr	r3, [r3, #0]
 80099ba:	681a      	ldr	r2, [r3, #0]
 80099bc:	687b      	ldr	r3, [r7, #4]
 80099be:	681b      	ldr	r3, [r3, #0]
 80099c0:	f042 0201 	orr.w	r2, r2, #1
 80099c4:	601a      	str	r2, [r3, #0]
 80099c6:	2300      	movs	r3, #0
 80099c8:	4618      	mov	r0, r3
 80099ca:	3710      	adds	r7, #16
 80099cc:	46bd      	mov	sp, r7
 80099ce:	bd80      	pop	{r7, pc}
 80099d0:	40010000 	.word	0x40010000
 80099d4:	40000400 	.word	0x40000400
 80099d8:	40000800 	.word	0x40000800
 80099dc:	40000c00 	.word	0x40000c00
 80099e0:	40014000 	.word	0x40014000

080099e4 <HAL_TIM_IRQHandler>:
 80099e4:	b580      	push	{r7, lr}
 80099e6:	b082      	sub	sp, #8
 80099e8:	af00      	add	r7, sp, #0
 80099ea:	6078      	str	r0, [r7, #4]
 80099ec:	687b      	ldr	r3, [r7, #4]
 80099ee:	681b      	ldr	r3, [r3, #0]
 80099f0:	691b      	ldr	r3, [r3, #16]
 80099f2:	f003 0302 	and.w	r3, r3, #2
 80099f6:	2b02      	cmp	r3, #2
 80099f8:	d122      	bne.n	8009a40 <HAL_TIM_IRQHandler+0x5c>
 80099fa:	687b      	ldr	r3, [r7, #4]
 80099fc:	681b      	ldr	r3, [r3, #0]
 80099fe:	68db      	ldr	r3, [r3, #12]
 8009a00:	f003 0302 	and.w	r3, r3, #2
 8009a04:	2b02      	cmp	r3, #2
 8009a06:	d11b      	bne.n	8009a40 <HAL_TIM_IRQHandler+0x5c>
 8009a08:	687b      	ldr	r3, [r7, #4]
 8009a0a:	681b      	ldr	r3, [r3, #0]
 8009a0c:	f06f 0202 	mvn.w	r2, #2
 8009a10:	611a      	str	r2, [r3, #16]
 8009a12:	687b      	ldr	r3, [r7, #4]
 8009a14:	2201      	movs	r2, #1
 8009a16:	771a      	strb	r2, [r3, #28]
 8009a18:	687b      	ldr	r3, [r7, #4]
 8009a1a:	681b      	ldr	r3, [r3, #0]
 8009a1c:	699b      	ldr	r3, [r3, #24]
 8009a1e:	f003 0303 	and.w	r3, r3, #3
 8009a22:	2b00      	cmp	r3, #0
 8009a24:	d003      	beq.n	8009a2e <HAL_TIM_IRQHandler+0x4a>
 8009a26:	6878      	ldr	r0, [r7, #4]
 8009a28:	f000 fa77 	bl	8009f1a <HAL_TIM_IC_CaptureCallback>
 8009a2c:	e005      	b.n	8009a3a <HAL_TIM_IRQHandler+0x56>
 8009a2e:	6878      	ldr	r0, [r7, #4]
 8009a30:	f000 fa69 	bl	8009f06 <HAL_TIM_OC_DelayElapsedCallback>
 8009a34:	6878      	ldr	r0, [r7, #4]
 8009a36:	f000 fa7a 	bl	8009f2e <HAL_TIM_PWM_PulseFinishedCallback>
 8009a3a:	687b      	ldr	r3, [r7, #4]
 8009a3c:	2200      	movs	r2, #0
 8009a3e:	771a      	strb	r2, [r3, #28]
 8009a40:	687b      	ldr	r3, [r7, #4]
 8009a42:	681b      	ldr	r3, [r3, #0]
 8009a44:	691b      	ldr	r3, [r3, #16]
 8009a46:	f003 0304 	and.w	r3, r3, #4
 8009a4a:	2b04      	cmp	r3, #4
 8009a4c:	d122      	bne.n	8009a94 <HAL_TIM_IRQHandler+0xb0>
 8009a4e:	687b      	ldr	r3, [r7, #4]
 8009a50:	681b      	ldr	r3, [r3, #0]
 8009a52:	68db      	ldr	r3, [r3, #12]
 8009a54:	f003 0304 	and.w	r3, r3, #4
 8009a58:	2b04      	cmp	r3, #4
 8009a5a:	d11b      	bne.n	8009a94 <HAL_TIM_IRQHandler+0xb0>
 8009a5c:	687b      	ldr	r3, [r7, #4]
 8009a5e:	681b      	ldr	r3, [r3, #0]
 8009a60:	f06f 0204 	mvn.w	r2, #4
 8009a64:	611a      	str	r2, [r3, #16]
 8009a66:	687b      	ldr	r3, [r7, #4]
 8009a68:	2202      	movs	r2, #2
 8009a6a:	771a      	strb	r2, [r3, #28]
 8009a6c:	687b      	ldr	r3, [r7, #4]
 8009a6e:	681b      	ldr	r3, [r3, #0]
 8009a70:	699b      	ldr	r3, [r3, #24]
 8009a72:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009a76:	2b00      	cmp	r3, #0
 8009a78:	d003      	beq.n	8009a82 <HAL_TIM_IRQHandler+0x9e>
 8009a7a:	6878      	ldr	r0, [r7, #4]
 8009a7c:	f000 fa4d 	bl	8009f1a <HAL_TIM_IC_CaptureCallback>
 8009a80:	e005      	b.n	8009a8e <HAL_TIM_IRQHandler+0xaa>
 8009a82:	6878      	ldr	r0, [r7, #4]
 8009a84:	f000 fa3f 	bl	8009f06 <HAL_TIM_OC_DelayElapsedCallback>
 8009a88:	6878      	ldr	r0, [r7, #4]
 8009a8a:	f000 fa50 	bl	8009f2e <HAL_TIM_PWM_PulseFinishedCallback>
 8009a8e:	687b      	ldr	r3, [r7, #4]
 8009a90:	2200      	movs	r2, #0
 8009a92:	771a      	strb	r2, [r3, #28]
 8009a94:	687b      	ldr	r3, [r7, #4]
 8009a96:	681b      	ldr	r3, [r3, #0]
 8009a98:	691b      	ldr	r3, [r3, #16]
 8009a9a:	f003 0308 	and.w	r3, r3, #8
 8009a9e:	2b08      	cmp	r3, #8
 8009aa0:	d122      	bne.n	8009ae8 <HAL_TIM_IRQHandler+0x104>
 8009aa2:	687b      	ldr	r3, [r7, #4]
 8009aa4:	681b      	ldr	r3, [r3, #0]
 8009aa6:	68db      	ldr	r3, [r3, #12]
 8009aa8:	f003 0308 	and.w	r3, r3, #8
 8009aac:	2b08      	cmp	r3, #8
 8009aae:	d11b      	bne.n	8009ae8 <HAL_TIM_IRQHandler+0x104>
 8009ab0:	687b      	ldr	r3, [r7, #4]
 8009ab2:	681b      	ldr	r3, [r3, #0]
 8009ab4:	f06f 0208 	mvn.w	r2, #8
 8009ab8:	611a      	str	r2, [r3, #16]
 8009aba:	687b      	ldr	r3, [r7, #4]
 8009abc:	2204      	movs	r2, #4
 8009abe:	771a      	strb	r2, [r3, #28]
 8009ac0:	687b      	ldr	r3, [r7, #4]
 8009ac2:	681b      	ldr	r3, [r3, #0]
 8009ac4:	69db      	ldr	r3, [r3, #28]
 8009ac6:	f003 0303 	and.w	r3, r3, #3
 8009aca:	2b00      	cmp	r3, #0
 8009acc:	d003      	beq.n	8009ad6 <HAL_TIM_IRQHandler+0xf2>
 8009ace:	6878      	ldr	r0, [r7, #4]
 8009ad0:	f000 fa23 	bl	8009f1a <HAL_TIM_IC_CaptureCallback>
 8009ad4:	e005      	b.n	8009ae2 <HAL_TIM_IRQHandler+0xfe>
 8009ad6:	6878      	ldr	r0, [r7, #4]
 8009ad8:	f000 fa15 	bl	8009f06 <HAL_TIM_OC_DelayElapsedCallback>
 8009adc:	6878      	ldr	r0, [r7, #4]
 8009ade:	f000 fa26 	bl	8009f2e <HAL_TIM_PWM_PulseFinishedCallback>
 8009ae2:	687b      	ldr	r3, [r7, #4]
 8009ae4:	2200      	movs	r2, #0
 8009ae6:	771a      	strb	r2, [r3, #28]
 8009ae8:	687b      	ldr	r3, [r7, #4]
 8009aea:	681b      	ldr	r3, [r3, #0]
 8009aec:	691b      	ldr	r3, [r3, #16]
 8009aee:	f003 0310 	and.w	r3, r3, #16
 8009af2:	2b10      	cmp	r3, #16
 8009af4:	d122      	bne.n	8009b3c <HAL_TIM_IRQHandler+0x158>
 8009af6:	687b      	ldr	r3, [r7, #4]
 8009af8:	681b      	ldr	r3, [r3, #0]
 8009afa:	68db      	ldr	r3, [r3, #12]
 8009afc:	f003 0310 	and.w	r3, r3, #16
 8009b00:	2b10      	cmp	r3, #16
 8009b02:	d11b      	bne.n	8009b3c <HAL_TIM_IRQHandler+0x158>
 8009b04:	687b      	ldr	r3, [r7, #4]
 8009b06:	681b      	ldr	r3, [r3, #0]
 8009b08:	f06f 0210 	mvn.w	r2, #16
 8009b0c:	611a      	str	r2, [r3, #16]
 8009b0e:	687b      	ldr	r3, [r7, #4]
 8009b10:	2208      	movs	r2, #8
 8009b12:	771a      	strb	r2, [r3, #28]
 8009b14:	687b      	ldr	r3, [r7, #4]
 8009b16:	681b      	ldr	r3, [r3, #0]
 8009b18:	69db      	ldr	r3, [r3, #28]
 8009b1a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009b1e:	2b00      	cmp	r3, #0
 8009b20:	d003      	beq.n	8009b2a <HAL_TIM_IRQHandler+0x146>
 8009b22:	6878      	ldr	r0, [r7, #4]
 8009b24:	f000 f9f9 	bl	8009f1a <HAL_TIM_IC_CaptureCallback>
 8009b28:	e005      	b.n	8009b36 <HAL_TIM_IRQHandler+0x152>
 8009b2a:	6878      	ldr	r0, [r7, #4]
 8009b2c:	f000 f9eb 	bl	8009f06 <HAL_TIM_OC_DelayElapsedCallback>
 8009b30:	6878      	ldr	r0, [r7, #4]
 8009b32:	f000 f9fc 	bl	8009f2e <HAL_TIM_PWM_PulseFinishedCallback>
 8009b36:	687b      	ldr	r3, [r7, #4]
 8009b38:	2200      	movs	r2, #0
 8009b3a:	771a      	strb	r2, [r3, #28]
 8009b3c:	687b      	ldr	r3, [r7, #4]
 8009b3e:	681b      	ldr	r3, [r3, #0]
 8009b40:	691b      	ldr	r3, [r3, #16]
 8009b42:	f003 0301 	and.w	r3, r3, #1
 8009b46:	2b01      	cmp	r3, #1
 8009b48:	d10e      	bne.n	8009b68 <HAL_TIM_IRQHandler+0x184>
 8009b4a:	687b      	ldr	r3, [r7, #4]
 8009b4c:	681b      	ldr	r3, [r3, #0]
 8009b4e:	68db      	ldr	r3, [r3, #12]
 8009b50:	f003 0301 	and.w	r3, r3, #1
 8009b54:	2b01      	cmp	r3, #1
 8009b56:	d107      	bne.n	8009b68 <HAL_TIM_IRQHandler+0x184>
 8009b58:	687b      	ldr	r3, [r7, #4]
 8009b5a:	681b      	ldr	r3, [r3, #0]
 8009b5c:	f06f 0201 	mvn.w	r2, #1
 8009b60:	611a      	str	r2, [r3, #16]
 8009b62:	6878      	ldr	r0, [r7, #4]
 8009b64:	f7f9 fe64 	bl	8003830 <HAL_TIM_PeriodElapsedCallback>
 8009b68:	687b      	ldr	r3, [r7, #4]
 8009b6a:	681b      	ldr	r3, [r3, #0]
 8009b6c:	691b      	ldr	r3, [r3, #16]
 8009b6e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009b72:	2b80      	cmp	r3, #128	; 0x80
 8009b74:	d10e      	bne.n	8009b94 <HAL_TIM_IRQHandler+0x1b0>
 8009b76:	687b      	ldr	r3, [r7, #4]
 8009b78:	681b      	ldr	r3, [r3, #0]
 8009b7a:	68db      	ldr	r3, [r3, #12]
 8009b7c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009b80:	2b80      	cmp	r3, #128	; 0x80
 8009b82:	d107      	bne.n	8009b94 <HAL_TIM_IRQHandler+0x1b0>
 8009b84:	687b      	ldr	r3, [r7, #4]
 8009b86:	681b      	ldr	r3, [r3, #0]
 8009b88:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8009b8c:	611a      	str	r2, [r3, #16]
 8009b8e:	6878      	ldr	r0, [r7, #4]
 8009b90:	f000 fd26 	bl	800a5e0 <HAL_TIMEx_BreakCallback>
 8009b94:	687b      	ldr	r3, [r7, #4]
 8009b96:	681b      	ldr	r3, [r3, #0]
 8009b98:	691b      	ldr	r3, [r3, #16]
 8009b9a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009b9e:	2b40      	cmp	r3, #64	; 0x40
 8009ba0:	d10e      	bne.n	8009bc0 <HAL_TIM_IRQHandler+0x1dc>
 8009ba2:	687b      	ldr	r3, [r7, #4]
 8009ba4:	681b      	ldr	r3, [r3, #0]
 8009ba6:	68db      	ldr	r3, [r3, #12]
 8009ba8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009bac:	2b40      	cmp	r3, #64	; 0x40
 8009bae:	d107      	bne.n	8009bc0 <HAL_TIM_IRQHandler+0x1dc>
 8009bb0:	687b      	ldr	r3, [r7, #4]
 8009bb2:	681b      	ldr	r3, [r3, #0]
 8009bb4:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8009bb8:	611a      	str	r2, [r3, #16]
 8009bba:	6878      	ldr	r0, [r7, #4]
 8009bbc:	f000 f9c1 	bl	8009f42 <HAL_TIM_TriggerCallback>
 8009bc0:	687b      	ldr	r3, [r7, #4]
 8009bc2:	681b      	ldr	r3, [r3, #0]
 8009bc4:	691b      	ldr	r3, [r3, #16]
 8009bc6:	f003 0320 	and.w	r3, r3, #32
 8009bca:	2b20      	cmp	r3, #32
 8009bcc:	d10e      	bne.n	8009bec <HAL_TIM_IRQHandler+0x208>
 8009bce:	687b      	ldr	r3, [r7, #4]
 8009bd0:	681b      	ldr	r3, [r3, #0]
 8009bd2:	68db      	ldr	r3, [r3, #12]
 8009bd4:	f003 0320 	and.w	r3, r3, #32
 8009bd8:	2b20      	cmp	r3, #32
 8009bda:	d107      	bne.n	8009bec <HAL_TIM_IRQHandler+0x208>
 8009bdc:	687b      	ldr	r3, [r7, #4]
 8009bde:	681b      	ldr	r3, [r3, #0]
 8009be0:	f06f 0220 	mvn.w	r2, #32
 8009be4:	611a      	str	r2, [r3, #16]
 8009be6:	6878      	ldr	r0, [r7, #4]
 8009be8:	f000 fcf0 	bl	800a5cc <HAL_TIMEx_CommutCallback>
 8009bec:	bf00      	nop
 8009bee:	3708      	adds	r7, #8
 8009bf0:	46bd      	mov	sp, r7
 8009bf2:	bd80      	pop	{r7, pc}

08009bf4 <HAL_TIM_PWM_ConfigChannel>:
 8009bf4:	b580      	push	{r7, lr}
 8009bf6:	b086      	sub	sp, #24
 8009bf8:	af00      	add	r7, sp, #0
 8009bfa:	60f8      	str	r0, [r7, #12]
 8009bfc:	60b9      	str	r1, [r7, #8]
 8009bfe:	607a      	str	r2, [r7, #4]
 8009c00:	2300      	movs	r3, #0
 8009c02:	75fb      	strb	r3, [r7, #23]
 8009c04:	68fb      	ldr	r3, [r7, #12]
 8009c06:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009c0a:	2b01      	cmp	r3, #1
 8009c0c:	d101      	bne.n	8009c12 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8009c0e:	2302      	movs	r3, #2
 8009c10:	e0ae      	b.n	8009d70 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8009c12:	68fb      	ldr	r3, [r7, #12]
 8009c14:	2201      	movs	r2, #1
 8009c16:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009c1a:	687b      	ldr	r3, [r7, #4]
 8009c1c:	2b0c      	cmp	r3, #12
 8009c1e:	f200 809f 	bhi.w	8009d60 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8009c22:	a201      	add	r2, pc, #4	; (adr r2, 8009c28 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8009c24:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009c28:	08009c5d 	.word	0x08009c5d
 8009c2c:	08009d61 	.word	0x08009d61
 8009c30:	08009d61 	.word	0x08009d61
 8009c34:	08009d61 	.word	0x08009d61
 8009c38:	08009c9d 	.word	0x08009c9d
 8009c3c:	08009d61 	.word	0x08009d61
 8009c40:	08009d61 	.word	0x08009d61
 8009c44:	08009d61 	.word	0x08009d61
 8009c48:	08009cdf 	.word	0x08009cdf
 8009c4c:	08009d61 	.word	0x08009d61
 8009c50:	08009d61 	.word	0x08009d61
 8009c54:	08009d61 	.word	0x08009d61
 8009c58:	08009d1f 	.word	0x08009d1f
 8009c5c:	68fb      	ldr	r3, [r7, #12]
 8009c5e:	681b      	ldr	r3, [r3, #0]
 8009c60:	68b9      	ldr	r1, [r7, #8]
 8009c62:	4618      	mov	r0, r3
 8009c64:	f000 f9f8 	bl	800a058 <TIM_OC1_SetConfig>
 8009c68:	68fb      	ldr	r3, [r7, #12]
 8009c6a:	681b      	ldr	r3, [r3, #0]
 8009c6c:	699a      	ldr	r2, [r3, #24]
 8009c6e:	68fb      	ldr	r3, [r7, #12]
 8009c70:	681b      	ldr	r3, [r3, #0]
 8009c72:	f042 0208 	orr.w	r2, r2, #8
 8009c76:	619a      	str	r2, [r3, #24]
 8009c78:	68fb      	ldr	r3, [r7, #12]
 8009c7a:	681b      	ldr	r3, [r3, #0]
 8009c7c:	699a      	ldr	r2, [r3, #24]
 8009c7e:	68fb      	ldr	r3, [r7, #12]
 8009c80:	681b      	ldr	r3, [r3, #0]
 8009c82:	f022 0204 	bic.w	r2, r2, #4
 8009c86:	619a      	str	r2, [r3, #24]
 8009c88:	68fb      	ldr	r3, [r7, #12]
 8009c8a:	681b      	ldr	r3, [r3, #0]
 8009c8c:	6999      	ldr	r1, [r3, #24]
 8009c8e:	68bb      	ldr	r3, [r7, #8]
 8009c90:	691a      	ldr	r2, [r3, #16]
 8009c92:	68fb      	ldr	r3, [r7, #12]
 8009c94:	681b      	ldr	r3, [r3, #0]
 8009c96:	430a      	orrs	r2, r1
 8009c98:	619a      	str	r2, [r3, #24]
 8009c9a:	e064      	b.n	8009d66 <HAL_TIM_PWM_ConfigChannel+0x172>
 8009c9c:	68fb      	ldr	r3, [r7, #12]
 8009c9e:	681b      	ldr	r3, [r3, #0]
 8009ca0:	68b9      	ldr	r1, [r7, #8]
 8009ca2:	4618      	mov	r0, r3
 8009ca4:	f000 fa3e 	bl	800a124 <TIM_OC2_SetConfig>
 8009ca8:	68fb      	ldr	r3, [r7, #12]
 8009caa:	681b      	ldr	r3, [r3, #0]
 8009cac:	699a      	ldr	r2, [r3, #24]
 8009cae:	68fb      	ldr	r3, [r7, #12]
 8009cb0:	681b      	ldr	r3, [r3, #0]
 8009cb2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009cb6:	619a      	str	r2, [r3, #24]
 8009cb8:	68fb      	ldr	r3, [r7, #12]
 8009cba:	681b      	ldr	r3, [r3, #0]
 8009cbc:	699a      	ldr	r2, [r3, #24]
 8009cbe:	68fb      	ldr	r3, [r7, #12]
 8009cc0:	681b      	ldr	r3, [r3, #0]
 8009cc2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009cc6:	619a      	str	r2, [r3, #24]
 8009cc8:	68fb      	ldr	r3, [r7, #12]
 8009cca:	681b      	ldr	r3, [r3, #0]
 8009ccc:	6999      	ldr	r1, [r3, #24]
 8009cce:	68bb      	ldr	r3, [r7, #8]
 8009cd0:	691b      	ldr	r3, [r3, #16]
 8009cd2:	021a      	lsls	r2, r3, #8
 8009cd4:	68fb      	ldr	r3, [r7, #12]
 8009cd6:	681b      	ldr	r3, [r3, #0]
 8009cd8:	430a      	orrs	r2, r1
 8009cda:	619a      	str	r2, [r3, #24]
 8009cdc:	e043      	b.n	8009d66 <HAL_TIM_PWM_ConfigChannel+0x172>
 8009cde:	68fb      	ldr	r3, [r7, #12]
 8009ce0:	681b      	ldr	r3, [r3, #0]
 8009ce2:	68b9      	ldr	r1, [r7, #8]
 8009ce4:	4618      	mov	r0, r3
 8009ce6:	f000 fa89 	bl	800a1fc <TIM_OC3_SetConfig>
 8009cea:	68fb      	ldr	r3, [r7, #12]
 8009cec:	681b      	ldr	r3, [r3, #0]
 8009cee:	69da      	ldr	r2, [r3, #28]
 8009cf0:	68fb      	ldr	r3, [r7, #12]
 8009cf2:	681b      	ldr	r3, [r3, #0]
 8009cf4:	f042 0208 	orr.w	r2, r2, #8
 8009cf8:	61da      	str	r2, [r3, #28]
 8009cfa:	68fb      	ldr	r3, [r7, #12]
 8009cfc:	681b      	ldr	r3, [r3, #0]
 8009cfe:	69da      	ldr	r2, [r3, #28]
 8009d00:	68fb      	ldr	r3, [r7, #12]
 8009d02:	681b      	ldr	r3, [r3, #0]
 8009d04:	f022 0204 	bic.w	r2, r2, #4
 8009d08:	61da      	str	r2, [r3, #28]
 8009d0a:	68fb      	ldr	r3, [r7, #12]
 8009d0c:	681b      	ldr	r3, [r3, #0]
 8009d0e:	69d9      	ldr	r1, [r3, #28]
 8009d10:	68bb      	ldr	r3, [r7, #8]
 8009d12:	691a      	ldr	r2, [r3, #16]
 8009d14:	68fb      	ldr	r3, [r7, #12]
 8009d16:	681b      	ldr	r3, [r3, #0]
 8009d18:	430a      	orrs	r2, r1
 8009d1a:	61da      	str	r2, [r3, #28]
 8009d1c:	e023      	b.n	8009d66 <HAL_TIM_PWM_ConfigChannel+0x172>
 8009d1e:	68fb      	ldr	r3, [r7, #12]
 8009d20:	681b      	ldr	r3, [r3, #0]
 8009d22:	68b9      	ldr	r1, [r7, #8]
 8009d24:	4618      	mov	r0, r3
 8009d26:	f000 fad3 	bl	800a2d0 <TIM_OC4_SetConfig>
 8009d2a:	68fb      	ldr	r3, [r7, #12]
 8009d2c:	681b      	ldr	r3, [r3, #0]
 8009d2e:	69da      	ldr	r2, [r3, #28]
 8009d30:	68fb      	ldr	r3, [r7, #12]
 8009d32:	681b      	ldr	r3, [r3, #0]
 8009d34:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009d38:	61da      	str	r2, [r3, #28]
 8009d3a:	68fb      	ldr	r3, [r7, #12]
 8009d3c:	681b      	ldr	r3, [r3, #0]
 8009d3e:	69da      	ldr	r2, [r3, #28]
 8009d40:	68fb      	ldr	r3, [r7, #12]
 8009d42:	681b      	ldr	r3, [r3, #0]
 8009d44:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009d48:	61da      	str	r2, [r3, #28]
 8009d4a:	68fb      	ldr	r3, [r7, #12]
 8009d4c:	681b      	ldr	r3, [r3, #0]
 8009d4e:	69d9      	ldr	r1, [r3, #28]
 8009d50:	68bb      	ldr	r3, [r7, #8]
 8009d52:	691b      	ldr	r3, [r3, #16]
 8009d54:	021a      	lsls	r2, r3, #8
 8009d56:	68fb      	ldr	r3, [r7, #12]
 8009d58:	681b      	ldr	r3, [r3, #0]
 8009d5a:	430a      	orrs	r2, r1
 8009d5c:	61da      	str	r2, [r3, #28]
 8009d5e:	e002      	b.n	8009d66 <HAL_TIM_PWM_ConfigChannel+0x172>
 8009d60:	2301      	movs	r3, #1
 8009d62:	75fb      	strb	r3, [r7, #23]
 8009d64:	bf00      	nop
 8009d66:	68fb      	ldr	r3, [r7, #12]
 8009d68:	2200      	movs	r2, #0
 8009d6a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009d6e:	7dfb      	ldrb	r3, [r7, #23]
 8009d70:	4618      	mov	r0, r3
 8009d72:	3718      	adds	r7, #24
 8009d74:	46bd      	mov	sp, r7
 8009d76:	bd80      	pop	{r7, pc}

08009d78 <HAL_TIM_ConfigClockSource>:
 8009d78:	b580      	push	{r7, lr}
 8009d7a:	b084      	sub	sp, #16
 8009d7c:	af00      	add	r7, sp, #0
 8009d7e:	6078      	str	r0, [r7, #4]
 8009d80:	6039      	str	r1, [r7, #0]
 8009d82:	2300      	movs	r3, #0
 8009d84:	73fb      	strb	r3, [r7, #15]
 8009d86:	687b      	ldr	r3, [r7, #4]
 8009d88:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8009d8c:	2b01      	cmp	r3, #1
 8009d8e:	d101      	bne.n	8009d94 <HAL_TIM_ConfigClockSource+0x1c>
 8009d90:	2302      	movs	r3, #2
 8009d92:	e0b4      	b.n	8009efe <HAL_TIM_ConfigClockSource+0x186>
 8009d94:	687b      	ldr	r3, [r7, #4]
 8009d96:	2201      	movs	r2, #1
 8009d98:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009d9c:	687b      	ldr	r3, [r7, #4]
 8009d9e:	2202      	movs	r2, #2
 8009da0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009da4:	687b      	ldr	r3, [r7, #4]
 8009da6:	681b      	ldr	r3, [r3, #0]
 8009da8:	689b      	ldr	r3, [r3, #8]
 8009daa:	60bb      	str	r3, [r7, #8]
 8009dac:	68bb      	ldr	r3, [r7, #8]
 8009dae:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8009db2:	60bb      	str	r3, [r7, #8]
 8009db4:	68bb      	ldr	r3, [r7, #8]
 8009db6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8009dba:	60bb      	str	r3, [r7, #8]
 8009dbc:	687b      	ldr	r3, [r7, #4]
 8009dbe:	681b      	ldr	r3, [r3, #0]
 8009dc0:	68ba      	ldr	r2, [r7, #8]
 8009dc2:	609a      	str	r2, [r3, #8]
 8009dc4:	683b      	ldr	r3, [r7, #0]
 8009dc6:	681b      	ldr	r3, [r3, #0]
 8009dc8:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009dcc:	d03e      	beq.n	8009e4c <HAL_TIM_ConfigClockSource+0xd4>
 8009dce:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009dd2:	f200 8087 	bhi.w	8009ee4 <HAL_TIM_ConfigClockSource+0x16c>
 8009dd6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009dda:	f000 8086 	beq.w	8009eea <HAL_TIM_ConfigClockSource+0x172>
 8009dde:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009de2:	d87f      	bhi.n	8009ee4 <HAL_TIM_ConfigClockSource+0x16c>
 8009de4:	2b70      	cmp	r3, #112	; 0x70
 8009de6:	d01a      	beq.n	8009e1e <HAL_TIM_ConfigClockSource+0xa6>
 8009de8:	2b70      	cmp	r3, #112	; 0x70
 8009dea:	d87b      	bhi.n	8009ee4 <HAL_TIM_ConfigClockSource+0x16c>
 8009dec:	2b60      	cmp	r3, #96	; 0x60
 8009dee:	d050      	beq.n	8009e92 <HAL_TIM_ConfigClockSource+0x11a>
 8009df0:	2b60      	cmp	r3, #96	; 0x60
 8009df2:	d877      	bhi.n	8009ee4 <HAL_TIM_ConfigClockSource+0x16c>
 8009df4:	2b50      	cmp	r3, #80	; 0x50
 8009df6:	d03c      	beq.n	8009e72 <HAL_TIM_ConfigClockSource+0xfa>
 8009df8:	2b50      	cmp	r3, #80	; 0x50
 8009dfa:	d873      	bhi.n	8009ee4 <HAL_TIM_ConfigClockSource+0x16c>
 8009dfc:	2b40      	cmp	r3, #64	; 0x40
 8009dfe:	d058      	beq.n	8009eb2 <HAL_TIM_ConfigClockSource+0x13a>
 8009e00:	2b40      	cmp	r3, #64	; 0x40
 8009e02:	d86f      	bhi.n	8009ee4 <HAL_TIM_ConfigClockSource+0x16c>
 8009e04:	2b30      	cmp	r3, #48	; 0x30
 8009e06:	d064      	beq.n	8009ed2 <HAL_TIM_ConfigClockSource+0x15a>
 8009e08:	2b30      	cmp	r3, #48	; 0x30
 8009e0a:	d86b      	bhi.n	8009ee4 <HAL_TIM_ConfigClockSource+0x16c>
 8009e0c:	2b20      	cmp	r3, #32
 8009e0e:	d060      	beq.n	8009ed2 <HAL_TIM_ConfigClockSource+0x15a>
 8009e10:	2b20      	cmp	r3, #32
 8009e12:	d867      	bhi.n	8009ee4 <HAL_TIM_ConfigClockSource+0x16c>
 8009e14:	2b00      	cmp	r3, #0
 8009e16:	d05c      	beq.n	8009ed2 <HAL_TIM_ConfigClockSource+0x15a>
 8009e18:	2b10      	cmp	r3, #16
 8009e1a:	d05a      	beq.n	8009ed2 <HAL_TIM_ConfigClockSource+0x15a>
 8009e1c:	e062      	b.n	8009ee4 <HAL_TIM_ConfigClockSource+0x16c>
 8009e1e:	687b      	ldr	r3, [r7, #4]
 8009e20:	6818      	ldr	r0, [r3, #0]
 8009e22:	683b      	ldr	r3, [r7, #0]
 8009e24:	6899      	ldr	r1, [r3, #8]
 8009e26:	683b      	ldr	r3, [r7, #0]
 8009e28:	685a      	ldr	r2, [r3, #4]
 8009e2a:	683b      	ldr	r3, [r7, #0]
 8009e2c:	68db      	ldr	r3, [r3, #12]
 8009e2e:	f000 fb19 	bl	800a464 <TIM_ETR_SetConfig>
 8009e32:	687b      	ldr	r3, [r7, #4]
 8009e34:	681b      	ldr	r3, [r3, #0]
 8009e36:	689b      	ldr	r3, [r3, #8]
 8009e38:	60bb      	str	r3, [r7, #8]
 8009e3a:	68bb      	ldr	r3, [r7, #8]
 8009e3c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8009e40:	60bb      	str	r3, [r7, #8]
 8009e42:	687b      	ldr	r3, [r7, #4]
 8009e44:	681b      	ldr	r3, [r3, #0]
 8009e46:	68ba      	ldr	r2, [r7, #8]
 8009e48:	609a      	str	r2, [r3, #8]
 8009e4a:	e04f      	b.n	8009eec <HAL_TIM_ConfigClockSource+0x174>
 8009e4c:	687b      	ldr	r3, [r7, #4]
 8009e4e:	6818      	ldr	r0, [r3, #0]
 8009e50:	683b      	ldr	r3, [r7, #0]
 8009e52:	6899      	ldr	r1, [r3, #8]
 8009e54:	683b      	ldr	r3, [r7, #0]
 8009e56:	685a      	ldr	r2, [r3, #4]
 8009e58:	683b      	ldr	r3, [r7, #0]
 8009e5a:	68db      	ldr	r3, [r3, #12]
 8009e5c:	f000 fb02 	bl	800a464 <TIM_ETR_SetConfig>
 8009e60:	687b      	ldr	r3, [r7, #4]
 8009e62:	681b      	ldr	r3, [r3, #0]
 8009e64:	689a      	ldr	r2, [r3, #8]
 8009e66:	687b      	ldr	r3, [r7, #4]
 8009e68:	681b      	ldr	r3, [r3, #0]
 8009e6a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8009e6e:	609a      	str	r2, [r3, #8]
 8009e70:	e03c      	b.n	8009eec <HAL_TIM_ConfigClockSource+0x174>
 8009e72:	687b      	ldr	r3, [r7, #4]
 8009e74:	6818      	ldr	r0, [r3, #0]
 8009e76:	683b      	ldr	r3, [r7, #0]
 8009e78:	6859      	ldr	r1, [r3, #4]
 8009e7a:	683b      	ldr	r3, [r7, #0]
 8009e7c:	68db      	ldr	r3, [r3, #12]
 8009e7e:	461a      	mov	r2, r3
 8009e80:	f000 fa76 	bl	800a370 <TIM_TI1_ConfigInputStage>
 8009e84:	687b      	ldr	r3, [r7, #4]
 8009e86:	681b      	ldr	r3, [r3, #0]
 8009e88:	2150      	movs	r1, #80	; 0x50
 8009e8a:	4618      	mov	r0, r3
 8009e8c:	f000 facf 	bl	800a42e <TIM_ITRx_SetConfig>
 8009e90:	e02c      	b.n	8009eec <HAL_TIM_ConfigClockSource+0x174>
 8009e92:	687b      	ldr	r3, [r7, #4]
 8009e94:	6818      	ldr	r0, [r3, #0]
 8009e96:	683b      	ldr	r3, [r7, #0]
 8009e98:	6859      	ldr	r1, [r3, #4]
 8009e9a:	683b      	ldr	r3, [r7, #0]
 8009e9c:	68db      	ldr	r3, [r3, #12]
 8009e9e:	461a      	mov	r2, r3
 8009ea0:	f000 fa95 	bl	800a3ce <TIM_TI2_ConfigInputStage>
 8009ea4:	687b      	ldr	r3, [r7, #4]
 8009ea6:	681b      	ldr	r3, [r3, #0]
 8009ea8:	2160      	movs	r1, #96	; 0x60
 8009eaa:	4618      	mov	r0, r3
 8009eac:	f000 fabf 	bl	800a42e <TIM_ITRx_SetConfig>
 8009eb0:	e01c      	b.n	8009eec <HAL_TIM_ConfigClockSource+0x174>
 8009eb2:	687b      	ldr	r3, [r7, #4]
 8009eb4:	6818      	ldr	r0, [r3, #0]
 8009eb6:	683b      	ldr	r3, [r7, #0]
 8009eb8:	6859      	ldr	r1, [r3, #4]
 8009eba:	683b      	ldr	r3, [r7, #0]
 8009ebc:	68db      	ldr	r3, [r3, #12]
 8009ebe:	461a      	mov	r2, r3
 8009ec0:	f000 fa56 	bl	800a370 <TIM_TI1_ConfigInputStage>
 8009ec4:	687b      	ldr	r3, [r7, #4]
 8009ec6:	681b      	ldr	r3, [r3, #0]
 8009ec8:	2140      	movs	r1, #64	; 0x40
 8009eca:	4618      	mov	r0, r3
 8009ecc:	f000 faaf 	bl	800a42e <TIM_ITRx_SetConfig>
 8009ed0:	e00c      	b.n	8009eec <HAL_TIM_ConfigClockSource+0x174>
 8009ed2:	687b      	ldr	r3, [r7, #4]
 8009ed4:	681a      	ldr	r2, [r3, #0]
 8009ed6:	683b      	ldr	r3, [r7, #0]
 8009ed8:	681b      	ldr	r3, [r3, #0]
 8009eda:	4619      	mov	r1, r3
 8009edc:	4610      	mov	r0, r2
 8009ede:	f000 faa6 	bl	800a42e <TIM_ITRx_SetConfig>
 8009ee2:	e003      	b.n	8009eec <HAL_TIM_ConfigClockSource+0x174>
 8009ee4:	2301      	movs	r3, #1
 8009ee6:	73fb      	strb	r3, [r7, #15]
 8009ee8:	e000      	b.n	8009eec <HAL_TIM_ConfigClockSource+0x174>
 8009eea:	bf00      	nop
 8009eec:	687b      	ldr	r3, [r7, #4]
 8009eee:	2201      	movs	r2, #1
 8009ef0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8009ef4:	687b      	ldr	r3, [r7, #4]
 8009ef6:	2200      	movs	r2, #0
 8009ef8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009efc:	7bfb      	ldrb	r3, [r7, #15]
 8009efe:	4618      	mov	r0, r3
 8009f00:	3710      	adds	r7, #16
 8009f02:	46bd      	mov	sp, r7
 8009f04:	bd80      	pop	{r7, pc}

08009f06 <HAL_TIM_OC_DelayElapsedCallback>:
 8009f06:	b480      	push	{r7}
 8009f08:	b083      	sub	sp, #12
 8009f0a:	af00      	add	r7, sp, #0
 8009f0c:	6078      	str	r0, [r7, #4]
 8009f0e:	bf00      	nop
 8009f10:	370c      	adds	r7, #12
 8009f12:	46bd      	mov	sp, r7
 8009f14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f18:	4770      	bx	lr

08009f1a <HAL_TIM_IC_CaptureCallback>:
 8009f1a:	b480      	push	{r7}
 8009f1c:	b083      	sub	sp, #12
 8009f1e:	af00      	add	r7, sp, #0
 8009f20:	6078      	str	r0, [r7, #4]
 8009f22:	bf00      	nop
 8009f24:	370c      	adds	r7, #12
 8009f26:	46bd      	mov	sp, r7
 8009f28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f2c:	4770      	bx	lr

08009f2e <HAL_TIM_PWM_PulseFinishedCallback>:
 8009f2e:	b480      	push	{r7}
 8009f30:	b083      	sub	sp, #12
 8009f32:	af00      	add	r7, sp, #0
 8009f34:	6078      	str	r0, [r7, #4]
 8009f36:	bf00      	nop
 8009f38:	370c      	adds	r7, #12
 8009f3a:	46bd      	mov	sp, r7
 8009f3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f40:	4770      	bx	lr

08009f42 <HAL_TIM_TriggerCallback>:
 8009f42:	b480      	push	{r7}
 8009f44:	b083      	sub	sp, #12
 8009f46:	af00      	add	r7, sp, #0
 8009f48:	6078      	str	r0, [r7, #4]
 8009f4a:	bf00      	nop
 8009f4c:	370c      	adds	r7, #12
 8009f4e:	46bd      	mov	sp, r7
 8009f50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f54:	4770      	bx	lr
	...

08009f58 <TIM_Base_SetConfig>:
 8009f58:	b480      	push	{r7}
 8009f5a:	b085      	sub	sp, #20
 8009f5c:	af00      	add	r7, sp, #0
 8009f5e:	6078      	str	r0, [r7, #4]
 8009f60:	6039      	str	r1, [r7, #0]
 8009f62:	687b      	ldr	r3, [r7, #4]
 8009f64:	681b      	ldr	r3, [r3, #0]
 8009f66:	60fb      	str	r3, [r7, #12]
 8009f68:	687b      	ldr	r3, [r7, #4]
 8009f6a:	4a34      	ldr	r2, [pc, #208]	; (800a03c <TIM_Base_SetConfig+0xe4>)
 8009f6c:	4293      	cmp	r3, r2
 8009f6e:	d00f      	beq.n	8009f90 <TIM_Base_SetConfig+0x38>
 8009f70:	687b      	ldr	r3, [r7, #4]
 8009f72:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009f76:	d00b      	beq.n	8009f90 <TIM_Base_SetConfig+0x38>
 8009f78:	687b      	ldr	r3, [r7, #4]
 8009f7a:	4a31      	ldr	r2, [pc, #196]	; (800a040 <TIM_Base_SetConfig+0xe8>)
 8009f7c:	4293      	cmp	r3, r2
 8009f7e:	d007      	beq.n	8009f90 <TIM_Base_SetConfig+0x38>
 8009f80:	687b      	ldr	r3, [r7, #4]
 8009f82:	4a30      	ldr	r2, [pc, #192]	; (800a044 <TIM_Base_SetConfig+0xec>)
 8009f84:	4293      	cmp	r3, r2
 8009f86:	d003      	beq.n	8009f90 <TIM_Base_SetConfig+0x38>
 8009f88:	687b      	ldr	r3, [r7, #4]
 8009f8a:	4a2f      	ldr	r2, [pc, #188]	; (800a048 <TIM_Base_SetConfig+0xf0>)
 8009f8c:	4293      	cmp	r3, r2
 8009f8e:	d108      	bne.n	8009fa2 <TIM_Base_SetConfig+0x4a>
 8009f90:	68fb      	ldr	r3, [r7, #12]
 8009f92:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009f96:	60fb      	str	r3, [r7, #12]
 8009f98:	683b      	ldr	r3, [r7, #0]
 8009f9a:	685b      	ldr	r3, [r3, #4]
 8009f9c:	68fa      	ldr	r2, [r7, #12]
 8009f9e:	4313      	orrs	r3, r2
 8009fa0:	60fb      	str	r3, [r7, #12]
 8009fa2:	687b      	ldr	r3, [r7, #4]
 8009fa4:	4a25      	ldr	r2, [pc, #148]	; (800a03c <TIM_Base_SetConfig+0xe4>)
 8009fa6:	4293      	cmp	r3, r2
 8009fa8:	d01b      	beq.n	8009fe2 <TIM_Base_SetConfig+0x8a>
 8009faa:	687b      	ldr	r3, [r7, #4]
 8009fac:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009fb0:	d017      	beq.n	8009fe2 <TIM_Base_SetConfig+0x8a>
 8009fb2:	687b      	ldr	r3, [r7, #4]
 8009fb4:	4a22      	ldr	r2, [pc, #136]	; (800a040 <TIM_Base_SetConfig+0xe8>)
 8009fb6:	4293      	cmp	r3, r2
 8009fb8:	d013      	beq.n	8009fe2 <TIM_Base_SetConfig+0x8a>
 8009fba:	687b      	ldr	r3, [r7, #4]
 8009fbc:	4a21      	ldr	r2, [pc, #132]	; (800a044 <TIM_Base_SetConfig+0xec>)
 8009fbe:	4293      	cmp	r3, r2
 8009fc0:	d00f      	beq.n	8009fe2 <TIM_Base_SetConfig+0x8a>
 8009fc2:	687b      	ldr	r3, [r7, #4]
 8009fc4:	4a20      	ldr	r2, [pc, #128]	; (800a048 <TIM_Base_SetConfig+0xf0>)
 8009fc6:	4293      	cmp	r3, r2
 8009fc8:	d00b      	beq.n	8009fe2 <TIM_Base_SetConfig+0x8a>
 8009fca:	687b      	ldr	r3, [r7, #4]
 8009fcc:	4a1f      	ldr	r2, [pc, #124]	; (800a04c <TIM_Base_SetConfig+0xf4>)
 8009fce:	4293      	cmp	r3, r2
 8009fd0:	d007      	beq.n	8009fe2 <TIM_Base_SetConfig+0x8a>
 8009fd2:	687b      	ldr	r3, [r7, #4]
 8009fd4:	4a1e      	ldr	r2, [pc, #120]	; (800a050 <TIM_Base_SetConfig+0xf8>)
 8009fd6:	4293      	cmp	r3, r2
 8009fd8:	d003      	beq.n	8009fe2 <TIM_Base_SetConfig+0x8a>
 8009fda:	687b      	ldr	r3, [r7, #4]
 8009fdc:	4a1d      	ldr	r2, [pc, #116]	; (800a054 <TIM_Base_SetConfig+0xfc>)
 8009fde:	4293      	cmp	r3, r2
 8009fe0:	d108      	bne.n	8009ff4 <TIM_Base_SetConfig+0x9c>
 8009fe2:	68fb      	ldr	r3, [r7, #12]
 8009fe4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009fe8:	60fb      	str	r3, [r7, #12]
 8009fea:	683b      	ldr	r3, [r7, #0]
 8009fec:	68db      	ldr	r3, [r3, #12]
 8009fee:	68fa      	ldr	r2, [r7, #12]
 8009ff0:	4313      	orrs	r3, r2
 8009ff2:	60fb      	str	r3, [r7, #12]
 8009ff4:	68fb      	ldr	r3, [r7, #12]
 8009ff6:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8009ffa:	683b      	ldr	r3, [r7, #0]
 8009ffc:	695b      	ldr	r3, [r3, #20]
 8009ffe:	4313      	orrs	r3, r2
 800a000:	60fb      	str	r3, [r7, #12]
 800a002:	687b      	ldr	r3, [r7, #4]
 800a004:	68fa      	ldr	r2, [r7, #12]
 800a006:	601a      	str	r2, [r3, #0]
 800a008:	683b      	ldr	r3, [r7, #0]
 800a00a:	689a      	ldr	r2, [r3, #8]
 800a00c:	687b      	ldr	r3, [r7, #4]
 800a00e:	62da      	str	r2, [r3, #44]	; 0x2c
 800a010:	683b      	ldr	r3, [r7, #0]
 800a012:	681a      	ldr	r2, [r3, #0]
 800a014:	687b      	ldr	r3, [r7, #4]
 800a016:	629a      	str	r2, [r3, #40]	; 0x28
 800a018:	687b      	ldr	r3, [r7, #4]
 800a01a:	4a08      	ldr	r2, [pc, #32]	; (800a03c <TIM_Base_SetConfig+0xe4>)
 800a01c:	4293      	cmp	r3, r2
 800a01e:	d103      	bne.n	800a028 <TIM_Base_SetConfig+0xd0>
 800a020:	683b      	ldr	r3, [r7, #0]
 800a022:	691a      	ldr	r2, [r3, #16]
 800a024:	687b      	ldr	r3, [r7, #4]
 800a026:	631a      	str	r2, [r3, #48]	; 0x30
 800a028:	687b      	ldr	r3, [r7, #4]
 800a02a:	2201      	movs	r2, #1
 800a02c:	615a      	str	r2, [r3, #20]
 800a02e:	bf00      	nop
 800a030:	3714      	adds	r7, #20
 800a032:	46bd      	mov	sp, r7
 800a034:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a038:	4770      	bx	lr
 800a03a:	bf00      	nop
 800a03c:	40010000 	.word	0x40010000
 800a040:	40000400 	.word	0x40000400
 800a044:	40000800 	.word	0x40000800
 800a048:	40000c00 	.word	0x40000c00
 800a04c:	40014000 	.word	0x40014000
 800a050:	40014400 	.word	0x40014400
 800a054:	40014800 	.word	0x40014800

0800a058 <TIM_OC1_SetConfig>:
 800a058:	b480      	push	{r7}
 800a05a:	b087      	sub	sp, #28
 800a05c:	af00      	add	r7, sp, #0
 800a05e:	6078      	str	r0, [r7, #4]
 800a060:	6039      	str	r1, [r7, #0]
 800a062:	687b      	ldr	r3, [r7, #4]
 800a064:	6a1b      	ldr	r3, [r3, #32]
 800a066:	f023 0201 	bic.w	r2, r3, #1
 800a06a:	687b      	ldr	r3, [r7, #4]
 800a06c:	621a      	str	r2, [r3, #32]
 800a06e:	687b      	ldr	r3, [r7, #4]
 800a070:	6a1b      	ldr	r3, [r3, #32]
 800a072:	617b      	str	r3, [r7, #20]
 800a074:	687b      	ldr	r3, [r7, #4]
 800a076:	685b      	ldr	r3, [r3, #4]
 800a078:	613b      	str	r3, [r7, #16]
 800a07a:	687b      	ldr	r3, [r7, #4]
 800a07c:	699b      	ldr	r3, [r3, #24]
 800a07e:	60fb      	str	r3, [r7, #12]
 800a080:	68fb      	ldr	r3, [r7, #12]
 800a082:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a086:	60fb      	str	r3, [r7, #12]
 800a088:	68fb      	ldr	r3, [r7, #12]
 800a08a:	f023 0303 	bic.w	r3, r3, #3
 800a08e:	60fb      	str	r3, [r7, #12]
 800a090:	683b      	ldr	r3, [r7, #0]
 800a092:	681b      	ldr	r3, [r3, #0]
 800a094:	68fa      	ldr	r2, [r7, #12]
 800a096:	4313      	orrs	r3, r2
 800a098:	60fb      	str	r3, [r7, #12]
 800a09a:	697b      	ldr	r3, [r7, #20]
 800a09c:	f023 0302 	bic.w	r3, r3, #2
 800a0a0:	617b      	str	r3, [r7, #20]
 800a0a2:	683b      	ldr	r3, [r7, #0]
 800a0a4:	689b      	ldr	r3, [r3, #8]
 800a0a6:	697a      	ldr	r2, [r7, #20]
 800a0a8:	4313      	orrs	r3, r2
 800a0aa:	617b      	str	r3, [r7, #20]
 800a0ac:	687b      	ldr	r3, [r7, #4]
 800a0ae:	4a1c      	ldr	r2, [pc, #112]	; (800a120 <TIM_OC1_SetConfig+0xc8>)
 800a0b0:	4293      	cmp	r3, r2
 800a0b2:	d10c      	bne.n	800a0ce <TIM_OC1_SetConfig+0x76>
 800a0b4:	697b      	ldr	r3, [r7, #20]
 800a0b6:	f023 0308 	bic.w	r3, r3, #8
 800a0ba:	617b      	str	r3, [r7, #20]
 800a0bc:	683b      	ldr	r3, [r7, #0]
 800a0be:	68db      	ldr	r3, [r3, #12]
 800a0c0:	697a      	ldr	r2, [r7, #20]
 800a0c2:	4313      	orrs	r3, r2
 800a0c4:	617b      	str	r3, [r7, #20]
 800a0c6:	697b      	ldr	r3, [r7, #20]
 800a0c8:	f023 0304 	bic.w	r3, r3, #4
 800a0cc:	617b      	str	r3, [r7, #20]
 800a0ce:	687b      	ldr	r3, [r7, #4]
 800a0d0:	4a13      	ldr	r2, [pc, #76]	; (800a120 <TIM_OC1_SetConfig+0xc8>)
 800a0d2:	4293      	cmp	r3, r2
 800a0d4:	d111      	bne.n	800a0fa <TIM_OC1_SetConfig+0xa2>
 800a0d6:	693b      	ldr	r3, [r7, #16]
 800a0d8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800a0dc:	613b      	str	r3, [r7, #16]
 800a0de:	693b      	ldr	r3, [r7, #16]
 800a0e0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800a0e4:	613b      	str	r3, [r7, #16]
 800a0e6:	683b      	ldr	r3, [r7, #0]
 800a0e8:	695b      	ldr	r3, [r3, #20]
 800a0ea:	693a      	ldr	r2, [r7, #16]
 800a0ec:	4313      	orrs	r3, r2
 800a0ee:	613b      	str	r3, [r7, #16]
 800a0f0:	683b      	ldr	r3, [r7, #0]
 800a0f2:	699b      	ldr	r3, [r3, #24]
 800a0f4:	693a      	ldr	r2, [r7, #16]
 800a0f6:	4313      	orrs	r3, r2
 800a0f8:	613b      	str	r3, [r7, #16]
 800a0fa:	687b      	ldr	r3, [r7, #4]
 800a0fc:	693a      	ldr	r2, [r7, #16]
 800a0fe:	605a      	str	r2, [r3, #4]
 800a100:	687b      	ldr	r3, [r7, #4]
 800a102:	68fa      	ldr	r2, [r7, #12]
 800a104:	619a      	str	r2, [r3, #24]
 800a106:	683b      	ldr	r3, [r7, #0]
 800a108:	685a      	ldr	r2, [r3, #4]
 800a10a:	687b      	ldr	r3, [r7, #4]
 800a10c:	635a      	str	r2, [r3, #52]	; 0x34
 800a10e:	687b      	ldr	r3, [r7, #4]
 800a110:	697a      	ldr	r2, [r7, #20]
 800a112:	621a      	str	r2, [r3, #32]
 800a114:	bf00      	nop
 800a116:	371c      	adds	r7, #28
 800a118:	46bd      	mov	sp, r7
 800a11a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a11e:	4770      	bx	lr
 800a120:	40010000 	.word	0x40010000

0800a124 <TIM_OC2_SetConfig>:
 800a124:	b480      	push	{r7}
 800a126:	b087      	sub	sp, #28
 800a128:	af00      	add	r7, sp, #0
 800a12a:	6078      	str	r0, [r7, #4]
 800a12c:	6039      	str	r1, [r7, #0]
 800a12e:	687b      	ldr	r3, [r7, #4]
 800a130:	6a1b      	ldr	r3, [r3, #32]
 800a132:	f023 0210 	bic.w	r2, r3, #16
 800a136:	687b      	ldr	r3, [r7, #4]
 800a138:	621a      	str	r2, [r3, #32]
 800a13a:	687b      	ldr	r3, [r7, #4]
 800a13c:	6a1b      	ldr	r3, [r3, #32]
 800a13e:	617b      	str	r3, [r7, #20]
 800a140:	687b      	ldr	r3, [r7, #4]
 800a142:	685b      	ldr	r3, [r3, #4]
 800a144:	613b      	str	r3, [r7, #16]
 800a146:	687b      	ldr	r3, [r7, #4]
 800a148:	699b      	ldr	r3, [r3, #24]
 800a14a:	60fb      	str	r3, [r7, #12]
 800a14c:	68fb      	ldr	r3, [r7, #12]
 800a14e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800a152:	60fb      	str	r3, [r7, #12]
 800a154:	68fb      	ldr	r3, [r7, #12]
 800a156:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800a15a:	60fb      	str	r3, [r7, #12]
 800a15c:	683b      	ldr	r3, [r7, #0]
 800a15e:	681b      	ldr	r3, [r3, #0]
 800a160:	021b      	lsls	r3, r3, #8
 800a162:	68fa      	ldr	r2, [r7, #12]
 800a164:	4313      	orrs	r3, r2
 800a166:	60fb      	str	r3, [r7, #12]
 800a168:	697b      	ldr	r3, [r7, #20]
 800a16a:	f023 0320 	bic.w	r3, r3, #32
 800a16e:	617b      	str	r3, [r7, #20]
 800a170:	683b      	ldr	r3, [r7, #0]
 800a172:	689b      	ldr	r3, [r3, #8]
 800a174:	011b      	lsls	r3, r3, #4
 800a176:	697a      	ldr	r2, [r7, #20]
 800a178:	4313      	orrs	r3, r2
 800a17a:	617b      	str	r3, [r7, #20]
 800a17c:	687b      	ldr	r3, [r7, #4]
 800a17e:	4a1e      	ldr	r2, [pc, #120]	; (800a1f8 <TIM_OC2_SetConfig+0xd4>)
 800a180:	4293      	cmp	r3, r2
 800a182:	d10d      	bne.n	800a1a0 <TIM_OC2_SetConfig+0x7c>
 800a184:	697b      	ldr	r3, [r7, #20]
 800a186:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800a18a:	617b      	str	r3, [r7, #20]
 800a18c:	683b      	ldr	r3, [r7, #0]
 800a18e:	68db      	ldr	r3, [r3, #12]
 800a190:	011b      	lsls	r3, r3, #4
 800a192:	697a      	ldr	r2, [r7, #20]
 800a194:	4313      	orrs	r3, r2
 800a196:	617b      	str	r3, [r7, #20]
 800a198:	697b      	ldr	r3, [r7, #20]
 800a19a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a19e:	617b      	str	r3, [r7, #20]
 800a1a0:	687b      	ldr	r3, [r7, #4]
 800a1a2:	4a15      	ldr	r2, [pc, #84]	; (800a1f8 <TIM_OC2_SetConfig+0xd4>)
 800a1a4:	4293      	cmp	r3, r2
 800a1a6:	d113      	bne.n	800a1d0 <TIM_OC2_SetConfig+0xac>
 800a1a8:	693b      	ldr	r3, [r7, #16]
 800a1aa:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a1ae:	613b      	str	r3, [r7, #16]
 800a1b0:	693b      	ldr	r3, [r7, #16]
 800a1b2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800a1b6:	613b      	str	r3, [r7, #16]
 800a1b8:	683b      	ldr	r3, [r7, #0]
 800a1ba:	695b      	ldr	r3, [r3, #20]
 800a1bc:	009b      	lsls	r3, r3, #2
 800a1be:	693a      	ldr	r2, [r7, #16]
 800a1c0:	4313      	orrs	r3, r2
 800a1c2:	613b      	str	r3, [r7, #16]
 800a1c4:	683b      	ldr	r3, [r7, #0]
 800a1c6:	699b      	ldr	r3, [r3, #24]
 800a1c8:	009b      	lsls	r3, r3, #2
 800a1ca:	693a      	ldr	r2, [r7, #16]
 800a1cc:	4313      	orrs	r3, r2
 800a1ce:	613b      	str	r3, [r7, #16]
 800a1d0:	687b      	ldr	r3, [r7, #4]
 800a1d2:	693a      	ldr	r2, [r7, #16]
 800a1d4:	605a      	str	r2, [r3, #4]
 800a1d6:	687b      	ldr	r3, [r7, #4]
 800a1d8:	68fa      	ldr	r2, [r7, #12]
 800a1da:	619a      	str	r2, [r3, #24]
 800a1dc:	683b      	ldr	r3, [r7, #0]
 800a1de:	685a      	ldr	r2, [r3, #4]
 800a1e0:	687b      	ldr	r3, [r7, #4]
 800a1e2:	639a      	str	r2, [r3, #56]	; 0x38
 800a1e4:	687b      	ldr	r3, [r7, #4]
 800a1e6:	697a      	ldr	r2, [r7, #20]
 800a1e8:	621a      	str	r2, [r3, #32]
 800a1ea:	bf00      	nop
 800a1ec:	371c      	adds	r7, #28
 800a1ee:	46bd      	mov	sp, r7
 800a1f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1f4:	4770      	bx	lr
 800a1f6:	bf00      	nop
 800a1f8:	40010000 	.word	0x40010000

0800a1fc <TIM_OC3_SetConfig>:
 800a1fc:	b480      	push	{r7}
 800a1fe:	b087      	sub	sp, #28
 800a200:	af00      	add	r7, sp, #0
 800a202:	6078      	str	r0, [r7, #4]
 800a204:	6039      	str	r1, [r7, #0]
 800a206:	687b      	ldr	r3, [r7, #4]
 800a208:	6a1b      	ldr	r3, [r3, #32]
 800a20a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800a20e:	687b      	ldr	r3, [r7, #4]
 800a210:	621a      	str	r2, [r3, #32]
 800a212:	687b      	ldr	r3, [r7, #4]
 800a214:	6a1b      	ldr	r3, [r3, #32]
 800a216:	617b      	str	r3, [r7, #20]
 800a218:	687b      	ldr	r3, [r7, #4]
 800a21a:	685b      	ldr	r3, [r3, #4]
 800a21c:	613b      	str	r3, [r7, #16]
 800a21e:	687b      	ldr	r3, [r7, #4]
 800a220:	69db      	ldr	r3, [r3, #28]
 800a222:	60fb      	str	r3, [r7, #12]
 800a224:	68fb      	ldr	r3, [r7, #12]
 800a226:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a22a:	60fb      	str	r3, [r7, #12]
 800a22c:	68fb      	ldr	r3, [r7, #12]
 800a22e:	f023 0303 	bic.w	r3, r3, #3
 800a232:	60fb      	str	r3, [r7, #12]
 800a234:	683b      	ldr	r3, [r7, #0]
 800a236:	681b      	ldr	r3, [r3, #0]
 800a238:	68fa      	ldr	r2, [r7, #12]
 800a23a:	4313      	orrs	r3, r2
 800a23c:	60fb      	str	r3, [r7, #12]
 800a23e:	697b      	ldr	r3, [r7, #20]
 800a240:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800a244:	617b      	str	r3, [r7, #20]
 800a246:	683b      	ldr	r3, [r7, #0]
 800a248:	689b      	ldr	r3, [r3, #8]
 800a24a:	021b      	lsls	r3, r3, #8
 800a24c:	697a      	ldr	r2, [r7, #20]
 800a24e:	4313      	orrs	r3, r2
 800a250:	617b      	str	r3, [r7, #20]
 800a252:	687b      	ldr	r3, [r7, #4]
 800a254:	4a1d      	ldr	r2, [pc, #116]	; (800a2cc <TIM_OC3_SetConfig+0xd0>)
 800a256:	4293      	cmp	r3, r2
 800a258:	d10d      	bne.n	800a276 <TIM_OC3_SetConfig+0x7a>
 800a25a:	697b      	ldr	r3, [r7, #20]
 800a25c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800a260:	617b      	str	r3, [r7, #20]
 800a262:	683b      	ldr	r3, [r7, #0]
 800a264:	68db      	ldr	r3, [r3, #12]
 800a266:	021b      	lsls	r3, r3, #8
 800a268:	697a      	ldr	r2, [r7, #20]
 800a26a:	4313      	orrs	r3, r2
 800a26c:	617b      	str	r3, [r7, #20]
 800a26e:	697b      	ldr	r3, [r7, #20]
 800a270:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a274:	617b      	str	r3, [r7, #20]
 800a276:	687b      	ldr	r3, [r7, #4]
 800a278:	4a14      	ldr	r2, [pc, #80]	; (800a2cc <TIM_OC3_SetConfig+0xd0>)
 800a27a:	4293      	cmp	r3, r2
 800a27c:	d113      	bne.n	800a2a6 <TIM_OC3_SetConfig+0xaa>
 800a27e:	693b      	ldr	r3, [r7, #16]
 800a280:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800a284:	613b      	str	r3, [r7, #16]
 800a286:	693b      	ldr	r3, [r7, #16]
 800a288:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800a28c:	613b      	str	r3, [r7, #16]
 800a28e:	683b      	ldr	r3, [r7, #0]
 800a290:	695b      	ldr	r3, [r3, #20]
 800a292:	011b      	lsls	r3, r3, #4
 800a294:	693a      	ldr	r2, [r7, #16]
 800a296:	4313      	orrs	r3, r2
 800a298:	613b      	str	r3, [r7, #16]
 800a29a:	683b      	ldr	r3, [r7, #0]
 800a29c:	699b      	ldr	r3, [r3, #24]
 800a29e:	011b      	lsls	r3, r3, #4
 800a2a0:	693a      	ldr	r2, [r7, #16]
 800a2a2:	4313      	orrs	r3, r2
 800a2a4:	613b      	str	r3, [r7, #16]
 800a2a6:	687b      	ldr	r3, [r7, #4]
 800a2a8:	693a      	ldr	r2, [r7, #16]
 800a2aa:	605a      	str	r2, [r3, #4]
 800a2ac:	687b      	ldr	r3, [r7, #4]
 800a2ae:	68fa      	ldr	r2, [r7, #12]
 800a2b0:	61da      	str	r2, [r3, #28]
 800a2b2:	683b      	ldr	r3, [r7, #0]
 800a2b4:	685a      	ldr	r2, [r3, #4]
 800a2b6:	687b      	ldr	r3, [r7, #4]
 800a2b8:	63da      	str	r2, [r3, #60]	; 0x3c
 800a2ba:	687b      	ldr	r3, [r7, #4]
 800a2bc:	697a      	ldr	r2, [r7, #20]
 800a2be:	621a      	str	r2, [r3, #32]
 800a2c0:	bf00      	nop
 800a2c2:	371c      	adds	r7, #28
 800a2c4:	46bd      	mov	sp, r7
 800a2c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2ca:	4770      	bx	lr
 800a2cc:	40010000 	.word	0x40010000

0800a2d0 <TIM_OC4_SetConfig>:
 800a2d0:	b480      	push	{r7}
 800a2d2:	b087      	sub	sp, #28
 800a2d4:	af00      	add	r7, sp, #0
 800a2d6:	6078      	str	r0, [r7, #4]
 800a2d8:	6039      	str	r1, [r7, #0]
 800a2da:	687b      	ldr	r3, [r7, #4]
 800a2dc:	6a1b      	ldr	r3, [r3, #32]
 800a2de:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800a2e2:	687b      	ldr	r3, [r7, #4]
 800a2e4:	621a      	str	r2, [r3, #32]
 800a2e6:	687b      	ldr	r3, [r7, #4]
 800a2e8:	6a1b      	ldr	r3, [r3, #32]
 800a2ea:	613b      	str	r3, [r7, #16]
 800a2ec:	687b      	ldr	r3, [r7, #4]
 800a2ee:	685b      	ldr	r3, [r3, #4]
 800a2f0:	617b      	str	r3, [r7, #20]
 800a2f2:	687b      	ldr	r3, [r7, #4]
 800a2f4:	69db      	ldr	r3, [r3, #28]
 800a2f6:	60fb      	str	r3, [r7, #12]
 800a2f8:	68fb      	ldr	r3, [r7, #12]
 800a2fa:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800a2fe:	60fb      	str	r3, [r7, #12]
 800a300:	68fb      	ldr	r3, [r7, #12]
 800a302:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800a306:	60fb      	str	r3, [r7, #12]
 800a308:	683b      	ldr	r3, [r7, #0]
 800a30a:	681b      	ldr	r3, [r3, #0]
 800a30c:	021b      	lsls	r3, r3, #8
 800a30e:	68fa      	ldr	r2, [r7, #12]
 800a310:	4313      	orrs	r3, r2
 800a312:	60fb      	str	r3, [r7, #12]
 800a314:	693b      	ldr	r3, [r7, #16]
 800a316:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800a31a:	613b      	str	r3, [r7, #16]
 800a31c:	683b      	ldr	r3, [r7, #0]
 800a31e:	689b      	ldr	r3, [r3, #8]
 800a320:	031b      	lsls	r3, r3, #12
 800a322:	693a      	ldr	r2, [r7, #16]
 800a324:	4313      	orrs	r3, r2
 800a326:	613b      	str	r3, [r7, #16]
 800a328:	687b      	ldr	r3, [r7, #4]
 800a32a:	4a10      	ldr	r2, [pc, #64]	; (800a36c <TIM_OC4_SetConfig+0x9c>)
 800a32c:	4293      	cmp	r3, r2
 800a32e:	d109      	bne.n	800a344 <TIM_OC4_SetConfig+0x74>
 800a330:	697b      	ldr	r3, [r7, #20]
 800a332:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800a336:	617b      	str	r3, [r7, #20]
 800a338:	683b      	ldr	r3, [r7, #0]
 800a33a:	695b      	ldr	r3, [r3, #20]
 800a33c:	019b      	lsls	r3, r3, #6
 800a33e:	697a      	ldr	r2, [r7, #20]
 800a340:	4313      	orrs	r3, r2
 800a342:	617b      	str	r3, [r7, #20]
 800a344:	687b      	ldr	r3, [r7, #4]
 800a346:	697a      	ldr	r2, [r7, #20]
 800a348:	605a      	str	r2, [r3, #4]
 800a34a:	687b      	ldr	r3, [r7, #4]
 800a34c:	68fa      	ldr	r2, [r7, #12]
 800a34e:	61da      	str	r2, [r3, #28]
 800a350:	683b      	ldr	r3, [r7, #0]
 800a352:	685a      	ldr	r2, [r3, #4]
 800a354:	687b      	ldr	r3, [r7, #4]
 800a356:	641a      	str	r2, [r3, #64]	; 0x40
 800a358:	687b      	ldr	r3, [r7, #4]
 800a35a:	693a      	ldr	r2, [r7, #16]
 800a35c:	621a      	str	r2, [r3, #32]
 800a35e:	bf00      	nop
 800a360:	371c      	adds	r7, #28
 800a362:	46bd      	mov	sp, r7
 800a364:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a368:	4770      	bx	lr
 800a36a:	bf00      	nop
 800a36c:	40010000 	.word	0x40010000

0800a370 <TIM_TI1_ConfigInputStage>:
 800a370:	b480      	push	{r7}
 800a372:	b087      	sub	sp, #28
 800a374:	af00      	add	r7, sp, #0
 800a376:	60f8      	str	r0, [r7, #12]
 800a378:	60b9      	str	r1, [r7, #8]
 800a37a:	607a      	str	r2, [r7, #4]
 800a37c:	68fb      	ldr	r3, [r7, #12]
 800a37e:	6a1b      	ldr	r3, [r3, #32]
 800a380:	617b      	str	r3, [r7, #20]
 800a382:	68fb      	ldr	r3, [r7, #12]
 800a384:	6a1b      	ldr	r3, [r3, #32]
 800a386:	f023 0201 	bic.w	r2, r3, #1
 800a38a:	68fb      	ldr	r3, [r7, #12]
 800a38c:	621a      	str	r2, [r3, #32]
 800a38e:	68fb      	ldr	r3, [r7, #12]
 800a390:	699b      	ldr	r3, [r3, #24]
 800a392:	613b      	str	r3, [r7, #16]
 800a394:	693b      	ldr	r3, [r7, #16]
 800a396:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800a39a:	613b      	str	r3, [r7, #16]
 800a39c:	687b      	ldr	r3, [r7, #4]
 800a39e:	011b      	lsls	r3, r3, #4
 800a3a0:	693a      	ldr	r2, [r7, #16]
 800a3a2:	4313      	orrs	r3, r2
 800a3a4:	613b      	str	r3, [r7, #16]
 800a3a6:	697b      	ldr	r3, [r7, #20]
 800a3a8:	f023 030a 	bic.w	r3, r3, #10
 800a3ac:	617b      	str	r3, [r7, #20]
 800a3ae:	697a      	ldr	r2, [r7, #20]
 800a3b0:	68bb      	ldr	r3, [r7, #8]
 800a3b2:	4313      	orrs	r3, r2
 800a3b4:	617b      	str	r3, [r7, #20]
 800a3b6:	68fb      	ldr	r3, [r7, #12]
 800a3b8:	693a      	ldr	r2, [r7, #16]
 800a3ba:	619a      	str	r2, [r3, #24]
 800a3bc:	68fb      	ldr	r3, [r7, #12]
 800a3be:	697a      	ldr	r2, [r7, #20]
 800a3c0:	621a      	str	r2, [r3, #32]
 800a3c2:	bf00      	nop
 800a3c4:	371c      	adds	r7, #28
 800a3c6:	46bd      	mov	sp, r7
 800a3c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3cc:	4770      	bx	lr

0800a3ce <TIM_TI2_ConfigInputStage>:
 800a3ce:	b480      	push	{r7}
 800a3d0:	b087      	sub	sp, #28
 800a3d2:	af00      	add	r7, sp, #0
 800a3d4:	60f8      	str	r0, [r7, #12]
 800a3d6:	60b9      	str	r1, [r7, #8]
 800a3d8:	607a      	str	r2, [r7, #4]
 800a3da:	68fb      	ldr	r3, [r7, #12]
 800a3dc:	6a1b      	ldr	r3, [r3, #32]
 800a3de:	f023 0210 	bic.w	r2, r3, #16
 800a3e2:	68fb      	ldr	r3, [r7, #12]
 800a3e4:	621a      	str	r2, [r3, #32]
 800a3e6:	68fb      	ldr	r3, [r7, #12]
 800a3e8:	699b      	ldr	r3, [r3, #24]
 800a3ea:	617b      	str	r3, [r7, #20]
 800a3ec:	68fb      	ldr	r3, [r7, #12]
 800a3ee:	6a1b      	ldr	r3, [r3, #32]
 800a3f0:	613b      	str	r3, [r7, #16]
 800a3f2:	697b      	ldr	r3, [r7, #20]
 800a3f4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800a3f8:	617b      	str	r3, [r7, #20]
 800a3fa:	687b      	ldr	r3, [r7, #4]
 800a3fc:	031b      	lsls	r3, r3, #12
 800a3fe:	697a      	ldr	r2, [r7, #20]
 800a400:	4313      	orrs	r3, r2
 800a402:	617b      	str	r3, [r7, #20]
 800a404:	693b      	ldr	r3, [r7, #16]
 800a406:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800a40a:	613b      	str	r3, [r7, #16]
 800a40c:	68bb      	ldr	r3, [r7, #8]
 800a40e:	011b      	lsls	r3, r3, #4
 800a410:	693a      	ldr	r2, [r7, #16]
 800a412:	4313      	orrs	r3, r2
 800a414:	613b      	str	r3, [r7, #16]
 800a416:	68fb      	ldr	r3, [r7, #12]
 800a418:	697a      	ldr	r2, [r7, #20]
 800a41a:	619a      	str	r2, [r3, #24]
 800a41c:	68fb      	ldr	r3, [r7, #12]
 800a41e:	693a      	ldr	r2, [r7, #16]
 800a420:	621a      	str	r2, [r3, #32]
 800a422:	bf00      	nop
 800a424:	371c      	adds	r7, #28
 800a426:	46bd      	mov	sp, r7
 800a428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a42c:	4770      	bx	lr

0800a42e <TIM_ITRx_SetConfig>:
 800a42e:	b480      	push	{r7}
 800a430:	b085      	sub	sp, #20
 800a432:	af00      	add	r7, sp, #0
 800a434:	6078      	str	r0, [r7, #4]
 800a436:	6039      	str	r1, [r7, #0]
 800a438:	687b      	ldr	r3, [r7, #4]
 800a43a:	689b      	ldr	r3, [r3, #8]
 800a43c:	60fb      	str	r3, [r7, #12]
 800a43e:	68fb      	ldr	r3, [r7, #12]
 800a440:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a444:	60fb      	str	r3, [r7, #12]
 800a446:	683a      	ldr	r2, [r7, #0]
 800a448:	68fb      	ldr	r3, [r7, #12]
 800a44a:	4313      	orrs	r3, r2
 800a44c:	f043 0307 	orr.w	r3, r3, #7
 800a450:	60fb      	str	r3, [r7, #12]
 800a452:	687b      	ldr	r3, [r7, #4]
 800a454:	68fa      	ldr	r2, [r7, #12]
 800a456:	609a      	str	r2, [r3, #8]
 800a458:	bf00      	nop
 800a45a:	3714      	adds	r7, #20
 800a45c:	46bd      	mov	sp, r7
 800a45e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a462:	4770      	bx	lr

0800a464 <TIM_ETR_SetConfig>:
 800a464:	b480      	push	{r7}
 800a466:	b087      	sub	sp, #28
 800a468:	af00      	add	r7, sp, #0
 800a46a:	60f8      	str	r0, [r7, #12]
 800a46c:	60b9      	str	r1, [r7, #8]
 800a46e:	607a      	str	r2, [r7, #4]
 800a470:	603b      	str	r3, [r7, #0]
 800a472:	68fb      	ldr	r3, [r7, #12]
 800a474:	689b      	ldr	r3, [r3, #8]
 800a476:	617b      	str	r3, [r7, #20]
 800a478:	697b      	ldr	r3, [r7, #20]
 800a47a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800a47e:	617b      	str	r3, [r7, #20]
 800a480:	683b      	ldr	r3, [r7, #0]
 800a482:	021a      	lsls	r2, r3, #8
 800a484:	687b      	ldr	r3, [r7, #4]
 800a486:	431a      	orrs	r2, r3
 800a488:	68bb      	ldr	r3, [r7, #8]
 800a48a:	4313      	orrs	r3, r2
 800a48c:	697a      	ldr	r2, [r7, #20]
 800a48e:	4313      	orrs	r3, r2
 800a490:	617b      	str	r3, [r7, #20]
 800a492:	68fb      	ldr	r3, [r7, #12]
 800a494:	697a      	ldr	r2, [r7, #20]
 800a496:	609a      	str	r2, [r3, #8]
 800a498:	bf00      	nop
 800a49a:	371c      	adds	r7, #28
 800a49c:	46bd      	mov	sp, r7
 800a49e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4a2:	4770      	bx	lr

0800a4a4 <TIM_CCxChannelCmd>:
 800a4a4:	b480      	push	{r7}
 800a4a6:	b087      	sub	sp, #28
 800a4a8:	af00      	add	r7, sp, #0
 800a4aa:	60f8      	str	r0, [r7, #12]
 800a4ac:	60b9      	str	r1, [r7, #8]
 800a4ae:	607a      	str	r2, [r7, #4]
 800a4b0:	68bb      	ldr	r3, [r7, #8]
 800a4b2:	f003 031f 	and.w	r3, r3, #31
 800a4b6:	2201      	movs	r2, #1
 800a4b8:	fa02 f303 	lsl.w	r3, r2, r3
 800a4bc:	617b      	str	r3, [r7, #20]
 800a4be:	68fb      	ldr	r3, [r7, #12]
 800a4c0:	6a1a      	ldr	r2, [r3, #32]
 800a4c2:	697b      	ldr	r3, [r7, #20]
 800a4c4:	43db      	mvns	r3, r3
 800a4c6:	401a      	ands	r2, r3
 800a4c8:	68fb      	ldr	r3, [r7, #12]
 800a4ca:	621a      	str	r2, [r3, #32]
 800a4cc:	68fb      	ldr	r3, [r7, #12]
 800a4ce:	6a1a      	ldr	r2, [r3, #32]
 800a4d0:	68bb      	ldr	r3, [r7, #8]
 800a4d2:	f003 031f 	and.w	r3, r3, #31
 800a4d6:	6879      	ldr	r1, [r7, #4]
 800a4d8:	fa01 f303 	lsl.w	r3, r1, r3
 800a4dc:	431a      	orrs	r2, r3
 800a4de:	68fb      	ldr	r3, [r7, #12]
 800a4e0:	621a      	str	r2, [r3, #32]
 800a4e2:	bf00      	nop
 800a4e4:	371c      	adds	r7, #28
 800a4e6:	46bd      	mov	sp, r7
 800a4e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4ec:	4770      	bx	lr
	...

0800a4f0 <HAL_TIMEx_MasterConfigSynchronization>:
 800a4f0:	b480      	push	{r7}
 800a4f2:	b085      	sub	sp, #20
 800a4f4:	af00      	add	r7, sp, #0
 800a4f6:	6078      	str	r0, [r7, #4]
 800a4f8:	6039      	str	r1, [r7, #0]
 800a4fa:	687b      	ldr	r3, [r7, #4]
 800a4fc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800a500:	2b01      	cmp	r3, #1
 800a502:	d101      	bne.n	800a508 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800a504:	2302      	movs	r3, #2
 800a506:	e050      	b.n	800a5aa <HAL_TIMEx_MasterConfigSynchronization+0xba>
 800a508:	687b      	ldr	r3, [r7, #4]
 800a50a:	2201      	movs	r2, #1
 800a50c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a510:	687b      	ldr	r3, [r7, #4]
 800a512:	2202      	movs	r2, #2
 800a514:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a518:	687b      	ldr	r3, [r7, #4]
 800a51a:	681b      	ldr	r3, [r3, #0]
 800a51c:	685b      	ldr	r3, [r3, #4]
 800a51e:	60fb      	str	r3, [r7, #12]
 800a520:	687b      	ldr	r3, [r7, #4]
 800a522:	681b      	ldr	r3, [r3, #0]
 800a524:	689b      	ldr	r3, [r3, #8]
 800a526:	60bb      	str	r3, [r7, #8]
 800a528:	68fb      	ldr	r3, [r7, #12]
 800a52a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800a52e:	60fb      	str	r3, [r7, #12]
 800a530:	683b      	ldr	r3, [r7, #0]
 800a532:	681b      	ldr	r3, [r3, #0]
 800a534:	68fa      	ldr	r2, [r7, #12]
 800a536:	4313      	orrs	r3, r2
 800a538:	60fb      	str	r3, [r7, #12]
 800a53a:	687b      	ldr	r3, [r7, #4]
 800a53c:	681b      	ldr	r3, [r3, #0]
 800a53e:	68fa      	ldr	r2, [r7, #12]
 800a540:	605a      	str	r2, [r3, #4]
 800a542:	687b      	ldr	r3, [r7, #4]
 800a544:	681b      	ldr	r3, [r3, #0]
 800a546:	4a1c      	ldr	r2, [pc, #112]	; (800a5b8 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 800a548:	4293      	cmp	r3, r2
 800a54a:	d018      	beq.n	800a57e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a54c:	687b      	ldr	r3, [r7, #4]
 800a54e:	681b      	ldr	r3, [r3, #0]
 800a550:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a554:	d013      	beq.n	800a57e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a556:	687b      	ldr	r3, [r7, #4]
 800a558:	681b      	ldr	r3, [r3, #0]
 800a55a:	4a18      	ldr	r2, [pc, #96]	; (800a5bc <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 800a55c:	4293      	cmp	r3, r2
 800a55e:	d00e      	beq.n	800a57e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a560:	687b      	ldr	r3, [r7, #4]
 800a562:	681b      	ldr	r3, [r3, #0]
 800a564:	4a16      	ldr	r2, [pc, #88]	; (800a5c0 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 800a566:	4293      	cmp	r3, r2
 800a568:	d009      	beq.n	800a57e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a56a:	687b      	ldr	r3, [r7, #4]
 800a56c:	681b      	ldr	r3, [r3, #0]
 800a56e:	4a15      	ldr	r2, [pc, #84]	; (800a5c4 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 800a570:	4293      	cmp	r3, r2
 800a572:	d004      	beq.n	800a57e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800a574:	687b      	ldr	r3, [r7, #4]
 800a576:	681b      	ldr	r3, [r3, #0]
 800a578:	4a13      	ldr	r2, [pc, #76]	; (800a5c8 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 800a57a:	4293      	cmp	r3, r2
 800a57c:	d10c      	bne.n	800a598 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 800a57e:	68bb      	ldr	r3, [r7, #8]
 800a580:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800a584:	60bb      	str	r3, [r7, #8]
 800a586:	683b      	ldr	r3, [r7, #0]
 800a588:	685b      	ldr	r3, [r3, #4]
 800a58a:	68ba      	ldr	r2, [r7, #8]
 800a58c:	4313      	orrs	r3, r2
 800a58e:	60bb      	str	r3, [r7, #8]
 800a590:	687b      	ldr	r3, [r7, #4]
 800a592:	681b      	ldr	r3, [r3, #0]
 800a594:	68ba      	ldr	r2, [r7, #8]
 800a596:	609a      	str	r2, [r3, #8]
 800a598:	687b      	ldr	r3, [r7, #4]
 800a59a:	2201      	movs	r2, #1
 800a59c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a5a0:	687b      	ldr	r3, [r7, #4]
 800a5a2:	2200      	movs	r2, #0
 800a5a4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a5a8:	2300      	movs	r3, #0
 800a5aa:	4618      	mov	r0, r3
 800a5ac:	3714      	adds	r7, #20
 800a5ae:	46bd      	mov	sp, r7
 800a5b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5b4:	4770      	bx	lr
 800a5b6:	bf00      	nop
 800a5b8:	40010000 	.word	0x40010000
 800a5bc:	40000400 	.word	0x40000400
 800a5c0:	40000800 	.word	0x40000800
 800a5c4:	40000c00 	.word	0x40000c00
 800a5c8:	40014000 	.word	0x40014000

0800a5cc <HAL_TIMEx_CommutCallback>:
 800a5cc:	b480      	push	{r7}
 800a5ce:	b083      	sub	sp, #12
 800a5d0:	af00      	add	r7, sp, #0
 800a5d2:	6078      	str	r0, [r7, #4]
 800a5d4:	bf00      	nop
 800a5d6:	370c      	adds	r7, #12
 800a5d8:	46bd      	mov	sp, r7
 800a5da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5de:	4770      	bx	lr

0800a5e0 <HAL_TIMEx_BreakCallback>:
 800a5e0:	b480      	push	{r7}
 800a5e2:	b083      	sub	sp, #12
 800a5e4:	af00      	add	r7, sp, #0
 800a5e6:	6078      	str	r0, [r7, #4]
 800a5e8:	bf00      	nop
 800a5ea:	370c      	adds	r7, #12
 800a5ec:	46bd      	mov	sp, r7
 800a5ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5f2:	4770      	bx	lr

0800a5f4 <HAL_UART_Init>:
 800a5f4:	b580      	push	{r7, lr}
 800a5f6:	b082      	sub	sp, #8
 800a5f8:	af00      	add	r7, sp, #0
 800a5fa:	6078      	str	r0, [r7, #4]
 800a5fc:	687b      	ldr	r3, [r7, #4]
 800a5fe:	2b00      	cmp	r3, #0
 800a600:	d101      	bne.n	800a606 <HAL_UART_Init+0x12>
 800a602:	2301      	movs	r3, #1
 800a604:	e03f      	b.n	800a686 <HAL_UART_Init+0x92>
 800a606:	687b      	ldr	r3, [r7, #4]
 800a608:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a60c:	b2db      	uxtb	r3, r3
 800a60e:	2b00      	cmp	r3, #0
 800a610:	d106      	bne.n	800a620 <HAL_UART_Init+0x2c>
 800a612:	687b      	ldr	r3, [r7, #4]
 800a614:	2200      	movs	r2, #0
 800a616:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a61a:	6878      	ldr	r0, [r7, #4]
 800a61c:	f7fa f8c2 	bl	80047a4 <HAL_UART_MspInit>
 800a620:	687b      	ldr	r3, [r7, #4]
 800a622:	2224      	movs	r2, #36	; 0x24
 800a624:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a628:	687b      	ldr	r3, [r7, #4]
 800a62a:	681b      	ldr	r3, [r3, #0]
 800a62c:	68da      	ldr	r2, [r3, #12]
 800a62e:	687b      	ldr	r3, [r7, #4]
 800a630:	681b      	ldr	r3, [r3, #0]
 800a632:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a636:	60da      	str	r2, [r3, #12]
 800a638:	6878      	ldr	r0, [r7, #4]
 800a63a:	f000 ffcd 	bl	800b5d8 <UART_SetConfig>
 800a63e:	687b      	ldr	r3, [r7, #4]
 800a640:	681b      	ldr	r3, [r3, #0]
 800a642:	691a      	ldr	r2, [r3, #16]
 800a644:	687b      	ldr	r3, [r7, #4]
 800a646:	681b      	ldr	r3, [r3, #0]
 800a648:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800a64c:	611a      	str	r2, [r3, #16]
 800a64e:	687b      	ldr	r3, [r7, #4]
 800a650:	681b      	ldr	r3, [r3, #0]
 800a652:	695a      	ldr	r2, [r3, #20]
 800a654:	687b      	ldr	r3, [r7, #4]
 800a656:	681b      	ldr	r3, [r3, #0]
 800a658:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800a65c:	615a      	str	r2, [r3, #20]
 800a65e:	687b      	ldr	r3, [r7, #4]
 800a660:	681b      	ldr	r3, [r3, #0]
 800a662:	68da      	ldr	r2, [r3, #12]
 800a664:	687b      	ldr	r3, [r7, #4]
 800a666:	681b      	ldr	r3, [r3, #0]
 800a668:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800a66c:	60da      	str	r2, [r3, #12]
 800a66e:	687b      	ldr	r3, [r7, #4]
 800a670:	2200      	movs	r2, #0
 800a672:	641a      	str	r2, [r3, #64]	; 0x40
 800a674:	687b      	ldr	r3, [r7, #4]
 800a676:	2220      	movs	r2, #32
 800a678:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a67c:	687b      	ldr	r3, [r7, #4]
 800a67e:	2220      	movs	r2, #32
 800a680:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a684:	2300      	movs	r3, #0
 800a686:	4618      	mov	r0, r3
 800a688:	3708      	adds	r7, #8
 800a68a:	46bd      	mov	sp, r7
 800a68c:	bd80      	pop	{r7, pc}
	...

0800a690 <HAL_UART_Transmit_DMA>:
 800a690:	b580      	push	{r7, lr}
 800a692:	b08c      	sub	sp, #48	; 0x30
 800a694:	af00      	add	r7, sp, #0
 800a696:	60f8      	str	r0, [r7, #12]
 800a698:	60b9      	str	r1, [r7, #8]
 800a69a:	4613      	mov	r3, r2
 800a69c:	80fb      	strh	r3, [r7, #6]
 800a69e:	68fb      	ldr	r3, [r7, #12]
 800a6a0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a6a4:	b2db      	uxtb	r3, r3
 800a6a6:	2b20      	cmp	r3, #32
 800a6a8:	d165      	bne.n	800a776 <HAL_UART_Transmit_DMA+0xe6>
 800a6aa:	68bb      	ldr	r3, [r7, #8]
 800a6ac:	2b00      	cmp	r3, #0
 800a6ae:	d002      	beq.n	800a6b6 <HAL_UART_Transmit_DMA+0x26>
 800a6b0:	88fb      	ldrh	r3, [r7, #6]
 800a6b2:	2b00      	cmp	r3, #0
 800a6b4:	d101      	bne.n	800a6ba <HAL_UART_Transmit_DMA+0x2a>
 800a6b6:	2301      	movs	r3, #1
 800a6b8:	e05e      	b.n	800a778 <HAL_UART_Transmit_DMA+0xe8>
 800a6ba:	68fb      	ldr	r3, [r7, #12]
 800a6bc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800a6c0:	2b01      	cmp	r3, #1
 800a6c2:	d101      	bne.n	800a6c8 <HAL_UART_Transmit_DMA+0x38>
 800a6c4:	2302      	movs	r3, #2
 800a6c6:	e057      	b.n	800a778 <HAL_UART_Transmit_DMA+0xe8>
 800a6c8:	68fb      	ldr	r3, [r7, #12]
 800a6ca:	2201      	movs	r2, #1
 800a6cc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a6d0:	68ba      	ldr	r2, [r7, #8]
 800a6d2:	68fb      	ldr	r3, [r7, #12]
 800a6d4:	621a      	str	r2, [r3, #32]
 800a6d6:	68fb      	ldr	r3, [r7, #12]
 800a6d8:	88fa      	ldrh	r2, [r7, #6]
 800a6da:	849a      	strh	r2, [r3, #36]	; 0x24
 800a6dc:	68fb      	ldr	r3, [r7, #12]
 800a6de:	88fa      	ldrh	r2, [r7, #6]
 800a6e0:	84da      	strh	r2, [r3, #38]	; 0x26
 800a6e2:	68fb      	ldr	r3, [r7, #12]
 800a6e4:	2200      	movs	r2, #0
 800a6e6:	641a      	str	r2, [r3, #64]	; 0x40
 800a6e8:	68fb      	ldr	r3, [r7, #12]
 800a6ea:	2221      	movs	r2, #33	; 0x21
 800a6ec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a6f0:	68fb      	ldr	r3, [r7, #12]
 800a6f2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a6f4:	4a22      	ldr	r2, [pc, #136]	; (800a780 <HAL_UART_Transmit_DMA+0xf0>)
 800a6f6:	63da      	str	r2, [r3, #60]	; 0x3c
 800a6f8:	68fb      	ldr	r3, [r7, #12]
 800a6fa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a6fc:	4a21      	ldr	r2, [pc, #132]	; (800a784 <HAL_UART_Transmit_DMA+0xf4>)
 800a6fe:	641a      	str	r2, [r3, #64]	; 0x40
 800a700:	68fb      	ldr	r3, [r7, #12]
 800a702:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a704:	4a20      	ldr	r2, [pc, #128]	; (800a788 <HAL_UART_Transmit_DMA+0xf8>)
 800a706:	64da      	str	r2, [r3, #76]	; 0x4c
 800a708:	68fb      	ldr	r3, [r7, #12]
 800a70a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a70c:	2200      	movs	r2, #0
 800a70e:	651a      	str	r2, [r3, #80]	; 0x50
 800a710:	f107 0308 	add.w	r3, r7, #8
 800a714:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a716:	68fb      	ldr	r3, [r7, #12]
 800a718:	6b58      	ldr	r0, [r3, #52]	; 0x34
 800a71a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a71c:	6819      	ldr	r1, [r3, #0]
 800a71e:	68fb      	ldr	r3, [r7, #12]
 800a720:	681b      	ldr	r3, [r3, #0]
 800a722:	3304      	adds	r3, #4
 800a724:	461a      	mov	r2, r3
 800a726:	88fb      	ldrh	r3, [r7, #6]
 800a728:	f7fa fbfe 	bl	8004f28 <HAL_DMA_Start_IT>
 800a72c:	68fb      	ldr	r3, [r7, #12]
 800a72e:	681b      	ldr	r3, [r3, #0]
 800a730:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800a734:	601a      	str	r2, [r3, #0]
 800a736:	68fb      	ldr	r3, [r7, #12]
 800a738:	2200      	movs	r2, #0
 800a73a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a73e:	68fb      	ldr	r3, [r7, #12]
 800a740:	681b      	ldr	r3, [r3, #0]
 800a742:	3314      	adds	r3, #20
 800a744:	61bb      	str	r3, [r7, #24]
 800a746:	69bb      	ldr	r3, [r7, #24]
 800a748:	e853 3f00 	ldrex	r3, [r3]
 800a74c:	617b      	str	r3, [r7, #20]
 800a74e:	697b      	ldr	r3, [r7, #20]
 800a750:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800a754:	62bb      	str	r3, [r7, #40]	; 0x28
 800a756:	68fb      	ldr	r3, [r7, #12]
 800a758:	681b      	ldr	r3, [r3, #0]
 800a75a:	3314      	adds	r3, #20
 800a75c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a75e:	627a      	str	r2, [r7, #36]	; 0x24
 800a760:	623b      	str	r3, [r7, #32]
 800a762:	6a39      	ldr	r1, [r7, #32]
 800a764:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a766:	e841 2300 	strex	r3, r2, [r1]
 800a76a:	61fb      	str	r3, [r7, #28]
 800a76c:	69fb      	ldr	r3, [r7, #28]
 800a76e:	2b00      	cmp	r3, #0
 800a770:	d1e5      	bne.n	800a73e <HAL_UART_Transmit_DMA+0xae>
 800a772:	2300      	movs	r3, #0
 800a774:	e000      	b.n	800a778 <HAL_UART_Transmit_DMA+0xe8>
 800a776:	2302      	movs	r3, #2
 800a778:	4618      	mov	r0, r3
 800a77a:	3730      	adds	r7, #48	; 0x30
 800a77c:	46bd      	mov	sp, r7
 800a77e:	bd80      	pop	{r7, pc}
 800a780:	0800ae71 	.word	0x0800ae71
 800a784:	0800af0b 	.word	0x0800af0b
 800a788:	0800b083 	.word	0x0800b083

0800a78c <HAL_UART_Receive_DMA>:
 800a78c:	b580      	push	{r7, lr}
 800a78e:	b084      	sub	sp, #16
 800a790:	af00      	add	r7, sp, #0
 800a792:	60f8      	str	r0, [r7, #12]
 800a794:	60b9      	str	r1, [r7, #8]
 800a796:	4613      	mov	r3, r2
 800a798:	80fb      	strh	r3, [r7, #6]
 800a79a:	68fb      	ldr	r3, [r7, #12]
 800a79c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a7a0:	b2db      	uxtb	r3, r3
 800a7a2:	2b20      	cmp	r3, #32
 800a7a4:	d11d      	bne.n	800a7e2 <HAL_UART_Receive_DMA+0x56>
 800a7a6:	68bb      	ldr	r3, [r7, #8]
 800a7a8:	2b00      	cmp	r3, #0
 800a7aa:	d002      	beq.n	800a7b2 <HAL_UART_Receive_DMA+0x26>
 800a7ac:	88fb      	ldrh	r3, [r7, #6]
 800a7ae:	2b00      	cmp	r3, #0
 800a7b0:	d101      	bne.n	800a7b6 <HAL_UART_Receive_DMA+0x2a>
 800a7b2:	2301      	movs	r3, #1
 800a7b4:	e016      	b.n	800a7e4 <HAL_UART_Receive_DMA+0x58>
 800a7b6:	68fb      	ldr	r3, [r7, #12]
 800a7b8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800a7bc:	2b01      	cmp	r3, #1
 800a7be:	d101      	bne.n	800a7c4 <HAL_UART_Receive_DMA+0x38>
 800a7c0:	2302      	movs	r3, #2
 800a7c2:	e00f      	b.n	800a7e4 <HAL_UART_Receive_DMA+0x58>
 800a7c4:	68fb      	ldr	r3, [r7, #12]
 800a7c6:	2201      	movs	r2, #1
 800a7c8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a7cc:	68fb      	ldr	r3, [r7, #12]
 800a7ce:	2200      	movs	r2, #0
 800a7d0:	631a      	str	r2, [r3, #48]	; 0x30
 800a7d2:	88fb      	ldrh	r3, [r7, #6]
 800a7d4:	461a      	mov	r2, r3
 800a7d6:	68b9      	ldr	r1, [r7, #8]
 800a7d8:	68f8      	ldr	r0, [r7, #12]
 800a7da:	f000 fc9d 	bl	800b118 <UART_Start_Receive_DMA>
 800a7de:	4603      	mov	r3, r0
 800a7e0:	e000      	b.n	800a7e4 <HAL_UART_Receive_DMA+0x58>
 800a7e2:	2302      	movs	r3, #2
 800a7e4:	4618      	mov	r0, r3
 800a7e6:	3710      	adds	r7, #16
 800a7e8:	46bd      	mov	sp, r7
 800a7ea:	bd80      	pop	{r7, pc}

0800a7ec <HAL_UART_DMAStop>:
 800a7ec:	b580      	push	{r7, lr}
 800a7ee:	b090      	sub	sp, #64	; 0x40
 800a7f0:	af00      	add	r7, sp, #0
 800a7f2:	6078      	str	r0, [r7, #4]
 800a7f4:	2300      	movs	r3, #0
 800a7f6:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a7f8:	687b      	ldr	r3, [r7, #4]
 800a7fa:	681b      	ldr	r3, [r3, #0]
 800a7fc:	695b      	ldr	r3, [r3, #20]
 800a7fe:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800a802:	2b80      	cmp	r3, #128	; 0x80
 800a804:	bf0c      	ite	eq
 800a806:	2301      	moveq	r3, #1
 800a808:	2300      	movne	r3, #0
 800a80a:	b2db      	uxtb	r3, r3
 800a80c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a80e:	687b      	ldr	r3, [r7, #4]
 800a810:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a814:	b2db      	uxtb	r3, r3
 800a816:	2b21      	cmp	r3, #33	; 0x21
 800a818:	d128      	bne.n	800a86c <HAL_UART_DMAStop+0x80>
 800a81a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a81c:	2b00      	cmp	r3, #0
 800a81e:	d025      	beq.n	800a86c <HAL_UART_DMAStop+0x80>
 800a820:	687b      	ldr	r3, [r7, #4]
 800a822:	681b      	ldr	r3, [r3, #0]
 800a824:	3314      	adds	r3, #20
 800a826:	627b      	str	r3, [r7, #36]	; 0x24
 800a828:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a82a:	e853 3f00 	ldrex	r3, [r3]
 800a82e:	623b      	str	r3, [r7, #32]
 800a830:	6a3b      	ldr	r3, [r7, #32]
 800a832:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800a836:	63bb      	str	r3, [r7, #56]	; 0x38
 800a838:	687b      	ldr	r3, [r7, #4]
 800a83a:	681b      	ldr	r3, [r3, #0]
 800a83c:	3314      	adds	r3, #20
 800a83e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800a840:	633a      	str	r2, [r7, #48]	; 0x30
 800a842:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a844:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800a846:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a848:	e841 2300 	strex	r3, r2, [r1]
 800a84c:	62bb      	str	r3, [r7, #40]	; 0x28
 800a84e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a850:	2b00      	cmp	r3, #0
 800a852:	d1e5      	bne.n	800a820 <HAL_UART_DMAStop+0x34>
 800a854:	687b      	ldr	r3, [r7, #4]
 800a856:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a858:	2b00      	cmp	r3, #0
 800a85a:	d004      	beq.n	800a866 <HAL_UART_DMAStop+0x7a>
 800a85c:	687b      	ldr	r3, [r7, #4]
 800a85e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800a860:	4618      	mov	r0, r3
 800a862:	f7fa fbb9 	bl	8004fd8 <HAL_DMA_Abort>
 800a866:	6878      	ldr	r0, [r7, #4]
 800a868:	f000 fcf4 	bl	800b254 <UART_EndTxTransfer>
 800a86c:	687b      	ldr	r3, [r7, #4]
 800a86e:	681b      	ldr	r3, [r3, #0]
 800a870:	695b      	ldr	r3, [r3, #20]
 800a872:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a876:	2b40      	cmp	r3, #64	; 0x40
 800a878:	bf0c      	ite	eq
 800a87a:	2301      	moveq	r3, #1
 800a87c:	2300      	movne	r3, #0
 800a87e:	b2db      	uxtb	r3, r3
 800a880:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a882:	687b      	ldr	r3, [r7, #4]
 800a884:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a888:	b2db      	uxtb	r3, r3
 800a88a:	2b22      	cmp	r3, #34	; 0x22
 800a88c:	d128      	bne.n	800a8e0 <HAL_UART_DMAStop+0xf4>
 800a88e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a890:	2b00      	cmp	r3, #0
 800a892:	d025      	beq.n	800a8e0 <HAL_UART_DMAStop+0xf4>
 800a894:	687b      	ldr	r3, [r7, #4]
 800a896:	681b      	ldr	r3, [r3, #0]
 800a898:	3314      	adds	r3, #20
 800a89a:	613b      	str	r3, [r7, #16]
 800a89c:	693b      	ldr	r3, [r7, #16]
 800a89e:	e853 3f00 	ldrex	r3, [r3]
 800a8a2:	60fb      	str	r3, [r7, #12]
 800a8a4:	68fb      	ldr	r3, [r7, #12]
 800a8a6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a8aa:	637b      	str	r3, [r7, #52]	; 0x34
 800a8ac:	687b      	ldr	r3, [r7, #4]
 800a8ae:	681b      	ldr	r3, [r3, #0]
 800a8b0:	3314      	adds	r3, #20
 800a8b2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800a8b4:	61fa      	str	r2, [r7, #28]
 800a8b6:	61bb      	str	r3, [r7, #24]
 800a8b8:	69b9      	ldr	r1, [r7, #24]
 800a8ba:	69fa      	ldr	r2, [r7, #28]
 800a8bc:	e841 2300 	strex	r3, r2, [r1]
 800a8c0:	617b      	str	r3, [r7, #20]
 800a8c2:	697b      	ldr	r3, [r7, #20]
 800a8c4:	2b00      	cmp	r3, #0
 800a8c6:	d1e5      	bne.n	800a894 <HAL_UART_DMAStop+0xa8>
 800a8c8:	687b      	ldr	r3, [r7, #4]
 800a8ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a8cc:	2b00      	cmp	r3, #0
 800a8ce:	d004      	beq.n	800a8da <HAL_UART_DMAStop+0xee>
 800a8d0:	687b      	ldr	r3, [r7, #4]
 800a8d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a8d4:	4618      	mov	r0, r3
 800a8d6:	f7fa fb7f 	bl	8004fd8 <HAL_DMA_Abort>
 800a8da:	6878      	ldr	r0, [r7, #4]
 800a8dc:	f000 fce2 	bl	800b2a4 <UART_EndRxTransfer>
 800a8e0:	2300      	movs	r3, #0
 800a8e2:	4618      	mov	r0, r3
 800a8e4:	3740      	adds	r7, #64	; 0x40
 800a8e6:	46bd      	mov	sp, r7
 800a8e8:	bd80      	pop	{r7, pc}
	...

0800a8ec <HAL_UART_IRQHandler>:
 800a8ec:	b580      	push	{r7, lr}
 800a8ee:	b0ba      	sub	sp, #232	; 0xe8
 800a8f0:	af00      	add	r7, sp, #0
 800a8f2:	6078      	str	r0, [r7, #4]
 800a8f4:	687b      	ldr	r3, [r7, #4]
 800a8f6:	681b      	ldr	r3, [r3, #0]
 800a8f8:	681b      	ldr	r3, [r3, #0]
 800a8fa:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800a8fe:	687b      	ldr	r3, [r7, #4]
 800a900:	681b      	ldr	r3, [r3, #0]
 800a902:	68db      	ldr	r3, [r3, #12]
 800a904:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800a908:	687b      	ldr	r3, [r7, #4]
 800a90a:	681b      	ldr	r3, [r3, #0]
 800a90c:	695b      	ldr	r3, [r3, #20]
 800a90e:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800a912:	2300      	movs	r3, #0
 800a914:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800a918:	2300      	movs	r3, #0
 800a91a:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800a91e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a922:	f003 030f 	and.w	r3, r3, #15
 800a926:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800a92a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800a92e:	2b00      	cmp	r3, #0
 800a930:	d10f      	bne.n	800a952 <HAL_UART_IRQHandler+0x66>
 800a932:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a936:	f003 0320 	and.w	r3, r3, #32
 800a93a:	2b00      	cmp	r3, #0
 800a93c:	d009      	beq.n	800a952 <HAL_UART_IRQHandler+0x66>
 800a93e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a942:	f003 0320 	and.w	r3, r3, #32
 800a946:	2b00      	cmp	r3, #0
 800a948:	d003      	beq.n	800a952 <HAL_UART_IRQHandler+0x66>
 800a94a:	6878      	ldr	r0, [r7, #4]
 800a94c:	f000 fd89 	bl	800b462 <UART_Receive_IT>
 800a950:	e256      	b.n	800ae00 <HAL_UART_IRQHandler+0x514>
 800a952:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800a956:	2b00      	cmp	r3, #0
 800a958:	f000 80de 	beq.w	800ab18 <HAL_UART_IRQHandler+0x22c>
 800a95c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a960:	f003 0301 	and.w	r3, r3, #1
 800a964:	2b00      	cmp	r3, #0
 800a966:	d106      	bne.n	800a976 <HAL_UART_IRQHandler+0x8a>
 800a968:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a96c:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800a970:	2b00      	cmp	r3, #0
 800a972:	f000 80d1 	beq.w	800ab18 <HAL_UART_IRQHandler+0x22c>
 800a976:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a97a:	f003 0301 	and.w	r3, r3, #1
 800a97e:	2b00      	cmp	r3, #0
 800a980:	d00b      	beq.n	800a99a <HAL_UART_IRQHandler+0xae>
 800a982:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a986:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a98a:	2b00      	cmp	r3, #0
 800a98c:	d005      	beq.n	800a99a <HAL_UART_IRQHandler+0xae>
 800a98e:	687b      	ldr	r3, [r7, #4]
 800a990:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a992:	f043 0201 	orr.w	r2, r3, #1
 800a996:	687b      	ldr	r3, [r7, #4]
 800a998:	641a      	str	r2, [r3, #64]	; 0x40
 800a99a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a99e:	f003 0304 	and.w	r3, r3, #4
 800a9a2:	2b00      	cmp	r3, #0
 800a9a4:	d00b      	beq.n	800a9be <HAL_UART_IRQHandler+0xd2>
 800a9a6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a9aa:	f003 0301 	and.w	r3, r3, #1
 800a9ae:	2b00      	cmp	r3, #0
 800a9b0:	d005      	beq.n	800a9be <HAL_UART_IRQHandler+0xd2>
 800a9b2:	687b      	ldr	r3, [r7, #4]
 800a9b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a9b6:	f043 0202 	orr.w	r2, r3, #2
 800a9ba:	687b      	ldr	r3, [r7, #4]
 800a9bc:	641a      	str	r2, [r3, #64]	; 0x40
 800a9be:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a9c2:	f003 0302 	and.w	r3, r3, #2
 800a9c6:	2b00      	cmp	r3, #0
 800a9c8:	d00b      	beq.n	800a9e2 <HAL_UART_IRQHandler+0xf6>
 800a9ca:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a9ce:	f003 0301 	and.w	r3, r3, #1
 800a9d2:	2b00      	cmp	r3, #0
 800a9d4:	d005      	beq.n	800a9e2 <HAL_UART_IRQHandler+0xf6>
 800a9d6:	687b      	ldr	r3, [r7, #4]
 800a9d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a9da:	f043 0204 	orr.w	r2, r3, #4
 800a9de:	687b      	ldr	r3, [r7, #4]
 800a9e0:	641a      	str	r2, [r3, #64]	; 0x40
 800a9e2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800a9e6:	f003 0308 	and.w	r3, r3, #8
 800a9ea:	2b00      	cmp	r3, #0
 800a9ec:	d011      	beq.n	800aa12 <HAL_UART_IRQHandler+0x126>
 800a9ee:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800a9f2:	f003 0320 	and.w	r3, r3, #32
 800a9f6:	2b00      	cmp	r3, #0
 800a9f8:	d105      	bne.n	800aa06 <HAL_UART_IRQHandler+0x11a>
 800a9fa:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800a9fe:	f003 0301 	and.w	r3, r3, #1
 800aa02:	2b00      	cmp	r3, #0
 800aa04:	d005      	beq.n	800aa12 <HAL_UART_IRQHandler+0x126>
 800aa06:	687b      	ldr	r3, [r7, #4]
 800aa08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800aa0a:	f043 0208 	orr.w	r2, r3, #8
 800aa0e:	687b      	ldr	r3, [r7, #4]
 800aa10:	641a      	str	r2, [r3, #64]	; 0x40
 800aa12:	687b      	ldr	r3, [r7, #4]
 800aa14:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800aa16:	2b00      	cmp	r3, #0
 800aa18:	f000 81ed 	beq.w	800adf6 <HAL_UART_IRQHandler+0x50a>
 800aa1c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800aa20:	f003 0320 	and.w	r3, r3, #32
 800aa24:	2b00      	cmp	r3, #0
 800aa26:	d008      	beq.n	800aa3a <HAL_UART_IRQHandler+0x14e>
 800aa28:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800aa2c:	f003 0320 	and.w	r3, r3, #32
 800aa30:	2b00      	cmp	r3, #0
 800aa32:	d002      	beq.n	800aa3a <HAL_UART_IRQHandler+0x14e>
 800aa34:	6878      	ldr	r0, [r7, #4]
 800aa36:	f000 fd14 	bl	800b462 <UART_Receive_IT>
 800aa3a:	687b      	ldr	r3, [r7, #4]
 800aa3c:	681b      	ldr	r3, [r3, #0]
 800aa3e:	695b      	ldr	r3, [r3, #20]
 800aa40:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800aa44:	2b40      	cmp	r3, #64	; 0x40
 800aa46:	bf0c      	ite	eq
 800aa48:	2301      	moveq	r3, #1
 800aa4a:	2300      	movne	r3, #0
 800aa4c:	b2db      	uxtb	r3, r3
 800aa4e:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800aa52:	687b      	ldr	r3, [r7, #4]
 800aa54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800aa56:	f003 0308 	and.w	r3, r3, #8
 800aa5a:	2b00      	cmp	r3, #0
 800aa5c:	d103      	bne.n	800aa66 <HAL_UART_IRQHandler+0x17a>
 800aa5e:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800aa62:	2b00      	cmp	r3, #0
 800aa64:	d04f      	beq.n	800ab06 <HAL_UART_IRQHandler+0x21a>
 800aa66:	6878      	ldr	r0, [r7, #4]
 800aa68:	f000 fc1c 	bl	800b2a4 <UART_EndRxTransfer>
 800aa6c:	687b      	ldr	r3, [r7, #4]
 800aa6e:	681b      	ldr	r3, [r3, #0]
 800aa70:	695b      	ldr	r3, [r3, #20]
 800aa72:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800aa76:	2b40      	cmp	r3, #64	; 0x40
 800aa78:	d141      	bne.n	800aafe <HAL_UART_IRQHandler+0x212>
 800aa7a:	687b      	ldr	r3, [r7, #4]
 800aa7c:	681b      	ldr	r3, [r3, #0]
 800aa7e:	3314      	adds	r3, #20
 800aa80:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800aa84:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800aa88:	e853 3f00 	ldrex	r3, [r3]
 800aa8c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800aa90:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800aa94:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800aa98:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800aa9c:	687b      	ldr	r3, [r7, #4]
 800aa9e:	681b      	ldr	r3, [r3, #0]
 800aaa0:	3314      	adds	r3, #20
 800aaa2:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800aaa6:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800aaaa:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800aaae:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800aab2:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800aab6:	e841 2300 	strex	r3, r2, [r1]
 800aaba:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800aabe:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800aac2:	2b00      	cmp	r3, #0
 800aac4:	d1d9      	bne.n	800aa7a <HAL_UART_IRQHandler+0x18e>
 800aac6:	687b      	ldr	r3, [r7, #4]
 800aac8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aaca:	2b00      	cmp	r3, #0
 800aacc:	d013      	beq.n	800aaf6 <HAL_UART_IRQHandler+0x20a>
 800aace:	687b      	ldr	r3, [r7, #4]
 800aad0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aad2:	4a7d      	ldr	r2, [pc, #500]	; (800acc8 <HAL_UART_IRQHandler+0x3dc>)
 800aad4:	651a      	str	r2, [r3, #80]	; 0x50
 800aad6:	687b      	ldr	r3, [r7, #4]
 800aad8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aada:	4618      	mov	r0, r3
 800aadc:	f7fa faec 	bl	80050b8 <HAL_DMA_Abort_IT>
 800aae0:	4603      	mov	r3, r0
 800aae2:	2b00      	cmp	r3, #0
 800aae4:	d016      	beq.n	800ab14 <HAL_UART_IRQHandler+0x228>
 800aae6:	687b      	ldr	r3, [r7, #4]
 800aae8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aaea:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800aaec:	687a      	ldr	r2, [r7, #4]
 800aaee:	6b92      	ldr	r2, [r2, #56]	; 0x38
 800aaf0:	4610      	mov	r0, r2
 800aaf2:	4798      	blx	r3
 800aaf4:	e00e      	b.n	800ab14 <HAL_UART_IRQHandler+0x228>
 800aaf6:	6878      	ldr	r0, [r7, #4]
 800aaf8:	f000 f9a4 	bl	800ae44 <HAL_UART_ErrorCallback>
 800aafc:	e00a      	b.n	800ab14 <HAL_UART_IRQHandler+0x228>
 800aafe:	6878      	ldr	r0, [r7, #4]
 800ab00:	f000 f9a0 	bl	800ae44 <HAL_UART_ErrorCallback>
 800ab04:	e006      	b.n	800ab14 <HAL_UART_IRQHandler+0x228>
 800ab06:	6878      	ldr	r0, [r7, #4]
 800ab08:	f000 f99c 	bl	800ae44 <HAL_UART_ErrorCallback>
 800ab0c:	687b      	ldr	r3, [r7, #4]
 800ab0e:	2200      	movs	r2, #0
 800ab10:	641a      	str	r2, [r3, #64]	; 0x40
 800ab12:	e170      	b.n	800adf6 <HAL_UART_IRQHandler+0x50a>
 800ab14:	bf00      	nop
 800ab16:	e16e      	b.n	800adf6 <HAL_UART_IRQHandler+0x50a>
 800ab18:	687b      	ldr	r3, [r7, #4]
 800ab1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ab1c:	2b01      	cmp	r3, #1
 800ab1e:	f040 814a 	bne.w	800adb6 <HAL_UART_IRQHandler+0x4ca>
 800ab22:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ab26:	f003 0310 	and.w	r3, r3, #16
 800ab2a:	2b00      	cmp	r3, #0
 800ab2c:	f000 8143 	beq.w	800adb6 <HAL_UART_IRQHandler+0x4ca>
 800ab30:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ab34:	f003 0310 	and.w	r3, r3, #16
 800ab38:	2b00      	cmp	r3, #0
 800ab3a:	f000 813c 	beq.w	800adb6 <HAL_UART_IRQHandler+0x4ca>
 800ab3e:	2300      	movs	r3, #0
 800ab40:	60bb      	str	r3, [r7, #8]
 800ab42:	687b      	ldr	r3, [r7, #4]
 800ab44:	681b      	ldr	r3, [r3, #0]
 800ab46:	681b      	ldr	r3, [r3, #0]
 800ab48:	60bb      	str	r3, [r7, #8]
 800ab4a:	687b      	ldr	r3, [r7, #4]
 800ab4c:	681b      	ldr	r3, [r3, #0]
 800ab4e:	685b      	ldr	r3, [r3, #4]
 800ab50:	60bb      	str	r3, [r7, #8]
 800ab52:	68bb      	ldr	r3, [r7, #8]
 800ab54:	687b      	ldr	r3, [r7, #4]
 800ab56:	681b      	ldr	r3, [r3, #0]
 800ab58:	695b      	ldr	r3, [r3, #20]
 800ab5a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ab5e:	2b40      	cmp	r3, #64	; 0x40
 800ab60:	f040 80b4 	bne.w	800accc <HAL_UART_IRQHandler+0x3e0>
 800ab64:	687b      	ldr	r3, [r7, #4]
 800ab66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ab68:	681b      	ldr	r3, [r3, #0]
 800ab6a:	685b      	ldr	r3, [r3, #4]
 800ab6c:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 800ab70:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800ab74:	2b00      	cmp	r3, #0
 800ab76:	f000 8140 	beq.w	800adfa <HAL_UART_IRQHandler+0x50e>
 800ab7a:	687b      	ldr	r3, [r7, #4]
 800ab7c:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800ab7e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800ab82:	429a      	cmp	r2, r3
 800ab84:	f080 8139 	bcs.w	800adfa <HAL_UART_IRQHandler+0x50e>
 800ab88:	687b      	ldr	r3, [r7, #4]
 800ab8a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800ab8e:	85da      	strh	r2, [r3, #46]	; 0x2e
 800ab90:	687b      	ldr	r3, [r7, #4]
 800ab92:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ab94:	69db      	ldr	r3, [r3, #28]
 800ab96:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800ab9a:	f000 8088 	beq.w	800acae <HAL_UART_IRQHandler+0x3c2>
 800ab9e:	687b      	ldr	r3, [r7, #4]
 800aba0:	681b      	ldr	r3, [r3, #0]
 800aba2:	330c      	adds	r3, #12
 800aba4:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800aba8:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800abac:	e853 3f00 	ldrex	r3, [r3]
 800abb0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800abb4:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800abb8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800abbc:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800abc0:	687b      	ldr	r3, [r7, #4]
 800abc2:	681b      	ldr	r3, [r3, #0]
 800abc4:	330c      	adds	r3, #12
 800abc6:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800abca:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800abce:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800abd2:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800abd6:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800abda:	e841 2300 	strex	r3, r2, [r1]
 800abde:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800abe2:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800abe6:	2b00      	cmp	r3, #0
 800abe8:	d1d9      	bne.n	800ab9e <HAL_UART_IRQHandler+0x2b2>
 800abea:	687b      	ldr	r3, [r7, #4]
 800abec:	681b      	ldr	r3, [r3, #0]
 800abee:	3314      	adds	r3, #20
 800abf0:	677b      	str	r3, [r7, #116]	; 0x74
 800abf2:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800abf4:	e853 3f00 	ldrex	r3, [r3]
 800abf8:	673b      	str	r3, [r7, #112]	; 0x70
 800abfa:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800abfc:	f023 0301 	bic.w	r3, r3, #1
 800ac00:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800ac04:	687b      	ldr	r3, [r7, #4]
 800ac06:	681b      	ldr	r3, [r3, #0]
 800ac08:	3314      	adds	r3, #20
 800ac0a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800ac0e:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800ac12:	67fb      	str	r3, [r7, #124]	; 0x7c
 800ac14:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800ac16:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800ac1a:	e841 2300 	strex	r3, r2, [r1]
 800ac1e:	67bb      	str	r3, [r7, #120]	; 0x78
 800ac20:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800ac22:	2b00      	cmp	r3, #0
 800ac24:	d1e1      	bne.n	800abea <HAL_UART_IRQHandler+0x2fe>
 800ac26:	687b      	ldr	r3, [r7, #4]
 800ac28:	681b      	ldr	r3, [r3, #0]
 800ac2a:	3314      	adds	r3, #20
 800ac2c:	663b      	str	r3, [r7, #96]	; 0x60
 800ac2e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800ac30:	e853 3f00 	ldrex	r3, [r3]
 800ac34:	65fb      	str	r3, [r7, #92]	; 0x5c
 800ac36:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800ac38:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ac3c:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800ac40:	687b      	ldr	r3, [r7, #4]
 800ac42:	681b      	ldr	r3, [r3, #0]
 800ac44:	3314      	adds	r3, #20
 800ac46:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800ac4a:	66fa      	str	r2, [r7, #108]	; 0x6c
 800ac4c:	66bb      	str	r3, [r7, #104]	; 0x68
 800ac4e:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800ac50:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800ac52:	e841 2300 	strex	r3, r2, [r1]
 800ac56:	667b      	str	r3, [r7, #100]	; 0x64
 800ac58:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800ac5a:	2b00      	cmp	r3, #0
 800ac5c:	d1e3      	bne.n	800ac26 <HAL_UART_IRQHandler+0x33a>
 800ac5e:	687b      	ldr	r3, [r7, #4]
 800ac60:	2220      	movs	r2, #32
 800ac62:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800ac66:	687b      	ldr	r3, [r7, #4]
 800ac68:	2200      	movs	r2, #0
 800ac6a:	631a      	str	r2, [r3, #48]	; 0x30
 800ac6c:	687b      	ldr	r3, [r7, #4]
 800ac6e:	681b      	ldr	r3, [r3, #0]
 800ac70:	330c      	adds	r3, #12
 800ac72:	64fb      	str	r3, [r7, #76]	; 0x4c
 800ac74:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800ac76:	e853 3f00 	ldrex	r3, [r3]
 800ac7a:	64bb      	str	r3, [r7, #72]	; 0x48
 800ac7c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800ac7e:	f023 0310 	bic.w	r3, r3, #16
 800ac82:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800ac86:	687b      	ldr	r3, [r7, #4]
 800ac88:	681b      	ldr	r3, [r3, #0]
 800ac8a:	330c      	adds	r3, #12
 800ac8c:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 800ac90:	65ba      	str	r2, [r7, #88]	; 0x58
 800ac92:	657b      	str	r3, [r7, #84]	; 0x54
 800ac94:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800ac96:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800ac98:	e841 2300 	strex	r3, r2, [r1]
 800ac9c:	653b      	str	r3, [r7, #80]	; 0x50
 800ac9e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800aca0:	2b00      	cmp	r3, #0
 800aca2:	d1e3      	bne.n	800ac6c <HAL_UART_IRQHandler+0x380>
 800aca4:	687b      	ldr	r3, [r7, #4]
 800aca6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800aca8:	4618      	mov	r0, r3
 800acaa:	f7fa f995 	bl	8004fd8 <HAL_DMA_Abort>
 800acae:	687b      	ldr	r3, [r7, #4]
 800acb0:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800acb2:	687b      	ldr	r3, [r7, #4]
 800acb4:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800acb6:	b29b      	uxth	r3, r3
 800acb8:	1ad3      	subs	r3, r2, r3
 800acba:	b29b      	uxth	r3, r3
 800acbc:	4619      	mov	r1, r3
 800acbe:	6878      	ldr	r0, [r7, #4]
 800acc0:	f000 f8ca 	bl	800ae58 <HAL_UARTEx_RxEventCallback>
 800acc4:	e099      	b.n	800adfa <HAL_UART_IRQHandler+0x50e>
 800acc6:	bf00      	nop
 800acc8:	0800b36b 	.word	0x0800b36b
 800accc:	687b      	ldr	r3, [r7, #4]
 800acce:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 800acd0:	687b      	ldr	r3, [r7, #4]
 800acd2:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800acd4:	b29b      	uxth	r3, r3
 800acd6:	1ad3      	subs	r3, r2, r3
 800acd8:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 800acdc:	687b      	ldr	r3, [r7, #4]
 800acde:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800ace0:	b29b      	uxth	r3, r3
 800ace2:	2b00      	cmp	r3, #0
 800ace4:	f000 808b 	beq.w	800adfe <HAL_UART_IRQHandler+0x512>
 800ace8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800acec:	2b00      	cmp	r3, #0
 800acee:	f000 8086 	beq.w	800adfe <HAL_UART_IRQHandler+0x512>
 800acf2:	687b      	ldr	r3, [r7, #4]
 800acf4:	681b      	ldr	r3, [r3, #0]
 800acf6:	330c      	adds	r3, #12
 800acf8:	63bb      	str	r3, [r7, #56]	; 0x38
 800acfa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800acfc:	e853 3f00 	ldrex	r3, [r3]
 800ad00:	637b      	str	r3, [r7, #52]	; 0x34
 800ad02:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800ad04:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800ad08:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800ad0c:	687b      	ldr	r3, [r7, #4]
 800ad0e:	681b      	ldr	r3, [r3, #0]
 800ad10:	330c      	adds	r3, #12
 800ad12:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 800ad16:	647a      	str	r2, [r7, #68]	; 0x44
 800ad18:	643b      	str	r3, [r7, #64]	; 0x40
 800ad1a:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800ad1c:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800ad1e:	e841 2300 	strex	r3, r2, [r1]
 800ad22:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ad24:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ad26:	2b00      	cmp	r3, #0
 800ad28:	d1e3      	bne.n	800acf2 <HAL_UART_IRQHandler+0x406>
 800ad2a:	687b      	ldr	r3, [r7, #4]
 800ad2c:	681b      	ldr	r3, [r3, #0]
 800ad2e:	3314      	adds	r3, #20
 800ad30:	627b      	str	r3, [r7, #36]	; 0x24
 800ad32:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ad34:	e853 3f00 	ldrex	r3, [r3]
 800ad38:	623b      	str	r3, [r7, #32]
 800ad3a:	6a3b      	ldr	r3, [r7, #32]
 800ad3c:	f023 0301 	bic.w	r3, r3, #1
 800ad40:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800ad44:	687b      	ldr	r3, [r7, #4]
 800ad46:	681b      	ldr	r3, [r3, #0]
 800ad48:	3314      	adds	r3, #20
 800ad4a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800ad4e:	633a      	str	r2, [r7, #48]	; 0x30
 800ad50:	62fb      	str	r3, [r7, #44]	; 0x2c
 800ad52:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800ad54:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800ad56:	e841 2300 	strex	r3, r2, [r1]
 800ad5a:	62bb      	str	r3, [r7, #40]	; 0x28
 800ad5c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ad5e:	2b00      	cmp	r3, #0
 800ad60:	d1e3      	bne.n	800ad2a <HAL_UART_IRQHandler+0x43e>
 800ad62:	687b      	ldr	r3, [r7, #4]
 800ad64:	2220      	movs	r2, #32
 800ad66:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800ad6a:	687b      	ldr	r3, [r7, #4]
 800ad6c:	2200      	movs	r2, #0
 800ad6e:	631a      	str	r2, [r3, #48]	; 0x30
 800ad70:	687b      	ldr	r3, [r7, #4]
 800ad72:	681b      	ldr	r3, [r3, #0]
 800ad74:	330c      	adds	r3, #12
 800ad76:	613b      	str	r3, [r7, #16]
 800ad78:	693b      	ldr	r3, [r7, #16]
 800ad7a:	e853 3f00 	ldrex	r3, [r3]
 800ad7e:	60fb      	str	r3, [r7, #12]
 800ad80:	68fb      	ldr	r3, [r7, #12]
 800ad82:	f023 0310 	bic.w	r3, r3, #16
 800ad86:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800ad8a:	687b      	ldr	r3, [r7, #4]
 800ad8c:	681b      	ldr	r3, [r3, #0]
 800ad8e:	330c      	adds	r3, #12
 800ad90:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 800ad94:	61fa      	str	r2, [r7, #28]
 800ad96:	61bb      	str	r3, [r7, #24]
 800ad98:	69b9      	ldr	r1, [r7, #24]
 800ad9a:	69fa      	ldr	r2, [r7, #28]
 800ad9c:	e841 2300 	strex	r3, r2, [r1]
 800ada0:	617b      	str	r3, [r7, #20]
 800ada2:	697b      	ldr	r3, [r7, #20]
 800ada4:	2b00      	cmp	r3, #0
 800ada6:	d1e3      	bne.n	800ad70 <HAL_UART_IRQHandler+0x484>
 800ada8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800adac:	4619      	mov	r1, r3
 800adae:	6878      	ldr	r0, [r7, #4]
 800adb0:	f000 f852 	bl	800ae58 <HAL_UARTEx_RxEventCallback>
 800adb4:	e023      	b.n	800adfe <HAL_UART_IRQHandler+0x512>
 800adb6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800adba:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800adbe:	2b00      	cmp	r3, #0
 800adc0:	d009      	beq.n	800add6 <HAL_UART_IRQHandler+0x4ea>
 800adc2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800adc6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800adca:	2b00      	cmp	r3, #0
 800adcc:	d003      	beq.n	800add6 <HAL_UART_IRQHandler+0x4ea>
 800adce:	6878      	ldr	r0, [r7, #4]
 800add0:	f000 fadf 	bl	800b392 <UART_Transmit_IT>
 800add4:	e014      	b.n	800ae00 <HAL_UART_IRQHandler+0x514>
 800add6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800adda:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800adde:	2b00      	cmp	r3, #0
 800ade0:	d00e      	beq.n	800ae00 <HAL_UART_IRQHandler+0x514>
 800ade2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ade6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800adea:	2b00      	cmp	r3, #0
 800adec:	d008      	beq.n	800ae00 <HAL_UART_IRQHandler+0x514>
 800adee:	6878      	ldr	r0, [r7, #4]
 800adf0:	f000 fb1f 	bl	800b432 <UART_EndTransmit_IT>
 800adf4:	e004      	b.n	800ae00 <HAL_UART_IRQHandler+0x514>
 800adf6:	bf00      	nop
 800adf8:	e002      	b.n	800ae00 <HAL_UART_IRQHandler+0x514>
 800adfa:	bf00      	nop
 800adfc:	e000      	b.n	800ae00 <HAL_UART_IRQHandler+0x514>
 800adfe:	bf00      	nop
 800ae00:	37e8      	adds	r7, #232	; 0xe8
 800ae02:	46bd      	mov	sp, r7
 800ae04:	bd80      	pop	{r7, pc}
 800ae06:	bf00      	nop

0800ae08 <HAL_UART_TxCpltCallback>:
 800ae08:	b480      	push	{r7}
 800ae0a:	b083      	sub	sp, #12
 800ae0c:	af00      	add	r7, sp, #0
 800ae0e:	6078      	str	r0, [r7, #4]
 800ae10:	bf00      	nop
 800ae12:	370c      	adds	r7, #12
 800ae14:	46bd      	mov	sp, r7
 800ae16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae1a:	4770      	bx	lr

0800ae1c <HAL_UART_TxHalfCpltCallback>:
 800ae1c:	b480      	push	{r7}
 800ae1e:	b083      	sub	sp, #12
 800ae20:	af00      	add	r7, sp, #0
 800ae22:	6078      	str	r0, [r7, #4]
 800ae24:	bf00      	nop
 800ae26:	370c      	adds	r7, #12
 800ae28:	46bd      	mov	sp, r7
 800ae2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae2e:	4770      	bx	lr

0800ae30 <HAL_UART_RxHalfCpltCallback>:
 800ae30:	b480      	push	{r7}
 800ae32:	b083      	sub	sp, #12
 800ae34:	af00      	add	r7, sp, #0
 800ae36:	6078      	str	r0, [r7, #4]
 800ae38:	bf00      	nop
 800ae3a:	370c      	adds	r7, #12
 800ae3c:	46bd      	mov	sp, r7
 800ae3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae42:	4770      	bx	lr

0800ae44 <HAL_UART_ErrorCallback>:
 800ae44:	b480      	push	{r7}
 800ae46:	b083      	sub	sp, #12
 800ae48:	af00      	add	r7, sp, #0
 800ae4a:	6078      	str	r0, [r7, #4]
 800ae4c:	bf00      	nop
 800ae4e:	370c      	adds	r7, #12
 800ae50:	46bd      	mov	sp, r7
 800ae52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae56:	4770      	bx	lr

0800ae58 <HAL_UARTEx_RxEventCallback>:
 800ae58:	b480      	push	{r7}
 800ae5a:	b083      	sub	sp, #12
 800ae5c:	af00      	add	r7, sp, #0
 800ae5e:	6078      	str	r0, [r7, #4]
 800ae60:	460b      	mov	r3, r1
 800ae62:	807b      	strh	r3, [r7, #2]
 800ae64:	bf00      	nop
 800ae66:	370c      	adds	r7, #12
 800ae68:	46bd      	mov	sp, r7
 800ae6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae6e:	4770      	bx	lr

0800ae70 <UART_DMATransmitCplt>:
 800ae70:	b580      	push	{r7, lr}
 800ae72:	b090      	sub	sp, #64	; 0x40
 800ae74:	af00      	add	r7, sp, #0
 800ae76:	6078      	str	r0, [r7, #4]
 800ae78:	687b      	ldr	r3, [r7, #4]
 800ae7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ae7c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ae7e:	687b      	ldr	r3, [r7, #4]
 800ae80:	681b      	ldr	r3, [r3, #0]
 800ae82:	681b      	ldr	r3, [r3, #0]
 800ae84:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ae88:	2b00      	cmp	r3, #0
 800ae8a:	d137      	bne.n	800aefc <UART_DMATransmitCplt+0x8c>
 800ae8c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ae8e:	2200      	movs	r2, #0
 800ae90:	84da      	strh	r2, [r3, #38]	; 0x26
 800ae92:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ae94:	681b      	ldr	r3, [r3, #0]
 800ae96:	3314      	adds	r3, #20
 800ae98:	627b      	str	r3, [r7, #36]	; 0x24
 800ae9a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800ae9c:	e853 3f00 	ldrex	r3, [r3]
 800aea0:	623b      	str	r3, [r7, #32]
 800aea2:	6a3b      	ldr	r3, [r7, #32]
 800aea4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800aea8:	63bb      	str	r3, [r7, #56]	; 0x38
 800aeaa:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800aeac:	681b      	ldr	r3, [r3, #0]
 800aeae:	3314      	adds	r3, #20
 800aeb0:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800aeb2:	633a      	str	r2, [r7, #48]	; 0x30
 800aeb4:	62fb      	str	r3, [r7, #44]	; 0x2c
 800aeb6:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800aeb8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800aeba:	e841 2300 	strex	r3, r2, [r1]
 800aebe:	62bb      	str	r3, [r7, #40]	; 0x28
 800aec0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800aec2:	2b00      	cmp	r3, #0
 800aec4:	d1e5      	bne.n	800ae92 <UART_DMATransmitCplt+0x22>
 800aec6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800aec8:	681b      	ldr	r3, [r3, #0]
 800aeca:	330c      	adds	r3, #12
 800aecc:	613b      	str	r3, [r7, #16]
 800aece:	693b      	ldr	r3, [r7, #16]
 800aed0:	e853 3f00 	ldrex	r3, [r3]
 800aed4:	60fb      	str	r3, [r7, #12]
 800aed6:	68fb      	ldr	r3, [r7, #12]
 800aed8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800aedc:	637b      	str	r3, [r7, #52]	; 0x34
 800aede:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800aee0:	681b      	ldr	r3, [r3, #0]
 800aee2:	330c      	adds	r3, #12
 800aee4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800aee6:	61fa      	str	r2, [r7, #28]
 800aee8:	61bb      	str	r3, [r7, #24]
 800aeea:	69b9      	ldr	r1, [r7, #24]
 800aeec:	69fa      	ldr	r2, [r7, #28]
 800aeee:	e841 2300 	strex	r3, r2, [r1]
 800aef2:	617b      	str	r3, [r7, #20]
 800aef4:	697b      	ldr	r3, [r7, #20]
 800aef6:	2b00      	cmp	r3, #0
 800aef8:	d1e5      	bne.n	800aec6 <UART_DMATransmitCplt+0x56>
 800aefa:	e002      	b.n	800af02 <UART_DMATransmitCplt+0x92>
 800aefc:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 800aefe:	f7ff ff83 	bl	800ae08 <HAL_UART_TxCpltCallback>
 800af02:	bf00      	nop
 800af04:	3740      	adds	r7, #64	; 0x40
 800af06:	46bd      	mov	sp, r7
 800af08:	bd80      	pop	{r7, pc}

0800af0a <UART_DMATxHalfCplt>:
 800af0a:	b580      	push	{r7, lr}
 800af0c:	b084      	sub	sp, #16
 800af0e:	af00      	add	r7, sp, #0
 800af10:	6078      	str	r0, [r7, #4]
 800af12:	687b      	ldr	r3, [r7, #4]
 800af14:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800af16:	60fb      	str	r3, [r7, #12]
 800af18:	68f8      	ldr	r0, [r7, #12]
 800af1a:	f7ff ff7f 	bl	800ae1c <HAL_UART_TxHalfCpltCallback>
 800af1e:	bf00      	nop
 800af20:	3710      	adds	r7, #16
 800af22:	46bd      	mov	sp, r7
 800af24:	bd80      	pop	{r7, pc}

0800af26 <UART_DMAReceiveCplt>:
 800af26:	b580      	push	{r7, lr}
 800af28:	b09c      	sub	sp, #112	; 0x70
 800af2a:	af00      	add	r7, sp, #0
 800af2c:	6078      	str	r0, [r7, #4]
 800af2e:	687b      	ldr	r3, [r7, #4]
 800af30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800af32:	66fb      	str	r3, [r7, #108]	; 0x6c
 800af34:	687b      	ldr	r3, [r7, #4]
 800af36:	681b      	ldr	r3, [r3, #0]
 800af38:	681b      	ldr	r3, [r3, #0]
 800af3a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800af3e:	2b00      	cmp	r3, #0
 800af40:	d172      	bne.n	800b028 <UART_DMAReceiveCplt+0x102>
 800af42:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af44:	2200      	movs	r2, #0
 800af46:	85da      	strh	r2, [r3, #46]	; 0x2e
 800af48:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af4a:	681b      	ldr	r3, [r3, #0]
 800af4c:	330c      	adds	r3, #12
 800af4e:	64fb      	str	r3, [r7, #76]	; 0x4c
 800af50:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800af52:	e853 3f00 	ldrex	r3, [r3]
 800af56:	64bb      	str	r3, [r7, #72]	; 0x48
 800af58:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800af5a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800af5e:	66bb      	str	r3, [r7, #104]	; 0x68
 800af60:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af62:	681b      	ldr	r3, [r3, #0]
 800af64:	330c      	adds	r3, #12
 800af66:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800af68:	65ba      	str	r2, [r7, #88]	; 0x58
 800af6a:	657b      	str	r3, [r7, #84]	; 0x54
 800af6c:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800af6e:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800af70:	e841 2300 	strex	r3, r2, [r1]
 800af74:	653b      	str	r3, [r7, #80]	; 0x50
 800af76:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800af78:	2b00      	cmp	r3, #0
 800af7a:	d1e5      	bne.n	800af48 <UART_DMAReceiveCplt+0x22>
 800af7c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af7e:	681b      	ldr	r3, [r3, #0]
 800af80:	3314      	adds	r3, #20
 800af82:	63bb      	str	r3, [r7, #56]	; 0x38
 800af84:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800af86:	e853 3f00 	ldrex	r3, [r3]
 800af8a:	637b      	str	r3, [r7, #52]	; 0x34
 800af8c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800af8e:	f023 0301 	bic.w	r3, r3, #1
 800af92:	667b      	str	r3, [r7, #100]	; 0x64
 800af94:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800af96:	681b      	ldr	r3, [r3, #0]
 800af98:	3314      	adds	r3, #20
 800af9a:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800af9c:	647a      	str	r2, [r7, #68]	; 0x44
 800af9e:	643b      	str	r3, [r7, #64]	; 0x40
 800afa0:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800afa2:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800afa4:	e841 2300 	strex	r3, r2, [r1]
 800afa8:	63fb      	str	r3, [r7, #60]	; 0x3c
 800afaa:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800afac:	2b00      	cmp	r3, #0
 800afae:	d1e5      	bne.n	800af7c <UART_DMAReceiveCplt+0x56>
 800afb0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800afb2:	681b      	ldr	r3, [r3, #0]
 800afb4:	3314      	adds	r3, #20
 800afb6:	627b      	str	r3, [r7, #36]	; 0x24
 800afb8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800afba:	e853 3f00 	ldrex	r3, [r3]
 800afbe:	623b      	str	r3, [r7, #32]
 800afc0:	6a3b      	ldr	r3, [r7, #32]
 800afc2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800afc6:	663b      	str	r3, [r7, #96]	; 0x60
 800afc8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800afca:	681b      	ldr	r3, [r3, #0]
 800afcc:	3314      	adds	r3, #20
 800afce:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800afd0:	633a      	str	r2, [r7, #48]	; 0x30
 800afd2:	62fb      	str	r3, [r7, #44]	; 0x2c
 800afd4:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800afd6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800afd8:	e841 2300 	strex	r3, r2, [r1]
 800afdc:	62bb      	str	r3, [r7, #40]	; 0x28
 800afde:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800afe0:	2b00      	cmp	r3, #0
 800afe2:	d1e5      	bne.n	800afb0 <UART_DMAReceiveCplt+0x8a>
 800afe4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800afe6:	2220      	movs	r2, #32
 800afe8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800afec:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800afee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800aff0:	2b01      	cmp	r3, #1
 800aff2:	d119      	bne.n	800b028 <UART_DMAReceiveCplt+0x102>
 800aff4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800aff6:	681b      	ldr	r3, [r3, #0]
 800aff8:	330c      	adds	r3, #12
 800affa:	613b      	str	r3, [r7, #16]
 800affc:	693b      	ldr	r3, [r7, #16]
 800affe:	e853 3f00 	ldrex	r3, [r3]
 800b002:	60fb      	str	r3, [r7, #12]
 800b004:	68fb      	ldr	r3, [r7, #12]
 800b006:	f023 0310 	bic.w	r3, r3, #16
 800b00a:	65fb      	str	r3, [r7, #92]	; 0x5c
 800b00c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800b00e:	681b      	ldr	r3, [r3, #0]
 800b010:	330c      	adds	r3, #12
 800b012:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800b014:	61fa      	str	r2, [r7, #28]
 800b016:	61bb      	str	r3, [r7, #24]
 800b018:	69b9      	ldr	r1, [r7, #24]
 800b01a:	69fa      	ldr	r2, [r7, #28]
 800b01c:	e841 2300 	strex	r3, r2, [r1]
 800b020:	617b      	str	r3, [r7, #20]
 800b022:	697b      	ldr	r3, [r7, #20]
 800b024:	2b00      	cmp	r3, #0
 800b026:	d1e5      	bne.n	800aff4 <UART_DMAReceiveCplt+0xce>
 800b028:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800b02a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b02c:	2b01      	cmp	r3, #1
 800b02e:	d106      	bne.n	800b03e <UART_DMAReceiveCplt+0x118>
 800b030:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800b032:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800b034:	4619      	mov	r1, r3
 800b036:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 800b038:	f7ff ff0e 	bl	800ae58 <HAL_UARTEx_RxEventCallback>
 800b03c:	e002      	b.n	800b044 <UART_DMAReceiveCplt+0x11e>
 800b03e:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 800b040:	f7f9 f9e2 	bl	8004408 <HAL_UART_RxCpltCallback>
 800b044:	bf00      	nop
 800b046:	3770      	adds	r7, #112	; 0x70
 800b048:	46bd      	mov	sp, r7
 800b04a:	bd80      	pop	{r7, pc}

0800b04c <UART_DMARxHalfCplt>:
 800b04c:	b580      	push	{r7, lr}
 800b04e:	b084      	sub	sp, #16
 800b050:	af00      	add	r7, sp, #0
 800b052:	6078      	str	r0, [r7, #4]
 800b054:	687b      	ldr	r3, [r7, #4]
 800b056:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b058:	60fb      	str	r3, [r7, #12]
 800b05a:	68fb      	ldr	r3, [r7, #12]
 800b05c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b05e:	2b01      	cmp	r3, #1
 800b060:	d108      	bne.n	800b074 <UART_DMARxHalfCplt+0x28>
 800b062:	68fb      	ldr	r3, [r7, #12]
 800b064:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800b066:	085b      	lsrs	r3, r3, #1
 800b068:	b29b      	uxth	r3, r3
 800b06a:	4619      	mov	r1, r3
 800b06c:	68f8      	ldr	r0, [r7, #12]
 800b06e:	f7ff fef3 	bl	800ae58 <HAL_UARTEx_RxEventCallback>
 800b072:	e002      	b.n	800b07a <UART_DMARxHalfCplt+0x2e>
 800b074:	68f8      	ldr	r0, [r7, #12]
 800b076:	f7ff fedb 	bl	800ae30 <HAL_UART_RxHalfCpltCallback>
 800b07a:	bf00      	nop
 800b07c:	3710      	adds	r7, #16
 800b07e:	46bd      	mov	sp, r7
 800b080:	bd80      	pop	{r7, pc}

0800b082 <UART_DMAError>:
 800b082:	b580      	push	{r7, lr}
 800b084:	b084      	sub	sp, #16
 800b086:	af00      	add	r7, sp, #0
 800b088:	6078      	str	r0, [r7, #4]
 800b08a:	2300      	movs	r3, #0
 800b08c:	60fb      	str	r3, [r7, #12]
 800b08e:	687b      	ldr	r3, [r7, #4]
 800b090:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b092:	60bb      	str	r3, [r7, #8]
 800b094:	68bb      	ldr	r3, [r7, #8]
 800b096:	681b      	ldr	r3, [r3, #0]
 800b098:	695b      	ldr	r3, [r3, #20]
 800b09a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800b09e:	2b80      	cmp	r3, #128	; 0x80
 800b0a0:	bf0c      	ite	eq
 800b0a2:	2301      	moveq	r3, #1
 800b0a4:	2300      	movne	r3, #0
 800b0a6:	b2db      	uxtb	r3, r3
 800b0a8:	60fb      	str	r3, [r7, #12]
 800b0aa:	68bb      	ldr	r3, [r7, #8]
 800b0ac:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b0b0:	b2db      	uxtb	r3, r3
 800b0b2:	2b21      	cmp	r3, #33	; 0x21
 800b0b4:	d108      	bne.n	800b0c8 <UART_DMAError+0x46>
 800b0b6:	68fb      	ldr	r3, [r7, #12]
 800b0b8:	2b00      	cmp	r3, #0
 800b0ba:	d005      	beq.n	800b0c8 <UART_DMAError+0x46>
 800b0bc:	68bb      	ldr	r3, [r7, #8]
 800b0be:	2200      	movs	r2, #0
 800b0c0:	84da      	strh	r2, [r3, #38]	; 0x26
 800b0c2:	68b8      	ldr	r0, [r7, #8]
 800b0c4:	f000 f8c6 	bl	800b254 <UART_EndTxTransfer>
 800b0c8:	68bb      	ldr	r3, [r7, #8]
 800b0ca:	681b      	ldr	r3, [r3, #0]
 800b0cc:	695b      	ldr	r3, [r3, #20]
 800b0ce:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b0d2:	2b40      	cmp	r3, #64	; 0x40
 800b0d4:	bf0c      	ite	eq
 800b0d6:	2301      	moveq	r3, #1
 800b0d8:	2300      	movne	r3, #0
 800b0da:	b2db      	uxtb	r3, r3
 800b0dc:	60fb      	str	r3, [r7, #12]
 800b0de:	68bb      	ldr	r3, [r7, #8]
 800b0e0:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800b0e4:	b2db      	uxtb	r3, r3
 800b0e6:	2b22      	cmp	r3, #34	; 0x22
 800b0e8:	d108      	bne.n	800b0fc <UART_DMAError+0x7a>
 800b0ea:	68fb      	ldr	r3, [r7, #12]
 800b0ec:	2b00      	cmp	r3, #0
 800b0ee:	d005      	beq.n	800b0fc <UART_DMAError+0x7a>
 800b0f0:	68bb      	ldr	r3, [r7, #8]
 800b0f2:	2200      	movs	r2, #0
 800b0f4:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b0f6:	68b8      	ldr	r0, [r7, #8]
 800b0f8:	f000 f8d4 	bl	800b2a4 <UART_EndRxTransfer>
 800b0fc:	68bb      	ldr	r3, [r7, #8]
 800b0fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b100:	f043 0210 	orr.w	r2, r3, #16
 800b104:	68bb      	ldr	r3, [r7, #8]
 800b106:	641a      	str	r2, [r3, #64]	; 0x40
 800b108:	68b8      	ldr	r0, [r7, #8]
 800b10a:	f7ff fe9b 	bl	800ae44 <HAL_UART_ErrorCallback>
 800b10e:	bf00      	nop
 800b110:	3710      	adds	r7, #16
 800b112:	46bd      	mov	sp, r7
 800b114:	bd80      	pop	{r7, pc}
	...

0800b118 <UART_Start_Receive_DMA>:
 800b118:	b580      	push	{r7, lr}
 800b11a:	b098      	sub	sp, #96	; 0x60
 800b11c:	af00      	add	r7, sp, #0
 800b11e:	60f8      	str	r0, [r7, #12]
 800b120:	60b9      	str	r1, [r7, #8]
 800b122:	4613      	mov	r3, r2
 800b124:	80fb      	strh	r3, [r7, #6]
 800b126:	68ba      	ldr	r2, [r7, #8]
 800b128:	68fb      	ldr	r3, [r7, #12]
 800b12a:	629a      	str	r2, [r3, #40]	; 0x28
 800b12c:	68fb      	ldr	r3, [r7, #12]
 800b12e:	88fa      	ldrh	r2, [r7, #6]
 800b130:	859a      	strh	r2, [r3, #44]	; 0x2c
 800b132:	68fb      	ldr	r3, [r7, #12]
 800b134:	2200      	movs	r2, #0
 800b136:	641a      	str	r2, [r3, #64]	; 0x40
 800b138:	68fb      	ldr	r3, [r7, #12]
 800b13a:	2222      	movs	r2, #34	; 0x22
 800b13c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b140:	68fb      	ldr	r3, [r7, #12]
 800b142:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b144:	4a40      	ldr	r2, [pc, #256]	; (800b248 <UART_Start_Receive_DMA+0x130>)
 800b146:	63da      	str	r2, [r3, #60]	; 0x3c
 800b148:	68fb      	ldr	r3, [r7, #12]
 800b14a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b14c:	4a3f      	ldr	r2, [pc, #252]	; (800b24c <UART_Start_Receive_DMA+0x134>)
 800b14e:	641a      	str	r2, [r3, #64]	; 0x40
 800b150:	68fb      	ldr	r3, [r7, #12]
 800b152:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b154:	4a3e      	ldr	r2, [pc, #248]	; (800b250 <UART_Start_Receive_DMA+0x138>)
 800b156:	64da      	str	r2, [r3, #76]	; 0x4c
 800b158:	68fb      	ldr	r3, [r7, #12]
 800b15a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b15c:	2200      	movs	r2, #0
 800b15e:	651a      	str	r2, [r3, #80]	; 0x50
 800b160:	f107 0308 	add.w	r3, r7, #8
 800b164:	65fb      	str	r3, [r7, #92]	; 0x5c
 800b166:	68fb      	ldr	r3, [r7, #12]
 800b168:	6b98      	ldr	r0, [r3, #56]	; 0x38
 800b16a:	68fb      	ldr	r3, [r7, #12]
 800b16c:	681b      	ldr	r3, [r3, #0]
 800b16e:	3304      	adds	r3, #4
 800b170:	4619      	mov	r1, r3
 800b172:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800b174:	681a      	ldr	r2, [r3, #0]
 800b176:	88fb      	ldrh	r3, [r7, #6]
 800b178:	f7f9 fed6 	bl	8004f28 <HAL_DMA_Start_IT>
 800b17c:	2300      	movs	r3, #0
 800b17e:	613b      	str	r3, [r7, #16]
 800b180:	68fb      	ldr	r3, [r7, #12]
 800b182:	681b      	ldr	r3, [r3, #0]
 800b184:	681b      	ldr	r3, [r3, #0]
 800b186:	613b      	str	r3, [r7, #16]
 800b188:	68fb      	ldr	r3, [r7, #12]
 800b18a:	681b      	ldr	r3, [r3, #0]
 800b18c:	685b      	ldr	r3, [r3, #4]
 800b18e:	613b      	str	r3, [r7, #16]
 800b190:	693b      	ldr	r3, [r7, #16]
 800b192:	68fb      	ldr	r3, [r7, #12]
 800b194:	2200      	movs	r2, #0
 800b196:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b19a:	68fb      	ldr	r3, [r7, #12]
 800b19c:	691b      	ldr	r3, [r3, #16]
 800b19e:	2b00      	cmp	r3, #0
 800b1a0:	d019      	beq.n	800b1d6 <UART_Start_Receive_DMA+0xbe>
 800b1a2:	68fb      	ldr	r3, [r7, #12]
 800b1a4:	681b      	ldr	r3, [r3, #0]
 800b1a6:	330c      	adds	r3, #12
 800b1a8:	643b      	str	r3, [r7, #64]	; 0x40
 800b1aa:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800b1ac:	e853 3f00 	ldrex	r3, [r3]
 800b1b0:	63fb      	str	r3, [r7, #60]	; 0x3c
 800b1b2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800b1b4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b1b8:	65bb      	str	r3, [r7, #88]	; 0x58
 800b1ba:	68fb      	ldr	r3, [r7, #12]
 800b1bc:	681b      	ldr	r3, [r3, #0]
 800b1be:	330c      	adds	r3, #12
 800b1c0:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800b1c2:	64fa      	str	r2, [r7, #76]	; 0x4c
 800b1c4:	64bb      	str	r3, [r7, #72]	; 0x48
 800b1c6:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 800b1c8:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800b1ca:	e841 2300 	strex	r3, r2, [r1]
 800b1ce:	647b      	str	r3, [r7, #68]	; 0x44
 800b1d0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800b1d2:	2b00      	cmp	r3, #0
 800b1d4:	d1e5      	bne.n	800b1a2 <UART_Start_Receive_DMA+0x8a>
 800b1d6:	68fb      	ldr	r3, [r7, #12]
 800b1d8:	681b      	ldr	r3, [r3, #0]
 800b1da:	3314      	adds	r3, #20
 800b1dc:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b1de:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b1e0:	e853 3f00 	ldrex	r3, [r3]
 800b1e4:	62bb      	str	r3, [r7, #40]	; 0x28
 800b1e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b1e8:	f043 0301 	orr.w	r3, r3, #1
 800b1ec:	657b      	str	r3, [r7, #84]	; 0x54
 800b1ee:	68fb      	ldr	r3, [r7, #12]
 800b1f0:	681b      	ldr	r3, [r3, #0]
 800b1f2:	3314      	adds	r3, #20
 800b1f4:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800b1f6:	63ba      	str	r2, [r7, #56]	; 0x38
 800b1f8:	637b      	str	r3, [r7, #52]	; 0x34
 800b1fa:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800b1fc:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800b1fe:	e841 2300 	strex	r3, r2, [r1]
 800b202:	633b      	str	r3, [r7, #48]	; 0x30
 800b204:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b206:	2b00      	cmp	r3, #0
 800b208:	d1e5      	bne.n	800b1d6 <UART_Start_Receive_DMA+0xbe>
 800b20a:	68fb      	ldr	r3, [r7, #12]
 800b20c:	681b      	ldr	r3, [r3, #0]
 800b20e:	3314      	adds	r3, #20
 800b210:	61bb      	str	r3, [r7, #24]
 800b212:	69bb      	ldr	r3, [r7, #24]
 800b214:	e853 3f00 	ldrex	r3, [r3]
 800b218:	617b      	str	r3, [r7, #20]
 800b21a:	697b      	ldr	r3, [r7, #20]
 800b21c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b220:	653b      	str	r3, [r7, #80]	; 0x50
 800b222:	68fb      	ldr	r3, [r7, #12]
 800b224:	681b      	ldr	r3, [r3, #0]
 800b226:	3314      	adds	r3, #20
 800b228:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800b22a:	627a      	str	r2, [r7, #36]	; 0x24
 800b22c:	623b      	str	r3, [r7, #32]
 800b22e:	6a39      	ldr	r1, [r7, #32]
 800b230:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800b232:	e841 2300 	strex	r3, r2, [r1]
 800b236:	61fb      	str	r3, [r7, #28]
 800b238:	69fb      	ldr	r3, [r7, #28]
 800b23a:	2b00      	cmp	r3, #0
 800b23c:	d1e5      	bne.n	800b20a <UART_Start_Receive_DMA+0xf2>
 800b23e:	2300      	movs	r3, #0
 800b240:	4618      	mov	r0, r3
 800b242:	3760      	adds	r7, #96	; 0x60
 800b244:	46bd      	mov	sp, r7
 800b246:	bd80      	pop	{r7, pc}
 800b248:	0800af27 	.word	0x0800af27
 800b24c:	0800b04d 	.word	0x0800b04d
 800b250:	0800b083 	.word	0x0800b083

0800b254 <UART_EndTxTransfer>:
 800b254:	b480      	push	{r7}
 800b256:	b089      	sub	sp, #36	; 0x24
 800b258:	af00      	add	r7, sp, #0
 800b25a:	6078      	str	r0, [r7, #4]
 800b25c:	687b      	ldr	r3, [r7, #4]
 800b25e:	681b      	ldr	r3, [r3, #0]
 800b260:	330c      	adds	r3, #12
 800b262:	60fb      	str	r3, [r7, #12]
 800b264:	68fb      	ldr	r3, [r7, #12]
 800b266:	e853 3f00 	ldrex	r3, [r3]
 800b26a:	60bb      	str	r3, [r7, #8]
 800b26c:	68bb      	ldr	r3, [r7, #8]
 800b26e:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800b272:	61fb      	str	r3, [r7, #28]
 800b274:	687b      	ldr	r3, [r7, #4]
 800b276:	681b      	ldr	r3, [r3, #0]
 800b278:	330c      	adds	r3, #12
 800b27a:	69fa      	ldr	r2, [r7, #28]
 800b27c:	61ba      	str	r2, [r7, #24]
 800b27e:	617b      	str	r3, [r7, #20]
 800b280:	6979      	ldr	r1, [r7, #20]
 800b282:	69ba      	ldr	r2, [r7, #24]
 800b284:	e841 2300 	strex	r3, r2, [r1]
 800b288:	613b      	str	r3, [r7, #16]
 800b28a:	693b      	ldr	r3, [r7, #16]
 800b28c:	2b00      	cmp	r3, #0
 800b28e:	d1e5      	bne.n	800b25c <UART_EndTxTransfer+0x8>
 800b290:	687b      	ldr	r3, [r7, #4]
 800b292:	2220      	movs	r2, #32
 800b294:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b298:	bf00      	nop
 800b29a:	3724      	adds	r7, #36	; 0x24
 800b29c:	46bd      	mov	sp, r7
 800b29e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2a2:	4770      	bx	lr

0800b2a4 <UART_EndRxTransfer>:
 800b2a4:	b480      	push	{r7}
 800b2a6:	b095      	sub	sp, #84	; 0x54
 800b2a8:	af00      	add	r7, sp, #0
 800b2aa:	6078      	str	r0, [r7, #4]
 800b2ac:	687b      	ldr	r3, [r7, #4]
 800b2ae:	681b      	ldr	r3, [r3, #0]
 800b2b0:	330c      	adds	r3, #12
 800b2b2:	637b      	str	r3, [r7, #52]	; 0x34
 800b2b4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800b2b6:	e853 3f00 	ldrex	r3, [r3]
 800b2ba:	633b      	str	r3, [r7, #48]	; 0x30
 800b2bc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b2be:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800b2c2:	64fb      	str	r3, [r7, #76]	; 0x4c
 800b2c4:	687b      	ldr	r3, [r7, #4]
 800b2c6:	681b      	ldr	r3, [r3, #0]
 800b2c8:	330c      	adds	r3, #12
 800b2ca:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800b2cc:	643a      	str	r2, [r7, #64]	; 0x40
 800b2ce:	63fb      	str	r3, [r7, #60]	; 0x3c
 800b2d0:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800b2d2:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800b2d4:	e841 2300 	strex	r3, r2, [r1]
 800b2d8:	63bb      	str	r3, [r7, #56]	; 0x38
 800b2da:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800b2dc:	2b00      	cmp	r3, #0
 800b2de:	d1e5      	bne.n	800b2ac <UART_EndRxTransfer+0x8>
 800b2e0:	687b      	ldr	r3, [r7, #4]
 800b2e2:	681b      	ldr	r3, [r3, #0]
 800b2e4:	3314      	adds	r3, #20
 800b2e6:	623b      	str	r3, [r7, #32]
 800b2e8:	6a3b      	ldr	r3, [r7, #32]
 800b2ea:	e853 3f00 	ldrex	r3, [r3]
 800b2ee:	61fb      	str	r3, [r7, #28]
 800b2f0:	69fb      	ldr	r3, [r7, #28]
 800b2f2:	f023 0301 	bic.w	r3, r3, #1
 800b2f6:	64bb      	str	r3, [r7, #72]	; 0x48
 800b2f8:	687b      	ldr	r3, [r7, #4]
 800b2fa:	681b      	ldr	r3, [r3, #0]
 800b2fc:	3314      	adds	r3, #20
 800b2fe:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800b300:	62fa      	str	r2, [r7, #44]	; 0x2c
 800b302:	62bb      	str	r3, [r7, #40]	; 0x28
 800b304:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800b306:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800b308:	e841 2300 	strex	r3, r2, [r1]
 800b30c:	627b      	str	r3, [r7, #36]	; 0x24
 800b30e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b310:	2b00      	cmp	r3, #0
 800b312:	d1e5      	bne.n	800b2e0 <UART_EndRxTransfer+0x3c>
 800b314:	687b      	ldr	r3, [r7, #4]
 800b316:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b318:	2b01      	cmp	r3, #1
 800b31a:	d119      	bne.n	800b350 <UART_EndRxTransfer+0xac>
 800b31c:	687b      	ldr	r3, [r7, #4]
 800b31e:	681b      	ldr	r3, [r3, #0]
 800b320:	330c      	adds	r3, #12
 800b322:	60fb      	str	r3, [r7, #12]
 800b324:	68fb      	ldr	r3, [r7, #12]
 800b326:	e853 3f00 	ldrex	r3, [r3]
 800b32a:	60bb      	str	r3, [r7, #8]
 800b32c:	68bb      	ldr	r3, [r7, #8]
 800b32e:	f023 0310 	bic.w	r3, r3, #16
 800b332:	647b      	str	r3, [r7, #68]	; 0x44
 800b334:	687b      	ldr	r3, [r7, #4]
 800b336:	681b      	ldr	r3, [r3, #0]
 800b338:	330c      	adds	r3, #12
 800b33a:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800b33c:	61ba      	str	r2, [r7, #24]
 800b33e:	617b      	str	r3, [r7, #20]
 800b340:	6979      	ldr	r1, [r7, #20]
 800b342:	69ba      	ldr	r2, [r7, #24]
 800b344:	e841 2300 	strex	r3, r2, [r1]
 800b348:	613b      	str	r3, [r7, #16]
 800b34a:	693b      	ldr	r3, [r7, #16]
 800b34c:	2b00      	cmp	r3, #0
 800b34e:	d1e5      	bne.n	800b31c <UART_EndRxTransfer+0x78>
 800b350:	687b      	ldr	r3, [r7, #4]
 800b352:	2220      	movs	r2, #32
 800b354:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b358:	687b      	ldr	r3, [r7, #4]
 800b35a:	2200      	movs	r2, #0
 800b35c:	631a      	str	r2, [r3, #48]	; 0x30
 800b35e:	bf00      	nop
 800b360:	3754      	adds	r7, #84	; 0x54
 800b362:	46bd      	mov	sp, r7
 800b364:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b368:	4770      	bx	lr

0800b36a <UART_DMAAbortOnError>:
 800b36a:	b580      	push	{r7, lr}
 800b36c:	b084      	sub	sp, #16
 800b36e:	af00      	add	r7, sp, #0
 800b370:	6078      	str	r0, [r7, #4]
 800b372:	687b      	ldr	r3, [r7, #4]
 800b374:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b376:	60fb      	str	r3, [r7, #12]
 800b378:	68fb      	ldr	r3, [r7, #12]
 800b37a:	2200      	movs	r2, #0
 800b37c:	85da      	strh	r2, [r3, #46]	; 0x2e
 800b37e:	68fb      	ldr	r3, [r7, #12]
 800b380:	2200      	movs	r2, #0
 800b382:	84da      	strh	r2, [r3, #38]	; 0x26
 800b384:	68f8      	ldr	r0, [r7, #12]
 800b386:	f7ff fd5d 	bl	800ae44 <HAL_UART_ErrorCallback>
 800b38a:	bf00      	nop
 800b38c:	3710      	adds	r7, #16
 800b38e:	46bd      	mov	sp, r7
 800b390:	bd80      	pop	{r7, pc}

0800b392 <UART_Transmit_IT>:
 800b392:	b480      	push	{r7}
 800b394:	b085      	sub	sp, #20
 800b396:	af00      	add	r7, sp, #0
 800b398:	6078      	str	r0, [r7, #4]
 800b39a:	687b      	ldr	r3, [r7, #4]
 800b39c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800b3a0:	b2db      	uxtb	r3, r3
 800b3a2:	2b21      	cmp	r3, #33	; 0x21
 800b3a4:	d13e      	bne.n	800b424 <UART_Transmit_IT+0x92>
 800b3a6:	687b      	ldr	r3, [r7, #4]
 800b3a8:	689b      	ldr	r3, [r3, #8]
 800b3aa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b3ae:	d114      	bne.n	800b3da <UART_Transmit_IT+0x48>
 800b3b0:	687b      	ldr	r3, [r7, #4]
 800b3b2:	691b      	ldr	r3, [r3, #16]
 800b3b4:	2b00      	cmp	r3, #0
 800b3b6:	d110      	bne.n	800b3da <UART_Transmit_IT+0x48>
 800b3b8:	687b      	ldr	r3, [r7, #4]
 800b3ba:	6a1b      	ldr	r3, [r3, #32]
 800b3bc:	60fb      	str	r3, [r7, #12]
 800b3be:	68fb      	ldr	r3, [r7, #12]
 800b3c0:	881b      	ldrh	r3, [r3, #0]
 800b3c2:	461a      	mov	r2, r3
 800b3c4:	687b      	ldr	r3, [r7, #4]
 800b3c6:	681b      	ldr	r3, [r3, #0]
 800b3c8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800b3cc:	605a      	str	r2, [r3, #4]
 800b3ce:	687b      	ldr	r3, [r7, #4]
 800b3d0:	6a1b      	ldr	r3, [r3, #32]
 800b3d2:	1c9a      	adds	r2, r3, #2
 800b3d4:	687b      	ldr	r3, [r7, #4]
 800b3d6:	621a      	str	r2, [r3, #32]
 800b3d8:	e008      	b.n	800b3ec <UART_Transmit_IT+0x5a>
 800b3da:	687b      	ldr	r3, [r7, #4]
 800b3dc:	6a1b      	ldr	r3, [r3, #32]
 800b3de:	1c59      	adds	r1, r3, #1
 800b3e0:	687a      	ldr	r2, [r7, #4]
 800b3e2:	6211      	str	r1, [r2, #32]
 800b3e4:	781a      	ldrb	r2, [r3, #0]
 800b3e6:	687b      	ldr	r3, [r7, #4]
 800b3e8:	681b      	ldr	r3, [r3, #0]
 800b3ea:	605a      	str	r2, [r3, #4]
 800b3ec:	687b      	ldr	r3, [r7, #4]
 800b3ee:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 800b3f0:	b29b      	uxth	r3, r3
 800b3f2:	3b01      	subs	r3, #1
 800b3f4:	b29b      	uxth	r3, r3
 800b3f6:	687a      	ldr	r2, [r7, #4]
 800b3f8:	4619      	mov	r1, r3
 800b3fa:	84d1      	strh	r1, [r2, #38]	; 0x26
 800b3fc:	2b00      	cmp	r3, #0
 800b3fe:	d10f      	bne.n	800b420 <UART_Transmit_IT+0x8e>
 800b400:	687b      	ldr	r3, [r7, #4]
 800b402:	681b      	ldr	r3, [r3, #0]
 800b404:	68da      	ldr	r2, [r3, #12]
 800b406:	687b      	ldr	r3, [r7, #4]
 800b408:	681b      	ldr	r3, [r3, #0]
 800b40a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800b40e:	60da      	str	r2, [r3, #12]
 800b410:	687b      	ldr	r3, [r7, #4]
 800b412:	681b      	ldr	r3, [r3, #0]
 800b414:	68da      	ldr	r2, [r3, #12]
 800b416:	687b      	ldr	r3, [r7, #4]
 800b418:	681b      	ldr	r3, [r3, #0]
 800b41a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800b41e:	60da      	str	r2, [r3, #12]
 800b420:	2300      	movs	r3, #0
 800b422:	e000      	b.n	800b426 <UART_Transmit_IT+0x94>
 800b424:	2302      	movs	r3, #2
 800b426:	4618      	mov	r0, r3
 800b428:	3714      	adds	r7, #20
 800b42a:	46bd      	mov	sp, r7
 800b42c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b430:	4770      	bx	lr

0800b432 <UART_EndTransmit_IT>:
 800b432:	b580      	push	{r7, lr}
 800b434:	b082      	sub	sp, #8
 800b436:	af00      	add	r7, sp, #0
 800b438:	6078      	str	r0, [r7, #4]
 800b43a:	687b      	ldr	r3, [r7, #4]
 800b43c:	681b      	ldr	r3, [r3, #0]
 800b43e:	68da      	ldr	r2, [r3, #12]
 800b440:	687b      	ldr	r3, [r7, #4]
 800b442:	681b      	ldr	r3, [r3, #0]
 800b444:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b448:	60da      	str	r2, [r3, #12]
 800b44a:	687b      	ldr	r3, [r7, #4]
 800b44c:	2220      	movs	r2, #32
 800b44e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b452:	6878      	ldr	r0, [r7, #4]
 800b454:	f7ff fcd8 	bl	800ae08 <HAL_UART_TxCpltCallback>
 800b458:	2300      	movs	r3, #0
 800b45a:	4618      	mov	r0, r3
 800b45c:	3708      	adds	r7, #8
 800b45e:	46bd      	mov	sp, r7
 800b460:	bd80      	pop	{r7, pc}

0800b462 <UART_Receive_IT>:
 800b462:	b580      	push	{r7, lr}
 800b464:	b08c      	sub	sp, #48	; 0x30
 800b466:	af00      	add	r7, sp, #0
 800b468:	6078      	str	r0, [r7, #4]
 800b46a:	687b      	ldr	r3, [r7, #4]
 800b46c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800b470:	b2db      	uxtb	r3, r3
 800b472:	2b22      	cmp	r3, #34	; 0x22
 800b474:	f040 80ab 	bne.w	800b5ce <UART_Receive_IT+0x16c>
 800b478:	687b      	ldr	r3, [r7, #4]
 800b47a:	689b      	ldr	r3, [r3, #8]
 800b47c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b480:	d117      	bne.n	800b4b2 <UART_Receive_IT+0x50>
 800b482:	687b      	ldr	r3, [r7, #4]
 800b484:	691b      	ldr	r3, [r3, #16]
 800b486:	2b00      	cmp	r3, #0
 800b488:	d113      	bne.n	800b4b2 <UART_Receive_IT+0x50>
 800b48a:	2300      	movs	r3, #0
 800b48c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b48e:	687b      	ldr	r3, [r7, #4]
 800b490:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b492:	62bb      	str	r3, [r7, #40]	; 0x28
 800b494:	687b      	ldr	r3, [r7, #4]
 800b496:	681b      	ldr	r3, [r3, #0]
 800b498:	685b      	ldr	r3, [r3, #4]
 800b49a:	b29b      	uxth	r3, r3
 800b49c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800b4a0:	b29a      	uxth	r2, r3
 800b4a2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b4a4:	801a      	strh	r2, [r3, #0]
 800b4a6:	687b      	ldr	r3, [r7, #4]
 800b4a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b4aa:	1c9a      	adds	r2, r3, #2
 800b4ac:	687b      	ldr	r3, [r7, #4]
 800b4ae:	629a      	str	r2, [r3, #40]	; 0x28
 800b4b0:	e026      	b.n	800b500 <UART_Receive_IT+0x9e>
 800b4b2:	687b      	ldr	r3, [r7, #4]
 800b4b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b4b6:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b4b8:	2300      	movs	r3, #0
 800b4ba:	62bb      	str	r3, [r7, #40]	; 0x28
 800b4bc:	687b      	ldr	r3, [r7, #4]
 800b4be:	689b      	ldr	r3, [r3, #8]
 800b4c0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b4c4:	d007      	beq.n	800b4d6 <UART_Receive_IT+0x74>
 800b4c6:	687b      	ldr	r3, [r7, #4]
 800b4c8:	689b      	ldr	r3, [r3, #8]
 800b4ca:	2b00      	cmp	r3, #0
 800b4cc:	d10a      	bne.n	800b4e4 <UART_Receive_IT+0x82>
 800b4ce:	687b      	ldr	r3, [r7, #4]
 800b4d0:	691b      	ldr	r3, [r3, #16]
 800b4d2:	2b00      	cmp	r3, #0
 800b4d4:	d106      	bne.n	800b4e4 <UART_Receive_IT+0x82>
 800b4d6:	687b      	ldr	r3, [r7, #4]
 800b4d8:	681b      	ldr	r3, [r3, #0]
 800b4da:	685b      	ldr	r3, [r3, #4]
 800b4dc:	b2da      	uxtb	r2, r3
 800b4de:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b4e0:	701a      	strb	r2, [r3, #0]
 800b4e2:	e008      	b.n	800b4f6 <UART_Receive_IT+0x94>
 800b4e4:	687b      	ldr	r3, [r7, #4]
 800b4e6:	681b      	ldr	r3, [r3, #0]
 800b4e8:	685b      	ldr	r3, [r3, #4]
 800b4ea:	b2db      	uxtb	r3, r3
 800b4ec:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800b4f0:	b2da      	uxtb	r2, r3
 800b4f2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b4f4:	701a      	strb	r2, [r3, #0]
 800b4f6:	687b      	ldr	r3, [r7, #4]
 800b4f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b4fa:	1c5a      	adds	r2, r3, #1
 800b4fc:	687b      	ldr	r3, [r7, #4]
 800b4fe:	629a      	str	r2, [r3, #40]	; 0x28
 800b500:	687b      	ldr	r3, [r7, #4]
 800b502:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800b504:	b29b      	uxth	r3, r3
 800b506:	3b01      	subs	r3, #1
 800b508:	b29b      	uxth	r3, r3
 800b50a:	687a      	ldr	r2, [r7, #4]
 800b50c:	4619      	mov	r1, r3
 800b50e:	85d1      	strh	r1, [r2, #46]	; 0x2e
 800b510:	2b00      	cmp	r3, #0
 800b512:	d15a      	bne.n	800b5ca <UART_Receive_IT+0x168>
 800b514:	687b      	ldr	r3, [r7, #4]
 800b516:	681b      	ldr	r3, [r3, #0]
 800b518:	68da      	ldr	r2, [r3, #12]
 800b51a:	687b      	ldr	r3, [r7, #4]
 800b51c:	681b      	ldr	r3, [r3, #0]
 800b51e:	f022 0220 	bic.w	r2, r2, #32
 800b522:	60da      	str	r2, [r3, #12]
 800b524:	687b      	ldr	r3, [r7, #4]
 800b526:	681b      	ldr	r3, [r3, #0]
 800b528:	68da      	ldr	r2, [r3, #12]
 800b52a:	687b      	ldr	r3, [r7, #4]
 800b52c:	681b      	ldr	r3, [r3, #0]
 800b52e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800b532:	60da      	str	r2, [r3, #12]
 800b534:	687b      	ldr	r3, [r7, #4]
 800b536:	681b      	ldr	r3, [r3, #0]
 800b538:	695a      	ldr	r2, [r3, #20]
 800b53a:	687b      	ldr	r3, [r7, #4]
 800b53c:	681b      	ldr	r3, [r3, #0]
 800b53e:	f022 0201 	bic.w	r2, r2, #1
 800b542:	615a      	str	r2, [r3, #20]
 800b544:	687b      	ldr	r3, [r7, #4]
 800b546:	2220      	movs	r2, #32
 800b548:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800b54c:	687b      	ldr	r3, [r7, #4]
 800b54e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b550:	2b01      	cmp	r3, #1
 800b552:	d135      	bne.n	800b5c0 <UART_Receive_IT+0x15e>
 800b554:	687b      	ldr	r3, [r7, #4]
 800b556:	2200      	movs	r2, #0
 800b558:	631a      	str	r2, [r3, #48]	; 0x30
 800b55a:	687b      	ldr	r3, [r7, #4]
 800b55c:	681b      	ldr	r3, [r3, #0]
 800b55e:	330c      	adds	r3, #12
 800b560:	617b      	str	r3, [r7, #20]
 800b562:	697b      	ldr	r3, [r7, #20]
 800b564:	e853 3f00 	ldrex	r3, [r3]
 800b568:	613b      	str	r3, [r7, #16]
 800b56a:	693b      	ldr	r3, [r7, #16]
 800b56c:	f023 0310 	bic.w	r3, r3, #16
 800b570:	627b      	str	r3, [r7, #36]	; 0x24
 800b572:	687b      	ldr	r3, [r7, #4]
 800b574:	681b      	ldr	r3, [r3, #0]
 800b576:	330c      	adds	r3, #12
 800b578:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800b57a:	623a      	str	r2, [r7, #32]
 800b57c:	61fb      	str	r3, [r7, #28]
 800b57e:	69f9      	ldr	r1, [r7, #28]
 800b580:	6a3a      	ldr	r2, [r7, #32]
 800b582:	e841 2300 	strex	r3, r2, [r1]
 800b586:	61bb      	str	r3, [r7, #24]
 800b588:	69bb      	ldr	r3, [r7, #24]
 800b58a:	2b00      	cmp	r3, #0
 800b58c:	d1e5      	bne.n	800b55a <UART_Receive_IT+0xf8>
 800b58e:	687b      	ldr	r3, [r7, #4]
 800b590:	681b      	ldr	r3, [r3, #0]
 800b592:	681b      	ldr	r3, [r3, #0]
 800b594:	f003 0310 	and.w	r3, r3, #16
 800b598:	2b10      	cmp	r3, #16
 800b59a:	d10a      	bne.n	800b5b2 <UART_Receive_IT+0x150>
 800b59c:	2300      	movs	r3, #0
 800b59e:	60fb      	str	r3, [r7, #12]
 800b5a0:	687b      	ldr	r3, [r7, #4]
 800b5a2:	681b      	ldr	r3, [r3, #0]
 800b5a4:	681b      	ldr	r3, [r3, #0]
 800b5a6:	60fb      	str	r3, [r7, #12]
 800b5a8:	687b      	ldr	r3, [r7, #4]
 800b5aa:	681b      	ldr	r3, [r3, #0]
 800b5ac:	685b      	ldr	r3, [r3, #4]
 800b5ae:	60fb      	str	r3, [r7, #12]
 800b5b0:	68fb      	ldr	r3, [r7, #12]
 800b5b2:	687b      	ldr	r3, [r7, #4]
 800b5b4:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800b5b6:	4619      	mov	r1, r3
 800b5b8:	6878      	ldr	r0, [r7, #4]
 800b5ba:	f7ff fc4d 	bl	800ae58 <HAL_UARTEx_RxEventCallback>
 800b5be:	e002      	b.n	800b5c6 <UART_Receive_IT+0x164>
 800b5c0:	6878      	ldr	r0, [r7, #4]
 800b5c2:	f7f8 ff21 	bl	8004408 <HAL_UART_RxCpltCallback>
 800b5c6:	2300      	movs	r3, #0
 800b5c8:	e002      	b.n	800b5d0 <UART_Receive_IT+0x16e>
 800b5ca:	2300      	movs	r3, #0
 800b5cc:	e000      	b.n	800b5d0 <UART_Receive_IT+0x16e>
 800b5ce:	2302      	movs	r3, #2
 800b5d0:	4618      	mov	r0, r3
 800b5d2:	3730      	adds	r7, #48	; 0x30
 800b5d4:	46bd      	mov	sp, r7
 800b5d6:	bd80      	pop	{r7, pc}

0800b5d8 <UART_SetConfig>:
 800b5d8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800b5dc:	b0c0      	sub	sp, #256	; 0x100
 800b5de:	af00      	add	r7, sp, #0
 800b5e0:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 800b5e4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b5e8:	681b      	ldr	r3, [r3, #0]
 800b5ea:	691b      	ldr	r3, [r3, #16]
 800b5ec:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 800b5f0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b5f4:	68d9      	ldr	r1, [r3, #12]
 800b5f6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b5fa:	681a      	ldr	r2, [r3, #0]
 800b5fc:	ea40 0301 	orr.w	r3, r0, r1
 800b600:	6113      	str	r3, [r2, #16]
 800b602:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b606:	689a      	ldr	r2, [r3, #8]
 800b608:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b60c:	691b      	ldr	r3, [r3, #16]
 800b60e:	431a      	orrs	r2, r3
 800b610:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b614:	695b      	ldr	r3, [r3, #20]
 800b616:	431a      	orrs	r2, r3
 800b618:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b61c:	69db      	ldr	r3, [r3, #28]
 800b61e:	4313      	orrs	r3, r2
 800b620:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800b624:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b628:	681b      	ldr	r3, [r3, #0]
 800b62a:	68db      	ldr	r3, [r3, #12]
 800b62c:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 800b630:	f021 010c 	bic.w	r1, r1, #12
 800b634:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b638:	681a      	ldr	r2, [r3, #0]
 800b63a:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 800b63e:	430b      	orrs	r3, r1
 800b640:	60d3      	str	r3, [r2, #12]
 800b642:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b646:	681b      	ldr	r3, [r3, #0]
 800b648:	695b      	ldr	r3, [r3, #20]
 800b64a:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 800b64e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b652:	6999      	ldr	r1, [r3, #24]
 800b654:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b658:	681a      	ldr	r2, [r3, #0]
 800b65a:	ea40 0301 	orr.w	r3, r0, r1
 800b65e:	6153      	str	r3, [r2, #20]
 800b660:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b664:	681a      	ldr	r2, [r3, #0]
 800b666:	4b8f      	ldr	r3, [pc, #572]	; (800b8a4 <UART_SetConfig+0x2cc>)
 800b668:	429a      	cmp	r2, r3
 800b66a:	d005      	beq.n	800b678 <UART_SetConfig+0xa0>
 800b66c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b670:	681a      	ldr	r2, [r3, #0]
 800b672:	4b8d      	ldr	r3, [pc, #564]	; (800b8a8 <UART_SetConfig+0x2d0>)
 800b674:	429a      	cmp	r2, r3
 800b676:	d104      	bne.n	800b682 <UART_SetConfig+0xaa>
 800b678:	f7fd fa7a 	bl	8008b70 <HAL_RCC_GetPCLK2Freq>
 800b67c:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800b680:	e003      	b.n	800b68a <UART_SetConfig+0xb2>
 800b682:	f7fd fa61 	bl	8008b48 <HAL_RCC_GetPCLK1Freq>
 800b686:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800b68a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b68e:	69db      	ldr	r3, [r3, #28]
 800b690:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800b694:	f040 810c 	bne.w	800b8b0 <UART_SetConfig+0x2d8>
 800b698:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b69c:	2200      	movs	r2, #0
 800b69e:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 800b6a2:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 800b6a6:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 800b6aa:	4622      	mov	r2, r4
 800b6ac:	462b      	mov	r3, r5
 800b6ae:	1891      	adds	r1, r2, r2
 800b6b0:	65b9      	str	r1, [r7, #88]	; 0x58
 800b6b2:	415b      	adcs	r3, r3
 800b6b4:	65fb      	str	r3, [r7, #92]	; 0x5c
 800b6b6:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800b6ba:	4621      	mov	r1, r4
 800b6bc:	eb12 0801 	adds.w	r8, r2, r1
 800b6c0:	4629      	mov	r1, r5
 800b6c2:	eb43 0901 	adc.w	r9, r3, r1
 800b6c6:	f04f 0200 	mov.w	r2, #0
 800b6ca:	f04f 0300 	mov.w	r3, #0
 800b6ce:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800b6d2:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800b6d6:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800b6da:	4690      	mov	r8, r2
 800b6dc:	4699      	mov	r9, r3
 800b6de:	4623      	mov	r3, r4
 800b6e0:	eb18 0303 	adds.w	r3, r8, r3
 800b6e4:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800b6e8:	462b      	mov	r3, r5
 800b6ea:	eb49 0303 	adc.w	r3, r9, r3
 800b6ee:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800b6f2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b6f6:	685b      	ldr	r3, [r3, #4]
 800b6f8:	2200      	movs	r2, #0
 800b6fa:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800b6fe:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 800b702:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 800b706:	460b      	mov	r3, r1
 800b708:	18db      	adds	r3, r3, r3
 800b70a:	653b      	str	r3, [r7, #80]	; 0x50
 800b70c:	4613      	mov	r3, r2
 800b70e:	eb42 0303 	adc.w	r3, r2, r3
 800b712:	657b      	str	r3, [r7, #84]	; 0x54
 800b714:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 800b718:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 800b71c:	f7f5 fa38 	bl	8000b90 <__aeabi_uldivmod>
 800b720:	4602      	mov	r2, r0
 800b722:	460b      	mov	r3, r1
 800b724:	4b61      	ldr	r3, [pc, #388]	; (800b8ac <UART_SetConfig+0x2d4>)
 800b726:	fba3 2302 	umull	r2, r3, r3, r2
 800b72a:	095b      	lsrs	r3, r3, #5
 800b72c:	011c      	lsls	r4, r3, #4
 800b72e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b732:	2200      	movs	r2, #0
 800b734:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800b738:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 800b73c:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 800b740:	4642      	mov	r2, r8
 800b742:	464b      	mov	r3, r9
 800b744:	1891      	adds	r1, r2, r2
 800b746:	64b9      	str	r1, [r7, #72]	; 0x48
 800b748:	415b      	adcs	r3, r3
 800b74a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800b74c:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800b750:	4641      	mov	r1, r8
 800b752:	eb12 0a01 	adds.w	sl, r2, r1
 800b756:	4649      	mov	r1, r9
 800b758:	eb43 0b01 	adc.w	fp, r3, r1
 800b75c:	f04f 0200 	mov.w	r2, #0
 800b760:	f04f 0300 	mov.w	r3, #0
 800b764:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800b768:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800b76c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800b770:	4692      	mov	sl, r2
 800b772:	469b      	mov	fp, r3
 800b774:	4643      	mov	r3, r8
 800b776:	eb1a 0303 	adds.w	r3, sl, r3
 800b77a:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800b77e:	464b      	mov	r3, r9
 800b780:	eb4b 0303 	adc.w	r3, fp, r3
 800b784:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 800b788:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b78c:	685b      	ldr	r3, [r3, #4]
 800b78e:	2200      	movs	r2, #0
 800b790:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800b794:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 800b798:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800b79c:	460b      	mov	r3, r1
 800b79e:	18db      	adds	r3, r3, r3
 800b7a0:	643b      	str	r3, [r7, #64]	; 0x40
 800b7a2:	4613      	mov	r3, r2
 800b7a4:	eb42 0303 	adc.w	r3, r2, r3
 800b7a8:	647b      	str	r3, [r7, #68]	; 0x44
 800b7aa:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800b7ae:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800b7b2:	f7f5 f9ed 	bl	8000b90 <__aeabi_uldivmod>
 800b7b6:	4602      	mov	r2, r0
 800b7b8:	460b      	mov	r3, r1
 800b7ba:	4611      	mov	r1, r2
 800b7bc:	4b3b      	ldr	r3, [pc, #236]	; (800b8ac <UART_SetConfig+0x2d4>)
 800b7be:	fba3 2301 	umull	r2, r3, r3, r1
 800b7c2:	095b      	lsrs	r3, r3, #5
 800b7c4:	2264      	movs	r2, #100	; 0x64
 800b7c6:	fb02 f303 	mul.w	r3, r2, r3
 800b7ca:	1acb      	subs	r3, r1, r3
 800b7cc:	00db      	lsls	r3, r3, #3
 800b7ce:	f103 0232 	add.w	r2, r3, #50	; 0x32
 800b7d2:	4b36      	ldr	r3, [pc, #216]	; (800b8ac <UART_SetConfig+0x2d4>)
 800b7d4:	fba3 2302 	umull	r2, r3, r3, r2
 800b7d8:	095b      	lsrs	r3, r3, #5
 800b7da:	005b      	lsls	r3, r3, #1
 800b7dc:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800b7e0:	441c      	add	r4, r3
 800b7e2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b7e6:	2200      	movs	r2, #0
 800b7e8:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800b7ec:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 800b7f0:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 800b7f4:	4642      	mov	r2, r8
 800b7f6:	464b      	mov	r3, r9
 800b7f8:	1891      	adds	r1, r2, r2
 800b7fa:	63b9      	str	r1, [r7, #56]	; 0x38
 800b7fc:	415b      	adcs	r3, r3
 800b7fe:	63fb      	str	r3, [r7, #60]	; 0x3c
 800b800:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800b804:	4641      	mov	r1, r8
 800b806:	1851      	adds	r1, r2, r1
 800b808:	6339      	str	r1, [r7, #48]	; 0x30
 800b80a:	4649      	mov	r1, r9
 800b80c:	414b      	adcs	r3, r1
 800b80e:	637b      	str	r3, [r7, #52]	; 0x34
 800b810:	f04f 0200 	mov.w	r2, #0
 800b814:	f04f 0300 	mov.w	r3, #0
 800b818:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 800b81c:	4659      	mov	r1, fp
 800b81e:	00cb      	lsls	r3, r1, #3
 800b820:	4651      	mov	r1, sl
 800b822:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800b826:	4651      	mov	r1, sl
 800b828:	00ca      	lsls	r2, r1, #3
 800b82a:	4610      	mov	r0, r2
 800b82c:	4619      	mov	r1, r3
 800b82e:	4603      	mov	r3, r0
 800b830:	4642      	mov	r2, r8
 800b832:	189b      	adds	r3, r3, r2
 800b834:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800b838:	464b      	mov	r3, r9
 800b83a:	460a      	mov	r2, r1
 800b83c:	eb42 0303 	adc.w	r3, r2, r3
 800b840:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800b844:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b848:	685b      	ldr	r3, [r3, #4]
 800b84a:	2200      	movs	r2, #0
 800b84c:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800b850:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800b854:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 800b858:	460b      	mov	r3, r1
 800b85a:	18db      	adds	r3, r3, r3
 800b85c:	62bb      	str	r3, [r7, #40]	; 0x28
 800b85e:	4613      	mov	r3, r2
 800b860:	eb42 0303 	adc.w	r3, r2, r3
 800b864:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b866:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800b86a:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800b86e:	f7f5 f98f 	bl	8000b90 <__aeabi_uldivmod>
 800b872:	4602      	mov	r2, r0
 800b874:	460b      	mov	r3, r1
 800b876:	4b0d      	ldr	r3, [pc, #52]	; (800b8ac <UART_SetConfig+0x2d4>)
 800b878:	fba3 1302 	umull	r1, r3, r3, r2
 800b87c:	095b      	lsrs	r3, r3, #5
 800b87e:	2164      	movs	r1, #100	; 0x64
 800b880:	fb01 f303 	mul.w	r3, r1, r3
 800b884:	1ad3      	subs	r3, r2, r3
 800b886:	00db      	lsls	r3, r3, #3
 800b888:	3332      	adds	r3, #50	; 0x32
 800b88a:	4a08      	ldr	r2, [pc, #32]	; (800b8ac <UART_SetConfig+0x2d4>)
 800b88c:	fba2 2303 	umull	r2, r3, r2, r3
 800b890:	095b      	lsrs	r3, r3, #5
 800b892:	f003 0207 	and.w	r2, r3, #7
 800b896:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b89a:	681b      	ldr	r3, [r3, #0]
 800b89c:	4422      	add	r2, r4
 800b89e:	609a      	str	r2, [r3, #8]
 800b8a0:	e105      	b.n	800baae <UART_SetConfig+0x4d6>
 800b8a2:	bf00      	nop
 800b8a4:	40011000 	.word	0x40011000
 800b8a8:	40011400 	.word	0x40011400
 800b8ac:	51eb851f 	.word	0x51eb851f
 800b8b0:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b8b4:	2200      	movs	r2, #0
 800b8b6:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800b8ba:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800b8be:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 800b8c2:	4642      	mov	r2, r8
 800b8c4:	464b      	mov	r3, r9
 800b8c6:	1891      	adds	r1, r2, r2
 800b8c8:	6239      	str	r1, [r7, #32]
 800b8ca:	415b      	adcs	r3, r3
 800b8cc:	627b      	str	r3, [r7, #36]	; 0x24
 800b8ce:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800b8d2:	4641      	mov	r1, r8
 800b8d4:	1854      	adds	r4, r2, r1
 800b8d6:	4649      	mov	r1, r9
 800b8d8:	eb43 0501 	adc.w	r5, r3, r1
 800b8dc:	f04f 0200 	mov.w	r2, #0
 800b8e0:	f04f 0300 	mov.w	r3, #0
 800b8e4:	00eb      	lsls	r3, r5, #3
 800b8e6:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800b8ea:	00e2      	lsls	r2, r4, #3
 800b8ec:	4614      	mov	r4, r2
 800b8ee:	461d      	mov	r5, r3
 800b8f0:	4643      	mov	r3, r8
 800b8f2:	18e3      	adds	r3, r4, r3
 800b8f4:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800b8f8:	464b      	mov	r3, r9
 800b8fa:	eb45 0303 	adc.w	r3, r5, r3
 800b8fe:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800b902:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b906:	685b      	ldr	r3, [r3, #4]
 800b908:	2200      	movs	r2, #0
 800b90a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800b90e:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800b912:	f04f 0200 	mov.w	r2, #0
 800b916:	f04f 0300 	mov.w	r3, #0
 800b91a:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800b91e:	4629      	mov	r1, r5
 800b920:	008b      	lsls	r3, r1, #2
 800b922:	4621      	mov	r1, r4
 800b924:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800b928:	4621      	mov	r1, r4
 800b92a:	008a      	lsls	r2, r1, #2
 800b92c:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 800b930:	f7f5 f92e 	bl	8000b90 <__aeabi_uldivmod>
 800b934:	4602      	mov	r2, r0
 800b936:	460b      	mov	r3, r1
 800b938:	4b60      	ldr	r3, [pc, #384]	; (800babc <UART_SetConfig+0x4e4>)
 800b93a:	fba3 2302 	umull	r2, r3, r3, r2
 800b93e:	095b      	lsrs	r3, r3, #5
 800b940:	011c      	lsls	r4, r3, #4
 800b942:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b946:	2200      	movs	r2, #0
 800b948:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800b94c:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800b950:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 800b954:	4642      	mov	r2, r8
 800b956:	464b      	mov	r3, r9
 800b958:	1891      	adds	r1, r2, r2
 800b95a:	61b9      	str	r1, [r7, #24]
 800b95c:	415b      	adcs	r3, r3
 800b95e:	61fb      	str	r3, [r7, #28]
 800b960:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800b964:	4641      	mov	r1, r8
 800b966:	1851      	adds	r1, r2, r1
 800b968:	6139      	str	r1, [r7, #16]
 800b96a:	4649      	mov	r1, r9
 800b96c:	414b      	adcs	r3, r1
 800b96e:	617b      	str	r3, [r7, #20]
 800b970:	f04f 0200 	mov.w	r2, #0
 800b974:	f04f 0300 	mov.w	r3, #0
 800b978:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800b97c:	4659      	mov	r1, fp
 800b97e:	00cb      	lsls	r3, r1, #3
 800b980:	4651      	mov	r1, sl
 800b982:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800b986:	4651      	mov	r1, sl
 800b988:	00ca      	lsls	r2, r1, #3
 800b98a:	4610      	mov	r0, r2
 800b98c:	4619      	mov	r1, r3
 800b98e:	4603      	mov	r3, r0
 800b990:	4642      	mov	r2, r8
 800b992:	189b      	adds	r3, r3, r2
 800b994:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800b998:	464b      	mov	r3, r9
 800b99a:	460a      	mov	r2, r1
 800b99c:	eb42 0303 	adc.w	r3, r2, r3
 800b9a0:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800b9a4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800b9a8:	685b      	ldr	r3, [r3, #4]
 800b9aa:	2200      	movs	r2, #0
 800b9ac:	67bb      	str	r3, [r7, #120]	; 0x78
 800b9ae:	67fa      	str	r2, [r7, #124]	; 0x7c
 800b9b0:	f04f 0200 	mov.w	r2, #0
 800b9b4:	f04f 0300 	mov.w	r3, #0
 800b9b8:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 800b9bc:	4649      	mov	r1, r9
 800b9be:	008b      	lsls	r3, r1, #2
 800b9c0:	4641      	mov	r1, r8
 800b9c2:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800b9c6:	4641      	mov	r1, r8
 800b9c8:	008a      	lsls	r2, r1, #2
 800b9ca:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800b9ce:	f7f5 f8df 	bl	8000b90 <__aeabi_uldivmod>
 800b9d2:	4602      	mov	r2, r0
 800b9d4:	460b      	mov	r3, r1
 800b9d6:	4b39      	ldr	r3, [pc, #228]	; (800babc <UART_SetConfig+0x4e4>)
 800b9d8:	fba3 1302 	umull	r1, r3, r3, r2
 800b9dc:	095b      	lsrs	r3, r3, #5
 800b9de:	2164      	movs	r1, #100	; 0x64
 800b9e0:	fb01 f303 	mul.w	r3, r1, r3
 800b9e4:	1ad3      	subs	r3, r2, r3
 800b9e6:	011b      	lsls	r3, r3, #4
 800b9e8:	3332      	adds	r3, #50	; 0x32
 800b9ea:	4a34      	ldr	r2, [pc, #208]	; (800babc <UART_SetConfig+0x4e4>)
 800b9ec:	fba2 2303 	umull	r2, r3, r2, r3
 800b9f0:	095b      	lsrs	r3, r3, #5
 800b9f2:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800b9f6:	441c      	add	r4, r3
 800b9f8:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800b9fc:	2200      	movs	r2, #0
 800b9fe:	673b      	str	r3, [r7, #112]	; 0x70
 800ba00:	677a      	str	r2, [r7, #116]	; 0x74
 800ba02:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 800ba06:	4642      	mov	r2, r8
 800ba08:	464b      	mov	r3, r9
 800ba0a:	1891      	adds	r1, r2, r2
 800ba0c:	60b9      	str	r1, [r7, #8]
 800ba0e:	415b      	adcs	r3, r3
 800ba10:	60fb      	str	r3, [r7, #12]
 800ba12:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800ba16:	4641      	mov	r1, r8
 800ba18:	1851      	adds	r1, r2, r1
 800ba1a:	6039      	str	r1, [r7, #0]
 800ba1c:	4649      	mov	r1, r9
 800ba1e:	414b      	adcs	r3, r1
 800ba20:	607b      	str	r3, [r7, #4]
 800ba22:	f04f 0200 	mov.w	r2, #0
 800ba26:	f04f 0300 	mov.w	r3, #0
 800ba2a:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800ba2e:	4659      	mov	r1, fp
 800ba30:	00cb      	lsls	r3, r1, #3
 800ba32:	4651      	mov	r1, sl
 800ba34:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800ba38:	4651      	mov	r1, sl
 800ba3a:	00ca      	lsls	r2, r1, #3
 800ba3c:	4610      	mov	r0, r2
 800ba3e:	4619      	mov	r1, r3
 800ba40:	4603      	mov	r3, r0
 800ba42:	4642      	mov	r2, r8
 800ba44:	189b      	adds	r3, r3, r2
 800ba46:	66bb      	str	r3, [r7, #104]	; 0x68
 800ba48:	464b      	mov	r3, r9
 800ba4a:	460a      	mov	r2, r1
 800ba4c:	eb42 0303 	adc.w	r3, r2, r3
 800ba50:	66fb      	str	r3, [r7, #108]	; 0x6c
 800ba52:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800ba56:	685b      	ldr	r3, [r3, #4]
 800ba58:	2200      	movs	r2, #0
 800ba5a:	663b      	str	r3, [r7, #96]	; 0x60
 800ba5c:	667a      	str	r2, [r7, #100]	; 0x64
 800ba5e:	f04f 0200 	mov.w	r2, #0
 800ba62:	f04f 0300 	mov.w	r3, #0
 800ba66:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 800ba6a:	4649      	mov	r1, r9
 800ba6c:	008b      	lsls	r3, r1, #2
 800ba6e:	4641      	mov	r1, r8
 800ba70:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800ba74:	4641      	mov	r1, r8
 800ba76:	008a      	lsls	r2, r1, #2
 800ba78:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800ba7c:	f7f5 f888 	bl	8000b90 <__aeabi_uldivmod>
 800ba80:	4602      	mov	r2, r0
 800ba82:	460b      	mov	r3, r1
 800ba84:	4b0d      	ldr	r3, [pc, #52]	; (800babc <UART_SetConfig+0x4e4>)
 800ba86:	fba3 1302 	umull	r1, r3, r3, r2
 800ba8a:	095b      	lsrs	r3, r3, #5
 800ba8c:	2164      	movs	r1, #100	; 0x64
 800ba8e:	fb01 f303 	mul.w	r3, r1, r3
 800ba92:	1ad3      	subs	r3, r2, r3
 800ba94:	011b      	lsls	r3, r3, #4
 800ba96:	3332      	adds	r3, #50	; 0x32
 800ba98:	4a08      	ldr	r2, [pc, #32]	; (800babc <UART_SetConfig+0x4e4>)
 800ba9a:	fba2 2303 	umull	r2, r3, r2, r3
 800ba9e:	095b      	lsrs	r3, r3, #5
 800baa0:	f003 020f 	and.w	r2, r3, #15
 800baa4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800baa8:	681b      	ldr	r3, [r3, #0]
 800baaa:	4422      	add	r2, r4
 800baac:	609a      	str	r2, [r3, #8]
 800baae:	bf00      	nop
 800bab0:	f507 7780 	add.w	r7, r7, #256	; 0x100
 800bab4:	46bd      	mov	sp, r7
 800bab6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800baba:	bf00      	nop
 800babc:	51eb851f 	.word	0x51eb851f

0800bac0 <__errno>:
 800bac0:	4b01      	ldr	r3, [pc, #4]	; (800bac8 <__errno+0x8>)
 800bac2:	6818      	ldr	r0, [r3, #0]
 800bac4:	4770      	bx	lr
 800bac6:	bf00      	nop
 800bac8:	2000014c 	.word	0x2000014c

0800bacc <__libc_init_array>:
 800bacc:	b570      	push	{r4, r5, r6, lr}
 800bace:	4d0d      	ldr	r5, [pc, #52]	; (800bb04 <__libc_init_array+0x38>)
 800bad0:	4c0d      	ldr	r4, [pc, #52]	; (800bb08 <__libc_init_array+0x3c>)
 800bad2:	1b64      	subs	r4, r4, r5
 800bad4:	10a4      	asrs	r4, r4, #2
 800bad6:	2600      	movs	r6, #0
 800bad8:	42a6      	cmp	r6, r4
 800bada:	d109      	bne.n	800baf0 <__libc_init_array+0x24>
 800badc:	4d0b      	ldr	r5, [pc, #44]	; (800bb0c <__libc_init_array+0x40>)
 800bade:	4c0c      	ldr	r4, [pc, #48]	; (800bb10 <__libc_init_array+0x44>)
 800bae0:	f000 f8fe 	bl	800bce0 <_init>
 800bae4:	1b64      	subs	r4, r4, r5
 800bae6:	10a4      	asrs	r4, r4, #2
 800bae8:	2600      	movs	r6, #0
 800baea:	42a6      	cmp	r6, r4
 800baec:	d105      	bne.n	800bafa <__libc_init_array+0x2e>
 800baee:	bd70      	pop	{r4, r5, r6, pc}
 800baf0:	f855 3b04 	ldr.w	r3, [r5], #4
 800baf4:	4798      	blx	r3
 800baf6:	3601      	adds	r6, #1
 800baf8:	e7ee      	b.n	800bad8 <__libc_init_array+0xc>
 800bafa:	f855 3b04 	ldr.w	r3, [r5], #4
 800bafe:	4798      	blx	r3
 800bb00:	3601      	adds	r6, #1
 800bb02:	e7f2      	b.n	800baea <__libc_init_array+0x1e>
 800bb04:	0800bd20 	.word	0x0800bd20
 800bb08:	0800bd20 	.word	0x0800bd20
 800bb0c:	0800bd20 	.word	0x0800bd20
 800bb10:	0800bd24 	.word	0x0800bd24

0800bb14 <memset>:
 800bb14:	4402      	add	r2, r0
 800bb16:	4603      	mov	r3, r0
 800bb18:	4293      	cmp	r3, r2
 800bb1a:	d100      	bne.n	800bb1e <memset+0xa>
 800bb1c:	4770      	bx	lr
 800bb1e:	f803 1b01 	strb.w	r1, [r3], #1
 800bb22:	e7f9      	b.n	800bb18 <memset+0x4>

0800bb24 <sqrt>:
 800bb24:	b538      	push	{r3, r4, r5, lr}
 800bb26:	ed2d 8b02 	vpush	{d8}
 800bb2a:	ec55 4b10 	vmov	r4, r5, d0
 800bb2e:	f000 f825 	bl	800bb7c <__ieee754_sqrt>
 800bb32:	4622      	mov	r2, r4
 800bb34:	462b      	mov	r3, r5
 800bb36:	4620      	mov	r0, r4
 800bb38:	4629      	mov	r1, r5
 800bb3a:	eeb0 8a40 	vmov.f32	s16, s0
 800bb3e:	eef0 8a60 	vmov.f32	s17, s1
 800bb42:	f7f4 ff9f 	bl	8000a84 <__aeabi_dcmpun>
 800bb46:	b990      	cbnz	r0, 800bb6e <sqrt+0x4a>
 800bb48:	2200      	movs	r2, #0
 800bb4a:	2300      	movs	r3, #0
 800bb4c:	4620      	mov	r0, r4
 800bb4e:	4629      	mov	r1, r5
 800bb50:	f7f4 ff70 	bl	8000a34 <__aeabi_dcmplt>
 800bb54:	b158      	cbz	r0, 800bb6e <sqrt+0x4a>
 800bb56:	f7ff ffb3 	bl	800bac0 <__errno>
 800bb5a:	2321      	movs	r3, #33	; 0x21
 800bb5c:	6003      	str	r3, [r0, #0]
 800bb5e:	2200      	movs	r2, #0
 800bb60:	2300      	movs	r3, #0
 800bb62:	4610      	mov	r0, r2
 800bb64:	4619      	mov	r1, r3
 800bb66:	f7f4 fe1d 	bl	80007a4 <__aeabi_ddiv>
 800bb6a:	ec41 0b18 	vmov	d8, r0, r1
 800bb6e:	eeb0 0a48 	vmov.f32	s0, s16
 800bb72:	eef0 0a68 	vmov.f32	s1, s17
 800bb76:	ecbd 8b02 	vpop	{d8}
 800bb7a:	bd38      	pop	{r3, r4, r5, pc}

0800bb7c <__ieee754_sqrt>:
 800bb7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb80:	ec55 4b10 	vmov	r4, r5, d0
 800bb84:	4e55      	ldr	r6, [pc, #340]	; (800bcdc <__ieee754_sqrt+0x160>)
 800bb86:	43ae      	bics	r6, r5
 800bb88:	ee10 0a10 	vmov	r0, s0
 800bb8c:	ee10 3a10 	vmov	r3, s0
 800bb90:	462a      	mov	r2, r5
 800bb92:	4629      	mov	r1, r5
 800bb94:	d110      	bne.n	800bbb8 <__ieee754_sqrt+0x3c>
 800bb96:	ee10 2a10 	vmov	r2, s0
 800bb9a:	462b      	mov	r3, r5
 800bb9c:	f7f4 fcd8 	bl	8000550 <__aeabi_dmul>
 800bba0:	4602      	mov	r2, r0
 800bba2:	460b      	mov	r3, r1
 800bba4:	4620      	mov	r0, r4
 800bba6:	4629      	mov	r1, r5
 800bba8:	f7f4 fb1c 	bl	80001e4 <__adddf3>
 800bbac:	4604      	mov	r4, r0
 800bbae:	460d      	mov	r5, r1
 800bbb0:	ec45 4b10 	vmov	d0, r4, r5
 800bbb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bbb8:	2d00      	cmp	r5, #0
 800bbba:	dc10      	bgt.n	800bbde <__ieee754_sqrt+0x62>
 800bbbc:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800bbc0:	4330      	orrs	r0, r6
 800bbc2:	d0f5      	beq.n	800bbb0 <__ieee754_sqrt+0x34>
 800bbc4:	b15d      	cbz	r5, 800bbde <__ieee754_sqrt+0x62>
 800bbc6:	ee10 2a10 	vmov	r2, s0
 800bbca:	462b      	mov	r3, r5
 800bbcc:	ee10 0a10 	vmov	r0, s0
 800bbd0:	f7f4 fb06 	bl	80001e0 <__aeabi_dsub>
 800bbd4:	4602      	mov	r2, r0
 800bbd6:	460b      	mov	r3, r1
 800bbd8:	f7f4 fde4 	bl	80007a4 <__aeabi_ddiv>
 800bbdc:	e7e6      	b.n	800bbac <__ieee754_sqrt+0x30>
 800bbde:	1512      	asrs	r2, r2, #20
 800bbe0:	d074      	beq.n	800bccc <__ieee754_sqrt+0x150>
 800bbe2:	07d4      	lsls	r4, r2, #31
 800bbe4:	f3c1 0113 	ubfx	r1, r1, #0, #20
 800bbe8:	f2a2 37ff 	subw	r7, r2, #1023	; 0x3ff
 800bbec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800bbf0:	bf5e      	ittt	pl
 800bbf2:	0fda      	lsrpl	r2, r3, #31
 800bbf4:	005b      	lslpl	r3, r3, #1
 800bbf6:	eb02 0141 	addpl.w	r1, r2, r1, lsl #1
 800bbfa:	2400      	movs	r4, #0
 800bbfc:	0fda      	lsrs	r2, r3, #31
 800bbfe:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 800bc02:	107f      	asrs	r7, r7, #1
 800bc04:	005b      	lsls	r3, r3, #1
 800bc06:	2516      	movs	r5, #22
 800bc08:	4620      	mov	r0, r4
 800bc0a:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 800bc0e:	1886      	adds	r6, r0, r2
 800bc10:	428e      	cmp	r6, r1
 800bc12:	bfde      	ittt	le
 800bc14:	1b89      	suble	r1, r1, r6
 800bc16:	18b0      	addle	r0, r6, r2
 800bc18:	18a4      	addle	r4, r4, r2
 800bc1a:	0049      	lsls	r1, r1, #1
 800bc1c:	3d01      	subs	r5, #1
 800bc1e:	eb01 71d3 	add.w	r1, r1, r3, lsr #31
 800bc22:	ea4f 0252 	mov.w	r2, r2, lsr #1
 800bc26:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800bc2a:	d1f0      	bne.n	800bc0e <__ieee754_sqrt+0x92>
 800bc2c:	462a      	mov	r2, r5
 800bc2e:	f04f 0e20 	mov.w	lr, #32
 800bc32:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 800bc36:	4281      	cmp	r1, r0
 800bc38:	eb06 0c05 	add.w	ip, r6, r5
 800bc3c:	dc02      	bgt.n	800bc44 <__ieee754_sqrt+0xc8>
 800bc3e:	d113      	bne.n	800bc68 <__ieee754_sqrt+0xec>
 800bc40:	459c      	cmp	ip, r3
 800bc42:	d811      	bhi.n	800bc68 <__ieee754_sqrt+0xec>
 800bc44:	f1bc 0f00 	cmp.w	ip, #0
 800bc48:	eb0c 0506 	add.w	r5, ip, r6
 800bc4c:	da43      	bge.n	800bcd6 <__ieee754_sqrt+0x15a>
 800bc4e:	2d00      	cmp	r5, #0
 800bc50:	db41      	blt.n	800bcd6 <__ieee754_sqrt+0x15a>
 800bc52:	f100 0801 	add.w	r8, r0, #1
 800bc56:	1a09      	subs	r1, r1, r0
 800bc58:	459c      	cmp	ip, r3
 800bc5a:	bf88      	it	hi
 800bc5c:	f101 31ff 	addhi.w	r1, r1, #4294967295
 800bc60:	eba3 030c 	sub.w	r3, r3, ip
 800bc64:	4432      	add	r2, r6
 800bc66:	4640      	mov	r0, r8
 800bc68:	ea4f 7cd3 	mov.w	ip, r3, lsr #31
 800bc6c:	f1be 0e01 	subs.w	lr, lr, #1
 800bc70:	eb0c 0141 	add.w	r1, ip, r1, lsl #1
 800bc74:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800bc78:	ea4f 0656 	mov.w	r6, r6, lsr #1
 800bc7c:	d1db      	bne.n	800bc36 <__ieee754_sqrt+0xba>
 800bc7e:	430b      	orrs	r3, r1
 800bc80:	d006      	beq.n	800bc90 <__ieee754_sqrt+0x114>
 800bc82:	1c50      	adds	r0, r2, #1
 800bc84:	bf13      	iteet	ne
 800bc86:	3201      	addne	r2, #1
 800bc88:	3401      	addeq	r4, #1
 800bc8a:	4672      	moveq	r2, lr
 800bc8c:	f022 0201 	bicne.w	r2, r2, #1
 800bc90:	1063      	asrs	r3, r4, #1
 800bc92:	0852      	lsrs	r2, r2, #1
 800bc94:	07e1      	lsls	r1, r4, #31
 800bc96:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
 800bc9a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
 800bc9e:	bf48      	it	mi
 800bca0:	f042 4200 	orrmi.w	r2, r2, #2147483648	; 0x80000000
 800bca4:	eb03 5507 	add.w	r5, r3, r7, lsl #20
 800bca8:	4614      	mov	r4, r2
 800bcaa:	e781      	b.n	800bbb0 <__ieee754_sqrt+0x34>
 800bcac:	0ad9      	lsrs	r1, r3, #11
 800bcae:	3815      	subs	r0, #21
 800bcb0:	055b      	lsls	r3, r3, #21
 800bcb2:	2900      	cmp	r1, #0
 800bcb4:	d0fa      	beq.n	800bcac <__ieee754_sqrt+0x130>
 800bcb6:	02cd      	lsls	r5, r1, #11
 800bcb8:	d50a      	bpl.n	800bcd0 <__ieee754_sqrt+0x154>
 800bcba:	f1c2 0420 	rsb	r4, r2, #32
 800bcbe:	fa23 f404 	lsr.w	r4, r3, r4
 800bcc2:	1e55      	subs	r5, r2, #1
 800bcc4:	4093      	lsls	r3, r2
 800bcc6:	4321      	orrs	r1, r4
 800bcc8:	1b42      	subs	r2, r0, r5
 800bcca:	e78a      	b.n	800bbe2 <__ieee754_sqrt+0x66>
 800bccc:	4610      	mov	r0, r2
 800bcce:	e7f0      	b.n	800bcb2 <__ieee754_sqrt+0x136>
 800bcd0:	0049      	lsls	r1, r1, #1
 800bcd2:	3201      	adds	r2, #1
 800bcd4:	e7ef      	b.n	800bcb6 <__ieee754_sqrt+0x13a>
 800bcd6:	4680      	mov	r8, r0
 800bcd8:	e7bd      	b.n	800bc56 <__ieee754_sqrt+0xda>
 800bcda:	bf00      	nop
 800bcdc:	7ff00000 	.word	0x7ff00000

0800bce0 <_init>:
 800bce0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bce2:	bf00      	nop
 800bce4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800bce6:	bc08      	pop	{r3}
 800bce8:	469e      	mov	lr, r3
 800bcea:	4770      	bx	lr

0800bcec <_fini>:
 800bcec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bcee:	bf00      	nop
 800bcf0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800bcf2:	bc08      	pop	{r3}
 800bcf4:	469e      	mov	lr, r3
 800bcf6:	4770      	bx	lr
